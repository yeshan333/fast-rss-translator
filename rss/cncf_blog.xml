<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://rsshub.rssforever.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【Welcoming new members to our Technical Advisory Board】欢迎新成员加入我们的技术顾问委员会</title>
      <link>https://www.cncf.io/blog/2025/04/10/welcoming-new-members-to-our-technical-advisory-board/</link>
      <description>【&lt;p&gt;We are thrilled to announce the addition of three esteemed industry leaders to our Technical Advisory Board (TAB): Ahmed Bebars from The New York Times, Ben Somogyi from Lockheed Martin, and Kenta Tada from Toyota. Their extensive experience and deep understanding of cloud-native technologies will undoubtedly be invaluable as we continue to advance our cloud-native platform.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/people/end-user-technical-advisory-board/?p=ahmed-bebars&#34;&gt;&lt;strong&gt;Ahmed Bebars&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;:&lt;/strong&gt; With a proven track record in architecting and building an internal developer platform at The New York Times, Ahmed brings a unique perspective on multi-tenant Kubernetes, platform engineering, and automating developer workflows at scale. His involvement in organizing Kubernetes Community Days, speaking at industry conferences like KubeCon, AWS re:Invent, and KubeCrash, and contributing to cloud-native initiatives highlights his commitment to shaping the future of cloud computing.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/people/end-user-technical-advisory-board/?p=ben-somogyi-2&#34;&gt;&lt;strong&gt;Ben Somogyi&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;:&lt;/strong&gt; Ben’s expertise in DevSecOps and Kubernetes platform development at Lockheed Martin has been pivotal in successfully building and managing complex platforms that support mission-critical applications in highly regulated environments. Through his contributions to cloud-native products and his engagement with the open-source community, including participation in conferences, Ben has been able to share his expertise and provide actionable insights on how to overcome common challenges and optimize the use of these products. His dedication to advancing the cloud-native ecosystem and promoting a collaborative approach to innovation has not only driven progress within the industry but also reflects his commitment to advancing the cloud-native ecosystem for the benefit of all stakeholders.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/people/end-user-technical-advisory-board/?p=kenta-tada&#34;&gt;&lt;strong&gt;Kenta Tada&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;:&lt;/strong&gt; Kenta Tada’s deep knowledge of Linux kernel tracing and eBPF within Japan’s local OSS communities provides valuable insights into observability, performance tuning, and security challenges in cloud-native environments. As an organizer of the eBPF Japan Community and Cloud Native Community Japan, his active involvement underscores his passion for driving innovation in cloud-native computing.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The combined expertise of these new TAB members will provide strategic guidance and support as we continue to evolve our cloud-native platform. We are excited to collaborate with them and leverage their insights to shape the future of cloud computing. Please join us in extending a warm welcome to Ahmed, Ben, and Kenta Tada!&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;我们很高兴地宣布，在我们的技术顾问委员会（TAB）中宣布，来自《纽约时报》的艾哈迈德·贝巴尔斯，洛克希德·马丁的本·索莫吉和来自丰田的肯塔·塔达。随着我们继续推进云本地平台，他们的丰富经验和对云本地技术的深刻理解无疑是无价的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://www.cncf.io/people/end-user-technical-advisory-aboret/?p=ahmed-bebars&#39;&gt; &lt;strong&gt; ahmed bebars &lt;/ahmed bebars &lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt;多租户Kubernetes，平台工程和自动化开发人员的工作流程。他参与组织Kubernetes社区日，在Kubecon，Aws Re：Invent和Kubecrash等行业会议上发表讲话，并为云本地举措做出贡献，突显了他致力于塑造云计算的未来的承诺。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://www.cncf.io/people/end-user-technical-advisory-aboret/?p=ben-somogy-2”&gt; &lt;strong&gt; ben somogyi &lt;/stomyogyi &lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt;并管理支持高度监管环境中关键任务应用程序的复杂平台。通过他对云原生产品的贡献以及与开源社区的互动，包括参与会议，Ben能够分享他的专业知识，并就如何克服共同挑战并优化这些产品的使用提供了可行的见解。他致力于推进云本地生态系统并促进创新的协作方法不仅驱动了行业内的进步，而且还反映了他致力于推进云本地生态系统的承诺，以使所有利益相关者受益。&lt;/li&gt; &lt;/li&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://www.cncf.io/people/end-user-technical-advisory-aboret/?p=kenta-tada”&gt; &lt;strong&gt; &lt;strong&gt; &lt;strong&gt; kenta tada &lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt;进入云本地环境中的可观察性，性能调整和安全挑战。作为日本EBPF社区和云土著社区日本的组织者，他的积极参与强调了他对在云原生计算中推动创新的热情。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着我们继续发展云本地平台，这些新标签成员的综合专业知识将提供战略指导和支持。我们很高兴与他们合作并利用他们的见解来塑造云计算的未来。请加入我们，向艾哈迈德（Ahmed），本（Ben）和肯塔·塔达（Kenta Tada）表示热烈欢迎！&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style =“高度：80px“ aria-hidded =“ true” class =“ wp-block-pacer is style-80-120”&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 09 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kagent: Bringing Agentic AI to Cloud Native】Kagent：将代理AI带到云原生</title>
      <link>https://www.cncf.io/blog/2025/04/15/kagent-bringing-agentic-ai-to-cloud-native/</link>
      <description>【&lt;p&gt;&lt;em&gt;Solving Cloud Native Operation Challenges with AI Agents&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Oh no! Your application is unreachable, buried under multiple connection hops—how do you pinpoint the broken link? How do you generate an alert or bug report from Prometheus when certain conditions are met? You need to roll out a new version of your application—how do you execute a progressive rollout using Argo Rollouts? How do you safely enable zero trust network security when your application scales beyond a single cluster or cloud? With so many projects in the cloud native ecosystem, how do you figure out which ones are right for your needs and layer them together with proper configuration management?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sound familiar? As a leader in cloud networking, security, and reliability, we hear these questions all the time from platform and DevOps engineers working with CNCF projects like Kubernetes, Envoy, Istio, Prometheus, and Argo. Our customer-facing engineers often resolve these issues independently, but sometimes we need to pull in other internal experts or specialists.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we continue to scale out and support many more customers, we asked ourselves: how can we leverage our in-house expertise more efficiently? Could we clone our top experts to assist with these issues? This led to a &lt;strong&gt;lightbulb&lt;/strong&gt; moment—why not build &lt;strong&gt;AI agents&lt;/strong&gt; to tackle common challenges and support our engineers and customers? Why not create a catalog of AI agents for the cloud native ecosystem, enabling everyone to run, build, and share AI-driven solutions?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;What is kagent?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You’ve probably interacted with ChatGPT, an AI chatbot that provides natural language responses. &lt;strong&gt;Agentic AI&lt;/strong&gt;, however, goes beyond simple chat interactions—it uses advanced reasoning and iterative planning to autonomously solve complex, non-deterministic multi-step problems, turning insights into actions that enhance productivity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;What if we applied agentic AI to the day-to-day operational challenges faced by cloud native engineers? That’s where &lt;strong&gt;kagent&lt;/strong&gt; comes in.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kagent is an &lt;strong&gt;open source programming framework&lt;/strong&gt; designed for DevOps and platform engineers to run AI agents in Kubernetes. It helps engineers build powerful internal platforms by tackling cloud native tasks such as configuration, troubleshooting, complex deployment scenarios, observability pipelines and dashboards, and safely enabling network security (like mTLS, authentication/authorization changes, etc). Recognizing that different users have different challenges, we designed kagent to be extensible—allowing DevOps engineers, platform teams, and tool developers to create and share their own AI agents.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Built on Microsoft’s &lt;a href=&#34;https://www.microsoft.com/en-us/research/project/autogen/&#34;&gt;AutoGen&lt;/a&gt; open source framework, kagent provides a powerful foundation for AI-driven solutions in cloud native environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Architecture of kagent&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kagent is built on three key layers: &lt;strong&gt;Tools, Agents, and the Framework&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXciHjrqfKyOvQXgWZnchq4-ux1rH-NxCldtxncnRCMTO--tdZOgejIFi25tvgbvbp9mIORUSZfse6jqzv4uDLfBBRPOPTVUZ1sYmQETOYmtE0Ccs23-u5NZUtCB46y9UDagDeOWjA?key=vrB2mvSltTwhi2yrFk1pKy8A&#34; alt=&#34;Three layers: tools, agents, framework&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Pre-defined functions that AI agents can use, such as sending emails, searching a database, displaying pod logs, or calling external APIs. Users can integrate Model Context Protocol (&lt;a href=&#34;https://modelcontextprotocol.io/introduction&#34;&gt;MCP&lt;/a&gt;) servers as tools or build custom tools.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Agents&lt;/strong&gt;: Autonomous systems capable of planning, executing tasks, analyzing results, and continuously improving outcomes. Agents utilize one or more tools to accomplish objectives.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Framework&lt;/strong&gt;: A simple interface to run agents via UI or declaratively. The framework is fully extensible, allowing users to develop new tools or agents, or extend the framework itself.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Based on our experience, we’ve built tools to interact with &lt;strong&gt;Kubernetes&lt;/strong&gt;, &lt;strong&gt;Prometheus&lt;/strong&gt;, &lt;strong&gt;Istio&lt;/strong&gt;, and &lt;strong&gt;Argo&lt;/strong&gt;, along with AI agents to autonomously solve some of the most common cloud native problems.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Join the kagent Community&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’re a &lt;strong&gt;platform or DevOps engineer&lt;/strong&gt;, and leveraging AI agents to solve cloud native operation challenges excites you, or if you’re a &lt;strong&gt;developer or CNCF project maintainer&lt;/strong&gt; interested in building AI agents to enrich our ecosystem, we’d love to collaborate!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://kagent.io/&#34;&gt;website&lt;/a&gt; and &lt;a href=&#34;https://github.com/kagent-dev/kagent/&#34;&gt;GitHub&lt;strong&gt; &lt;/strong&gt;repository&lt;/a&gt;. Follow our getting started guide to experiment with AI agents in your Kubernetes cluster, and contribute your own agents and tools to extend the cloud native AI ecosystem. Join the discussion in the #kagent channel on &lt;a href=&#34;https://communityinviter.com/apps/cloud-native/cncf&#34;&gt;CNCF Slack&lt;/a&gt;—we’d love to hear from you!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s build the future of AI agents to solve cloud native operation challenges, together.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; &lt;em&gt;用AI代理解决云原生操作挑战&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;哦，不！您的应用程序无法到达，被埋葬在多个连接啤酒花下 - 您如何查明断开的链接？满足某些条件时，如何从普罗米修斯产生警报或错误报告？您需要推出应用程序的新版本 - 您如何使用Argo推出执行渐进的推出？当您的应用程序扩展到一个群集或云时，如何安全地启用零信任网络安全性？在云本机生态系统中有如此多的项目，您如何确定哪些项目适合您的需求并与适当的配置管理一起分层？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;听起来很熟悉吗？作为云网络，安全性和可靠性的领导者，我们一直都从平台和DevOps工程师那里听到这些问题，以及与Kubernetes，Envoy，Istio，Prometheus和Argo等CNCF项目合作的工作。面向客户的工程师经常独立解决这些问题，但有时我们需要吸引其他内部专家或专家。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着我们继续扩展并支持更多客户，我们问自己：我们如何更有效地利用我们的内部专业知识？我们可以克隆我们的顶级专家来协助这些问题吗？这导致了&lt;strong&gt; Lightbulb &lt;/strong&gt;时刻 - 为什么不建立&lt;strong&gt; AI代理&lt;/strong&gt;来应对共同的挑战并支持我们的工程师和客户？为什么不为Cloud Native生态系统创建AI代理的目录，使每个人都可以运行，构建和共享AI驱动的解决方案？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;什么是kagent？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可能已经与Chatgpt进行了互动，Chatgpt是一个提供自然语言响应的AI聊天机器人。但是，&lt;strong&gt;代理AI &lt;/strong&gt;超越了简单的聊天互动 - 它使用先进的推理和迭代计划来自主解决复杂的，非确定性的多步骤问题，将见解转化为提高生产力的行动。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果我们将代理AI应用于云土著工程师面临的日常运营挑战怎么办？那就是&lt;strong&gt; kagent &lt;/strong&gt;进来的地方。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kagent是&lt;strong&gt;开源编程框架&lt;/strong&gt;为DevOps和平台工程师设计的，以在Kubernetes运行AI代理。它通过解决云本机任务（例如配置，故障排除，复杂的部署方案，可观察性管道和仪表板）来帮助工程师构建强大的内部平台，并安全地启用网络安全性（例如MTL，身份验证/授权更改等）。认识到不同用户面临不同的挑战，我们设计了Kagent可以扩展的 - 允许DevOps工程师，平台团队和工具开发人员创建和共享自己的AI代理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;建立在Microsoft的&lt;a href =“ https://www.microsoft.com/en-us/research/project/project/autogen/”&gt; autogen &lt;/a&gt;开源框架中，Kagent为AI驱动的解决方案提供了强大的基础In云本机环境。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; kagent的体系结构&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kagent建立在三个关键层上：&lt;strong&gt;工具，代理和框架&lt;/strong&gt;。&lt;/p&gt;。&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxcihjrqfkyovqxgxgwznchq4-ux1rh-nxcldtxncncnrcmto-tdzogejifi2 5TVGBVBP9MioruszfSe6JQZV4UDLFBBRPOPTVUZ1SYMQETOYMTE0CCS23-U5NZUTCB46Y9UDAGDEOWJA？ alt =“三层：工具，代理，框架” reverrerpolicy =“ no-referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;工具&lt;/strong&gt;：AI代理可以使用的预定义功能，例如发送电子邮件，搜索数据库，显示POD日志或调用外部API。用户可以集成模型上下文协议（&lt;a href =“ https://modelcontextprotocol.io/introduction”&gt; mcp &lt;/a&gt;）服务器作为工具或构建自定义工具。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;代理&lt;/strong&gt;：能够计划，执行任务，分析结果并不断改善结果的自主系统。代理使用一种或多种工具来实现目标。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;框架&lt;/strong&gt;：一个简单的接口通过UI或声明性地运行代理。该框架是完全可扩展的，允许用户开发新的工具或代理，或扩展框架本身。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;根据我们的经验，我们建立了与&lt;strong&gt; kubernetes &lt;/strong&gt;，&lt;strong&gt; prometheus &lt;/strong&gt;，&lt;strong&gt; istio &lt;/strong&gt;和&lt;strong&gt; argo &lt;/strong&gt;的工具，以及AI代理，以自动解决一些最常见的云本土问题。&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;加入Kagent社区&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您是&lt;strong&gt;平台或DevOps Engineer &lt;/strong&gt;，并且利用AI代理来解决云的本地操作会挑战您，或者如果您是&lt;strong&gt;开发人员或CNCF项目维护者&lt;/strong&gt;感兴趣的人&lt;/strong&gt;有兴趣建立AI代理以丰富我们的生态系统，那么我们喜欢协作！&#xA;&#xA;&#xA;&#xA;&lt;p&gt;查看我们的&lt;a href =“ https://kagent.io/”&gt;网站&lt;/a&gt;和&lt;a href =“ https://github.com/kagent-dev/kagent/kagent/”&gt; github &lt;strong&gt; &lt;strong&gt; &lt;/strong&gt; &lt;/strong&gt; reposority &lt;/a&gt;。请遵循我们的入门指南，与您的Kubernetes集群中的AI代理进行实验，并为您自己的代理和工具贡献扩展云本机AI生态系统。在&lt;a a href =“ https://communityinviter.com/apps/cloud-native/cncf”上加入#kagent频道中的讨论。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们建立AI代理的未来，以解决云的本地操作挑战。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 14 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Five critical shifts for Cloud Native at a Crossroads】在十字路口的云原生的五个关键转变</title>
      <link>https://www.cncf.io/blog/2025/04/14/five-critical-shifts-for-cloud-native-at-a-crossroads/</link>
      <description>【&lt;p&gt;As enterprises run ever-more-complex workloads on Kubernetes, they’re facing a new set of challenges: how to ensure security requirements are met, budgets are deployed efficiently and operational complexity is, well, not as complex. Many are finding that the full potential of their cloud native investments now requires fundamental changes to the way they approach infrastructure, starting with the operating system itself.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With technical leaders evaluating cloud native strategies for the next era, I see five interconnected forces reshaping what’s possible for how cloud native infrastructure is built, secured and operated.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Purpose-Built Operating Systems as a More Secure Foundation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;General-purpose operating systems can become a Kubernetes bottleneck at scale. Traditional OS environments are designed for a wide range of use cases, carry unnecessary overhead and bring security risks when running cloud native workloads. Enterprises are increasingly instead turning to specialized operating systems that are purpose-built for Kubernetes environments, finding that this shift has advantages across security, reliability and operational efficiency.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The security implications are particularly compelling. While traditional operating systems leave many potential entry points exposed, specialized cloud native operating systems take a radically different approach. By designing the OS specifically for container workloads, organizations can dramatically reduce their attack surface with security controls that align precisely with Kubernetes security best practices.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;More granularly, these specialized systems include built-in automated network-level encryption, using technologies like &lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard&lt;/a&gt; and &lt;a href=&#34;https://www.talos.dev/v1.9/talos-guides/network/kubespan/&#34;&gt;KubeSpan&lt;/a&gt; to secure cluster communications with lean, efficient cryptography. API-based management replaces traditional interfaces like Bash and SSH, enforcing consistency with Kubernetes’ declarative model while eliminating many of the common sources of human error. Communications between components are secured through Mutual TLS (mTLS) encryption, ensuring that only properly authenticated services can interact within the cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For those ready to modernize their cloud native infrastructure, the criteria for selecting these specialized operating systems should include alignment with &lt;a href=&#34;https://www.cisecurity.org/cis-benchmarks&#34;&gt;CIS Benchmarks&lt;/a&gt; for container security and, for Linux distributions, adherence to &lt;a href=&#34;https://kspp.github.io/&#34;&gt;Kernel Self-Protection Project&lt;/a&gt; (KSPP) guidelines. These standards ensure that security is engineered into the foundation of the operating system, rather than added as an afterthought.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Moving Kubernetes Beyond Public Cloud Dependencies&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cost-conscious organizations — is there another kind? — are discovering that running Kubernetes workloads solely in public clouds isn’t always the best approach. Momentum has continued to grow toward pursuing hybrid and on-premises strategies for greater control over both costs and capabilities. This shift isn’t just about cost savings, it’s about building infrastructure precisely tailored to specific workload requirements, whether that’s ultra-low latency for real-time applications or specialized configurations for AI/machine learning&amp;nbsp; workloads.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The key to making this transition successful lies in the infrastructure stack. Organizations are selecting operating systems and tools specifically designed for bare metal Kubernetes deployments, enabling them to achieve cloud-like flexibility without the traditional overhead of public cloud environments. These purpose-built platforms improve operational efficiency while maintaining the portability that cloud native architectures promise. The result is true infrastructure flexibility: Workloads can move seamlessly between on-premises, edge and cloud environments as business needs dictate, avoiding vendor lock-in while optimizing for specific performance and cost requirements.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Declarative Principles as the New Infrastructure Standard&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes introduced enterprises to the power of declarative configurations. Now that approach is expanding beyond container orchestration to reshape the entire infrastructure stack. Forward-thinking organizations are applying declarative principles to operating systems, networking and security, creating truly cloud native environments where infrastructure itself is treated as code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Shifting toward declarative operations goes beyond technical elegance. The strategy yields tangible business benefits by reducing operational complexity and human error. When infrastructure components follow the same declarative model as Kubernetes, teams can manage complex environments more consistently and reliably. Organizations are finding that adopting lightweight, purpose-built operating systems designed for declarative management amplifies these benefits, further simplifying operations while improving security and performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The result is a more cohesive cloud native stack where every layer — from the operating system to application deployment — follows consistent principles of Infrastructure as Code (IaC). This approach is freeing technical teams from routine maintenance tasks, allowing them to focus on innovations that drive business value.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Cloud Native Architecture as a Sustainability Driver&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Compute infrastructure’s environmental impact has become impossible to ignore, particularly as organizations scale their cloud native workloads and AI initiatives. In response, teams are discovering that the principles that make cloud native architectures efficient (namely, minimalism, automation and precise resource allocation) also make them more environmentally sustainable.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I’ve seen more organizations setting aggressive efficiency targets for their Kubernetes environments, recognizing that optimized infrastructure delivers both environmental and economic benefits. This optimization starts at the OS level, where purpose-built, lightweight distributions can significantly reduce resource consumption compared to general-purpose alternatives. When combined with intelligent workload scheduling and automated scaling, these optimized environments can then improve infrastructure utilization while reducing energy consumption.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The sustainability benefits of this approach extend beyond energy efficiency. Streamlined, container-optimized operating systems require fewer compute resources to operate, enabling organizations to run more workloads on existing hardware. This not only reduces operational costs but also minimizes the environmental impact of hardware procurement and disposal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The Edge as the Next Evolution&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The divide between cloud and edge computing is rapidly dissolving as organizations push Kubernetes deployments closer to where data is generated and consumed. This shift is more than reducing latency; it’s about applying cloud native principles to solve complex distributed computing challenges. Organizations are now deploying Kubernetes at the edge (even in single-node clusters) to bring consistency and simplified operations to their most remote infrastructure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But success at the edge demands infrastructure designed for distributed operations. The same principles I’ve discussed — specialized operating systems, declarative management and resource efficiency — become even more critical in edge environments where physical access is limited and reliability is paramount. Teams are finding that lightweight, security-focused operating systems designed for Kubernetes workloads are particularly well-suited for edge deployments, offering automated updates, minimal attack surfaces and efficient resource utilization.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This convergence of edge and cloud native technologies marks a significant evolution in enterprise infrastructure. By extending Kubernetes-based operations to the edge, organizations can maintain consistent practices across their entire infrastructure footprint while optimizing for local computing needs&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Building Tomorrow’s Cloud Native Infrastructure Requires Action Today&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These five trends signal a fundamental shift in the way enterprises approach cloud native infrastructure. The time to act is now. Organizations that move decisively to modernize their infrastructure stack will be better positioned to scale their cloud native operations while maintaining security, controlling costs, and driving innovation.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;企业在Kubernetes上运行越来越多的复杂工作负载，他们面临着一系列新的挑战：如何确保安全要求，预算有效地部署了预算，并且运营复杂性是不那么复杂的。许多人发现，他们的云土著投资的全部潜力现在需要对他们接近基础架构的方式进行根本性的改变，从操作系统本身开始。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着技术领导者评估下一个时代的云原生策略，我看到五个相互联系的力量重塑了如何建立，安全和操作云的本地基础架构的可能性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-neading”&gt;专用操作系统作为更安全的基础&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通用操作系统可以大规模成为Kubernetes瓶颈。传统的操作系统环境专为广泛的用例而设计，携带不必要的开销，并在运行云本机工作负载时带来安全风险。企业越来越多地转向针对Kubernetes环境专门构建的专门操作系统，发现这种转变具有跨安全性，可靠性和运营效率的优势。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安全含义特别令人信服。尽管传统的操作系统留下了许多潜在的入口点，但专门的云本机操作系统采用了完全不同的方法。通过专门针对容器工作负载设计操作系统，组织可以通过与Kubernetes安全性最佳实践相吻合的安全控件大大减少其攻击表面。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;更详尽地，这些专业系统包括内置自动化网络级加密，使用&lt;a href =“ https://www.wireguard.com/”等技术href =“ https://www.talos.dev/v1.9/talos-guides/network/kubespan/”&gt; kubespan &lt;/a&gt; &lt;/a&gt;用精益，高效的密码学确保群集通信。基于API的管理层取代了Bash和SSH等传统接口，从而与Kubernetes的声明模型执行一致性，同时消除了许多常见的人类错误来源。组件之间的通信通过相互TLS（MTL）加密确保，以确保只有正确身份验证的服务才能在集群中进行交互。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于那些准备现代化其云本地基础架构的人，选择这些专业操作系统的标准应包括与&lt;a href =“ https:///www.cisecurity.org/cis-benchmarkss”&gt; CIS-CIS基准标准&lt;/a&gt;容器安全性和，用于Linux Security，Ade，AD &lt;/a&gt; &lt;/a&gt; href =“ https://kspp.github.io/”&gt;内核自我保护项目&lt;/a&gt;（KSPP）指南。这些标准确保安全系统设计为操作系统的基础，而不是作为事后的想法添加。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;将kubernetes移至公共云依赖性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;具有成本意识的组织 - 是又是另一种？ - 发现仅在公共云中运行Kubernetes工作量并不总是最好的方法。动力一直在努力追求混合和本地策略，以更大的控制成本和能力。这种转变不仅仅是节省成本，还涉及构建基础架构精确地针对特定的工作负载要求量身定制，无论是实时应用程序的超低延迟还是用于AI/机器学习工作负载的专门配置。&lt;/p&gt;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;成功过渡的关键在于基础架构堆栈。组织正在选择专门为裸机Kubernetes部署而设计的操作系统和工具，从而使其能够实现云状的灵活性，而无需传统的公共云环境开销。这些专用的平台提高了运营效率，同时保持了云原始体系结构承诺的可移植性。结果是真正的基础架构灵活性：由于业务需求的要求，工作量可以在本地，边缘和云环境之间无缝移动，避免供应商锁定，同时优化特定的性能和成本要求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ WP-block-heading”&gt;声明性原则作为新的基础设施标准&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubernetes将企业引入了声明性配置的力量。现在，该方法正在扩展超越容器编排，以重塑整个基础设施堆栈。具有前瞻性的组织将声明性原则应用于操作系统，网络和安全性，创建真正的云本机环境，其中基础架构本身被视为代码。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;转向声明性的行动超越了技术优雅。该策略通过降低操作的复杂性和人为错误来产生切实的业务利益。当基础架构组件与Kubernetes遵循相同的声明性模型时，团队可以更加一致，可靠地管理复杂的环境。组织发现，采用专为宣言管理设计的轻巧，专门制造的操作系统放大了这些好处，进一步简化了操作，同时改善了安全性和绩效。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;结果是一个更具凝聚力的云本机堆栈，从操作系统到应用程序部署的每一层都遵循基础结构作为代码（IAC）的一致原理。这种方法是使技术团队摆脱常规维护任务，使他们可以专注于推动业务价值的创新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-neading”&gt;云本机架构作为可持续性驱动程序&#xA;&#xA;&#xA;&#xA;&lt;p&gt;计算基础架构的环境影响已经变得无法忽视，尤其是当组织扩大其云本地工作负载和AI计划时。作为回应，团队发现使云原始体系结构有效的原则（即极简主义，自动杂货和精确资源分配）也使它们在环境上更可持续。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我已经看到更多的组织为其Kubernetes环境设定了积极的效率目标，因此认识到优化的基础设施可带来环境和经济利益。这种优化始于OS级别，与通用替代方案相比，专用，轻质分布可以显着降低资源消耗。当结合智能工作负载调度和自动缩放时，这些优化的环境可以改善基础架构利用，同时减少能源消耗。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种方法的可持续性益处超出了能源效率。简化的，容器优化的操作系统需要更少的计算资源来操作，从而使组织能够在现有硬件上运行更多的工作负载。这不仅降低了运营成本，还可以最大程度地减少硬件采购和处置的环境影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;边缘作为下一个进化&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着组织将kubernetes部署推向生成和消耗数据的位置，云和边缘计算之间的鸿沟正在迅速解散。这种转变不仅仅是减少延迟。这是关于应用云原理来解决复杂的分布式计算挑战。现在，组织正在边缘部署Kubernetes（即使在单个节点群集中），以将一致性和简化的操作带到其最遥远的基础架构中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，边缘的成功需要为分布式操作设计的基础架构。我讨论过的相同原则 - 专业操作系统，声明性管理和资源效率 - 在物理访问有限且可靠性至关重要的边缘环境中变得更加关键。团队发现，专为Kubernetes工作负载设计的轻巧，以安全性的操作系统非常适合边缘部署，提供自动化更新，最少的攻击表面和有效的资源利用率。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;边缘和云本地技术的这种收敛性标志着企业基础架构的显着演变。通过将基于Kubernetes的操作扩展到优势，组织可以在整个基础设施足迹上保持一致的实践，同时优化本地计算需求&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ WP-block-neading”&gt;建立明天的云本机基础设施今天需要采取行动&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这五个趋势标志着企业接近云的本地基础设施的方式的基本转变。现在是行动的时间。果断地将其基础设施堆栈现代化的组织将是更好的位置，可以在维持安全，控制成本和推动创新的同时扩展其云本地运营。&lt;/p&gt;&#xA;&#xA;态-80-120“&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 13 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【What LLMs can do for SREs in Cloud Native Infrastructure】LLM可以为云本机基础架构中的SRES做什么</title>
      <link>https://www.cncf.io/blog/2025/04/14/what-llms-can-do-for-sres-in-cloud-native-infrastructure/</link>
      <description>【&lt;p&gt;Cloud native infrastructure continues to scale, and with it, so does operational overhead. Kubernetes has become the backbone of modern platforms, but as cluster sizes grow past 100 nodes and thousands of workloads, the operational load can be intense.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At this scale, it’s not unusual for organizations to require at least five dedicated Site Reliability Engineers (SREs) to ensure uptime, manage costs, and handle scaling. SREs are stretched thin managing configurations, remediating failures, tuning resource limits, and staying ahead of performance issues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Infrastructure as Code (IaC) tools and observability platforms have provided much-needed support. However, as systems evolve, we are hitting the ceiling of what human effort alone can maintain. So, the real question emerges: how can we manage modern infrastructure more efficiently and more sustainably?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;The Role of LLMs in SRE Workflows&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Large Language Models (LLMs) are often associated with natural language queries and code generation, but their potential in infrastructure operations goes far deeper.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;LLMs can:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Interpret complex logs and system events&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Summarize root causes based on error patterns&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Assist in decision-making by correlating signals across monitoring systems&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Suggest or automate configuration changes in real time&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This isn’t about replacing SREs. It’s about supporting and enhancing their capabilities. While using LLMs to provision infrastructure, such as generating Terraform or Helm charts, is a popular use case, the more urgent challenge lies in real-time operations. The real question is what happens once your infrastructure is up and running.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Real-Time Ops: Where LLMs Truly Matter&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1354&#34; height=&#34;616&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image.png&#34; alt=&#34;a look at real-time operations&#34; class=&#34;wp-image-129699&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image.png 1354w, https://www.cncf.io/wp-content/uploads/2025/04/image-300x136.png 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-1024x466.png 1024w, https://www.cncf.io/wp-content/uploads/2025/04/image-768x349.png 768w, https://www.cncf.io/wp-content/uploads/2025/04/image-900x409.png 900w, https://www.cncf.io/wp-content/uploads/2025/04/image-440x200.png 440w, https://www.cncf.io/wp-content/uploads/2025/04/image-879x400.png 879w&#34; sizes=&#34;auto, (max-width: 1354px) 100vw, 1354px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Modern SREs don’t just build systems. They operate them 24/7. This is where fatigue starts to build. Failures, scaling issues, and performance anomalies often arise without warning and require immediate attention. LLMs can serve as intelligent assistants here, helping with:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Failure diagnosis: Parsing pod logs, container events, and alerting noise to pinpoint the actual issue&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Policy recommendations: Adjusting autoscaler thresholds, resource requests, or retry settings based on patterns&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Smart remediation: Applying known fix patterns automatically (or semi-automatically) when specific conditions are met&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The combination of language understanding, pattern recognition, and system context gives LLMs a unique advantage in operational settings.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;AI-Native Kubernetes Automation: What’s Emerging&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes platforms are beginning to integrate AI and large language models (LLMs) directly into their control loops. New solutions are emerging to enable intelligent automation at scale, particularly in large and complex Kubernetes environments where traditional operational approaches are reaching their limits.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;5120&#34; height=&#34;1600&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/visual-section.png&#34; alt=&#34;AI-native Kubernetes&#34; class=&#34;wp-image-129777&#34; style=&#34;width:900px;height:auto&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/visual-section.png 5120w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-300x94.png 300w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1024x320.png 1024w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-768x240.png 768w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-900x281.png 900w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1800x563.png 1800w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-600x188.png 600w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1200x375.png 1200w&#34; sizes=&#34;auto, (max-width: 5120px) 100vw, 5120px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Some examples of AI-native capabilities include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Autopilot: Fully automated horizontal scaling powered by a combination of LLMs and machine learning models, intelligently adjusting replicas based on workload patterns—no manual tuning required.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Smart Sizing: Vertical scaling that uses ML to continuously right-size CPU and memory requests, optimizing performance and cost without guesswork.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pod Recovery AI: LLM-powered analysis of failure events such as crash loops or container restarts, capable of diagnosing issues and suggesting or triggering recovery actions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These features are designed to reduce manual tuning and help SREs focus on higher-leverage tasks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;One Engineer, One Thousand Workloads?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This isn’t just a futuristic idea. It’s quickly becoming reality.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Just as GitOps changed how we manage configurations, LLMs and AI are reshaping how we manage the lifecycle of running infrastructure. We’re moving toward a world where one or two engineers can manage what used to take entire teams, thanks to assistive and autonomous capabilities powered by AI.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It’s not about minimizing headcount. It’s about maximizing impact.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Final Thoughts&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The future of SRE in cloud native environments will be shaped by how effectively we bring intelligence into day-to-day operations. With the rapid advancement of LLMs, we are entering a new phase where scaling infrastructure no longer requires scaling teams at the same rate.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As AI-native platforms continue to evolve, SREs will spend less time firefighting and more time architecting for resilience, performance, and innovation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Looking Ahead&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Simplifying Kubernetes operations is no longer a distant goal. With the rise of intelligent automation, teams now can streamline workflows, improve resource efficiency, and reduce operational overhead.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As the ecosystem continues to evolve, adopting AI-driven approaches could be the key to managing complexity and unlocking the full potential of cloud native infrastructure. Now is the time to explore what’s possible.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;lt; Curious how&lt;a href=&#34;https://waveautoscale.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&amp;nbsp;Wave Autoscale&lt;/a&gt;&amp;nbsp;dynamically scales your cloud resources based on real-time traffic? Book a&amp;nbsp;&lt;a href=&#34;https://waveautoscale.com/contact&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;demo&amp;nbsp;&lt;/a&gt;at your convenience!&amp;gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– Wave Autoscale :&amp;nbsp;&lt;a href=&#34;https://waveautoscale.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://waveautoscale.com/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– Demo :&amp;nbsp;&lt;a href=&#34;https://waveautoscale.com/contact&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://waveautoscale.com/contact&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;云本机基础架构继续扩展，随着它的运营开销也是如此。 Kubernetes已成为现代平台的骨干，但是随着群集的大小超过100个节点和数千个工作负载，操作负载可能会很强烈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在此规模上，组织至少需要五个专用网站可靠性工程师（SRE）来确保正常运行时间，管理成本和处理规模并不罕见。 SRES是伸展的薄型管理配置，修复失败，调整资源限制并保持在性能问题之前。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;基础架构作为代码（IAC）工具和可观察性平台提供了急需的支持。但是，随着系统的发展，我们正在击中人类努力所能维持的东西的上限。因此，真正的问题出现了：我们如何更有效，更可持续地管理现代基础设施？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; LLM在SRE工作流程中的作用&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;大语言模型（LLM）通常与自然语言查询和代码生成有关，但是它们在基础架构操作中的潜力要深得多。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; llms可以：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;解释复杂日志和系统事件&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;总结基于错误模式的根本原因&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;通过在监视系统中关联信号来协助决策&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;建议或自动化配置在实时更改&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这不是要替换SRE。这是关于支持和增强他们的能力。尽管使用LLMS来提供基础架构，例如生成Terraform或Helm图表，这是一种流行的用例，但更紧迫的挑战在于实时操作。真正的问题是，一旦您的基础架构启动并运行了。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;实时操作：llms真正重要&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 1354” height =“ 616” src =“ https://www.cncf.io/wp-content/wp-content/wp-content/wp--contet/uploads/uploads/uploads/uploads/2025/255/25/04/image.pen a a a。 class =“ wp-image-129699” srcset =“ https://www.cncf.io/wp-content/uploads/2025/04/image.png 1354W， https://www.cncf.io/wp-content/uploads/2025/04/image-300x136.png 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-1024x466.png 1024w, https://www.cncf.io/wp-content/uploads/2025/04/image-768x349.png 768w，https://www.cncf.io/wpf.io/wp-content/wp-content/wp-content/uploads/uploads/uploads/uploads/2025/2025/2025/044/image-cage-90040.pn.pn.p.900 ww， https://www.cncf.io/wp-content/uploads/2025/04/image-440x200.png 440w，https://www.cncf.io/wp-content/wp-content/wp-content/wp-content/uploads/uploads/uploads/2025/2025/2025/2025/044/image-mimage-8779 x479 x479 x479 x479 simess =&#39;&#39; （最大宽度：1354px）100VW，1354px“ reverrerpolicy =“ no-referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现代SRE不仅建立系统。他们24/7全天候操作。这是疲劳开始增加的地方。失败，扩展问题和性能异常通常不会警告而需要立即注意。 LLM可以在这里充当智能助手，帮助以下帮助：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&lt;li&gt;故障诊断：解析吊舱日志，容器事件和警报噪声以查明实际问题&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;策略建议：根据模式调整自动阈值，资源请求或重试设置&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;智能补救：满足特定条件时会自动应用已知的修复模式（或半自动）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;语言理解，模式识别和系统上下文的组合为LLM提供了操作设置的独特优势。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; ai-native kubernetes自动化：什么是新兴&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kubernetes平台开始将AI和大型语言模型（LLM）直接集成到其控制循环中。新的解决方案正在出现，以使智能自动化能够大规模自动化，尤其是在传统运营方法达到其极限的大型和复杂的Kubernetes环境中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 5120”高=“ 1600” src =“ https：///www.cncf.io ot kubernetes“ class =” wp-image-129777“ style =” width：900px; height; height; auto“ srcset =” https：//wwwww.cncf.io/wp-content/wp-content/uploads/2025/2025/04/04/visual-section.png 5120w， https://www.cncf.io/wp-content/uploads/2025/04/visual-section-300x94.png 300w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1024x320.png 1024w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-768x240.png 768w，https：//www.cncf.io/wp-content/wp-content/wp-content/uploads/uploads/uploads/2025/2025/04/14/14.pn.nyw.94.pn.lwisection-wil of https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1800x563.png 1800W，https://wwwww.cncf.io/wp-content/wp-content/wp-content/wpload/wploads/uploads/uploads/uploads/uploads/2025/2025/2025/204/g04/wgiselectial-ggiselectial-ggiselectial-ggiselectial-gg11888888888888888888888888888888888888888意守https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1200x375.png 1200W“ sizes =” sizes =“ auto，（max-width：5120px）100vw，100vw，5120px“ reverrerpolicy =” notrerpolicy =“ not-refirrricy&gt;”&#xA;&#xA;&#xA;&#xA;&lt;p&gt; AI本地功能的一些示例包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;自动驾驶：由LLM和机器学习模型组合提供的完全自动化的水平缩放，根据工作负载模式智能调整复制品，而无需手动调整。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;智能尺寸：使用ML连续右尺寸的CPU和内存请求，优化性能和成本而无需猜测的垂直缩放。&lt;/li&gt;，优化性能和成本。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; POD恢复AI：llm驱动的故障事件分析，例如崩溃循环或容器重新启动，能够诊断问题并建议或触发恢复动作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些功能旨在减少手动调整，并帮助SRES专注于更高杠杆任务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;一名工程师，一千个工作负载？&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这不仅是一个未来派的想法。 &lt;/p&gt;很快就会成为现实。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就像Gitops改变了我们管理配置一样，LLM和AI正在重塑我们如何管理运行基础结构的生命周期。我们正在走向一个世界在一个或两个工程师可以管理整个团队的情况下，要归功于AI提供支持的辅助和自主功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这不是最小化的员工。这是关于最大化影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;最终想法&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; SRE在云本地环境中的未来将取决于我们将情报带入日常运营的方式。随着LLM的迅速发展，我们进入了一个新阶段，在该阶段，规模基础架构不再需要以相同速率进行缩放团队。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着AI本地平台的不断发展，SRES将花费更少的时间进行消防，而更多的时间进行韧性，性能和创新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;向前看&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;简化Kubernetes操作不再是一个遥远的目标。随着智能自动化的兴起，团队现在可以简化工作流程，提高资源效率并减少运营开销。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着生态系统继续发展，采用AI驱动方法可能是管理复杂性并解锁云原生基础架构的全部潜力的关键。现在是时候探索可能了。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;好奇&lt;a href =“ https://waveautoscale.com/” target =“ _ blank” rel =“ noreferrer noopener”&gt; wave autoscale &lt;/a&gt;根据实时流量，动态扩展您的云资源？预订a &lt;a href =“ https://waveautoscale.com/contact” target =“ _ blank” rel =“ noreferrer noopener”&gt; demo &lt;/a&gt;在您方便！&gt; &lt;/p&gt;时&#xA;&#xA;&#xA;&#xA;&lt;p&gt;  -  Wave AutoScale：&lt;a href =“ https://waveautoscale.com/” target =“ _ blank” rel =“ noreferrer noopener”&gt; https://waveautoscale.com/ &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;  - 演示：&lt;a href =“ https://waveautoscale.com/contact” target =“ _ blank” rel =“ noreferrer noopener”&gt; https://waveautoscalecom/contact &lt;/a&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 13 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Creating a ClickHouse Cluster on Raspberry Pis】在Raspberry PI上创建Clickhouse群集</title>
      <link>https://www.cncf.io/blog/2025/04/18/creating-a-clickhouse-cluster-on-raspberry-pis/</link>
      <description>【&lt;p&gt;Want a hands-on way to explore Kubernetes and ClickHouse®—without spinning up cloud VMs? In this post, we’ll build a home-lab cluster of Raspberry Pi 5 boards that mimics a high-availability setup. Whether you’re a cloud-native developer looking to broaden your bare-metal and networking skills or simply a tinkerer who loves pushing Pi hardware to its limits, this project offers a fun, cost-effective way to get practical Kubernetes experience in your own home. We’ll cover everything from preparing the Pis and installing K3s to spinning up a replicated ClickHouse cluster managed by the Altinity Operator for ClickHouse.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Why Do This? &lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Besides the inherent nerdiness of it, there are some practical reasons:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;I’m approaching this project with a background as a cloud-native app developer. That means I’ve rarely dealt with bare-metal or on-premises networking. Building this cluster is a great way to learn about concepts I typically don’t see when using cloud services.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;It’s also handy to have a Kubernetes cluster available for experimentation without waiting for new AWS VMs to provision. Tools like vCluster make this even more attractive for tasks such as quickly testing Helm charts.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;The Hardware&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Prepping the Pis&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Installing K3s&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Installing the Control Plane&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Connecting to K3s&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Installing Cilium&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Joining the Worker Nodes&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Installing ClickHouse&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Installing the Altinity Operator&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Creating a ClickHouse Cluster with Helm&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;The Hardware&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For this tutorial, we’re using three Raspberry Pi 5 (8GB) models. You could certainly use any other ARM- or x86-based System-on-Chip (SoC) or mini PC—K3s is widely compatible as a lightweight Kubernetes distribution. We specifically chose Raspberry Pi 5 boards because of the availability of a PCIe port. Combined with a compatible HAT, this lets us use NVMe drives at relatively high speeds—much faster than what’s possible with a MicroSD card.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Bill of Materials:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;3× Raspberry Pi 5 (8GB model)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;3× Geekworm X1001 PCIe-to-M.2 HAT&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;3× Official Raspberry Pi 5 Active Coolers&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;300W USB-C power supply*&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;1× MicroSD card (8GB–32GB)**&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Optional&lt;/strong&gt;: Micro-HDMI to HDMI adapter, monitor, USB keyboard, mouse&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Raspberry Pi 5 runs at a slight variation from the standard USB-C spec. They may complain of undervolting if you use a typical USB-C supply. Even though this cluster will only draw ~30–60W at peak, I used a 300W power supply because it was the only one I found that could deliver more than 15 watts on multiple ports simultaneously. Official Raspberry Pi power supplies are a good choice when reliability is crucial.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;**We’ll just use the MicroSD card to flash the OS onto each NVMe drive. Larger cards will take longer to copy the image, so if you can find an 8GB card, that’s ideal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;A Note on Memory&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re using the 8GB model, but if you have the newer 16GB version, more RAM is always helpful. You may struggle to run a multi-node K3s setup with ClickHouse on 4GB or less, though with some tuning, it can be done.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Step 1: Set Up the Raspberry Pis&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;First, we’ll set up our Raspberry Pi 5 boards so they can boot from their NVMe drives rather than a standard microSD card. This gives us improved performance and reliability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Install Raspbian Lite on an SD card&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Grab the latest Raspbian (Lite) image from the official Raspberry Pi website.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Flash it onto a microSD card using your favorite tool (e.g., balenaEtcher, Raspberry Pi Imager, or dd on Linux).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Using the Raspberry Pi Imager tool is preferred since it allows you to easily create a bootable image preloaded with your username and password and/or SSH public key.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Be sure to also enable SSH under the `Services` tab (if using the Raspberry Pi Imager)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Boot the Pi&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Insert the flashed SD card into the Pi.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Connect the Pi to power and wait for it to boot up.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;If you’re using a monitor and keyboard, you can log in directly. Otherwise, you can SSH in after identifying the Pi’s IP address on your local network (typically you can do this by checking the client list on your router’s control panel).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Copy the disk image to the NVMe&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;We’ll clone the SD card’s filesystem onto the attached NVMe drive using dd.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Be cautious with this command—it’s destructive. Double-check your source (/dev/mmcblk0 or /dev/mmcblk0pX) and destination (/dev/nvme0nX) devices before running. Here’s the basic form:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo dd if=/dev/mmcblk0 of=/dev/nvme0n1 bs=32M&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;This can take a while, depending on the size of your SD card and the performance of your drives. Larger SD cards will take longer, so an ~8GB SD card is best.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Shut down, remove the SD card, and reboot&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Once the dd operation completes, power down the Pi, remove the SD card, and power the Pi back on.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The Pi should now boot from the NVMe drive.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Change the Pi hostname&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Assign each Pi a unique hostname so you can tell them apart. You can do this via sudo raspi-config or by editing /etc/hostname and /etc/hosts.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;For example, name them pi1, pi2, and pi3.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Expand the filesystem&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After cloning from the SD to the NVMe, you will have unused disk space. Use raspi-config to expand the root file system to use all space available on the NVMe:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo raspi-config --expand-rootfs&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Enable cgroups&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes requires certain cgroup settings to be enabled. Edit&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;/boot/firmware/cmdline.txt (or /boot/cmdline.txt depending on your distribution) &#xA;&#xA;cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Make sure it’s on the same line as the other parameters, just separated by spaces.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Update the Pi firmware&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This applies the new cgroup settings:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo rpi-update&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reboot the Pi&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;A quick sudo reboot will apply all the changes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Repeat these steps for each Pi in your cluster (pi1, pi2, pi3).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Step 2: Install K&lt;/strong&gt;3s&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now that our Pis are prepped, we’ll install a minimal Kubernetes distribution: K3s from Rancher [LINK]. We’ll set up one Pi as the control-plane node and the others as worker nodes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Install the control-plane node on &lt;/strong&gt;&lt;strong&gt;pi1&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;SSH into pi1 and run:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=&#34;server&#34; sh -s - --flannel-backend none&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;We’re disabling Flannel here (–flannel-backend none) because we’ll use the Cilium CNI in a later step.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Set up &lt;/strong&gt;&lt;strong&gt;pi2&lt;/strong&gt;&lt;strong&gt; and &lt;/strong&gt;&lt;strong&gt;pi3&lt;/strong&gt;&lt;strong&gt; as worker nodes&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On pi1, retrieve the K3S token from:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;/var/lib/rancher/k3s/server/node-token&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;SSH into pi2 (and similarly pi3) and run:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | K3S_URL=https://pi1:6443 K3S_TOKEN=[YOUR_TOKEN] sh -s -&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Replace [YOUR_TOKEN] with the actual token you grabbed from pi1. This command tells your worker nodes how to join the pi1 control plane.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Copy the &lt;/strong&gt;&lt;strong&gt;k3s.yaml&lt;/strong&gt;&lt;strong&gt; and set it as your kubeconfig&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On your local machine, do:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;scp user@pi1:/etc/rancher/k3s/k3s.yaml ./k3s.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You will need to edit the file and replace `&lt;a href=&#34;https://127.0.0.1:6443/&#34;&gt;https://127.0.0.1:6443&lt;/a&gt;` with `&lt;a href=&#34;https://pi1:6443/&#34;&gt;https://pi1:6443&lt;/a&gt;`, then set the file as your kubeconfig temporarily (You could also merge this into your default kubeconfig file if you wish):&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;export KUBECONFIG=./k3s.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Now you can manage the cluster from your local machine using kubectl commands.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Install Cilium as your CNI&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re installing&lt;a href=&#34;https://cilium.io/&#34;&gt; Cilium&lt;/a&gt; for networking and load-balancing features. We enable L2 announcements so that later we can create LoadBalancer services that are able to request External IPs from our Router’s DHCP pool:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm upgrade cilium cilium/cilium --version 1.16.5 \&#xA;  --namespace kube-system \&#xA;  --reuse-values \&#xA;  --set l2announcements.enabled=true \&#xA;  --set k8sClientRateLimit.qps=30 \&#xA;  --set k8sClientRateLimit.burst=60 \&#xA;  --set kubeProxyReplacement=true \&#xA;  --set k8sServiceHost=pi1 \&#xA;  --set k8sServicePort=6443&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Make sure you have Helm installed and that your helm CLI is pointed at the correct cluster (KUBECONFIG=./k3s.yaml).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Step 3: Install the Altinity Operator&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With Kubernetes in place, it’s time to install the Altinity Operator for ClickHouse. This operator makes ClickHouse deployments a breeze.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/Altinity/clickhouse-operator/master/deploy/operator/clickhouse-operator-install-bundle.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;That’s it! Once this completes, the operator will be ready to manage ClickHouse instances within your cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Step 4: Create a Replicated ClickHouse Cluster&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’ll now create a simple replicated ClickHouse setup using Altinity’s Helm chart.&lt;strong&gt;Add the Altinity Helm repo and install&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm repo add altinity https://helm.altinity.com&#xA;helm install clickhouse-dev --create-namespace --namespace clickhouse altinity/clickhouse \&#xA;  --set keeper.enabled=true \&#xA;  --set clickhouse.replicasCount=2&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;We’re enabling ClickHouse Keeper (keeper.enabled=true) to handle the coordination tasks that Zookeeper would normally manage.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;We set replicasCount=2 for a small replicated setup. Adjust as you see fit if you want more replicas. By default, the 3 Keeper replicas will each require a unique node. You can force the ClickHouse instances onto unique nodes by setting the value `clickhouse.antiAffinity = true`&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Test Queries&lt;/strong&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;Once the installation completes, you can run a few queries to confirm that your cluster is healthy:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Check Zookeeper state (via Keeper):&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;SELECT * FROM system.zookeeper WHERE path = &#39;/&#39;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Create a replicated table:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;CREATE TABLE IF NOT EXISTS test_rep ON CLUSTER `{cluster}`&#xA;(&#xA;  `number` UInt32,&#xA;  `created_at` DateTime DEFAULT now()&#xA;)&#xA;ENGINE = ReplicatedMergeTree&#xA;ORDER BY number;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Insert some test data:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;INSERT INTO test_rep (number)&#xA;SELECT number&#xA;FROM system.numbers&#xA;LIMIT 10;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Verify replication across nodes:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;SELECT hostName(), *&#xA;FROM clusterAllReplicas(&#39;{cluster}&#39;, default.test_rep)&#xA;ORDER BY 1 ASC, 2 ASC;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;You should see the same data from each replica, along with its hostName.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;That’s it! You now have a functioning Kubernetes home lab running ClickHouse in a replicated setup. Congratulations on making it this far—enjoy all the benefits of a local high-availability environment, plus the added satisfaction of doing it on Raspberry Pi 5s.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;想要一种动手探索Kubernetes和ClickHouse®的动手方法 - 没有旋转云VM？在这篇文章中，我们将构建一个像Raspberry Pi 5板的自制群集，该板模拟高可用性设置。无论您是想要扩大裸露金属和网络技能的云端开发人员，还是只是一个喜欢将PI硬件推向其限制的修补师，该项目都提供了一种有趣，具有成本效益的方式，以在您自己的家庭中获得实用的Kubernetes体验。我们将介绍从准备PI和安装K3到由Altinity操作员管理的复制的Clickhouse群集旋转的所有内容。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;为什么这样做？ &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了固有的固有性外，还有一些实际原因：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;我正在以云本地应用开发人员的背景来接触该项目。这意味着我很少处理裸机或本地网络。构建此集群是学习我通常在使用云服务时看不到的概念的好方法。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;拥有一个可用于实验的kubernetes群集也很方便，而无需等待新的AWS VM提供。诸如VCluster之类的工具使此任务更具吸引力，例如快速测试Helm图表。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;概述&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;硬件&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;准备pis &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;安装K3S&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;安装控制平面&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;连接到K3S &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;安装纤毛&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;加入工人节点&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;安装Clickhouse&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;安装高度操作员&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;用舵机创建一个clickhouse群&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;硬件&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于本教程，我们使用了三种Raspberry Pi 5（8GB）型号。当然，您可以使用任何其他基于ARM或X86的基于芯片的系统或Mini PC-K3S广泛兼容为轻量级的Kubernetes分布。由于PCIE端口的可用性，我们特别选择了Raspberry Pi 5板。结合兼容的帽子，这使我们能够以相对较高的速度使用NVME驱动器，比microSD卡的速度快。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;材料清单：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; 3×Raspberry Pi 5（8GB型号）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; 3×geek X1001 PCIE-TO-M.2 HAT &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; 3×官方Raspberry Pi 5活动冷却器&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; 300W USB-C电源*&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; 1×microSD卡（8GB – 32GB）** &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;可选&lt;/strong&gt;：Micro-HDMI至HDMI适配器，显示器，USB键盘，鼠标&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Raspberry Pi 5与标准USB-C规格略有变化。如果您使用典型的USB-C供应，他们可能会抱怨不明显。即使这个集群在高峰时只能绘制〜30–60W同时在多个端口上的瓦特。官方Raspberry Pi电源是一个不错的选择。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; **我们只使用microSD卡将操作系统刷到每个NVME驱动器上。较大的卡需要更长的时间来复制图像，因此，如果您可以找到8GB卡，那是理想的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;记忆的注释&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们正在使用8GB型号，但是如果您拥有较新的16GB版本，则更多的RAM总是有帮助的。您可能很难在4GB上使用Clickhouse运行多节点K3S设置，尽管可以进行一些调整，但可以完成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;步骤1：设置覆盆子pis &lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;首先，我们将设置Raspberry Pi 5板，以便它们可以从NVME驱动器而不是标准microSD卡启动。这为我们提供了提高的性能和可靠性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;在SD卡上安装Raspbian Lite &lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;从官方Raspberry Pi网站上获取最新的Raspbian（Lite）图像。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用您喜欢的工具（例如Balenagether，Raspberry Pi Imager或Linux上的DD）将其刷新到microSD卡上。&lt;/li&gt;）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;首选使用Raspberry Pi Imager工具，因为它允许您轻松创建使用用户名和密码和/或SSH公共密钥预装的可引导映像。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;请确保在“服务”选项卡（如果使用Raspberry Pi Imager）下启用SSH &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;启动Pi &lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;将闪烁的SD卡插入PI。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将PI连接到电源并等待启动。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;如果您使用的是监视器和键盘，则可以直接登录。否则，您可以在本地网络上识别PI的IP地址后进行SSH（通常可以通过检查路由器的控制面板上的客户端列表来执行此操作）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;将磁盘图像复制到NVME &lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;我们将使用DD。&lt;/li&gt;克隆SD卡的文件系统&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对此命令保持谨慎，这是破坏性的。在运行之前，请仔细检查您的源（/dev/mmcblk0或/dev/mmcblk0px）和目标（/dev/nvme0nx）设备。这是基本形式：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; sudo dd如果=/dev/mmcblk0 of =/dev/dev/nvme0n1 bs = 32m&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;这可能需要一段时间，具体取决于您的SD卡的大小和驱动器的性能。较大的SD卡将需要更长的时间，因此最好的SD卡是最好的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;关闭，删除SD卡并重新启动&lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; DD操作完成后，向PI电源电源，卸下SD卡，然后将PI供电。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; PI现在应该从NVME驱动器启动。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;更改pi主机名&lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&lt;li&gt;为每个PI分配一个唯一的主机名，因此您可以区分它们。您可以通过sudo raspi-config或编辑/etc/hostName和/etc/hosts进行此操作。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;例如，将它们命名为pi1，pi2和pi3。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;展开文件系统&lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从SD克隆到NVME后，您将拥有未使用的磁盘空间。使用raspi-config扩展根文件系统以使用NVME上可用的所有空间：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; sudo raspi-config -expand-rootfs&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;启用cgroups &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubernetes需要启用某些CGroup设置。编辑&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;/boot/stook/comdline.txt（or/boot/cmdline.txt，取决于您的分布） &#xA;&#xA;cgroup_enable = cpuset cgroup_memory = 1 cgroup_enable =内存&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;确保它与其他参数在相同的线上，只是被空间隔开。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;更新PI固件&lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这应用了新的cgroup设置：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; sudo rpi-update &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;重新启动pi &lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;快速的sudo重新启动将应用所有更改。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在群集中为每个PI重复这些步骤（pi1，pi2，pi3）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;步骤2：安装k &lt;/strong&gt; 3S &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，我们的PI已经准备好了，我们将安装最小的Kubernetes发行版：Rancher [link]的K3S。我们将把一个PI设置为控制平面节点，而将一个Pi设置为工作节点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;在&lt;/strong&gt; &lt;strong&gt; pi1 &lt;/strong&gt; &lt;/li&gt;上安装控制平面节点&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; ssh进入PI1并运行：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; curl -sfl -sfl https://get.k3s.io | install_k3s_exec =“ server” sh -s-- flannel -backend无&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;我们在此处禁用法兰绒（ -   -  backend none），因为我们将在以后的步骤中使用cilium cni。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;设置&lt;/strong&gt; &lt;strong&gt; pi2 &lt;/strong&gt; &lt;strong&gt;和&lt;/strong&gt; &lt;strong&gt; pi3 &lt;/strong&gt; &lt;strong&gt;作为工人节点&lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在PI1上，从：&lt;/p&gt;中检索K3S令牌&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;/var/lib/rancher/k3s/server/node-token&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; ssh进入PI2（以及类似的PI3）并运行：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; curl -sfl -sfl https://get.k3s.io | k3s_url = https：//pi1：6443 k3s_token = [your_token] sh -s-&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;用您从PI1获取的实际令牌替换[your_token]。此命令告诉您的工人点点如何加入PI1控制平面。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;复制&lt;/strong&gt; &lt;strong&gt; k3s.yaml &lt;/strong&gt; &lt;strong&gt;并将其设置为您的kubeconfig &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在您的本地机器上，做：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; scp user@pi1：/etc/rancher/k3s/k3s.yaml ./k3s.yaml&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您需要编辑文件并替换`&lt;a href =“ https://127.0.0.1:6443/”&gt; https：//127.0.0.0.0.1:6443 &lt;/a&gt; href =“ https：//pi1：6443/”&gt; https：//pi1：6443 &lt;/a&gt;`，然后将文件设置为kubeconfig暂时（您也可以将其合并到默认的kubeconfig文件中，如果需要的话，&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;导出kubeconfig =。/k3s.yaml&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;现在您可以使用kubectl命令从本地计算机管理群集。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;安装cilium作为您的CNI &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们正在安装&lt;a href =“ https://cilium.io/”&gt; Cilium &lt;/a&gt;用于网络和负载 - 平衡功能。我们启用L2公告，以便稍后我们可以创建能够从路由器的DHCP池中请求外部IP的LoadBalancer服务：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; helm升级cilium cilium/cilium  -  version 1.16.5 \&#xA;  -namespace kube-system \&#xA;   -  reuse-values \&#xA;  -set l2announcement.enabled = true \&#xA;  -set k8sclientratelimit.qps = 30 \&#xA;  -set k8sclientratelimit.burst = 60 \&#xA;  -Set kubeproxyplacement = true \&#xA;  -Set K8SServiceHost = PI1 \&#xA;  -Set K8SServicePort = 6443&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;确保您已经安装了掌舵，并且您的舵CLI指向正确的集群（kubeconfig =。/k3s.yaml）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用Kubernetes，是时候为Clickhouse安装Altinity操作员了。该操作员使ClickHouse部署变得轻而易举。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; kubectl apply -f https://raw.githubusercercontent.com/altinity/altinity/clickhouse-operator/master/master/deploy/operator/poperator/clickhouse-clickhouse-operator-poperator-poperator-install-bundle.yaml.yaml&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就是这样！完成此操作后，操作员将准备好管理群集中的Clickhouse实例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，我们将使用Altinity的Helm图表创建一个简单的复制点击设置。&lt;strong&gt;添加Altinity Helm Repo并安装&lt;/strong&gt; &lt;strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; helm repo添加altity https://helm.altinity.com&#xA;Helm install install clickhouse-dev- create-namespace -namespace clickhouse altinity/clickhouse \&#xA;  -set keeper.enabled = true \ true \&#xA;  -set clickhouse.replicascount = 2&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;我们正在启用ClickHouse Keeper（keeper.enabled = true）来处理Zookeeper通常会管理的协调任务。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;我们为一个小复制设置设置了replicast = 2。如果您想要更多的复制品，请根据您看到的适合度进行调整。默认情况下，3 kee每个副本将每个都需要一个唯一的节点。您可以通过设置值`clickhouse.antiaffinity = true` &lt;/li&gt;来将ClickHouse实例强加于唯一节点&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;测试查询&lt;/strong&gt; &lt;strong&gt; &lt;br&gt; &lt;/strong&gt;安装完成后，您可以进行一些查询以确认您的群集健康：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;检查Zookeeper状态（通过守护者）：&lt;/strong&gt; &lt;strong&gt; &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;从system.zookeeper中选择 * path =&#39;/&#39;&lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;创建一个复制表：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;创建表格（如果不存在）cluster上的test_rep`{cluster}&#39;&#xA;（（&#xA;  `number`Uint32，&#xA;  `create_at`DATETIME默认值NOW NOW（）&#xA;）&#xA;引擎= ReplicatedMergetree&#xA;按数字订购；&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;插入一些测试数据：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;插入test_rep（编号）&#xA;选择号码&#xA;来自System.numbers&#xA;限制10;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;验证跨节点的复制：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; select hostname（）， *&#xA;来自clusterAllReplicas（&#39;{cluster}&#39;，default.test_rep）&#xA;按1 ASC，2 ASC订购；&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;您应该从每个副本及其主机名中看到相同的数据。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就是这样！现在，您可以在复制的设置中使用功能运行的Kubernetes家庭实验室运行Clickhouse。恭喜您这么远 - 赋予当地高可用性环境的所有好处，以及在Raspberry Pi 5s上进行的满意。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 17 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【10 questions to help you decide whether to hire an SRE or managed KaaS】10个问题，以帮助您决定是雇用SRE还是托管KAAS</title>
      <link>https://www.cncf.io/blog/2025/04/09/10-questions-to-help-you-decide-whether-to-hire-an-sre-or-managed-kaas/</link>
      <description>【&lt;p&gt;Deciding between managing Kubernetes in-house or partnering with a managed service provider can be a difficult choice for organizations seeking to optimize their cloud infrastructure. Over the past several years, I’ve been part of the decision to hire talent in-house or use a managed service provider (not for Kubernetes management, of course—that’s where our team shines the brightest!).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Most organizations make these types of decisions often, especially in areas such as payroll, graphic design, and accounting. Many factors go into the decision including our time and expertise to supervise the employee and the evolving needs of the business. When a skill is going to be a long term strategic asset to our business, I nearly always choose to hire an internal expert to join our team.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Practical Guidelines&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When it comes to choosing to hire a service provider or in-house talent to drive your business forward, lean on these practical guidelines:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Align with Core Competencies: For jobs that are central to your organization’s mission, developing internal expertise is nearly always the best choice. This approach ensures that the team handling these tasks is deeply integrated into your company’s culture and objectives.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Leverage Established Solutions: Often, engineers pride themselves on building something new and better. For challenges that have already been effectively addressed by existing solutions, however, it is usually best to use existing solutions or experts. In other words, don’t expend resources unnecessarily to reinvent something. Instead, benefit from proven solutions or practices when possible.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Scalability and Growth: While large enterprises, like Apple or Microsoft, might have the capacity to bring everything in-house, smaller organizations must examine which functions to outsource carefully. This approach enables you to focus on areas where you can achieve the most significant business impact.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Another aspect to consider is whether you’re choosing between a managed service provider or a short-term consultant or project-based consulting agreement. Managed service providers typically have a vested interest in the sustained success of their clients because they offer ongoing support and optimization as part of a long-term contract. In contrast, some consultants may focus on short-term projects without a commitment to your organization’s long-term outcomes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Cloud Infrastructure Management&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Managing cloud infrastructure is a bit like a band using a recording studio. While the band’s unique music is their core product, the recording equipment and studio environment are essential tools that support the creation of the band’s music. However, mastering the intricacies of studio design or sound engineering could divert them from their primary focus—making music with their signature sound. Does every member of the band need to be a sound engineer to make good music? Definitely not.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Similarly, organizations should concentrate on building and differentiating their core services and consider outsourcing complex infrastructure management to specialists. Building, deploying, and maintaining cloud infrastructure isn’t what makes most companies money. They need the infrastructure, but not the in-house skills to build and manage it. In short, to maximize the chance of success, organizations should internalize functions that are central to their core competencies and outsource tasks that (while important) do not define their unique value proposition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As businesses adopt Kubernetes or increase their K8s footprint, a common question is whether it makes sense build an in-house team (perhaps starting with hiring a Site Reliability Engineer (SRE)) to manage Kubernetes or bring in a Managed Kubernetes-as-a-Service (KaaS) provider.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Below are ten key questions to help guide your decision-making process.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;1. &lt;em&gt;What is our core business focus, and does Kubernetes management augment it?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If your primary business goal is building software products or delivering services, managing Kubernetes in-house might divert valuable resources from where they’re needed most. A managed service allows you to focus on your core business while experts handle Kubernetes operations. However, if infrastructure management is a strategic advantage (such as in a cloud monitoring SaaS company), having an SRE or an internal team might be worth the investment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2. &lt;em&gt;Do we have (or can we attract) the right Kubernetes expertise?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes is complex, and hiring skilled professionals—like an SRE team—can be both challenging and expensive. If you already have DevOps engineers in-house who understand Kubernetes well, building an internal team might be fairly simple. On the other hand, if hiring or training your team on Kubernetes is a bottleneck, a managed Kubernetes provider can offer immediate expertise, reducing the learning curve and accelerating your deployments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;3. &lt;em&gt;How much control do we need over our Kubernetes environment?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If your organization requires full control over networking, security, storage, and custom configurations, an in-house SRE team gives you the flexibility to fine-tune Kubernetes for your organization’s unique needs. A Managed Kubernetes-as-a-Service provider, on the other hand, may remove some of the fine-grained control from your team.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;4. &lt;em&gt;What are our uptime, reliability, and performance requirements?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mission-critical applications require high availability and rapid disaster recovery capabilities. An experienced SRE can optimize performance, ensure redundancy, and set up incident response protocols tailored to your business, but particularly if you have a small SRE team, they’ll always be on call for infrastructure pages and they’ll be the go to person for everything infrastructure-related.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;5. &lt;em&gt;What are the true costs of hiring vs. outsourcing Kubernetes management?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;An SRE’s salary can exceed $150K–$200K per year, not including benefits, tools, training, and additional operations support. Organizations should calculate the Total Cost of Ownership (TCO) for both approaches, considering:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Salaries, training, and hiring costs&lt;br&gt;Infrastructure and tool expenses&lt;br&gt;Downtime and operational inefficiencies&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;6. &lt;em&gt;How quickly do we need to deploy and scale Kubernetes?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If your team needs to deploy Kubernetes rapidly, a managed service provider can deliver environments configured to align with Kubernetes best practices quickly, reducing the time to deployment considerably. In contrast, hiring an SRE and building an internal Kubernetes team requires time for recruitment, onboarding, and infrastructure setup. If speed is important, a managed service provider can accelerate your path to deploying production workloads.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;7. &lt;em&gt;What level of security and compliance do we require?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Security is a top concern for Kubernetes environments because Kubernetes is not secure by default. If your organization operates in a regulated industry (finance, healthcare, and government to name just a few), compliance requirements may demand stricter control over configurations, access management, and logging.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;An in-house SRE team provides full control over security policies.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;8. &lt;em&gt;How will we handle ongoing monitoring, incident response, and troubleshooting?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes requires continuous monitoring and proactive issue resolution. An in-house SRE team can:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Customize observability tools (Prometheus, Grafana, and so on)&lt;br&gt;Create automated alerting systems&lt;br&gt;Implement self-healing mechanisms&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But in-house teams must also monitor, respond to, and resolve infrastructure alerts quickly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;9. &lt;em&gt;Are we planning for a multi-cloud or hybrid cloud strategy?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If your organization intends to deploy Kubernetes across multiple cloud providers (AWS, GCP, and Azure) or in a hybrid-cloud setup, managing Kubernetes internally provides the flexibility to optimize workloads across different environments. That also means your internal team will need to know the details of each cloud service provider.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;10. &lt;em&gt;What is our long-term Kubernetes roadmap?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes is constantly maturing, requiring organizations to keep up with upgrades, security patches, and feature changes in K8s, related APIs, and add-ons. If your business requires long-term control and deep Kubernetes expertise, investing in an internal team makes sense.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;However, if Kubernetes is a means to an end rather than a strategic focus, outsourcing management to a trusted provider ensures you always have access to up-to-date infrastructure without needing to stay ahead of Kubernetes advancements yourself.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Which Path is Right for You?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If Kubernetes is mission-critical, requires deep customization, and your organization has the resources to build and retain an internal team, hiring an SRE may be the right choice.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you want to focus on your applications and business growth while offloading Kubernetes complexities, a Managed Kubernetes-as-a-Service provider offers a faster, cost-effective, and scalable solution. The decision depends on your business goals, in-house expertise, and operational priorities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.fairwinds.com/&#34;&gt;Fairwinds&lt;/a&gt; Managed Kubernetes-as-a-Service can accelerate your cloud adoption initiatives and help your team to get back to making great music (or building new apps and services, whichever is your passion).&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;在内部管理Kubernetes或与托管服务提供商合作之间，对于寻求优化其云基础架构的组织而言，这是一个困难的选择。在过去的几年中，我一直是在内部聘请人才或使用托管服务提供商的决定（当然不是用于Kubernetes Management，这是我们的团队最聪明的地方！）。&lt;/p&gt;。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;大多数组织经常做出这些类型的决定，尤其是在工资单，图形设计和会计等领域。决定的许多因素包括我们的时间和专业知识来监督员工和企业不断发展的需求。当技能成为我们业务的长期战略资产时，我几乎总是选择雇用内部专家加入我们的团队。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;实用准则&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;选择聘请服务提供商或内部人才以推动您的业务前进，请依靠这些实用准则：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与核心竞争力保持一致：对于您组织任务至关重要的工作，发展内部专业知识几乎总是最好的选择。这种方法确保处理这些任务的团队已深入融合到您公司的文化和目标中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;利用已建立的解决方案：通常，工程师以建造新事物更好而感到自豪。但是，对于现有解决方案已经有效解决的挑战，通常最好使用现有的解决方案或专家。换句话说，不要不必要地消耗资源来重塑某些东西。相反，在可能的情况下受益于经过验证的解决方案或实践。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;可扩展性和增长：虽然像苹果或微软这样的大型企业可能有能力将所有东西带入内部，但较小的组织必须检查哪些功能要仔细外包。这种方法使您能够专注于可以实现最重要业务影响的领域。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要考虑的另一个方面是您是在托管服务提供商还是短期顾问或基于项目的咨询协议之间进行选择。托管服务提供商通常对客户的持续成功具有既得利益，因为他们提供了长期合同的一部分，提供持续的支持和优化。相比之下，一些顾问可能会专注于短期项目，而无需承诺您组织的长期成果。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;云基础架构管理&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;管理云基础架构有点像使用录音室的乐队。尽管乐队的独特音乐是他们的核心产品，但录音设备和工作室环境是支持乐队音乐创作的重要工具。但是，掌握工作室设计或声音工程的复杂性可能会将它们从主要重点转移到他们的主要焦点中 - 用他们的标志性声音来制作音乐。每一个成员E乐队需要成为声音工程师来制作好音乐吗？绝对不是。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;同样，组织应集中精力建设和区分其核心服务，并考虑将复杂的基础设施管理外包给专家。建立，部署和维护云基础架构并不是大多数公司的钱。他们需要基础设施，但不需要内部技能来建立和管理它。简而言之，为了最大化成功的机会，组织应内部化对其核心能力和外包任务至关重要的功能，而这些任务（尽管很重要）并未定义其独特的价值主张。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着企业采用Kubernetes或增加其K8S足迹，一个普遍的问题是，建立一个内部团队是否有意义（也许是从雇用网站可靠性工程师（SRE）开始来管理Kubernetes或引入托管的Kubernetes-as-as-as-a-Service（KAAS）提供者。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下是十个关键问题，可以帮助指导您的决策过程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 1。 &lt;em&gt;我们的核心业务重点是什么？&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您的主要业务目标是构建软件产品或提供服务，那么内部管理Kubernetes可能会将宝贵的资源从最需要的地方转移。托管服务使您可以专注于核心业务，而专家处理Kubernetes运营。但是，如果基础架构管理是一种战略优势（例如在云监控SaaS公司中），那么拥有SRE或内部团队可能值得投资。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 2。 &lt;em&gt;我们是否有（或可以吸引）合适的Kubernetes专业知识？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubernetes很复杂，雇用熟练的专业人士（例如SRE团队）既具有挑战性又昂贵。如果您的内部DevOps工程师对Kubernetes了解很好，那么建立一个内部团队可能相当简单。另一方面，如果您在Kubernetes上招聘或培训团队是瓶颈，那么托管的Kubernetes提供商可以立即提供专业知识，减少学习曲线并加速您的部署。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 3。 &lt;em&gt;我们需要多少控制Kubernetes环境？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您的组织需要对网络，安全性，存储和自定义配置进行完全控制，则内部SRE团队可以灵活地为组织的独特需求进行微调Kubernetes。另一方面，托管的kubernetes-as-a-Service提供商可能会从您的团队中删除一些细粒度的控制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 4。 &lt;em&gt;我们的正常运行时间，可靠性和性能要求是什么？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;关键任务应用需要高可用性和快速灾难恢复能力。经验丰富的SRE可以优化性能，确保冗余并设置为您的业务量身定制的事件响应协议，但尤其是如果您有一个小型SRE团队，他们总是会呼吁基础架构页面和您将成为所有与基础设施有关的人。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 5。 &lt;em&gt;雇用与外包Kubernetes管理的真正成本是多少？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; SRE的薪水每年的薪水可能超过$ 150万美元，不包括福利，工具，培训和其他运营支持。组织应计算两种方法的总拥有成本（TCO），考虑到：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;薪水，培训和招聘成本&lt;br&gt;基础设施和工具支出&lt;br&gt;停机时间和运营效率低下&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 6。 &lt;em&gt;我们需要多快地部署和扩展Kubernetes？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您的团队需要快速部署Kubernetes，则托管服务提供商可以提供配置的环境，以迅速与Kubernetes的最佳实践保持一致，从而减少了大量部署的时间。相比之下，雇用SRE并建立内部Kubernetes团队需要时间进行招聘，入职和基础设施。如果速度很重要，则托管服务提供商可以加速您部署生产工作负载的道路。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 7。 &lt;em&gt;我们需要什么级别的安全性和合规性？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安全性是Kubernetes环境的主要关注点，因为默认情况下Kubernetes并不安全。如果您的组织在受监管的行业中运营（金融，医疗保健和政府仅举几例），则合规性要求可能需要对配置，访问管理和伐木的更严格的控制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;内部SRE团队提供对安全政策的完全控制。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 8。 &lt;em&gt;我们将如何处理正在进行的监视，事件响应和故障排除？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubernetes需要持续监控和主动问题解决。内部SRE团队可以：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自定义可观察性工具（Prometheus，Grafana等）&lt;br&gt;创建自动警报系统&lt;br&gt;实施自我修复机制&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是内部团队还必须迅速监视，响应和解决基础架构警报。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 9。 &lt;em&gt;我们是否正在计划进行多云或混合云策略？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您的组织打算在多个云提供商（AWS，GCP和Azure）或Hybrid-Cloud设置中部署Kubernetes，内部管理Kubernetes，可以灵活地在不同环境中优化工作负载。这也意味着您的内部团队将需要了解每个云服务提供商的详细信息。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 10。 &lt;em&gt;我们的长期Kubernetes路线图是什么？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubernetes一直在成熟，要求组织跟上K8，相关API和附加组件中的升级，安全补丁和功能更改。如果您的业务需要长期控制和深入的Kubernetes专业知识，那么投资内部团队是有道理的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，如果Kubernetes是结束而不是战略重点的手段，则将管理外包给值得信赖的提供商确保您始终可以使用最新的基础架构t需要自己在Kubernetes的进步领先。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;哪种路径适合您？&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果Kubernetes是关键任务，需要深入的自定义，并且您的组织有资源来建立和保留内部团队，那么雇用SRE可能是正确的选择。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想在卸载Kubernetes复杂性的同时专注于应用程序和业务增长，则托管的Kubernetes-As-a-Service提供商提供了更快，具有成本效益和可扩展的解决方案。该决定取决于您的业务目标，内部专业知识和运营优先级。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ http://www.fairwinds.com/”&gt; fairwinds &lt;/a&gt;管理的kubernetes-as-as-a-service可以加速您的云采用计划，并帮助您的团队帮助您的团队重新制作出色的音乐（或建立出色的音乐和服务，或者是您的热情）。&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 08 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kubernetes hardening made easy: Running CIS Benchmarks with kube-bench】kubernetes硬化变得容易：用kube板凳运行顺式基准测试</title>
      <link>https://www.cncf.io/blog/2025/04/08/kubernetes-hardening-made-easy-running-cis-benchmarks-with-kube-bench/</link>
      <description>【&lt;p&gt;In today’s world, where security risks and breaches are growing daily, it is crucial to maintain our applications and infrastructure’s compliance with security standards and that is where CIS benchmarks from CIS (Center for Internet Security) comes in. And with kube-bench, running these checks becomes straightforward, helping you strengthen your Kubernetes clusters with confidence.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;CIS Benchmarks&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;gt; Here is the mission statement from CIS’s website.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our mission is to make the connected world a safer place by developing, validating, and promoting timely best practice solutions that help people, businesses, and governments protect themselves against pervasive cyber threats.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;gt; Ref. https://www.cisecurity.org/ for more details.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It basically helps us to jot down:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;What best practices/guidelines to use?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Which tools are available to assist us in scanning our application or infrastructure?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Making sure the best practices are updated in a timely manner.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The benchmarks are basically available for multiple platforms including:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;All the public cloud providers.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Softwares&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;DevSecOps tools&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Mobile devices&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Operating Systems&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;and much more.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can find their extensive list here: https://learn.cisecurity.org/benchmarks&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;CIS Benchmarks: Download PDF for your platform&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For downloading the PDF files you just need to provide some general details about yourself.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;748&#34; height=&#34;424&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image.jpg&#34; alt=&#34;Screenshot showing CIS Brenchmarks landing page&#34; class=&#34;wp-image-129686&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image.jpg 748w, https://www.cncf.io/wp-content/uploads/2025/04/image-300x170.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-353x200.jpg 353w, https://www.cncf.io/wp-content/uploads/2025/04/image-706x400.jpg 706w&#34; sizes=&#34;auto, (max-width: 748px) 100vw, 748px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once done, press “Submit” and you will receive an email with the link from where you can download all kinds of benchmarks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It looks something like this:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;460&#34; height=&#34;393&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-1.jpg&#34; alt=&#34;Screenshot showing text box of CIS PDF download form&#34; class=&#34;wp-image-129687&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-1.jpg 460w, https://www.cncf.io/wp-content/uploads/2025/04/image-1-300x256.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-1-234x200.jpg 234w&#34; sizes=&#34;auto, (max-width: 460px) 100vw, 460px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Upon pressing “Access PDFs” you will be routed to their extensive list of benchmarks which looks something like this:&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;745&#34; height=&#34;456&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-2.jpg&#34; alt=&#34;Screenshot showing CIS Benchmarks access to PDF for non-commercial use page&#34; class=&#34;wp-image-129689&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-2.jpg 745w, https://www.cncf.io/wp-content/uploads/2025/04/image-2-300x184.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-2-327x200.jpg 327w, https://www.cncf.io/wp-content/uploads/2025/04/image-2-654x400.jpg 654w&#34; sizes=&#34;auto, (max-width: 745px) 100vw, 745px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can choose whatever you want to, but since we are interested in Kubernetes as of now, we will scroll down to the Kubernetes section.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;565&#34; height=&#34;339&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-3.jpg&#34; alt=&#34;Screenshot showing CIS pdf to be downloaded on Kubernetes section&#34; class=&#34;wp-image-129690&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-3.jpg 565w, https://www.cncf.io/wp-content/uploads/2025/04/image-3-300x180.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-3-333x200.jpg 333w&#34; sizes=&#34;auto, (max-width: 565px) 100vw, 565px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And the good part here is, this is not limited to vanilla Kubernetes, we can even download benchmarks for all the Kubernetes flavours like EKS from AWS, AKS from Azure, GKE from Google, etc.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once you download a specific PDF, you will see it contains a great amount of details including recommendations, problem statement, impact, remediation, etc.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, if you have observed the PDF contains thousands of recommendations and going thru them and applying them one by one is a time-consuming task and just imagine you have 100s of clusters. Though I would recommend you to at-least go thru it once and get an idea of what all details it contains and how we can make use of it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To make our lives easier there are a couple of tools which can help us to automate this process and help us to identify where we are lacking. So that we can fix them quickly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;CIS Benchmarks: Tools&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are a couple of tools which are managed by CIS itself like CIS-CAT Lite/CIS-CAT Pro/etc. CIS-CAT Lite is a free version and it supports a limited number of options excluding Kubernetes. CIS-CAT Pro is the one which supports Kubernetes but it is just available for CIS SecureSuite Members.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ref. https://www.cisecurity.org/cybersecurity-tools for more details about the tools.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, let’s talk about the good part, the community has given us a couple of open source tools which do the same 😉 the most used one is kube-bench (from Aqua Security).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;HOWTO: kube-bench&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;kube-bench is a tool that checks whether Kubernetes is deployed securely by running the checks documented in the CIS Kubernetes Benchmark.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;There are multiple ways to run kube-bench&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Install it via a package manager&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Download the latest package based on your OS from github releases page and install it.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Ref: https://github.com/aquasecurity/kube-bench/releases&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Since, I am using Ubuntu, I will use dpkg to get this package installed.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;markdown&#34; class=&#34;language-markdown&#34;&gt;$ wget https://github.com/aquasecurity/kube-bench/releases/download/v0.10.2/kube-bench_0.10.2_linux_amd64.deb&#xA;$ sudo dpkg -i kube-bench_0.10.2_linux_amd64.deb&#xA;Selecting previously unselected package kube-bench.&#xA;(Reading database ... 41333 files and directories currently installed.)&#xA;Preparing to unpack kube-bench_0.10.2_linux_amd64.deb ...&#xA;Unpacking kube-bench (0.10.2) ...&#xA;Setting up kube-bench (0.10.2) ...&#xA;$ kube-bench version&#xA;0.10.2&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Run as a job in the Kubernetes Cluster&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Get the job.yaml from the same github link and deploy it on your cluster.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Ref: &lt;a href=&#34;https://github.com/aquasecurity/kube-bench/blob/main/job.yaml&#34;&gt;https://github.com/aquasecurity/kube-bench/blob/main/job.yaml&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Based on your platforms there are multiple job*.yaml files available like for EKS, AKS, GKE, etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;markdown&#34; class=&#34;language-markdown&#34;&gt;$ kubectl apply -f https://raw.githubusercontent.com/aquasecurity/kube-bench/main/job.yaml&#xA;job.batch/kube-bench created&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ k get pods&#xA;NAME               READY   STATUS      RESTARTS   AGE&#xA;kube-bench-n22k9   0/1     Completed   0          96s&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;markdown&#34; class=&#34;language-markdown&#34;&gt;$ k logs kube-bench-n22k9 | head -n 20&#xA;[INFO] 1 Control Plane Security Configuration&#xA;[INFO] 1.1 Control Plane Node Configuration Files&#xA;[PASS] 1.1.1 Ensure that the API server pod specification file permissions are set to 600 or more restrictive (Automated)&#xA;[PASS] 1.1.2 Ensure that the API server pod specification file ownership is set to root:root (Automated)&#xA;[PASS] 1.1.3 Ensure that the controller manager pod specification file permissions are set to 600 or more restrictive (Automated)&#xA;[PASS] 1.1.4 Ensure that the controller manager pod specification file ownership is set to root:root (Automated)&#xA;[PASS] 1.1.5 Ensure that the scheduler pod specification file permissions are set to 600 or more restrictive (Automated)&#xA;[PASS] 1.1.6 Ensure that the scheduler pod specification file ownership is set to root:root (Automated)&#xA;&#xA;OUTPUT TRIMMED&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;markdown&#34; class=&#34;language-markdown&#34;&gt;$ k logs kube-bench-n22k9 | tail -n 20&#xA;OUTPUT TRIMMED&#xA;&#xA;5.7.3 Follow the Kubernetes documentation and apply SecurityContexts to your Pods. For a&#xA;suggested list of SecurityContexts, you may refer to the CIS Security Benchmark for Docker&#xA;Containers.&#xA;&#xA;5.7.4 Ensure that namespaces are created to allow for appropriate segregation of Kubernetes&#xA;resources and that all new resources are created in a specific namespace.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;== Summary policies ==&#xA;0 checks PASS&#xA;6 checks FAIL&#xA;29 checks WARN&#xA;0 checks INFO&#xA;&#xA;== Summary total ==&#xA;57 checks PASS&#xA;19 checks FAIL&#xA;54 checks WARN&#xA;0 checks INFO&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Just check the logs of the pod for all the recommendations. These logs contain multiple sections for different-different Kubernetes components like Controlplane, ETCD, Worker nodes, etc.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;At the end of each section you can see statistics about the checks and at the end of the logs you will see a quick summary about the total (as mentioned above).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;== Summary node ==&#xA;14 checks PASS&#xA;2 checks FAIL&#xA;8 checks WARN&#xA;0 checks INFO&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Run as a docker container&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;markdown&#34; class=&#34;language-markdown&#34;&gt;docker run --rm --net host --pid host --user 0 \&#xA;  -v /etc:/etc:ro \&#xA;  -v /var:/var:ro \&#xA;  -v /usr/bin:/usr/bin:ro \&#xA;  -v /usr/lib:/usr/lib:ro \&#xA;  aquasec/kube-bench:latest --benchmark cis-1.24&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;br&gt;You can change the version based on your requirement, 1.24 is the latest one.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;More details about the versions can be found here: &lt;a href=&#34;https://github.com/aquasecurity/kube-bench/tree/main/cfg&#34;&gt;https://github.com/aquasecurity/kube-bench/tree/main/cfg&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;For this as well, just check the logs of the container and you will find the same results as we described in the earlier section.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is how the remediation steps look like:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;markdown&#34; class=&#34;language-markdown&#34;&gt;== Remediations master ==&#xA;1.1.9 Run the below command (based on the file location on your system) on the control plane node.&#xA;For example, chmod 600 &amp;lt;path/to/cni/files&amp;gt;&#xA;&#xA;1.1.11 On the etcd server node, get the etcd data directory, passed as an argument --data-dir,&#xA;from the command &#39;ps -ef | grep etcd&#39;.&#xA;Run the below command (based on the etcd data directory found above). For example,&#xA;chmod 700 /var/lib/etcd&#xA;&#xA;1.1.12 On the etcd server node, get the etcd data directory, passed as an argument --data-dir,&#xA;from the command &#39;ps -ef | grep etcd&#39;.&#xA;Run the below command (based on the etcd data directory found above).&#xA;For example, chown etcd:etcd /var/lib/etcd&#xA;&#xA;1.1.19 Run the below command (based on the file location on your system) on the control plane node.&#xA;For example,&#xA;chown -R root:root /etc/kubernetes/pki/&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– https://www.cisecurity.org/&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– https://github.com/aquasecurity/kube-bench&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Feel free to add your thoughts and experiences, Happy Learning! 🙂&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;URL: &lt;a href=&#34;https://dev.to/aws-builders/kubernetes-hardening-made-easy-running-cis-benchmarks-with-kube-bench-38ne&#34;&gt;Kubernetes hardening made easy: Running CIS Benchmarks with kube-bench – DEV Community&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;在当今的世界中，安全风险和违规每天都在增长，维持我们的应用程序和基础设施遵守安全标准至关重要，这就是CIS（互联网安全中心）的顺式基准（CIS基准）进入的地方。借助Kube-Bench，使用Kube-Bench，运行这些检查，可以使您的Kubernetes Clusters Clusters Clusters corfure clusters。&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;顺式基准&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p &gt;&gt;这是CIS网站的任务声明。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的使命是通过开发，验证和促进及时的最佳实践解决方案来帮助人们，企业和政府保护自己免受普遍的网络威胁。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p &gt;&gt;参考。 https://www.cisecurity.org/有关更多详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;它基本上可以帮助我们记下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;使用哪些最佳实践/准则？&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;有哪些工具可以帮助我们扫描应用程序或基础架构？&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;确保最佳实践及时更新。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;基本上可用于多个平台，包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;所有公共云提供商。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;软件&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; DevSecops工具&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;移动设备&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;操作系统&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;等等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以在此处找到他们的广泛列表：https：//learn.cisecurity.org/benchmarks &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;顺式基准：为您的平台下载PDF &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用于下载PDF文件，您只需要提供有关您自己的一些一般详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 748”高度=“ 424” src =“ https://www.cncf.io/wp-content/wp-content/wp-content/wpload/uploads/uploads/upploads/brhord brhits unife trabe and Alt and Alt and aTT页面“ class =” wp-image-129686“ srcset =” https://www.cncf.io/wp-content/uploads/2025/04/image.jpg 748w， https://www.cncf.io/wp-content/uploads/2025/04/image-300x170.jpg 300W，https://wwwww.cncf.io/wp.io/wp-content/wp-content/uploads/uploads/uploads/20255/2025/2025/04/image-image-35353535535534.jppg 35334 https://www.cncf.io/wp-content/uploads/2025/04/image-706x400.jpg 706w&#34; sizes=&#34;auto, (max-width: 748px) 100vw, 748px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;完成后，按“提交”，您将收到带有链接的电子邮件，您可以下载各种基准。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;看起来像这样：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 460” height =“ 393” src =“ https://www.cncf.io/wp-content/wp-content/wp-content/uploads/uploads/uploads/uploads/2025/2025/04/image-image-1.jpggg of pdf下载表单“ class =” wp-image-129687“ srcset =” https://www.cncf.io/wp-content/uploads/2025/2025/04/image-1.jpg 460w， https://www.cncf.io/wp-content/uploads/2025/04/image-1-300x256.jpg 300W，https://wwwww.cncf.io/wp-content/wp-content/wp-content/uploads/uploads/uploads/uploads/uploads/234 sizes size size size size size size size size size size size-image-cage-1200.jjyoyo （最大宽度：460px）100VW，460px“ referrerpoliCY =“ No-Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;按下“访问PDF”时，您将被路由到其广泛的基准列表，看起来像这样：&lt;br&gt; &lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;745&#34; height=&#34;456&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-2.jpg&#34; alt=&#34;Screenshot showing CIS Benchmarks access到PDF进行非商业用途页面“ class =” WP-Image-129689“ srcset =” https://www.cncf.io/wp-content/uploads/2025/04/image-04/image-2.jpg-745w， https://www.cncf.io/wp-content/uploads/2025/04/image-2-300x184.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-2-327x200.jpg 327w, https://www.cncf.io/wp-content/uploads/2025/04/image-2-654x400.jpg 654W“ sizes =” sizes =“ auto，（max-width：745px）100vw，100vw，745px“ 745px” reverrerpolicy =“ no not-referrricy”&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以选择您想要的任何东西，但是由于我们现在对Kubernetes感兴趣，因此我们将滚动到Kubernetes部分。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;565&#34; height=&#34;339&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-3.jpg&#34; alt=&#34;Screenshot showing CIS pdf to be在Kubernetes部分下载“ class =” wp-image-129690“ srcset =” https://www.cncf.io/wp-content/uploads/2025/04/image-3.jpg-3.jpg 565w， https://www.cncf.io/wp-content/uploads/2025/04/image-3-300x180.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-3-333x200.jpg 333w&#34; sizes =“自动，（最大宽度：565px）100VW，565px” referrerpolicy =“ no-referrer”&gt; &lt;/fige&gt;&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;，这里的好部分是，这不仅限于Vanilla Kubernetes，我们甚至可以为所有Kubernetes口味下载基准，例如AWS，Aks aks aks aks aks akes akes from Azure，Game，Google的GKE等。&lt;/p&gt;。&lt;/p&gt;。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下载特定的PDF后，您会看到它包含大量详细信息，包括建议，问题声明，影响，补救等等。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，如果您观察到PDF包含成千上万的建议，并通过它们进行一一应用是一项耗时的任务，然后想象一下您有100个集群。虽然我建议您至少一次，并了解它包含的所有细节以及我们如何使用它。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了使我们的生活更轻松，有几个工具可以帮助我们自动化此过程并帮助我们确定缺乏的位置。这样我们就可以快速修复它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;顺式基准：工具&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有几个工具由CIS本身管理，例如CIS-CAT LITE/CIS-CAT PRO/等。 CIS-CAT LITE是一个免费版本，它支持不包括Kubernetes的数量有限的选项。 CIS-CAT Pro是支持Kubernetes的Pro，但它仅适用于CIS Seecuresuite成员。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;参考。 https://www.cisecurity.org/cybersecurity-tools有关工具的更多详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，让我们谈谈良好的部分，社区给了我们一些开源工具，这些工具也可以做到相同&#39;&#39;��最常用的是Kube Bench（来自Aqua Security）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; howto：kube-bench &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kube-Bench是一种工具，可以通过运行CIS Kubernetes基准中记录的支票来检查Kubernetes是否安全部署。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;有多种运行Kube Bench的方法&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;通过软件包管理器安装&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;从GitHub发布页面下载最新软件包并安装它。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;参考：https：//github.com/aquasecurity/kube-bench/releases &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;由于我正在使用Ubuntu，我将使用DPKG安装此软件包。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code lang =“ markdown” class =“ language-markdown”&gt; $ wget https://github.com/aquasecurity/aquasecurity/kube-bench/kube-bench/releases/releases/download/download/download/v0.10.2/kube-bube-bube-bench_0.10.10.2_linux_amd64.deb&#xA;$ sudo dpkg -i kube -bench_0.10.2_linux_amd64.deb&#xA;选择先前未选择的软件包kube ben。&#xA;（读取数据库... 41333当前已安装的文件和目录。）&#xA;准备解开Kube-Bench_0.10.2_linux_amd64.deb ...&#xA;解开Kube Bench（0.10.2）...&#xA;设置Kube Bench（0.10.2）...&#xA;$ kube-Bench版本&#xA;0.10.2&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;在kubernetes群集中作为工作&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;从同一github链接中获取工作。&#xA;&#xA;&#xA;&#xA;&lt;li&gt; ref：&lt;a href =“ https://github.com/aquasecurity/kube-bench/blob/main/job.yaml”&gt; https://github.com/aquasecurity/aquasecurity/kube-bube/kube-bube/kube-bench/blob/main/main/job.yaml/job.yaml/job.yaml &lt;/a-a-yaml &lt;/a&gt; &lt;/li&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;基于您的平台，有多个作业*.YAML文件，例如EK，AK，GKE等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code lang =“ markdown” class =“ language-markdown”&gt; $ kubectl apply -f https://raw.githubusercortent.com/aquasecurity.com/aquasecurity/kube-bench/kube-bench/main/main/job.yaml&#xA;job.批次/kube-bench创建了&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;名称准备状态重新开始年龄&#xA;Kube-Bench-N22K9 0/1完成0 96S&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code lang =“ markdown” class =“ language-markdown”&gt; $ k logs kube-bench-n22k9 |头-N 20&#xA;[INFO] 1控制平面安全配置&#xA;[信息] 1.1控制平面节点配置文件&#xA;[通过] 1.1.1确保API服务器POD规范文件权限设置为600或更多限制性（自动化）&#xA;[通过] 1.1.2确保将API服务器POD规范文件所有权设置为root：root（自动化）&#xA;[通过] 1.1.3确保控制器管理器POD规范文件权限设置为600或更多限制性（自动化）&#xA;[通过] 1.1.4确保控制器管理器POD规范文件所有权设置为root：root（自动化）&#xA;[通过] 1.1.5确保调度程序POD规范文件权限设置为600或更多限制性（自动化）&#xA;[通过] 1.1.6确保调度程序POD规范文件所有权设置为root：root（自动化）&#xA;&#xA;输出修剪&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code lang =“ markdown” class =“ language-markdown”&gt; $ k logs kube-bench-n22k9 |尾巴-n 20&#xA;输出修剪&#xA;&#xA;5.7.3遵循Kubernetes文档，并将SecurityContexts应用于您的吊舱。对于&#xA;建议的SecurityContext列表，您可以参考Docker的CIS安全基准&#xA;容器。&#xA;&#xA;5.7.4确保创建命名空间以允许kubernetes的适当分离&#xA;资源和所有新资源都是在特定名称空间中创建的。&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; ==摘要策略==&#xA;0检查通行证&#xA;6个检查失败&#xA;29检查警告&#xA;0检查信息&#xA;&#xA;==摘要总计==&#xA;57支票通行证&#xA;19支票失败&#xA;54检查警告&#xA;0检查信息&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;只需检查所有建议的吊舱日志即可。这些日志包含多个不同的部分，用于不同不同的kubernetes组件，例如Control Plane，ETCD，Worker节点等。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在每个部分的末尾，您可以看到有关检查的统计信息，在日志结束时，您将看到有关总数的快速摘要（如上所述）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; ==摘要node ==&#xA;14个检查通行证&#xA;2个检查失败&#xA;8检查警告&#xA;0检查信息&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;作为Docker容器&lt;/strong&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt;运行&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code lang =“ markdown” class =“ language-markdown”&gt; docker run  -  rm -net主机-pid主机-user 0 \&#xA;  -v /etc： /etc：ro \&#xA;  -v /var： /var：ro \&#xA;  -v/usr/bin：/usr/bin：ro \&#xA;  -v/usr/lib：/usr/lib：ro \&#xA;  Aquasec/Kube-Bench：最新 - 基准测试CIS-1.24&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;br&gt;您可以根据要求更改版本，1.24是最新的。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;有关该版本的更多详细信息，请参见：&lt;a href =“ https://github.com/aquasecurity/kube-bench/kench/tree/main/main/main/main/cfg”&gt; https://github.com/aquasecurity/aquasecurity/kube-bench/kube-bench/kube-bench/kube-bench/tree/tree/main/main/main/main/main/main/main/main/main/main/cfg &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;也为此，只需检查容器的日志，您就会找到与我们在前一节中描述的相同的结果。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这就是补救步骤的样子：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code lang =“ markdown” class =“ language-markdown”&gt; ==修复master ==&#xA;1.1.9在控制平面节点上运行以下命令（基于系统上的文件位置）。&#xA;例如，CHMOD 600 &lt;PATH/TO/CNI/FILES&gt;&#xA;&#xA;1.1.11在ETCD服务器节点上，获取ETCD数据目录，作为参数传递 -  data-dir，&#xA;从命令的ps -ef | grep etctd&#39;。&#xA;运行以下命令（基于上面找到的ETCD数据目录）。例如，&#xA;CHMOD 700/var/lib/etcd&#xA;&#xA;1.1.12在ETCD服务器节点上，获取ETCD数据目录，作为参数传递 -  data-dir，&#xA;从命令的ps -ef | grep etctd&#39;。&#xA;运行以下命令（基于上面找到的ETCD数据目录）。&#xA;例如，chown etct：etcd/var/lib/etcd&#xA;&#xA;1.1.19在控制平面节点上运行以下命令（基于系统上的文件位置）。&#xA;例如，&#xA;chow-r root：root/etc/kubernetes/pki/&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;参考：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;  -  https://www.cisecurity.org/ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;  -  https://github.com/aquasecurity/kube-bench &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随意添加您的想法和经验，学习快乐！ 🙂&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; url：&lt;a href =“ https://dev.to/aws-builders/kubernetes-hardening-made-made-made-r---------------------&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 07 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Components vs. Containers: Fight?】组件与容器：战斗？</title>
      <link>https://www.cncf.io/blog/2025/04/09/components-vs-containers-fight/</link>
      <description>【&lt;p&gt;WebAssembly components offer a new way to deploy microservices and other applications in cloud native environments. This naturally raises the question: is the upstart component out to replace containers? Or is this one of those situations where the apparent rivals need to learn to work together?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For a proper answer, we need to examine the similarities and differences between the two technologies, and then consider how we should understand their respective use-cases—both taken independently or working in tandem.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Then we’ll explore how WebAssembly (Wasm) can extend the frontiers of container orchestration across multiple clouds, edges, and devices.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But first: what is a WebAssembly component, and how does it differ from a container?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What is a WebAssembly component?&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;WebAssembly is a highly efficient bytecode format that targets a virtual instruction set architecture. When you compile code from the language of your choice to a Wasm binary, you can run that slim binary anywhere you can install a WebAssembly runtime (essentially a tiny virtual machine).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;WebAssembly components&lt;/strong&gt; add a standardized layer of specification over the core Wasm format that makes the binaries…&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Interoperable&lt;/strong&gt;: Components can import and export functions from other components over language-agnostic interfaces—meaning that a component written in Rust can invoke a function in a component written in Go.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Composable&lt;/strong&gt;: Two or more components can be combined into a single component at build-time.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Introspectable&lt;/strong&gt;: When a component imports (that is, depends on) functions from another component, that dependency is defined in the binary itself and can be introspected by a system or operator.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;💡&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;The WebAssembly Component Model was introduced with&lt;a href=&#34;https://wasi.dev/&#34;&gt; WebAssembly System Interface (WASI) 0.2&lt;/a&gt;. Check out this&lt;a href=&#34;http://wasmcloud.com/blog/wasi-preview-2-officially-launches/&#34;&gt; blog&lt;/a&gt; for a deeper dive, and Luke Wagner’s&lt;a href=&#34;https://www.youtube.com/watch?v=tAACYA1Mwv4&#34;&gt; WasmCon talk&lt;/a&gt; remains a perfect introduction to the concept.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Set alongside containers, a few major distinctions emerge right away:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Portability&lt;/strong&gt;: A single component can run anywhere you have a WebAssembly runtime (like Wasmtime) that supports the component specification. You don’t need to build one component per OS per architecture. A single artifact runs everywhere.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Size&lt;/strong&gt;: WebAssembly binaries are small—typically ranging from kilobytes to megabytes—so it’s possible to bin pack more workloads on a given piece of hardware.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Communication&lt;/strong&gt;: In an orchestrated deployment, containers communicate over network boundaries, and those network communications are often a major source of expense at scale. In any Wasm system that supports components, closely coupled components can be composed together—and in wasmCloud, distributed components can communicate via dynamic runtime links.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;613&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-4.jpg&#34; alt=&#34;Containers vs Components&#34; class=&#34;wp-image-129693&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-4.jpg 1600w, https://www.cncf.io/wp-content/uploads/2025/04/image-4-300x115.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-4-1024x392.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/image-4-768x294.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/image-4-900x345.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/image-4-522x200.jpg 522w, https://www.cncf.io/wp-content/uploads/2025/04/image-4-1044x400.jpg 1044w&#34; sizes=&#34;auto, (max-width: 1600px) 100vw, 1600px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Containers versus components by the numbers&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At a high level, perhaps the most important distinction is that &lt;strong&gt;components abstract the application logic alone&lt;/strong&gt;.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Even the slimmest distro-less base image includes a bare minimum of libraries that sit between the application and the kernel, and often container images contain much, much more in the way of libraries and utilities. This is great when you want to, say, spin up a standard developer environment in a devcontainer. That’s a use-case that is perfect for containers and doesn’t make sense for components today. Containers are perfect for portable, isolated, reproducible environments.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Components, by contrast, are the right level of abstraction for applications.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Epochs of abstraction&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can think of the timeline of software deployment as epochs of progressive abstraction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;641&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-5.jpg&#34; alt=&#34;Timeline of software development&#34; class=&#34;wp-image-129694&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-5.jpg 1600w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-300x120.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-1024x410.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-768x308.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-900x361.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-499x200.jpg 499w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-998x400.jpg 998w&#34; sizes=&#34;auto, (max-width: 1600px) 100vw, 1600px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Epochs of abstraction&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We started with tightly coupled, monolithic systems. Virtual machines decoupled operating systems from specific hardware, reducing reliance on data centers. Containers emerged as the next level of abstraction, and container orchestrators helped run applications more flexibly and efficiently.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The next layer of abstraction, WebAssembly components, sees applications as collections of interchangeable components, linked at runtime. When built with components, applications are tiny, portable, and polyglot.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Compared to virtual machines, containers introduced an improvement in efficiency, but there are some significant limitations when it comes to orchestrating containers at-scale and on the edge.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Orchestrating efficiency&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes made the great lift-and-shift to the cloud possible, and is essential for abstracting infrastructure, but &lt;strong&gt;isn’t great for running applications without a bunch of additional work&lt;/strong&gt;. The traditional approach to running containerized applications on Kubernetes faces some significant limitations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Edge deployments: &lt;/strong&gt;Running containers at the edge with Kubernetes is challenging, even with lightweight distributions. The tiniest container is a few MBs, so available resources are occupied simply getting Kubernetes to work.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Resource efficiency and the price of the cold start problem: &lt;/strong&gt;Over 80% of container spend is on idle infrastructure (&lt;a href=&#34;https://www.datadoghq.com/state-of-cloud-security/&#34;&gt;DataDog 2024 State of Cloud&lt;/a&gt;). Containerized applications need containers to run persistently to address spikes in traffic, and to meet standard latency expectations. As the statistics show, keeping ‘just in case’ instances running is expensive.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Since components are able to start in milliseconds, they face no such challenges. The first—and likely most common—reason people want to run components is that they dramatically improve resource efficiency wherever there is a reliance on Kubernetes. With components, teams can write code in the language of their choice and run it anywhere, including in places where even containers are impractical.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If an organization is already using Kubernetes, it’s easy to run components on existing clusters with &lt;strong&gt;wasmCloud&lt;/strong&gt;, a WebAssembly orchestrator that runs distributed Wasm applications at scale, either standalone or on Kubernetes itself.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In fact, wasmCloud can help extend Kubernetes to tackle traditional challenge areas like multi-cloud and edges.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;WebAssembly + Kubernetes: Cloud native’s new tag team&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In an early wasmCloud use case,&lt;a href=&#34;https://www.cncf.io/blog/2022/11/17/better-together-a-kubernetes-and-wasm-case-study/&#34;&gt; &lt;strong&gt;Adobe&lt;/strong&gt;&lt;/a&gt; capitalized on wasmCloud to prove it could make its Kubernetes estate more efficient. The company has continued to expand its use of Wasm:&lt;a href=&#34;https://www.youtube.com/live/B1Q_Xx5i6Ek?feature=shared&#34;&gt; &lt;strong&gt;Engineers from Adobe and Akamai&lt;/strong&gt;&lt;/a&gt; work with wasmCloud to run WebAssembly across cloud services, Kubernetes clusters, and edges.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In industry, &lt;a href=&#34;https://youtu.be/fQdkNGZqYZA?feature=shared&#34;&gt;&lt;strong&gt;MachineMetrics&lt;/strong&gt; uses wasmCloud&lt;/a&gt; to move platform capabilities across edges and clouds with dynamic fault-tolerance. In telecoms, the&lt;a href=&#34;https://www.cncf.io/blog/2024/01/05/bringing-webassembly-to-telecoms-with-cncf-wasmcloud/&#34;&gt; WebAssembly Canvas TM Forum Catalyst Project&lt;/a&gt; has proved the value of &lt;strong&gt;replacing&lt;/strong&gt; Kubernetes with wasmCloud in managing its estate of open APIs, and is now reviewing how wasmCloud can work together with Kubernetes to drive efficiencies.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;wasmCloud hosts can run on a Kubernetes cluster or external to it: bare metal, VMs, IoT devices, or pretty much anywhere you want. Regardless of where hosts are running, they can be connected. Kubernetes handles infrastructure management by orchestrating wasmCloud hosts, while wasmCloud handles application-level operations with full support for component capabilities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;💡&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Want to try running WebAssembly components on a local kind cluster? See &lt;a href=&#34;https://wasmcloud.com/docs/deployment/k8s/&#34;&gt;wasmCloud’s Kubernetes guide&lt;/a&gt; for simple instructions that should take about 5 minutes.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Come for the efficiency, stay for the flexibility&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This separation of concerns—containers and Kubernetes for infrastructure, components and wasmCloud for applications—means that WebAssembly runtime operations are unconstrained by container-centric frameworks and abstractions; wasmCloud can extend Kubernetes to provide new hybrid compute options and expand the frontiers of computing.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is where Wasm’s paradigm-shifting superpowers come into play. There are serious cost savings to be had by using Wasm for applications, but by adopting wasmCloud, we avoid lock-in to proprietary systems, engineers can use their existing cloud native infrastructure, and we can build with the most powerful and singular features of the WebAssembly &lt;a href=&#34;https://wasmcloud.com/docs/concepts/components&#34;&gt;component model&lt;/a&gt;—composability and standards-based interoperability. When all is said and done,&amp;nbsp; containers and components aren’t rivals at all, but are instead a powerful, flexible team for combating infrastructure inefficiency.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To learn more about running WebAssembly components, wasmCloud, and running Wasm on Kubernetes, check out the &lt;a href=&#34;https://slack.wasmcloud.com/&#34;&gt;wasmCloud Slack&lt;/a&gt; or join a &lt;a href=&#34;https://wasmcloud.com/community/&#34;&gt;weekly wasmCloud community meeting&lt;/a&gt;. Hope to see you there!&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; WebAssembly组件提供了一种在云本机环境中部署微服务和其他应用程序的新方法。这自然提出了一个问题：替换容器的新贵组件是否耗尽？还是这是明显竞争对手需要学习一起工作的情况之一？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了做出适当的答案，我们需要检查两种技术之间的相似性和差异，然后考虑我们应该如何理解它们各自的用例（都独立拍摄或串联工作。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;然后，我们将探讨WebAssembly（WASM）如何将容器编排的前沿跨多个云，边缘和设备扩展。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但首先：什么是WebAssembly组件，它与容器有何不同？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block-heading”&gt; &lt;strong&gt;什么是WebAssembly组件？&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; WebAssembly是一种高效的字节码格式，它针对虚拟指令集体系结构。当您将代码从您选择的语言中编译为WASM二进制文件时，您可以在可以安装WebAssembly运行时运行该纤细的二进制文件（本质上是微型虚拟机）。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; WebAssembly组件&lt;/strong&gt;在核心WASM格式上添加标准化的规范层，该格式使二进制文件…&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;可互操作&lt;/strong&gt;：组件可以从其他组件中导入和导出语言界面界面的函数，这意味着用Rust编写的组件可以在GO中写入的组件中调用一个函数。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;综合&lt;/strong&gt;：可以将两个或多个组件合并为一个组件。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;内省&lt;/strong&gt;：当组件导入（即，取决于）来自另一个组件的函数时，该依赖性是在二进制本身中定义的，并且可以由系统或操作员进行内置。 &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;💡&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt; &lt;strong&gt; WebAssembly组件模型是用&lt;a href =“ https://wasi.dev/”&gt; WebAssembly System Interface（wasi）0.2 &lt;/a&gt;引入的。请查看此&lt;a href =“ http://wasmcloud.com/blog/wasi-preview-2-c--c--in-launches/”&gt; Blog &lt;/a&gt;进行更深入的潜水，Luke Wagner的&lt;a href =”概念。&lt;/strong&gt; &lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与容器旁边设置，立即出现了一些主要区别：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;可移植性&lt;/strong&gt;：单个组件可以在您拥有支持组件规范的WebAssembly运行时（例如WASMTIME）运行。您不需要每个OS每个OS构建一个组件。一个人工制品无处不在。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;尺寸&lt;/strong&gt;：Websembly二进制文件很小 - 从千数到兆字节的范围很小，因此可以在给定的硬件上包装更多的工作负载。&lt;/li&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;交流&lt;/strong&gt;：在兽人中部署的部署，在网络边界上进行通信的容器，这些网络通信通常是大规模支出的主要来源。在支持组件的任何WASM系统中，都可以将密切耦合的组件组合在一起 - 在WasmCloud，分布式组件可以通过动态运行时链接进行通信。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;613&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-4.jpg&#34; alt=&#34;Containers vs Components&#34; class =“ wp-image-129693” srcset =“ https://www.cncf.io/wp-content/uploads/2025/04/image-4.jpg 1600W， https://www.cncf.io/wp-content/uploads/2025/04/image-4-300x115.jpg 300W，https://www.cncf.io/wp.io/wp-content/wp-content/uploads/uploads/2025/2025/204/wimage-4-104-wimage-4-10244-4-104xpp44-xpg392.jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj yes https://www.cncf.io/wp-content/uploads/2025/04/image-4-768x294.jpg 768w，https://wwwww.cncf.io/wp.io/wp-content/wp-content/upload/uploads/uploads/2025/2025/04/04/image-image-image-image-image-image-imimage-im4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-94.P. https://www.cncf.io/wp-content/uploads/2025/04/image-4-522x200.jpg 522w，https://www.cncf.io/wp-content/wp-content/wp-content/uploads/uploads/uploads/uploads/2025/2025/204/14/4-1444-W.尺寸=“ auto，（最大宽度：1600px）100VW，1600px” referrerpolicy =“ no-toferrer”&gt; &lt;/fige&gt;&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt;容器与数字的组件&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在高水平上，也许最重要的区别是&lt;strong&gt;组件仅抽象应用程序逻辑&lt;/strong&gt;。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;即使是最微小的无分布的基本图像，也包括坐在应用程序和内核之间的最少库，并且通常在库和实用程序的方式上包含更多的容器图像。当您想在Devcontainer中旋转标准开发人员环境时，这很棒。这是一个非常适合容器的用例，对于当今的组件却没有意义。容器非常适合便携式，隔离，可再现的环境。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;相比之下，&lt;p&gt;组件是应用程序的正确水平。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;抽象的时代&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以将软件部署的时间表视为渐进抽象的时代。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;641&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image-5.jpg&#34; alt=&#34;Timeline of software development&#34; class =“ wp-image-129694” srcset =“ https://www.cncf.io/wp-content/uploads/2025/04/image-5.jpg 1600W， https://www.cncf.io/wp-content/uploads/2025/04/image-5-300x120.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-1024x410.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-768x308.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-900x361.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-499x200.jpg 499w, https://www.cncf.io/wp-content/uploads/2025/04/image-5-998x400.jpg 998w&#34;尺寸=“ auto，（最大宽度：1600px）100VW，1600px” referrerpolicy =“ no-toferrer”&gt; &lt;/fige&gt;&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt;时代抽象的&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们从紧密耦合的整体系统开始。虚拟机从特定硬件中解开操作系统，从而降低了对数据中心的依赖。容器作为下一个抽象级别出现，并且容器编排者帮助更灵活，更有效地运行应用程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下一层抽象，WebAssembly组件，将应用程序视为在运行时链接的可互换组件的集合。当使用组件构建时，应用程序很小，便携式和多面体。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与虚拟机相比，容器引入了提高效率的提高，但是在安排容器处于尺度和边缘方面存在一些显着限制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-tearing”&gt; &lt;strong&gt;精心策划效率&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubernetes使云到云的巨大移动可能是可能的，对于抽象基础架构至关重要，但是&lt;strong&gt;没有一堆其他工作&lt;/strong&gt;，对于运行应用程序而言并不是很好。在Kubernetes上运行集装箱应用程序的传统方法面临一些重大局限性：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;边缘部署：&lt;/strong&gt;在带有kubernetes的边缘运行容器，即使使用轻巧的分布也很具有挑战性。最小的容器是几个MB，因此可用的资源被占用只是让Kubernetes工作。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;资源效率和冷启动问题的价格：&lt;/strong&gt;超过80％的集装箱支出是在空闲基础架构上（&lt;a href =“ https://www.datadoghq.com/state-of-cloud-security/”&gt; datadog 2024云&lt;/a&gt;）。容器化的应用程序需要容器才能持续运行以解决流量中的峰值，并满足标准的延迟期望。正如统计数据所示，保持“以防万一”的情况很昂贵。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;由于组件能够以毫秒的速度开始，因此他们没有面临此类挑战。人们想要运行组件的第一个（也是最常见的季节）是，无论依赖Kubernetes，他们都会显着提高资源效率。借助组件，团队可以用自己选择的语言编写代码，并在任何地方运行它，包括在容器不切实际的地方。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果组织已经在使用Kubernetes，则可以很容易地使用&lt;strong&gt; WasmCloud &lt;/strong&gt;在现有群集上运行组件，这是一种websembly编排，可以按独立或Kubernetes本身运行分布式WASM应用程序。  &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;实际上，WasmCloud可以帮助扩展Kubernetes，以应对传统挑战领域，例如多云和边缘。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在早期的wasmcloud用例中，&lt;a href =“ https://www.cncf.io/blog/2022/11/11/17/better-together-together-a-kubernetes-and-wasm-wasm-wasm-wasm-case-study/在Wasmcloud占据了启示，以证明它可以使其Kubernetes庄园更加高效。 The company has continued to expand its use of Wasm:&lt;a href=&#34;https://www.youtube.com/live/B1Q_Xx5i6Ek?feature=shared&#34;&gt; &lt;strong&gt;Engineers from Adob​​e and Akamai&lt;/strong&gt;&lt;/a&gt; work with wasmCloud to run WebAssembly across cloud services, Kubernetes clusters, and edges. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在行业中，&lt;a href =“ https://youtu.be/fqdkngzqyza?feature=shared”&gt; &lt;strong&gt; MachineMetrics &lt;/strong&gt;使用WasmCloud &lt;/a&gt;用动态断层率将平台跨越边缘和云移动平台能力。在电信中，&lt;a href =“ https://www.cncf.io/blog/2024/01/05/bringing-webassembly-to-telecoms-with-with-with-with-cncf-wasmcloud/&gt;管理其开放式API的财产，现在正在审查Wasmcloud如何与Kubernetes合作以提高效率。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; wasmcloud主机可以在kubernetes群集或外部运行：裸机，VM，IoT设备或几乎任何您想要的地方。无论主机在哪里运行，都可以连接。 Kubernetes通过协调WasmCloud主机来处理基础架构管理，而WasmCloud处理应用程序级操作，并全力支持组件功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;💡&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt; &lt;strong&gt;是否想尝试在本地类型集群上运行WebAssembly组件？请参阅&lt;a href =“ https://wasmcloud.com/docs/deployment/k8s/”&gt; Wasmcloud的Kubernetes指南&lt;/a&gt;，请使用大约5分钟的简单说明。&lt;/strong&gt; &lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/p&gt; &lt;/em&gt; &lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;来提高效率，保持灵活性&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种关注点的分离 - 用于基础架构，组件和wasmcloud应用程序的关键和kubernetes，webAssembly运行时操作不受以容器为中心的框架和抽象来限制的。 WasmCloud可以扩展Kubernetes来提供新的混合计算选项并扩展计算的前沿。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是Wasm的范式转移超级大国发挥作用的地方。通过使用WASM进行应用，可以节省大量成本，但是通过使用WasmCloud，我们避免锁定专有系统，工程师可以使用其现有的云本机基础架构，我们可以使用WebAssembly的最强大和最奇异的特征&lt;a href &lt;a href &lt;a href =“基于标准的互操作性。说完一切后，容器和组件根本不是竞争对手，而是一个强大，灵活的团队，用于打击基础设施效率低下。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要了解有关运行WebAssembly组件，WasmCloud和在Kubernetes上运行WASM的更多信息，请查看&lt;a href =“ https：//slack.wasmcloud.com/”&gt; wasmcloud slack &lt;/a&gt;或加入a &lt;a href =“希望在那里见到你！&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 08 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The CNCF TOC @ KubeCon + CloudNativeCon Europe 2025】CNCF TOC @ kubecon + Cloudnativecon欧洲2025</title>
      <link>https://www.cncf.io/blog/2025/04/16/the-cncf-toc-kubecon-cloudnativecon-europe-2025/</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://www.cncf.io/people/technical-oversight-committee/&#34;&gt;The Technical Oversight Committee&lt;/a&gt; (TOC) provides technical leadership to the cloud native community. Strong TOC participation at this year’s &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/&#34;&gt;KubeCon + CloudNativeCon Europe&lt;/a&gt; in London enabled in-person discussions and strategic planning for &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt; project technical priorities in the coming years.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Maintainer Summit&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/features-add-ons/maintainer-summit/&#34;&gt;CNCF Maintainer Summit&lt;/a&gt; is an exclusive event for the people behind CNCF projects to gather face-to-face, collaborate, and celebrate the projects that make “Cloud Native.” The Maintainer summit, co-located with KubeCon, took place on March 31st at Excel London.The CNCF TOC was highly visible at the event, notably with TOC Chair Karena Angell co-chairing the summit. The event kicked off with a “Welcome to Your TOC” keynote featuring TOC members on stage, providing the CNCF maintainer community an opportunity for in-person interaction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeh8bN8Hh-YmtRc-J-gpKPgpj9kXRYZL25DUgeVr7R1NIEgC8leIzt4Vb7H2RuURaXqhCFaO7HXM_xu74T7NzJPD0dzzw13Y3La_pkjZozrXUHvaSUhu7parurhIxdGjJFu91LwNQ?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;Maintainer Summit&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOCs led a well attended roundtable discussion around the &lt;a href=&#34;https://tag-security.cncf.io/&#34;&gt;TAG&lt;/a&gt; (Technical Advisory Groups) reboot. We had a wealth of new initiatives put forward and are all looking forward to seeing these develop in the upcoming months.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeNP0cqo1PxKD5UWbAxackBPKi3AvbtHAoEdsQzEuQyiQwV-ZF2KaNjBuDT0b06h9YrGnqyh64lGz8L71V8qn5jjWkyyf0NyLEso_uGF90InuM8dokYtkKTgnCUJ8oAilBqU48F?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;group discussion&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC members also reviewed ideas from all workshop tables to select the winning proposal. The winning table proposed an idea around “Centralized Resource Management and Transparency” to establish a centralized service catalog for resource provisioning, effectively abstracting the complexity of resource management away from individual projects.&lt;br&gt;&lt;br&gt;&lt;strong&gt;The TOC Offsite&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC held an offsite co-located event with KubeCon, where Bob Killen, Senior Technical Program Manager at CNCF, started with a TOC 101 session for the newly elected TOC members. They also did a SWOT analysis to reflect on the previous years’ activities. The priorities for the upcoming year were also discussed —&amp;nbsp; including steering the TAG reboots, ensuring credibility, and emphasizing standardization.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdpZLFsx-TFd9WSTiURWixOPY_EnibYrvgcGrMPRVJTcF4lrbJVhZxug9P6wuQ2xJjPlCLNto6EgtQv7rk0vr2KJXOJcXjefoUsYujiIHHf2xJlFTZEk6WIIAAksmkGyu2iXivzCw?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;TOC offsite&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TOC + TAB Discussion Highlights&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC also met with the TAB in a similar fashion to have a retrospective of the previous year’s activities and discuss the opportunities ahead. The discussion mainly revolved around giving more focus to end user adoption, and how to facilitate it.&lt;br&gt;&lt;br&gt;&lt;strong&gt;TOC + GB Strategy Session&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC next met with the CNCF &lt;a href=&#34;https://www.cncf.io/people/governing-board/&#34;&gt;Governing Board&lt;/a&gt; for a very insightful meeting to discuss the strategies for the upcoming year. The meeting featured diverse discussions, including Brian Douglas, CNCF’s new Director of Ecosystem, leading a discussion on enhancing contributions of reference architectures and case studies. Mirko Boehm, LF Europe, presented on the Cyber Resilience Act (CRA) and its implications for open source projects. Karena Angell, TOC Chair, highlighted the need for better support and incentives for projects to advance maturity levels. Finally, Matt White, PyTorch Executive Director, along with Chris Aniszczyk, CTO of CNCF, and Todd Moore, SVP of Community Operations at the Linux Foundation, addressed the challenges and opportunities of AI innovation in Linux Foundation and CNCF projects.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcTnymMWAjmQI6qanhZd-DbuGYY61u5f4JLbAbzIMvkwi7T5GN0foMKBNd9cDFu8KAYEsgryorGggxxAnwDVDNERhk1FeRG2cGduykC8IBsBKqpWmv3yks1t7I9x2834V8pSVhy?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;Governing Board meeting&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TOC at the Keynotes&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apart from the usual responsibilities, the TOC had an amazing presence at the KubeCon keynote stage as well. Faseela K, Cloud Native Developer, Ericsson was the co-chair for KubeCon EU and hosted the keynotes for all three days. The second day of KubeCon keynotes saw Ricardo Rocha, Computing Engineer, CERN and Katie Gamanji, Senior Field Engineer, Apple on stage sharing the CNCF end user stories from &lt;a href=&#34;https://youtu.be/CEr3HECMgBk?si=7trzfwjYuVwgKIm0&#34;&gt;Apple&lt;/a&gt; and CERN. Katie was also part of the Keynote panel “&lt;a href=&#34;https://youtu.be/3Mucc7AsXN4?si=ik8HaqHroMqAoDHL&#34;&gt;CNCF at 10&lt;/a&gt;”, where she discussed a decade of transformative growth within the CNCF ecosystem along with Joseph Sandoval, Principal Product Manager, Adobe and Liz Rice, Chief Open Source Officer, Isovalent at Cisco.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeFEhkfIbCcwbJGXWAStFa_5DRbAge6wPH6CBUUfgE2DLkBQIGXd4-Wa-Zp8f815-SQlnWYmGpBa8M5EoOA7SCydNDmgsQXF8fAWKRjj8mlIyGXmQ0oKvW4kw9wKoNgsQUts6Olxw?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;TOC at the KubeCon + CloudNativeCon Europe 2025 keynotes&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Day 3 keynotes had Faseela on stage with a panel on “&lt;a href=&#34;https://www.youtube.com/watch?v=qj9q_-S91L8&#34;&gt;Cloud Native Evolution in Telecom&lt;/a&gt;” with representation from end users Orange, Vodafone and Swisscom.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfjo3k8Lw_8OLwk-GOXJx0BqeKcAT_gQIjezcjr_-CBCmQ7wij7puFdv6RqRiS4mZ0tMVOj057tAUmrlX035TxfcNij64o6f2DbTwYrAXni24XD4h_MjAsw7dCTVuip70TwWdmk?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;Day 3 keynotes&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC also had a solid keynote, “&lt;a href=&#34;https://youtu.be/TvhUer_XPFk?si=5EZ_lT0JRNuEUIpI&#34;&gt;221B Cloud Native Street&lt;/a&gt;,” which was led by Katie Gamanji and Ricardo Kocha and summarized all the topics that were under discussion for the previous days. They did a great job in delivering the key messages to the wider audience including project maturity levels, the TAG reboot and the need for more focus on end users. They also discussed the identified gaps that will shape the future of the CNCF ecosystem – multicluster management, cost management and sustainability and tooling around infrastructure provisioning and secret management.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc-U20LUxyPh75EAgqBeGJTGTqCZ1Q8LvgR5YYV4NlkTzLX7ovoL2R9xC1Tk9YgMNxtZZiTQBK8WTrAgCmgn9z9r6kl8KtzvUZGKnKPapg_L38C03was9sEmsAkqN_cP0pkjqsI9A?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;KubeCon + CloudNativeCon Europe 2025 keynotes&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TOC Sessions @KubeCon&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apart from the keynotes, the TOC members had several other talks at the conference, including a TOC panel on the final day:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tx7l/quantum-ready-kubernetes-how-do-we-get-there-nikhita-raghunath-natalie-fisher-broadcom-nigel-jones-ibm-ricardo-rocha-cern-tomas-gustavsson-keyfactor?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Quantum-Ready Kubernetes: How Do We Get There? – Nikhita Raghunath &amp;amp; Natalie Fisher, Broadcom; Nigel Jones, IBM; Ricardo Rocha, CERN; Tomas Gustavsson, Keyfactor&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tgwS/discover-cncf-tag-runtime-advancing-cloud-native-innovation-from-ai-to-edge-ricardo-aravena-snowflake-stephen-rust-akamai-rajas-kokodkar-broadcom-alexander-kanevskiy-intel-danielle-tal-microsoft?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Discover CNCF TAG Runtime: Advancing Cloud-Native Innovation from AI to Edge – Ricardo Aravena, Snowflake; Stephen Rust, Akamai; Rajas Kokodkar, Broadcom; Alexander Kanevskiy, Intel; Danielle Tal, Microsoft&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tcvu/project-lightning-talk-project-copacetic-jeremy-rickard-maintainer?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Project Lightning Talk: Project Copacetic – Jeremy Rickard, Maintainer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1txCV/signed-sealed-delivered-sign-and-verify-all-the-things-jeremy-rickard-microsoft?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Signed, Sealed, Delivered – Sign and Verify All the Things – Jeremy Rickard, Microsoft&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tx7c/balancing-cost-and-efficiency-day2-optimization-of-multi-cluster-ai-infrastructure-kevin-wang-huawei?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Balancing Cost and Efficiency: Day2 Optimization of Multi-Cluster AI Infrastructure – Kevin Wang, Huawei&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1td1B/kubernetes-sig-architecture-intro-and-updates-john-belamaric-google-davanum-srinivas-aws?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Kubernetes SIG Architecture Intro and Updates – John Belamaric, Google &amp;amp; Davanum Srinivas, AWS&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tcxk/cloud-native-storage-and-data-the-cncf-storage-tag-projects-technology-landscape-raffaele-spazzoli-red-hat-alex-chircop-akamai?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Cloud Native Storage and Data: The CNCF Storage TAG Projects, Technology &amp;amp; Landscape – Raffaele Spazzoli, Red Hat; Alex Chircop, Akamai&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1txEs/stateful-superpowers-explore-high-performance-and-scaleable-stateful-workloads-on-k8s-alex-chircop-chris-milsted-alex-reid-akamai-lori-lorusso-percona?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Stateful Superpowers: Explore High Performance and Scaleable Stateful Workloads on K8s – Alex Chircop, Chris Milsted &amp;amp; Alex Reid, Akamai; Lori Lorusso, Percona&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1txFn/izzy-saves-the-birthday-a-story-driven-live-demo-exploring-the-magic-of-service-mesh-lin-sun-soloio-faseela-kundattil-ericsson-software-technology?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;“Izzy Saves the Birthday” – A Story-Driven Live Demo Exploring the Magic of Service Mesh – Lin Sun, Solo.io &amp;amp; Faseela Kundattil, Ericsson Software Technology&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1txEX/journey-at-the-new-york-times-is-sidecar-less-service-mesh-disappearing-into-infrastructure-lin-sun-soloio-ahmed-bebars-the-new-york-times?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Journey at the New York Times: Is Sidecar-Less Service Mesh Disappearing Into Infrastructure? – Lin Sun, Solo.io &amp;amp; Ahmed Bebars, The New York Times&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tczp/istio-the-past-present-and-future-of-the-project-and-community-lin-sun-louis-ryan-soloio-raymond-wong-forbes?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Istio: The Past, Present and Future of the Project and Community – Lin Sun &amp;amp; Louis Ryan, Solo.io; Raymond Wong, Forbes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TOC Panel&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;TOC also had a panel discussion on the final day to clarify any doubts or questions the KubeCon audience had regarding our work, as well as our priorities. There were many questions related to the TAG reboot initiative and concerns if the same will obstruct the project moving levels. Overall, the TAG reboot will serve to guide projects with better technical guidance to move between maturity levels as well as be better prepared for end user adoption.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cncf.io/people/technical-oversight-committee/&#34;&gt;Technical Oversight Committee | CNCF&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://github.com/cncf/toc&#34;&gt;http://github.com/cncf/toc&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://github.com/cncf/tab&#34;&gt;http://github.com/cncf/tab&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cncf/toc/issues/1527&#34;&gt;https://github.com/cncf/toc/issues/1527&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;/h3&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; &lt;a href =“ https://www.cncf.io/people/technical-oversight-committee/”&gt;技术监督委员会&lt;/a&gt;（TOC）为云土著社区提供技术领导力。强大的TOC参与今年的&lt;a href =“ https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/”&gt; kubecon + kubecon + cloudnativecon欧洲href =“ https://www.cncf.io/”&gt; CNCF &lt;/a&gt;未来几年的项目技术优先级。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;维护者峰会&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/features-add-ons/maintainer-summit/&#34;&gt;CNCF Maintainer Summit&lt;/a&gt; is an exclusive event for the people behind CNCF projects to gather face-to-face, collaborate, and celebrate the projects that make “Cloud Native.”与Kubecon共同位置的维护者峰会于3月31日在伦敦Excel伦敦举行。CNCFTOC在活动中非常明显，特别是与TOC主席Karena Angell共同主持峰会。该活动以“欢迎来到您的TOC”为主题演讲开始，在舞台上以TOC成员为特色，为CNCF维护者社区提供了一个面对面互动的机会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxeh8bn8hh-h-mytrc-j-gpkpgpgpgpj9kxryzl25dugevr7r1niegc8leizt4vb 7H2RUURAXQHCFAO7HXM_XU74T7NZJPD0DZZW13Y3LA_PKJZOZRXUHVASUHVASUHUHU7PARURHIXDGJJFU91LWNQ？ alt =“维护者峰会” referrerpolicy =“ no-the Referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOCS围绕着&lt;a href =“ https://tag-security.cncf.io/”&gt; TAG &lt;/a&gt;（技术咨询小组）重新启动重新启动。我们提出了许多新计划，并期待在接下来的几个月中看到这些计划的发展。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxenp0cqo1pxkd5uwbaxackbpki3avbpki3avbthao3avbthaoedsqzeuqyqyiqwv-zf2kanjb UDT0B06H9YRGNQYH64LGZ8L71V8QN5JJJWKYYF0NYLESO_UGF90INUM8DOKYTKKKTGNCUJ8OAILBQU48F？ alt =“组讨论” referrerpolicy =“ no-toferrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOC成员还审查了所有研讨会表的想法，以选择获胜的建议。获奖表提出了一个围绕“集中资源管理和透明度”的想法，以建立用于资源提供资源的集中服务目录，有效地将资源管理与单个项目的复杂性抽象。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOC与Kubecon举行了一次异地共同的活动，CNCF的高级技术计划经理Bob Killen开始为新当选的TOC成员举行的TOC 101会议。他们还进行了SWOT分析以反思前几年的活动。还讨论了来年的优先事项 - 包括指导标签重新启动，确保信誉和强调标准化。/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxdpzlfsx-tfd9wstiurwixopy_enibyrvgcgrmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprv4lrrbjvhzxug9 p6wuq2xjjjjjplnto6egtqv7rk0vr2kjxojcxjjefousyujiihhhf2xjlftzek6wiiaak6wiiaaksmkgyu2ixixixixixixixixixixcw？ Alt =“ Toc Offsite” reverrerPolicy =“ no-toferrer”&gt; &lt;/figifer&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; toc + tab讨论亮点&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOC还以类似的方式与标签会面，以回顾上一年的活动并讨论未来的机会。讨论主要围绕着最终用户采用的重点，以及如何促进它。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOC接下来会见了CNCF &lt;a href =“ https://www.cncf.io/people/people/governing-board/”&gt;管理委员会&lt;/a&gt; &lt;/a&gt;举行了一次非常有见地的会议，讨论即将到来的一年的策略。该会议的特色是多样化的讨论，包括CNCF的新生态系统总监Brian Douglas，主持了有关加强参考架构和案例研究贡献的讨论。 LF欧洲的Mirko Boehm介绍了《网络弹性法》（CRA）及其对开源项目的影响。 TOC主席Karena Angell强调了为提高成熟度水平的项目提供更好的支持和激励措施的必要性。最后，Pytorch执行董事Matt White以及CNCF的CTO Chris Aniszczyk和Linux基金会社区运营高级副总裁Todd Moore解决了Linux基金会和CNCF项目中AI创新的挑战和机遇。&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxctnymmwajmqi6qanhzd-dbugyy61u5f4jlbabzimvkwi7t5gn0fomkb ND9CDFU8KAYESGRYORGGGXXANWDVDNERHK1FERGG2CGDUYKC8IBSBKQPWMV3YKS1T7X2834V8PSV8PSV8PSVHY？ alt =“理事委员会会议” reverrerpolicy =“ no-treferrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; toc在Keynotes &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了通常的责任外，TOC在库贝肯主题演讲阶段也有惊人的存在。 Faseela K，Cloud Native Developer，Ericsson是Kubecon EU的联合主席，并主持了三天的主题演讲。 Kubecon Keynotes的第二天看到了Ricardo Rocha，计算机工程师，Cern和Katie Gamanji，Apple高级现场工程师，舞台上的高级现场工程师，分享了CNCF最终用户故事，从&lt;a href =“ https:///y/youtu.be/youtu.be/cer/cer3hecmgbk？si = 7trzfwjjyuvwjyuvwjyuvwwwwwwwwwwwwwwwwwwwwwwwwpkkim and cant and c。凯蒂（Katie）还是主题小组“ &lt;a href =” https://youtu.be/3mucc7asxn4?si = si = ik8haqhromqaodhl“&gt; cncf”&gt; cncf at 10 &lt;/a&gt;”官员，在思科。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxefehkfibccwbjgxwastfa_5drbage6wph6cbuufge2dlkbbqigxd4-wa-zp84-wa-zp815-sqlnwymgPBA8M5EOOA7SCYDNDMGSQXF8FAWKRJJ8MLIYGXMQ0OKVW4KW9WKW9WKONGSQUTSQUTS6OLXW？key = S2XH-ZMRFPBWL4W_ZMRFPBWL4W_Z0HQEBKC referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;第3天的主题演讲在舞台上有Faseela，并在“ &lt;a href =” https://www.youtube.com/watch?v=qj9q_-s91l8&gt;电信中的云本地进化&lt;/a&gt;中，最终用户橙色，Vodafone和Swisscom。&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxfjo3k8k8k8lw_8lw_8olwk-goxjxjxjx0bqekcat_gqijezezcjr_-cbcmqmcmq7wij7wij7wij7pufdv 6RQRIS4MZ0TMVOJ057TAUMRLX035TXFCNIJ64O6F2DBTWYRAXNI24XD4H_MJASW7DCTVUIP70TWWDMK？ alt =“第3天主题”“ referrerpolicy =“ no-treferrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC also had a solid keynote, “&lt;a href=&#34;https://youtu.be/TvhUer_XPFk?si=5EZ_lT0JRNuEUIpI&#34;&gt;221B Cloud Native Street&lt;/a&gt;,” which was led by Katie Gamanji and Ricardo Kocha and summarized all the topics that were under discussion for the previous days.他们在向更广泛的受众传递关键信息方面做得很好，包括项目成熟度，标签重新启动以及更多关注最终用户的需求。他们还讨论了将塑造CNCF生态系统未来的确定差距 - 基础架构提供和秘密管理围绕基础设施的多批量管理，成本管理和可持续性。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxc-u20luxyph75eagqbegqbegjtgtqccz1q8lvgr5yyyv4nlktzlktzlx7 ovol2r9xcr2r9xc 1TK9YGMNXTZZITQBK8WTRAGCMGN9R6KL8KTZVUZGKNKPAPG_L38C03WAS9SEMSAKQN_CP0PKJQSI9A？ alt =“ Kubecon + CloudNativeCon Europe 2025 Keynotes” referrerpolicy =“ no-Referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; toc sessions @kubecon &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了主题演讲外，TOC成员在会议上还有其他几次演讲，包括最后一天的TOC小组：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href=&#34;https://kccnceu2025.sched.com/event/1tx7l/quantum-ready-kubernetes-how-do-we-get-there-nikhita-raghunath-natalie-fish er-broadcom-nigel-jones-ibm-ricardo-rocha-cern-cern-tomas-gustavsson-keyfactor？iframe = yes＆w = 100％＆sidebar = yes＆bg = no Kubernetes：我们如何到达那里？ -  Nikhita Raghunath＆Natalie Fisher，Broadcom； Nigel Jones，IBM； Ricardo Rocha，Cern； Tomas Gustavsson，KeyFactor &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1tgws/discover-cncf-cncf-tag-tag-runtime-advancing-cloud-native-native-invation-innovation-from-ai-ai-ai-eed-dedge-dedge-ce----------rircardo-aravena-aravena-snow Flake-Stephen-Rust-Akamai-rajas-kokodkar-broadcom-alexander-kanevskiy-intel-intel-danielle-tal-tal-microsoft？ CNCF标签运行时间：从AI到Edge的云原始创新 -  Ricardo Aravena，Snowflake；斯蒂芬·鲁斯特（Stephen Rust），阿卡玛（Akamai）； Rajas Kokodkar，Broadcom；亚历山大·凯恩维斯基（Alexander Kanevskiy），英特尔； Danielle Tal，Microsoft &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ulclass =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1tcvu/project-lightning-lightning-talk-project-project-project-project-copacetic--jeremy-rickard-maintainer?iframe=yes=yes&amp;w=100;维护者&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1txcv/signed-sealed-delivered-sign-sign-sign-and-and-verify-verify-verify-all-the--thind-the---------------- jeRemy-rickard-microsoft？杰里米·里卡德（Jeremy Rickard），微软&lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tx7c/balancing-cost-and-efficiency-day2-optimization-of-multi-cluster-ai-infrastructure-kevin-wang-huawei?iframe=yes&amp;w=100%&amp;sidebar=yes&amp;bg=no&#34;&gt;Balancing Cost and Efficiency: Day2多批量AI基础架构的优化 - 凯文·王（Kevin Wang），华为&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1td1B/kubernetes-sig-architecture-intro-and-updates-john-belamaric-google-davanum-srinivas-aws?iframe=yes&amp;w=100%&amp;sidebar=yes&amp;bg=no&#34;&gt;Kubernetes SIG建筑介绍和更新 -  John Belamaric，Google和Davanum Srinivas，AWS &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href=&#34;https://kccnceu2025.sched.com/event/1tcxk/cloud-native-storage-and-data-the-cncf-storage-tag-projects-technology-landscape-raffaele-spazzoli-red-hat-alex-chircop-akamai?iframe=yes&amp;w=100%&amp;sidebar=yes&amp;bg=no&#34;&gt;Cloud Native Storage和数据：CNCF存储标签项目，技术和景观 -  Raffaele Spazzoli，Red Hat； Alex Chircop，Akamai &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1txes/stateful-superpowers-ecplore-high-performance-and-scalable-scalable-stateful-workl OADS-ON-K8S-ALEX-CHIRCOP-CHRIS-MILSTED-ALEX-REID-REID-AKAMAI-LORI-LORISSO-PERCONA？IFRAME = YES = YES＆W = 100％＆sidebar = yes＆BG = no超级大国：探索K8S上的高性能和可扩展的状态工作负载 -  Alex Chircop，Chris Milsted＆Alex Reid，Akamai； Lori Lorusso，Percona &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1txfn/izzy-saves-the-birthday-a-story-story-drive-live-demo-demo-exploring-the-magic-o f-Service-mesh-lin-sun-soloio-faseela-kundattil-ericsson-software-technology？iframe = yes＆w = 100％＆sidebar = yes＆bg = no挽救生日”  - 一个故事驱动的现场演示，探索服务网格的魔力 - 林太阳，solo.io＆faseela kundattil，爱立信软件技术&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1txex/journey-at-the-new-york-times-imes-is-sidecar-imes-sidecar-sidecar-sidecar-less-service-mesh-disappea环ininto-Infrastructure-lin-sun-soloio-ahmed-bebars-bebars-the-york-times？iframe = yes＆w = 100％＆sidebar = yes＆bg = no在《纽约时报》中：无助的服务网格是否消失在基础设施中？ - 林太阳，独奏。IO和Ahmed Bebars，《纽约时报》 &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1tczp/istio-theistio-the-past-past-present-pres---------------------------------------------------------------------该项目和社区的过去，现在和未来 -  lin Sun＆Louis Ryan，Solo.io；雷蒙德·黄（Raymond Wong），福布斯（Forbes）&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; TOC面板&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOC在最后一天还进行了小组讨论，以阐明库贝肯听众对我们的工作以及我们的优先事项的任何疑问或疑问。与标签重新启动倡议有关的问题有很多问题，并且担心是否会阻碍项目移动水平。总体而言，标签重新启动将有助于指导具有更好技术指导的项目，以在成熟度之间移动，并为最终用户采用做好准备。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;参考：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://www.cncf.io/people/technical-oversight-committee/”&gt;技术监督委员会| CNCF &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ http://github.com/cncf/toc”&gt; http://github.com/cncf/toc &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ http://github.com/cncf/tab”&gt; http://github.com/cncf/tab &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://github.com/cncf/toc/issues/1527”&gt; https://github.com/cncf/toc/toc/issues/1527 &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;/h3&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 15 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Managing multi-line logs with Fluent Bit and Python】使用Fluent lit和Python管理多行日志</title>
      <link>https://www.cncf.io/blog/2025/04/08/managing-multi-line-logs-with-fluent-bit-and-python/</link>
      <description>【&lt;p&gt;&lt;strong&gt;In this blog you will learn about:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;What makes multi-line logs challenging&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;How to configure a multi-line parser in Fluent Bit&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Choosing the right parsing approach&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Logs are essential for monitoring and debugging applications, but not all logs are created equal. While most logs follow a simple line-by-line format, others span multiple lines to improve readability. However, when mixed with other logs, these multi-line log entries can become challenging to parse and analyze. Important details can get lost in the noise without proper handling, making troubleshooting more time-consuming.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To address this challenge, Fluent Bit allows the consolidation of multi-line logs into a single structured entry. In this post, we’ll explore the complexities of multi-line logging, why it matters, and how to configure &lt;a href=&#34;https://docs.chronosphere.io/pipeline-data/plugins/source-plugins/fluent-bit?utm_source=CNCF&amp;amp;utm_medium=sponsored+content&#34;&gt;Fluent Bit&lt;/a&gt; to capture and manage these logs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Challenges with multi-line logs&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Why managing multi-line logs is challenging&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Unlike standard single-line &lt;a href=&#34;https://chronosphere.io/learn/audit-log-definition-guide/&#34;&gt;log &lt;/a&gt;entries, multi-line logs such as stack traces span multiple lines, making them harder to process and analyze.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Many &lt;a href=&#34;https://chronosphere.io/learn/your-introduction-to-log-collection/&#34;&gt;log&lt;/a&gt; processors treat each line separately, making debugging difficult, which causes critical information to become fragmented. This affects readability and makes troubleshooting harder since logs from various sources can mix, making it difficult to trace the full context of an error.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This fragmentation also makes it harder to filter, search, and correlate logs in monitoring tools. For example, in Elasticsearch, or any other logging platform, searching for a specific error message may return incomplete results because the full stack trace is split across multiple entries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Example: Python stack trace logs&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s an example of a typical Python exception log. When an exception occurs, Python outputs a detailed trace spanning multiple lines, showing where the error originated and how it propagated through the code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;python&#34; class=&#34;language-python&#34;&gt;2025-02-20 22:26:09,444 - ERROR - An error occurred:&#xA;Traceback (most recent call last):&#xA;  File &#34;/Users/final.py&#34;, line 25, in generate_errors&#xA;    5 / 0  # Intentional ZeroDivisionError&#xA;ZeroDivisionError: division by zero&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Each line would be treated as a separate log entry without proper multi-line log handling. In the image below, you can see how each stack trace line appears as an individual log entry.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;832&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98.jpg&#34; alt=&#34;Screenshot showing single python stack trace log on elastic&#34; class=&#34;wp-image-129682&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98.jpg 1600w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-300x156.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-1024x532.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-768x399.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-900x468.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-385x200.jpg 385w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-769x400.jpg 769w&#34; sizes=&#34;auto, (max-width: 1600px) 100vw, 1600px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To address this, we need a way to group related lines into a single log entry. The solution? Fluent Bit &lt;a href=&#34;https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/multiline-parsing&#34;&gt;Multi line Parser&lt;/a&gt; allows us to merge multi-line logs based on common patterns.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the next section, we’ll explore how to configure&lt;a href=&#34;https://chronosphere.io/fluent-bit/?utm_source=CNCF&amp;amp;utm_medium=sponsored+content&#34;&gt; Fluent Bit&lt;/a&gt; to handle multi-line logs effectively.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Multi-line parsing in Fluent Bit&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Parsing is the process of converting unstructured or raw text data into a structured format that is easier to process and analyze.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In Fluent Bit, a multi-line parser is a component that processes log messages spread across multiple lines, concatenating them into a single log entry based on specific rules defined by regular expressions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For example, the parser uses state and regex rules to detect the start of a multi-line message and then continues to capture subsequent lines that are part of the same message.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are two ways to configure a multi-line parser:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Built-in Multi-line Parser:&lt;/strong&gt; Without any extra configuration,&lt;a href=&#34;https://chronosphere.io/fluent-bit-academy/?utm_source=CNCF&amp;amp;utm_medium=sponsored+content&#34;&gt; Fluent Bit &lt;/a&gt;exposes certain pre-configured parsers (built-in) to solve specific multi-line parser cases like &lt;strong&gt;CRI, Python, Go, Docker, and Java&lt;/strong&gt;. Refer to this &lt;a href=&#34;https://github.com/fluent/fluent-bit/blob/master/conf/parsers.conf&#34;&gt;document&lt;/a&gt; to preview the built-in parser configuration.&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Configurable Multi-line Parser:&lt;/strong&gt; In addition to the built-in parsers listed above, you can define your own multi-line parsers with your rules through the configuration files.&lt;br&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To know more about multi-line parsers, refer to this&lt;a href=&#34;https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/multiline-parsing&#34;&gt; documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Parsing multi-line logs: Input stage vs. filter stage&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When working with multi-line log parsing in &lt;a href=&#34;https://chronosphere.io/learn/fluent-bit-vs-fluentd/?utm_source=CNCF&amp;amp;utm_medium=sponsored+content&#34;&gt;Fluent Bit&lt;/a&gt;, you have two primary options for where to handle the concatenation of related log lines: at the &lt;strong&gt;input stage&lt;/strong&gt; or the &lt;strong&gt;filter stage&lt;/strong&gt;. Each approach has distinct characteristics and performance implications. Let’s explore both.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;677&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99.jpg&#34; alt=&#34;FluentBit Telemetry Pipelines architecture&#34; class=&#34;wp-image-129684&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99.jpg 1600w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-300x127.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-1024x433.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-768x325.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-900x381.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-473x200.jpg 473w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-945x400.jpg 945w&#34; sizes=&#34;auto, (max-width: 1600px) 100vw, 1600px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Input stage multi-line parsing&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At the input stage, multi-line parsing is applied immediately after the data is ingested—for example, when using the tail input plugin to read log files. Here, the parser’s rules are used to group log lines that belong to the same context into a single record before any further processing occurs. This method ensures that the log’s complete structure is preserved from the moment of ingestion, making it ideal for scenarios where downstream processing (e.g., filtering, routing, or output formatting) depends on having the full log entry intact.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A key advantage of this approach is performance. Since concatenation happens as the log file is being read, it avoids the overhead of buffering and reprocessing later in the pipeline.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Filter stage multi-line parsing&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Alternatively, the &lt;strong&gt;multi-line filter&lt;/strong&gt; can be used to concatenate messages later in the pipeline. This filter is designed to reunite log lines that belong to a single context—like stack traces or multi-line application logs—but were split into separate records during ingestion.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;However, this approach comes with some nuances:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Performance Consideration:&lt;/strong&gt; Concatenating logs at the filter stage is less efficient than at the input stage. The Fluent Bit documentation recommends using the tail plugin’s multi-line support for log files whenever possible, as it processes logs during ingestion rather than after.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Buffering Behavior:&lt;/strong&gt; When the Buffer option is enabled, the filter holds messages until they’re fully concatenated or a timeout is reached. Without buffering, it processes one chunk at a time, which may not work well for inputs that send multi-line messages across separate chunks.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Pipeline Positioning:&lt;/strong&gt; The multi-line filter should be the first filter in your pipeline. Since it re-emits concatenated records to the pipeline’s head, any filters placed before it will process the logs twice—once before concatenation and once after. The filter ignores its own re-emitted records, but other filters won’t.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Single Filter Limitation:&lt;/strong&gt; You can’t configure multiple multi-line filters with overlapping tags, as this creates an infinite loop. Instead, use a single filter with a comma-separated list of parsers (e.g., multiline.parser = parser1,parser2).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Choosing the right approach&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;input stage parsing&lt;/strong&gt; (e.g., via tail) for log files or containerized logs where performance is critical, and the log structure is known at ingestion time.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use &lt;strong&gt;filter stage parsing&lt;/strong&gt; when logs are ingested as separate records (e.g., via a network input) and need to be recombined later or when you need flexibility to apply parsing rules after initial processing.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Multi-line logs are helpful for debugging but can complicate analysis if not managed properly. Fluent Bit provides a robust solution by consolidating these logs into single, structured entries with its multi-line parser, whether used at the input or filter stage. By selecting the right approach—input for performance or filter for flexibility—you can streamline troubleshooting and ensure critical details remain intact.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;This blog is the first in a two-part series. In the next installment we discuss in detail &lt;a href=&#34;https://chronosphere.io/learn/multiline-builtin-parsers-fluent-bit/?utm_source=CNCF&amp;amp;utm_medium=sponsored+content&#34;&gt;how to handle multi-line with built-in parsers in Fluent Bit&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; &lt;strong&gt;在此博客中，您将了解：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;是什么使多行日志具有挑战性&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;如何在Fluent位配置多行解析器&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;选择正确的解析方法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;简介&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;日志对于监视和调试应用程序至关重要，但并非所有日志都相等。尽管大多数日志都遵循简单的逐线格式，但其他日志却涵盖了多行以提高可读性。但是，当与其他日志混合时，这些多行日志条目可能会变得具有挑战性的解析和分析。重要的细节可能会在噪音中丢失而无需进行适当的处​​理，从而使故障排除更加耗时。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了应对这一挑战，Fluent位允许将多线日志整合到单个结构化条目中。 In this post, we’ll explore the complexities of multi-line logging, why it matters, and how to configure &lt;a href=&#34;https://docs.chronosphere.io/pipeline-data/plugins/source-plugins/fluent-bit?utm_source=CNCF&amp;utm_medium=sponsored+content&#34;&gt;Fluent Bit&lt;/a&gt; to capture and manage these日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ WP-block-heading”&gt; &lt;strong&gt;多行日志&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt; &lt;strong&gt;为什么管理多行日志&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与标准单行&lt;a href =“ https://chronosphere.io/lealen/audit-log-definition-guide/”&gt; log &lt;/a&gt;条目，多线日志（例如堆栈痕迹）跨越多行，使它们更难处理和分析。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;许多&lt;a href =“ https://chrronosphere.io/learn/your-indroduction-to-log-collection/”&gt; log &lt;/a&gt;处理器分别处理每条线，使调试变得困难，这会导致关键信息变得分散。这会影响可读性并使故障排除更加困难，因为来自各种来源的日志可能会混合，因此很难追踪错误的完整上下文。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种碎片也使在监视工具中过滤，搜索和关联日志变得更加困难。例如，在Elasticsearch或任何其他记录平台中，搜索特定错误消息可能会返回不完整的结果，因为完整的堆栈跟踪跨多个条目分开。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是典型的Python异常日志的示例。当发生异常时，Python输出了详细的跟踪跨越多行，显示了错误的起源以及如何通过代码传播。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code lang =“ python” class =“ landing-python”&gt; 2025-02-20 22：26：09,444-错误 - 发生错误 - 发生错误：&#xA;Trackback（最近的最新电话）：&#xA;  文件“/users/final.py”，第25行，在generate_errors中&#xA;    5/0＃故意ZerodivisionError&#xA;ZerodivisionError：零部门&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;每行将被视为单独的日志条目，而无需正确的多行日志处理。在图像中在下面，您可以看到每个堆栈跟踪线如何显示为单个日志条目。&lt;br&gt; &lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 1600” height =“ 832” src =“ https://www.cncf.io/wp-content/wp-content/wp-content/wploads/uploads/uploads/uploads/2025/2025/2025/04/unnemed-nameced-98.jpyn.jpynn.jpynhnnemnnemed-98堆栈跟踪弹性上的弹性“ class =” wp-image-129682“ srcset =” https://www.cncf.io/wp-content/uploads/2025/2025/04/unnamed-98.jpg 1600W， https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-300x156.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-1024x532.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-768x399.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-900x468.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-385x200.jpg 385w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-98-769x400.jpg 769w“ sizes =” sizes =“ auto，（max-width：max-width：1600px）100vw，100vw，1600px“ reverrerpolicerpolicy =” notrerpolicy =“ not-refifige”&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要解决这个问题，我们需要一种将相关行分组到单个日志条目中的方法。解决方案？流利的位&lt;a href =“ https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/multililine-parsing”&gt;多线解析器&lt;/a&gt;允许我们允许我们基于共同模式合并多线日志。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在下一节中，我们将探讨如何配置&lt;a href =“ https://chronosphere.io/fluent-bit/?utm_source=cncf&amp;utm_medium = sponsordsponsord+content”&gt; fluent &lt;/a&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;流利位&lt;/strong&gt; &lt;/h2&gt;的多行解析&#xA;&#xA;&#xA;&#xA;&lt;p&gt;解析是将非结构化或原始文本数据转换为易于处理和分析的结构化格式的过程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在Fluent位中，多行解析器是一个组件，该组件会处理分布在多行中的日志消息，将它们基于正则表达式定义的特定规则将它们连接到单个日志条目中。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;例如，解析器使用状态和正则规则来检测多行消息的开始，然后继续捕获是同一消息的一部分的后续行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有两种配置多行解析器的方法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;Built-in Multi-line Parser:&lt;/strong&gt; Without any extra configuration,&lt;a href=&#34;https://chronosphere.io/fluent-bit-academy/?utm_source=CNCF&amp;utm_medium=sponsored+content&#34;&gt; Fluent Bit &lt;/a&gt;exposes certain pre-configured parsers (built-in) to solve specific multi-line parser &lt;strong&gt; CRI，Python，Go，Docker和Java等案例&lt;/strong&gt;。请参阅此&lt;a href =“ https://github.com/fluent/fluent/fluent-bit/blob/master/conf/conf/parsers.conf”&gt;文档&lt;/a&gt; &lt;/a&gt;预览内置的parser配置。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;可配置的多行解析器：&lt;/strong&gt;除了上面列出的内置解析器外，您还可以通过配置文件来定义使用规则的多行解析器。&lt;br&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要了解有关多行解析器的更多信息，请参阅此&lt;a href =“ https://docs.fluentbit.io/manual/manual/administration/configuring-fluent-bit/multiline-parsing-”&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在&lt;a href =“ https://chronosphere.io/learn/learn/learn/learn/learn/learn/learn/learn/learn/learln/learln/learn/phluentd/?utm_source = cncf&amp;utm_medium = sponsored+content+content flogent for &lt;/a&gt;上，您可以在&lt;a的情况下，您可以在&lt;plogent上&lt;/a&gt;，&lt;p&gt; &lt;p&gt;阶段&lt;/strong&gt;或&lt;strong&gt;过滤期&lt;/strong&gt;。每种方法都有不同的特征和性能的影响。让我们探索这两个。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;677&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99.jpg&#34; alt=&#34;FluentBit Telemetry Pipelines架构“ class =” wp-image-129684“ srcset =” https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99.jpg 1600W， https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-300x127.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-1024x433.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-768x325.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-900x381.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-473x200.jpg 473w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-99-945x400.jpg 945w&#34;尺寸=“ auto，（最大宽度：1600px）100VW，1600px” referrerpolicy =“ no-toferrer”&gt; &lt;/fige&gt;&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;输入阶段多行解析&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在输入阶段，摄入数据后立即应用多行解析（例如，使用尾部输入插件读取日志文件时。在这里，解析器的规则用于在进行任何进一步处理之前将属于同一上下文的日志线分组为单个记录。此方法可确保从摄入时刻保留日志的完整结构，使其非常适合下游处理（例如，过滤，路由或输出格式）的场景，取决于完整的日志输入完整。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种方法的关键优势是性能。由于在读取日志文件时会发生串联，因此避免了在管道中进行缓冲和重新处理的开销。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;另外，&lt;strong&gt;多线过滤器&lt;/strong&gt;可用于稍后在管道中的串联消息。该过滤器旨在将属于单个上下文（例如堆栈轨迹或多行应用程序日志）重新整合日志线，但在摄入期间被分为单独的记录。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，这种方法带有一些细微差别：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;绩效考虑：&lt;/strong&gt; condenatin滤波器阶段的G log效率不如输入阶段。流利的位文档建议尽可能使用尾插件对日志文件的多行支持，因为它在摄入过程中而不是在摄入过程中进行日志。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;缓冲行为：&lt;/strong&gt;启用缓冲区选项时，过滤器将保留消息，直到完全串联或达到超时为止。没有缓冲，它一次处理一个块，这对于在单独块发送多行消息的输入中可能无法正常工作。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;管道定位：&lt;/strong&gt;多行滤波器应该是管道中的第一个过滤器。由于它重新显示了将记录串联到管道的头部，因此将其放置在其之前的任何过滤器都将处理日志两次 - 在串联之前和之后一次。该过滤器忽略了自己的重新发射记录，但其他过滤器不会。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;单滤波器限制：&lt;/strong&gt;您无法配置带有重叠标签的多个多行滤波器，因为这会创建一个无限的循环。相反，请使用带有逗号分隔的解析器列表的单个过滤器（例如Multiline.Parser = Parser1，Parser2）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;选择正确的方法&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;使用&lt;strong&gt;输入阶段解析&lt;/strong&gt;（例如，通过尾巴）用于日志文件或在摄入时间中已知的日志结构的日志结构。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用&lt;strong&gt;过滤阶段解析&lt;/strong&gt;当日志作为单独记录摄入时（例如，通过网络输入），需要以后或需要重新组合或需要灵活性来在初始处理后应用解析规则。&lt;/li&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;结论&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;多行日志有助于调试，但如果无法正确管理，可以使分析复杂化。 Fluent位通过将这些日志与其多行解析器（无论是在输入或过滤器阶段使用）合并为单个结构化条目，从而提供了强大的解决方案。通过选择正确的方法（用于性能或灵活性过滤的输入），您可以简化故障排除并确保关键细节保持完整。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;br&gt;此博客是两部分系列中的第一个。在下一篇文章中，我们详细讨论&lt;a href =“ https://chronosphere.io/learn/multiline-builtin-parsers-fluent-bit/?utm_source = cncf&amp;utm_medium = sponsordium = sponsored+content+content”&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 07 Apr 2025 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>