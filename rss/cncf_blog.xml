<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://rsshub.rssforever.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【KubeCon + CloudNativeCon North America 2024 co-located event deep dive: Cloud Native StartupFest】KubeCon + CloudNativeCon North America 2024 同期举办活动深入探讨：Cloud Native StartupFest</title>
      <link>https://www.cncf.io/blog/2024/11/04/kubecon-cloudnativecon-north-america-2024-co-located-event-deep-dive-cloud-native-startupfest/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;411&#34; height=&#34;144&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/11/CloudNativeStartUpFest_Logo_Horizontal_Color.svg&#34; alt=&#34;Logo&#34; class=&#34;wp-image-119872&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Co-chairs: Megan Reynolds, Kelsey Hightower&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;November 12, 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Salt Lake City, Utah&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At the &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/co-located-events/cloud-native-startupfest/&#34;&gt;Cloud Native StartupFest&lt;/a&gt; expect to get inspired by hearing from successful cloud native entrepreneurs, learn about some of the most exciting cloud native and OSS startups in the space, get a glimpse into the current state of fundraising, and receive guidance on how to take your idea from community adoption to success. The Cloud Native StartupFest first happened during KubeCon + CloudNativeCon North America 2023.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Who will get the most out of attending this event?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It’s for startup builders or anyone considering starting a company in the OSS or cloud native space&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What is new and different this year?&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Market conditions have become more challenging. Today it’s harder for any company to close customers and raise money so this year we are focusing more on how to navigate this new world as a startup builder. We have an all-star line-up of successful entrepreneurs and executives that will share their guidance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What will the day look like?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We have an afternoon session of talks and panels guided by our exceptional MC, Kelsey Hightower. We’ll make time for Q&amp;amp;A from the audience after every session to keep the day as interactive as possible.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Should I do any homework first?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Come prepared with any go-to-market challenges you’re facing right now to get feedback in the Q&amp;amp;A segments. It’s likely the speakers have experienced something similar and will be able to share advice.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Find your community!&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re over the moon about the caliber of speakers that have given their time to join us, there will be a lot to learn from all of them and we expect some spicy discussions!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Submitted by Megan Reynolds, who is looking forward to learning how new startups are adapting to the Generative AI wave and the impact that’s having on core enterprise infrastructure.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;Don’t forget to register&lt;/a&gt; for KubeCon + CloudNativeCon North America 2024.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“411”高度=“144”src=“https://www.cncf.io/ wp-content/uploads/2024/11/CloudNativeStartUpFest_Logo_Horizo​​ntal_Color.svg&#34; alt=&#34;Logo&#34; class=&#34;wp-image-119872&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;联合主席：Megan Reynolds、Kelsey Hightower&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;2024 年 11 月 12 日&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;犹他州盐湖城&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/co- located-events/cloud-native-startupfest/&#34;&gt;云原生启动节&lt;/a&gt;期待从成功的云原生企业家的演讲中获得灵感，了解该领域一些最令人兴奋的云原生和 OSS 初创公司，了解当前的筹款状况，并获得有关如何将您的想法从社区采用转化为实践的指导成功。云原生 StartupFest 首次在 KubeCon + CloudNativeCon North America 2023 期间举行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;谁将从参加本次活动中获益最多？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;它适用于初创公司构建者或任何考虑在 OSS 或云原生空间中创办公司的人&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;今年有什么新的和不同的？&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;市场状况变得更具挑战性。如今，任何公司都很难关闭客户并筹集资金，因此今年我们更多地关注如何作为初创公司建设者驾驭这个新世界。我们拥有由成功企业家和高管组成的全明星阵容，他们将分享他们的指导。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;这一天会是什么样子？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们在下午举行了会谈和​​小组讨论，由我们杰出的主持人凯尔西·海托尔 (Kelsey Hightower) 主持。每次会议结束后，我们都会腾出时间与观众进行问答，以尽可能保持当天的互动。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;我应该先做作业吗？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;做好准备应对您目前面临的任何上市挑战，以便在问答环节获得反馈。演讲者很可能经历过类似的事情，并且能够分享建议。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;找到您的社区！&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们对那些抽出时间加入我们的演讲者的才华感到欣喜若狂，从他们身上可以学到很多东西，我们期待一些激烈的讨论！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;由 Megan Reynolds 提交，她期待了解新的初创公司如何适应生成式 AI 浪潮及其对核心企业基础设施的影响。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;不要忘记注册&lt;/a&gt;参加 KubeCon + CloudNativeCon North America 2024。&lt;/ p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 03 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Mark your calendars: here come the 2025 Kubernetes Community Days!】标记你的日历：2025 年 Kubernetes 社区日来了！</title>
      <link>https://www.cncf.io/blog/2024/10/30/mark-your-calendars-here-come-the-2025-kubernetes-community-days/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;737&#34; height=&#34;758&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/10/image-7-e1730733661885.png&#34; alt=&#34;KCD 2025&#34; class=&#34;wp-image-119881&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/10/image-7-e1730733661885.png 737w, https://www.cncf.io/wp-content/uploads/2024/10/image-7-e1730733661885-292x300.png 292w, https://www.cncf.io/wp-content/uploads/2024/10/image-7-e1730733661885-194x200.png 194w, https://www.cncf.io/wp-content/uploads/2024/10/image-7-e1730733661885-389x400.png 389w&#34; sizes=&#34;(max-width: 737px) 100vw, 737px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This year, the CNCF refreshed the &lt;a href=&#34;https://www.cncf.io/kcds/&#34;&gt;KCD&lt;/a&gt; (Kubernetes Community Days) program for 2025, offering more support to our organizers and their communities, including, but not limited to, financial assistance, structural improvements, and organizational resources. You can read more about the motivations and specifics behind these updates &lt;a href=&#34;https://www.cncf.io/blog/2024/08/06/refreshing-the-kcd-program-a-new-chapter-in-community-building/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For those new to &lt;a href=&#34;https://www.cncf.io/kcds/&#34;&gt;Kubernetes Community Day&lt;/a&gt;, KCDs are community-led events where open source enthusiasts and cloud native technologists come together for education, collaboration, and networking. Originally launched during the pandemic, the program has seen remarkable growth, expanding from 12 events in 2021 to 35 this year! &amp;nbsp;These one- to two-day gatherings are locally-driven and supported by the CNCF to foster the growth of cloud native communities around the world.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Along with the above changes, there will now be a formal review process each year. With 61 outstanding submissions from around the world and only 30 spots available, selecting the hosts for KCDs in 2025 was no easy task.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A committee of six CNCF staff members reviewed all submissions. We narrowed down applications based on completeness, CNCF ambassador or maintainer involvement, community engagement, regional representation, event timing, past event quality, and organizer team strength—including diversity, collaboration, and Code of Conduct adherence. From vibrant tech hubs to emerging cloud native communities around the globe, the 2025 KCDs will take place in cities across North America, Latin America, Europe, Asia Pacific, and Africa. Here’s a look at where and when each event will be happening. Please keep in mind some dates are subject to change:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table is-style-stripes&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;In March – Beijing, China&lt;br&gt;March 16 – Guadalajara, Mexico&lt;br&gt;March 22 – Rio de Janeiro, Brazil&lt;br&gt;April 26 – Chennai, India&lt;br&gt;April 28 – Auckland, New Zealand&lt;br&gt;May 6 – Helsinki, Finland&lt;br&gt;May 8 – San Francisco, USA&lt;br&gt;May 15 – Austin, USA&lt;br&gt;May 22 – Seoul, South Korea&lt;br&gt;May 23 – Istanbul, Turkey&lt;br&gt;May 31 – Heredia, Costa Rica&lt;br&gt;In May – New York, USA&lt;br&gt;April 23 – Budapest, Hungary&lt;br&gt;July 3 – Utrecht, The Netherlands&lt;br&gt;June 5 – Bratislava, Slovakia&lt;/td&gt;&lt;td&gt;June 6 – Bangalore, India&lt;br&gt;June 14 – Antigua Guatemala, Guatemala&amp;nbsp;&lt;br&gt;June 19 – Nigeria, Africa&lt;br&gt;July 5 – Taipei, Taiwan&lt;br&gt;July 19 – Lima, Perú&lt;br&gt;August 29 – Bogota, Colombia&lt;br&gt;September 9 – Washington DC, USA&amp;nbsp;&lt;br&gt;September 18 – Sofia, Bulgaria&lt;br&gt;September 20 – San Salvador, El Salvador&lt;br&gt;September 26 – Porto, Portugal&lt;br&gt;October 3 – Warsaw, Poland&lt;br&gt;October 8 – Colombo, Sri Lanka&lt;br&gt;October 21 – Edinburgh, UK&lt;br&gt;3rd fiscal quarter – Hangzhou, China&lt;br&gt;December 5 – Geneva, Switzerland&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thank you to all who submitted and contributed to this thriving program—we’re looking forward to an exciting 2025 with you!&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“737”高度=“758”src=“https://www.cncf.io/ wp-content/uploads/2024/10/image-7-e1730733661885.png&#34; alt=&#34;KCD 2025&#34; class=&#34;wp-image-119881&#34; srcset=&#34;https://www.cncf.io/wp-content/ uploads/2024/10/image-7-e1730733661885.png 737w，https://www.cncf.io/wp-content/uploads/2024/10/image-7-e1730733661885-292x300.png 292w，https:// www.cncf.io/wp-content/uploads/2024/10/image-7-e1730733661885-194x200.png 194w，https://www.cncf.io/wp-content/uploads/2024/10/image-7 -e1730733661885-389x400.png 389w“尺寸=”（最大宽度：737px）100vw，737px“referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今年，CNCF 更新了 2025 年 &lt;a href=&#34;https://www.cncf.io/kcds/&#34;&gt;KCD&lt;/a&gt;（Kubernetes 社区日）计划，为我们的组织者和参与者提供更多支持他们的社区，包括但不限于财政援助、结构改进和组织资源。您可以阅读有关这些更新背后的动机和细节的更多信息 &lt;a href=&#34;https://www.cncf.io/blog/2024/08/06/refreshing-the-kcd-program-a-new-chapter-in -社区建设/&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于&lt;a href=&#34;https://www.cncf.io/kcds/&#34;&gt;Kubernetes 社区日&lt;/a&gt;的新手来说，KCD 是社区主导的活动，开源爱好者和云原生技术专家齐聚一堂用于教育、协作和网络。该计划最初在疫情期间启动，现已取得显着增长，从 2021 年的 12 项活动扩大到今年的 35 项！  这些为期一到两天的聚会由本地推动并由 CNCF 支持，旨在促进世界各地云原生社区的发展。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了上述变化之外，现在每年都会有一个正式的审核流程。来自世界各地的 61 份优秀参赛作品和仅 30 个名额，选择 2025 年 KCD 主办方并非易事。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;由六名 CNCF 工作人员组成的委员会审查了所有提交的内容。我们根据完整性、CNCF 大使或维护者参与、社区参与、区域代表性、活动时间、过去的活动质量和组织者团队实力（包括多样性、协作和行为准则遵守情况）缩小了申请范围。从充满活力的技术中心到全球新兴的云原生社区，2025 年 KCD 将在北美、拉丁美洲、欧洲、亚太和非洲的城市举行。以下是每个事件发生的地点和时间。请记住，某些日期可能会发生变化：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table is-style-stripes&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;3 月 – 中国北京&lt;br&gt;3 月 16 日 –墨西哥瓜达拉哈拉&lt;br&gt;3 月 22 日 – 巴西里约热内卢&lt;br&gt;4 月 26 日 – 印度金奈&lt;br&gt;4 月 28 日 – 新西兰奥克兰&lt;br&gt;5 月 6 日 – 芬兰赫尔辛基&lt;br&gt;5 月 8 日 – 旧金山，美国&lt;br&gt;5 月 15 日 – 美国奥斯汀&lt;br&gt;5 月 22 日 – 韩国首尔&lt;br&gt;5 月 23 日 – 土耳其伊斯坦布尔urkey&lt;br&gt;5月31日 – 哥斯达黎加埃雷迪亚&lt;br&gt;5月 – 美国纽约&lt;br&gt;4月23日 – 匈牙利布达佩斯&lt;br&gt;7月3日 – 荷兰乌得勒支&lt;br&gt;6月5日 – 斯洛伐克布拉迪斯拉发&lt; /td&gt;&lt;td&gt;6 月 6 日 – 印度班加罗尔&lt;br&gt;6 月 14 日 – 危地马拉安提瓜岛&lt;br&gt;6 月 19 日 – 非洲尼日利亚&lt;br&gt;7 月 5 日 – 台湾台北&lt;br&gt;7 月 19 日 – 秘鲁利马&lt; br&gt;8 月 29 日 – 哥伦比亚波哥大&lt;br&gt;9 月 9 日 – 美国华盛顿&lt;br&gt;9 月 18 日 – 保加利亚索非亚&lt;br&gt;9 月 20 日 – 萨尔瓦多圣萨尔瓦多&lt;br&gt;9 月 26 日 – 葡萄牙波尔图&lt;br&gt; 10 月 3 日 – 波兰华沙&lt;br&gt;10 月 8 日 – 斯里兰卡科伦坡&lt;br&gt;10 月 21 日 – 英国爱丁堡&lt;br&gt;第三财季 – 中国杭州&lt;br&gt;12 月 5 日 – 瑞士日内瓦&lt;/td&gt;&lt;/ tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢所有提交并为这个蓬勃发展的计划做出贡献的人 - 我们期待与您一起度过激动人心的 2025 年！&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 29 Oct 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【KubeCon + CloudNativeCon North America 2024 co-located event deep dive: ArgoCon】KubeCon + CloudNativeCon North America 2024 同期举办活动深入探讨：ArgoCon</title>
      <link>https://www.cncf.io/blog/2024/10/31/kubecon-cloudnativecon-north-america-2024-co-located-event-deep-dive-argocon/</link>
      <description>【&lt;p&gt;&lt;em&gt;Co-chairs:&lt;/em&gt;&lt;strong&gt;&lt;em&gt; &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;Christian Hernandez, Dan Garfield, Tim Collins&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;November 12, 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Salt Lake City, Utah&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Argo Project consists of 4 related, but separate, toolsets. So it’s not just about GitOps, but a wide variety of use cases from platform engineering, AI, CI/CD, and general cloud-native management. We strive to load the event with as many end user stories as possible in order to facilitate community engagement and the sharing of ideas. So from learning what others are doing or just general networking, &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/co-located-events/argocon/&#34;&gt;ArgoCon&lt;/a&gt; is uniquely positioned to offer things for a wide variety of talks for folks from various industries/backgrounds.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ArgoCon has been around since 2021! Initially, ArgoCon started out as a virtual event and the inaugural event took place in 2021. Following the success of ArgoCon 2021, we held a stand alone event that was hosted by the CNCF. ArgoCon 2022 happened, in person, at the Computer Science Museum in Mountain View California. Starting in 2023, ArgoCon has been a co-located event with KubeCon for both North America and Europe. Happening twice a year, each time with multiple tracks, speaks to the popularity of the Argo Project.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Who will get the most out of attending this event?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Those who are interested in infrastructure management, AI workflows, DevOps engineers, and release managers. Really, there’s a variety of talks since the Argo Project toolsets span multiple use cases. We have to say that if you’re into operationalizing Kubernetes, you’ll definitely want to check out ArgoCon&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What is new and different this year?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This year we have a very special surprise for everyone, we will be playing the trailer for the Argo Project Documentary that will be premiering (in its entirety) at KubeCon. Our attendees this year in Salt Lake will get a special sneak peek teaser before it’s premiered later during KubeCon.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What will the day look like?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The event will take place in Salt Lake City Co-located with KubeCon. Best way to attend is to add the “all access pass” when registering for KubeCon. It’s one day, multiple tracks, so you’ll have plenty to choose from during the event. After the event there will be a networking event where you can meet with others, connect, and talk about the day.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Should I do any homework first?&amp;nbsp;&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Definitely go to &lt;a href=&#34;https://argoproj.github.io/&#34;&gt;the project&lt;/a&gt; and familiarize yourself with each tool and what their focus is on. Go through any tutorials that you may have time for.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Find your community!&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re excited to keep the momentum going for ArgoCon! Putting on this event has been a culmination of a lot of hard work from the community. We wouldn’t be able to do an event like this without the help of countless people. It’s really an event &lt;em&gt;for&lt;/em&gt; the community and we’re excited for all who attend.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Submitted by Christian Hernandez who, along with the other co-chairs, is really looking forward to the premier of &lt;/em&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/program/experiences/#inside-argo-a-documentary-film-world-premiere&#34;&gt;&lt;em&gt;the Argo Documentary&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;Don’t forget to register&lt;/a&gt; for KubeCon + CloudNativeCon North America 2024.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;联合主席：&lt;/em&gt;&lt;strong&gt;&lt;em&gt; &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;克里斯蒂安·埃尔南德斯、丹·加菲尔德、蒂姆·柯林斯&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;2024 年 11 月 12 日&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;犹他州盐湖城&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Argo 项目由 4 个相关但独立的工具集组成。因此，这不仅仅涉及 GitOps，还涉及平台工程、人工智能、CI/CD 和一般云原生管理的各种用例。我们努力在活动中提供尽可能多的最终用户故事，以促进社区参与和想法分享。因此，通过了解其他人在做什么或只是一般网络，&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/co- located-events/argocon/&#34;&gt;ArgoCon&lt;/a&gt;具有独特的优势，可以为来自不同行业/背景的人们提供各种演讲的内容。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ArgoCon 自 2021 年以来一直存在！最初，ArgoCon 最初是一场虚拟活动，首届活动于 2021 年举行。继 ArgoCon 2021 取得成功之后，我们举办了一场由 CNCF 主办的独立活动。 ArgoCon 2022 在加利福尼亚州山景城计算机科学博物馆现场举行。从 2023 年开始，ArgoCon 与 KubeCon 在北美和欧洲同期举办。每年举办两次，每次都有多个曲目，这说明了 Argo 计划的受欢迎程度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;谁将从参加本次活动中获益最多？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对基础设施管理、AI 工作流程、DevOps 工程师和发布经理感兴趣的人。事实上，由于 Argo 项目工具集跨越多个用例，因此存在各种各样的讨论。我们不得不说，如果您想实施 Kubernetes，您一定会想看看 ArgoCon&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;今年有什么新的和不同的？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今年我们为大家准备了一个非常特别的惊喜，我们将播放 Argo 项目纪录片的预告片，该纪录片将在 KubeCon 上首映（完整）。我们今年在盐湖城的与会者将在 KubeCon 期间首映之前先睹为快。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;这一天会是什么样子？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该活动将在盐湖城与 KubeCon 同一地点举行。参加 KubeCon 的最佳方式是在注册 KubeCon 时添加“所有访问通行证”。一天有多个曲目，因此您在活动期间将有很多选择。活动结束后，将举行一个社交活动，您可以在其中与其他人见面、交流并谈论这一天。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;我应该先做作业吗？ &lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一定要去&lt;a href=&#34;https://argoproj.github.io/&#34;&gt;项目&lt;/a&gt;并熟悉每个工具及其重点。浏览您可能有时间的任何教程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;找到您的通讯团结！&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们很高兴能够保持 ArgoCon 的势头！此次活动的举办是社会各界辛勤工作的结晶。如果没有无数人的帮助，我们不可能举办这样的活动。这确实是社区的一次活动，我们为所有参加者感到兴奋。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;由 Christian Hernandez 提交，他与其他联合主席一起非常期待 &lt;/em&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon 的首映-north-america/program/experiences/#inside-argo-a-documentary-film-world-premiere&#34;&gt;&lt;em&gt;阿尔戈纪录片&lt;/em&gt;&lt;/a&gt;&lt;em&gt;。&lt;/em&gt;&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;不要忘记注册&lt;/a&gt;参加 KubeCon + CloudNativeCon North America 2024。&lt;/ p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 30 Oct 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【OpenCost advances to the CNCF Incubator】OpenCost 进入 CNCF 孵化器</title>
      <link>https://www.cncf.io/blog/2024/10/31/opencost-advances-to-the-cncf-incubator/</link>
      <description>【&lt;p&gt;&lt;em&gt;Cross-posted on the &lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation&#34;&gt;OpenCost blog&lt;/a&gt; by &lt;a href=&#34;https://github.com/AjayTripathy&#34;&gt;Ajay Tripathy&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://www.opencost.io/assets/images/10312024_blog__header-0fd4b4de1cd38c0d68ec0c2797e6168f.png&#34; alt=&#34;OpenCost Advances to CNCF Incubation&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The OpenCost project proudly announces that we’ve reached CNCF Incubating status! This milestone in our journey underscores the significant dedication the project has received from the community that contributes to OpenCost. We’d like to thank the developers, Kubernetes practitioners, and FinOps teams from organizations across the globe that continue to make this project meaningful.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cloud-native adoption continues accelerating, and the need for clear, manageable insights into Kubernetes costs keeps pace. OpenCost addresses this need as an open-source tool designed to make Kubernetes cost management more accessible and standardized. Initially launched through a collaborative effort led by Kubecost and supported by experts from organizations like Amazon, Adobe, Google, Microsoft, and SUSE, OpenCost was welcomed into the CNCF Sandbox to improve cost management for Kubernetes. Our promotion to CNCF Incubation reflects strong community support and the important challenges it seeks to address.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-importance-of-opencost&#34;&gt;The Importance of OpenCost&lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation#the-importance-of-opencost&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenCost fills a critical gap by providing real-time visibility into Kubernetes costs across multi-cloud environments. With its vendor-neutral framework, OpenCost enables teams to allocate costs by Kubernetes service, deployment, container, and more. By standardizing cost allocation, OpenCost helps reduce cost overruns and gives teams a trusted model for budget planning, regardless of whether they use AWS, Google Cloud, Microsoft Azure, or on-premises infrastructure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;from-sandbox-to-incubating&#34;&gt;From Sandbox to Incubating&lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation#from-sandbox-to-incubating&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Progressing from Sandbox to Incubation within the CNCF represents a vote of confidence from the cloud-native and open-source communities. Projects that reach this status are celebrated for their innovation and reliability, and they signal the potential for widespread adoption. For OpenCost, this transition validates our project’s solutions to Kubernetes cost challenges and recognizes the tool as becoming foundational for Kubernetes cost management at scale.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;key-milestones-for-opencost&#34;&gt;Key Milestones for OpenCost&lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation#key-milestones-for-opencost&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenCost’s growth has been remarkable. Here are some notable highlights:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Broader Platform Integration: OpenCost has integrated with major cloud providers’ billing APIs and supports Prometheus for seamless cost data exporting.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Community-Driven Development: A diverse group of contributors from Adobe, Google, SUSE, and many others have significantly contributed to refining OpenCost, with frequent releases that keep it flexible, effective, and secure.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Open Source Plugin Framework:&amp;nbsp;&lt;a href=&#34;https://github.com/opencost/opencost-plugins&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenCost Plugins&lt;/a&gt;&amp;nbsp;were added to allow for cost monitoring of tools and services like Datadog, OpenAI, and MongoDB Atlas.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;FinOps Certification: By aligning with the FinOps Foundation, OpenCost supports Kubernetes FinOps practitioners seeking to optimize their Kubernetes costs.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;opencost-momentum&#34;&gt;OpenCost Momentum&lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation#opencost-momentum&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As an Incubating project, OpenCost’s future is bright and filled with opportunities to expand its capabilities. We look forward to developing new integrations, refining real-time cost monitoring, and offering deeper support for multi-cloud and hybrid-cloud environments. Our progress depends on the community of users, and we invite anyone interested in Kubernetes cost management to join us in building a sustainable, transparent future for Kubernetes operations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;help-shape-the-future-of-opencost&#34;&gt;Help Shape the Future of OpenCost&lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation#help-shape-the-future-of-opencost&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenCost is powered by the passion and expertise of our community. We encourage you to explore OpenCost on&amp;nbsp;&lt;a href=&#34;https://github.com/opencost&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt;&amp;nbsp;and chat with us on&amp;nbsp;&lt;a href=&#34;https://cloud-native.slack.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CNCF Slack&lt;/a&gt;. Together, we’re creating an essential tool for Kubernetes teams worldwide, helping them manage cloud costs more effectively and transparently. Are you going to Kubecon NA 2024? Stop to say ‘hi’ at the OpenCost kiosk in the CNCF Project Pavillion.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;由 &lt;a href=&#34;https://github 交叉发布在 &lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation&#34;&gt;OpenCost 博客&lt;/a&gt;上.com/AjayTripathy&#34;&gt;Ajay Tripathy&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://www.opencost.io/assets/images/10312024_blog__header-0fd4b4de1cd38c0d68ec0c2797e6168f.png&#34; alt=&#34;OpenCost 推进 CNCF 孵化“referrerpolicy =“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenCost 项目自豪地宣布我们已达到 CNCF 孵化状态！我们旅程中的这一里程碑强调了该项目从为 OpenCost 做出贡献的社区中获得的巨大奉献。我们要感谢来自全球各地组织的开发人员、Kubernetes 从业者和 FinOps 团队，他们不断让这个项目变得有意义。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;云原生的采用持续加速，并且对 Kubernetes 成本进行清晰、可管理的洞察的需求也在不断增长。 OpenCost 作为一个开源工具满足了这一需求，旨在使 Kubernetes 成本管理更易于访问和标准化。 OpenCost 最初是由 Kubecost 领导的协作项目推出，并得到 Amazon、Adobe、Google、Microsoft 和 SUSE 等组织的专家的支持，并受到 CNCF 沙盒的欢迎，以改善 Kubernetes 的成本管理。我们晋升 CNCF 孵化器反映了社区的大力支持及其寻求解决的重要挑战。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-importance-of-opencost&#34;&gt;OpenCost 的重要性&lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation#the-开放成本的重要性&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenCost 通过提供跨多云环境的 Kubernetes 成本实时可见性来填补关键空白。凭借其供应商中立的框架，OpenCost 使团队能够通过 Kubernetes 服务、部署、容器等来分配成本。通过标准化成本分配，OpenCost 有助于减少成本超支，并为团队提供值得信赖的预算规划模型，无论他们使用 AWS、Google Cloud、Microsoft Azure 还是本地基础设施。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;from-sandbox-to-incubating&#34;&gt;从沙盒到孵化&lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation#from-沙箱到孵化&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF 内从沙盒到孵化的进展代表了云原生和开源社区的信任票。达到这一地位的项目因其创新性和可靠性而受到赞誉，它们标志着广泛采用的潜力。对于 OpenCost 来说，这一转变验证了我们项目针对 Kubernetes 成本挑战的解决方案，并认识到该工具已成为大规模 Kubernetes 成本管理的基础。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;key-milestones-for-opencost&#34;&gt;OpenCost 的关键里程碑&lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation#key- opencost 的里程碑&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenCost 的增长非常显着。这里有一些值得注意的亮点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;更广泛的平台集成：OpenCost 已与主要云提供商的计费 API 集成，并支持 Prometheus 实现无缝成本数据导出。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;社区驱动的开发：来自 Adob​​e、Google、SUSE 和许多其他公司的多元化贡献者群体为完善 OpenCost 做出了重大贡献，频繁的发布使其保持灵活、有效和安全。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;开源插件框架：添加了&lt;a href=&#34;https://github.com/opencost/opencost-plugins&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenCost 插件&lt;/a&gt;，以允许Datadog、OpenAI 和 MongoDB Atlas 等工具和服务的成本监控。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;FinOps 认证：通过与 FinOps 基金会合作，OpenCost 为寻求优化 Kubernetes 成本的 Kubernetes FinOps 从业者提供支持。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;opencost-momentum&#34;&gt;OpenCost 势头&lt;a href=&#34;https://www.opencost.io/blog/cncf-incubation#opencost-momentum&#34;&gt;&lt;/a &gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;作为一个孵化项目，OpenCost 的未来是光明的，并且充满了扩展其能力的机会。我们期待开发新的集成，完善实时成本监控，并为多云和混合云环境提供更深入的支持。我们的进步取决于用户社区，我们邀请任何对 Kubernetes 成本管理感兴趣的人加入我们，为 Kubernetes 运营构建可持续、透明的未来。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;help-shape-the-future-of-opencost&#34;&gt;帮助塑造 OpenCost 的未来&lt;a href=&#34;https://www.opencost.io/blog/ cncf-incubation#help-shape-the-future-of-opencost&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenCost 的动力源自我们社区的热情和专业知识。我们鼓励您在 &lt;a href=&#34;https://github.com/opencost&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt; 上探索 OpenCost，并在 &lt;a href=&#34;https 上与我们聊天://cloud-native.slack.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CNCF Slack&lt;/a&gt;。我们正在共同为全球 Kubernetes 团队创建一个重要的工具，帮助他们更有效、更透明地管理云成本。您要去 Kubecon NA 2024 吗？在 CNCF 项目展馆的 OpenCost 信息亭停下来打个招呼。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 30 Oct 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Ansible-runner】Ansible-runner</title>
      <link>https://www.cncf.io/blog/2024/10/31/ansible-runner/</link>
      <description>【&lt;p&gt;&lt;em&gt;Originally published on the &lt;a href=&#34;https://www.redpill-linpro.com/techblog/2024/02/27/ansible-runner.html&#34;&gt;Redpill Linpro blog&lt;/a&gt; by Daniel Buøy-Vehn&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The command&amp;nbsp;&lt;code&gt;ansible-runner&lt;/code&gt;&amp;nbsp;is part of the Ansible automation platform. If you have got installed Ansible, then you probably have already installed&amp;nbsp;&lt;code&gt;ansible-runner&lt;/code&gt;&amp;nbsp;as well.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But what do you use it for? Well, if you run AWX or the Ansible Automation platform package somewhere in your environment,&amp;nbsp;&lt;code&gt;ansible-runner&lt;/code&gt;&amp;nbsp;is part of the magic in the background and running your code. It is also a python library that can connect your code directly to Ansible and provides an abstraction interface with it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For those who do not want to go into Python programming just to play with Ansible,&amp;nbsp;&lt;code&gt;ansible-runner&lt;/code&gt;&amp;nbsp;also has some other useful purposes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can use to encapsulate a single Ansible run including all required variables and settings into a single environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Instead of a playbook,&amp;nbsp;&lt;code&gt;ansible-runner&lt;/code&gt;&amp;nbsp;requires a project folder which then contains the required data for the Ansible run.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We create a quick setup in the&amp;nbsp;&lt;code&gt;/tmp/ansible-runner&lt;/code&gt;&amp;nbsp;directory just for giving an example. Something like this is already enough:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ tree&#xA;.&#xA;├── inventory&#xA;│&amp;nbsp;&amp;nbsp; └── hosts&#xA;└── project&#xA;    └── playbook.yml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;# playbook.yml&#xA;---&#xA;- name: Example playbook&#xA;  hosts: all&#xA;  tasks:&#xA;    - name: Debug output&#xA;      ansible.builtin.debug:&#xA;        msg: &#34;The code runs.&#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;# inventor/hosts&#xA;localhost ansible_connection=local&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With these files in place, you can do this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ ansible-runner run /tmp/ansible-runner --playbook playbook.yml&#xA;PLAY [Example playbook] ********************************************************&#xA;&#xA;TASK [Gathering Facts] *********************************************************&#xA;tirsdag 27 februar 2024  14:01:03 +0100 (0:00:00.010)       0:00:00.010 *******&#xA;tirsdag 27 februar 2024  14:01:03 +0100 (0:00:00.010)       0:00:00.010 *******&#xA;ok: [localhost]&#xA;&#xA;TASK [Debug output] ************************************************************&#xA;tirsdag 27 februar 2024  14:01:04 +0100 (0:00:01.068)       0:00:01.079 *******&#xA;tirsdag 27 februar 2024  14:01:04 +0100 (0:00:01.068)       0:00:01.078 *******&#xA;ok: [localhost] =&amp;gt; {&#xA;    &#34;msg&#34;: &#34;The code runs.&#34;&#xA;}&#xA;&#xA;PLAY RECAP *********************************************************************&#xA;localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0&#xA;Playbook run took 0 days, 0 hours, 0 minutes, 1 seconds&#xA;tirsdag 27 februar 2024  14:01:04 +0100 (0:00:00.042)       0:00:01.122 *******&#xA;===============================================================================&#xA;Gathering Facts --------------------------------------------------------- 1.07s&#xA;Debug output ------------------------------------------------------------ 0.04s&#xA;tirsdag 27 februar 2024  14:01:04 +0100 (0:00:00.043)       0:00:01.122 *******&#xA;===============================================================================&#xA;gather_facts ------------------------------------------------------------ 1.07s&#xA;ansible.builtin.debug --------------------------------------------------- 0.04s&#xA;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;total ------------------------------------------------------------------- 1.11s&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;code&gt;ansible-runner&lt;/code&gt;&amp;nbsp;per default assumes playbooks to be placed in the subdirectory&amp;nbsp;&lt;code&gt;./project&lt;/code&gt;&amp;nbsp;(this can be changed of course). The hosts in&amp;nbsp;&lt;code&gt;inventory/hosts&lt;/code&gt;&amp;nbsp;are loaded automatically and the playbook executed against them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;All other settings required for an Ansible run, like secrets, environment variables or SSH keys for accessing hosts, can also be provided within the project directory structure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Roles just like playbooks go into the&amp;nbsp;&lt;code&gt;./project&lt;/code&gt;&amp;nbsp;directory.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The outcome of the Ansible run creates a new directory in the project directory (not&amp;nbsp;&lt;code&gt;./project&lt;/code&gt;, but the one above it) called&amp;nbsp;&lt;code&gt;./artifacts&lt;/code&gt;. This directory contains all results, data and events that occured during the Ansible run in a parse-able and human-readable form.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With the proper configuration and settings, you can create encapsulated code environments, that can be deployed to a container or a remote system and the result can be parsed on for further use in e.g. a CICD pipeline.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Unfortunately there are just too many parameters for a single blog entry to go into the depth of what&amp;nbsp;&lt;code&gt;ansible-runner&lt;/code&gt;&amp;nbsp;can do.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Take a look into the Ansible Runner demo repository&lt;sup&gt;&lt;a href=&#34;https://www.redpill-linpro.com/techblog/2024/02/27/ansible-runner.html#fn:ansible_demo&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&amp;nbsp;to get an easy start and some more guidance. Have fun playing with it!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;https://github.com/ansible/ansible-runner/tree/devel/demo&amp;nbsp;&lt;a href=&#34;https://www.redpill-linpro.com/techblog/2024/02/27/ansible-runner.html#fnref:ansible_demo&#34;&gt;↩&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Author: &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://www.redpill-linpro.com/techblog/images/authors/dbv.jpg&#34; alt=&#34;Daniel headshot&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Daniel Buøy-Vehn&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Senior Systems Consultant at Redpill&amp;nbsp;Linpro&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Daniel works with automation in the realm of Ansible, AWX, Tower, Terraform and Puppet. He rolls out mainly to our customer in Norway to assist them with the integration and automation projects.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;最初发布于 &lt;a href=&#34;https://www.redpill-linpro.com/techblog/2024/02/27/ansible-runner.html&#34;&gt;Redpill Linpro 博客&lt;/a&gt;，作者：丹尼尔·布伊-维恩&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;命令&lt;code&gt;ansible-runner&lt;/code&gt;是 Ansible 自动化平台的一部分。如果您已经安装了 Ansible，那么您可能也已经安装了 &lt;code&gt;ansible-runner&lt;/code&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是你用它做什么呢？那么，如果您在环境中的某个位置运行 AWX 或 Ansible Automation 平台包，&lt;code&gt;ansible-runner&lt;/code&gt; 就是后台运行代码的神奇部分。它也是一个 python 库，可以将您的代码直接连接到 Ansible 并为其提供抽象接口。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于那些不想仅仅为了玩 Ansible 而进入 Python 编程的人来说，&lt;code&gt;ansible-runner&lt;/code&gt; 还有一些其他有用的用途。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以用于将单个 Ansible 运行（包括所有必需的变量和设置）封装到单个环境中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;code&gt;ansible-runner&lt;/code&gt; 需要一个项目文件夹，而不是剧本，其中包含 Ansible 运行所需的数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们在 &lt;code&gt;/tmp/ansible-runner&lt;/code&gt; 目录中创建一个快速设置，仅供参考。这样的事情已经足够了：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ 树&#xA;。&#xA;├── 库存&#xA;│   └── 主持人&#xA;└── 项目&#xA;    └── playbook.yml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;# playbook.yml&#xA;---&#xA;- 名称：示例剧本&#xA;  主办方：全部&#xA;  任务：&#xA;    - 名称：调试输出&#xA;      ansible.builtin.debug：&#xA;        msg：“代码运行。”&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;# 发明者/主机&#xA;本地主机 ansible_connection=本地&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有了这些文件，您可以执行以下操作：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ ansible-runner run /tmp/ansible-runner --playbook playbook.yml&#xA;播放 [示例剧本] ************************************************* **********&#xA;&#xA;任务 [收集事实] ************************************************* **********&#xA;蒂尔斯达 2024 年 2 月 27 日 14:01:03 +0100 (0:00:00.010) 0:00:00.010 ********&#xA;蒂尔斯达 2024 年 2 月 27 日 14:01:03 +0100 (0:00:00.010) 0:00:00.010 ********&#xA;好的：[本地主机]&#xA;&#xA;任务 [调试输出] ************************************************* **************&#xA;蒂尔斯达 2024 年 2 月 27 日 14:01:04 +0100 (0:00:01.068) 0:00:01.079 ********&#xA;蒂尔斯达 2024 年 2 月 27 日 14:01:04 +0100 (0:00:01.068) 0:00:01.078 ********&#xA;好的：[本地主机] =&gt; {&#xA;    &#34;msg&#34;: &#34;代码运行。&#34;&#xA;}&#xA;&#xA;播放回顾**************************************************** **********************&#xA;本地主机：确定=2更改=0无法访问=0失败=0跳过=0救援=0忽略=0&#xA;Playbook 运行耗时 0 天、0 小时、0 分钟、1 秒&#xA;蒂尔斯达 2024 年 2 月 27 日 14:01:04 +0100 (0:00:00.042) 0:00:01.122 ********&#xA;================================================================== =============&#xA;收集事实------------------------------------------------ --------- 1.07秒&#xA;调试输出------------------------------------------------ ------------ 0.04秒&#xA;蒂尔斯达 2024 年 2 月 27 日 14:01:04 +0100 (0:00:00.043) 0:00:01.122 ********&#xA;=================================================== =============================&#xA;收集事实 ------------------------------------------------- ----------- 1.07秒&#xA;ansible.builtin.debug --------------------------------------------------------- ------ 0.04秒&#xA;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;全部的  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - - ------------------ 1.11秒&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;code&gt;ansible-runner&lt;/code&gt; 默认情况下假定 playbook 放置在子目录 &lt;code&gt;./project&lt;/code&gt; 中（当然可以更改）。 &lt;code&gt;inventory/hosts&lt;/code&gt; 中的主机会自动加载，并针对它们执行 playbook。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ansible 运行所需的所有其他设置，例如用于访问主机的密钥、环境变量或 SSH 密钥，也可以在项目目录结构中提供。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;角色就像剧本一样，位于 &lt;code&gt;./project&lt;/code&gt; 目录中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ansible 运行的结果会在项目目录中创建一个名为 &lt;code&gt;./artifacts&lt;/code&gt; 的新目录（不是 &lt;code&gt;./project&lt;/code&gt;，而是其上面的目录）。该目录以可解析且人类可读的形式包含 Ansible 运行期间发生的所有结果、数据和事件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过正确的配置和设置，您可以创建封装的代码环境，可以将其部署到容器或远程系统，并且可以解析结果以供进一步使用，例如CICD 管道。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不幸的是，单个博客条目的参数太多，无法深入了解 &lt;code&gt;ansible-runner&lt;/code&gt; 的功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;查看 Ansible Runner 演示存储库&lt;sup&gt;&lt;a href=&#34;https://www.redpill-linpro.com/techblog/2024/02/27/ansible-runner.html#fn:ansible_demo&#34; &gt;1&lt;/a&gt;&lt;/sup&gt; 获得简单的开始和更多指导。玩得开心！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;https://github.com/ansible/ansible-runner/tree/devel/demo &lt;a href=&#34;https://www.redpill-linpro.com/techblog/2024/02/27/ansible-runner .html#fnref:ansible_demo&#34;&gt;↩&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;作者：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://www.redpill-linpro.com/techblog/images/authors/dbv.jpg&#34; alt=&#34;丹尼尔头像&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;丹尼尔·博伊-维恩&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Redpill Linpro 高级系统顾问&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Daniel 在 Ansible、AWX、Tower、Terraform 和 Puppet 领域从事自动化工作。他主要向我们在挪威的客户推广，协助他们完成集成和自动化项目。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 30 Oct 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Cultivating a successful engineering culture with Platform Engineering】通过平台工程培养成功的工程文化</title>
      <link>https://www.cncf.io/blog/2024/10/31/cultivating-a-successful-engineering-culture-with-platform-engineering/</link>
      <description>【&lt;p&gt;Community post by Or Weis&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Discover how leveraging a policy-as-code platform helps foster an engineering culture focused on efficient authorization and access control.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Platform engineering is rooted in a fundamental principle: cultivating a culture within development teams. This culture is not merely about saving time or streamlining development processes. Rather, it’s about creating superior products through the application of standards and well-defined solutions, providing developers with clear guidelines where they might otherwise struggle to find direction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In crucial areas like security and observability, such a culture is the difference between scalable success and inefficiency.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this article, we will explore how we successfully implemented such a culture, specifically in the context of permissions and authorization for our product users. We believe that our approach can serve as a valuable model for creating more effective platform engineering teams.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Permissions That Scale&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One of the challenges developers often experience with the amount of data our applications process is the complexity of managing a vast web of policies that govern the permissions over this data. Managing the authorization of users and systems has become an increasingly challenging task.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In recent years, Policy-as-Code has emerged as a compelling solution. Tools like Rego and Cedar, which use domain-specific languages, bring the rigor of software engineering to the world of policy management, allowing teams to express rules clearly and enforce them consistently.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’ve witnessed firsthand the transformative impact of integrating a &lt;a href=&#34;https://www.permit.io/blog/what-is-policy-as-code&#34;&gt;Policy as Code&lt;/a&gt; culture within organizations, especially when it comes to navigating the complexities inherent in modern software development and data management.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Policy-as-Code: Turning Rules into Actionable Code&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Policy as code essentially involves translating organizational rules and procedures into code. This approach draws on a fundamental insight: complex logic is most effectively managed and understood when expressed as declarative code. The beauty of this approach is that it leverages best practices from software development—such as version control, CI/CD, testing, and code reviews— empowering us with the tools to handle policies with the same level of scrutiny and flexibility as our software.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By encoding policies in a declarative language, we ensure that all aspects of compliance and security are handled in a uniform, traceable way. This approach not only makes policy management more efficient but also makes auditing and troubleshooting more straightforward.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Policy as code is also one of the biggest enablers of the &lt;a href=&#34;https://www.permit.io/blog/what-is-fine-grained-authorization-fga&#34;&gt;fine-grained authorization&lt;/a&gt; motion, where we can give our users the exact permissions they need without compromising on our applications’ code limitations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Code Isn’t Magic—Culture Makes It Work&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While Policy-as-Code greatly simplifies policy enforcement, it’s not a silver bullet. While it significantly streamlines policy management, several challenges remain, particularly concerning its implementation. How do we ensure that Policy-as-Code is applied consistently across an organization? How can we make it accessible to those without a development background? And perhaps most importantly, how do we choose the right Software Development Life Cycle (SDLC) models that align with Policy-as-Code?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Consider the scenario of a shared database or message queue that houses sensitive data. This data, once it leaves its original source, can be transformed by various services or their consumers, often as part of Extract, Transform, Load (ETL) flows. Ensuring that our policies protect this data across different teams and services requires a unified approach that is challenging to scale across diverse teams or developers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This difficulty stems not from technical limitations but from cultural ones. As different developers contribute to the software, a phenomenon known as ‘code drift’ occurs, where deviations from the initial policy intentions compromise the policy’s effectiveness.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As your team grows, maintaining alignment on policy intent becomes increasingly difficult, especially as data schemas evolve and services change.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Cultured code&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Addressing these issues requires a cultural shift. Instead of trying to limit our teams’ operational freedom, we should focus on empowering them. This starts with understanding that implementing Policy-as-Code is fundamentally a cultural challenge. By embracing a culture that values shared responsibility and collective adherence to policy guidelines, we can create an environment where policies are respected and enforced more naturally.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;An effective strategy is to establish a baseline policy that allows individual services to enforce their own access controls while adhering to overarching organizational guidelines. This approach not only meets the unique needs of different teams but also ensures that fundamental security and compliance standards are uniformly maintained. The integrity of these baseline guidelines can be ensured through various mechanisms, such as integrating policy checks into CI tests and conducting thorough code reviews focused on policy compliance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Additionally, providing teams with modular enforcement tools can facilitate more effective policy implementation. These modules can help gather statistics and identify behavioral patterns from audit logs, offering insights into how policies are being applied in practice. Linking these enforcement points to Data Loss Prevention (DLP) systems can further enhance policy effectiveness by shifting data tracking to a pattern-based approach, which is more adaptable to the dynamic nature of data flows and schema changes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1457&#34; height=&#34;2333&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2.png&#34; alt=&#34;Meta-Policy CI - the organizational flow to apply cross-org policy as code&#34; class=&#34;wp-image-119757&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2.png 1457w, https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2-187x300.png 187w, https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2-640x1024.png 640w, https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2-768x1230.png 768w, https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2-900x1441.png 900w, https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2-125x200.png 125w, https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2-250x400.png 250w&#34; sizes=&#34;(max-width: 1457px) 100vw, 1457px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Meta-Policy CI – the organizational flow to apply cross-org policy as code&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Embracing Policy-as-Code within an organization requires a comprehensive approach that goes beyond mere technical implementation. It necessitates fostering a culture that values collaboration, empowerment and shared responsibility for policy compliance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By addressing the cultural aspects of Policy-as-Code, leveraging modular tools for enforcement, and ensuring flexibility to adapt to changing needs, we can pave the way for more secure, compliant, and efficient operations across our teams and services.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As developers and leaders, it’s our role to champion this cultural shift, ensuring that our teams can confidently navigate the challenges of modern software development and data management.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;Or Weis 的社区帖子&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;了解如何利用策略即代码平台帮助培育专注于高效授权和访问控制的工程文化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;平台工程植根于一个基本原则：在开发团队中培养文化。这种文化不仅仅是为了节省时间或简化开发流程。相反，它是通过应用标准和明确定义的解决方案来创建卓越的产品，为开发人员提供明确的指导方针，否则他们可能会很难找到方向。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在安全性和可观察性等关键领域，这种文化是可扩展的成功与低效率之间的区别。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在本文中，我们将探讨如何成功实施这种文化，特别是在产品用户的权限和授权方面。我们相信，我们的方法可以作为创建更有效的平台工程团队的宝贵模型。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;可扩展的权限&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开发人员在应用程序处理的数据量方面经常遇到的挑战之一是管理管理这些数据权限的庞大策略网络的复杂性。管理用户和系统的授权已成为一项越来越具有挑战性的任务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;近年来，策略即代码已成为一种引人注目的解决方案。 Rego 和 Cedar 等工具使用特定于领域的语言，将软件工程的严谨性带入策略管理领域，使团队能够清晰地表达规则并一致地执行它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们亲眼目睹了整合&lt;a href=&#34;https://www.permit.io/blog/what-is-policy-as-code&#34;&gt;政策即代码&lt;/a&gt;文化带来的变革性影响组织内部，尤其是在解决现代软件开发和数据管理固有的复杂性方面。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;策略即代码：将规则转化为可操作的代码&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;政策即代码本质上涉及将组织规则和程序转化为代码。这种方法借鉴了一个基本见解：复杂的逻辑在表达为声明性代码时可以得到最有效的管理和理解。这种方法的优点在于，它利用了软件开发的最佳实践（例如版本控制、CI/CD、测试和代码审查），使我们能够使用与我们的软件具有相同级别的审查和灵活性的工具来处理策略。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过使用声明性语言对策略进行编码，我们确保以统一、可追溯的方式处理合规性和安全性的所有方面。这种方法不仅使策略管理更加高效，而且使审核和故障排除更加简单。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;政策即代码也是 Fin 的最大推动者之一电子粒度授权&lt;/a&gt;动议，我们可以为用户提供他们所需的确切权限，而不会影响我们应用程序的代码限制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;代码不是魔法——文化让它发挥作用&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然策略即代码极大地简化了策略执行，但这并不是灵丹妙药。虽然它大大简化了政策管理，但仍然存在一些挑战，特别是在其实施方面。我们如何确保政策即代码在整个组织中得到一致应用？我们怎样才能让没有开发背景的人也能使用它？也许最重要的是，我们如何选择与策略即代码相一致的正确软件开发生命周期 (SDLC) 模型？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;考虑存储敏感数据的共享数据库或消息队列的场景。这些数据一旦离开其原始来源，就可以由各种服务或其消费者进行转换，通常作为提取、转换、加载 (ETL) 流的一部分。确保我们的政策能够保护不同团队和服务中的这些数据，需要采用统一的方法，而这种方法很难在不同的团队或开发人员之间进行扩展。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种困难不是源于技术限制，而是源于文化限制。当不同的开发人员为软件做出贡献时，就会出现一种称为“代码漂移”的现象，即偏离最初的策略意图会损害策略的有效性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着您的团队不断壮大，保持政策意图的一致性变得越来越困难，尤其是随着数据架构的发展和服务的变化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;文化代码&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;解决这些问题需要文化转变。我们不应该试图限制我们团队的运作自由，而应该专注于赋予他们权力。首先要认识到，实施政策即代码从根本上来说是一项文化挑战。通过拥抱重视共同责任和集体遵守政策准则的文化，我们可以创造一个使政策更自然地得到尊重和执行的环境。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有效的策略是建立一个基线策略，允许各个服务强制实施自己的访问控制，同时遵守总体组织准则。这种方法不仅可以满足不同团队的独特需求，还可以确保基本的安全性和合规性标准得到统一维护。这些基线指南的完整性可以通过各种机制来确保，例如将策略检查集成到 CI 测试中以及针对策略合规性进行彻底的代码审查。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，为团队提供模块化执行工具可以促进更有效的政策实施。这些模块可以帮助收集统计数据并从审计日志中识别行为模式，从而深入了解政策在实践中的应用情况。将这些执行点链接到数据防损 (DLP) 系统可以通过将数据跟踪转变为基于模式的方法来进一步提高政策有效性，这种方法更能适应数据​​流和模式变化的动态特性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1457”高度=“2333”src=“https://www.cncf.io/ wp-content/uploads/2024/10/policy-as-code-ci-2.png&#34; alt=&#34;Meta-Policy CI - 将跨组织策略应用为代码的组织流程&#34;类=“wp-image-119757”srcset=“https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2.png 1457w，https://www .cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2-187x300.png 187w， https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2-640x1024.png 640w，https://www.cncf.io/wp-content/uploads /2024/10/policy-as-code-ci-2-768x1230.png 768w, https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2-900x1441.png 900w，https://www.cncf.io/wp-content/uploads /2024/10/policy-as-code-ci-2-125x200.png 125w， https://www.cncf.io/wp-content/uploads/2024/10/policy-as-code-ci-2-250x400.png 250w“尺寸=”（最大宽度：1457px）100vw，1457px“引用政策=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;元策略 CI –将跨组织策略应用为代码的组织流程&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在组织内采用政策即代码需要一种超越单纯技术实施的全面方法。它需要培育一种重视协作、授权和共同承担政策合规责任的文化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过解决政策即代码的文化方面问题、利用模块化工具进行执行并确保适应不断变化的需求的灵活性，我们可以为我们的团队和服务实现更安全、合规和高效的运营铺平道路。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;作为开发人员和领导者，我们的职责是倡导这种文化转变，确保我们的团队能够自信地应对现代软件开发和数据管理的挑战。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 30 Oct 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to ace the Certified GitOps Associate (CGOA) exam】如何通过 GitOps 助理 (CGOA) 考试</title>
      <link>https://www.cncf.io/blog/2024/10/30/how-to-ace-the-certified-gitops-associate-cgoa-exam/</link>
      <description>【&lt;p&gt;&lt;em&gt;&amp;nbsp;Community post originally published on &lt;a href=&#34;https://faun.pub/how-to-ace-certified-gitops-associate-cgoa-exam-763d2623b1b6&#34;&gt;Medium&lt;/a&gt; by Giorgi Keratishvili&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://keratishvili.medium.com/?source=post_page-----763d2623b1b6--------------------------------&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1000/1*MfsNbhym8Cwp2NkUkA3hyg.png&#34; alt=&#34;Image&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;bf68&#34;&gt;Introduction&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;871c&#34;&gt;So want to pass CGOA exam but not sure where to start? Don’t worry I will help you with what to pay attention to and will share my experience. I had been part of beta tester for CGOA and contributed to creating the exam and can say from both sides what to look for and what is overall expected from candidates who will pass it, but first, let’s start with the format of the exam and difficulty level.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;b893&#34;&gt;Who should take this exam?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;9c53&#34;&gt;&lt;strong&gt;Certified GitOps Associate&lt;/strong&gt;&amp;nbsp;is an entry-level certification compared to CKAD/CKA/CKS it is a multiple choice 90-minute exam also it is an online proctored exam keep in mind also it is much easier compared to them would say it is on pare with KCNA/KCSA, the main theme of this exam is to emphasize open GitOps standard and give candidate understanding of concepts, structuring repositories and general patterns what to look for and keeping everything in vendor neutral format which was hard part cause some times mentioning during discussion which tool is best ArgoCD or FluxCD could cause hot debates…&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;8405&#34;&gt;Lets discuss the Certification&amp;nbsp;&lt;strong&gt;Domains &amp;amp; Competencies&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-preformatted&#34;&gt;&lt;strong&gt;**GitOps Terminology 20%**&lt;/strong&gt;&lt;br&gt;    Continuous&lt;br&gt;    Declarative Description&lt;br&gt;    Desired State&lt;br&gt;    State Drift&lt;br&gt;    State Reconciliation&lt;br&gt;    GitOps Managed Software System&lt;br&gt;    State Store&lt;br&gt;    Feedback Loop&lt;br&gt;    Rollback&lt;br&gt;&lt;br&gt;&lt;strong&gt;**GitOps Principles 30%**&lt;/strong&gt;&lt;br&gt;    Declarative&lt;br&gt;    Versioned and Immutable&lt;br&gt;    Pulled Automatically&lt;br&gt;    Continuously Reconciled&lt;br&gt;&lt;br&gt;&lt;strong&gt;**Related Practices 16%**&lt;/strong&gt;&lt;br&gt;    Configuration as Code (CaC)&lt;br&gt;    Infrastructure as Code (IaC)&lt;br&gt;    DevOps and DevSecOps&lt;br&gt;    CI and CD&lt;br&gt;&lt;br&gt;&lt;strong&gt;**GitOps Patterns 20%**&lt;/strong&gt;&lt;br&gt;    Deployment and Release Patterns&lt;br&gt;    Progressive Delivery Patterns&lt;br&gt;    Pull vs. Event-driven&lt;br&gt;    Architecture Patterns (in-cluster and external reconciler, state store management, etc.)&lt;br&gt;&lt;br&gt;&lt;strong&gt;**Tooling 14%**&lt;/strong&gt;&lt;br&gt;    Manifest Format and Packaging&lt;br&gt;    State Store Systems (Git and alternatives)&lt;br&gt;    Reconciliation Engines (ArgoCD, Flux, and alternatives)&lt;br&gt;    Interoperability with Notifications, Observability, and Continuous Integration Tools&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;c1ef&#34;&gt;As we see big percentage is given to general Principles and Patterns/Terminologies as it is crucial to understand in which problem GitOps helps us, where it sits in our Continues Deployment and how it differs from traditionally deploying applications and CI/CD.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;43f5&#34;&gt;From an experienced person who has been using GitOps for a while it could be intuitive and the majority of questions should be related to day-to-day tasks which they had performed but what if we are new to all this jazz? In such cases we need to fill our gaps and deep dive into the world of cloud native ecosystem and GitOps, the best place to start exploring would be documentation of&amp;nbsp;&lt;a href=&#34;https://opengitops.dev/&#34;&gt;Open GitOps&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1000/1*KGGH9yl9_Xz9zJ6Ka08roQ.png&#34; alt=&#34;Image&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;aae0&#34;&gt;These four Pillars are fundamentals similar to the “10 commandments.” Based on these principles the whole philosophy is built around which is shared across all GitOps tools sound like a cult isn’t it? Joke aside, this approach and consistency helped to shape current approaches to how we deliver our deployment and management components in most simple and easy way on a large scale which fits well in the Kubernetes ecosystem&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;8fe8&#34;&gt;Okay at this point we are excited and want to rush into the exam but from where should start preparing and especially when wo do not have experience?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;8fe8&#34;&gt;The documentation is our best friend and let’s start with the most first tools that start this whole GitOps and Progressive delivery movement. I am speaking about&amp;nbsp;&lt;a href=&#34;https://fluxcd.io/flux/concepts/&#34;&gt;&lt;strong&gt;FluxCD&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;I would say it has a great introduction to general concepts and patterns of how to structure GitOps delivery and can say the person who has been working with Flux V1 and V2 this documentation has seen very big progression over the time and was one of my most reference points, second great documentation, of course, is&amp;nbsp;ArgoCD&amp;nbsp;and third documentation which I would recommend is from&amp;nbsp;Jenkins X&amp;nbsp;beside documentation Linux Foundation provides also&amp;nbsp;Free training&amp;nbsp;materials which are good addition if we want something paid nice place it to check kodekloud catalog with there&amp;nbsp;ArgoCD Course&amp;nbsp;also to practice before taking the exam would recommend checking&amp;nbsp;the &lt;a href=&#34;https://learning.codefresh.io/&#34;&gt;&lt;strong&gt;Codefresh bage test&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;and materials for ArgoCD, GitHub is also good place to check for repos such as this&amp;nbsp;&lt;a href=&#34;https://github.com/otkd/CGOA-Study-Guide&#34;&gt;one&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;b539&#34;&gt;If you prefer videos, I would recommend one of my favorite&amp;nbsp;&lt;a href=&#34;https://www.youtube.com/@cncf/playlists&#34;&gt;&lt;strong&gt;CNCF Youtube channels.&lt;/strong&gt;&lt;/a&gt; They always upload conference videos from KubeCon or GitOpsCon so highly recommend checking on them but do not get stuck in a Youtube rabbit hole. Remember, practice is everything and not watching someone else but where could we practice in this case I would highly recommend to check&amp;nbsp;&lt;a href=&#34;https://killercoda.com/&#34;&gt;&lt;strong&gt;Killerkoda playground&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;and scenarios regarding materials would say it should be enough, one recommendation which I can give is before starting whole this journey take some target day for exam and schedule it for yourself have timeline and urge to study seriously from my experience it helped me.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;3cc3&#34;&gt;So it is exam day: how will it look? All Linux Foundation and CNCF certifications are online and proctored. Before the exam, check all prerequisites and ensure the PSI browser plugin is installed. 30 minutes before, you will see the join button. I would recommend to starting your exam early because there are always some issues (saying this as a person who has passed more then 15 PSI proctored exams). In the room, we should not have any posters or whiteboard, the desk should be clean and nothing extra should be on if you are doing from laptop, then only the laptop, if using a PC, then a keyboard and mouse but no pen, notebook or anything. Proctors are very serious on this. You could have glass of water as the exam is long (90 min) but the&amp;nbsp;&lt;strong&gt;most important&lt;/strong&gt;&amp;nbsp;is to have a good chair. After 24 hours, you will know your score the passing one is &amp;gt;75% and you will receive a Creadly certificate.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1000/1*b3BnvUkYgys-2j0w3L3OHQ.png&#34; alt=&#34;Image&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;ec9b&#34;&gt;At this point, congrats you have passed and obtained certification. I hope this post was informative and would encourage you to learn more and take bigger challenges as there are many certifications from the Linux Foundation, CNCF, and the CD Foundation, remember to stay curious and share your knowledge with others 🚀&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt; 社区帖子最初由 Giorgi 在 &lt;a href=&#34;https://faun.pub/how-to-ace-certified-gitops-associate-cgoa-exam-763d2623b1b6&#34;&gt;Medium&lt;/a&gt; 上发布克拉蒂什维利&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://keratishvili.medium.com/?source=post_page-----763d2623b1b6------------------------ ----------&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1000/1*MfsNbhym8Cwp2NkUkA3hyg.png&#34; alt=&#34;Image “referrerpolicy =“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;bf68&#34;&gt;简介&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;871c&#34;&gt;想通过 CGOA 考试但不知道从哪里开始？别担心，我会帮助你注意什么，并分享我的经验。我曾是 CGOA 的 Beta 测试员，并为创建考试做出了贡献，可以从双方的角度说明要寻找什么以及对通过考试的考生的总体期望，但首先，让我们从考试的格式和难度开始级别。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;b893&#34;&gt;谁应该参加此考试？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;9c53&#34;&gt;&lt;strong&gt;GitOps Associate 认证&lt;/strong&gt;是一项入门级认证，与 CKAD/CKA/CKS 相比，它是一项 90 分钟的多项选择考试，也是一项在线监考考试，请记住与他们相比，它也更容易，可以说它与 KCNA/KCSA 相当，该考试的主题是强调开放的 GitOps 标准，并让考生理解概念、构建存储库和一般模式，寻找并保留所有内容采用供应商中立的格式，这很困难，因为有时在讨论中提到 ArgoCD 或 FluxCD 哪个工具最好可能会引起激烈的争论......&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;8405&#34;&gt;让我们讨论一下认证&lt;strong&gt;领域和能力&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-preformatted&#34;&gt;&lt;strong&gt;**GitOps 术语 20%**&lt;/strong&gt;&lt;br&gt; 连续&lt;br&gt; 声明性描述&lt;br&gt; 期望状态&lt;br&gt; 状态漂移&lt;br&gt; 状态协调&lt;br&gt; GitOps 托管软件系统&lt;br&gt; 状态存储&lt;br&gt; 反馈循环&lt;br&gt; 回滚&lt;br&gt;&lt;br&gt;&lt;strong&gt;**GitOps 原则 30%**&lt;/strong&gt;&lt;br&gt; 声明式&lt;br&gt;版本化且不可变&lt;br&gt;自动拉取&lt;br&gt;持续协调&lt;br&gt;&lt;br&gt;&lt;strong&gt;**相关实践16%**&lt;/strong&gt;&lt;br&gt;配置即代码(CaC)&lt;br&gt;基础设施即代码( IaC)&lt;br&gt; DevOps 和 DevSecOps&lt;br&gt; CI 和 CD&lt;br&gt;&lt;br&gt;&lt;strong&gt;**GitOps 模式 20%**&lt;/strong&gt;&lt;br&gt; 部署和发布模式&lt;br&gt; 渐进式交付模式&lt;br &gt; 拉取与事件驱动&lt;br&gt;架构模式（集群内和外部协调器、状态存储管理等）&lt;br&gt;&lt;br&gt;&lt;strong&gt;**工具 14%**&lt;/strong&gt;&lt;br&gt;清单格式和打包&lt;br&gt; 状态存储系统（Git 和替代方案）&lt;br&gt; 协调引擎（ArgoCD、Flux 和替代方案）&lt;br&gt; 与通知、可观察性和持续集成工具的互操作性&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;c1ef&#34;&gt;正如我们所见，给出了很大的百分比通用原则和模式/术语，因为了解 GitOps 帮助我们解决哪些问题、它在我们的持续部署中的位置以及它与传统部署应用程序和 CI/CD 有何不同至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;43f5&#34;&gt;来自已经使用 GitOps 一段时间的经验丰富的人，这可能很直观，大多数问题应该与他们执行过的日常任务相关，但如果我们是新手怎么办所有这些爵士乐？在这种情况下，我们需要填补空白并深入研究云原生生态系统和 GitOps 的世界，开始探索的最佳位置是 &lt;a href=&#34;https://opengitops.dev/&#34;&gt;Open GitOps&lt; /a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1000/1*KGGH9yl9_Xz9zJ6Ka08roQ.png&#34; alt=&#34;Image “referrerpolicy =“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;aae0&#34;&gt;这四个支柱是类似于“十诫”的基本原则。基于这些原则，整个哲学是围绕所有 GitOps 工具共享的，听起来像是一种邪教，不是吗？开个玩笑吧，这种方法和一致性有助于塑造当前我们如何以最简单、最容易的方式大规模交付部署和管理组件的方法，这非常适合 Kubernetes 生态系统&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;8fe8&#34;&gt;好吧，此时我们很兴奋并想冲进考试，但应该从哪里开始准备，尤其是当我们没有经验时？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;8fe8&#34;&gt;文档是我们最好的朋友，让我们从启动整个 GitOps 和渐进式交付运动的最早的工具开始。我说的是&lt;a href=&#34;https://fluxcd.io/flux/concepts/&#34;&gt;&lt;strong&gt;FluxCD&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;我想说，它对如何构建 GitOps 交付的一般概念和模式进行了很好的介绍，并且可以说，一直使用 Flux V1 和 V2 的人在这段时间内取得了很大的进展，并且是我最有参考价值的文档之一要点，当然，第二个很棒的文档是 ArgoCD，我推荐的第三个文档来自 Jenkins X，除了文档之外，Linux 基金会还提供了免费培训材料，如果我们想要付费的东西，这些材料是很好的补充，可以在 ArgoCD 中检查 kodekloud 目录在参加考试之前进行练习的课程也建议您检查 &lt;a href=&#34;https://learning.codefresh.io/&#34;&gt;&lt;strong&gt;Codefresh bage 测试&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; &lt;/strong&gt;和 ArgoCD 的材料，GitHub 也是检查诸如此&lt;a href=&#34;https://github.com/otkd/CGOA-Study-Guide&#34;&gt;一个&lt;/a&gt;之类的存储库的好地方。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;b539&#34;&gt;如果您喜欢视频，我会推荐我最喜欢的&lt;a href=&#34;https://www.youtube.com/@cncf/playlists&#34;&gt;&lt;strong&gt;CNCF Youtube 频道之一。&lt;/ strong&gt;&lt;/a&gt; 他们总是从 KubeCon 或 GitOpsCon 上传会议视频，评价很高建议查看它们，但不要陷入 YouTube 兔子洞。请记住，练习就是一切，而不是看着别人，但在这种情况下我们可以在哪里练习，我强烈建议您查看&lt;a href=&#34;https://killercoda.com/&#34;&gt;&lt;strong&gt;Killerkoda 游乐场&lt;/strong&gt;&lt;/ a&gt;和有关材料的场景会说它应该足够了，我可以给出的一个建议是在开始整个旅程之前，在某个目标日期进行考试并为自己安排时间，根据我的经验，它帮助了我，并敦促认真学习。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;3cc3&#34;&gt;今天是考试日：考试会是什么样子？所有 Linux 基金会和 CNCF 认证均在线并接受监考。考试前，检查所有先决条件并确保已安装 PSI 浏览器插件。 30 分钟前，您将看到加入按钮。我建议尽早开始考试，因为总会有一些问题（对于一个已经通过了超过 15 场 PSI 监考考试的人来说）。在房间里，我们不应该有任何海报或白板，桌子应该干净，如果您使用笔记本电脑，则不应有任何额外的东西，那么只有笔记本电脑，如果使用PC，则有键盘和鼠标，但没有笔，笔记本什么的。监考人员对此非常重视。您可以喝杯水，因为考试时间很长（90 分钟），但&lt;strong&gt;最重要&lt;/strong&gt;是有一把好椅子。 24 小时后，您将知道您的及格分数&gt;75%，并且您将收到一份 Creadly 证书。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1000/1*b3BnvUkYgys-2j0w3L3OHQ.png&#34; alt= “图片”referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;ec9b&#34;&gt;至此，恭喜您已经通过并获得认证。我希望这篇文章内容丰富，并能鼓励您了解更多信息并接受更大的挑战，因为有来自 Linux 基金会、CNCF 和 CD 基金会的许多认证，请记住保持好奇心并与他人分享您的知识🚀&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 29 Oct 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Multi-cluster PKI + Istio recipe: practical example for a trusted and scalable PKI for your service mesh】多集群 PKI + Istio 秘诀：为您的服务网格提供可信且可扩展的 PKI 的实际示例</title>
      <link>https://www.cncf.io/blog/2024/11/01/multi-cluster-pki-istio-recipe-practical-example-for-a-trusted-and-scalable-pki-for-your-service-mesh/</link>
      <description>【&lt;p&gt;&lt;em&gt;&amp;nbsp;Member post originally published on &lt;a href=&#34;https://tetrate.io/blog/multi-cluster-pki-istio-recipe-practical-example-for-a-trusted-and-scalable-pki-for-your-service-mesh/&#34;&gt;Tetrate’s blog&lt;/a&gt; by Cristofer TenEyck and Jimmy Song&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-introduction-nbsp&#34;&gt;Introduction&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the evolving landscape of cloud-native applications, securing service meshes across multiple clusters is crucial for ensuring both security and compliance. Istio, a leading open-source service mesh, provides tools for securing communication between microservices. However, implementing a robust and scalable Public Key Infrastructure (PKI) to manage certificates within this environment remains a significant challenge.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this blog, we will delve into the implementation of a PKI solution using the EJBCA open-source PKI for an Istio service mesh spanning multiple clusters. We will focus on the process of setting up EJBCA, configuring the cert-manager EJBCA external issuer, and ensuring automatic certificate renewal for your Istio workloads. This guide will help you build a trusted and scalable PKI, enabling secure, compliant, and resilient service meshes.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Why multi-clusters? Multi-cluster deployments are becoming increasingly popular as organizations expand their Kubernetes infrastructure. Multi-cluster Istio setups provide enhanced availability, fault tolerance, and isolation of workloads across clusters.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-understanding-pki-and-its-role-in-service-meshes-nbsp&#34;&gt;Understanding PKI and its Role in Service Meshes&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;PKI is a cornerstone of modern digital security. It involves managing keys and certificates to ensure secure communication between entities, be they users, applications, or services. In the context of a service mesh like Istio, an effective PKI is essential for securing communications between microservices, especially in multi-cluster environments.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The EJBCA offers an open-source solution for managing PKI at scale. Compared to other options like OpenSSL or Istio’s built-in PKI, EJBCA provides a full-featured, enterprise-grade PKI that is well-suited for simple to more complex and multi-purpose deployments. EJBCA’s capabilities go beyond just issuing mTLS certificates, offering compliance features, secure scalability, crypto agility, and integration with a wide range of applications.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-istio-ejbca-and-cert-manager-nbsp-nbsp&#34;&gt;Istio, EJBCA and cert-manager&amp;nbsp;&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Setting up a PKI for a multi-cluster Istio environment using EJBCA. Here is what is included:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Environment Preparation&lt;/strong&gt;: We use a MicroK8s multi-cluster Istio setup, consisting of a primary and a remote cluster. Both clusters are configured to work with EJBCA as the root Certificate Authority (CA).&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;cert-manager Integration&lt;/strong&gt;: We showcase the integration of cert-manager with EJBCA, including the configuration of the EJBCA custom issuer. cert-manager will handle the issuance and renewal of certificates.&amp;nbsp;&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Automatic Certificate Renewal&lt;/strong&gt;: A key challenge in PKI management is ensuring that certificates are renewed automatically before they expire. cert-manager, with EJBCA, can achieve seamless, application-transparent certificate renewal across all clusters.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://tetrate.io/wp-content/uploads/2024/09/arch.svg&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://tetrate.io/wp-content/uploads/2024/09/arch.svg&#34; alt=&#34;Image&#34; class=&#34;wp-image-54748&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-architecture-setup-with-istio-using-ejbca-as-an-external-ca-a-high-level-summary-nbsp&#34;&gt;Architecture Setup with Istio using EJBCA as an External CA, a High-Level Summary&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This section outlines the steps to set up Istio on Kubernetes clusters using EJBCA as an external Certificate Authority (CA). The setup involves configuring two MicroK8s clusters with MetalLB for load balancing, integrating EJBCA for certificate management, and installing Istio components using Helm. the complete guide can be found&amp;nbsp;&lt;a href=&#34;https://docs.keyfactor.com/ejbca/latest/tutorial-deploy-istio-service-mesh-in-a-multi&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The key steps include:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Install and Configure Helm Repositories&lt;/strong&gt;: Add necessary Helm repositories for Istio, cert-manager, and EJBCA.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Deploy cert-manager and EJBCA&lt;/strong&gt;: Install cert-manager using Helm in the primary and remote clusters, followed by the deployment of the EJBCA with a custom issuer. This step also includes generating and storing necessary certificates as Kubernetes secrets.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Configure Istio with EJBCA&lt;/strong&gt;: Create a custom Issuer in Kubernetes that points to the EJBCA instance for issuing certificates. This issuer is then integrated into the Istio configuration.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Install Istio Components&lt;/strong&gt;: Deploy the cert-manager-istio-csr to handle Istio’s certificate signing requests, followed by the installation of Istio’s base components, Istio CNI (Container Network Interface), Istiod (Istio control plane), and the Istio ingress gateway.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Customization and Overrides&lt;/strong&gt;: Apply custom values to tailor Istio’s behavior, such as specific cluster IDs, trust domains, and DNS configurations for secure communication between services.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Automatic Certificate Renewal:&lt;/strong&gt;&amp;nbsp;The setup is configured so that cert-manager automatically renews certificates before they expire, with no disruption to the running applications.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://tetrate.io/wp-content/uploads/2024/09/Cert-renew-flow-1024x637.png&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://tetrate.io/wp-content/uploads/2024/09/Cert-renew-flow-1024x637.png&#34; alt=&#34;Image&#34; class=&#34;wp-image-54749&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Above is the flow diagram representing the mTLS certificate issuance and renewal process in Istio. It illustrates the flow from the Istiod control plane pushing the Envoy config to the final certificate issuance by EJBCA.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-pki-best-practices-and-compliance-nbsp&#34;&gt;PKI Best Practices and Compliance&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Building a secure PKI for your Istio service mesh involves more than just setting up any PKI and starting issuing certificates. It requires adherence to best practices and compliance with regulations to stay secure and future-proof. Here are some key points to consider:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Compliance with Regulations&lt;/strong&gt;: Ensure your PKI implementation meets regulatory requirements such as the EU Cyber Resilience Act and the US Executive Order on Improving the Nation’s Cybersecurity. This includes implementing a resilient architecture, maintaining audit trails, and ensuring robust key management practices.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Crypto Agility and Quantum Readiness&lt;/strong&gt;: As cryptographic standards evolve, your PKI must be agile enough to adapt to new algorithms and key lengths. With the potential advent of quantum computing, being quantum-ready is increasingly important.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Collaboration with InfoSec&lt;/strong&gt;: Effective collaboration with your Information Security (InfoSec) team is crucial for maintaining the security and compliance of your PKI. This includes regular reviews of security policies, ongoing training, and ensuring that PKI management processes align with organizational security goals.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Conclusion&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Implementing a PKI for an Istio service mesh in a multi-cluster environment can seem daunting, but with the right tools and practices, it can be achieved efficiently and effectively. EJBCA, combined with cert-manager, offers a solution for managing certificates at scale, ensuring that your Istio service mesh PKI is both secure and compliant.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By following the steps outlined in this guide, you will be able to set up a trusted PKI, achieve seamless and robust certificate management, and collaborate effectively with your InfoSec team to maintain the security of your service mesh.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For further resources and more detailed information on the topics covered in this blog, be sure to check out the links and references provided below.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-resources-nbsp&#34;&gt;Resources&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.keyfactor.com/ejbca/latest/tutorial-deploy-istio-service-mesh-in-a-multi&#34;&gt;Tutorial – Deploy Istio Service Mesh in a Multi-Cluster Kubernetes Environment Using EJBCA as an External PKI provider&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/docs/&#34;&gt;Istio documentation&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ejbca.org/&#34;&gt;EJBCA Community edition&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://cert-manager.io/docs/&#34;&gt;cert-manager documentation&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://digital-strategy.ec.europa.eu/en/policies/cyber-resilience-act&#34;&gt;EU Cyber Resilience Act&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.whitehouse.gov/briefing-room/statements-releases/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/&#34;&gt;US Executive Order on Cybersecurity&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://tetrate.io/blog/multicluster-istio/&#34;&gt;Seamless Cross-Cluster Connectivity for Multicluster Istio Service Mesh Deployments&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt; 会员帖子最初发布于 &lt;a href=&#34;https://tetrate.io/blog/multi-cluster-pki-istio-recipe-practical-example-for-a-trusted-and-scalable- pki-for-your-service-mesh/&#34;&gt;Tetrate 的博客&lt;/a&gt;，作者：Cristofer TenEyck 和 Jimmy Song&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-introduction-nbsp&#34;&gt;简介&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在云原生应用程序不断发展的环境中，保护跨多个集群的服务网格对于确保安全性和合规性至关重要。 Istio 是领先的开源服务网格，提供用于保护微服务之间通信的工具。然而，实施强大且可扩展的公钥基础设施 (PKI) 来管理此环境中的证书仍然是一项重大挑战。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在本博客中，我们将深入研究使用 EJBCA 开源 PKI 为跨多个集群的 Istio 服务网格实现 PKI 解决方案。我们将重点关注设置 EJBCA、配置证书管理器 EJBCA 外部颁发者以及确保 Istio 工作负载自动更新证书的过程。本指南将帮助您构建可信且可扩展的 PKI，从而实现安全、合规且有弹性的服务网格。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为什么要多集群？随着组织扩展其 Kubernetes 基础设施，多集群部署变得越来越流行。多集群 Istio 设置提供了增强的可用性、容错能力以及跨集群的工作负载隔离。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-understanding-pki-and-its-role-in-service-meshes-nbsp&#34;&gt;了解 PKI 及其在服务网格中的作用&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;PKI 是现代数字安全的基石。它涉及管理密钥和证书，以确保实体（无论是用户、应用程序还是服务）之间的安全通信。在像 Istio 这样的服务网格环境中，有效的 PKI 对于保护微服务之间的通信至关重要，尤其是在多集群环境中。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;EJBCA 提供了用于大规模管理 PKI 的开源解决方案。与 OpenSSL 或 Istio 的内置 PKI 等其他选项相比，EJBCA 提供功能齐全的企业级 PKI，非常适合简单到更复杂的多用途部署。 EJBCA 的功能不仅仅是颁发 mTLS 证书，还提供合规性功能、安全可扩展性、加密敏捷性以及与各种应用程序的集成。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-istio-ejbca-and-cert-manager-nbsp-nbsp&#34;&gt;Istio、EJBCA 和证书管理器  &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用 EJBCA 为多集群 Istio 环境设置 PKI。以下是其中包含的内容：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;环境准备&lt;/strong&gt;：我们使用 MicroK8s 多集群 Istio 设置，由主集群和远程集群组成。两个集群都配置为使用 EJBCA 作为根证书颁发机构 (CA)。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;cert-manager 集成&lt;/strong&gt;：我们展示了 cert-manager 与 EJBCA 的集成，包括 EJBCA 自定义颁发者的配置。 cert-manager 将处理证书的颁发和更新。  &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;自动证书续订&lt;/strong&gt;：PKI 管理中的一个关键挑战是确保证书在过期前自动续订。 cert-manager 与 EJBCA 一起可以在所有集群中实现无缝、应用程序透明的证书更新。 &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://tetrate.io/wp-content/uploads/2024/09/arch.svg&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34; https://tetrate.io/wp-content/uploads/2024/09/arch.svg&#34; alt=&#34;Image&#34; class=&#34;wp-image-54748&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-architecture-setup-with-istio-using-ejbca-as-an-external-ca-a-high-level-summary-nbsp&#34;&gt;架构设置Istio 使用 EJBCA 作为外部 CA，高级摘要&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本节概述了使用 EJBCA 作为外部证书颁发机构 (CA) 在 Kubernetes 集群上设置 Istio 的步骤。该设置包括使用 MetalLB 配置两个 MicroK8s 集群以实现负载平衡、集成 EJBCA 以进行证书管理以及使用 Helm 安装 Istio 组件。您可以在&lt;a href=&#34;https://docs.keyfactor.com/ejbca/latest/tutorial-deploy-istio-service-mesh-in-a-multi&#34;&gt;此处&lt;/a&gt;找到完整指南。&lt;/ p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;关键步骤包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;安装和配置 Helm 存储库&lt;/strong&gt;：为 Istio、cert-manager 和 EJBCA 添加必要的 Helm 存储库。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;部署 cert-manager 和 EJBCA&lt;/strong&gt;：在主集群和远程集群中使用 Helm 安装 cert-manager，然后使用自定义颁发者部署 EJBCA。此步骤还包括生成必要的证书并将其存储为 Kubernetes 机密。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;使用 EJBCA 配置 Istio&lt;/strong&gt;：在 Kubernetes 中创建一个指向 EJBCA 实例以颁发证书的自定义颁发者。然后将该发行者集成到 Istio 配置中。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;安装 Istio 组件&lt;/strong&gt;：部署 cert-manager-istio-csr 来处理 Istio 的证书签名请求，然后安装 Istio 的基础组件、Istio CNI（容器网络接口）、Istiod（Istio）控制平面）和 Istio 入口网关。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;自定义和覆盖&lt;/strong&gt;：应用自定义值来定制 Istio 的行为，例如用于服务之间安全通信的特定集群 ID、信任域和 DNS 配置。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;自动证书续订&lt;/strong&gt;：配置此设置后，cert-manager 会在证书过期之前自动续订证书，而不会中断正在运行的应用程序。 &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://tetrate.io/wp-content/uploads/2024/09/Cert-renew-flow-1024x637.png&#34;&gt;&lt;img 解码=&#34;异步&#34; src=&#34;https://tetrate.io/wp-content/uploads/2024/09/Cert -renew-flow-1024x637.png&#34; alt=&#34;Image&#34; class=&#34;wp-image-54749&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以上是 Istio 中 mTLS 证书颁发和续订流程的流程图。它说明了从 Istiod 控制平面推送 Envoy 配置到 EJBCA 最终颁发证书的流程。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-pki-best-practices-and-compliance-nbsp&#34;&gt;PKI 最佳实践和合规性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为 Istio 服务网格构建安全的 PKI 不仅仅涉及设置任何 PKI 和开始颁发证书。它需要遵守最佳实践并遵守法规，以保持安全和面向未来。以下是需要考虑的一些关键点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;遵守法规&lt;/strong&gt;：确保您的 PKI 实施符合监管要求，例如《欧盟网络弹性法案》和《美国关于改善国家网络安全的行政命令》。这包括实施弹性架构、维护审计跟踪以及确保稳健的密钥管理实践。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;加密敏捷性和量子就绪性&lt;/strong&gt;：随着加密标准的发展，您的 PKI 必须足够敏捷，以适应新的算法和密钥长度。随着量子计算的潜在出现，做好量子准备变得越来越重要。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;与 InfoSec 协作&lt;/strong&gt;：与信息安全 (InfoSec) 团队的有效协作对于维护 PKI 的安全性和合规性至关重要。这包括定期审查安全策略、持续培训以及确保 PKI 管理流程与组织安全目标保持一致。 &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;结论&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在多集群环境中为 Istio 服务网格实现 PKI 似乎令人畏惧，但通过正确的工具和实践，可以高效且有效地实现。 EJBCA 与 cert-manager 相结合，提供了大规模管理证书的解决方案，确保您的 Istio 服务网格 PKI 安全且合规。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过遵循本指南中概述的步骤，您将能够设置可信的 PKI，实现无缝且强大的证书管理，并与您的 InfoSec 团队有效协作以维护服务网格的安全。  &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有关本博客所涵盖主题的更多资源和更详细信息，请务必查看下面提供的链接和参考资料。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;h-resources-nbsp&#34;&gt;资源&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.keyfactor.com/ejbca/latest/tutorial-deploy-istio-service-mesh-in-a-multi&#34;&gt;教程 – 在多集群中部署 Istio 服务网格Kubernetes 环境使用 EJBCA 作为外部 PKI 提供者&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/docs/&#34;&gt;Istio 文档&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ejbca.org/&#34;&gt;EJBCA 社区版&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://cert-manager.io/docs/&#34;&gt;cert-manager 文档&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://digital-strategy.ec.europa.eu/en/policies/cyber-resilience-act&#34;&gt;欧盟网络弹性法案&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.whitehouse.gov/briefing-room/statements-releases/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/&#34;&gt;美国行政长官网络安全令&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://tetrate.io/blog/multicluster-istio/&#34;&gt;多集群 Istio 服务网格部署的无缝跨集群连接&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 31 Oct 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【OpenTelemetry Is expanding into CI/CD observability】OpenTelemetry 正在扩展到 CI/CD 可观察性</title>
      <link>https://www.cncf.io/blog/2024/11/04/opentelemetry-is-expanding-into-ci-cd-observability/</link>
      <description>【&lt;p&gt;&lt;em&gt;SIG post by &lt;a href=&#34;https://www.linkedin.com/in/horovits/&#34;&gt;Dotan Horovits&lt;/a&gt; and &lt;a href=&#34;https://www.linkedin.com/in/aqperkins/&#34;&gt;Adriel Perkins&lt;/a&gt;, Project Leads, SIG CI/CD Observability, OpenTelemetry&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’ve been talking about the need for a common “language” for reporting and observing CI/CD pipelines for years, and finally, we see the first “words” of this language entering the “dictionary” of observability – the OpenTelemetry open specification. With the recent release of OpenTelemetry’s Semantic Conventions, v1.27.0, you can find &lt;a href=&#34;https://opentelemetry.io/docs/specs/semconv/attributes-registry/cicd/&#34;&gt;designated attributes for reporting CI/CD pipelines&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is the result of the hard work of the &lt;a href=&#34;https://github.com/open-telemetry/community/blob/main/projects/ci-cd.md&#34;&gt;&lt;strong&gt;CI/CD Observability Special Interest Group (SIG) within OpenTelemetry&lt;/strong&gt;&lt;/a&gt;. As we accomplish the core milestone for the first phase, we thought it’d be a good time to share it with the world.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;iframe loading=&#34;lazy&#34; title=&#34;Embedded post&#34; src=&#34;https://www.linkedin.com/embed/feed/update/urn:li:share:7226847382200565762&#34; width=&#34;504&#34; height=&#34;1126&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;allowfullscreen&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Engineers need observability into their CI/CD pipelines&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@horovits/fcc6c10c4987&#34;&gt;CI/CD observability&lt;/a&gt; is essential for ensuring that software is released to production efficiently and reliably. Well-functioning CI/CD pipelines directly impact business outcomes by shortening &lt;a href=&#34;https://horovits.medium.com/improving-devops-performance-with-dora-metrics-918b9604f8e2&#34;&gt;Lead Time for Changes DORA metric&lt;/a&gt;, and enabling fast identification and resolution of broken or flaky processes. By integrating observability into CI/CD workflows, teams can monitor the health and performance of their pipelines in real-time, gaining insights into bottlenecks and areas that require improvement.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Leveraging the same well-established tools used for monitoring production environments, organizations can extend their observability capabilities to include the release cycle, fostering a holistic approach to software delivery. Whether open source or proprietary tools, there’s no need to reinvent the wheel when choosing the observability toolchain for CI/CD pipelines.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The need for standardization&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;However, the diverse landscape of CI/CD tools creates challenges in achieving consistent end-to-end observability. With each tool having its own means, format and semantic conventions for reporting the pipeline execution status, fragmentation within the toolchain can hinder seamless monitoring. Migrating between tools becomes painful, as it requires reimplementing existing dashboards, reports and alerts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Things become even more challenging, when needing to monitor multiple tools involved in the release pipeline in a uniform manner. This is where &lt;a href=&#34;https://horovits.medium.com/the-rise-of-open-standards-in-observability-highlights-from-kubecon-13694e732c97&#34;&gt;open standards and specifications become critical&lt;/a&gt;. They create a common uniform language, one which is tool- and vendor-agnostic, enabling cohesive observability across different tools and allowing teams to maintain a clear and comprehensive view of their CI/CD pipeline performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The need for standardization is relevant for creating the semantic conventions mentioned above, the language for reporting what goes on in the pipeline. Standardization is also needed for the means in which this reporting is propagated through the system, such as upon spawning processes during the pipeline execution. This led us to promote standardization for using environment variables for context and baggage propagation between processes, another important milestone that was recently approved and merged.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;&lt;iframe loading=&#34;lazy&#34; title=&#34;Embedded post&#34; src=&#34;https://www.linkedin.com/embed/feed/update/urn:li:share:7254577377660334081&#34; width=&#34;504&#34; height=&#34;701&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;allowfullscreen&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;OpenTelemetry: the natural home for CI/CD observability specification&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This realization drove us to look for the right way to approach creating a specification. OpenTelemetry emerges as the standard for telemetry generation and collection. The OpenTelemetry specification is tasked with exactly this problem: creating a common uniform and vendor-agnostic specification for telemetry. And housed under the Cloud Native Computing Foundation (CNCF) can ensure it remains open and vendor-neutral. As long standing advocates of OpenTelemetry, it only made sense to extend OpenTelemetry to cover this important DevOps use case.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We started with an &lt;a href=&#34;https://github.com/open-telemetry/oteps/pull/223&#34;&gt;OpenTelemetry extension proposal (OTEP #223)&lt;/a&gt; a couple of years ago, proposing our idea to extend OpenTelemetry to cover the CI/CD observability use case. In parallel, we’ve started a slack channel on the CNCF slack to gather fellow enthusiasts behind the idea and start brainstorming what that should look like. The slack channel grew and we quickly discovered that the problem is common across many organizations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With the feedback from the Technical Oversight Committee and others within the CNCF, we’ve taken the path of asking the mandate to start a dedicated Working Group for the topic under OpenTelemetry’s Semantic Conventions SIG (SIG SemConv in short). With their blessing, we &lt;a href=&#34;https://github.com/open-telemetry/community/blob/main/projects/ci-cd.md&#34;&gt;launched the formal CI/CD Observability SIG&lt;/a&gt; to formalize our previous slack group discussions and goals.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;&lt;iframe loading=&#34;lazy&#34; title=&#34;Embedded post&#34; src=&#34;https://www.linkedin.com/embed/feed/update/urn:li:share:7155107098903666688&#34; width=&#34;504&#34; height=&#34;961&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;allowfullscreen&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;OpenTelemetry’s CI/CD Observability SIG&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Since November of 2023, the SIG has been actively working to develop the standard for semantics around CI/CD observability in collaboration with experts from multiple companies and Open-Source projects. At its inception, we decided to focus on a few key areas for 2024:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;An initial set of common attributes across CI/CD Systems.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Develop prototype(s) to include both holistic and signal specific attributes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Carry forward the proposal to add environment variables as context propagators to the OpenTelemetry specification (OTEP #258)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A strategy for bridging OpenTelemetry conventions with &lt;a href=&#34;https://cdevents.dev/docs/&#34;&gt;CDEvents&lt;/a&gt; and &lt;a href=&#34;https://eiffel-community.github.io/&#34;&gt;Eiffel&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At first, our SIG met during the larger Semantic Conventions Working Group meetings every Monday. This provided a good opportunity for us to get our bearings as we researched and discussed how we would accomplish the goals on our roadmap. This also enabled us to get to know many members of the larger OpenTelemetry community, solicit feedback on our designs, and get direction on how to proceed. The OpenTelemetry Semantic Convention Working Group has been extraordinarily supportive of the CI/CD initiative.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Upon completion and release of its initial milestone (see below), our SIG was granted its own &lt;a href=&#34;https://github.com/open-telemetry/community/pull/2293&#34;&gt;dedicated meeting slot&lt;/a&gt; on the &lt;a href=&#34;https://github.com/open-telemetry/community?tab=readme-ov-file#calendar&#34;&gt;OpenTelemetry calendar&lt;/a&gt;, every Thursday at 0600 PT. The group gets together here to discuss current and future work prior to bringing to the larger Semantic Conventions meetings on Monday. We greatly look forward to the continued support and participation of the community as we continue to drive forward this critical area of standardization.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;&lt;iframe loading=&#34;lazy&#34; title=&#34;Embedded post&#34; src=&#34;https://www.linkedin.com/embed/feed/update/urn:li:share:7225246809189683200&#34; width=&#34;504&#34; height=&#34;1026&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;allowfullscreen&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;CI/CD Is part of the latest OpenTelemetry Semantic Conventions&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Over the course of months of iteration and feedback, the &lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/pull/1075&#34;&gt;first set of Semantic Conventions was merged&lt;/a&gt; in for the v1.27.0 release. This change brought forth the first set of foundational semantics for CI/CD under the &lt;code&gt;CICD&lt;/code&gt;, &lt;code&gt;artifacts&lt;/code&gt;, &lt;code&gt;VCS&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt;, and &lt;code&gt;deployment&lt;/code&gt; namespaces. This was a significant milestone for the CI/CD Observability SIG and industry as a whole. This creates the foundation for which all of our group’s other goals can begin to take form, and reach implementation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But what does that actually mean? What value does it provide? Let’s consider real world examples for two of the namespaces&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Tracking release revisions from Version Control Systems (VCS)&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://opentelemetry.io/docs/specs/semconv/attributes-registry/vcs/&#34;&gt;Version Control System (VCS) attributes&lt;/a&gt; cover multiple areas common in a VCS like refs and changes (pull/merge requests). The &lt;code&gt;vcs.repository.ref.revision&lt;/code&gt; attribute is a key piece of metadata. As Version Control Systems like GitHub and GitLab emit events, they can now have this semantically compliant attribute. That means when integrating code, releasing it, and deploying it to environments, systems can include this attribute and trace the code revision across bounds more easily. In the event a deployment fails, you can quickly look at the revision of code and track it back to the buggy release. This attribute is actually a key piece of metadata for&lt;a href=&#34;https://dora.dev/guides/dora-metrics-four-keys/&#34;&gt; DORA metrics&lt;/a&gt; too as you calculate Change lead time and Failed deployment recovery time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Artifacts for supply chain security, aligned with the SLSA specification&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;a href=&#34;https://opentelemetry.io/docs/specs/semconv/attributes-registry/artifact/&#34;&gt;artifact attribute namespace&lt;/a&gt; had multiple attributes for its first implementation. One key set of attributes within this namespace cover &lt;a href=&#34;https://slsa.dev/attestation-model&#34;&gt;attestations&lt;/a&gt; that closely align with the &lt;a href=&#34;https://slsa.dev/spec/v1.0/about&#34;&gt;SLSA&lt;/a&gt; model. This is really the first time a direct connection is being made between Observability and Software Supply Chain Security. Consider the following &lt;a href=&#34;https://slsa.dev/spec/v1.0/threats&#34;&gt;supply chain threat model&lt;/a&gt; defined by SLSA:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1238&#34; height=&#34;870&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23.jpg&#34; alt=&#34;image&#34; class=&#34;wp-image-119840&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23.jpg 1238w, https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23-300x211.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23-1024x720.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23-768x540.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23-900x632.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23-285x200.jpg 285w, https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23-569x400.jpg 569w&#34; sizes=&#34;(max-width: 1238px) 100vw, 1238px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These new attributes for artifacts and attestations help observe the sequence of events modeled in the above diagram in real time. Really, the conventions that exist today and those that will be added in the future enable interoperability between core software delivery capabilities like security and platform engineering via observability semantics.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;What’s Next for CI/CD Observability Working Group&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The first major milestone we shared above, was the merge of the OTEP for extending the semantic conventions with the new attributes, which is now part of the OpenTelemetry Semantic Conventions latest release.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The other important milestone was &lt;a href=&#34;https://github.com/open-telemetry/oteps/pull/258&#34;&gt;OTEP #258&lt;/a&gt; for Environment Variable Context Propagation that was just approved and merged. This OTEP sets the ground for writing the specification.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;&lt;iframe loading=&#34;lazy&#34; title=&#34;Embedded post&#34; src=&#34;https://www.linkedin.com/embed/feed/update/urn:li:share:7254563196093505536&#34; width=&#34;504&#34; height=&#34;1152&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;allowfullscreen&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;Since we’ve made progress on our initial milestones, we’ve updated the &lt;a href=&#34;https://github.com/open-telemetry/community/blob/main/projects/ci-cd.md&#34;&gt;CI/CD Observability SIG milestones for the remainder of 2024&lt;/a&gt;. Our goal is to finish out as many of the defined milestones as possible by the end of the year. Notably, we’re focused on:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Adding &lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/pull/1383&#34;&gt;metric conventions for version control systems&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Building tracing prototypes in CICD systems. (eg. ArgoCD, GitHub, GitLab, Jenkins)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Getting &lt;a href=&#34;https://github.com/open-telemetry/oteps/pull/258&#34;&gt;OTEP #258&lt;/a&gt; ready for implementation for the addition to the specification.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Adding additional attributes to the registry covering more domains like:&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/issues/1185&#34;&gt;Software outage incidents&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/issues/1184&#34;&gt;System attributes around CI/CD runners&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Beginning work on Trace and Event (log) signal specifics. (Building the bridge for interoperability between other specifications)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Adopting the changes from the &lt;a href=&#34;https://github.com/open-telemetry/oteps/pull/264&#34;&gt;Entity and Resource OTEP&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/issues/1193&#34;&gt;Enabling vendor specific extension(s)&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Open-source community reachout strategy for semantic adoption.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;All that has been mentioned thus far is just the beginning! We have lots of work defined on our &lt;a href=&#34;https://github.com/orgs/open-telemetry/projects/79&#34;&gt;CICD Project Board&lt;/a&gt;, and we have work in progress! We’ll continue to iterate on the above milestones that we’ve set out for the remainder of 2024. Here’s a couple things to look out for.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/pull/1383&#34;&gt;Version Control System metrics&lt;/a&gt; – leading indicators for DORA.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/27460#issuecomment-2302537838&#34;&gt;Traces from GitHub Actions&lt;/a&gt; and &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/35015#issuecomment-2344121664&#34;&gt;Audit Logs&lt;/a&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Special thanks to the following people who are making this component possible:&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Tyler Helmuth – Honeycomb&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Andrzej Stencel – Elastic&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Curtis Robert – Splunk&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Justin Voss&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kristof Kowalski – Anz Bank&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Mike Sarahan – Nvidia&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A corresponding version of the GitHub Receiver Component but implemented in &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/35207&#34;&gt;GitLab&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And much more!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;It takes a village to extend OpenTelemetry&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Woah, that’s a lot to do! Most certainly this SIG will continue beyond 2024 and through 2025. Standards are hard, but essential. And, we have some amazing folks that are part of the SIG and contributing to these standards! Who you may ask?&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Firstly we’d like to acknowledge key members of OpenTelemetry leadership committees who have heavily enabled the work we’ve done thus far, and will continue to do.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;From the OpenTelemetry Technical Committee we have two core sponsors, Carlos Alberto from Lightstep and Josh Suereth from Google. Both Carlos and Josh have been so supportive of the CICD work, really guiding us through the process and details we need to be successful.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;From the OpenTelemetry Governance Committee we’ve had Trask Stalnaker from Microsoft act as an exceptional ally, and Daniel Blanco from Skyscanner who now acts as our current Liaison. Both Trask and Daniel have been instrumental in supporting the SIG and enabling us to have our own meeting in the OpenTelemetry community.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In addition to those folks, we’ve had significant feedback, support, and contributions from the following key folks:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Yuri Shkuro – Creator of Jaeger, Co-Founder of OpenTelemetry&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Andrea Frittoli – Tekton CD Maintainer, CDEvents Co-creator, IBM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Emil Bäckmark – CDEvents and Eiffel Maintainer, Ericsson&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Magnus Bäck – Eiffel, Axis Communications&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Liudmila Molkova – Microsoft&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Christopher Kamphaus – Jemmic, Jenkins&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Giordano Ricci – Grafana Labs&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Giovanni Liva – Dynatrace, Keptn&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Ivan Calvo – Elastic, Jenkins&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Armin Ruech – Dynatrace&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Michael Safyan – Google&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Robb Kidd – Honeycomb&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pablo Chacin – Grafana Labs&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Alexandra Konrad – Elastic&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Alexander Wert – Elastic&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Joao Grassi – Dynatrace&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;DJ Gregor – Discover&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;That was a lot of names to name! We greatly appreciate everyone who has supported this initiative and helped bring it to fruition! It takes significant thinking ability and time to build industry wide standards. Hard problems are hard, but these folks have risen to the challenge to make the world of observability and CICD systems a better, more interoperable place!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Join the Working Group discourse and make an impact&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Want to learn more? Want to get involved in shaping CI/CD Observability?&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We invite developers and practitioners to participate in the discussions, contribute ideas, and help shape the future of CI/CD observability and the OpenTelemetry semantic conventions. Discussion takes place in the CNCF slack workspace under the #cicd-o11y channel, and you can chime in on GitHub and join the CICD SIG weekly calls every Thursday at 0600 PT.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;SIG 帖子，作者：&lt;a href=&#34;https://www.linkedin.com/in/horovits/&#34;&gt;Dotan Horovits&lt;/a&gt; 和 &lt;a href=&#34;https://www.linkedin. com/in/aqperkins/&#34;&gt;Adriel Perkins&lt;/a&gt;，SIG CI/CD 可观测性、OpenTelemetry 项目负责人&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;多年来，我们一直在讨论需要一种通用“语言”来报告和观察 CI/CD 管道，最后，我们看到这种语言的第一个“单词”进入了可观察性的“字典”—— OpenTelemetry 开放规范。通过最近发布的 OpenTelemetry 语义约定 v1.27.0，您可以找到用于报告 CI/CD 的指定属性管道&lt;/a&gt;。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是 &lt;a href=&#34;https://github.com/open-telemetry/community/blob/main/projects/ci-cd.md&#34;&gt;&lt;strong&gt;CI/ 辛勤工作的结果OpenTelemetry 内的 CD 可观测性特别兴趣小组 (SIG)&lt;/strong&gt;&lt;/a&gt;。当我们完成第一阶段的核心里程碑时，我们认为现在是与世界分享的好时机。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;iframe loading=&#34;lazy&#34; title=&#34;嵌入帖子&#34; src=&#34;https://www.linkedin.com/embed/feed/update/urn:li:share:7226847382200565762&#34; width=&#34;504&#34; height= “1126”frameborder =“0”allowfullscreen =“allowfullscreen”referrerpolicy =“no-referrer”&gt;&lt;/iframe&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;工程师需要对其 CI/CD 管道进行可观察性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@horovits/fcc6c10c4987&#34;&gt;CI/CD 可观察性&lt;/a&gt;对于确保软件高效可靠地发布到生产环境至关重要。运作良好的 CI/CD 管道可以通过缩短&lt;a href=&#34;https://horovits.medium.com/improving-devops-performance-with-dora-metrics-918b9604f8e2&#34;&gt;DORA 指标变更交付时间&lt;来直接影响业务成果/a&gt;，并能够快速识别和解决损坏或不稳定的进程。通过将可观察性集成到 CI/CD 工作流程中，团队可以实时监控管道的运行状况和性能，深入了解瓶颈和需要改进的领域。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;利用用于监控生产环境的相同成熟工具，组织可以扩展其可观察能力以包括发布周期，从而促进软件交付的整体方法。无论是开源工具还是专有工具，在为 CI/CD 管道选择可观察性工具链时都无需重新发明轮子。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;标准化的必要性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;然而，CI/CD 工具的多样化给实现一致的端到端可观察性带来了挑战。由于每个工具都有自己的方法、格式和语义约定来报告管道执行状态，工具链内的碎片可能会阻碍无缝监控。在工具之间迁移变得很痛苦，因为它需要重新实现现有的仪表板、报告和警报。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;事情变得更糟了当需要以统一的方式监控发布管道中涉及的多个工具时，这很有挑战性。这就是&lt;a href=&#34;https://horovits.medium.com/the-rise-of-open-standards-in-observability-highlights-from-kubecon-13694e732c97&#34;&gt;开放标准和规范变得至关重要的地方&lt;/a &gt;。他们创建了一种通用的统一语言，这种语言与工具和供应商无关，从而能够跨不同工具进行一致的可观察性，并允许团队对其 CI/CD 管道性能保持清晰、全面的了解。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;标准化的需求与创建上述语义约定（用于报告管道中发生的情况的语言）相关。通过系统传播此报告的方式也需要标准化，例如在管道执行期间生成进程时。这促使我们促进使用环境变量进行流程之间的上下文和行李传播的标准化，这是最近批准和合并的另一个重要里程碑。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;&lt;iframe loading=&#34;lazy&#34; title=&#34;嵌入帖子&#34; src=&#34;https://www.linkedin.com/embed/feed/update/urn:li:share:7254577377660334081&#34; width=&#34;504&#34; height= “701”frameborder =“0”allowfullscreen =“allowfullscreen”referrerpolicy =“no-referrer”&gt;&lt;/iframe&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;OpenTelemetry：CI/CD 可观测性规范的天然家园&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种认识促使我们寻找创建规范的正确方法。 OpenTelemetry 成为遥测数据生成和收集的标准。 OpenTelemetry 规范的任务正是解决这个问题：为遥测创建一个通用的统一且与供应商无关的规范。并位于云原生计算基金会 (CNCF) 之下，可以确保它保持开放和供应商中立。作为 OpenTelemetry 的长期倡导者，扩展 OpenTelemetry 以覆盖这一重要的 DevOps 用例才有意义。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;几年前，我们从&lt;a href=&#34;https://github.com/open-telemetry/oteps/pull/223&#34;&gt;OpenTelemetry 扩展提案 (OTEP #223)&lt;/a&gt; 开始，提出我们的想法是扩展 OpenTelemetry 以涵盖 CI/CD 可观察性用例。与此同时，我们在 CNCF slack 上启动了一个 slack 频道，聚集这个想法背后的爱好者，并开始集思广益。 Slack 渠道不断发展，我们很快发现这个问题在许多组织中都很常见。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;根据技术监督委员会和 CNCF 内其他人员的反馈，我们采取了请求授权的方式，在 OpenTelemetry 的语义约定 SIG（简称 SIG SemConv）下针对该主题成立一个专门的工作组。在他们的支持下，我们&lt;a href=&#34;https://github.com/open-telemetry/community/blob/main/projects/ci-cd.md&#34;&gt;启动了正式的 CI/CD 可观察性 SIG&lt;/a&gt;正式确定我们之前的 Slack 小组讨论和目标。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;&lt;iframe 加载=“懒惰”title =“嵌入帖子”src =“https://www.linkedin.com/embed/feed/update/urn：li：share：7155107098903666688”宽度=“504”高度=“961”frameborder =“0”allowfullscreen = “allowfullscreen”referrerpolicy =“no-referrer”&gt;&lt;/iframe&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;OpenTelemetry 的 CI/CD 可观测性 SIG&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自 2023 年 11 月以来，SIG 一直在与多家公司和开源项目的专家合作，积极致力于开发围绕 CI/CD 可观察性的语义标准。在成立之初，我们决定在 2024 年重点关注几个关键领域：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;CI/CD 系统中的一组初始通用属性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;开发原型以包含整体属性和信号特定属性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;推进将环境变量作为上下文传播器添加到 OpenTelemetry 规范 (OTEP #258) 的提案&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将 OpenTelemetry 约定与 &lt;a href=&#34;https://cdevents.dev/docs/&#34;&gt;CDEvents&lt;/a&gt; 和 &lt;a href=&#34;https://eiffel-community.github.io/ 桥接的策略”埃菲尔铁塔&lt;/a&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;起初，我们的 SIG 在每周一举行的大型语义约定工作组会议上举行会议。这为我们研究和讨论如何实现路线图上的目标提供了一个了解方向的好机会。这也使我们能够认识更大的 OpenTelemetry 社区的许多成员，征求对我们设计的反馈，并获得有关如何进行的指导。 OpenTelemetry 语义约定工作组一直非常支持 CI/CD 计划。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在完成并发布其初始里程碑（见下文）后，我们的 SIG 获得了自己的&lt;a href=&#34;https://github.com/open-telemetry/community/pull/2293&#34;&gt;专用会议时段&lt; /a&gt; &lt;a href=&#34;https://github.com/open-telemetry/community?tab=readme-ov-file#calendar&#34;&gt;OpenTelemetry 日历&lt;/a&gt;，每周四 0600 PT。在周一召开更大规模的语义大会之前，该小组聚集在这里讨论当前和未来的工作。在我们继续推动标准化这一关键领域的过程中，我们非常期待社区的持续支持和参与。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;&lt;iframe loading=&#34;lazy&#34; title=&#34;嵌入帖子&#34; src=&#34;https://www.linkedin.com/embed/feed/update/urn:li:share:7225246809189683200&#34; width=&#34;504&#34; height= “1026”frameborder =“0”allowfullscreen =“allowfullscreen”referrerpolicy =“no-referrer”&gt;&lt;/iframe&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;CI/CD 是最新 OpenTelemetry 语义约定的一部分&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;经过几个月的迭代和反馈，&lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/pull/1075&#34;&gt;第一组语义约定被合并&lt;/a &gt; 用于 v1.27.0 版本。这一变化为 CI/CD 带来了第一组基础语义，包括 CICD、artifacts、VCS、test 等。 &gt; 和&lt;code&gt;部署&lt;/code&gt; n空间。对于 CI/CD 可观测性 SIG 和整个行业来说，这是一个重要的里程碑。这为我们小组的所有其他目标开始形成并实现奠定了基础。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但这实际上意味着什么？它提供什么价值？让我们考虑两个命名空间的现实世界示例&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;跟踪版本控制系统 (VCS) 的版本修订&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://opentelemetry.io/docs/specs/semconv/attributes-registry/vcs/&#34;&gt;版本控制系统 (VCS) 属性&lt;/a&gt; 涵盖 VCS 中常见的多个区域，例如 refs和更改（拉取/合并请求）。 &lt;code&gt;vcs.repository.ref.revision&lt;/code&gt; 属性是元数据的关键部分。随着 GitHub 和 GitLab 等版本控制系统发出事件，它们现在可以具有这种语义兼容的属性。这意味着在集成代码、发布代码并将其部署到环境时，系统可以包含此属性并更轻松地跨界跟踪代码修订。如果部署失败，您可以快速查看代码修订版本并将其追溯到有错误的版本。当您计算更改交付时间和失败时，此属性实际上也是 &lt;a href=&#34;https://dora.dev/guides/dora-metrics-four-keys/&#34;&gt; DORA 指标&lt;/a&gt; 的关键元数据部署恢复时间。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;供应链安全工件，符合 SLSA 规范&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://opentelemetry.io/docs/specs/semconv/attributes-registry/artifact/&#34;&gt;artifact 属性命名空间&lt;/a&gt; 的第一个实现有多个属性。此命名空间中的一组关键属性涵盖与 &lt;a href=&#34;https://slsa.dev/ 紧密结合的&lt;a href=&#34;https://slsa.dev/attestation-model&#34;&gt;证明&lt;/a&gt; spec/v1.0/about&#34;&gt;SLSA&lt;/a&gt; 模型。这确实是第一次在可观察性和软件供应链安全之间建立直接联系。考虑以下由 SLSA 定义的&lt;a href=&#34;https://slsa.dev/spec/v1.0/threats&#34;&gt;供应链威胁模型&lt;/a&gt;：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1238”高度=“870”src=“https://www.cncf.io/ wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23.jpg&#34; alt=&#34;image&#34; class=&#34;wp-image-119840&#34; srcset=&#34;https://www.cncf .io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23.jpg 1238w，https://www.cncf.io/wp-content/uploads/2024/11/屏幕截图-2024-11-04-at-07.36.23-300x211.jpg 300w，https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36 .23-1024x720.jpg 1024w，https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23-768x540.jpg 768w，https:// /www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23-900x632.jpg 900w，https://www.cncf.io/wp-content/ uploads/2024/11/Screenshot-2024-11-04-at-07.36.23-285x200.jpg 285w，https://www.cncf.io/wp-content/uploads/2024/11/Screenshot-2024-11-04-at-07.36.23-569x400.jpg 569w“尺寸=”（最大宽度：1238px）100vw，1238px“referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些工件和证明的新属性有助于实时观察上图中建模的事件序列。实际上，现在存在的约定以及将来将添加的约定通过可观察性语义实现了安全性和平台工程等核心软件交付功能之间的互操作性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;CI/CD 可观测性工作组的下一步发展&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们在上面分享的第一个重要里程碑是 OTEP 的合并，用于扩展语义约定与新属性，它现在是 OpenTelemetry 语义约定最新版本的一部分。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;另一个重要的里程碑是刚刚获得批准和合并的环境变量上下文传播的 &lt;a href=&#34;https://github.com/open-telemetry/oteps/pull/258&#34;&gt;OTEP #258&lt;/a&gt; 。此 OTEP 为编写规范奠定了基础。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;&lt;iframe loading=&#34;lazy&#34; title=&#34;嵌入帖子&#34; src=&#34;https://www.linkedin.com/embed/feed/update/urn:li:share:7254563196093505536&#34; width=&#34;504&#34; height= “1152”frameborder =“0”allowfullscreen =“allowfullscreen”referrerpolicy =“no-referrer”&gt;&lt;/iframe&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;自从我们在初始里程碑上取得进展以来，我们更新了 &lt;a href=&#34;https://github.com/open-telemetry/community/blob/main/projects/ci-cd.md&#34; &gt;2024 年剩余时间内的 CI/CD 可观测性 SIG 里程碑&lt;/a&gt;。我们的目标是在年底前完成尽可能多的既定里程碑。值得注意的是，我们专注于：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;添加&lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/pull/1383&#34;&gt;版本控制系统的度量约定&lt;/a&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在 CICD 系统中构建跟踪原型。 （例如 ArgoCD、GitHub、GitLab、Jenkins）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;准备好 &lt;a href=&#34;https://github.com/open-telemetry/oteps/pull/258&#34;&gt;OTEP #258&lt;/a&gt; 为实施添加规范做好准备。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;向注册表添加更多属性，涵盖更多域，例如：&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/issues/1185&#34;&gt;软件中断事件&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/issues/1184&#34;&gt;CI/CD 运行程序的系统属性&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;开始研究跟踪和事件（日志）信号细节。 （为其他规范之间的互操作性搭建桥梁）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;采用&lt;a href=&#34;https://github.com/open-telemetry/oteps/pull/264&#34;&gt;实体和资源 OTEP&lt;/a&gt; 中的更改。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/issues/1193&#34;&gt;启用供应商特定扩展&lt;/a&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;语义采用的开源社区联系策略。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;到目前为止所提到的一切仅仅是开始！我们在 &lt;a href=&#34;https://github.com/orgs/open-telemetry/projects/79&#34;&gt;CICD 项目委员会&lt;/a&gt;上定义了很多工作，并且我们正在进行中！我们将继续迭代我们在 2024 年剩余时间内设定的上述里程碑。以下是一些需要注意的事项。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/semantic-conventions/pull/1383&#34;&gt;版本控制系统指标&lt;/a&gt; – DORA 的领先指标。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/27460#issuecomment-2302537838&#34;&gt;来自 GitHub 操作的跟踪&lt;/a&gt; 和 &lt;a href=&#34;https ://github.com/open-telemetry/opentelemetry-collector-contrib/issues/35015#issuecomment-2344121664&#34;&gt;审核日志&lt;/a&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;特别感谢以下人员使该组件成为可能：&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;泰勒·赫尔穆斯 (Tyler Helmuth) – 蜂巢&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Andrzej Stencel – 弹性&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;柯蒂斯·罗伯特 - Splunk&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;贾斯汀·沃斯&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kristof Kowalski – 澳新银行&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Mike Sarahan - Nvidia&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;GitHub Receiver 组件的相应版本，但在 &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/35207&#34;&gt;GitLab&lt;/a&gt; 中实现&lt;/li &gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;还有更多！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;需要一个村庄来扩展 OpenTelemetry&lt;/h2​​&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;哇哦，要做的事情太多了！毫无疑问，这个 SIG 将持续到 2024 年之后并一直持续到 2025 年。标准很严格，但至关重要。而且，我们有一些了不起的人，他们是 SIG 的一部分，并为这些标准做出了贡献！你可能会问谁？ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;首先，我们要感谢 OpenTelemetry 领导委员会的主要成员，他们为我们迄今为止所做的工作以及将继续做的工作提供了大力支持。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry 技术委员会有两位核心赞助商，来自 Lightstep 的 Carlos Alberto 和来自 Google 的 Josh Suereth。卡洛斯和乔希都非常支持 CICD 的工作，真正指导我们完成成功所需的流程和细节。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在 OpenTelemetry 治理委员会中，我们邀请了来自 Microsoft 的 Trask Stalnaker 作为特殊盟友，以及来自 Skyscanner 的 Daniel Blanco，他现在担任我们的现任联络人。 Trask 和 Daniel 在支持 SIG 并使我们能够在 OpenTelemetry 社区中召开自己的会议方面发挥了重要作用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了这些人之外，我们还得到了以下关键人员的重要反馈、支持和贡献：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Yuri Shkuro – Jaeger 的创建者、OpenTelemetry 的联合创始人&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Andrea Frittoli – IBM Tekton CD 维护者、CDEvents 联合创始人&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Emil Bäckmark – 爱立信 CDEvents 和 Eiffel 维护人员&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Magnus Bäck – 艾菲尔铁塔、安讯士通讯&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Liudmila Molkova - 微软&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;克里斯托弗·坎普豪斯 �� 杰米克，詹金斯&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;佐丹奴·里奇 – Grafana Labs&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Giovanni Liva – Dynatrace、Keptn&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Ivan Calvo – 弹性、Jenkins&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Armin Ruech – Dynatrace&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;迈克尔·萨夫扬 - Google&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;罗伯·基德 - 蜂巢&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pablo Chacin – Grafana 实验室&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;亚历山德拉·康拉德 (Alexandra Konrad) – 弹性&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Alexander Wert – 弹性&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;若昂·格拉西 (Joao Grassi) – Dynatrace&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;DJ Gregor – 发现&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有很多名字要命名！我们非常感谢所有支持这一倡议并帮助其实现的人！建立行业范围的标准需要大量的思维能力和时间。困难的问题很难，但这些人已经迎接挑战，让可观察性和 CICD 系统的世界变得更好、更具互操作性！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;加入工作组讨论并产生影响&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;想了解更多吗？想要参与塑造 CI/CD 可观察性吗？ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们邀请开发者和从业者参与讨论、贡献想法并帮助塑造 CI/CD 可观察性和 OpenTelemetry 语义约定的未来。讨论在 #cicd-o11y 频道下的 CNCF slack 工作区中进行，您可以在 GitHub 上插话并参加每周四太平洋时间 0600 点举行的 CICD SIG 每周电话会议。 &lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 03 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kubectl logs tail: a guide to tailing Kubernetes logs】Kubectl Logs tail：跟踪 Kubernetes 日志的指南</title>
      <link>https://www.cncf.io/blog/2024/11/01/kubectl-logs-tail-a-guide-to-tailing-kubernetes-logs/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on &lt;a href=&#34;https://middleware.io/blog/kubectl-logs-tail/&#34;&gt;Middleware’s blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the world of cloud-native applications,&amp;nbsp;&lt;a href=&#34;https://middleware.io/blog/kubernetes-observability/&#34;&gt;Kubernetes&lt;/a&gt;&amp;nbsp;stands as the go-to platform for container orchestration (the automated process of managing, scaling, and maintaining containerized applications across multiple hosts). As applications grow in scale and complexity, effective logging becomes crucial for monitoring, troubleshooting, and maintaining smooth operations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This guide explores the intricacies of&amp;nbsp;&lt;a href=&#34;https://middleware.io/blog/kubernetes-logging/&#34;&gt;Kubernetes logging&lt;/a&gt;, its significance, and the common commands one may encounter in their monitoring activities. We’ll also dive into the various logging sources within a Kubernetes environment, accompanied by code examples to illustrate key concepts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;overview-of-kubernetes-logging&#34;&gt;Overview of Kubernetes logging&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes log monitoring involves collecting and analyzing log data from various sources within a Kubernetes cluster. Logs provide valuable insights into the state of your applications, nodes, and the cluster itself. They help identify issues,&amp;nbsp;&lt;a href=&#34;https://middleware.io/blog/what-is-application-performance-monitoring/&#34;&gt;understand application behavior&lt;/a&gt;, and maintain overall system health.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;importance-of-logging-in-kubernetes&#34;&gt;Importance of logging in Kubernetes&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Troubleshooting:&amp;nbsp;&lt;/strong&gt;Logs help diagnose and resolve issues by providing a detailed record of events.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Monitoring:&lt;/strong&gt;&amp;nbsp;Continuous&amp;nbsp;&lt;a href=&#34;https://middleware.io/blog/what-is-log-monitoring/&#34;&gt;log monitoring&lt;/a&gt;&amp;nbsp;ensures that applications run smoothly and helps detect anomalies.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Compliance:&lt;/strong&gt;&amp;nbsp;Logs can be used to maintain compliance with industry standards and regulations.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Performance Optimization:&amp;nbsp;&lt;/strong&gt;Analyzing logs can reveal performance bottlenecks and opportunities for optimization.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;common-logging-challenges-in-kubernetes-environments&#34;&gt;Common logging challenges in Kubernetes environments&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Volume of Logs:&lt;/strong&gt;&amp;nbsp;Kubernetes’ dynamic and scalable nature can generate massive amounts of log data, making it difficult to manage and analyze.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Log Retention:&amp;nbsp;&lt;/strong&gt;Determining how long to retain logs and ensuring they are stored efficiently.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Log Aggregation:&amp;nbsp;&lt;/strong&gt;Collecting logs from multiple sources and aggregating them in a centralized location.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Log Correlation:&amp;nbsp;&lt;/strong&gt;Correlating logs from different system parts to get a complete picture of events.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;understanding-kubernetes-logging&#34;&gt;Understanding Kubernetes logging&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-1-logging-architecture&#34;&gt;1. Logging architecture&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;i. How logging works in Kubernetes&lt;/strong&gt;?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In Kubernetes, logs are typically generated by applications running in containers, the nodes on which these containers run, and the cluster components. Kubernetes does not handle log storage and analysis directly but allows integration with various logging solutions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When a container writes logs, they are captured by the container runtime and can be accessed using commands like `&lt;a href=&#34;https://middleware.io/blog/kubectl-cheat-sheet/&#34;&gt;kubectl logs&lt;/a&gt;`. These logs can then be shipped to external logging systems for further analysis.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;ii. Logging drivers and options&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A logging driver is a component in containerized environments that manages how and where logs are stored and processed. It defines the mechanism by which logs from containers are collected, formatted, and sent to a specific logging backend or storage system. By configuring logging drivers, you can control the&amp;nbsp;&lt;a href=&#34;https://middleware.io/blog/what-is-structured-logging/&#34;&gt;flow of log data&lt;/a&gt;, making it easier to monitor, troubleshoot, and analyze the performance and behavior of your applications.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes supports various logging drivers and options to suit different needs.&amp;nbsp;&lt;a href=&#34;https://middleware.io/blog/understanding-the-docker-ecosystem/&#34;&gt;Docker&lt;/a&gt;, which is often used in Kubernetes clusters, offers multiple logging drivers such as json-file, syslog,&amp;nbsp;&lt;strong&gt;journald, fluentd,&amp;nbsp;&lt;/strong&gt;and&lt;strong&gt;&amp;nbsp;gelf&lt;/strong&gt;. Each driver has its own features and configuration options.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;You can also integrate your logs with the Middleware. Simply&amp;nbsp;&lt;/em&gt;&lt;/strong&gt;&lt;a href=&#34;https://docs.middleware.io/agent-installation/kubernetes&#34;&gt;&lt;strong&gt;&lt;em&gt;click here&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;&amp;nbsp;to know more. You can also use this guide to set up monitoring with&amp;nbsp;&lt;/em&gt;&lt;/strong&gt;&lt;a href=&#34;https://docs.middleware.io/apm-configuration/node-js&#34;&gt;&lt;strong&gt;&lt;em&gt;Node.js&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-2-kubernetes-logging-sources&#34;&gt;2. Kubernetes logging sources&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;i. Application logs&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Application logs are generated by the applications running inside&amp;nbsp;&lt;a href=&#34;https://middleware.io/blog/containerization/&#34;&gt;containers&lt;/a&gt;. These logs are essential for understanding application-specific events and behaviors.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To access application logs, you can use the `kubectl logs` command:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs &amp;lt;pod-name&amp;gt;&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;ii. Node Logs&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Node logs are generated by the Kubernetes nodes and include logs from the kubelet, container runtime, and other node-level components. These logs help monitor the health and performance of individual nodes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To access node logs, you can use SSH to connect to the node and view logs stored in the `/var/log` directory:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;ssh user@node-ip&#xA;&#xA;sudo tail -f /var/log/kubelet.log&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;iii. Cluster Logs&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cluster logs encompass logs from the entire Kubernetes cluster, including logs from the control plane components like the API server, scheduler, and controller manager. These logs are crucial for understanding the cluster’s overall health and performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To access cluster logs, you can use the `kubectl` command with the appropriate component:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs &amp;lt;pod-name&amp;gt; -n kube-system&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here, kube-system is a namespace in Kubernetes used to host the core infrastructure components and system services that are essential for running and managing the cluster. It is a predefined namespace that comes with every Kubernetes installation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;setting-the-stage&#34;&gt;Setting the stage&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-using-a-demo-microservice-to-explain-logging-monitoring-and-debugging&#34;&gt;Using a demo microservice to explain logging, monitoring, and debugging&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To understand the intricacies of logging in Kubernetes, we’ll use a demo&amp;nbsp;&lt;a href=&#34;https://middleware.io/blog/microservices-architecture/&#34;&gt;microservice&lt;/a&gt;. This simple project will help us explore how to set up logging, monitor logs, and debug issues within a production-like Kubernetes environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-basics-of-the-project&#34;&gt;Basics of the project&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The demo microservice is a Node.js application with basic functionalities like user authentication, transactions, and payments. It includes several endpoints to simulate different scenarios and log relevant events.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s the basic structure of the project:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;1.&amp;nbsp;&lt;strong&gt;app.js&lt;/strong&gt;: The main application file.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2.&amp;nbsp;&lt;strong&gt;Dockerfile&lt;/strong&gt;: Used to containerize the application.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;3.&amp;nbsp;&lt;strong&gt;deployment.yaml&lt;/strong&gt;: Kubernetes deployment configuration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;4.&amp;nbsp;&lt;strong&gt;service.yaml&lt;/strong&gt;: Kubernetes service configuration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;5.&amp;nbsp;&lt;strong&gt;simulate_requests.sh&lt;/strong&gt;: Script to simulate various user interactions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-setting-up-the-project&#34;&gt;Setting up the project&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;1. Create the Application File (`app.js`)&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;First create the project directory and initialize an empty node project. Then install&amp;nbsp;&lt;a href=&#34;https://expressjs.com/&#34;&gt;ExpressJS&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```&#xA;mkdir kubernetes-logging-demo&#xA;cd kubernetes-logging-demo&#xA;npm init -y&#xA;npm install express&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The application handles user authentication, transactions, and payments, and includes logging for different events. Here’s the complete code for `app.js` file.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```javascript&#xA;const express = require(&#39;express&#39;);&#xA;const app = express();&#xA;const port = 3000;&#xA;&#xA;app.use(express.json());&#xA;&#xA;// Simulated database&#xA;const users = {&#xA;    &#34;john_doe&#34;: { password: &#34;12345&#34;, balance: 100 },&#xA;    &#34;jane_doe&#34;: { password: &#34;67890&#34;, balance: 200 }&#xA;};&#xA;&#xA;// Helper function for logging&#xA;const log = (level, message) =&amp;gt; {&#xA;    const timestamp = new Date().toLocaleString();&#xA;    console.log(`${timestamp} - ${level} - ${message}`);&#xA;};  &#xA;&#xA;// Middleware to log requests&#xA;app.use((req, res, next) =&amp;gt; {&#xA;    log(&#39;info&#39;, `Request received: ${req.method} ${req.originalUrl}`);&#xA;    next();&#xA;});&#xA;&#xA;// Endpoint for user authentication&#xA;app.post(&#39;/login&#39;, (req, res) =&amp;gt; {&#xA;    const { username, password } = req.body;&#xA;    if (users[username] &amp;amp;&amp;amp; users[username].password === password) {&#xA;        log(&#39;info&#39;, `User login successful: ${username}`);&#xA;        res.status(200).send(&#39;Login successful&#39;);&#xA;    } else {&#xA;        log(&#39;warn&#39;, `User login failed: ${username}`);&#xA;        res.status(401).send(&#39;Login failed&#39;);&#xA;    }&#xA;});&#xA;&#xA;// Endpoint for logging user transactions&#xA;app.post(&#39;/transaction&#39;, (req, res) =&amp;gt; {&#xA;    const { username, amount } = req.body;&#xA;    if (users[username]) {&#xA;        users[username].balance += amount;&#xA;        log(&#39;info&#39;, `Transaction successful: ${username} new balance: ${users[username].balance}`);&#xA;        res.status(200).send(&#39;Transaction successful&#39;);&#xA;    } else {&#xA;        log(&#39;warn&#39;, `Transaction failed: User not found - ${username}`);&#xA;        res.status(404).send(&#39;User not found&#39;);&#xA;    }&#xA;});&#xA;&#xA;// Endpoint for simulating payment processing&#xA;app.post(&#39;/payment&#39;, (req, res) =&amp;gt; {&#xA;    const { username, amount } = req.body;&#xA;    if (users[username]) {&#xA;        if (users[username].balance &amp;gt;= amount) {&#xA;            users[username].balance -= amount;&#xA;            log(&#39;info&#39;, `Payment successful: ${username} amount: ${amount}`);&#xA;            res.status(200).send(&#39;Payment successful&#39;);&#xA;        } else {&#xA;            log(&#39;warn&#39;, `Payment failed: Insufficient funds - ${username}`);&#xA;            res.status(400).send(&#39;Insufficient funds&#39;);&#xA;        }&#xA;    } else {&#xA;        log(&#39;warn&#39;, `Payment failed: User not found - ${username}`);&#xA;        res.status(404).send(&#39;User not found&#39;);&#xA;    }&#xA;});&#xA;&#xA;// Endpoint for simulating security incident&#xA;app.post(&#39;/admin&#39;, (req, res) =&amp;gt; {&#xA;    const { username } = req.body;&#xA;    if (username === &#39;admin&#39;) {&#xA;        log(&#39;error&#39;, `Unauthorized access attempt by user: ${username}`);&#xA;        res.status(403).send(&#39;Unauthorized access&#39;);&#xA;    } else {&#xA;        res.status(200).send(&#39;Welcome&#39;);&#xA;    }&#xA;});&#xA;&#xA;app.listen(port, () =&amp;gt; {&#xA;    log(&#39;info&#39;, `Dummy microservice listening at http://localhost:${port}`);&#xA;});&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;2. Create the Dockerfile&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This file is used to build a Docker image of the application.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```Dockerfile&#xA;FROM node:18&#xA;&#xA;WORKDIR /usr/src/app&#xA;&#xA;COPY package*.json ./&#xA;RUN npm install&#xA;&#xA;COPY . .&#xA;&#xA;EXPOSE 3000&#xA;CMD [&#34;node&#34;, &#34;app.js&#34;]&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;3. Create the Kubernetes Deployment Configuration (`deployment.yaml`)&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This file defines how the application will be deployed on Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```yaml&#xA;apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  name: logging-demo&#xA;spec:&#xA;  replicas: 1&#xA;  selector:&#xA;    matchLabels:&#xA;      app: logging-demo&#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        app: logging-demo&#xA;    spec:&#xA;      containers:&#xA;      - name: logging-demo&#xA;        image: kubernetes-logging-demo:latest&#xA;        imagePullPolicy: Never&#xA;        ports:&#xA;        - containerPort: 3000&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;4. Create the Kubernetes Service Configuration (`service.yaml`)&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This file defines the service that will expose the application within the Kubernetes cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```yaml&#xA;apiVersion: v1&#xA;kind: Service&#xA;metadata:&#xA;  name: logging-demo-service&#xA;spec:&#xA;  selector:&#xA;    app: logging-demo&#xA;  ports:&#xA;    - protocol: TCP&#xA;      port: 80&#xA;      targetPort: 3000&#xA;      nodePort: 30001&#xA;  type: NodePort&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;5. Simulate User Interactions (`simulate_requests.sh`)&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This script sends various requests to the application to simulate different scenarios and trigger logs. Note that this is an infinite loop until terminated.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#xA;```bash&#xA;#!/bin/bash&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Define the base URL for the application&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;BASE_URL=&#34;http://localhost:30001&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Define an array of curl commands to simulate different scenarios&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl_commands=(&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# Successful login&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#34;curl -i -X POST $BASE_URL/login -H &#39;Content-Type: application/json&#39; -d &#39;{\&#34;username\&#34;:\&#34;john_doe\&#34;,\&#34;password\&#34;:\&#34;12345\&#34;}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Failed login due to wrong password&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/login -H &#39;Content-Type: application/json&#39; -d &#39;{\&#34;username\&#34;:\&#34;john_doe\&#34;,\&#34;password\&#34;:\&#34;wrong_password\&#34;}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Successful transaction&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/transaction -H &#39;Content-Type: application/json&#39; -d &#39;{\&#34;username\&#34;:\&#34;john_doe\&#34;,\&#34;amount\&#34;:50}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Failed transaction because the user is not found&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/transaction -H &#39;Content-Type: application/json&#39; -d &#39;{\&#34;username\&#34;:\&#34;unknown_user\&#34;,\&#34;amount\&#34;:50}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Successful payment&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/payment -H &#39;Content-Type: application/json&#39; -d &#39;{\&#34;username\&#34;:\&#34;jane_doe\&#34;,\&#34;amount\&#34;:50}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Failed payment due to insufficient funds&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/payment -H &#39;Content-Type: application/json&#39; -d &#39;{\&#34;username\&#34;:\&#34;john_doe\&#34;,\&#34;amount\&#34;:200}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Unauthorized access attempt&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/admin -H &#39;Content-Type: application/json&#39; -d &#39;{\&#34;username\&#34;:\&#34;admin\&#34;}&#39;&#34;&#xA;&#xA;)&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Infinite loop to continuously execute curl requests&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;while true; do&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Select a random curl command from the array&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;cmd=${curl_commands[$RANDOM % ${#curl_commands[@]}]}&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Print the command being executed (for debugging/visibility)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;echo &#34; Executing: $cmd&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;3&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Execute the selected curl command&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;eval $cmd&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Optional: Add a short sleep to mimic real user behavior&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This adds a delay of 1 second between requests&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sleep 1&#xA;&#xA;done&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-running-the-project-as-a-kubernetes-pod-locally&#34;&gt;Running the project as a Kubernetes pod locally&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;1. Build the docker image&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;docker build -t kubernetes-logging-demo:latest .&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;2. Deploy to Kubernetes&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kubectl apply -f deployment.yaml&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kubectl apply -f service.yaml&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;3. Simulate User Interactions (this will make our app generate the logs)&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Use a dedicated bash terminal to keep this simulation running as required.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;./simulate_requests.sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With this, your local setup is ready and you can test out different `kubectl` commands in real time. This setup helps us understand how to collect, monitor, and analyze logs, which is crucial for maintaining the health and performance of our applications.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;scenarios-where-logging-is-crucial&#34;&gt;Scenarios where logging is crucial&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;1. Tracking user activity&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Monitoring user activity is essential for understanding user behavior, identifying trends, and detecting unusual patterns that might indicate security issues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;2. Debugging payment issues&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Payment-related logs are critical for resolving transaction failures, identifying bugs in the payment processing logic, and ensuring that financial operations are secure and reliable.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;basics-of-kubectl-logs-command&#34;&gt;Basics of kubectl logs Command&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The `kubectl logs` command is a powerful tool for accessing the logs of containers running in your Kubernetes cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Syntax and Basic Usage&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs [OPTIONS] POD_NAME [-c CONTAINER_NAME]&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– `POD_NAME`: The name of the pod whose logs you want to view.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– `-c CONTAINER_NAME`: (Optional) Specifies the container within the pod. Useful if the pod has multiple containers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s a simple example to get logs from a pod:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs my-pod&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If the pod contains multiple containers, specify the container name:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs my-pod -c my-container&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you have properly setup the demo project, you should be able to access your pod name by using this command:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl get pods&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Your terminal might output something like this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;NAME&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; READY &amp;nbsp; STATUS&amp;nbsp; &amp;nbsp; RESTARTS &amp;nbsp; AGE&#xA;&#xA;logging-demo-6cf76dcb4c-mz7bv &amp;nbsp; 1/1 &amp;nbsp; &amp;nbsp; Running &amp;nbsp; 0&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 69m&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, to access the logs of this pod, you just have to run this command:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs logging-demo-6cf76dcb4c-mz7bv&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The corresponding output will look something like this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;6/29/2024, 11:24:52 AM - info - Dummy microservice listening at http://localhost:3000&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s use our `simulate_requests` script to send requests to our pod and try to monitor the logs generated. To do this, simply keep running the script in a dedicated terminal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Filtering and Viewing Logs by Pod and Container&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can filter and view logs for specific pods and containers to narrow down your troubleshooting efforts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Viewing Logs for a Specific Pod&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To view logs for a specific pod:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs my-pod&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Viewing Logs for a Specific Container in a Pod&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As explained above, if the pod has multiple containers, specify the container name:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs my-pod -c my-container&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Viewing Logs with a Label Selector&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can also use label selectors to filter logs from pods that match specific labels:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs -l app=my-app&#xA;&#xA;```&#xA;&#xA;For our example project, this would look something like this:&#xA;&#xA;```sh&#xA;&#xA;kubectl logs -l app=logging-demo&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Note that the app name label is configured in the `deployment.yaml` file.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Analyzing Startup and Runtime Logs&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Startup logs are crucial for identifying issues that occur during the initialization phase of your containers, while runtime logs help monitor the ongoing operations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Viewing Startup Logs&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To analyze logs from the startup phase of a pod, you can specify the time range from the pod’s creation using the –since flag with the kubectl logs command. This flag allows you to retrieve logs starting from a specified duration in the past, which is particularly useful for investigating recent startups.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs --since=5m my-pod&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Viewing Runtime Logs&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For continuous monitoring of runtime logs, you can use this command:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs my-pod --follow&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The `–follow` option streams the logs in real-time, allowing you to monitor the container’s activities as they happen.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;deep-dive-into-kubectl-logs-–tail-command&#34;&gt;Deep Dive into kubectl logs –tail Command&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The `kubectl logs –tail` command is particularly useful for real-time log monitoring and debugging. It helps you view the most recent log entries without having to go through the entire log history.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;How Does It Work, and How Does It Differ from Other Log Options?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The `–tail` option with `kubectl logs` fetches the last few lines of logs from a pod or container.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Basic syntax:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs my-pod --tail=50&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command retrieves the last 50 lines of logs from `my-pod`.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Differences from Other Log Options&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;–since: Retrieves logs from a specific time period.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;–follow: Stream logs in real-time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;–tail: Fetches a specified number of recent log lines.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Practical Use Cases&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How to Tail Logs for Real-Time Monitoring?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To tail logs for real-time monitoring of a pod, use this command:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs my-pod --follow --tail=50&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This streams the last 50 lines of logs and continues to stream new log entries in real-time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How to Tail Logs for a Specific Component in the Project&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For tailing logs of a specific component, specify the container name:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs my-pod -c my-container --tail=50&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command fetches the last 50 lines of logs from the `my-container` container within `my-pod`.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For our demo project, to get the container details within a pod, you can use the below command.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl describe pod logging-demo-6cf76dcb4c-mz7bv -n default&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;advanced-techniques&#34;&gt;Advanced Techniques&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Combining –tail with Other Flags&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Combining the `–tail` option with other flags in `kubectl logs` can enhance your logging capabilities and provide more detailed insights.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;#### Examples: -f (follow), –since, –timestamps&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Follow (`-f`):&lt;/strong&gt;&amp;nbsp;Combines real-time streaming with tailing the logs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;kubectl logs my-pod --tail=50 -f&#xA;&#xA;&amp;nbsp;&amp;nbsp;```&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command fetches the last 50 lines and streams new logs in real-time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Since (`–since`):&lt;/strong&gt;&amp;nbsp;Retrieves logs from a specific time period.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;kubectl logs my-pod --tail=50 --since=1h&#xA;&#xA;&amp;nbsp;&amp;nbsp;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;This command fetches the last 50 lines of logs from the past hour.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Timestamps (`–timestamps`)&lt;/strong&gt;: Adds timestamps to each log entry.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;kubectl logs my-pod --tail=50 --timestamps&#xA;&#xA;&amp;nbsp;&amp;nbsp;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command includes timestamps for the last 50 log lines, useful for chronological analysis if the component logs do not have timestamps of their own.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Real-World Examples Where These Combinations Are Useful&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;1. Debugging a Deployment Issue:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;kubectl logs my-pod --tail=100 -f --since=10m&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;```&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;This command is useful to debug recent issues by streaming the last 100 lines of logs from the past 10 minutes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;2. Performance Monitoring:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kubectl logs my-pod --tail=200 --timestamps -f&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Use this command to monitor performance metrics in real-time with precise timestamps.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you use it with our demo project, here’s the output that you may see. Note that the logs generated are due to the simulated requests we are sending.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kubectl logs logging-demo-6cf76dcb4c-mz7bv --tail=200 --timestamps -f&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2024-06-29T12:45:42.618459492Z 6/29/2024, 12:45:42 PM - info - Request received: POST /payment&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2024-06-29T12:45:42.618497775Z 6/29/2024, 12:45:42 PM - warn - Payment failed: Insufficient funds - jane_doe&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2024-06-29T12:45:43.695529512Z 6/29/2024, 12:45:43 PM - info - Request received: POST /transaction&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2024-06-29T12:45:43.695560010Z 6/29/2024, 12:45:43 PM - info - Transaction successful: john_doe new balance: 200&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2024-06-29T12:45:44.766836119Z 6/29/2024, 12:45:44 PM - info - Request received: POST /login&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2024-06-29T12:45:44.766874021Z 6/29/2024, 12:45:44 PM - warn - User login failed: john_doe&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Using Labels and Selectors&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Filtering logs using labels and selectors helps you focus on specific parts of your application, especially in large clusters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Filtering Logs Using Labels and Selectors&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To filter logs by labels:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs -l app=my-app --tail=50&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command fetches the last 50 lines of logs from all pods labeled `app=my-app`.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-examples-to-illustrate-the-usage&#34;&gt;&lt;strong&gt;Examples to Illustrate the Usage&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;1. Filtering Logs for the `frontend` Component:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;kubectl logs -l component=frontend --tail=100 -f&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;```&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command fetches and streams the last 100 lines of logs from all frontend components.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;2. Filtering Logs for Pods Running on a Specific Node:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;kubectl logs -l node=worker-node1 --tail=50&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Use this command to fetch logs from pods running on `worker-node1`.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can fetch the list of nodes in your environment using the `kubectl get nodes` command.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Component names are generally configured in your deployment or pod configs, similar to app labels, for better identification.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;scripting-and-automation&#34;&gt;Scripting and automation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Automating log tailing with scripts and integrating with CI/CD pipelines can enhance continuous monitoring and streamline troubleshooting.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-automating-log-tailing-with-scripts&#34;&gt;&lt;strong&gt;Automating log tailing with scripts&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can create scripts to automate the process of tailing logs. Here’s an example script:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;#!/bin/bash&#xA;&#xA;# Script to tail logs from all pods with label app=my-app&#xA;&#xA;kubectl logs -l app=logging-demo --tail=100 -f&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Save this script as `tail_logs.sh` and run it to automate log tailing.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-integration-with-ci-cd-pipelines-for-continuous-monitoring&#34;&gt;&lt;strong&gt;Integration with CI/CD pipelines for continuous monitoring&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s how you can integrate log tailing in your CI/CD pipelines to monitor deployments and application health continuously.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```yaml&#xA;&#xA;# Example Jenkinsfile&#xA;&#xA;pipeline {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;agent any&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stages {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stage(&#39;Deploy&#39;) {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;steps {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sh &#39;kubectl apply -f deployment.yaml&#39;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stage(&#39;Monitor Logs&#39;) {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;steps {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sh &#39;./tail_logs.sh&#39;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&#xA;&#xA;}&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This Jenkins pipeline deploys your application and then tails the logs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;scenario-based-exploration&#34;&gt;Scenario-Based Exploration&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once we have run the `simulate_requests.sh` file for sometime, we would have generated a lot of logs in our pod. We have simulated many different positive and negative requests. How do we actually analyze these logs in a production environment? Let’s explore some operations with our project.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Scenario 1: Monitoring Application Performance&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Using tail logs to monitor key performance metrics helps understand your&amp;nbsp;&lt;a href=&#34;https://middleware.io/blog/why-is-monitoring-your-application-important/&#34;&gt;application’s behavior&amp;nbsp;&lt;/a&gt;and performance under load. Here’s how you can effectively monitor and compute these metrics in real-time. You can run these commands in a bash terminal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Using Tail Logs to Monitor Key Performance Metrics&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can create custom scripts to store your logic to measure specific things based on your logs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs -l app=logging-demo --tail=100 | awk &#39;&#xA;&#xA;function parseTime(ts, &amp;nbsp; date, time, ampm, h, m, s) {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;split(ts, datetime, &#34;, &#34;)&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;date = datetime[1]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;time = datetime[2]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ampm = datetime[3]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;split(date, date_parts, &#34;/&#34;)&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;split(time, time_parts, &#34;:&#34;)&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;h = time_parts[1]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m = time_parts[2]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s = time_parts[3]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (ampm == &#34;PM&#34; &amp;amp;&amp;amp; h &amp;lt; 12) h += 12&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (ampm == &#34;AM&#34; &amp;amp;&amp;amp; h == 12) h = 0&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (h * 3600) + (m * 60) + s&#xA;&#xA;}&#xA;&#xA;/-/ {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;curr_time = parseTime($1 &#34; &#34; $2 &#34; &#34; $3)&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (prev_time &amp;gt; 0) {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;response_time = curr_time - prev_time&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum += response_time&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;count += 1&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (response_time &amp;gt; max || count == 1) max = response_time&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (response_time &amp;lt; min || count == 1) min = response_time&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;prev_time = curr_time&#xA;&#xA;}&#xA;&#xA;END {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (count &amp;gt; 0) {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf &#34;Average Response Time: %.2f seconds\nMax Response Time: %d seconds\nMin Response Time: %d seconds\n&#34;, sum/count, max, min&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print &#34;No response times calculated.&#34;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&#xA;&#xA;}&#39;&#xA;&#xA;```&#xA;&#xA;Output:&#xA;&#xA;```sh&#xA;&#xA;Average Response Time: 0.54 seconds&#xA;&#xA;Max Response Time: 2 seconds&#xA;&#xA;Min Response Time: 0 seconds&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command fetches the last 100 log lines from all pods labeled `app=logging-demo` in real-time, and uses `awk` to compute key metrics:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Average Response Time&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Max Response Time&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Min Response Time&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Scenario 2: Investigating Security Incidents&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Tail logs are essential for identifying and analyzing suspicious activities, enabling a quick response to security incidents. Here’s how you can filter logs specific to such activity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Tail Logs for Identifying and Analyzing Suspicious Activities&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl logs -l app=logging-demo --tail=200 | grep -i &#39;error\|failed\|unauthorized&#39; | awk &#39;{count += 1} END {print &#34;Total Security Incidents Detected:&#34;, count}&#39;&#xA;&#xA;```&#xA;&#xA;Output:&#xA;&#xA;```sh&#xA;&#xA;Total Security Incidents Detected: 63&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command retrieves the last 200 log lines and filters for keywords such as “error,” “failed,” and “unauthorized,” which can help in identifying potential security breach attempts. It uses `awk` to count the number of incidents detected. The `awk` command is a versatile tool for text processing in Unix-like systems. It excels in pattern matching, field manipulation, and generating reports using custom logic as per your application needs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By running such commands and scripts, you can directly compute and track essential metrics, enabling real-time monitoring and swift response to any issues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By mastering these logging techniques, you can significantly enhance your ability to monitor, troubleshoot, and secure your Kubernetes applications. Start implementing these strategies today to maintain robust and reliable cloud-native applications.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Want to use Middleware for log monitoring? Check out our detailed&amp;nbsp;&lt;a href=&#34;https://docs.middleware.io/workflow/log-monitoring/overview&#34;&gt;documentation here&lt;/a&gt;.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初发布于&lt;a href=&#34;https://middleware.io/blog/kubectl-logs-tail/&#34;&gt;中间件博客&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在云原生应用程序领域，&lt;a href=&#34;https://middleware.io/blog/kubernetes-observability/&#34;&gt;Kubernetes&lt;/a&gt; 是容器编排的首选平台（跨多个主机管理、扩展和维护容器化应用程序的自动化流程）。随着应用程序规模和复杂性的增长，有效的日志记录对于监控、故障排除和维护平稳运行变得至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本指南探讨了&lt;a href=&#34;https://middleware.io/blog/kubernetes-logging/&#34;&gt;Kubernetes 日志记录&lt;/a&gt;的复杂性、其重要性以及人们在监控中可能遇到的常见命令活动。我们还将深入研究 Kubernetes 环境中的各种日志记录源，并附上代码示例来说明关键概念。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;overview-of-kubernetes-logging&#34;&gt;Kubernetes 日志记录概述&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 日志监控涉及收集和分析 Kubernetes 集群内各种来源的日志数据。日志提供了有关应用程序、节点和集群本身状态的宝贵见解。它们有助于识别问题、&lt;a href=&#34;https://middleware.io/blog/what-is-application-performance-monitoring/&#34;&gt;了解应用程序行为&lt;/a&gt;以及维护整体系统运行状况。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;importance-of-logging-in-kubernetes&#34;&gt;Kubernetes 中日志记录的重要性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;问题排查：&lt;/strong&gt;日志通过提供详细的事件记录来帮助诊断和解决问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;监控：&lt;/strong&gt;持续&lt;a href=&#34;https://middleware.io/blog/what-is-log-monitoring/&#34;&gt;日志监控&lt;/a&gt;确保应用程序平稳运行帮助检测异常情况。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;合规性&lt;/strong&gt;：日志可用于保持对行业标准和法规的合规性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;性能优化：&lt;/strong&gt;分析日志可以揭示性能瓶颈和优化机会。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;common-logging-challenges-in-kubernetes-environments&#34;&gt;Kubernetes 环境中的常见日志记录挑战&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;日志量&lt;/strong&gt;：Kubernetes 的动态和可扩展特性会生成大量日志数据，导致管理和分析变得困难。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;日志保留：&lt;/strong&gt;确定保留日志的时间并确保日志得到有效存储。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;日志聚合：&lt;/strong&gt;从多个来源收集日志并将其聚合到一个集中位置。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;日志关联：&lt;/strong&gt;关联来自不同系统部分的日志以全面了解事件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;understanding-kubernetes-logging&#34;&gt;了解 Kubernetes 日志记录&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-1-logging-architecture&#34;&gt;1.日志架构&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;我。 Kubernetes 中的日志记录如何工作&lt;/strong&gt;？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在 Kubernetes 中，日志通常由容器中运行的应用程序、运行这些容器的节点以及集群组件生成。 Kubernetes 不直接处理日志存储和分析，但允许与各种日志解决方案集成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当容器写入日志时，它们会被容器运行时捕获，并且可以使用“&lt;a href=&#34;https://middleware.io/blog/kubectl-cheat-sheet/&#34;&gt;kubectl messages&lt;”等命令进行访问/a&gt;`。然后可以将这些日志发送到外部日志系统进行进一步分析。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;ii.记录驱动程序和选项&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;日志记录驱动程序是容器化环境中的一个组件，用于管理日志的存储和处理方式以及位置。它定义了收集、格式化容器日志并将其发送到特定日志后端或存储系统的机制。通过配置日志记录驱动程序，您可以控制&lt;a href=&#34;https://middleware.io/blog/what-is-structed-logging/&#34;&gt;日志数据流&lt;/a&gt;，从而更轻松地进行监控和故障排除，并分析应用程序的性能和行为。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 支持各种日志记录驱动程序和选项以满足不同的需求。 &lt;a href=&#34;https://middleware.io/blog/understanding-the-docker-ecosystem/&#34;&gt;Docker&lt;/a&gt;，常用于 Kubernetes 集群，提供多种日志驱动，如 json-file、syslog 、&lt;strong&gt;journald、&lt;/strong&gt;和&lt;strong&gt;gelf&lt;/strong&gt;。每个驱动程序都有自己的功能和配置选项。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;您还可以将日志与中间件集成。只需&lt;/em&gt;&lt;/strong&gt;&lt;a href=&#34;https://docs.middleware.io/agent-installation/kubernetes&#34;&gt;&lt;strong&gt;&lt;em&gt;点击此处&lt;/em&gt;&lt;/strong&gt;&lt;/a &gt;&lt;strong&gt;&lt;em&gt; 了解更多信息。您还可以使用本指南使用 Node 设置监控&lt;/em&gt;&lt;/strong&gt;&lt;a href=&#34;https://docs.middleware.io/apm-configuration/node-js&#34;&gt;&lt;strong&gt;&lt;em&gt;Node .js&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-2-kubernetes-logging-sources&#34;&gt;2. Kubernetes 日志源&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;我。应用程序日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;应用程序日志由&lt;a href=&#34;https://middleware.io/blog/containerization/&#34;&gt;容器&lt;/a&gt;内运行的应用程序生成。这些日志对于理解特定于应用程序的事件和行为至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要访问应用程序日志，您可以使用“kubectl messages”命令：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 日志 &lt;pod 名称&gt;&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;ii.节点日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;节点日志由 Kubernetes 节点生成，包括来自 kubelet、容器运行时和其他节点级组件的日志内容。这些日志有助于监控各个节点的运行状况和性能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要访问节点日志，您可以使用 SSH 连接到节点并查看存储在 `/var/log` 目录中的日志：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;ssh 用户@节点IP&#xA;&#xA;sudo tail -f /var/log/kubelet.log&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;iii.集群日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;集群日志包含来自整个 Kubernetes 集群的日志，包括来自 API 服务器、调度程序和控制器管理器等控制平面组件的日志。这些日志对于了解集群的整体运行状况和性能至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要访问集群日志，您可以使用“kubectl”命令和适当的组件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 日志 &lt;pod-name&gt; -n kube-system&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这里，kube-system是Kubernetes中的一个命名空间，用于托管运行和管理集群所必需的核心基础设施组件和系统服务。它是每个 Kubernetes 安装附带的预定义命名空间。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;setting-the-stage&#34;&gt;设置舞台&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-using-a-demo-microservice-to-explain-logging-monitoring-and-debugging&#34;&gt;使用演示微服务来解释日志记录、监控和调试&lt; /h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了了解 Kubernetes 中日志记录的复杂性，我们将使用一个演示&lt;a href=&#34;https://middleware.io/blog/microservices-architecture/&#34;&gt;微服务&lt;/a&gt;。这个简单的项目将帮助我们探索如何在类似生产的 Kubernetes 环境中设置日志记录、监控日志和调试问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-basics-of-the-project&#34;&gt;项目基础&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;演示微服务是一个 Node.js 应用程序，具有用户身份验证、交易和支付等基本功能。它包括多个端点来模拟不同的场景并记录相关事件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下是该项目的基本结构：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;1. &lt;strong&gt;app.js&lt;/strong&gt;：主应用程序文件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2. &lt;strong&gt;Dockerfile&lt;/strong&gt;：用于容器化应用程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;3. &lt;strong&gt;deployment.yaml&lt;/strong&gt;：Kubernetes 部署配置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;4. &lt;strong&gt;service.yaml&lt;/strong&gt;：Kubernetes 服务配置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;5. &lt;strong&gt;simulate_requests.sh&lt;/strong&gt;：模拟各种用户交互的脚本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-setting-up-the-project&#34;&gt;设置项目&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;1。创建应用程序文件（`app.js`）&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;首先创建项目目录并初始化一个空节点项目。然后安装&lt;a href=&#34;https://expressjs.com/&#34;&gt;ExpressJS&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```&#xA;mkdir kubernetes-logging-demo&#xA;cd kubernetes-logging-demo&#xA;npm 初始化 -y&#xA;npm 安装快速&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;应用程序处理用户身份验证离子、交易和支付，并包括不同事件的日志记录。这是“app.js”文件的完整代码。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```javascript&#xA;const express = require(&#39;express&#39;);&#xA;常量应用程序 = Express();&#xA;常量端口= 3000；&#xA;&#xA;app.use(express.json());&#xA;&#xA;// 模拟数据库&#xA;常量用户 = {&#xA;    &#34;john_doe&#34;: { 密码: &#34;12345&#34;, 余额: 100 },&#xA;    &#34;jane_doe&#34;: { 密码: &#34;67890&#34;, 余额: 200 }&#xA;};&#xA;&#xA;// 用于记录日志的辅助函数&#xA;const log = (级别, 消息) =&gt; {&#xA;    const 时间戳 = new Date().toLocaleString();&#xA;    console.log(`${timestamp} - ${level} - ${message}`);&#xA;};  &#xA;&#xA;// 记录请求的中间件&#xA;app.use((req, res, 下一个) =&gt; {&#xA;    log(&#39;info&#39;, `收到请求：${req.method} ${req.originalUrl}`);&#xA;    下一个（）;&#xA;});&#xA;&#xA;// 用户认证的端点&#xA;app.post(&#39;/login&#39;, (req, res) =&gt; {&#xA;    const { 用户名, 密码 } = req.body;&#xA;    if (users[用户名] &amp;&amp; users[用户名].password === 密码) {&#xA;        log(&#39;info&#39;, `用户登录成功：${用户名}`);&#xA;        res.status(200).send(&#39;登录成功&#39;);&#xA;    } 别的 {&#xA;        log(&#39;warn&#39;, `用户登录失败：${用户名}`);&#xA;        res.status(401).send(&#39;登录失败&#39;);&#xA;    }&#xA;});&#xA;&#xA;// 记录用户交易的端点&#xA;app.post(&#39;/transaction&#39;, (req, res) =&gt; {&#xA;    const { 用户名, 金额 } = req.body;&#xA;    if (用户[用户名]) {&#xA;        users[用户名].balance += 金额；&#xA;        log(&#39;info&#39;, `交易成功: ${username} 新余额: ${users[username].balance}`);&#xA;        res.status(200).send(&#39;交易成功&#39;);&#xA;    } 别的 {&#xA;        log(&#39;warn&#39;, `交易失败: 未找到用户 - ${username}`);&#xA;        res.status(404).send(&#39;未找到用户&#39;);&#xA;    }&#xA;});&#xA;&#xA;// 模拟支付处理的端点&#xA;app.post(&#39;/付款&#39;, (req, res) =&gt; {&#xA;    const { 用户名, 金额 } = req.body;&#xA;    if (用户[用户名]) {&#xA;        if (用户[用户名].balance &gt;= 金额) {&#xA;            users[用户名].balance -= 金额；&#xA;            log(&#39;info&#39;, `支付成功：${用户名} 金额：${金额}`);&#xA;            res.status(200).send(&#39;支付成功&#39;);&#xA;        } 别的 {&#xA;            log(&#39;warn&#39;, `支付失败：资金不足 - ${username}`);&#xA;            res.status(400).send(&#39;资金不足&#39;);&#xA;        }&#xA;    } 别的 {&#xA;        log(&#39;warn&#39;, `付款失败: 未找到用户 - ${username}`);&#xA;        res.status(404).send(&#39;未找到用户&#39;);&#xA;    }&#xA;});&#xA;&#xA;// 模拟安全事件的端点&#xA;app.post(&#39;/admin&#39;, (req, res) =&gt; {&#xA;    const { 用户名 } = req.body;&#xA;    if (用户名 === &#39;admin&#39;) {&#xA;        log(&#39;error&#39;, `用户未经授权的访问尝试：${username}`);&#xA;        res.status(403).send(&#39;未经授权的访问&#39;);&#xA;    } 别的 {&#xA;        res.status(200).send(&#39;欢迎&#39;);&#xA;    }&#xA;});&#xA;&#xA;app.listen(端口, () =&gt; {&#xA;    log(&#39;info&#39;, `在 http://localhost:${port} 监听的虚拟微服务`);&#xA;});&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;2。创建 Dockerfile&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此文件用于构建应用程序的 Docker 映像。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```Dockerfile&#xA;来自节点：18&#xA;&#xA;工作目录 /usr/src/app&#xA;&#xA;复制包*.json ./&#xA;运行 npm 安装&#xA;&#xA;复制 。 。&#xA;&#xA;曝光 3000&#xA;CMD [“节点”，“app.js”]&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;3。创建 Kubernetes 部署配置 (`deployment.yaml`)&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此文件定义如何在 Kubernetes 上部署应用程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```yaml&#xA;api版本：apps/v1&#xA;种类：部署&#xA;元数据：&#xA;  名称：日志记录演示&#xA;规格：&#xA;  副本：1&#xA;  选择器：&#xA;    匹配标签：&#xA;      应用程序：日志记录演示&#xA;  模板：&#xA;    元数据：&#xA;      标签：&#xA;        应用程序：日志记录演示&#xA;    规格：&#xA;      容器：&#xA;      - 名称：日志记录演示&#xA;        图片：kubernetes-logging-demo：最新&#xA;        imagePullPolicy：从不&#xA;        端口：&#xA;        - 集装箱端口：3000&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;4。创建 Kubernetes 服务配置 (`service.yaml`)&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此文件定义将在 Kubernetes 集群中公开应用程序的服务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```yaml&#xA;api版本：v1&#xA;种类： 服务&#xA;元数据：&#xA;  名称：日志记录演示服务&#xA;规格：&#xA;  选择器：&#xA;    应用程序：日志记录演示&#xA;  端口：&#xA;    - 协议：TCP&#xA;      端口：80&#xA;      目标端口：3000&#xA;      节点端口：30001&#xA;  类型：节点端口&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;5。模拟用户交互（`simulate_requests.sh`）&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该脚本向应用程序发送各种请求，以模拟不同的场景并触发日志。请注意，这是一个无限循环，直到终止。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#xA;````bash&#xA;#!/bin/bash&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;定义应用程序的基本 URL&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;BASE_URL=&#34;http://localhost:30001&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;定义一系列curl命令来模拟不同的场景&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl_commands=(&#xA;&#xA;    # 登录成功&#xA;&#xA;    “curl -i -X POST $BASE_URL/login -H &#39;内容类型：application/json&#39; -d &#39;{\“用户名\”：\“john_doe \”，\“密码\”：\“12345 \”} &#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;密码错误导致登录失败&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/login -H &#39;内容类型：application/json&#39; -d &#39;{\&#34;用户名\&#34; :\&#34;john_doe\&#34;,\&#34;密码\&#34;:\&#34;错误的_密码\&#34;}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;交易成功&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/transaction -H &#39;内容类型：application/json&#39; -d &#39;{\&#34;用户名\&#34; :\&#34;john_doe\&#34;,\&#34;金额\&#34;:50}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;由于找不到用户，交易失败&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/transaction -H &#39;内容类型：application/json&#39; -d &#39;{\&#34;用户名\&#34; :\&#34;unknown_user\&#34;,\&#34;金额\&#34;:50}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;支付成功&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/payment -H &#39;内容类型：application/json&#39; -d &#39;{\&#34;用户名\&#34;:\&#34;jane_doe\&#34;,\&#34;金额\&#34;:50}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;资金不足，支付失败&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/ payment -H &#39;内容类型：application/json&#39; -d &#39;{\&#34;用户名\&#34; :\&#34;john_doe\&#34;,\&#34;金额\&#34;:200}&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;未经授权的访问尝试&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&#34;curl -i -X POST $BASE_URL/admin -H &#39;内容类型：application/json&#39; -d &#39;{\&#34;用户名\&#34; ：\“行政\”}&#39;”&#xA;&#xA;）&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;无限循环不断执行curl请求&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然正确；做&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;从数组中选择随机curl命令&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;cmd=${curl_commands[$RANDOM % ${#curl_commands[@]}]}&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;打印正在执行的命令（用于调试/可见性）&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;echo &#34; 执行：$cmd&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;3&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;执行所选的curl命令&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;eval $cmd&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;可选：添加短暂睡眠以模仿真实用户行为&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这会在请求之间增加 1 秒的延迟&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;睡眠 1&#xA;&#xA;完毕&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-running-the-project-as-a-kubernetes-pod-locally&#34;&gt;在本地将项目作为 Kubernetes Pod 运行&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;1。构建docker镜像&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;    docker build -t kubernetes-logging-demo:latest 。&#xA;&#xA;    ```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;2。部署到 Kubernetes&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;    kubectl apply -f 部署.yaml&#xA;&#xA;    kubectl apply -f service.yaml&#xA;&#xA;    ```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;3。模拟用户交互（这将使我们的应用程序生成日志）&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;    使用专用的 bash 终端来保持此模拟按要求运行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;    ./simulate_requests.sh&#xA;&#xA;    ```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这样，您的本地设置就已准备就绪，您可以实时测试不同的“kubectl”命令。此设置帮助我们了解如何收集、监控和分析日志，这对于维护应用程序的健康和性能至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;scenarios-where-logging-is-crucial&#34;&gt;日志记录至关重要的场景&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;1。跟踪用户活动&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;监控用户活动对于了解用户行为、识别趋势和检测用户行为至关重要g 可能表明安全问题的异常模式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;2。调试支付问题&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;支付相关日志对于解决交易失败、识别支付处理逻辑中的错误以及确保财务运营安全可靠至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;basics-of-kubectl-logs-command&#34;&gt;kubectl 日志命令基础知识&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“kubectl messages”命令是一个强大的工具，用于访问 Kubernetes 集群中运行的容器的日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;语法和基本用法&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 日志 [选项] POD_NAME [-c CONTAINER_NAME]&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– `POD_NAME`：您要查看其日志的 pod 的名称。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– `-c CONTAINER_NAME`：（可选）指定 pod 内的容器。如果 Pod 有多个容器，则很有用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是一个从 Pod 获取日志的简单示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 记录 my-pod&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果 Pod 包含多个容器，请指定容器名称：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 记录 my-pod -c my-container&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您已正确设置演示项目，您应该能够使用以下命令访问您的 Pod 名称：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 获取 Pod&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您的终端可能会输出如下内容：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;姓名                            准备状态    重新开始 年龄&#xA;&#xA;logging-demo-6cf76dcb4c-mz7bv 1/1 运行 0 0 69m&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，要访问此 Pod 的日志，您只需运行以下命令：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 日志记录-demo-6cf76dcb4c-mz7bv&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;相应的输出将如下所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;2024 年 6 月 29 日，上午 11:24:52 - 信息 - 虚拟微服务监听 http://localhost:3000&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们使用“simulate_requests”脚本将请求发送到我们的 Pod 并尝试监控生成的日志。为此，只需在专用终端中继续运行脚本即可。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;按 Pod 和容器过滤和查看日志&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以过滤和查看特定 Pod 和容器的日志，以缩小故障排除范围。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;查看特定 Pod 的日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;查看特定 Pod 的日志：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 记录 my-pod&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;查看 Pod 中特定容器的日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如上所述，如果 Pod 有多个容器，指定容器名称：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 记录 my-pod -c my-container&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;使用标签选择器查看日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您还可以使用标签选择器来过滤来自与特定标签匹配的 Pod 的日志：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 日志 -l app=my-app&#xA;&#xA;````&#xA;&#xA;对于我们的示例项目，这看起来像这样：&#xA;&#xA;````嘘&#xA;&#xA;kubectl 日志 -l app=logging-demo&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;请注意，应用程序名称标签是在“deployment.yaml”文件中配置的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;分析启动和运行时日志&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;启动日志对于识别容器初始化阶段发生的问题至关重要，而运行时日志有助于监控正在进行的操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;查看启动日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要分析 Pod 启动阶段的日志，您可以使用 kubectl logs 命令的 –since 标志指定从 Pod 创建开始的时间范围。此标志允许您检索从过去指定持续时间开始的日志，这对于调查最近的启动特别有用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 日志 --since=5m my-pod&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;查看运行时日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要持续监控运行时日志，可以使用以下命令：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 记录 my-pod --follow&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“–follow”选项实时传输日志，让您可以监控容器的活动发生情况。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;deep-dive-into-kubectl-logs-–tail-command&#34;&gt;深入研究 kubectl 日志 –tail 命令&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“kubectl messages –tail”命令对于实时日志监控和调试特别有用。它可以帮助您查看最新的日志条目，而无需浏览整个日志历史记录。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;它是如何工作的，与其他日志选项有何不同？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;带有“kubectl messages”的“-tail”选项从 Pod 或容器中获取最后几行日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;基本语法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 记录 my-pod --tail=50&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令从“my-pod”检索最后 50 行日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;与其他日志选项的差异&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;--since：检索特定时间段内的日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;-follow：实时流式传输日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;--tail：获取指定数量的最近日志行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;实际用例&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;如何跟踪日志以进行实时监控？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要跟踪日志以实时监控 Pod，请使用以下命令：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 记录 my-pod --follow --tail=50&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这将流式传输最后 50 升日志并继续实时传输新的日志条目。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;如何跟踪项目中特定组件的日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于特定组件的尾部日志，请指定容器名称：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 记录 my-pod -c my-container --tail=50&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令从“my-pod”内的“my-container”容器中获取最后 50 行日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于我们的演示项目，要获取 Pod 中的容器详细信息，您可以使用以下命令。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 描述 podlogging-demo-6cf76dcb4c-mz7bv -n 默认&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;advanced-techniques&#34;&gt;高级技术&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;将 –tail 与其他标志组合&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将“--tail”选项与“kubectl日志”中的其他标志相结合可以增强您的日志记录功能并提供更详细的见解。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;#### 示例：-f（跟随）、–since、–timestamps&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;跟随 (`-f`)：&lt;/strong&gt; 将实时流式传输与跟踪日志相结合。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;  kubectl 记录 my-pod --tail=50 -f&#xA;&#xA;  ```  &lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令获取最后 50 行并实时传输新日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;自 (`–since`)：&lt;/strong&gt; 检索特定时间段内的日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;  kubectl 记录 my-pod --tail=50 --since=1h&#xA;&#xA;  ```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 此命令获取过去一小时的最后 50 行日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;时间戳 (`–timestamps`)&lt;/strong&gt;：向每个日志条目添加时间戳。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;  kubectl 记录 my-pod --tail=50 --timestamps&#xA;&#xA;  ```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令包括最后 50 条日志行的时间戳，如果组件日志没有自己的时间戳，则对于按时间顺序分析非常有用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;这些组合有用的真实示例&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;1。调试部署问题：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;   kubectl 记录 my-pod --tail=100 -f --since=10m&#xA;&#xA;   ```   &lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;   此命令可用于通过流式传输过去 10 分钟的最后 100 行日志来调试最近的问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;2。性能监控：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;    kubectl 记录 my-pod --tail=200 --timestamps -f&#xA;&#xA;    ```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用此命令可以通过精确的时间戳实时监控性能指标。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您在我们的演示项目中使用它，您可能会看到以下输出。请注意，生成的日志是由于模拟我们正在发送 ted 请求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;    kubectl 日志记录-demo-6cf76dcb4c-mz7bv --tail=200 --timestamps -f&#xA;&#xA;    2024-06-29T12:45:42.618459492Z 6/29/2024, 12:45:42 PM - 信息 - 收到请求：POST /付款&#xA;&#xA;    2024-06-29T12:45:42.618497775Z 6/29/2024, 12:45:42 PM - 警告 - 付款失败：资金不足 - jane_doe&#xA;&#xA;    2024-06-29T12:45:43.695529512Z 6/29/2024, 12:45:43 PM - 信息 - 收到请求：POST /交易&#xA;&#xA;    2024-06-29T12:45:43.695560010Z 6/29/2024, 12:45:43 PM - 信息 - 交易成功：john_doe 新余额：200&#xA;&#xA;    2024-06-29T12:45:44.766836119Z 6/29/2024, 12:45:44 PM - 信息 - 收到请求：POST /登录&#xA;&#xA;    2024-06-29T12:45:44.766874021Z 6/29/2024, 12:45:44 PM - 警告 - 用户登录失败：john_doe&#xA;&#xA;    。&#xA;&#xA;    。&#xA;&#xA;    。&#xA;&#xA;    ```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;使用标签和选择器&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用标签和选择器过滤日志可以帮助您专注于应用程序的特定部分，尤其是在大型集群中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;使用标签和选择器过滤日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;按标签过滤日志：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 日志 -l app=my-app --tail=50&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令从所有标记为“app=my-app”的 pod 中获取最后 50 行日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-examples-to-illustrate-the-usage&#34;&gt;&lt;strong&gt;说明用法的示例&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;1。过滤“前端”组件的日志：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;   kubectl 日志 -l 组件=前端 --tail=100 -f&#xA;&#xA;   ```   &lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令从所有前端组件获取并流式传输最后 100 行日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;强&gt;2。过滤特定节点上运行的 Pod 的日志：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;   kubectl 日志 -l 节点=worker-node1 --tail=50&#xA;&#xA;   ```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用此命令从“worker-node1”上运行的 Pod 获取日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以使用“kubectl getnodes”命令获取环境中的节点列表。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;组件名称通常在部署或 Pod 配置中配置，类似于应用标签，以便更好地识别。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;scripting-and-automation&#34;&gt;脚本和自动化&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用脚本自动进行日志跟踪并与 CI/CD 管道集成可以增强持续监控并简化故障排除。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-automating-log-tailing-with-scripts&#34;&gt;&lt;strong&gt;使用脚本自动进行日志尾随&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以创建脚本来自动执行 p尾矿原木的处理过程。这是一个示例脚本：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;#!/bin/bash&#xA;&#xA;# 用于跟踪所有带有标签 app=my-app 的 pod 的日志的脚本&#xA;&#xA;kubectl 日志 -l app=logging-demo --tail=100 -f&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将此脚本保存为“tail_logs.sh”并运行它以自动进行日志尾随。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;h-integration-with-ci-cd-pipelines-for-continuous-monitoring&#34;&gt;&lt;strong&gt;与 CI/CD 管道集成以进行持续监控&lt;/strong&gt;&lt; /h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下介绍了如何将日志跟踪集成到 CI/CD 管道中，以持续监控部署和应用程序运行状况。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```yaml&#xA;&#xA;# Jenkins 文件示例&#xA;&#xA;管道{&#xA;&#xA;    代理任何&#xA;&#xA;    阶段{&#xA;&#xA;        阶段（&#39;部署&#39;）{&#xA;&#xA;            步骤{&#xA;&#xA;                sh &#39;kubectl apply -f deployment.yaml&#39;&#xA;&#xA;            }&#xA;&#xA;        }&#xA;&#xA;        阶段（&#39;监控日志&#39;）{&#xA;&#xA;            步骤{&#xA;&#xA;                sh &#39;./tail_logs.sh&#39;&#xA;&#xA;            }&#xA;&#xA;        }&#xA;&#xA;    }&#xA;&#xA;}&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此 Jenkins 管道部署您的应用程序，然后跟踪日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;scenario-based-exploration&#34;&gt;基于场景的探索&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一旦我们运行“simulate_requests.sh”文件一段时间，我们就会在 Pod 中生成大量日志。我们模拟了许多不同的正面和负面请求。我们如何在生产环境中实际分析这些日志？让我们通过我们的项目探索一些操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;场景 1：监控应用程序性能&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用尾部日志监控关键性能指标有助于了解您的&lt;a href=&#34;https://middleware.io/blog/why-is-monitoring-your-application-important/&#34;&gt;应用的行为&lt;/a&gt;和负载下的性能。以下是如何有效地实时监控和计算这些指标。您可以在 bash 终端中运行这些命令。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;使用尾部日志监控关键性能指标&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以创建自定义脚本来存储逻辑，以根据日志测量特定事物。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 日志 -l app=logging-demo --tail=100 | awk&#39;&#xA;&#xA;函数 parseTime(ts, 日期, 时间, ampm, h, m, s) {&#xA;&#xA;    分割（ts，日期时间，“，”）&#xA;&#xA;    日期 = 日期时间[1]&#xA;&#xA;    时间 = 日期时间[2]&#xA;&#xA;    ampm = 日期时间[3]&#xA;&#xA;    分割（日期，日期部分，“/”）&#xA;&#xA;    分割（时间，time_parts，“：”）&#xA;&#xA;    h = 时间部分[1]&#xA;&#xA;    m = 时间_部分[2]&#xA;&#xA;    s = 时间_部分[3]&#xA;&#xA;    if (ampm == &#34;PM&#34; &amp;&amp; h &lt; 12) h += 12&#xA;&#xA;    if (ampm == &#34;AM&#34; &amp;&amp; h == 12) h = 0&#xA;&#xA;    返回 (h * 3600) + (m * 60) + s&#xA;&#xA;}&#xA;&#xA;/-/ {&#xA;&#xA;    curr_time = parseTime($1 &#34; &#34; $2 &#34; &#34; $3)&#xA;&#xA;    if (prev_time &gt; 0) {&#xA;&#xA;        响应时间 = 当前时间 - 先前时间&#xA;&#xA;        总和 += 响应时间&#xA;&#xA;        计数 += 1&#xA;&#xA;        if (响应时间 &gt; 最大 || 计数 == 1) 最大 = 响应时间&#xA;&#xA;        if (响应时间 &lt; 分钟 || 计数 == 1) 分钟 = 响应时间&#xA;&#xA;    }&#xA;&#xA;    上一个时间 = 当前时间&#xA;&#xA;}&#xA;&#xA;结尾 {&#xA;&#xA;    如果（计数&gt; 0）{&#xA;&#xA;        printf &#34;平均响应时间: %.2f 秒\n最大响应时间: %d 秒\n最小响应时间: %d 秒\n&#34;, 总和/计数、最大值、最小值&#xA;&#xA;    } 别的 {&#xA;&#xA;        打印“未计算响应时间。”&#xA;&#xA;    }&#xA;&#xA;}&#39;&#xA;&#xA;````&#xA;&#xA;输出：&#xA;&#xA;````嘘&#xA;&#xA;平均响应时间：0.54秒&#xA;&#xA;最大响应时间：2秒&#xA;&#xA;最短响应时间：0 秒&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令从所有标记为“app=logging-demo”的 Pod 中实时获取最后 100 条日志行，并使用“awk”来计算关键指标：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;平均响应时间&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;最长响应时间&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;最短响应时间&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;场景 2：调查安全事件&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;尾部日志对于识别和分析可疑活动至关重要，从而能够快速响应安全事件。以下是您可以如何过滤特定于此类活动的日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;用于识别和分析可疑活动的尾部日志&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```sh&#xA;&#xA;kubectl 日志 -l app=logging-demo --tail=200 | grep -i &#39;错误\|失败\|未经授权&#39; | awk &#39;{count += 1} END {print &#34;检测到的安全事件总数：&#34;, count}&#39;&#xA;&#xA;````&#xA;&#xA;输出：&#xA;&#xA;````嘘&#xA;&#xA;检测到的安全事件总数：63&#xA;&#xA;```&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令检索最后 200 行日志并过滤“错误”、“失败”和“未经授权”等关键字，这有助于识别潜在的安全漏洞尝试。它使用“awk”来计算检测到的事件数量。 `awk` 命令是类 Unix 系统中用于文本处理的多功能工具。它在图案方面表现出色根据您的应用程序需求使用自定义逻辑进行匹配、字段操作和生成报告。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过运行此类命令和脚本，您可以直接计算和跟踪基本指标，从而实现实时监控并快速响应任何问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;conclusion&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过掌握这些日志记录技术，您可以显着增强监控、排除故障和保护 Kubernetes 应用程序的能力。立即开始实施这些策略，以维护健壮且可靠的云原生应用程序。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;想使用中间件进行日志监控？请&lt;a href=&#34;https://docs.middleware.io/workflow/log-monitoring/overview&#34;&gt;此处查看我们的详细文档&lt;/a&gt;。  &lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 31 Oct 2024 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>