<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://rsshub.rssforever.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【Coming soon: the Certified Backstage Associate certification for developers and platform engineers】即将推出：面向​​开发人员和平台工程师的 Certified Backstage Associate 认证</title>
      <link>https://www.cncf.io/blog/2024/08/15/introducing-the-certified-backstage-associate-certification-for-developers-and-platform-engineers/</link>
      <description>【&lt;p&gt;As platform engineering and service catalogs have moved to the forefront of the conversation around cloud native developer experience, IT professionals need to understand the open source tools underpinning these trends. That’s why &lt;a href=&#34;https://www.cncf.io/&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; and &lt;a href=&#34;https://training.linuxfoundation.org/&#34;&gt;Linux Foundation Training &amp;amp; Certification&lt;/a&gt; are excited to announce the upcoming &lt;a href=&#34;https://training.linuxfoundation.org/certification/certified-backstage-associate-cba/&#34;&gt;Certified Backstage Associate (CBA)&lt;/a&gt; certification.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Backstage is an open source framework for building developer portals. It provides a centralized software catalog, enabling product teams to ship high-quality code quickly through internal developer platforms (IDPs) without compromising autonomy.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“As the complexity of modern software development grows, developer experience is essential for organizations of all sizes,” said Chris Aniszczyk, CTO, of CNCF. “A Backstage certification improves skills across teams building on top of the most popular open source IDP, ensuring everyone is equipped to leverage the platform to boost individual productivity, enhance collaboration, and increase organizational efficiency.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Backstage has been publicly adopted by more than 270 organizations and is in the top 5 CNCF projects in terms of velocity. A free introduction to Backstage course was launched in late 2022 for DevOps engineers and professionals interested in or working in developer productivity or developer experience teams.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;a href=&#34;https://training.linuxfoundation.org/certification/certified-backstage-associate-cba/&#34;&gt;CBA&lt;/a&gt; certification is designed for engineers, developers, and other professionals who want to fine-tune their skills around IDPs and platform engineering. Those who successfully complete the certification exam will receive a certificate and a digital badge, demonstrating that they have the mindset and skills to work in and build Backstage tools that improve performance and drive innovation, benefiting their careers, teams, and organizations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Those interested in the certification can sign up to be notified of the beta and general availability launch &lt;a href=&#34;https://training.linuxfoundation.org/certification/certified-backstage-associate-cba/&#34;&gt;here&lt;/a&gt;, and can learn more about the certification &lt;a href=&#34;https://training.linuxfoundation.org/blog/cba-coming-soon/&#34;&gt;here&lt;/a&gt;.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;随着平台工程和服务目录已成为围绕云原生开发人员体验的讨论的前沿，IT 专业人员需要了解支撑这些趋势的开源工具。这就是为什么&lt;a href=&#34;https://www.cncf.io/&#34;&gt;云原生计算基础&lt;/a&gt;和&lt;a href=&#34;https://training.linuxfoundation.org/&#34;&gt;Linux基础培训和认证&lt;/a&gt; 很高兴地宣布即将推出&lt;a href=&#34;https://training.linuxfoundation.org/certification/certified-backstage-associate-cba/&#34;&gt;认证后台助理 (CBA)&lt;/a&gt; 认证。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Backstage 是一个用于构建开发人员门户的开源框架。它提供集中式软件目录，使产品团队能够通过内部开发人员平台 (IDP) 快速交付高质量代码，而不会影响自主权。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“随着现代软件开发的复杂性不断增加，开发人员经验对于各种规模的组织都至关重要，”CNCF 首席技术官 Chris Aniszczyk 说道。 “Backstage 认证提高了基于最流行的开源 IDP 的团队的技能，确保每个人都有能力利用该平台来提高个人生产力、加强协作并提高组织效率。”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Backstage 已被超过 270 个组织公开采用，在速度方面位居 CNCF 项目前 5 位。 2022 年底，为对开发人员生产力或开发人员体验团队感兴趣或在其中工作的 DevOps 工程师和专业人士推出了免费的 Backstage 简介课程。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://training.linuxfoundation.org/certification/certified-backstage-associate-cba/&#34;&gt;CBA&lt;/a&gt; 认证是为工程师、开发人员和其他想要调整他们围绕 IDP 和平台工程的技能。成功完成认证考试的人员将获得证书和数字徽章，证明他们拥有工作心态和技能，可以构建后台工具来提高绩效和推动创新，从而使他们的职业生涯、团队和组织受益。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;那些对认证感兴趣的人可以在&lt;a href=&#34;https://training.linuxfoundation.org/certification/certified-backstage-associate-cba/&#34;&gt;此处注册，以获得有关测试版和正式发布的通知&lt; /a&gt;，并且可以在&lt;a href=&#34;https://training.linuxfoundation.org/blog/cba-coming-soon/&#34;&gt;此处&lt;/a&gt;了解有关认证的更多信息。  &lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 14 Aug 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Getting to know the new CNCF Code of Conduct Committee】了解新的 CNCF 行为准则委员会</title>
      <link>https://www.cncf.io/blog/2024/08/07/getting-to-know-the-new-cncf-code-of-conduct-committee/</link>
      <description>【&lt;p&gt;&lt;em&gt;By the CNCF Code of Conduct Committee&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Hello CNCF community!&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our permanent &lt;a href=&#34;https://www.cncf.io/conduct/committee/&#34;&gt;CNCF Code of Conduct Committee&lt;/a&gt; has been operating for eight months, so it’s time for us to share information about incidents we’ve handled in our community and respond to some frequently asked questions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our committee consists of 3 elected volunteer community members and 2 CNCF staff members (and several alternates from the community). Our committee was launched in October 2024, when we replaced the &lt;a href=&#34;https://www.cncf.io/blog/2022/06/23/cncfs-interim-cncf-code-of-conduct-committee-has-launched/&#34;&gt;Interim Code of Conduct Committee&lt;/a&gt; (see the prior blog post about the &lt;a href=&#34;https://www.cncf.io/blog/2023/09/06/cncf-launches-a-new-system-for-resolving-code-of-conduct-incidents-to-support-community-culture-and-values/&#34;&gt;new CoC structure in CNCF&lt;/a&gt;). Since then, we received 6 incident reports in the final quarter of 2023, and approximately a dozen incident reports in the first half of 2024. Most of these incidents have been resolved, but a few are currently under investigation. You can read summaries of the incidents we’ve resolved on our &lt;a href=&#34;https://www.cncf.io/conduct/transparency/&#34;&gt;transparency reports&lt;/a&gt; web page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We have received many questions from community members about the investigative process, why investigations sometimes take longer than expected, and how we determine consequences and remedies for a violation. Our &lt;a href=&#34;https://www.cncf.io/conduct/faq/&#34;&gt;Code of Conduct FAQs&lt;/a&gt; should answer these questions, and more, and we’ll continue to update the page as we receive more inquiries.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;CNCF 行为准则委员会&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF 社区您好！ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的常设&lt;a href=&#34;https://www.cncf.io/conduct/committee/&#34;&gt;CNCF行为准则委员会&lt;/a&gt;已经运作八个月了，所以我们是时候分享信息了关于我们在社区中处理过的事件并回答一些常见问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的委员会由 3 名当选的志愿者社区成员和 2 名 CNCF 工作人员（以及来自社区的几名候补成员）组成。我们的委员会于 2024 年 10 月成立，当时我们取代了 &lt;a href=&#34;https://www.cncf.io/blog/2022/06/23/cncfs-interim-cncf-code-of-conduct-committee-has -launched/&#34;&gt;临时行为准则委员会&lt;/a&gt;（请参阅之前关于&lt;a href=&#34;https://www.cncf.io/blog/2023/09/06/cncf-launches-a -用于解决行为准则事件以支持社区文化和价值观的新系统/&#34;&gt;CNCF 中的新 CoC 结构&lt;/a&gt;）。此后，我们在 2023 年最后一个季度收到了 6 起事件报告，在 2024 年上半年收到了大约十几起事件报告。大多数事件已得到解决，但少数事件目前正在调查中。您可以在我们的&lt;a href=&#34;https://www.cncf.io/conduct/transparency/&#34;&gt;透明度报告&lt;/a&gt;网页上阅读我们已解决的事件的摘要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们收到了社区成员提出的许多问题，涉及调查过程、为什么调查有时需要比预期更长的时间，以及我们如何确定违规行为的后果和补救措施。我们的&lt;a href=&#34;https://www.cncf.io/conduct/faq/&#34;&gt;行为准则常见问题解答&lt;/a&gt;应该回答这些问题以及更多问题，我们将在收到信息后继续更新页面更多询问。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 06 Aug 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The benefits of mentoring and the CNCF Mentorship Program】指导和 CNCF 指导计划的好处</title>
      <link>https://www.cncf.io/blog/2024/08/13/the-benefits-of-mentoring-and-the-cncf-mentorship-program/</link>
      <description>【&lt;p&gt;&lt;em&gt;By Nate Waddington, Head of Mentorship &amp;amp; Documentation&lt;/em&gt;, &lt;em&gt;CNCF&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Technical people have a world of opportunities available to them when it comes to boosting career skills. But I’m going to make the case for taking a somewhat old-fashioned route: mentorship.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A “mentor” is an &lt;em&gt;experienced and trusted advisor&lt;/em&gt;, while a mentee is the person &lt;em&gt;advised, trained or counseled by a mentor&lt;/em&gt;. Sometimes these pairings happen organically, but sometimes nature needs a bit of a push, and that’s where we come in. CNCF, in partnership with the Linux Foundation and Google’s Summer of Code, has been offering a Mentorship Program for over four years, and to date more than 300 mentors and mentees have teamed up to learn from one another.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our Mentorship Program is not an internship, however; no one is getting hired, though the process does resemble a job application, at least from the mentee side of things. That said, &lt;a href=&#34;https://docs.linuxfoundation.org/lfx/mentorship/mentee-stipends&#34;&gt;stipends are available&lt;/a&gt; (and vary, depending on your location).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Three times a year, roughly following the North American academic calendar, we offer 12-week mentorship programs that give participants a chance to work intensely on a challenge set by one of our &lt;a href=&#34;https://github.com/cncf/mentoring/blob/main/programs/lfx-mentorship/2024/03-Sep-Nov/README.md#accepted-projects&#34;&gt;accepted projects&lt;/a&gt;. For this upcoming term, Term 3, which runs September through November of 2024, mentees will apply to work on 49 different proposals from 21 different projects ranging from “a new gadget for detecting deadlocks” for Inspektor Gadget, “enhancing the Prometheus Benchmark Suite,” or “adding new getting started examples” to Vitess. The accepted projects are a result of mentors volunteering these ideas, and submitting them via a pull request in GitHub. Potential mentees won’t be applying blind – &lt;a href=&#34;https://github.com/cncf/mentoring/blob/main/programs/lfx-mentorship/2024/03-Sep-Nov/README.md&#34;&gt;the GitHub repo&lt;/a&gt; has full details of what the challenges will be, who the mentors are, what the expected outcome(s) could be, as well as a list of recommended skills.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mentees, if this is tempting now or in the future, &lt;a href=&#34;https://docs.linuxfoundation.org/lfx/mentorship/mentee-guide&#34;&gt;start here&lt;/a&gt; with this guide to mentee-ship.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The benefits to mentees&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Although not every mentee is a student, our Mentorship Program does offer clear benefits for those looking for that first job in tech. Mentees are able to show, concretely, the steps taken to identify and ultimately solve a problem with actual code snippets, PRs, MRs, critiques, etc., giving technical recruiters exactly what they’re looking for during an interview. Also, mentoring is another word for “networking” which of course is particularly beneficial for those new to the field. Mentees can also have the advantage of trying different technologies out before committing to them – observability and Wasm are fairly different areas of expertise, just to choose two randomly, and it can be nice to sample what’s out there without having to make a long term commitment. Mentees can become mentors and even project maintainers and go on to have long and fruitful careers in the cloud native landscape…all because of a mentorship program!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But don’t just take my word for why mentees benefit: Mohammed Affan shared &lt;a href=&#34;https://www.cncf.io/blog/2023/12/22/my-journey-of-cncf-mentorship-and-open-source/&#34;&gt;everything he learned&lt;/a&gt; during his menteeship last summer.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The benefits to mentors&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Meanwhile, mentors benefit too, perhaps just as much – or more! – than mentees. Mentoring gives employees an opportunity to train, coach, and help grow new talent, and that can be something they don’t have access to in their regular job. Done right, mentoring helps grow “team cloud native” and expand enthusiasm for all things Kubernetes, which is great but complicated for newbies. Mentors naturally grow their network, which is beneficial to their careers, but they also grow their management skills, something which aids them and their employers. Also, employee retention and recruitment is challenging today; mentoring can be a fabulous recruitment tool, but it can also be a way to offer talented individual contributors a way to grow their skills in a different direction. Mentoring is a concrete and documented way to grow personnel and project management skills.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Mentorship best practices&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But mentorships are most effective when everyone gives it their best effort.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s some of what we’ve learned from overseeing hundreds of these over the last few years:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;For Mentees&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Complete Your Profile:&lt;/strong&gt; Fill out your profile completely—GitHub, LinkedIn, resume, openprofile.dev, etc. Help recruiters find you!&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Document Everything:&lt;/strong&gt; Keep track of your progress and blog about it if possible. Work in the open, tell the story of your mentorship, and link back to issues and PRs as evidence of what you’ve learned and accomplished.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Plan Your Path:&lt;/strong&gt; If you’re a mentee, you can only participate in our mentorship program once. Beginners may want to start with Google Summer of Code before considering our program—doing ours first could make you &lt;a href=&#34;https://summerofcode.withgoogle.com/rules&#34;&gt;ineligible for GSoC&lt;/a&gt; as it requires mentees to be a beginner to open source software development.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Stay Connected:&lt;/strong&gt; Keep in touch with your new community. Ideally, continue contributing, but your relationships with your mentors and peers don’t have to end when the mentorship does.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;For Mentors&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Promote Your Work:&lt;/strong&gt; Be sure to add your mentorship experience to your socials and promo packets.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Remember the Purpose:&lt;/strong&gt; It’s a learning experience for both you and your mentee!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;作者：Nate Waddington，指导与文档主管&lt;/em&gt;，&lt;em&gt;CNCF&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在提高职业技能方面，技术人员拥有大量机会。但我将说明采取一种有点老式的路线的理由：指导。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“导师”是&lt;em&gt;经验丰富且值得信赖的顾问&lt;/em&gt;，而受指导者是&lt;em&gt;接受导师建议、培训或咨询的人&lt;/em&gt;。有时这些配对会自然发生，但有时自然需要一点推动，这就是我们的用武之地。CNCF 与 Linux 基金会和 Google 代码之夏合作，已经提供指导计划四年多了，约会超过 300 名导师和学员联手互相学习。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，我们的导师计划不是实习；而是实习。没有人被雇用，尽管这个过程确实类似于工作申请，至少从受训者的角度来看是这样。也就是说，&lt;a href=&#34;https://docs.linuxfoundation.org/lfx/mentorship/mentee-stipends&#34;&gt;可以获得津贴&lt;/a&gt;（具体情况取决于您所在的位置）。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;大致按照北美学术日历，我们每年提供三次为期 12 周的指导计划，让参与者有机会集中精力应对我们的一位 &lt;a href=&#34;https://github.com/studygolang/gb/2017/12/14/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12/12-weekly-intuition-instruction-programs） 。 com/cncf/mentoring/blob/main/programs/lfx-mentorship/2024/03-Sep-Nov/README.md#accepted-projects&#34;&gt;已接受的项目&lt;/a&gt;。在即将到来的第 3 学期（即 2024 年 9 月至 11 月）中，学员将申请参与 21 个不同项目的 49 项不同提案，包括 Inspektor Gadget 的“用于检测死锁的新小工具”、“增强 Prometheus 基准套件”、 ”或“向 Vitess 添加新的入门示例”。被接受的项目是导师自愿提出这些想法并通过 GitHub 中的拉取请求提交的结果。潜在的学员不会盲目申请 – &lt;a href=&#34;https://github.com/cncf/mentoring/blob/main/programs/lfx-mentorship/2024/03-Sep-Nov/README.md&#34;&gt; GitHub 存储库&lt;/a&gt; 详细介绍了挑战是什么、导师是谁、预期结果是什么，以及推荐技能列表。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;学员们，如果现在或将来对此很有吸引力，&lt;a href=&#34;https://docs.linuxfoundation.org/lfx/mentorship/mentee-guide&#34;&gt;从这里开始&lt;/a&gt;这份学员指南-船。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;对学员的好​​处&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然并非每个学员都是学生，但我们的导师计划确实为那些在科技领域寻找第一份工作的人提供了明显的好处。学员能够通过实际代码片段、PR、MR、评论等具体展示识别并最终解决问题所采取的步骤，从而为技术招聘人员提供他们在面试中所需要的信息。此外，指导是“网络”的另一个词，这当然是特别有益的对于那些刚进入该领域的人来说。受训者还可以享受在投入使用之前尝试不同技术的优势——可观察性和 Wasm 是相当不同的专业领域，只需随机选择两个，并且无需做出长期承诺即可尝试现有技术，这可能会很好。受训者可以成为导师，甚至项目维护者，并继续在云原生领域拥有长期且富有成效的职业生涯……这一切都归功于导师计划！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但不要只相信我的话来解释学员为何受益：Mohammed Affan 分享了 &lt;a href=&#34;https://www.cncf.io/blog/2023/12/22/my-journey-of-cncf- Mentorship-and-open-source/&#34;&gt;他在去年夏天的受训期间学到的一切&lt;/a&gt;。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;导师的好处&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与此同时，导师也会受益，也许同样多 - 甚至更多！ – 比受训者。指导为员工提供了培训、辅导和帮助培养新人才的机会，而这可能是他们在日常工作中无法获得的。如果做得好，指导有助于培养“团队云原生”并扩大对 Kubernetes 一切事物的热情，这对新手来说很棒但很复杂。导师自然会发展他们的网络，这对他们的职业生涯有益，但他们也会提高他们的管理技能，这对他们和他们的雇主都有帮助。此外，如今，员工保留和招聘也面临着挑战。指导可以是一个极好的招聘工具，但它也可以为有才华的个人贡献者提供一种在不同方向发展技能的方式。指导是一种提高人员和项目管理技能的具体且有记录的方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;指导最佳实践&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，当每个人都尽最大努力时，指导才是最有效的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下是我们在过去几年监督数百个这样的项目中学到的一些东西：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;对于学员&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;填写您的个​​人资料：&lt;/strong&gt;完整填写您的个​​人资料 - GitHub、LinkedIn、简历、openprofile.dev 等。帮助招聘人员找到您！&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;记录一切&lt;/strong&gt;：跟踪您的进度，并在可能的情况下在博客中记录相关进展。公开工作，讲述您的指导故事，并链接回问题和 PR，作为您所学到和取得的成就的证据。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;规划您的道路&lt;/strong&gt;：如果您是学员，您只能参加我们的指导计划一次。初学者可能希望先参加 Google Summer of Code，然后再考虑我们的计划 - 首先参加我们的计划可能会让您&lt;a href=&#34;https://summerofcode.withgoogle.com/rules&#34;&gt;没有资格参加 GSoC&lt;/a&gt;，因为它需要学员成为开源软件开发的初学者。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;保持联系&lt;/strong&gt;：与您的新社区保持联系。理想情况下，继续做出贡献，但你与导师和同事的关系不会当指导结束时，不必结束。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;对于导师&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;宣传您的工作&lt;/strong&gt;：请务必将您的指导经验添加到您的社交活动和促销包中。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;记住目的&lt;/strong&gt;：这对您和您的学员来说都是一次学习经历！&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 12 Aug 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Score accepted as a CNCF Sandbox Project】Score 被接受为 CNCF 沙箱项目</title>
      <link>https://www.cncf.io/blog/2024/08/08/score-accepted-as-a-cncf-sandbox-project/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on the Humanitec blog by Luca Galante&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The team at Humanitec is thrilled to announce that&amp;nbsp;&lt;a href=&#34;https://score.dev/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Score&lt;/a&gt;&amp;nbsp;has officially been accepted as a&amp;nbsp;&lt;a href=&#34;https://github.com/cncf/sandbox/issues/79&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Sandbox project by the Cloud Native Computing Foundation (CNCF)&amp;nbsp;&lt;/a&gt;as of July 8, 2024.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;676&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/08/image-2-2.jpg&#34; alt=&#34;Screenshot showing CNCF landscape highlight on Score accepted as Sandbox project by CNCF&#34; class=&#34;wp-image-116146&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/08/image-2-2.jpg 1600w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-2-300x127.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-2-1024x433.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-2-768x324.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-2-900x380.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-2-473x200.jpg 473w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-2-947x400.jpg 947w&#34; sizes=&#34;(max-width: 1600px) 100vw, 1600px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;a href=&#34;https://www.cncf.io/projects/score/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Source&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is a huge milestone for Humanitec and the Score community and is a testament to all efforts to enhance developer experience and the effectiveness of Internal Developer Platforms through a platform-agnostic workload specification.&amp;nbsp;&lt;a href=&#34;https://github.com/score-spec&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Score has grown so much since its launch on&amp;nbsp;&lt;/a&gt;GitHub just a short 18 months ago.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Celebrating our community&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;First and foremost, we want to extend a massive thank you to everyone who has supported the Score project on its journey. The incredible Score community, with your continuous contributions and feedback, has been instrumental in reaching this point. Without your dedication, Score wouldn’t be where it is today.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We also want to thank everyone from the CNCF involved in this process, especially the&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/people/technical-oversight-committee/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Technical Oversight Committee (TOC)&lt;/a&gt;&amp;nbsp;members for their guidance, and the&amp;nbsp;&lt;a href=&#34;https://tag-app-delivery.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;TAG App Delivery team&lt;/a&gt;&amp;nbsp;for allowing us to present and&amp;nbsp;&lt;a href=&#34;https://github.com/cncf/sandbox/issues/79#issuecomment-1969011565&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;discuss Score with the CNCF community&lt;/a&gt;. We also need to give a very special shoutout to everyone who contributed, especially Score product manager&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/susatuenker/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Susa Tünker,&lt;/a&gt;&amp;nbsp;Humanitec’s CTO&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/chris-stephenson-99ba3628/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Chris Stephenson,&lt;/a&gt;&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/ben-meier-b76224129/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ben Meier,&lt;/a&gt;&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/mathieubenoitqc/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Mathieu Benoit&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/tobiasbabin/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Tobias Babin&lt;/a&gt;&amp;nbsp;(documentation), and many more.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The acceptance into the CNCF Sandbox couldn’t have arrived better. Score recently rolled out two new reference implementations for Docker Compose and Kubernetes, offering user-friendly and scalable solutions to get started with Score. This momentum provides a great baseline for us to engage with the CNCF community and further drive the development and adoption of Score.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Check available implementations:&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/score-spec/score-k8s&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;score-k8s&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;is an implementation of the Score Workload specification for Kubernetes and converts input Score files into a YAML file containing Kubernetes manifests that can be packaged or installed through kubectl apply.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/score-spec/score-compose&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;score-compose&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;is a reference implementation of the&amp;nbsp;&lt;a href=&#34;https://github.com/score-spec/spec&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Score specification&lt;/a&gt;&amp;nbsp;for&amp;nbsp;&lt;a href=&#34;https://docs.docker.com/compose/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Docker compose&lt;/a&gt;, primarily used for local development. It supports most aspects of the Score specification and provides a powerful resource provisioning system for supplying and customizing the dynamic configuration of attached services such as databases, queues, storage, and other network or storage APIs.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://developer.humanitec.com/platform-orchestrator/reference/cli-references/#score-integration&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;humctl&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;is Humanitec’s CLI supporting Score natively. It offers a range of features for working with Score files, making it a suitable approach for teams that already work with humctl.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can explore these implementations on our&lt;a href=&#34;https://humanitec.com/marketplace#score-implementations&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&amp;nbsp;marketplace&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Looking ahead&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we look to the future, we are excited about the continued impact we can make within the wider community. Score’s developer-centric and workload-oriented approach to cloud-native development gives us a great opportunity to contribute to ongoing work around platform engineering best practices and industry standards, especially in the ongoing battle against DevOps burnout and cognitive load.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We are also excited about the potential to integrate and collaborate with other platforms and tools within the CNCF landscape. If you’re interested in working on an implementation for Score, we’d love to hear from you!&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For more information about Score and our participation in the CNCF, please visit&lt;a href=&#34;https://github.com/cncf/score&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&amp;nbsp;Score on GitHub&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://communityinviter.com/apps/cloud-native/cncf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;join the #score channel on the CNCF Slack&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thank you for being a part of our journey!&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初由 Luca Galante 在 Humanitec 博客上发布&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Humanitec 团队很高兴地宣布，&lt;a href=&#34;https://score.dev/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;分数&lt;/a&gt;已被正式接受为&lt; a href=&#34;https://github.com/cncf/sandbox/issues/79&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;云原生计算基金会 (CNCF) 的沙盒项目&lt;/a&gt;截至 7 月2024 年 8 月。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1600”高度=“676”src=“https://www.cncf.io/ wp-content/uploads/2024/08/image-2-2.jpg&#34; alt=&#34;屏幕截图，显示 CNCF 接受为沙箱项目的 Score 上 CNCF 横向突出显示&#34; class=&#34;wp-image-116146&#34; srcset=&#34;https:// /www.cncf.io/wp-content/uploads/2024/08/image-2-2.jpg 1600w，https://www.cncf.io/wp-content/uploads/2024/08/image-2- 2-300x127.jpg 300w，https://www.cncf.io/wp-content/uploads/2024/08/image-2-2-1024x433.jpg 1024w，https://www.cncf.io/wp-内容/uploads/2024/08/image-2-2-768x324.jpg 768w，https://www.cncf.io/wp-content/uploads/2024/08/image-2-2-900x380.jpg 900w， https://www.cncf.io/wp-content/uploads/2024/08/image-2-2-473x200.jpg 473w，https://www.cncf.io/wp-content/uploads/2024/08 /image-2-2-947x400.jpg 947w&#34; 尺寸=&#34;(最大宽度: 1600px) 100vw, 1600px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;a href= “https://www.cncf.io/projects/score/” target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;来源&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这对于 Humanitec 和 Score 社区来说是一个巨大的里程碑，也证明了通过与平台无关的工作负载规范来增强开发人员体验和内部开发人员平台有效性的所有努力。 &lt;a href=&#34;https://github.com/score-spec&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;自 18 个月前在 GitHub 上发布以来，Score 增长如此之快。&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;庆祝我们的社区&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;首先，我们要向所有支持 Score 项目的人表示衷心的感谢。令人难以置信的 Score 社区以及您不断的贡献和反馈为实现这一目标发挥了重要作用。没有你们的奉献，Score 就不会取得今天的成就。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们还要感谢 CNCF 参与此过程的所有人，尤其是 &lt;a href=&#34;https://www.cncf.io/people/technical-oversight-committee/&#34; target=&#34;_blank&#34; rel= &#34;noreferrer noopener&#34;&gt;技术监督委员会 (TOC)&lt;/a&gt; 成员的指导，以及 &lt;a href=&#34;https://tag-app-delivery.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34; noreferrer noopener&#34;&gt;TAG 应用交付团队&lt;/a&gt;允许我们展示和&lt;a href=&#34;https://github.com/cncf/sandbox/issues/79#issuecomment-1969011565&#34; target=&#34;_blank&#34; rel= &#34;noreferrer noopener&#34;&gt;与 CNCF 社区讨论分数&lt;/a&gt;。我们还需要特别感谢每一个参与其中的人谨此致敬，特别是 Score 产品经理 &lt;a href=&#34;https://www.linkedin.com/in/susatuenker/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Susa Tünker&lt;/a&gt;，Humanitec 的 CTO &lt;a href =&#34;https://www.linkedin.com/in/chris-stephenson-99ba3628/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;克里斯·斯蒂芬森，&lt;/a&gt; &lt;a href=&#34;https://www .linkedin.com/in/ben-meier-b76224129/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ben Meier，&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/in/ mathieubenoitqc/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Mathieu Benoit&lt;/a&gt;，&lt;a href=&#34;https://www.linkedin.com/in/tobiasbabin/&#34; target=&#34;_blank&#34; rel=&#34; noreferrer noopener&#34;&gt;Tobias Babin&lt;/a&gt;（文档），等等。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF 沙盒的接受度再好不过了。 Score 最近推出了两个适用于 Docker Compose 和 Kubernetes 的新参考实现，提供用户友好且可扩展的解决方案来开始使用 Score。这种势头为我们与 CNCF 社区互动并进一步推动 Score 的开发和采用提供了良好的基础。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;检查可用的实现：&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/score-spec/score-k8s&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;score-k8s&lt;/strong&gt;&lt;/a&gt;是 Kubernetes Score Workload 规范的实现，它将输入 Score 文件转换为包含 Kubernetes 清单的 YAML 文件，可以通过 kubectl apply 打包或安装。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/score-spec/score-compose&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;分数撰写&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;&lt;/strong&gt;是&lt;a href=&#34;https://github.com/score-spec/spec&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;分数规范&lt;/a&gt;的参考实现for &lt;a href=&#34;https://docs.docker.com/compose/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Docker compose&lt;/a&gt;，主要用于本地开发。它支持 Score 规范的大部分方面，并提供强大的资源配置系统，用于提供和自定义附加服务的动态配置，例如数据库、队列、存储以及其他网络或存储 API。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://developer. humanitec.com/platform-orchestrator/reference/cli-references/#score-integration&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;humctl&lt; /strong&gt;&lt;/a&gt; 是 Humanitec 的 CLI，原生支持 Score。它提供了一系列用于处理 Score 文件的功能，使其成为已经使用 humctl 的团队的合适方法。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以在我们的&lt;a href=&#34;https:// humanitec.com/marketplace#score-implementations&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;市场&lt;/a&gt;上探索这些实现。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;展望未来&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;展望未来，我们对我们能够在更广泛的社区中产生的持续影响感到兴奋ty。 Score 以开发人员为中心、以工作负载为导向的云原生开发方法为我们提供了一个绝佳的机会，可以为围绕平台工程最佳实践和行业标准的持续工作做出贡献，特别是在对抗 DevOps 倦怠和认知负载的持续斗争中。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们还对与 CNCF 领域内其他平台和工具集成和协作的潜力感到兴奋。如果您有兴趣实施 Score，我们很乐意听取您的意见！ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有关 Score 以及我们参与 CNCF 的更多信息，请访问&lt;a href=&#34;https://github.com/cncf/score&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt; GitHub 上的 Score&lt; /a&gt; 和 &lt;a href=&#34;https://communityinviter.com/apps/cloud-native/cncf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;加入 CNCF Slack 上的 #score 频道&lt;/a&gt; .&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢您参与我们的旅程！&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 07 Aug 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Explain infrastructure as code (alternatives to IaC)】将基础设施解释为代码（IaC 的替代方案）</title>
      <link>https://www.cncf.io/blog/2024/08/15/explain-infrastructure-as-code-alternatives-to-iac/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on &lt;a href=&#34;https://blog.appcd.com/explain-infrastructure-as-code-alternatives&#34;&gt;AppCD’s blog&lt;/a&gt; by Kunal Dabir&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1260&#34; height=&#34;630&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/08/image-2-3.jpg&#34; alt=&#34;Abstract technology grid&#34; class=&#34;wp-image-116150&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/08/image-2-3.jpg 1260w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-3-300x150.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-3-1024x512.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-3-768x384.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-3-900x450.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-3-400x200.jpg 400w, https://www.cncf.io/wp-content/uploads/2024/08/image-2-3-800x400.jpg 800w&#34; sizes=&#34;(max-width: 1260px) 100vw, 1260px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I was recently speaking with an SRE who, when asked for their opinion on Infrastructure as Code (IaC), shouted, “it’s terrible and our devs hate it!” Now we may have been discussing a particular company, but the overall takeaway is that IaC isn’t always easy, especially for developers who have to learn it on top of the job they were hired to do. This particular SRE spent a lot of his time auditing and fixing IaC for devs. IaC is for sure a great option for code-driven infrastructure, but its complexity requires expertise; expertise that isn’t always available.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;So when I was thinking about the needs of the developer community, I was interested to see that “explain infrastructure as code” is one of Google’s autocomplete suggestions. Increasingly, developers are being asked to not just write application code, but also to do the work necessary to get that application deployed. Which more often than not requires cloud infrastructure, once again putting yet another requirement on developers to provision that too.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But developers aren’t always fans (we hear you!) for a number of reasons:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Complexity and Learning Curve&lt;/strong&gt;: IaC can be complex and has a steep learning curve, especially for those new to infrastructure as code (IaC). Specifically, the HCL (HashiCorp Configuration Language) syntax and the need to understand various Terraform concepts can be daunting.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;State Management&lt;/strong&gt;: Managing state can be tricky and error-prone. The state file is a critical part of IaC’s operation, and if it becomes corrupted or is mishandled, it can cause significant issues especially as some tools (like Terraform) require state files.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Debugging Difficulties&lt;/strong&gt;: Debugging IaC configurations can be challenging. Error messages may not always be clear or helpful, making it hard to identify and fix issues.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Lack of Idempotency&lt;/strong&gt;: While most IaC providers aim to be idempotent, ensuring that the same code always produces the same result, there are cases where it can lead to unexpected changes or require manual intervention. Check out this&amp;nbsp;&lt;a href=&#34;https://aws.plainenglish.io/what-is-idempotency-in-terraform-and-ansible-ebc2ef2e4234&#34;&gt;AWS blog for more info on Idempotency&lt;/a&gt;.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Dependency Management&lt;/strong&gt;: Handling dependencies between resources can be complex and lead to issues like circular dependencies, which can be difficult to resolve.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Performance Issues&lt;/strong&gt;: For large infrastructures, IaC can be slow, and plan or apply operations might take considerable time, reducing productivity.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Limited Language Features&lt;/strong&gt;: Compared to general-purpose programming languages, IaC can have limited features, making it difficult to express complex logic or configurations. While some IaC options can be written in programming languages, most use declarative or configuration langues like HCL, JSON or YAML which are limited in features.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Provider Limitations&lt;/strong&gt;: The quality and feature set of IaC providers can vary. If a provider is not well-maintained or lacks support for specific features, it can limit what developers can achieve.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Preference for Alternatives&lt;/strong&gt;: There are many Infrastructure as Code solutions like Terraform, AWS CloudFormation, Pulumi, or Kubernetes-native tools, which some might prefer over others and be easier to integrate into their workflows.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Alternatives to Infrastructure as Code&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Developer infrastructure tools are necessary – we all know that. But we need to make it as easy as possible, i.e. abstract away tooling and expertise where possible so that a developer doesn’t need to be a DevOps expert in addition to an app-expert. Infrastructure as Code, while revolutionary in many ways, often falls short. IaC tends to prioritize the infrastructure layer, sometimes at the expense of the application’s unique requirements. This can lead to scenarios where the infrastructure dictates the application’s architecture, rather than the other way around. The result is a less efficient, less optimized system that may not fully leverage the application’s strengths (while annoying developers because the app doesn’t run the way it should!).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:36px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-default&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-style-border is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p class=&#34;is-style-spaced-uppercase&#34;&gt;Keep reading&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/blog/2024/06/24/why-you-do-not-want-a-visualization-of-your-infrastructure-as-code/&#34;&gt;You don’t want a visualization&lt;/a&gt; of your IaC&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Find &lt;a href=&#34;https://www.cncf.io/online-programs/cloud-native-live-finding-infrastructure-as-code-missteps/&#34;&gt;IaC missteps&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use Terrastest to &lt;a href=&#34;https://www.cncf.io/blog/2022/07/18/testing-your-infrastructure-as-code-using-terratest/&#34;&gt;test your IaC&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Register for &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt; today&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is where Infrastructure from Code comes in. By auto-generating IaC based on the application source code, developers can focus on their core application development tasks without getting bogged down by the complexities of infrastructure management.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Infrastructure from Code is a compelling alternative to IaC because it abstracts away IaC from the software development lifecycle removing the requirement for developers to be infrastructure experts. (It also means infrastructure experts avoid spending hours fixing IaC for devs).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The Appeal of Infrastructure from Code&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Templates often attempt to offer one-size-fits-all solutions, which can be limiting and inflexible. They might be useful in some contexts, but they can also hinder creativity and adaptability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Infrastructure from Code offers quick, concise IaC that can significantly streamline workflows. Unlike using fill in the blank templates, which can be cumbersome and rigid, Infrastructure from Code analyzes what has already been coded to create IaC that is application-centric i.e. infrastructure provisioned for that application. Being application-centric means focusing on the specific needs and characteristics of the application rather than forcing it to fit into a predetermined infrastructure model. This approach allows for greater flexibility and optimization, as the infrastructure is tailored to support the application most effectively.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With Infrastructure from Code, devs can ensure standards are automatically applied based on best practices around security, reliability and provisioning. These can be industry-accepted best practices or even organizational standards. But standards are core to Infrastructure from Code.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rather than relying on static templates, adopting standards can be far more beneficial. Standards provide a consistent framework that can be adapted to various scenarios without the constraints of a predefined template. This approach encourages best practices and ensures that the infrastructure is robust, scalable, and secure.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Infrastructure from Code Benefits Developers&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Infrastructure from Code ensures all the work already coded by a developer to define infrastructure requirements within their application code is recognized and auto-generated. Instead of putting work into your app and then having to replicate it in IaC using templates, this method ensures that the infrastructure is tailored to the application’s needs, providing a more seamless and efficient workflow.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Infrastructure from Code offers several benefits to developers:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;: By analyzing static code to generate IaC automatically, developers can get their infrastructure provisioned faster – meaning features/apps get to market faster (and often without wait times).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Efficiency&lt;/strong&gt;: Infrastructure from Code minimizes the need for extensive DevOps knowledge, allowing developers to focus on their core competencies.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt;: Standards-based approaches in Infrastructure from Code ensure that infrastructure is reliable and scalable, adapting to various application needs without rigid templates.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Take control of your infrastructure without becoming an expert in a different domain. This streamlined approach reduces cognitive load and allows for more creativity and innovation in application development.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Infrastructure from Code is the future of IaC. You can explore Infrastructure from Code and see how it can transform your development process at&amp;nbsp;&lt;a href=&#34;https://appcd.io/?__hstc=10466666.461009d11466dac37fe86430408a9745.1723636624862.1723636624862.1723636624862.1&amp;amp;__hssc=10466666.1.1723636624862&amp;amp;__hsfp=1488656378&#34;&gt;appCD&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初由 Kunal Dabir 在 &lt;a href=&#34;https://blog.appcd.com/explain-infrastruct-as-code-alternatives&#34;&gt;AppCD 博客&lt;/a&gt;上发布&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1260”高度=“630”src=“https://www.cncf.io/ wp-content/uploads/2024/08/image-2-3.jpg&#34; alt=&#34;抽象技术网格&#34; class=&#34;wp-image-116150&#34; srcset=&#34;https://www.cncf.io/wp-content /uploads/2024/08/image-2-3.jpg 1260w，https://www.cncf.io/wp-content/uploads/2024/08/image-2-3-300x150.jpg 300w，https:// /www.cncf.io/wp-content/uploads/2024/08/image-2-3-1024x512.jpg 1024w，https://www.cncf.io/wp-content/uploads/2024/08/image- 2-3-768x384.jpg 768w，https://www.cncf.io/wp-content/uploads/2024/08/image-2-3-900x450.jpg 900w，https://www.cncf.io/ wp-content/uploads/2024/08/image-2-3-400x200.jpg 400w，https://www.cncf.io/wp-content/uploads/2024/08/image-2-3-800x400.jpg 800w“尺寸=”（最大宽度：1260px）100vw，1260px“referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我最近与一位 SRE 交谈，当被问及对基础设施即代码 (IaC) 的看法时，他喊道：“这太糟糕了，我们的开发人员讨厌它！”现在我们可能正在讨论一家特定的公司，但总体的结论是 IaC 并不总是那么容易，特别是对于那些必须在受雇从事的工作之外学习 IaC 的开发人员来说。这个特定的 SRE 花费了大量时间为开发人员审核和修复 IaC。 IaC 无疑是代码驱动基础设施的绝佳选择，但其复杂性需要专业知识；并不总是可用的专业知识。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;因此，当我思考开发者社区的需求时，我很感兴趣地看到“将基础设施解释为代码”是 Google 的自动完成建议之一。越来越多的开发人员不仅被要求编写应用程序代码，而且还被要求完成部署该应用程序所需的工作。这通常需要云基础设施，这再次对开发人员提供另一个要求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但出于多种原因，开发者并不总是粉丝（我们听到了！）：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;复杂性和学习曲线&lt;/strong&gt;：IaC 可能很复杂，并且学习曲线陡峭，特别是对于基础设施即代码 (IaC) 的新手来说。具体来说，HCL（HashiCorp 配置语言）语法和理解各种 Terraform 概念的需要可能令人望而生畏。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;状态管理&lt;/strong&gt;：管理状态可能很棘手且容易出错。状态文件是 IaC 操作的关键部分，如果它损坏或处理不当，可能会导致严重问题，特别是当某些工具（如 Terraform）需要状态文件时。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;调试困难&lt;/strong&gt;：调试 IaC 配置可能具有挑战性。错误消息可能并不总是清晰或有帮助，因此很难识别和解决问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;缺乏幂等性：虽然大多数 IaC 提供商的目标是幂等性，确保相同的代码始终产生相同的结果，但在某些情况下可能会导致意外更改或需要手动干预。请查看&lt;a href=&#34;https://aws.plainenglish.io/what-is-idempotency-in-terraform-and-ansible-ebc2ef2e4234&#34;&gt;AWS 博客，了解有关幂等性的更多信息&lt;/a&gt;。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;依赖关系管理&lt;/strong&gt;：处理资源之间的依赖关系可能很复杂，并会导致循环依赖等问题，而这些问题可能很难解决。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;性能问题&lt;/strong&gt;：对于大型基础设施，IaC 可能会很慢，并且规划或应用操作可能需要相当长的时间，从而降低工作效率。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;有限的语言功能&lt;/strong&gt;：与通用编程语言相比，IaC 的功能有限，难以表达复杂的逻辑或配置。虽然一些 IaC 选项可以用编程语言编写，但大多数使用声明性或配置语言，如 HCL、JSON 或 YAML，这些语言的功能有限。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;提供商限制&lt;/strong&gt;：IaC 提供商的质量和功能集可能有所不同。如果提供商维护不善或缺乏对特定功能的支持，则可能会限制开发人员的实现。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;对替代方案的偏好&lt;/strong&gt;：有许多基础设施即代码解决方案，例如 Terraform、AWS CloudFormation、Pulumi 或 Kubernetes 原生工具，有些人可能比其他人更喜欢这些解决方案，并且更容易集成到他们的工作流程中。 &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;基础设施即代码的替代方案&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开发人员基础设施工具是必要的——我们都知道。但我们需要使其尽可能简单，即尽可能抽象出工具和专业知识，以便开发人员除了应用程序专家之外不需要成为 DevOps 专家。基础设施即代码虽然在很多方面具有革命性，但常常存在缺陷。 IaC 倾向于优先考虑基础设施层，有时会牺牲应用程序的独特需求。这可能会导致基础设施决定应用程序架构的情况，而不是相反。结果是一个效率较低、优化程度较低的系统，可能无法充分利用应用程序的优势（同时会惹恼开发人员，因为应用程序没有按应有的方式运行！）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:36px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-default&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-style-border is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p class=&#34;is-style-spaced-uppercase&#34;&gt;继续阅读&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/blog/2024/06/24/why-you-do-not-want-a-visualization-of-your-infrastruct-as-code/ &#34;&gt;您不希望 IaC 可视化&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;查找&lt;a href=&#34;https://www.cncf.io/online-programs/cloud-native-live-finding-infrastruct-as-code-missteps/&#34;&gt;IaC 失误&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用 Terrastest &lt;a href=&#34;https://www.cncf.io/blog/2022/07/18/testing-your-infrastruct-as-code-using-terratest/&#34;&gt;测试您的 IaC&lt;/一个&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;立即报名参加&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这就是“代码基础架构”的用武之地。通过根据应用程序源代码自动生成 IaC，开发人员可以专注于其核心应用程序开发任务，而不会陷入基础架构管理的复杂性中。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;代码基础设施是 IaC 的一个引人注目的替代方案，因为它将 IaC 从软件开发生命周期中抽象出来，消除了开发人员成为基础设施专家的要求。 （这也意味着基础设施专家可以避免花费大量时间为开发人员修复 IaC）。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;代码基础设施的吸引力&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;模板通常试图提供一刀切的解决方案，但这可能具有限制性且缺乏灵活性。它们在某些情况下可能有用，但也会阻碍创造力和适应性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;来自代码的基础架构提供快速、简洁的 IaC，可以显着简化工作流程。与使用繁琐且僵化的填空模板不同，代码基础设施分析已经编码的内容，以创建以应用程序为中心的 IaC，即为该应用程序配置的基础设施。以应用程序为中心意味着关注应用程序的特定需求和特征，而不是强迫它适应预定的基础设施模型。这种方法可以实现更大的灵活性和优化，因为基础设施是专门为最有效地支持应用程序而定制的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过代码基础设施，开发人员可以确保根据安全性、可靠性和配置方面的最佳实践自动应用标准。这些可以是行业公认的最佳实践，甚至是组织标准。但标准是代码基础设施的核心。  &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;采用标准比依赖静态模板更有利。标准提供了一致的框架，可以适应各种场景，而不受预定义模板的限制。这种方法鼓励最佳实践，并确保基础设施稳健、可扩展且安全。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;代码基础设施有利于开发人员&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;代码基础架构可确保开发人员已编码的所有工作在其应用程序代码中定义基础架构需求均得到识别并自动生成。此方法无需将工作放入应用程序中，然后使用模板在 IaC 中复制它，而是可确保基础架构根据应用程序的需要进行定制。需要，提供更加无缝和高效的工作流程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;代码基础设施为开发人员提供了多种好处：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;简单性&lt;/strong&gt;：通过分析静态代码以自动生成 IaC，开发人员可以更快地配置基础设施，这意味着功能/应用程序可以更快地推向市场（并且通常无需等待时间）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;效率&lt;/strong&gt;：基于代码的基础设施最大限度地减少了对广泛的 DevOps 知识的需求，使开发人员能够专注于他们的核心能力。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;一致性&lt;/strong&gt;：基础设施代码中基于标准的方法可确保基础设施可靠且可扩展，无需严格的模板即可适应各种应用程序需求。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;无需成为不同领域的专家即可控制您的基础架构。这种简化的方法减少了认知负担，并允许在应用程序开发中发挥更多的创造力和创新力。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;代码基础架构是 IaC 的未来。您可以通过代码探索基础架构，了解它如何改变您的开发流程：&lt;a href=&#34;https://appcd.io/?__hstc=10466666.461009d11466dac37fe86430408a9745.1723636624862.1723636624862.1723636624862.1&amp;__hs sc=10466666.1.1723636624862&amp;__hsfp=1488656378&#34;&gt;appCD&lt;/一个&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 14 Aug 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Deploying a microservices application using Helm on Kubernetes】在 Kubernetes 上使用 Helm 部署微服务应用程序</title>
      <link>https://www.cncf.io/blog/2024/08/09/deploying-a-microservices-application-using-helm-on-kubernetes/</link>
      <description>【&lt;p&gt;&lt;em&gt;Community post originally published on &lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22&#34;&gt;Dev.to&lt;/a&gt; by Syed Asad Raza&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Helm, often described as the package manager for Kubernetes, simplifies the deployment and management of applications within Kubernetes clusters. This guide will walk you through deploying a microservices application using Helm, illustrating key concepts such as creating Helm charts, managing dependencies, and deploying a multi-service application.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#prerequisites&#34;&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Before we begin, ensure you have the following tools installed:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;kubectl&lt;/strong&gt;: Kubernetes command-line tool.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;minikube&lt;/strong&gt;: Local Kubernetes cluster for development and testing.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: For building container images.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Helm&lt;/strong&gt;: Kubernetes package manager.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#overview&#34;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We will deploy a sample application consisting of two microservices:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Frontend Service&lt;/strong&gt;: A simple web application that communicates with the backend service.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Backend Service&lt;/strong&gt;: An API that returns a message.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’ll use Helm to package these services into charts, manage their dependencies, and deploy them to a Kubernetes cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:36px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-default&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-style-border is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p class=&#34;is-style-spaced-uppercase&#34;&gt;Keep reading&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/blog/2024/08/06/installing-multiple-helm-charts-in-one-go-approach-3-using-simple-bash-utility/&#34;&gt;Use a bash utility&lt;/a&gt; to install multiple Helm charts&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The &lt;a href=&#34;https://www.cncf.io/online-programs/cncf-on-demand-webinar-from-improving-helm-to-developing-nelm-the-evolution-of-deployments-in-werf/&#34;&gt;evolution of deployments&lt;/a&gt; in werf&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Your operator &lt;a href=&#34;https://www.cncf.io/online-programs/cncf-on-demand-webinar-your-operator-should-probably-be-a-helm-chart/&#34;&gt;should be a Helm chart&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Register for &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt; today&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#step-1-build-docker-images&#34;&gt;&lt;/a&gt;Step 1: Build Docker Images&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;First, we need to create Docker images for our frontend and backend services.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Backend Service&lt;/strong&gt;&lt;br&gt;Create a simple&amp;nbsp;&lt;code&gt;Node.js&lt;/code&gt;&amp;nbsp;backend service:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;// backend/server.js&#xA;const express = require(&#39;express&#39;);&#xA;const app = express();&#xA;&#xA;app.get(&#39;/api/message&#39;, (req, res) =&amp;gt; {&#xA;    res.json({ message: &#39;Hello from the backend!&#39; });&#xA;});&#xA;&#xA;const port = 3000;&#xA;app.listen(port, () =&amp;gt; {&#xA;    console.log(`Backend service running on port ${port}`);&#xA;});&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Create a&amp;nbsp;&lt;code&gt;Dockerfile&lt;/code&gt;&amp;nbsp;for the backend:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;# backend/Dockerfile&#xA;FROM node:14&#xA;WORKDIR /app&#xA;COPY server.js .&#xA;RUN npm install express&#xA;EXPOSE 3000&#xA;CMD [&#34;node&#34;, &#34;server.js&#34;]&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Frontend Service&lt;/strong&gt;&lt;br&gt;Create a simple HTML file for the frontend service:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;markup&#34; class=&#34;language-markup&#34;&gt;&amp;lt;!-- frontend/index.html --&amp;gt;&#xA;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;&amp;lt;head&amp;gt;&#xA;    &amp;lt;meta charset=&#34;UTF-8&#34;&amp;gt;&#xA;    &amp;lt;title&amp;gt;Frontend Service&amp;lt;/title&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&amp;lt;body&amp;gt;&#xA;    &amp;lt;h1&amp;gt;Frontend Service&amp;lt;/h1&amp;gt;&#xA;    &amp;lt;div id=&#34;message&#34;&amp;gt;&amp;lt;/div&amp;gt;&#xA;    &amp;lt;script&amp;gt;&#xA;        fetch(&#39;/api/message&#39;)&#xA;            .then(response =&amp;gt; response.json())&#xA;            .then(data =&amp;gt; {&#xA;                document.getElementById(&#39;message&#39;).innerText = data.message;&#xA;            });&#xA;    &amp;lt;/script&amp;gt;&#xA;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Create a Dockerfile for the frontend:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;markup&#34; class=&#34;language-markup&#34;&gt;# frontend/Dockerfile&#xA;FROM nginx:alpine&#xA;COPY index.html /usr/share/nginx/html&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Build Docker Images&lt;/strong&gt;&lt;br&gt;Navigate to each service directory and build the&amp;nbsp;&lt;code&gt;Docker images&lt;/code&gt;:&lt;br&gt;&lt;em&gt;In backend directory&lt;/em&gt;&lt;br&gt;&lt;code&gt;docker build -t backend-service&lt;/code&gt;&lt;br&gt;&lt;em&gt;In frontend directory&lt;/em&gt;&lt;br&gt;&lt;code&gt;docker build -t frontend-service&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#step-2-create-helm-charts&#34;&gt;&lt;/a&gt;Step 2: Create Helm Charts&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Create a Helm Chart for the Backend Service&lt;/strong&gt;&lt;br&gt;Navigate to a working directory and create a new Helm chart:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;helm create backend&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command generates a basic Helm chart structure. Modify the&amp;nbsp;&lt;code&gt;backend/templates/deployment.yaml&lt;/code&gt;&amp;nbsp;file to suit our backend service:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  name: {{ .Release.Name }}-backend&#xA;spec:&#xA;  replicas: 2&#xA;  selector:&#xA;    matchLabels:&#xA;      app: {{ .Release.Name }}-backend&#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        app: {{ .Release.Name }}-backend&#xA;    spec:&#xA;      containers:&#xA;      - name: backend&#xA;        image: backend-service&#xA;        ports:&#xA;        - containerPort: 3000&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Modify the&amp;nbsp;&lt;code&gt;backend/templates/service.yaml&lt;/code&gt;&amp;nbsp;file:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;apiVersion: v1&#xA;kind: Service&#xA;metadata:&#xA;  name: {{ .Release.Name }}-backend&#xA;spec:&#xA;  selector:&#xA;    app: {{ .Release.Name }}-backend&#xA;  ports:&#xA;    - protocol: TCP&#xA;      port: 80&#xA;      targetPort: 3000&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#create-a-helm-chart-for-the-frontend-service&#34;&gt;&lt;/a&gt;Create a Helm Chart for the Frontend Service&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Similarly, create a Helm chart for the frontend service:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;helm create frontend&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Modify the&amp;nbsp;&lt;code&gt;frontend/templates/deployment.yaml&lt;/code&gt;&amp;nbsp;file:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  name: {{ .Release.Name }}-frontend&#xA;spec:&#xA;  replicas: 2&#xA;  selector:&#xA;    matchLabels:&#xA;      app: {{ .Release.Name }}-frontend&#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        app: {{ .Release.Name }}-frontend&#xA;    spec:&#xA;      containers:&#xA;      - name: frontend&#xA;        image: frontend-service&#xA;        ports:&#xA;        - containerPort: 80&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Modify the&amp;nbsp;&lt;code&gt;frontend/templates/service.yaml&lt;/code&gt;&amp;nbsp;file:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;apiVersion: v1&#xA;kind: Service&#xA;metadata:&#xA;  name: {{ .Release.Name }}-frontend&#xA;spec:&#xA;  selector:&#xA;    app: {{ .Release.Name }}-frontend&#xA;  ports:&#xA;    - protocol: TCP&#xA;      port: 80&#xA;      targetPort: 80&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#step-3-deploy-using-helm&#34;&gt;&lt;/a&gt;Step 3: Deploy Using Helm&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Start your Minikube cluster:&lt;br&gt;&lt;code&gt;minikube start&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Deploy the Backend Service&lt;/strong&gt;&lt;br&gt;Navigate to the backend directory and install the chart:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;helm install backend ./backend&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Deploy the Frontend Service&lt;/strong&gt;&lt;br&gt;Navigate to the frontend directory and install the chart:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;helm install frontend ./frontend&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#step-4-set-up-ingress&#34;&gt;&lt;/a&gt;Step 4: Set Up Ingress&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To expose the frontend service externally, we will set up an ingress.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Enable Ingress in Minikube&lt;/strong&gt;&lt;br&gt;Enable the ingress addon:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;minikube addons enable ingress&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Create Ingress Resource&lt;/strong&gt;&lt;br&gt;Create an&amp;nbsp;&lt;code&gt;ingress&lt;/code&gt;&amp;nbsp;resource to route traffic to the frontend service:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;# ingress.yaml&#xA;apiVersion: networking.k8s.io/v1&#xA;kind: Ingress&#xA;metadata:&#xA;  name: frontend-ingress&#xA;spec:&#xA;  rules:&#xA;  - host: frontend.local&#xA;    http:&#xA;      paths:&#xA;      - path: /&#xA;        pathType: Prefix&#xA;        backend:&#xA;          service:&#xA;            name: frontend&#xA;            port:&#xA;              number: 80&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apply the ingress configuration:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;kubectl apply -f ingress.yaml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Add an entry to your&amp;nbsp;&lt;code&gt;/etc/hosts&lt;/code&gt;&amp;nbsp;file to map&amp;nbsp;&lt;code&gt;frontend.local&lt;/code&gt;&amp;nbsp;to the Minikube IP:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;echo &#34;$(minikube ip) frontend.local&#34; | sudo tee -a /etc/hosts&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#step-5-verify-the-deployment&#34;&gt;&lt;/a&gt;Step 5: Verify the Deployment&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Access the frontend service in your browser by navigating to&amp;nbsp;&lt;code&gt;http://frontend.local&lt;/code&gt;. You should see the frontend page displaying the message fetched from the backend service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this guide, we’ve deployed a microservices application using Helm on Kubernetes, demonstrating intermediate concepts like creating Helm charts, managing dependencies, and setting up ingress. Helm simplifies the deployment and management of Kubernetes applications, making it a powerful tool for cloud-native development.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;By sharing this tutorial, you’re providing valuable technical content to the CNCF community, helping others understand and leverage Helm for their Kubernetes deployments.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;社区帖子最初发布于 &lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22&#34;&gt;Dev.to&lt;/ a&gt; 作者：Syed Asad Raza&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Helm 通常被描述为 Kubernetes 的包管理器，它简化了 Kubernetes 集群内应用程序的部署和管理。本指南将引导您完成使用 Helm 部署微服务应用程序，说明创建 Helm 图表、管理依赖项和部署多服务应用程序等关键概念。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#preventions&#34;&gt;&lt;/ a&gt;先决条件&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在开始之前，请确保您已安装以下工具：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;kubectl&lt;/strong&gt;：Kubernetes 命令行工具。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;minikube&lt;/strong&gt;：用于开发和测试的本地 Kubernetes 集群。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;：用于构建容器镜像。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Helm&lt;/strong&gt;：Kubernetes 包管理器。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#overview&#34;&gt;&lt;/ a&gt;概述&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们将部署一个由两个微服务组成的示例应用程序：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;前端服务&lt;/strong&gt;：与后端服务通信的简单 Web 应用程序。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;后端服务&lt;/strong&gt;：返回消息的 API。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们将使用 Helm 将这些服务打包到图表中，管理它们的依赖项，并将它们部署到 Kubernetes 集群。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:36px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-default&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-style-border is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p class=&#34;is-style-spaced-uppercase&#34;&gt;继续阅读&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/blog/2024/08/06/installing-multiple-helm-charts-in-one-go-approach-3-using-simple-bash- utility/&#34;&gt;使用 bash 实用程序&lt;/a&gt;安装多个 Helm 图表&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/online-programs/cncf-on-demand-webinar-from-improving-helm-to-developmenting-nelm-the-evolution-of-deployments -in-werf/&#34;&gt;werf 中部署的演变&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;您的运营商&lt;a href=&#34;https://www.cncf.io/online-programs/cncf-on-demand-webinar-your-operator-should-probously-be-a-helm-chart/&#34;&gt;应该是 Helm 图表&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;立即报名参加&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#step-1-build -docker-images&#34;&gt;&lt;/a&gt;第 1 步：构建 Docker 镜像&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;首先，我们需要为我们的前端和后端服务创建 Docker 镜像。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;后端服务&lt;/strong&gt;&lt;br&gt;创建一个简单的 &lt;code&gt;Node.js&lt;/code&gt; 后端服务：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;// backend/server.js&#xA;const express = require(&#39;express&#39;);&#xA;常量应用程序 = Express();&#xA;&#xA;app.get(&#39;/api/message&#39;, (req, res) =&gt; {&#xA;    res.json({ message: &#39;来自后端的你好！&#39; });&#xA;});&#xA;&#xA;常量端口= 3000；&#xA;应用程序.listen(端口, () =&gt; {&#xA;    console.log(`在端口 ${port} 上运行的后端服务`);&#xA;});&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为后端创建一个&lt;code&gt;Dockerfile&lt;/code&gt;：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;# backend/Dockerfile&#xA;来自节点：14&#xA;工作目录/应用程序&#xA;复制 server.js 。&#xA;运行 npm install Express&#xA;曝光 3000&#xA;CMD [“节点”，“server.js”]&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;前端服务&lt;/strong&gt;&lt;br&gt;为前端服务创建一个简单的 HTML 文件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;markup&#34; class=&#34;language-markup&#34;&gt;&lt;!-- frontend/index.html --&gt;&#xA;&lt;!DOCTYPE html&gt;&#xA;&lt;html lang=&#34;en&#34;&gt;&#xA;&lt;头&gt;&#xA;    &lt;元字符集=“UTF-8”&gt;&#xA;    &lt;title&gt;前端服务&lt;/title&gt;&#xA;&lt;/头&gt;&#xA;&lt;正文&gt;&#xA;    &lt;h1&gt;前端服务&lt;/h1&gt;&#xA;    &lt;div id=&#34;消息&#34;&gt;&lt;/div&gt;&#xA;    &lt;脚本&gt;&#xA;        fetch(&#39;/api/消息&#39;)&#xA;            .then(响应=&gt;response.json())&#xA;            .then(数据 =&gt; {&#xA;                document.getElementById(&#39;message&#39;).innerText = data.message;&#xA;            });&#xA;    &lt;/脚本&gt;&#xA;&lt;/正文&gt;&#xA;&lt;/html&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为前端创建 Dockerfile：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;markup&#34; class=&#34;language-markup&#34;&gt;# 前端/Dockerfile&#xA;来自 nginx:alpine&#xA;复制index.html /usr/share/nginx/html&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;构建 Docker 映像&lt;/strong&gt;&lt;br&gt;导航到每个服务目录并构建&lt;code&gt;Docker 映像&lt;/code&gt;：&lt;br&gt;&lt;em&gt;在后端目录中&lt;/em&gt;&lt;br&gt; &lt;code&gt;docker build -t backend-service&lt;/code&gt;&lt;br&gt;&lt;em&gt;在前端目录&lt;/em&gt;&lt;br&gt;&lt;code&gt;docker build -t frontend-service&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#step-2-create -helm-charts&#34;&gt;&lt;/a&gt;第 2 步：创建 Helm 图表&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;为后端服务创建 Helm 图表&lt;/strong&gt;&lt;br&gt;导航到工作目录并创建新的 Helm 图表：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;helm 创建后端&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令生成基本的 Helm 图表结构。修改 &lt;code&gt;backend/templates/deployment.yaml&lt;/code&gt; 文件以适合我们的后端服务：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;api版本：apps/v1&#xA;种类：部署&#xA;元数据：&#xA;  name: {{ .Release.Name }}-后端&#xA;规格：&#xA;  副本：2&#xA;  选择器：&#xA;    匹配标签：&#xA;      应用程序：{{ .Release.Name }}-后端&#xA;  模板：&#xA;    元数据：&#xA;      标签：&#xA;        应用程序：{{.发布.Name }}-后端&#xA;    规格：&#xA;      容器：&#xA;      - 名称：后端&#xA;        图片：后端服务&#xA;        端口：&#xA;        - 容器端口：3000&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;修改&lt;code&gt;backend/templates/service.yaml&lt;/code&gt;文件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;api版本：v1&#xA;种类： 服务&#xA;元数据：&#xA;  name: {{ .Release.Name }}-后端&#xA;规格：&#xA;  选择器：&#xA;    应用程序：{{ .Release.Name }}-后端&#xA;  端口：&#xA;    - 协议：TCP&#xA;      端口：80&#xA;      目标端口：3000&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#create-a-helm -chart-for-the-frontend-service&#34;&gt;&lt;/a&gt;为前端服务创建 Helm Chart&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;同样，为前端服务创建 Helm 图表：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;helm 创建前端&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;修改&lt;code&gt;frontend/templates/deployment.yaml&lt;/code&gt;文件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;api版本：apps/v1&#xA;种类：部署&#xA;元数据：&#xA;  名称：{{ .Release.Name }}-前端&#xA;规格：&#xA;  副本：2&#xA;  选择器：&#xA;    匹配标签：&#xA;      应用程序：{{ .Release.Name }}-前端&#xA;  模板：&#xA;    元数据：&#xA;      标签：&#xA;        应用程序：{{ .Release.Name }}-前端&#xA;    规格：&#xA;      容器：&#xA;      - 名称：前端&#xA;        图片：前端服务&#xA;        端口：&#xA;        - 容器端口：80&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;修改&lt;code&gt;frontend/templates/service.yaml&lt;/code&gt;文件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;api版本：v1&#xA;种类： 服务&#xA;元数据：&#xA;  名称：{{ .Release.Name }}-前端&#xA;规格：&#xA;  选择器：&#xA;    应用程序：{{ .Release.Name }}-前端&#xA;  端口：&#xA;    - 协议：TCP&#xA;      端口：80&#xA;      目标端口：80&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#step-3-deploy -using-helm&#34;&gt;&lt;/a&gt;第 3 步：使用 Helm 进行部署&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;启动您的 Minikube 集群：&lt;br&gt;&lt;code&gt;minikube start&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;部署后端服务&lt;/strong&gt;&lt;br&gt;导航到后端目录并安装图表：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;helm 安装后端 ./backend&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;部署前端服务&lt;/strong&gt;&lt;br&gt;导航到前端目录并安装图表：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;helm 安装前端 ./frontend&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#step-4-set -up-ingress&#34;&gt;&lt;/a&gt;第 4 步：设置 Ingress&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了向外部公开前端服务，我们将设置一个入口。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;在 Minikube 中启用 Ingress&lt;/strong&gt;&lt;br&gt;启用 ingress 插件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;minikube 插件启用入口&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;创建入口资源&lt;/strong&gt;&lt;br&gt;创建&lt;code&gt;入口&lt;/code&gt;资源以将流量路由到前端服务：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;# ingress.yaml&#xA;api版本：networking.k8s.io/v1&#xA;种类: 入口&#xA;元数据：&#xA;  名称：前端入口&#xA;规格：&#xA;  规则：&#xA;  - 主机：frontend.local&#xA;    http：&#xA;      路径：&#xA;      - 小路： /&#xA;        路径类型：前缀&#xA;        后端：&#xA;          服务：&#xA;            名称：前端&#xA;            港口：&#xA;              数量：80&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;应用入口配置：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;kubectl apply -f ingress.yaml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;向您的 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件添加一个条目，以将 &lt;code&gt;frontend.local&lt;/code&gt; 映射到 Minikube IP：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;echo &#34;$(minikube ip) frontend.local&#34; | sudo tee -a /etc/hosts&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#step-5-verify -the-deployment&#34;&gt;&lt;/a&gt;第 5 步：验证部署&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;导航至 &lt;code&gt;http://frontend.local&lt;/code&gt;，在浏览器中访问前端服务。您应该看到前端页面显示从后端服务获取的消息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/deploying-a-microservices-application-using-helm-on-kubernetes-3h22#conclusion&#34;&gt;&lt;/ a&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在本指南中，我们在 Kubernetes 上使用 Helm 部署了一个微服务应用程序，演示了创建 Helm 图表、管理依赖项和设置入口等中间概念。 Helm 简化了 Kubernetes 应用的部署和管理，使其成为云原生开发的强大工具。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;通过分享本教程，您可以向 CNCF 社区提供有价值的技术内容，帮助其他人了解并利用 Helm 进行 Kubernetes 部署。&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 08 Aug 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【SSO and RBAC: a secure access strategy for your Kubernetes】SSO 和 RBAC：Kubernetes 的安全访问策略</title>
      <link>https://www.cncf.io/blog/2024/08/16/sso-and-rbac-a-secure-access-strategy-for-your-kubernetes/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on the &lt;a href=&#34;https://devtron.ai/blog/sso-and-rbac-a-secure-access-strategy-for-your-kubernetes/&#34;&gt;Devtron blog&lt;/a&gt; by Bhushan Nemade&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;TL;DR In the dynamic world of cloud-native, Kubernetes stands as an undisputed leader in the space of container orchestration. This article explores how to secure your Kubernetes environment using Single Sign-On (SSO) and Resource-Based Access Control (RBAC).&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the ever-evolving world of cloud-native computing, Kubernetes has emerged as a standard solution for container orchestration. However, managing access control across multiple Kubernetes clusters can quickly become a complex task, especially in large organizations with numerous teams and members. This is where the power of Single Sign-On (SSO) and Role-Based Access Control (RBAC) comes into play, providing a secure and efficient solution for access management.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;authenticationauthorization&#34;&gt;Authentication/Authorization&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The very first way to secure something in the digital world is to set authentication and authorization. The authentication can be handled by SSO, and the authorization can be done through RBAC for the Kubernetes environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-challenge-of-manual-access-control&#34;&gt;The Challenge of Manual Access Control&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Imagine yourself as a seasoned DevOps engineer in a fast-paced cloud-native organization, responsible for managing access control across 50 Kubernetes clusters. Multiple teams are collaborating and performing deployments on these clusters at lightning speed. Manually managing access for all team members across all clusters can quickly become a nightmare.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Traditionally, you would need to distribute Kubeconfig files among team members, granting them access to specific clusters. However, this approach has potential security risks because misconfigurations or misplaced files can leave clusters vulnerable to data breaches and unauthorized access. Additionally, manual RBAC configuration for each cluster is time-consuming, error-prone, and lacks fine-grained control. So when managing access control over large numbers of Kubernetes clusters using traditional methods, you can end up with the following:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Vulnerable clusters&lt;/strong&gt;: Team members need to have a kubeconfig file for each cluster to access it. Any misconfiguration in these files can leave clusters vulnerable to data breaches and security threats.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Distribution of Kubeconfig&lt;/strong&gt;: Sharing Kubeconfig files with team members is a challenge. An accidental leak or unauthorized access can compromise the entire cluster.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Complex RBAC&lt;/strong&gt;: In the Kubernetes cluster, you need to configure the RBAC manually. This process is time-consuming and error-prone. With this, you may not get proper, fine-grained control over your Kubernetes cluster.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-us.googleusercontent.com/feAGDnS_Hd8TDqQqg6PwHc3I8tkj0wCCtzNkbecBrOE0Q_rUz17bmDsXUPsxk-VmcOdE2MlSNPOKzZuyYH7BgFO16db5rqzx-9ZUdp8EyV3XfZZ-d9x-Oq_Xb3FpI0IwA_sfbwYkwEP25Xg7qC1526I&#34; alt=&#34;RBAC Complexities&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These are some major challenges that you may face when you choose to manage multiple clusters manually. And definitely, you don’t want to spend time navigating through these complexities rather than focusing on what truly matters: efficient deployments and innovation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;single-sign-on-sso-for-authentication&#34;&gt;Single Sign-On (SSO) for Authentication&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;SSO provides ease to the process of authentication by leveraging the concept of federated identity. Users can authenticate themselves using the existing credentials from identity providers. Using an authentication based on SSO for accessing all Kubernetes clusters. SSO will eliminate the need for distributing and managing multiple kubeconfig files to access the Kubernetes cluster, along with reducing the risk of unauthorized access to your clusters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-us.googleusercontent.com/NZzH1rxvSx5H_ViLdGsimzRtcKoOH_cC4r-TTuyHFQ8y2h6r2yIsePgDP2P521v8s3iXsL0iiZZP_Jiyd49qnAbBYRH89IZBbnuIs0rPOeG008UPnYS9qM-4xpLjbwkQLzCOu7795O00bSfkr6f_1rk&#34; alt=&#34;sso solution&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We Devtron, a platform for managing your Kubernetes environments, offers an SSO solution. It’s tailored specifically for Kubernetes workflows. Devtron with SSO provides you with the ease of accessing all authorized clusters with a single click. You can log in to Devtron with your single set of credentials (e.g., Google, GitHub, GitLab, etc.) and access all your Kubernetes clusters on the Devtron dashboard. So no more juggling with complex Kubeconfig files and static tokens. Devtron sprints for one extra mile; understanding the preferences and needs of every organization can be unique. For that, Devtron offers seven SSO integrations. Empowering organizations and users to choose the SSO that perfectly aligns with their existing infrastructure and security practices. Devtron offers SSO with most of the providers which can be used for authentication. Here are some of them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;Configure SSO with&amp;nbsp;&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/google?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Google&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/github?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/gitlab?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitLab&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/microsoft?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Microsoft&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/ldap?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;LDAP&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/oidc?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OIDC&lt;/a&gt;, and&amp;nbsp;&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/openshift?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenShift&lt;/a&gt;. You can also integrate other identity and access management tools like&amp;nbsp;&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/oidc/okta?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Okta&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/oidc/keycloak?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Keycloak&lt;/a&gt;&amp;nbsp;for managing user permissions.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-us.googleusercontent.com/c9U2JCwkaSqlKwM--UciXmNdbdNSJA_H0ZFHaxwd5N3GeCkL_3AMvm64POY27dbRLsyBr2k-TMB2W8rJfdQgLXOZomYUq6XCxqXBF2eznnWMdQIGMaWdukDj4MdNxWFPJof4sOY0SWNHrcUMCTPV73U&#34; alt=&#34;SSO Login Services&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;SSO Login Services with Devtron&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;fine-grained-access-control-with-rbacauthorization&#34;&gt;Fine-Grained Access Control with RBAC – Authorization&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While SSO solves the authentication challenge for you. RBAC addresses the authorization aspect by allowing you to define granular permissions and restricting access to cluster resources for users. In Kubernetes, you can define roles, cluster roles, role bindings, and cluster role bindings to control access at both the namespace and cluster levels. While setting the manual configuration, you can face issues like:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Error-Proneness and Complexities:&lt;/strong&gt;&amp;nbsp;Configuring a vast number of roles and permissions in Kubernetes makes it difficult to configure them all accurately. You can face the issue of inconsistent configuration.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Scalability:&lt;/strong&gt;&amp;nbsp;To allow a new team member to access your cluster, you need to configure the RBAC again. Imagine doing this for each new member and every new cluster. Manually configuring RBAC results in inefficiency.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Security Concerns:&lt;/strong&gt;&amp;nbsp;While configuring the RBAC manually, there are chances of granting more user access than is required. These will allow users to access sensitive resources like the production database. Now think you mistakenly granted permission to users for databases, and users will fire a delete query on that.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-us.googleusercontent.com/nr_TrXWE05YLm2uN2d_j_PwwqUv1ZbMvSbxG3YYVW0j3USMMZN1x5DK2mtUYjKHAGPuPQ5GIj6Y538ToC9WVQ91_BXx-37rs9KPUBkYCUbA9DJRBGBf_AiFit0c3GWz1-vre0ZAWNojcHke4Mc1-pO8&#34; alt=&#34;User Permissions&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;User Permissions with Devtron&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Devtron simplifies this process by providing a graphical user interface (GUI) for managing RBAC. RBAC in Devtron is specifically designed for the workflow of Kubernetes. It allows the administrator to manage access to Kubernetes clusters, environments, and all resources in the cluster. Ensures least-privileged access and creates a secure environment by defining roles and restricting access for other users. Devtron allows you to manage fine-grained access control down to the Kubernetes cluster resource level. You can grant users precise permissions for specific resources in the cluster. The User Access Management feature in Devtron allows you to add other users, like support engineers’, and manage their access on your Devtron dashboard. You can mark the status of users as ‘Active’, ‘Inactive’, or ‘Keep active until’ (TTL). This feature gives you control over how other qualified users access your Devtron dashboard.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-us.googleusercontent.com/9vjNxPObBhKc2THqdmBIStqNV6YA0kqx-OkdJE9sPg-twV4YSgadn_3dNPjBVF7xAMqv_qU1Ke8ZfEZwfTDWoc0CAumMRP-0o2r8uRM1sJwcdAtj31lrdMwFAwU2LTe7ExT5PBgamsUgeCRMGcBGIeQ&#34; alt=&#34;Time Based Access&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Time Based Access with Devtron&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-power-of-sso-and-rbac-combined&#34;&gt;The Power of SSO and RBAC Combined&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By combining SSO and RBAC, organizations can achieve a robust and secure access control strategy for their Kubernetes environments. This combination offers several benefits:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;enhanced-security&#34;&gt;Enhanced Security&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;SSO for the Kubernetes environment allows you to centralize the process of authentication. Allowing you to use already-existing credentials to access all authorized clusters. SSO removes the chances of clusters getting compromised due to some misconfigurations or misplaced kubeconfig files.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;RBAC allows super admins to define fine-grind permissions for users to access clusters and resources. RBAC is an authorization for your Kubernetes environment that restricts unauthorized users from accessing resources that are not permitted. This adds a layer of security post-SSO.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Setting RBAC and SSO manually for your Kubernetes environment can bring complexities. To simplify the process of setting SSO and RBAC, you can look at tools like Devtron. In Devtron, you can set SSO and RBAC both using a single dashboard and without any complexities.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;improved-manageability&#34;&gt;Improved Manageability&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Managing multiple clusters across various environments becomes simpler with SSO. Administrators can centrally manage access for clusters rather than configuring each cluster separately.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;With RBAC, administrators can also optimize the Kubernetes environments for cost. Using RBAC, they can restrict user access and utilization of resources.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;scalability-and-flexibility&#34;&gt;Scalability and Flexibility&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;SSO and RBAC can keep up with the scale of your Kubernetes environments. SSO and RBAC provide a robust framework to manage the scale of users and Kubernetes clusters. With the increased number of users, administrators can authenticate them using their Active Directory and use RBAC to allocate permissions and define roles.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Devtron allows administrators to map their existing Active Directory with Devtron SSO. With this, they can authenticate and allow team members to access all authorized microservices with a single click. Along with this, they can apply predefined roles and permissions to them. All of these are possible from a single dashboard.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the dynamic world of cloud-native computing, securing access to Kubernetes clusters is paramount. By leveraging the power of SSO and RBAC, organizations can streamline access management, enhance security, and ensure efficient collaboration across teams. Devtron offers a comprehensive solution, simplifying the implementation of SSO and RBAC while providing a centralized dashboard for access control management. Embrace the simplicity and security of SSO and RBAC in your Kubernetes environment, and empower your teams to innovate with confidence.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Devtron’s RBAC can also be extended and can be used for more secure and controlled kubectl access. Users don’t have to log in to the dashboard and can use kubectl commands which would be proxied through Devtron with limited access and api-tokens given for the respective user. To learn more, check out&amp;nbsp;&lt;a href=&#34;https://devtron.ai/blog/control-and-secure-kubectl-access/&#34;&gt;this blog about control and secure kubectl access&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you have any queries, don’t hesitate to&amp;nbsp;&lt;a href=&#34;https://rebrand.ly/devtron-demo?ref=blog&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;connect with us&lt;/a&gt;. Join the lively discussions and shared knowledge in our actively growing&amp;nbsp;&lt;a href=&#34;https://rebrand.ly/Devtron-Discord?ref=devtron.ai&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;Discord Community&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初发布于 &lt;a href=&#34;https://devtron.ai/blog/sso-and-rbac-a-secure-access-strategy-for-your-kubernetes/&#34;&gt;Devtron博客&lt;/a&gt;作者：Bhushan Nemade&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;TL;DR 在云原生的动态世界中，Kubernetes 是容器编排领域无可争议的领导者。本文探讨如何使用单点登录 (SSO) 和基于资源的访问控制 (RBAC) 来保护 Kubernetes 环境。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在不断发展的云原生计算世界中，Kubernetes 已成为容器编排的标准解决方案。然而，管理多个 Kubernetes 集群的访问控制很快就会成为一项复杂的任务，尤其是在拥有众多团队和成员的大型组织中。这就是单点登录 (SSO) 和基于角色的访问控制 (RBAC) 发挥作用的地方，为访问管理提供安全高效的解决方案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;authenticationauthorization&#34;&gt;身份验证/授权&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在数字世界中保护某些内容的第一个方法是设置身份验证和授权。对于 Kubernetes 环境，可以通过 SSO 进行身份验证，通过 RBAC 进行授权。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-challenge-of-manual-access-control&#34;&gt;手动访问控制的挑战&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;想象一下自己是一个快节奏的云原生组织中经验丰富的 DevOps 工程师，负责管理 50 个 Kubernetes 集群的访问控制。多个团队正在以闪电般的速度协作并在这些集群上执行部署。手动管理所有集群中所有团队成员的访问权限很快就会成为一场噩梦。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;传统上，您需要在团队成员之间分发 Kubeconfig 文件，授予他们对特定集群的访问权限。然而，这种方法存在潜在的安全风险，因为错误配置或放错位置的文件可能会使集群容易遭受数据泄露和未经授权的访问。此外，每个集群的手动 RBAC 配置非常耗时、容易出错，并且缺乏细粒度的控制。因此，当使用传统方法管理大量 Kubernetes 集群的访问控制时，您可能会得到以下结果：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;易受攻击的集群&lt;/strong&gt;：团队成员需要为每个集群拥有一个 kubeconfig 文件才能访问它。这些文件中的任何错误配置都可能导致集群容易遭受数据泄露和安全威胁。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Kubeconfig 的分发&lt;/strong&gt;：与团队成员共享 Kubeconfig 文件是一项挑战。意外泄漏或未经授权的访问可能会危及整个集群。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;复杂RBAC&lt;/strong&gt;：在Kubernetes集群中，需要手动配置RBAC。这个过程既耗时又容易出错。这样，您可能无法对 Kubernetes 进行适当、细粒度的控制s簇。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://lh7-us.googleusercontent.com/feAGDnS_Hd8TDqQqg6PwHc3I8tkj0wCCtzNkbecBrOE0Q_rUz17bmDsXUPsxk-VmcOdE2MlSNPOKzZuyYH7BgFO16db5rqzx-9 ZUdp8EyV3XfZZ-d9x-Oq_Xb3FpI0IwA_sfbwYkwEP25Xg7qC1526I&#34; alt=&#34;RBAC 复杂性&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些是您选择手动管理多个集群时可能面临的一些主要挑战。当然，您不想花时间解决这些复杂问题，而是专注于真正重要的事情：高效部署和创新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;single-sign-on-sso-for-authentication&#34;&gt;用于身份验证的单点登录 (SSO)&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;SSO 通过利用联合身份的概念简化了身份验证过程。用户可以使用身份提供商提供的现有凭据来验证自己的身份。使用基于SSO的身份验证来访问所有Kubernetes集群。 SSO 将消除分发和管理多个 kubeconfig 文件来访问 Kubernetes 集群的需要，同时降低未经授权访问集群的风险。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://lh7-us.googleusercontent.com/NZzH1rxvSx5H_ViLdGsimzRtcKoOH_cC4r-TTuyHFQ8y2h6r2yIsePgDP2P521v8s3iXsL0iiZZP_Jiyd49qnAbBYRH89IZB bnuIs0rPOeG008UPnYS9qM-4xpLjbwkQLzCOu7795O00bSfkr6f_1rk&#34; alt=&#34;SSO 解决方案&#34;referrerpolicy=&#34;否-引用者&#34;&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们 Devtron 是一个用于管理 Kubernetes 环境的平台，提供 SSO 解决方案。它专为 Kubernetes 工作流程量身定制。具有 SSO 功能的 Devtron 让您只需单击一下即可轻松访问所有授权集群。您可以使用一组凭据（例如 Google、GitHub、GitLab 等）登录 Devtron，并在 Devtron 仪表板上访问所有 Kubernetes 集群。因此，不再需要处理复杂的 Kubeconfig 文件和静态令牌。 Devtron 多跑一英里；了解每个组织的偏好和需求可能是独一无二的。为此，Devtron 提供了七种 SSO 集成。使组织和用户能够选择与其现有基础设施和安全实践完美契合的 SSO。 Devtron 向大多数提供商提供 SSO，可用于身份验证。以下是其中一些。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;使用 &lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/google?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34; 配置 SSO &gt;Google&lt;/a&gt;、&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/github?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener &#34;&gt;GitHub&lt;/a&gt;，&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/gitlab?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitLab&lt;/a&gt;，&lt;a href=&#34;https://docs.devtron.ai/global-configurations /authorization/sso-login/microsoft?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Microsoft&lt;/a&gt;，&lt;a href=&#34;https://docs.devtron.ai/global-配置/授权/sso-login/ldap?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;LDAP&lt;/a&gt;，&lt;a href=&#34;https://docs.devtron.ai/global -configurations/authorization/sso-login/oidc?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OIDC&lt;/a&gt; 和 &lt;a href=&#34;https://docs.devtron.ai /global-configurations/authorization/sso-login/openshift?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenShift&lt;/a&gt;。您还可以集成其他身份和访问管理工具，例如&lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/oidc/okta?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Okta&lt;/a&gt;和 &lt;a href=&#34;https://docs.devtron.ai/global-configurations/authorization/sso-login/oidc/keycloak?ref=devtron.ai&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Keycloak&lt; /a&gt; 用于管理用户权限。&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://lh7-us.googleusercontent.com/c9U2JCwkaSqlKwM--UciXmNdbdNSJA_H0ZFHaxwd5N3GeCkL_3AMvm64POY27dbRLsyBr2k-TMB2W8rJfdQgLXOZomYUq6XCxqXBF 2eznnWMdQIGMaWdukDj4MdNxWFPJof4sOY0SWNHrcUMCTPV73U&#34; alt=&#34;SSO 登录服务&#34;referrerpolicy= &#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;使用 Devtron 的 SSO 登录服务&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;fine-grained-access-control-with-rbacauthorization&#34;&gt;使用 RBAC 进行细粒度访问控制 – 授权&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;SSO 可以为您解决身份验证问题。 RBAC 通过允许您定义精细权限并限制用户对集群资源的访问来解决授权方面的问题。在 Kubernetes 中，您可以定义角色、集群角色、角色绑定和集群角色绑定来控制命名空间和集群级别的访问。在设置手动配置时，您可能会遇到以下问题：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;容易出错且复杂性&lt;/strong&gt;：在 Kubernetes 中配置大量角色和权限使得准确配置它们变得困难。您可能会面临配置不一致的问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可扩展性&lt;/strong&gt;：要允许新团队成员访问您的集群，您需要重新配置 RBAC。想象一下为每个新成员和每个新集群执行此操作。手动配置 RBAC 会导致效率低下。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;安全问题&lt;/strong&gt;：手动配置 RBAC 时，可能会授予超出所需数量的用户访问权限。这些将允许用户访问生产数据库等敏感资源。现在认为您错误地授予了用户权限s 用于数据库，用户将对其发起删除查询。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://lh7-us.googleusercontent.com/nr_TrXWE05YLm2uN2d_j_PwwqUv1ZbMvSbxG3YYVW0j3USMMZN1x5DK2mtUYjKHAGPuPQ5GIj6Y538ToC9WVQ91_BXx- 37rs9KPUBkYCUbA9DJRBGBf_AiFit0c3GWz1-vre0ZAWNojcHke4Mc1-pO8&#34; alt=&#34;用户权限&#34;referrerpolicy= &#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Devtron 的用户权限&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Devtron 通过提供用于管理 RBAC 的图形用户界面 (GUI) 简化了此过程。 Devtron 中的 RBAC 是专门为 Kubernetes 的工作流程而设计的。它允许管理员管理对 Kubernetes 集群、环境以及集群中所有资源的访问。通过定义角色和限制其他用户的访问，确保最低权限的访问并创建安全的环境。 Devtron 允许您管理细粒度的访问控制，直至 Kubernetes 集群资源级别。您可以为用户授予对集群中特定资源的精确权限。 Devtron 中的用户访问管理功能允许您添加其他用户（例如支持工程师的用户），并在 Devtron 仪表板上管理他们的访问权限。您可以将用户的状态标记为“活动”、“非活动”或“保持活动直至”(TTL)。通过此功能，您可以控制其他合格用户访问您的 Devtron 仪表板的方式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://lh7-us.googleusercontent.com/9vjNxPObBhKc2THqdmBIStqNV6YA0kqx-OkdJE9sPg-twV4YSgadn_3dNPjBVF7xAMqv_qU1Ke8ZfEZwfTDWoc0CAumMRP-0o2r8 uRM1sJwcdAtj31lrdMwFAwU2LTe7ExT5PBgamsUgeCRMGcBGIeQ&#34; alt=&#34;基于时间的访问&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;使用 Devtron 进行基于时间的访问&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-power-of-sso-and-rbac-combined&#34;&gt;SSO 和 RBAC 结合的威力&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过结合 SSO 和 RBAC，组织可以为其 Kubernetes 环境实现强大且安全的访问控制策略。这种组合有几个好处：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;enhanced-security&#34;&gt;增强安全性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Kubernetes 环境的 SSO 允许您集中身份验证过程。允许您使用现有的凭据来访问所有授权的集群。 SSO 消除了由于某些配置错误或 kubeconfig 文件放错位置而导致集群受到损害的可能性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;RBAC 允许超级管理员为用户访问集群和资源定义细化权限。 RBAC 是对 Kubernetes 环境的一种授权，可限制未经授权的用户访问不允许的资源。这增加了 SSO 后的安全层。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;为 Kubernetes 环境手动设置 RBAC 和 SSO 可能会带来复杂性。要简化设置 SSO 和 RBAC 的过程，您可以查看 Devtron 等工具。在德夫创，您可以使用单个仪表板设置 SSO 和 RBAC，而且没有任何复杂性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;improved-manageability&#34;&gt;改进的可管理性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;通过 SSO，管理跨各种环境的多个集群变得更加简单。管理员可以集中管理集群的访问，而不是单独配置每个集群。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;借助 RBAC，管理员还可以优化 Kubernetes 环境以降低成本。使用 RBAC，他们可以限制用户访问和使用资源。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;scalability-and-flexibility&#34;&gt;可扩展性和灵活性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;SSO 和 RBAC 可以跟上 Kubernetes 环境的规模。 SSO 和 RBAC 提供了一个强大的框架来管理用户和 Kubernetes 集群的规模。随着用户数量的增加，管理员可以使用 Active Directory 对他们进行身份验证，并使用 RBAC 分配权限和定义角色。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Devtron 允许管理员将其现有的 Active Directory 与 Devtron SSO 映射。这样，他们就可以进行身份​​验证，并允许团队成员只需单击一下即可访问所有授权的微服务。除此之外，他们还可以为其应用预定义的角色和权限。所有这些都可以通过一个仪表板实现。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;conclusion&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在云原生计算的动态世界中，保护对 Kubernetes 集群的访问至关重要。通过利用 SSO 和 RBAC 的强大功能，组织可以简化访问管理、增强安全性并确保跨团队的高效协作。 Devtron 提供全面的解决方案，简化 SSO 和 RBAC 的实施，同时提供用于访问控制管理的集中仪表板。在 Kubernetes 环境中采用 SSO 和 RBAC 的简单性和安全性，让您的团队充满信心地进行创新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Devtron 的 RBAC 还可以扩展，可用于更安全和受控的 kubectl 访问。用户不必登录仪表板，可以使用 kubectl 命令，这些命令将通过 Devtron 代理，并为相应用户提供有限的访问权限和 api 令牌。要了解更多信息，请查看&lt;a href=&#34;https://devtron.ai/blog/control-and-secure-kubectl-access/&#34;&gt;这篇关于控制和安全 kubectl 访问的博客&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您有任何疑问，请随时&lt;a href=&#34;https://rebrand.ly/devtron-demo?ref=blog&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;与我们联系&lt;/a&gt;。加入我们积极发展的&lt;a href=&#34;https://rebrand.ly/Devtron-Discord?ref=devtron.ai&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;Discord 社区&lt;/一个&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer是-样式-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 15 Aug 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Interview with Kubestronaut in Orbit: David Pech】在轨道上采访 Kubetronaut：David Pech</title>
      <link>https://www.cncf.io/blog/2024/08/13/interview-with-kubestronaut-in-orbit-david-pech/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1650&#34; height=&#34;866&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7.jpg&#34; alt=&#34;Kubestronaut social card with David Pech&#34; class=&#34;wp-image-115808&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7.jpg 1650w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-300x157.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-1024x537.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-1552x816.jpg 1552w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-900x472.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-381x200.jpg 381w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-590x310.jpg 590w, https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-1180x620.jpg 1180w&#34; sizes=&#34;(max-width: 1650px) 100vw, 1650px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Get to know David&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;David has more than 20 years of experience in SW development and infrastructure and hands-on experience in dozens of technologies and is the only Kubestronaut who has ALL of the CNCF certifications. He takes a pragmatic approach to new technologies with a focus on finding the most reasonable and secure solutions. David is a big fan of CNCF tools such as ArgoCD, Traefik, Knative, Prometheus, CloudNativePG and many others, and likes to help other people understand and onboard cloud technologies, preferably in the Kubernetes ecosystem.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’d like to be a Kubestronaut like David,&amp;nbsp; get more details on the&lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt; CNCF Kubestronaut &lt;/a&gt;page.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;When did you get started with Kubernetes–what was your first project?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In 2021, I worked on a project where we initially considered K8s for re-platforming a large Czech and Slovak retail e-commerce site. When we realized how difficult it would be, we decided to use Docker Swarm instead. However, I became very interested in Kubernetes and have been learning about it ever since. In 2023, we understood k8s enough that we migrated that same retail e-commerce site to kubernetes.&amp;nbsp; We had migrated a dozen smaller projects before to build up gradually. Now we get the benefit of autoscaling, sidecars and other features of k8s. I’ll be telling the story of my kubernetes journey in a session at&amp;nbsp; &lt;a href=&#34;https://community.cncf.io/events/details/cncf-kcd-czech-slovak-presents-kcd-czech-slovak-2024/&#34;&gt;KCD Czech and Slovak 2024&lt;/a&gt;&amp;nbsp; if anyone is interested.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What are the primary CNCF projects you work on or use today?&amp;nbsp; What projects have you enjoyed the most in your career?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I am mostly a user with a few contributions in testing and enhancing docs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;I like Kubernetes a lot – for me, the declarative model changed enormously how I think about infrastructure. And it’s a very different experience compared for example with Terraform, where you just always have to “mangle” something manually behind the scenes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/argoproj/argo-cd&#34;&gt;ArgoCD&lt;/a&gt; – fabulous, this is level++ in the CI/CD world. Easy to use, extremely practical for most use cases.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg&#34;&gt;CloudNative PG&lt;/a&gt; (PostgreSQL operator) – “this is the way” for Postgres, this project is for me a synonym for innovation when there are multiple production-grade competitors just migrating “VM” approach for H-A.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/knative/docs&#34;&gt;Knative &lt;/a&gt;– as a developer, I just love the simplicity of AWS Lambdas, and this is quite close in k8s (especially with Karpenter for scaling nodes), but maintaining it (especially with Istio) is a chore.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/prometheus&#34;&gt;Prometheus&lt;/a&gt; (&amp;amp; friends) – for any dynamic environment – love at first sight.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How has CNCF helped you or influenced your career?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF helps me the most with orientation – with the famous &lt;a href=&#34;https://landscape.cncf.io/&#34;&gt;Landscape&lt;/a&gt; page. I know there is a lot of criticism on how many projects there are, but I would probably still prefer the CNCF project over “fill-in any large company” GitHub project, just for the licensing reason lately. Another influential part for me was that CNCF allowed me to network with a lot of people not just within the Kubernetes project, but in a wider ecosystem – so we can meet, share ideas, and help each other move forward with real business projects.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:36px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-default&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-style-border is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p class=&#34;is-style-spaced-uppercase&#34;&gt;Keep reading&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Zhilong Wang is one of the &lt;a href=&#34;https://www.cncf.io/blog/2024/06/20/kubestronaut-in-orbit-zhilong-wang/&#34;&gt;first Kubestronauts in China&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;This Kubestronaut loves &lt;a href=&#34;https://www.cncf.io/blog/2024/06/07/kubestronaut-in-orbit-khushboo-khatter/&#34;&gt;diving into the complexities of K8s&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;Would *you* like to be a Kubestronaut?&lt;/a&gt; Here’s what you need to do!!&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Register for &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt; today&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What motivated you to get all the kubernetes certs?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As Abdellfetah Sghiouar from Kubernetes Podcast said: certs are just like Pokemon cards, gotta catch them all, right? For me, the final cert is just nice-to-have garage decoration. Typically I have very limited time, and I can’t get much deeper into technologies than my current projects require at the time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But when I sign up for a certificate, it forces me to study to get a broader picture and open all the major chapters in the documentation. Getting the Istio (ICA) and Cilium (CCA) certification is a perfect example of this – I use these regularly, but while studying for the cert I learned many new features and also some insights on misconfigurations I encountered in the past. I will add that I pay for all the certs myself, so my motivation may be quite different from others.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How have the certs helped you in your career?&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Because I am currently looking for a new job, I have fresh insight on this. I would say that the CNCF certifications are generally quite new and not all companies understand their content. So for example, if my resume mentions the certs, companies still consider me much more a developer than an infrastructure person. Some front-runners understand CKAD, CKA, and maybe CKS.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I have seen some vague descriptions regarding CNCF technology requirements in many job ads. I’ve even seen the phrase “Kubernetes/OpenShift certificate eligible” but it is not clear what that means. Even with the expanded understanding of the need for CNCF technology, non-technical hiring managers might have problems understanding the certs. Also even if you explain the certs, they still give you test questions for the very same area (some even apologized that I would probably find the questions too basic – but still didn’t skip it).&amp;nbsp; But generally, I believe that companies will evolve in their understanding of the certs in the future.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What are some other books/sites/courses you recommend for people who want to work with k8s?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CKA and CKS simulators are good starting points. These are the top choices IMHO:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Managing Kubernetes: Operating Kubernetes Clusters in the Real World (Burns, Tracey)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Production Kubernetes: Building Successful Application Platforms (Rosso&amp;nbsp; ,Lander&amp;nbsp; , Brand, Harris)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kubernetes Best Practices: Blueprints for Building Successful Applications on Kubernetes (Burns, Brendan)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What do you do in your free time?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I run and spend time with my family – we have a very active 3-year-old daughter.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;As you know, Kubernetes is turning 10 this year, what are you most excited about for Kubernetes in the next 10 years?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I’m looking for Kubernetes “to be the default” as a platform choice. Also I would be excited if GitOps would become the de-facto standard on how to run workloads. If this happens, it would mean that companies would already have solutions for containers, packaging apps, externalizing configs, versioning and much more. Often CNCF-enabled startups tend&amp;nbsp; to misunderstand that the majority of workloads still do not operate inside k8s. There is no technical obstacle to moving them there, but it will take years for the companies to migrate. I would just consider it a success if like 80% of companies would consider k8s as the default runtime environment for their new projects in a few years. In 10 years K8s will become similar to Linux – an essential foundational piece, yet very boring and transparent to users.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What would you tell someone who is just starting their K8s certification journey? Any tips or tricks?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I would always advise pairing each certification with some hands-on project. Either you already have a project using the technology/concepts under certification, or just create a new branch migrating to the technology, or even start some small hobby project. When I have time for this, I get double or triple the know-how value except when I “just go over the examples in the docs”. Also, my method is typically starting from the project documentation – in some certs exams it’s useful to be familiar with the docs, but also you should understand the full breadth of the technology. (Although this might be a bit cumbersome if the exam is limited to only small parts). For my example&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;CKAD – start using any managed K8s service and migrate a basic web app there.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CKA – install a cluster on your own and migrate an app there.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CKS – secure your cluster and app.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are no shortcuts – having the cert without the know-how behind it is completely useless.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Today the Cloud native ecosystem is way more than Kubernetes. Do you plan to get other cloud native certifications from the CNCF ?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Except for the Kubestronaut (CKAD, CKA, CKS, KCSA, KCNA), I already have:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/pca/&#34;&gt;Prometheus Certified Associate (PCA)&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/ica/&#34;&gt;Istio Certified Associate (ICA)&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/cca/&#34;&gt;Cilium Certified Associate (CCA)&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/cgoa/&#34;&gt;Certified GitOps Associate (CGOA)&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/capa/&#34;&gt;Certified Argo Project Associate (CAPA)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Are there any more? 🙂&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How did you get involved with cloud native and Kubernetes in general?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I have vast experience working with monolithic legacy systems. If your server can’t keep up, you just buy a bigger one. Except it takes months to buy, deliver, install, migrate etc. So I was always fascinated with cloud concepts in general, when I discovered Google’s Borg and Docker Swarm later on, I had an almost child-like urge to try this in production. I’m a self-learner typically and was pioneering most of the tech stack we use myself, so little by little, project by project, it took me maybe 2-3 years to understand the “big picture”. Only after this journey, I found the confidence to offer a client solution based on Kubernetes (“kube-what?” is their typical reaction here in Czechia). Only after understanding the “big picture” I could clearly express business benefits for their practical use cases and not just repeat some leaflets. But except for the first spark of “childish” interest, I still explore and advocate for the CNCF ecosystem just because it’s currently the best of what’s available. There is (almost) no company at least not considering using some of the CNCF projects.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Any additional thoughts?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes is hard. It’s difficult to understand what CNCF projects do and their place in the ecosystem. Don’t give up just because it takes weeks or months to understand even the basics. Take your time and don’t look for shortcuts in learning the concepts. Give yourself enough time and know that the CNCF community is eager to help you. Your patience will be rewarded in decades to come because Kubernetes will be omnipresent.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’d like to be a Kubestronaut like David&amp;nbsp; get more details on the&lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt; CNCF Kubestronaut &lt;/a&gt;page.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1650”高度=“866”src=“https://www.cncf.io/ wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7.jpg&#34; alt=&#34;Kubestronaut 与 David Pech 的社交卡&#34; class=&#34;wp-image-115808&#34; srcset=&#34;https://www.cncf. io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7.jpg 1650w，https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7 -300x157.jpg 300w，https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-1024x537.jpg 1024w，https://www.cncf.io/wp -content/uploads/2024/08/Kubestronaut-in-Orbit-7-768x403.jpg 768w，https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7- 194x102.jpg 194w，https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-388x204.jpg 388w，https://www.cncf.io/wp-内容/uploads/2024/08/Kubestronaut-in-Orbit-7-776x408.jpg 776w，https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-1552x816 .jpg 1552w，https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-900x472.jpg 900w，https://www.cncf.io/wp-content /uploads/2024/08/Kubestronaut-in-Orbit-7-381x200.jpg 381w，https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-762x400。 jpg 762w，https://www.cncf.io/wp-content/uploads/2024/08/Kubestronaut-in-Orbit-7-590x310.jpg 590w，https://www.cncf.io/wp-content/ uploads/2024/08/Kubestronaut-in-Orbit-7-1180x620.jpg 1180w&#34;sizes=&#34;(max-width: 1650px) 100vw, 1650px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;了解大卫&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;David 在软件开发和基础设施方面拥有 20 多年的经验，以及数十种技术的实践经验，并且是唯一拥有所有 CNCF 认证的 Kubetronaut。他对新技术采取务实的态度，专注于寻找最合理、最安全的解决方案。 David 是 ArgoCD、Traefik、Knative、Prometheus、CloudNativePG 等 CNCF 工具的忠实粉丝，并且喜欢帮助其他人了解和使用云技术，最好是在 Kubernetes 生态系统中。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想成为像 David 这样的 Kubestronaut，请在&lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;CNCF Kubestronaut&lt;/a&gt;页面获取更多详细信息。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您什么时候开始使用 Kubernetes - 您的第一个项目是什么？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2021 年，我参与了一个项目，我们最初考虑使用 K8 来重新构建捷克和斯洛伐克大型零售电子商务网站的平台。当我们意识到这有多么困难时，我们决定使用 Docker Swarm。然而，我对 Kubernetes 非常感兴趣，并从那时起就一直在学习它。 2023 年，我们对 k8s 有了足够的了解，因此我们将同一个零售电子商务网站迁移到了 kubernetes。  之前我们已经迁移了十几个较小的项目来逐步建立起来。现在我们可以享受 k8s 的自动缩放、sidecars 和其他功能的好处。我将讲述我的 Kubernetes 的故事&lt;a href=&#34;https://community.cncf.io/events/details/cncf-kcd-czech-slovak-presents-kcd-czech-slovak-2024/&#34;&gt;KCD 捷克语和斯洛伐克语 2024 会议上的 es 旅程&lt;/a&gt; 如果有人感兴趣的话。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您现在从事或使用的主要 CNCF 项目是什么？  在您的职业生涯中，您最喜欢哪些项目？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我主要是一名用户，在测试和增强文档方面做出了一些贡献。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;我非常喜欢 Kubernetes - 对我来说，声明式模型极大地改变了我对基础设施的看法。与 Terraform 相比，这是一种非常不同的体验，在 Terraform 中，您总是必须在幕后手动“破坏”某些东西。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/argoproj/argo-cd&#34;&gt;ArgoCD&lt;/a&gt; – 太棒了，这是 CI/CD 世界的 ++ 级。易于使用，对于大多数用例来说都非常实用。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg&#34;&gt;CloudNative PG&lt;/a&gt;（PostgreSQL 操作员）——Postgres 的“这就是方式”，这个项目适合我当多个生产级竞争对手只是将“VM”方法迁移到 H-A 时，它就是创新的代名词。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/knative/docs&#34;&gt;Knative&lt;/a&gt;——作为一名开发人员，我只是喜欢 AWS Lambda 的简单性，这在 k8s 中非常接近（尤其是在使用Karpenter 用于扩展节点），但维护它（尤其是使用 Istio）是一件苦差事。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/prometheus&#34;&gt;Prometheus&lt;/a&gt;（及朋友）——适用于任何动态环境——一见钟情。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;CNCF 如何帮助您或影响您的职业生涯？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF 在方向方面对我帮助最大 - 著名的 &lt;a href=&#34;https://landscape.cncf.io/&#34;&gt;Landscape&lt;/a&gt; 页面。我知道有很多关于项目数量的批评，但我可能仍然更喜欢 CNCF 项目，而不是“填写任何大公司”的 GitHub 项目，只是因为最近的许可原因。对我来说另一个有影响力的部分是 CNCF 让我不仅可以在 Kubernetes 项目内，而且可以在更广泛的生态系统中与很多人建立联系，这样我们就可以见面、分享想法并帮助彼此推进实际的业务项目。&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:36px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-default&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-style-border is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p class=&#34;is-style-spaced-uppercase&#34;&gt;继续阅读&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;王志龙是&lt;a href=&#34;https://www.cncf.io/blog/2024/06/20/kubestronaut-in-orbit-zhilong-wang/&#34;&gt;中国首批 Kubetronaut 之一&lt;/一个&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;这位 Kubetronaut 喜欢&lt;a href=&#34;https://www.cncf.io/blog/2024/06/07/kubestronaut-in-orbit-khushboo-khatter/&#34;&gt;深入研究 K8 的复杂性&lt;/a &gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;*您*想成为一名 Kubestronaut 吗？&lt;/a&gt; 这是您想要的你需要做！！&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;立即报名参加&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;是什么促使您获得所有 Kubernetes 证书？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;正如 Kubernetes 播客的 Abdellfetah Sghiouar 所说：证书就像 Pokemon 卡牌一样，必须抓住它们，对吧？对我来说，最终的证书只是车库装饰。通常，我的时间非常有限，而且我无法比当前项目当时所需的技术更深入地了解技术。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是当我注册证书时，它迫使我学习以获得更广阔的视野并打开文档中的所有主要章节。获得 Istio (ICA) 和 Cilium (CCA) 认证就是一个完美的例子——我经常使用这些认证，但是在学习证书的过程中，我学到了许多新功能以及对我过去遇到的错误配置的一些见解。我要补充的是，我自己支付了所有证书的费用，所以我的动机可能与其他人有很大不同。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;这些证书对您的职业生涯有何帮助？ &lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;因为我目前正在寻找新工作，所以我对此有了新的见解。我想说的是，CNCF 认证通常都很新，并非所有公司都了解其内容。例如，如果我的简历提到了证书，公司仍然认为我更像是一名开发人员，而不是基础设施人员。一些领先者了解 CKAD、CKA，也许还有 CKS。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我在很多招聘广告中看到过一些关于 CNCF 技术要求的模糊描述。我什至看到过“Kubernetes/OpenShift 证书合格”这个短语，但不清楚这是什么意思。即使对 CNCF 技术的需求有了更深入的了解，非技术招聘经理也可能在理解证书方面遇到问题。此外，即使你解释了证书，他们仍然会给你同一领域的测试问题（有些人甚至道歉说我可能会发现这些问题太基础 - 但仍然没有跳过它）。  但总的来说，我相信未来公司对证书的理解将会不断发展。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您为想要使用 k8s 的人推荐了哪些其他书籍/网站/课程？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CKA 和 CKS 模拟器是很好的起点。恕我直言，这些是最佳选择：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;管理 Kubernetes：在现实世界中操作 Kubernetes 集群（Burns、Tracey）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;生产 Kubernetes：构建成功的应用平台（Rosso、Lander、Brand、Harris）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kubernetes 最佳实践：在 Kubernetes 上构建成功应用程序的蓝图（Burns、Brendan）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;你空闲时间做什么？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我跑步并与家人共度时光 - 我们有一个非常活跃的 3 岁女儿。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;正如您所知，Kubernetes 今年已满 10 岁了，您对 Kubernetes 未来 10 年最兴奋的是什么？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我正在寻找 Kubernetes “成为默认”的平台选择。此外，如果 GitOps 成为如何运行工作负载的事实上的标准，我也会很兴奋。如果发生这种情况，则意味着公司已经拥有针对容器、打包应用程序、外部化配置、版本控制等的解决方案。支持 CNCF 的初创公司往往会误解大多数工作负载仍然不在 k8s 内运行。将它们迁移到那里不存在技术障碍，但这些公司需要数年时间才能迁移。如果几年后 80% 的公司将 k8s 视为其新项目的默认运行时环境，我会认为这是成功的。十年后，K8s 将变得与 Linux 类似——一个重要的基础部分，但对用户来说非常无聊和透明。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您会对刚刚开始 K8s 认证之旅的人说些什么？有什么提示或技巧吗？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我总是建议将每个认证与一些实践项目结合起来。您要么已经有一个使用经过认证的技术/概念的项目，要么只是创建一个迁移到该技术的新分支，甚至开始一些小型的业余爱好项目。当我有时间这样做时，我会获得双倍或三倍的专业知识价值，除非我“只是浏览文档中的示例”。另外，我的方法通常是从项目文档开始——在某些证书考试中，熟悉文档很有用，但您也应该了解该技术的全部内容。 （尽管如果考试仅限于小部分，这可能会有点麻烦）。以我为例&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;CKAD – 开始使用任何托管 K8s 服务并在那里迁移基本的 Web 应用程序。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CKA – 自行安装集群并在那里迁移应用程序。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CKS – 保护您的集群和应用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;没有捷径——拥有证书而没有背后的专业知识是完全没有用的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;如今，云原生生态系统的意义远不止 Kubernetes。您是否计划获得 CNCF 的其他云原生认证？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了 Kubetronaut（CKAD、CKA、CKS、KCSA、KCNA）之外，我已经拥有：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/pca/&#34;&gt;普罗米修斯认证助理 (PCA)&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/ica/&#34;&gt;Istio 认证工程师 (ICA)&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/cca/&#34;&gt;Cilium 认证助理 (CCA)&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/cgoa/&#34;&gt;GitOps 认证助理 (CGOA)&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/capa/&#34;&gt;Argo 项目认证助理 (CAPA)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;还有吗？ 🙂&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您是如何涉足云原生和 Kubernetes 的？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我在使用单一遗留系统方面拥有丰富的经验。如果你的服务器跟不上，你就买一台更大的。除了购买、交付、安装、迁移等需要几个月的时间。所以我总是对云概念很着迷，当我后来发现 Google 的 Borg 和 Docker Swarm 时，我几乎像孩子一样渴望在生产中尝试这一点。我通常是一个自学者，并且是我们自己使用的大部分技术堆栈的先驱，所以一点一点地，一个项目一个项目地，我可能花了 2-3 年的时间来理解“大局”。只有在经历了这次旅程之后，我才有信心提供基于 Kubernetes 的客户端解决方案（“kube-what？”是捷克人的典型反应）。只有在了解了“大局”之后，我才能清楚地表达其实际用例的商业利益，而不仅仅是重复一些传单。但除了最初的“幼稚”兴趣之外，我仍然探索和倡导 CNCF 生态系统，因为它是目前可用的最好的。 （几乎）没有一家公司至少不考虑使用某些 CNCF 项目。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;还有其他想法吗？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 很难。很难理解 CNCF 项目的用途及其在生态系统中的地位。不要仅仅因为即使是基础知识也需要数周或数月的时间才能理解而放弃。慢慢来，不要寻找学习概念的捷径。给自己足够的时间，并知道 CNCF 社区渴望为您提供帮助。您的耐心将在未来几十年内得到回报，因为 Kubernetes 将无所不在。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想成为像 David 这样的 Kubestronaut，请访问&lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;CNCF Kubestronaut&lt;/a&gt;页面获取更多详细信息。 &lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 12 Aug 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Installing multiple helm charts in one go [Approach 3 – using simple bash utility]】一次性安装多个 Helm Chart [方法 3 – 使用简单的 bash 实用程序]</title>
      <link>https://www.cncf.io/blog/2024/08/06/installing-multiple-helm-charts-in-one-go-approach-3-using-simple-bash-utility/</link>
      <description>【&lt;p&gt;&lt;em&gt; Community post originally published on &lt;a href=&#34;https://dev.to/aws-builders/installing-multiple-helm-charts-in-one-go-approach-3-using-simple-bash-utility-2795&#34;&gt;Dev.to&lt;/a&gt; by Sunny Bhambhani&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this article, we will be talking about Approach 3 i.e. how to get multiple helm charts installed using a simple bash utility.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you haven’t read the previous article where I discussed other approaches, feel free to read it over.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Ref:&amp;nbsp;&lt;a href=&#34;https://dev.to/aws-builders/installing-multiple-helm-charts-in-one-go-approach-1-5d1p&#34;&gt;Installing multiple helm charts in one go [Approach 1 – using parent/child charts]&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Ref:&amp;nbsp;&lt;a href=&#34;https://dev.to/aws-builders/installing-multiple-helm-charts-in-one-go-approach-2-using-helmfile-4e4h&#34;&gt;Installing multiple helm charts in one go [Approach 2 – using helmfile]&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Motive&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Why I thought of a simple bash utility?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;In some of the air-gapped environments it is sometimes a bit difficult to use the tools/utilities available because moving things inside an air-gapped environment is a challenge.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Some of the environments are so secure that one may need to follow a whole process of getting all the security clearances and approval before using a tool/utility, which altogether is a nightmare.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;I chose bash, the reason being it is pretty common among engineers and it is easily understandable.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The source code can be found here:&amp;nbsp;&lt;a href=&#34;https://github.com/sunnybhambhani/helmister&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://github.com/sunnybhambhani/helmister&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;You can copy it, and tweak it based on your requirements.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;PS: I chose a name for this utility as well&amp;nbsp;&lt;code&gt;helmister&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;helm-minister&lt;/code&gt;&amp;nbsp;but you can call it whatever you want 🙂&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;A running Kubernetes cluster with proper permissions, here I have used minikube.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;kubectl&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;helm&lt;/code&gt;&amp;nbsp;installed on your machine to interact with the Kubernetes cluster.&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Ref:&amp;nbsp;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://kubernetes.io/docs/tasks/tools/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Ref:&amp;nbsp;&lt;a href=&#34;https://helm.sh/docs/intro/install/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://helm.sh/docs/intro/install/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A clone of helmister repository.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;yq(required) and cowsay(optional) packages installed on your machine.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:36px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-default&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-style-border is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p class=&#34;is-style-spaced-uppercase&#34;&gt;Keep reading&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Verify the &lt;a href=&#34;https://www.cncf.io/blog/2022/11/24/verify-the-integrity-of-the-helm-charts-stored-in-oci-compliant-registries-as-oci-artifacts/&#34;&gt;integrity of Helm Charts&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use Helm Charts for &lt;a href=&#34;https://www.cncf.io/blog/2021/03/23/quick-application-deployments-on-microk8s-using-helm-charts/&#34;&gt;quick app deployment on MicroK8s&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/software-conformance/&#34;&gt;Get certified&lt;/a&gt; in Kubernetes&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Register for &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt; today&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Helmister&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;This is a small bash utility that can help to install and uninstall multiple helm charts in one go. The idea is inspired by&amp;nbsp;&lt;code&gt;helmfile&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Its usage is quite simple, just run the utility followed by the option like install or uninstall i.e.&amp;nbsp;&lt;code&gt;./helmister [install/uninstall]&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Under the hood, it calls&amp;nbsp;&lt;code&gt;helm&lt;/code&gt;&amp;nbsp;binary. Therefore it is kind of a wrapper around&amp;nbsp;&lt;code&gt;helm&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;It consumes a&amp;nbsp;&lt;code&gt;config.yaml&lt;/code&gt;&amp;nbsp;file which contains all the necessary details about the releases, and common parameters.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;This supports both&amp;nbsp;&lt;code&gt;oci://&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;https://&lt;/code&gt;&amp;nbsp;helm registries.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;PS: In the future, I am planning to add some more options/functionalities to this.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Directory structure&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;.&#xA;├── config.yaml&#xA;├── helmister&#xA;├── logs&#xA;│   ├── archive&#xA;│   │   └── helmister_20240227_170201.tar.gz&#xA;│   └── helmister.log&#xA;├── README.md&#xA;└── values&#xA;    ├── argo-cd.yaml&#xA;    └── nginx-values.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;em&gt;helmister&lt;/em&gt;, this is the script written in bash you can just cat and see what all things it contains.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;config.yaml&lt;/em&gt;, this is the main configuration file or you can call the state file which contains the list of all releases you want to install in a cluster, plus it also contains some additional key:value pairs that are generic and common across all the releases. I first kept this configuration file in csv format, but later decided to convert it to yaml because it is more readable.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;logs&lt;/em&gt;, this is a directory that holds the logs of this utility, it contains the information about the execution of the last iteration, plus any archived/past logs (if required for reference).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;README.md&lt;/em&gt;, contains bit of a documentation about this utility, and what options are present.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;values&lt;/em&gt;, this is the directory where all the values files are placed (it can be anywhere in your system but for simplicity, I have placed them in the same directory).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Now let’s talk about&amp;nbsp;&lt;code&gt;config.yaml&lt;/code&gt;&amp;nbsp;which is the main ingredient.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;config.yaml&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;dry_run: false&#xA;create_namespace: true&#xA;wait: false&#xA;timeout: false # If true, defaults to 20 mins&#xA;charts:&#xA;  - release_name: nginx&#xA;    chart_name: nginx&#xA;    chart_repo: oci://registry-1.docker.io/bitnamicharts&#xA;    values_file: values/nginx-values.yaml&#xA;  - release_name: argocd&#xA;    chart_name: argo-cd&#xA;    chart_repo: https://argoproj.github.io/argo-helm&#xA;    values_file: values/argo-cd.yaml&#xA;    version: 6.4.0&#xA;    namespace: argo-cd&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;The initial key:value pairs are common across all the releases.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;charts&lt;/em&gt;, is an array that contains a list of what all releases need to be installed in a Kubernetes cluster.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;dry_run&lt;/em&gt;, it is a boolean [true or false], and if true, none of the Kubernetes resources will be created it will just do a dry_run.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;create_namespace&lt;/em&gt;, it is a boolean [true or false], and if true it will automatically create a namespace for the release specified in the charts array.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;wait&lt;/em&gt;, it is a boolean [true or false], and if true it acts similar to&amp;nbsp;&lt;code&gt;helm --wait&lt;/code&gt;&amp;nbsp;wherein the shell will be kept occupied until all the Kubernetes resources are created.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;timeout&lt;/em&gt;, it is a boolean [true or false], and if true it acts similar to&amp;nbsp;&lt;code&gt;helm --timeout=20m&lt;/code&gt;&amp;nbsp;i.e. if all the resources are not created within 20 mins the execution will fail. By default, I have kept the timeout as 20 minutes which is more than enough.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;charts&lt;/em&gt;, it is an array that contains details around individual releases. Except for version and namespace all the key:value pairs are mandatory.&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;em&gt;release_name&lt;/em&gt;, this is the name of the release.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;chart_name&lt;/em&gt;, this is the name of the chart that needs to be installed.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;chart_repo&lt;/em&gt;, this is the helm registry where the chart is located. It can be any&amp;nbsp;&lt;code&gt;oci://&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;https://&lt;/code&gt;&amp;nbsp;registry.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;values_file&lt;/em&gt;, which contains the path of the values file for individual releases.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;version&lt;/em&gt;, this is the version of the chart that needs to be installed. This is optional and if not provided, It will consider the&amp;nbsp;&lt;code&gt;latest&lt;/code&gt;&amp;nbsp;chart version.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;namespace&lt;/em&gt;, this is where the chart will be installed. This is optional as well and if not provided it will be installed in the&amp;nbsp;&lt;code&gt;default&lt;/code&gt;&amp;nbsp;namespace.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Let’s see this in action&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;I will use the same&amp;nbsp;&lt;code&gt;config.yaml&lt;/code&gt;&amp;nbsp;which will install one helm release from an&amp;nbsp;&lt;code&gt;oci://&lt;/code&gt;&amp;nbsp;registry in&amp;nbsp;&lt;code&gt;default&lt;/code&gt;&amp;nbsp;namespace (since I haven’t specified any namespace for that release) and another one from&amp;nbsp;&lt;code&gt;https://&lt;/code&gt;&amp;nbsp;registry in&amp;nbsp;&lt;code&gt;argo-cd&lt;/code&gt;&amp;nbsp;namespace. Note the version as well for nginx, there as well I haven’t specified any version, it will pick the latest available one automatically.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;This is my cluster’s current status.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ k get ns&#xA;NAME              STATUS   AGE&#xA;default           Active   28s&#xA;kube-node-lease   Active   28s&#xA;kube-public       Active   29s&#xA;kube-system       Active   29s&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ helm list -A&#xA;NAME    NAMESPACE       REVISION        UPDATED STATUS  CHART   APP VERSION&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;sql&#34; class=&#34;language-sql&#34;&gt;$ ./helmister install&#xA;[2024-07-23 15:02:47] [INFO] Using file: config.yaml&#xA; ____________________________&#xA;&amp;lt; Helmister, Install charts! &amp;gt;&#xA; ----------------------------&#xA;   \&#xA;    \&#xA;        .--.&#xA;       |o_o |&#xA;       |:_/ |&#xA;      //   \ \&#xA;     (|     | )&#xA;    /&#39;\_   _/`\&#xA;    \___)=(___/&#xA;&#xA;[2024-07-23 15:02:47] [INFO] Generic/common values based on config.yaml file&#xA;[2024-07-23 15:02:48] [INFO] Dry Run: false&#xA;[2024-07-23 15:02:48] [INFO] Create Namespace: true&#xA;[2024-07-23 15:02:48] [INFO] Wait: false&#xA;[2024-07-23 15:02:48] [INFO] Timeout: false&#xA;[2024-07-23 15:02:48] [INFO] ****************************&#xA;[2024-07-23 15:02:48] [INFO] Chart specific values based on config.yaml file&#xA;[2024-07-23 15:02:48] [INFO] Release Name: nginx&#xA;[2024-07-23 15:02:48] [INFO] Chart Name: nginx&#xA;[2024-07-23 15:02:48] [INFO] Chart Repo: oci://registry-1.docker.io/bitnamicharts&#xA;[2024-07-23 15:02:48] [INFO] Values File: values/nginx-values.yaml&#xA;[2024-07-23 15:02:48] [INFO] Version: null&#xA;[2024-07-23 15:02:48] [INFO] Namespace: null&#xA;[2024-07-23 15:02:48] [INFO] ****************************&#xA;[2024-07-23 15:02:48] [INFO] Installing nginx with release name nginx from oci://registry-1.docker.io/bitnamicharts with version null using values file: values/nginx-values.yaml in default namespace&#xA;...&#xA;...&#xA;OUTPUT TRIMMED&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Actual stdout output can be&amp;nbsp;&lt;a href=&#34;https://github.com/sunnybhambhani/helmister/blob/main/artifacts/sample_logs/during_installation_on_stdout.log&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;found here&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Here you will see that it provides all the minute details of what exactly it is doing.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;For example: Generic values&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Here I have marked create_namespace as true because I don’t already have argo-cd namespace wherein I want to install argocd release.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;sql&#34; class=&#34;language-sql&#34;&gt;[2024-07-23 15:02:47] [INFO] Generic/common values based on config.yaml file&#xA;[2024-07-23 15:02:48] [INFO] Dry Run: false&#xA;[2024-07-23 15:02:48] [INFO] Create Namespace: true&#xA;[2024-07-23 15:02:48] [INFO] Wait: false&#xA;[2024-07-23 15:02:48] [INFO] Timeout: false&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Next, you will see, chart/release specific values of all the items in charts array one by one:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;sql&#34; class=&#34;language-sql&#34;&gt;[2024-07-23 15:03:31] [INFO] Chart specific values based on config.yaml file&#xA;[2024-07-23 15:03:31] [INFO] Release Name: argocd&#xA;[2024-07-23 15:03:31] [INFO] Chart Name: argo-cd&#xA;[2024-07-23 15:03:31] [INFO] Chart Repo: https://argoproj.github.io/argo-helm&#xA;[2024-07-23 15:03:31] [INFO] Values File: values/argo-cd.yaml&#xA;[2024-07-23 15:03:31] [INFO] Version: 6.4.0&#xA;[2024-07-23 15:03:31] [INFO] Namespace: argo-cd&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Here I have explicitly added an additional check that will check if the pods are up and healthy (this is just specific to pods it won’t consider any other k8s objects).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;It will continuously check for next 20mins and will check every 5 secs. If the pods are still in non-running state it will terminate the process.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;sql&#34; class=&#34;language-sql&#34;&gt;[2024-07-23 15:03:47] [WARN] Pods for release argocd are not yet in Running state, checking again in 5 seconds&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Once all the pods are in running state and it has deployed all the releases it will show a successful message.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;sql&#34; class=&#34;language-sql&#34;&gt;[2024-07-23 15:05:20] [INFO] All actions completed successfully&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Once this is done, if required you can see the logs as well from the logs directory. A sample can be&amp;nbsp;&lt;a href=&#34;https://github.com/sunnybhambhani/helmister/blob/main/artifacts/sample_logs/actual_log_file.log&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;found here&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;And here is my cluster’s current status now:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ helm list -A&#xA;NAME    NAMESPACE       REVISION        UPDATED                                 STATUS          CHART           APP VERSION&#xA;argocd  argo-cd         1               2024-07-23 15:03:34.46715742 +0530 IST  deployed        argo-cd-6.4.0   v2.10.1&#xA;nginx   default         1               2024-07-23 15:02:53.590367521 +0530 IST deployed        nginx-18.1.5    1.27.0&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ k get ns&#xA;NAME              STATUS   AGE&#xA;argo-cd           Active   58m&#xA;default           Active   62m&#xA;kube-node-lease   Active   62m&#xA;kube-public       Active   62m&#xA;kube-system       Active   62m&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ k get pods -n argo-cd&#xA;NAME                                                READY   STATUS    RESTARTS   AGE&#xA;argocd-application-controller-0                     1/1     Running   0          58m&#xA;argocd-applicationset-controller-68cd75bc89-d4q8x   1/1     Running   0          58m&#xA;argocd-dex-server-84b5bbdcbf-c4qv2                  1/1     Running   0          58m&#xA;argocd-notifications-controller-7bc55c495d-xz6gt    1/1     Running   0          58m&#xA;argocd-redis-5d5cdcfd54-2rx26                       1/1     Running   0          58m&#xA;argocd-repo-server-756ff4cd7d-rpvh7                 1/1     Running   0          58m&#xA;argocd-server-7587d49b7b-9h47l                      1/1     Running   0          58m&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ k get pods -n default&#xA;NAME                     READY   STATUS    RESTARTS   AGE&#xA;nginx-569b6bc698-48qqt   1/1     Running   0          59m&#xA;nginx-569b6bc698-9qzpv   1/1     Running   0          59m&#xA;nginx-569b6bc698-wflrj   1/1     Running   0          59m&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;If you want to uninstall it, simply do:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ ./helmister uninstall&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;It will get everything cleaned for all the releases that are specified in&amp;nbsp;&lt;code&gt;config.yaml&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The sample log can be&amp;nbsp;&lt;a href=&#34;https://github.com/sunnybhambhani/helmister/blob/main/artifacts/sample_logs/during_uninstallation_on_stdout.log&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;found here&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Feel free to use it, and tweak it based on your requirements.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I will soon add some more functionalities to it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Happy learning!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;References:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Google/Stackoverflow/Linux man pages/etc&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt; 社区帖子最初发布于 &lt;a href=&#34;https://dev.to/aws-builders/installing-multiple-helm-charts-in-one-go-approach-3-using-simple- bash-utility-2795&#34;&gt;Dev.to&lt;/a&gt; 作者：Sunny Bhambhani&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在本文中，我们将讨论方法 3，即如何使用简单的 bash 实用程序安装多个 Helm Chart。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您还没有阅读过我讨论其他方法的上一篇文章，请随时阅读。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;参考：&lt;a href=&#34;https://dev.to/aws-builders/installing-multiple-helm-charts-in-one-go-approach-1-5d1p&#34;&gt;一次性安装多个 Helm Chart [方法 1 – 使用父/子图表]&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;参考：&lt;a href=&#34;https://dev.to/aws-builders/installing-multiple-helm-charts-in-one-go-approach-2-using-helmfile-4e4h&#34;&gt;安装多个 helm一次性绘制图表[方法 2 – 使用 helmfile]&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;动机&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为什么我想到了一个简单的 bash 实用程序？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;在某些气隙环境中，使用可用的工具/实用程序有时会有点困难，因为在气隙环境中移动物体是一项挑战。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;某些环境非常安全，以至于人们可能需要在使用工具/实用程序之前遵循获得所有安全许可和批准的整个过程，这完全是一场噩梦。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;我选择了 bash，因为它在工程师中很常见，而且很容易理解。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;源代码可在此处找到：&lt;a href=&#34;https://github.com/sunnybhambhani/helmister&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://github.com/sunnybhambhani/赫尔米斯特&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;您可以复制它，并根据您的要求进行调整。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;PS：我还为该实用程序选择了一个名称 &lt;code&gt;helmister&lt;/code&gt; 或 &lt;code&gt;helm-minister&lt;/code&gt;，但您可以随意命名它 🙂&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;先决条件&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;一个正在运行的具有适当权限的 Kubernetes 集群，这里我使用了 minikube。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;kubectl&lt;/code&gt; 和 &lt;code&gt;helm&lt;/code&gt; 安装在您的计算机上，用于与 Kubernetes 集群交互。&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;参考：&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://kubernetes.io/docs/tasks/tools /&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;参考：&lt;a href=&#34;https://helm.sh/docs/intro/install/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://helm.sh/docs/intro/install /&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;helmister 存储库的克隆。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;您的计算机上安装了 yq（必需）和owsay（可选）软件包。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:36px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-default&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-style-border is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p class=&#34;is-style-spaced-uppercase&#34;&gt;继续阅读&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;验证&lt;a href=&#34;https://www.cncf.io/blog/2022/11/24/verify-the-integrity-of-the-helm-charts-stored-in-oci-company- registries-as-oci-artifacts/&#34;&gt;Helm Charts 的完整性&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将 Helm Chart 用于&lt;a href=&#34;https://www.cncf.io/blog/2021/03/23/quick-application-deployments-on-microk8s-using-helm-charts/&#34;&gt;快应用在MicroK8s上部署&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/software-conformance/&#34;&gt;获得 Kubernetes 认证&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;立即报名参加&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;赫尔米斯特&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;这是一个小型 bash 实用程序，可以帮助一次性安装和卸载多个 Helm Chart。这个想法的灵感来自&lt;code&gt;helmfile&lt;/code&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;其用法非常简单，只需运行该实用程序，然后选择安装或卸载等选项，即&lt;code&gt;./helmister [安装/卸载]&lt;/code&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在底层，它调用 &lt;code&gt;helm&lt;/code&gt; 二进制文件。因此，它是 &lt;code&gt;helm&lt;/code&gt; 的包装器。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;它使用一个 &lt;code&gt;config.yaml&lt;/code&gt; 文件，其中包含有关版本和常用参数的所有必要详细信息。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;这支持 &lt;code&gt;oci://&lt;/code&gt; 和 &lt;code&gt;https://&lt;/code&gt; helm 注册表。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;PS：将来，我计划为此添加更多选项/功能。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;目录结构&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;。&#xA;├── 配置.yaml&#xA;├── 赫尔米斯特&#xA;├── 日志&#xA;│ ├── 存档&#xA;│ │ └── helmister_20240227_170201.tar.gz&#xA;│ └── helmister.log&#xA;├── 自述文件.md&#xA;└── 价值观&#xA;    ├── argo-cd.yaml&#xA;    └── nginx-values.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;em&gt;helmister&lt;/em&gt;，这是用 bash 编写的脚本，您可以直接查看它包含的所有内容。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;config.yaml&lt;/em&gt;，这是主配置文件，或者您可以调用状态文件，其中包含要在集群中安装的所有版本的列表，此外它还包含一些附加密钥：所有版本中通用且通用的值对。我首先将此配置文件保留为 csv 格式，但后来决定将其转换为 yaml，因为它更具可读性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;logs&lt;/em&gt;，这是保存该实用程序日志的目录，它包含有关上次迭代执行的信息，以及任何存档/过去的日志（如果需要参考）。&lt; /里&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;README.md&lt;/em&gt;，包含有关此实用程序的一些文档以及存在的选项。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;values&lt;/em&gt;，这是放置所有值文件的目录（可以是您的系统，但为了简单起见，我将它们放在同一目录中）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;现在我们来谈谈主要成分&lt;code&gt;config.yaml&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;config.yaml&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;javascript&#34; class=&#34;language-javascript&#34;&gt;dry_run: false&#xA;创建命名空间：true&#xA;等待：假&#xA;timeout: false # 如果为 true，则默认为 20 分钟&#xA;图表：&#xA;  - 发布名称：nginx&#xA;    图表名称：nginx&#xA;    Chart_repo：oci://registry-1.docker.io/bitnamicharts&#xA;    值文件：值/nginx-values.yaml&#xA;  - 发布名称：argocd&#xA;    图表名称： argo-cd&#xA;    Chart_repo：https://argoproj.github.io/argo-helm&#xA;    值文件：值/argo-cd.yaml&#xA;    版本：6.4.0&#xA;    命名空间：argo-cd&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;初始键:值对在所有版本中都是通用的。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;charts&lt;/em&gt;是一个数组，其中包含 Kubernetes 集群中需要安装的所有版本的列表。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;dry_run&lt;/em&gt;，它是一个布尔值 [true 或 false]，如果为 true，则不会创建任何 Kubernetes 资源，它只会执行 dry_run。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;create_namespace&lt;/em&gt;，它是一个布尔值[true或false]，如果为true，它将自动为图表数组中指定的版本创建命名空间。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;wait&lt;/em&gt;，它是一个布尔值 [true 或 false]，如果为 true，则其行为类似于 &lt;code&gt;helm --wait&lt;/code&gt;，其中 shell 将保持占用状态，直到所有Kubernetes 资源已创建。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;timeout&lt;/em&gt;，它是一个布尔值 [true 或 false]，如果为 true，则其行为类似于 &lt;code&gt;helm --timeout=20m&lt;/code&gt;，即如果未创建所有资源20分钟内执行将失败。默认情况下，我将超时设置为 20 分钟，这已经足够了。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;图表&lt;/em&gt;，它是一个包含各个版本详细信息的数组。除了版本和命名空间之外，所有键：值对都是必需的。&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;em&gt;release_name&lt;/em&gt;，这是版本的名称。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;chart_name&lt;/em&gt;，这是需要安装的图表的名称。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;chart_repo&lt;/em&gt;，这是图表所在的 helm 注册表。它可以是任何 &lt;code&gt;oci://&lt;/code&gt; 或 &lt;code&gt;https://&lt;/code&gt; 注册表。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;values_file&lt;/em&gt;，其中包含各个版本的值文件的路径。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;版本&lt;/em&gt;，这是需要安装的图表版本。这是可选的，如果未提供，它将考虑&lt;code&gt;最新&lt;/code&gt;图表版本。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;命名空间&lt;/em&gt;，这是图表安装的位置。这也是可选的，如果未提供，它将安装在&lt;code&gt;default&lt;/code&gt;命名空间中。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;让我们看看实际效果&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;我将使用相同的 &lt;code&gt;config.yaml&lt;/code&gt; 来安装一个 helm 版本来自 &lt;code&gt;default&lt;/code&gt; 命名空间中的 &lt;code&gt;oci://&lt;/code&gt; 注册表（因为我没有为该版本指定任何命名空间），另一个则来自 &lt;code&gt;https： //&lt;/code&gt; &lt;code&gt;argo-cd&lt;/code&gt; 命名空间中的注册表。还要注意 nginx 的版本，我也没有指定任何版本，它会自动选择最新的可用版本。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;这是我的集群的当前状态。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ k 获取 ns&#xA;姓名 身份 年龄&#xA;默认活动 28 秒&#xA;kube-node-lease 活跃 28s&#xA;kube-public 活跃 29s&#xA;kube-system 活跃 29s&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ helm list -A&#xA;名称 命名空间 修订版本 更新的状态图表 应用程序版本&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;sql&#34; class=&#34;language-sql&#34;&gt;$ ./helmister install&#xA;[2024-07-23 15:02:47] [INFO] 使用文件：config.yaml&#xA; ____________________________&#xA;&lt;赫尔米斯特，安装图表！ &gt;&#xA; ----------------------------&#xA;   \&#xA;    \&#xA;        .--.&#xA;       |o_o |&#xA;       |:_/ |&#xA;      // \ \&#xA;     (||)&#xA;    /&#39;\_ _/`\&#xA;    \___)=(___/&#xA;&#xA;[2024-07-23 15:02:47] [INFO] 基于 config.yaml 文件的通用/通用值&#xA;[2024-07-23 15:02:48] [INFO] 试运行： false&#xA;[2024-07-23 15:02:48] [INFO] 创建命名空间：true&#xA;[2024-07-23 15:02:48] [INFO] 等待：错误&#xA;[2024-07-23 15:02:48] [INFO] 超时： false&#xA;[2024-07-23 15:02:48] [信息]****************************&#xA;[2024-07-23 15:02:48] [INFO] 基于 config.yaml 文件绘制特定值的图表&#xA;[2024-07-23 15:02:48] [INFO] 版本名称：nginx&#xA;[2024-07-23 15:02:48] [INFO] 图表名称：nginx&#xA;[2024-07-23 15:02:48] [INFO] 图表存储库：oci://registry-1.docker.io/bitnamicharts&#xA;[2024-07-23 15:02:48] [INFO] 值文件：values/nginx-values.yaml&#xA;[2024-07-23 15:02:48] [INFO] 版本：空&#xA;[2024-07-23 15:02:48] [INFO] 命名空间：空&#xA;[2024-07-23 15:02:48] [信息]****************************&#xA;[2024-07-23 15:02:48] [INFO] 使用值文件：values/nginx-values.yaml 从 oci://registry-1.docker.io/bitnamicharts 安装版本为 null 且版本名为 nginx 的 nginx默认命名空间&#xA;...&#xA;...&#xA;输出已调整&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;实际的标准输出输出可以&lt;a href=&#34;https://github.com/sunnybhambhani/helmister/blob/main/artifacts/sample_logs/during_installation_on_stdout.log&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;找到在这里&lt;/a&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在这里您将看到它提供了其具体操作的所有详细信息。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;例如：通用值&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;这里我将 create_namespace 标记为 true，因为我还没有 argocd 命名空间，我想在其中安装 argocd 版本。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;sql&#34; class=&#34;language-sql&#34;&gt;[2024-07-23 15:02:47] [INFO] 基于配置的通用/通用值。 yaml 文件&#xA;[2024-07-23 15:02:48] [INFO] 试运行：假&#xA;[2024-07-23 15:02:48] [INFO] 创建命名空间：true&#xA;[2024-07-23 15:02:48] [INFO] 等待：错误&#xA;[2024-07-23 15:02:48] [INFO] 超时： false&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;接下来，您将看到，图表数组中所有项目的具体值一一图表/发布：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;sql&#34; class=&#34;language-sql&#34;&gt;[2024-07-23 15:03:31] [INFO] 基于 config.yaml 绘制特定值的图表文件&#xA;[2024-07-23 15:03:31] [INFO] 版本名称：argocd&#xA;[2024-07-23 15:03:31] [INFO] 图表名称：argo-cd&#xA;[2024-07-23 15:03:31] [INFO] 图表存储库：https://argoproj.github.io/argo-helm&#xA;[2024-07-23 15:03:31] [INFO] 值文件：values/argo-cd.yaml&#xA;[2024-07-23 15:03:31] [信息] 版本：6.4.0&#xA;[2024-07-23 15:03:31] [INFO] 命名空间：argo-cd&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;在这里，我明确添加了一项额外检查，用于检查 pod 是否正常运行（这仅针对 pod，它不会考虑任何其他 k8s 对象）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;它将在接下来的 20 分钟内持续检查，并且每 5 秒检查一次。如果 Pod 仍处于非运行状态，它将终止该进程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;sql&#34; class=&#34;language-sql&#34;&gt;[2024-07-23 15:03:47] [警告] 尚未发布 argocd 的 Pod运行状态，5秒后再次检查&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;一旦所有 Pod 都处于运行状态并且部署了所有版本，它将显示一条成功消息。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;sql&#34; class=&#34;language-sql&#34;&gt;[2024-07-23 15:05:20] [INFO] 所有操作均已成功完成&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;完成此操作后，如果需要，您还可以从日志目录中查看日志。可以在&lt;a href=&#34;https://github.com/sunnybhambhani/helmister/blob/main/artifacts/sample_logs/actual_log_file.log&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;此处找到示例&lt;/a &gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;这是我的集群的当前状态：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ helm list -A&#xA;名称 命名空间 修订版本 更新的状态图表 应用程序版本&#xA;argocd argo-cd 1 2024-07-23 15:03:34.46715742 +0530 IST 部署 argo-cd-6.4.0 v2.10.1&#xA;nginx 默认 1 2024-07-23 15:02:53.590367521 +0530 IST 部署 nginx-18.1.5 1.27.0&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ k 获取 ns&#xA;姓名 身份 年龄&#xA;argo-cd 活跃 58m&#xA;默认活动 62m&#xA;kube-node-lease 活动 62m&#xA;kube-公共 活跃 62m&#xA;kube-系统活跃 62m&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ k 获取 pods -n argo-cd&#xA;名称就绪状态重新开始年龄&#xA;argocd应用程序阳离子控制器-0 1/1 运行 0 58m&#xA;argocd-applicationset-controller-68cd75bc89-d4q8x 1/1 运行 0 58m&#xA;argocd-dex-server-84b5bbdcbf-c4qv2 1/1 运行 0 58m&#xA;argocd-notifications-controller-7bc55c495d-xz6gt 1/1 运行 0 58m&#xA;argocd-redis-5d5cdcfd54-2rx26 1/1 运行 0 58m&#xA;argocd-repo-server-756ff4cd7d-rpvh7 1/1 运行 0 58m&#xA;argocd-server-7587d49b7b-9h47l 1/1 运行 0 58m&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ k 获取 pod -n 默认值&#xA;名称就绪状态重新开始年龄&#xA;nginx-569b6bc698-48qqt 1/1 运行 0 59m&#xA;nginx-569b6bc698-9qzpv 1/1 运行 0 59m&#xA;nginx-569b6bc698-wflrj 1/1 运行 0 59m&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;如果您想卸载它，只需执行以下操作：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;bash&#34; class=&#34;language-bash&#34;&gt;$ ./helmister uninstall&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;它将清理 &lt;code&gt;config.yaml&lt;/code&gt; 中指定的所有版本的所有内容。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;可以&lt;a href=&#34;https://github.com/sunnybhambhani/helmister/blob/main/artifacts/sample_logs/during_uninstallation_on_stdout.log&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;找到示例日志在这里&lt;/a&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随意使用它，并根据您的要求进行调整。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我很快就会为其添加更多功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;祝你学习愉快！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;参考文献：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Google/Stackoverflow/Linux 手册页/等&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 05 Aug 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The technical complexities of decoupled authorization】解耦授权的技术复杂性</title>
      <link>https://www.cncf.io/blog/2024/08/07/the-technical-complexities-of-decoupled-authorization/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on the &lt;a href=&#34;https://www.cerbos.dev/blog/technical-complexities-of-decoupled-authorization&#34;&gt;Cerbos blog&lt;/a&gt; by James Walker&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Decoupling authorization from your main application code makes authorization more scalable, easier to maintain, and simpler to integrate with your components. However, these benefits are difficult to realize if you don’t consciously plan for them within your authorization implementation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Decoupled authorization can add new technical challenges that aren’t always apparent at the start of a project. In this article, you’ll explore some of the problems with decoupled authorization. You’ll also see a few useful strategies for avoiding these pitfalls so you can develop effective authorization solutions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;What is decoupled authorization?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/decoupled-authorization&#34;&gt;Decoupled authorization&lt;/a&gt;&amp;nbsp;refers to separating your service’s authorization routines from your main application code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In monolithic applications, authorization is handled by functions and classes that live inside your single codebase. Decoupled authorization refers to repositioning these components as a standalone service that your main code interfaces with. The interface normally consists of network calls to an API that the authorization component provides.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Decoupled authorization is often used to integrate external identity providers. You can delegate user account storage and permissions management to a platform that’s purpose-built for the task. Your application can make network requests to the platform whenever it needs to authorize an action.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This model keeps authorization logic separate from your application, making it more&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/testable-authorization&#34;&gt;testable&lt;/a&gt;&amp;nbsp;and easier to iterate upon in isolation. It also centralizes the implementation of authorization policies, ensuring all your services apply the same restrictions. Any new services you develop can reuse the decoupled authorization component without duplicating its logic. This isn’t possible when authorization is tightly coupled to specific codebases.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio&#34;&gt;&lt;div class=&#34;wp-block-embed__wrapper&#34;&gt;&#xA;&lt;iframe loading=&#34;lazy&#34; title=&#34;Cerbos #2 - What is decoupled authorization?&#34; width=&#34;500&#34; height=&#34;281&#34; src=&#34;https://www.youtube.com/embed/ngr8VeO7AMk?feature=oembed&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;no-referrer&#34; allowfullscreen=&#34;&#34;&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Technical complexities when implementing decoupled authorization&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Decoupled authorization has clear advantages over inflexible authorization logic that’s written directly into application components. Decoupling authorization into its own service can increase overall complexity, though. You have to develop and maintain two services while ensuring they remain compatible with each other. Here are four specific kinds of technical complexity you’ll face.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:36px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-default&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-style-border is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p class=&#34;is-style-spaced-uppercase&#34;&gt;Keep reading&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;A look at &lt;a href=&#34;https://www.cncf.io/online-programs/cloud-native-live-modernizing-authorization-from-basic-roles-to-decoupled-abac/&#34;&gt;modern authorization&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Understand the &lt;a href=&#34;https://www.cncf.io/online-programs/cncf-on-demand-webinar-understanding-the-open-source-cloud-native-security-landscape/&#34;&gt;cloud native security&lt;/a&gt; landscape (webinar)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Read our &lt;a href=&#34;https://www.cncf.io/reports/cloud-native-security-whitepaper/&#34;&gt;Cloud Native Security Whitepaper&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Register for &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt; today&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Integration with the main application or service&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Plugging the decoupled authorization layer back into your main application can be harder than you think. Whereas authorization has historically been a synchronous process without side effects, decoupling introduces the potential for system failures when the authorization service can’t be reached or an unknown response is received.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The decoupled authorization component must be carefully integrated to ensure the implementation is reliable. The application will need to retry calls to the authorization layer that fail due to a flaky network, for example. When no response can be obtained, perhaps because the authorization component has failed, the app should deny the user’s request to prevent authorization being inadvertently granted.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Each app you develop will need to integrate the authorization layer before it can be consumed. These integrations should be backed by tests that verify the app correctly handles different authorization outcomes, such as grant, deny, and failure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Management of user accounts and permissions&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Decoupling authorization from application code doesn’t mean you can forget about user accounts and permissions. These still need to be managed by your authorization layer, either directly within your authorization component or with an external identity provider.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The service you use should be flexible enough to store all the user data you require. All but the simplest systems will require a granular permissions model with support for roles and groups. You’ll need a mechanism for setting up and maintaining this data, either via scriptable APIs for automated provisioning or an accessible web UI for human use.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Decoupling authorization without planning how you’ll manage user accounts can cause problems as you reintegrate your components into your application. Apps need a dependable mechanism for establishing the user’s identity, retrieving relevant attributes such as their team and project, and checking which permissions have been assigned. All this info has to be centralized across your services to preserve consistency.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Handling data filtering and pagination&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Services that filter data and display results over multiple pages need to be adjusted so users are only shown the items they can interact with. For example, an API request for the first ten invoices in a system could expose a different set of items depending on the user: department leaders might only see invoices approved by their department, while accounting staff have unfiltered access.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To achieve this, you’ll need to run your authorization policies against each item included in resource lists fetched by your application. The policies should verify that the items can be used in the current authorization context defined by the characteristics of the resource and the requesting user.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Unfortunately, performing authorization checks for lists of hundreds or thousands of records is often an inefficient process. It also has knock-on impacts on your pagination routines. When an item gets discarded because authorization is denied, a replacement must be loaded from the database to fill up the correct page size.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To properly address this complexity, plan how you’ll integrate your data queries with your decoupled authorization policies. Select an authorization provider that includes features such as&amp;nbsp;&lt;a href=&#34;https://cerbos.dev/blog/filtering-data-using-authorization-logic&#34;&gt;query plans&lt;/a&gt;&amp;nbsp;to preemptively retrieve the list of resources that a given user can interact with. Use the plan to filter database queries at the point they’re made, instead of individually running authorization policies against each item in your result sets.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Maintaining security and privacy&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Decoupled authorization&amp;nbsp;&lt;strong&gt;can&lt;/strong&gt;&amp;nbsp;create security weaknesses and privacy concerns. Any new service increases your threat perimeter and creates an additional target for attackers. Splitting authorization out of your application converts it into a standalone component that might be easier for bad actors to manipulate.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Traditional authorization models are invisible from outside your application. Authorization checks occur within the code, providing no opportunities for attackers to investigate their logic. Decoupled authorization can be more visible if your service isn’t properly protected. Network activity logs reveal the requests being made and the results obtained in response.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Insecure authorization APIs can leak data too. It’s vital to ensure your authorization service only reveals attributes that the user’s permitted to access. Otherwise, a rogue user or attacker could exfiltrate sensitive details by making direct calls to the authorization API.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Ensuring scalability and reliability&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Authorization is a critical application component. It’s involved in almost every user interaction, demanding exceptional scalability and reliability. Poorly optimized authorization is a bottleneck that compromises your whole system’s performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Splitting authorization into its own service can increase latency as your apps have to wait for authorization checks to complete. Too many pending calls will increase congestion and lead to resource contention. If your authorization layer can’t scale with user activity, people will be left waiting at times of heavy usage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Failure resilience is equally important. If authorization goes down, users won’t be able to log in or access functions that require permission checks. Authorization services should be deployed as multiple replicated instances to produce a fault tolerant architecture that can withstand individual instance crashes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Strategies for overcoming decoupled authorization complexity&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Decoupled authorization doesn’t have to be burdensome. You can mitigate complexity by sticking to proven strategies that promote an effective implementation. Building upon standard microservices patterns is a good starting point, but the following techniques offer specific best practices for splitting authorization from application code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Use industry-standard protocols and frameworks&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Integrating with industry-standard authorization protocols will increase your system’s interoperability and reduce the risk of oversights occurring. These well-known mechanisms let you centrally manage user identities and permission assignments, then consistently access the data from your services.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Supporting these technologies also gives your users a greater choice of sign-in options. They can bring their own identity from their favored platform, whether it’s Microsoft, Google, Apple, or another alternative. You can easily integrate these SSO options by using the same standards that they’re built upon.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Favor prebuilt authorization platforms and services&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Building your own authorization platform is a daunting task. You’re responsible for checking your authorization logic and maintaining security standards. Selecting a dedicated platform such as&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/&#34;&gt;Cerbos&lt;/a&gt;&amp;nbsp;gives you all the benefits of decoupled authorization without the complexity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These systems sit outside your stack and are integrated using their public APIs. You can register user accounts, handle logins, and set up authorization policies using&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/rbac&#34;&gt;RBAC&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/abac&#34;&gt;ABAC&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/pbac&#34;&gt;PBAC&lt;/a&gt;. They remove the complexity of inventing your own mechanisms for storing, evaluating, and querying authorization logic.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Seek specialized expertise and resources when you develop your own solutions&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Some systems demand their own authorization layers either because of their sensitivity or due to legacy compatibility requirements. Developing your own authorization solution can be the only option in these circumstances, but you don’t have to do it on your own.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Minimizing features and keeping code paths lean is a good way to lessen security dangers and remove complexity. After distilling your solution to its essential requirements, you can more readily compare it to reference architectures or invite an external review. Seeking an audit and penetration test from a specialized authorization security team can provide confidence that your system’s protected, allowing you to get back to building your business functionality.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Start developing your own solution by clearly listing the vital features it requires. Next, plan out how you’ll deploy your authorization service, protect it from unauthorized access, and scale it to achieve sustained performance. You can then start working on the technical implementation. Try referring to open source authorization platforms if you need more guidance as many of the challenges you’ll face will have already been encountered by others.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Decoupling authorization from the code of individual applications is a best practice that enforces consistent authorization logic across services, simplifies testing, and is more scalable when implemented correctly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nonetheless, too many software teams struggle to effectively utilize decoupled authorization because of the extra technical complexity it creates. Poorly planned implementations can be unreliable and difficult to maintain.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Proactively developing strategies to identify and address this complexity will let you build and scale a decoupled authz system for your next project. Involve project managers, developers, and service operators to canvass opinion on potential drawbacks of the approach. Once you’ve identified any problems, you can add relevant mitigations to your development plan.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The measures you choose can be specific technical changes, such as implementing rate limiting to improve&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/security-standards&#34;&gt;security&lt;/a&gt;, or more general steps that support your solution’s success. Extensive test suites, adoption of standardized protocols, and the use of expert guidance when needed all strip away the complexity of decoupled authz.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初由 James Walker 在&lt;a href=&#34;https://www.cerbos.dev/blog/technical-complexities-of-de Coupled-authorization&#34;&gt;Cerbos 博客&lt;/a&gt;上发布&lt; /em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将授权与主应用程序代码解耦，使授权更具可扩展性、更易于维护，并且更易于与组件集成。但是，如果您在授权实施中没有有意识地规划这些好处，则很难实现这些好处。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;解耦授权可能会带来新的技术挑战，而这些挑战在项目开始时并不总是显而易见。在本文中，您将探讨解耦授权的一些​​问题。您还将看到一些避免这些陷阱的有用策略，以便您可以开发有效的授权解决方案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;什么是解耦授权？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/de Coupled-authorization&#34;&gt;解耦授权&lt;/a&gt;是指将服务的授权例程与主应用程序分离代码。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在单体应用程序中，授权由位于单个代码库内的函数和类处理。解耦授权是指将这些组件重新定位为与主代码交互的独立服务。该接口通常由对授权组件提供的 API 的网络调用组成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;解耦授权通常用于集成外部身份提供商。您可以将用户帐户存储和权限管理委托给专为该任务构建的平台。您的应用程序可以在需要授权操作时向平台发出网络请求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此模型将授权逻辑与您的应用程序分开，使其更具&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/testable-authorization&#34;&gt;可测试性&lt;/a &gt; 并且更容易单独迭代。它还集中实施授权策略，确保您的所有服务都应用相同的限制。您开发的任何新服务都可以重用解耦的授权组件，而无需重复其逻辑。当授权与特定代码库紧密耦合时，这是不可能的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio&#34;&gt;&lt;div class=&#34; wp-block-embed__wrapper&#34;&gt;&#xA;&lt;iframe loading=&#34;lazy&#34; title=&#34;Cerbos #2 - 什么是解耦授权？&#34;宽度=“500”高度=“281”src=“https://www.youtube.com/embed/ngr8VeO7AMk？feature=oembed”frameborder=“0”允许=“加速计;自动播放;剪贴板写入;加密媒体; 画中画&#34;referrerpolicy=&#34;no-referrer&#34;allowfullscreen=&#34;&#34;&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;实现解耦授权时的技术复杂性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;解耦授权明确与直接写入应用程序组件的不灵活的授权逻辑相比具有优势。不过，将授权解耦到其自己的服务中可能会增加整体复杂性。您必须开发和维护两项服务，同时确保它们相互兼容。以下是您将面临的四种特定的技术复杂性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:36px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-default&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-style-border is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p class=&#34;is-style-spaced-uppercase&#34;&gt;继续阅读&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;看看&lt;a href=&#34;https://www.cncf.io/online-programs/cloud-native-live-modernizing-authorization-from-basic-roles-to-de Coupled-abac/&#34;&gt;现代授权&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;了解&lt;a href=&#34;https://www.cncf.io/online-programs/cncf-on-demand-webinar-understanding-the-open-source-cloud-native-security-landscape/&#34;&gt;云原生安全&lt;/a&gt; 景观（网络研讨会）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;阅读我们的&lt;a href=&#34;https://www.cncf.io/reports/cloud-native-security-whitepaper/&#34;&gt;云原生安全白皮书&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;立即报名参加&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;与主应用程序或服务集成&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将解耦的授权层重新插入到主应用程序中可能比您想象的要困难。虽然授权历来是一个没有副作用的同步过程，但当无法访问授权服务或收到未知响应时，解耦可能会导致系统故障。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;解耦的授权组件必须仔细集成，以确保实现的可靠。例如，应用程序需要重试对由于网络不稳定等原因而失败的授权层的调用。当无法获得响应时，可能是因为授权组件失败，应用程序应该拒绝用户的请求，以防止无意中授予授权。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您开发的每个应用程序都需要集成授权层才能使用。这些集成应该得到测试的支持，以验证应用程序是否正确处理不同的授权结果，例如授权、拒绝和失败。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;用户帐户和权限的管理&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将授权与应用程序代码解耦并不意味着您可以忘记用户帐户和权限。这些仍然需要由您的授权层管理，可以直接在您的授权组件内管理，也可以通过外部身份提供商进行管理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您使用的服务应该足够灵活，能够存储您需要的所有用户数据。除了最简单的系统之外，所有系统都需要一个支持角色和组的精细权限模型。哟您需要一种机制来设置和维护这些数据，可以通过用于自动配置的可编写脚本的 API，也可以通过供人类使用的可访问的 Web UI。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在不规划如何管理用户帐户的情况下解耦授权可能会在您将组件重新集成到应用程序中时出现问题。应用程序需要可靠的机制来建立用户身份、检索相关属性（例如其团队和项目）以及检查已分配的权限。所有这些信息都必须集中在您的服务中以保持一致性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;处理数据过滤和分页&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;需要调整过滤数据并在多个页面上显示结果的服务，以便用户仅看到他们可以交互的项目。例如，针对系统中前十张发票的 API 请求可能会根据用户公开一组不同的项目：部门领导可能只能看到其部门批准的发票，而会计人员则拥有未经过滤的访问权限。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要实现此目标，您需要针对应用程序获取的资源列表中包含的每个项目运行授权策略。策略应验证这些项目是否可以在由资源和请求用户的特征定义的当前授权上下文中使用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不幸的是，对数百或数千条记录的列表执行授权检查通常是一个低效的过程。它还会对您的分页例程产生连锁影响。当某个项目因授权被拒绝而被丢弃时，必须从数据库加载替换项以填充正确的页面大小。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了正确解决这种复杂性，请规划如何将数据查询与解耦的授权策略集成。选择包含&lt;a href=&#34;https://cerbos.dev/blog/filtering-data-using-authorization-logic&#34;&gt;查询计划&lt;/a&gt;等功能的授权提供商，以抢先检索给定的用户可以与之交互。使用该计划在进行数据库查询时对其进行过滤，而不是针对结果集中的每个项目单独运行授权策略。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;维护安全和隐私&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;分离授权&lt;strong&gt;可能&lt;/strong&gt;会造成安全漏洞和隐私问题。任何新服务都会增加您的威胁范围，并为攻击者创造额外的目标。将授权从您的应用程序中分离出来，将其转换为一个独立的组件，这可能更容易被不良行为者操纵。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;传统的授权模型从应用程序外部是不可见的。授权检查发生在代码内，使攻击者没有机会调查其逻辑。如果您的服务没有得到适当的保护，解耦的授权可能会更加明显。网络活动日志版本处理正在发出的请求以及响应中获得的结果。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不安全的授权 API 也会泄露数据。确保您的授权服务仅显示用户允许访问的属性至关重要。否则，恶意用户或攻击者可能会通过直接调用授权 API 来泄露敏感详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;确保可扩展性和可靠性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;授权是一个关键的应用程序组件。它几乎涉及所有用户交互，需要卓越的可扩展性和可靠性。授权优化不佳是影响整个系统性能的瓶颈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将授权拆分到自己的服务中可能会增加延迟，因为您的应用必须等待授权检查完成。过多的待处理调用会增加拥塞并导致资源争用。如果您的授权层无法随着用户活动而扩展，那么人们将在大量使用时等待。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;故障恢复能力同样重要。如果授权中断，用户将无法登录或访问需要权限检查的功能。授权服务应部署为多个复制实例，以生成能够承受单个实例崩溃的容错架构。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;克服解耦授权复杂性的策略&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;解耦授权不一定是繁重的。您可以通过坚持促进有效实施的行之有效的策略来降低复杂性。基于标准微服务模式构建是一个很好的起点，但以下技术提供了从应用程序代码中分离授权的具体最佳实践。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;使用行业标准协议和框架&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与行业标准授权协议集成将提高系统的互操作性并降低发生疏忽的风险。这些众所周知的机制可让您集中管理用户身份和权限分配，然后一致地访问您的服务中的数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;支持这些技术还为您的用户提供了更多的登录选项选择。他们可以从自己喜欢的平台带来自己的身份，无论是微软、谷歌、苹果还是其他替代平台。您可以使用构建这些 SSO 选项所依据的相同标准轻松集成这些 SSO 选项。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;青睐预构建的授权平台和服务&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;建立自己的授权平台是一项艰巨的任务。您负责检查授权逻辑并维护安全标准。选择 &lt;a href=&#34;https://www.cerbos.dev/&#34;&gt;Cerbos&lt;/a&gt; 等专用平台可为您提供解耦授权的所有优势，且不会增加复杂性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些系统位于您的堆栈之外并使用其公共 API 进行集成。您可以使用 &lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/rbac&#34;&gt;RBAC&lt;/a&gt; 注册用户帐户、处理登录并设置授权策略，&lt; a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/abac&#34;&gt;ABAC&lt;/a&gt; 和 &lt;a href=&#34;https://www.cerbos.dev/features-好处和用例/pbac&#34;&gt;PBAC&lt;/a&gt;。它们消除了发明自己的存储、评估和查询授权逻辑机制的复杂性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;在开发自己的解决方案时寻求专业知识和资源&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一些系统需要自己的授权层，要么是因为它们的敏感性，要么是因为遗留的兼容性要求。在这些情况下，开发您自己的授权解决方案可能是唯一的选择，但您不必自己这样做。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最小化功能并保持代码路径精简是减少安全危险和消除复杂性的好方法。在根据基本要求提炼您的解决方案后，您可以更轻松地将其与参考架构进行比较或邀请外部审查。寻求专业授权安全团队的审核和渗透测试可以让您确信您的系统受到保护，从而使您能够重新构建业务功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过清楚地列出所需的重要功能来开始开发您自己的解决方案。接下来，规划如何部署授权服务，防止未经授权的访问，并扩展它以实现持续的性能。然后您可以开始进行技术实施。如果您需要更多指导，请尝试参考开源授权平台，因为您将面临的许多挑战其他人已经遇到过。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将授权与单个应用程序的代码解耦是一种最佳实践，它可以在服务之间强制执行一致的授权逻辑，简化测试，并且在正确实施时更具可扩展性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;尽管如此，太多的软件团队都在努力有效地利用解耦授权，因为它会带来额外的技术复杂性。计划不周的实施可能不可靠且难以维护。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;积极制定策略来识别和解决这种复杂性将使您能够为下一个项目构建和扩展解耦的授权系统。让项目经理、开发人员和服务运营商参与进来，就该方法的潜在缺点征求意见。一旦发现任何问题，您就可以将相关的缓解措施添加到您的开发计划中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您选择的措施可以是具体的技术变更，例如实施速率限制以改进&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/security-standards&#34;&gt;安全性&lt;/a&gt;，或更一般的支持您的解决方案的步骤。的成功。广泛的测试套件、标准化协议的采用以及在需要时使用专家指导都消除了解耦授权的复杂性。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 06 Aug 2024 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>