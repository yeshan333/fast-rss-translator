<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://rsshub.rssforever.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【Cilium releases 2024 annual report】Cilium发布2024年年度报告</title>
      <link>https://www.cncf.io/blog/2024/12/30/cilium-releases-2024-annual-report/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1200&#34; height=&#34;630&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2.jpg&#34; alt=&#34;annual report&#34; class=&#34;wp-image-122812&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2.jpg 1200w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-300x158.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-1024x538.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-900x473.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-381x200.jpg 381w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-590x310.jpg 590w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-1180x620.jpg 1180w&#34; sizes=&#34;auto, (max-width: 1200px) 100vw, 1200px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Following a year of significant milestones in &lt;a href=&#34;https://www.cncf.io/blog/2023/12/21/ciliums-2023-annual-report/&#34;&gt;2023&lt;/a&gt;, 2024 for Cilium was pivotal in that organizations are now leveraging the project to manage their entire Kubernetes networking stack. We are pleased to share the &lt;a href=&#34;https://github.com/cilium/cilium.io/blob/main/Annual-Reports/Cilium_Annual_Report_2024.pdf&#34;&gt;2024 Cilium Annual Report&lt;/a&gt;, which highlights the many successes experienced by the project over the last 12 months.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;What once began as a solution for pod-to-pod connectivity has expanded into a project that unifies the critical domains of networking, observability, and security under a single eBPF-powered umbrella.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we move into 2025, the Cilium community has never been stronger. The project continues to add contributors and end users across a variety of industries. We invite you to take a look at the &lt;a href=&#34;https://github.com/cilium/cilium.io/blob/main/Annual-Reports/Cilium_Annual_Report_2024.pdf&#34;&gt;2024 Annual Report&lt;/a&gt; to share in the achievements over the year. For any questions or feedback, don’t hesitate to reach out to &lt;a href=&#34;mailto:contribute@cilium.io&#34;&gt;contribute@cilium.io&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1200”高度=“630”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Copy-of-Single-Card-2.jpg&#34; alt=&#34;年度报告&#34; class=&#34;wp-image-122812&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2.jpg 1200w，https://www.cncf.io/wp-content/ uploads/2024/12/Copy-of-Single-Card-2-300x158.jpg 300w， https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-1024x538.jpg 1024w，https://www.cncf.io/wp-content/uploads /2024/12/单卡副本2-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-194x102.jpg 194w，https://www.cncf.io/wp-content/uploads /2024/12/单卡副本2-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-776x408.jpg 776w，https://www.cncf.io/wp-content/uploads /2024/12/单卡副本2-900x473.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-381x200.jpg 381w，https://www.cncf.io/wp-content/uploads /2024/12/单卡副本2-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-590x310.jpg 590w，https://www.cncf.io/wp-content/uploads /2024/12/Copy-of-Single-Card-2-1180x620.jpg 1180w&#34; 尺寸 = &#34;自动, （最大宽度：1200px）100vw，1200px“referrerpolicy =“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;继 &lt;a href=&#34;https://www.cncf.io/blog/2023/12/21/ciliums-2023-annual-report/&#34;&gt;2023 年&lt;/a&gt;取得重大里程碑之后，2024 年对于 Cilium 来说至关重要，因为组织现在正在利用该项目来管理整个 Kubernetes 网络堆栈。我们很高兴分享 &lt;a href=&#34;https://github.com/cilium/cilium.io/blob/main/Annual-Reports/Cilium_Annual_Report_2024.pdf&#34;&gt;2024 年 Cilium 年度报告&lt;/a&gt;，其中重点介绍了该项目在过去 12 个月中取得了许多成功。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最初作为 Pod 到 Pod 连接的解决方案，现已扩展为一个项目，将网络、可观察性和安全性的关键领域统一在一个由 eBPF 驱动的框架下。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着我们进入 2025 年，Cilium 社区变得前所未有的强大。该项目不断增加各行业的贡献者和最终用户。我们邀请您查看&lt;a href=&#34;https://github.com/cilium/cilium.io/blob/main/Annual-Reports/Cilium_Annual_Report_2024.pdf&#34;&gt;2024 年年度报告&lt;/a&gt;来分享在一年来取得的成绩中。如有任何问题或反馈，请随时联系 &lt;a href=&#34;mailto:contribute@cilium.io&#34;&gt;contribute@cilium.io&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 29 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing 1000 Kubestronauts】宣布 1000 名 Kubetronauts</title>
      <link>https://www.cncf.io/blog/2024/12/20/announcing-1000-kubestronauts/</link>
      <description>【&lt;p&gt;CNCF is excited to share that since launching the Kubestronauts program less than a year ago, over 1000 &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;Kubestronauts&lt;/a&gt; have joined the program. A special welcome to our 1,000th Kubestronaut, Remy Mollandin!&amp;nbsp;Each of these 1000+ Kubestronauts have active certifications in all of CNCF’s Kubernetes certifications: &lt;a href=&#34;https://www.cncf.io/training/certification/kcna/&#34;&gt;&lt;strong&gt;KCNA&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.cncf.io/training/certification/kcsa/&#34;&gt;&lt;strong&gt;KCSA&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.cncf.io/training/certification/cka/&#34;&gt;&lt;strong&gt;CKA&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.cncf.io/training/certification/ckad/&#34;&gt;&lt;strong&gt;CKAD&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.cncf.io/training/certification/cks/&#34;&gt;&lt;strong&gt;CKS&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Unique Value of the Kubestronaut Program&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF’s Kubestronaut program is designed to drive the growth of Kubernetes and open source cloud native technologies by providing training, learning resources, networking opportunities, and professional development opportunities to help participants grow their cloud-native careers. There is no other comparable program in the world like this.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Becoming a Kubestronaut not only adds you to an elite group, but you also get:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;A Kubestronaut jacket&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A Credly badge&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Access to the dedicated/private Kubestronaut Slack channel and mailing list&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Coupons for 50% off five certifications each year – for yourself or to share&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;20% off three CNCF events (KubeCon + CloudNativeCon or KubeDays) a year&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“We’re very pleased to celebrate this major milestone—reaching 1,000 Kubestronauts in less than a year since the program’s inception! This achievement highlights the tremendous enthusiasm within the community to learn and grow with Kubernetes. We appreciate all our Kubestronauts and look forward to learning from them to ensure we produce better cloud native education materials for the world.” –Chris Aniszczyk, CTO, CNCF&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;What Kubestronauts say about the program:&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In automated environments, and especially with regards to security, it is extremely important to be aware of what’s currently being offered, what gets deprecated, and what best practices to follow. Continuous learning with this certification program will “push” you to get better. – &lt;a href=&#34;https://www.cncf.io/blog/2024/10/22/kubestronaut-in-orbit-maria-salcedo/&#34;&gt;Maria Salcedo&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Kubernetes certifications are hands-on exams that will help you acquire not only knowledge of Kubernetes, but also the basic skills to build and troubleshoot application environments on Kubernetes by actually doing the work.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;–&lt;a href=&#34;https://www.cncf.io/blog/2024/09/10/kubestronaut-in-orbit-daiki-takasao/&#34;&gt;Daiki Takasao&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Learn more about how to become a &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/kubestronaut-faq/&#34;&gt;Kubestronaut&lt;/a&gt;&amp;nbsp; and read about the highlighted &lt;a href=&#34;https://www.cncf.io/lf-author-category/kubestronaut/&#34;&gt;Kubestronauts in Orbit&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Discover more about our Kubestronauts&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubestronauts come from around the world with participants in 86 countries and every continent except Antarctica. Fourteen Kubestronauts are the only ones in their entire country! Although India and United States have the most Kubestronauts per country, some cities have more Kubestronauts than others.&amp;nbsp; Our top 5 cities for Kubestronauts are:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Singapore, Singapore&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Seoul, South Korea&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;London, United Kingdom&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Oslo, Norway&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Tokyo, Japan&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;Our top five countries by number of Kubestronauts are:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;India&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;United States&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Germany&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The Netherlands&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;France&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’d like to thank all the Kubestronauts for being committed members of the CNCF Open Source community.&amp;nbsp; Learn more about becoming a &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/kubestronaut-faq/&#34;&gt;Kubestronaut&lt;/a&gt; and explore stories in our &lt;a href=&#34;https://www.cncf.io/lf-author-category/kubestronaut/&#34;&gt;Kubestronauts in Orbit&lt;/a&gt; series.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;CNCF 很高兴与大家分享，自启动 Kubetronauts 计划不到一年以来，已有超过 1000 名 &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;Kubestronauts&lt;/a&gt; 加入程序。特别欢迎我们的第 1,000 名 Kubetronaut，Remy Mollandin！ 这 1000 多名 Kubetronaut 中的每一位都拥有 CNCF 的所有 Kubernetes 认证的有效认证：&lt;a href=&#34;https://www.cncf.io/training/certification/kcna/&#34;&gt;&lt;strong&gt;KCNA&lt;/strong&gt;&lt;/a &gt;、&lt;a href=&#34;https://www.cncf.io/training/certification/kcsa/&#34;&gt;&lt;strong&gt;KCSA&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&#34;https://www.cncf.io/training/certification/cka/&#34;&gt;&lt;strong&gt;CKA&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&#34;https://www.cncf.io/training /certification/ckad/&#34;&gt;&lt;strong&gt;CKAD&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&#34;https://www.cncf.io/training/certification/cks/&#34;&gt;&lt;strong&gt;CKS&lt;/strong &gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Kubestronaut 计划的独特价值&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF 的 Kubetronaut 计划旨在通过提供培训、学习资源、网络机会和专业发展机会来帮助参与者发展云原生职业，从而推动 Kubernetes 和开源云原生技术的发展。世界上没有其他类似的程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;成为 Kubetronaut 不仅能让您跻身精英团队，而且您还可以获得：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Kubestronaut 夹克&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Credly 徽章&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;访问专用/私人 Kubetronaut Slack 频道和邮件列表&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;每年获得五项认证可享受 50% 折扣的优惠券 - 供自己使用或与他人分享&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;每年三场 CNCF 活动（KubeCon + CloudNativeCon 或 KubeDays）可享受 20% 折扣&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“我们非常高兴庆祝这一重要里程碑——自该计划启动以来不到一年的时间里，Kubestronaut 人数就达到了 1,000 名！这一成就凸显了社区内与 Kubernetes 一起学习和成长的巨大热情。我们感谢所有 Kubetronaut，并期待向他们学习，以确保我们为世界制作更好的云原生教育材料。” –Chris Aniszczyk，CNCF 首席技术官&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Kubestronauts 对该计划的评价：&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在自动化环境中，尤其是在安全方面，了解当前提供的内容、已弃用的内容以及应遵循的最佳实践非常重要。通过此认证计划持续学习将“推动”您变得更好。 – &lt;a href=&#34;https://www.cncf.io/blog/2024/10/22/kubestronaut-in-orbit-maria-salcedo/&#34;&gt;玛丽亚·萨尔塞多&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 认证是实践考试，不仅可以帮助您获得 Kubernetes 知识，还可以帮助您通过实际工作在 Kubernetes 上构建应用程序环境并进行故障排除的基本技能。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;–&lt;a href=&#34;https://www.cncf.io/blog/2024/09/10/kubestronaut-in-orbit-daiki-takasao/&#34;&gt;大辉高佐&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;了解更多了解如何成为 &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/kubestronaut-faq/&#34;&gt;Kubestronaut&lt;/a&gt;，并阅读突出显示的&lt;a href=&#34;https:// www.cncf.io/lf-author-category/kubetronaut/&#34;&gt;Kubestronauts 在轨道上&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;了解有关我们 Kubestronauts 的更多信息&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubestronauts 来自世界各地，参与者遍布 86 个国家和除南极洲以外的各大洲。整个国家仅有 14 名 Kubesteronauts！尽管印度和美国拥有最多的 Kubestronaus 国家，但有些城市的 Kubestronauts 数量多于其他城市。  最适合 Kubestronauts 的 5 个城市是：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;新加坡，新加坡&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;韩国首尔&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;英国伦敦&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;挪威奥斯陆&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;日本东京&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kubestronaut 数量排名前五的国家/地区是：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;印度&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;美国&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;德国&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;荷兰&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;法国&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们要感谢所有 Kubetronauts 成为 CNCF 开源社区的忠实成员。  了解有关成为 &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/kubestronaut-faq/&#34;&gt;Kubestronaut&lt;/a&gt; 的更多信息，并在我们的 &lt;a href=&#34;https://www 中探索故事.cncf.io/lf-author-category/kubetronaut/&#34;&gt;Kubestronauts in Orbit&lt;/a&gt; 系列。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 19 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【OpenTelemetry Collector completes fuzzing audit】OpenTelemetry Collector 完成模糊审计</title>
      <link>https://www.cncf.io/blog/2024/12/30/opentelemetry-collector-completes-fuzzing-audit/</link>
      <description>【&lt;p&gt;&lt;em&gt;Cross-posted from the &lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/&#34;&gt;OpenTelemetry blog&lt;/a&gt; by Adam Korczynski&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry is happy to announce the completion of the Collector’s fuzzing audit sponsored by&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;the CNCF&lt;/a&gt;&amp;nbsp;and carried out by&amp;nbsp;&lt;a href=&#34;https://adalogics.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ada Logics&lt;/a&gt;. The audit marks a significant step in the OpenTelemetry project, ensuring the security and reliability of the Collector for its users.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;what-is-fuzzing&#34;&gt;What is fuzzing?&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#what-is-fuzzing&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fuzzing is a testing technique that executes an API with a high amount of pseudo-random inputs and observes the API’s behavior. The technique has increased in popularity due to its empirical success in finding security vulnerabilities and reliability issues. Fuzzing initially developed with a focus on testing software implemented in memory-unsafe languages, where it has been most productive. However, in recent years, fuzzing has expanded to memory-safe languages as well.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Over several years, the CNCF has invested in fuzzing for its ecosystem. This testing has found numerous security vulnerabilities in widely used projects such as Helm (CVE-2022-36055, CVE-2022-23524, CVE-2022-23526, CVE-2022-23525), the Notary project (CVE-2023-25656), containerd (CVE-2023-25153), Crossplane (CVE-2023-28494, CVE-2023-27483) and Flux (CVE-2022-36049).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;oss-fuzz&#34;&gt;OSS-Fuzz&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#oss-fuzz&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To initiate the audit, Ada Logics auditors integrated the OpenTelemetry Collector into&amp;nbsp;&lt;a href=&#34;https://github.com/google/oss-fuzz&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSS-Fuzz&lt;/a&gt;. OSS-Fuzz is a service offered by Google to critical open source projects, free of charge. The service runs a project’s fuzzers with excess resources multiple times per week. If OSS-Fuzz finds a crash, it notifies the project. It then checks if the project has fixed the crash upstream and if so, marks the issue(s) as fixed. The whole workflow happens continuously on Google’s fuzzing infrastructure, supported by thousands of CPU cores. These testing resources outperform what developers or malicious threat actors can muster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-tests&#34;&gt;The tests&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#the-tests&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After the Ada Logics team integrated OpenTelemetry into OSS-Fuzz, the next step was to write a series of fuzz tests for the OpenTelemetry Collector. The auditors wrote 49 fuzz tests for core components of the Collector, as well as several receivers and processors in the&amp;nbsp;&lt;code&gt;opentelemetry-collector-contrib&lt;/code&gt;&amp;nbsp;repository.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The fuzz tests were left to run while the audit team observed their health in production. At the completion of the fuzzing audit, the 49 fuzz tests on the OSS-Fuzz platform were healthy.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To ensure continued reliability, the fuzz testing continues on the Collector even though the audit is complete.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-results-so-far&#34;&gt;The results so far&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#the-results-so-far&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fuzz testing for the Collector is ongoing, allowing for changes to the project to be tested as well. As of the date of this post, no crashes have been detected.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But the work is not done! The Ada Logics team created the Collector’s fuzzing setup as a reference implementation that other OpenTelemetry subprojects can rely on to create their own fuzz testing, ensuring greater stability for the project as a whole.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For more insight into the audit process, see the&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/community/blob/main/reports/ADA_Logics-collector-fuzzing-audit-2024.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;published summary&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;交叉发布自 Adam Korczynski 的 &lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/&#34;&gt;OpenTelemetry 博客&lt;/a&gt;&lt;/em&gt;&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry 很高兴地宣布由 &lt;a href=&#34;https://www.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CNCF&lt;/a 赞助的收集器模糊测试审核已完成&gt; 由 &lt;a href=&#34;https://adalogics.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ada Logics&lt;/a&gt; 执行。此次审核标志着 OpenTelemetry 项目迈出了重要一步，确保了 Collector 的用户安全性和可靠性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;what-is-fuzzing&#34;&gt;什么是模糊测试？&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#what -is-模糊测试&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;模糊测试是一种测试技术，它使用大量伪随机输入执行 API 并观察 API 的行为。由于其在发现安全漏洞和可靠性问题方面的经验成功，该技术越来越受欢迎。模糊测试最初开发的重点是测试以内存不安全语言实现的软件，在这种语言中它的效率最高。然而，近年来，模糊测试也扩展到了内存安全语言。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;多年来，CNCF 对其生态系统进行了模糊测试投资。此次测试在广泛使用的项目中发现了许多安全漏洞，例如 Helm（CVE-2022-36055、CVE-2022-23524、CVE-2022-23526、CVE-2022-23525）、Notary 项目（CVE-2023-25656） 、containerd (CVE-2023-25153)、Crossplane （CVE-2023-28494、CVE-2023-27483）和 Flux（CVE-2022-36049）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;oss-fuzz&#34;&gt;OSS-Fuzz&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#oss-fuzz&#34; &gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了启动审核，Ada Logics 审核员将 OpenTelemetry Collector 集成到 &lt;a href=&#34;https://github.com/google/oss-fuzz&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSS-Fuzz &lt;/a&gt;。 OSS-Fuzz 是 Google 向关键开源项目免费提供的一项服务。该服务每周多次使用多余的资源运行项目的模糊器。如果 OSS-Fuzz 发现崩溃，它会通知项目。然后，它检查项目是否已修复上游崩溃，如果是，则将问题标记为已修复。整个工作流程在 Google 的模糊测试基础设施上连续发生，并由数千个 CPU 核心支持。这些测试资源的性能优于开发人员或恶意威胁行为者所能聚集的资源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-tests&#34;&gt;测试&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#the-tests&#34;&gt; &lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ada Logics 团队将 OpenTelemetry 集成到 OSS-Fuzz 中后，下一步是为 OpenTelemetry Collector 编写一系列模糊测试。审核员为 Collector 的核心组件以及 &lt;code&gt;opentelemetry-collector-contrib&lt;/code&gt; 存储库中的多个接收器和处理器编写了 49 个模糊测试。&lt;/p&gt;&lt;p&gt;模糊测试继续运行，而审计团队则观察其在生产中的健康状况。模糊审计完成后，OSS-Fuzz平台上的49个模糊测试都是健康的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了确保持续的可靠性，即使审核已完成，模糊测试也会在收集器上继续进行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-results-so-far&#34;&gt;到目前为止的结果&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/ #the-results-so-far&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;收集器的模糊测试正在进行中，也允许对要测试的项目进行更改。截至本文发布之日，尚未检测到任何崩溃。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是工作还没有完成！ Ada Logics 团队创建了 Collector 的模糊测试设置作为参考实现，其他 OpenTelemetry 子项目可以依赖它来创建自己的模糊测试，从而确保整个项目具有更高的稳定性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有关审核流程的更多信息，请参阅&lt;a href=&#34;https://github.com/open-telemetry/community/blob/main/reports/ADA_Logics-collector-fuzzing-audit-2024.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;已发布摘要&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 29 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kubestronaut in Orbit: Sofonias Mengistu】在轨道上的 Kubetronaut：索福尼亚斯·门格斯图</title>
      <link>https://www.cncf.io/blog/2024/12/31/kubestronaut-in-orbit-sofonias-mengistu/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1650&#34; height=&#34;866&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1.jpg&#34; alt=&#34;Kubestronaut in Orbit: Sofonias Mengistu&#34; class=&#34;wp-image-122824&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1.jpg 1650w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-300x157.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-1024x537.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-1552x816.jpg 1552w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-900x472.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-381x200.jpg 381w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-590x310.jpg 590w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-1180x620.jpg 1180w&#34; sizes=&#34;auto, (max-width: 1650px) 100vw, 1650px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Get to know Sofonias&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This week’s Kubestronaut in Orbit is Sofonias Mengistu, a DevOps Engineer at Gebeya.INC based in Addis Ababa, Ethiopia. With 14 years of IT experience—five of those dedicated to cloud-native technologies—Sofonias has led numerous projects focused on implementing, managing, and securing Kubernetes environments. He got his start in networking, but his passion for DevOps inspired a career transition, allowing him to dive deeper into the cloud-native ecosystem. Sofonias is also an active contributor to the CNCF community, frequently participating in project meetups and webinars to share knowledge and collaborate with peers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’d like to be a Kubestronaut like Sofonias, get more details on the CNCF Kubestronaut page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;When did you get started with Kubernetes and/or cloud-native? What was your first project?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I began my journey with cloud and cloud-native technologies in 2018, using AWS as my first platform in a lab environment, primarily for study purposes. My early focus was on deploying static applications, and soon after, I delved into containerization with Docker and version control using GitHub. In 2021, after a friend recommended Kubernetes, I took on my first project, setting up an infrastructure and deploying a voting app on EKS using eksctl, which was a valuable hands-on learning experience. Since then, I have completed the KodeKloud Engineer program, up to the DevOps Architect level, where I’ve gained expertise through real-world DevOps tasks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What are the primary CNCF projects you work on or use today?&amp;nbsp; What projects have you enjoyed the most in your career?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I’ve had the opportunity to work with several key CNCF projects, starting with Kubernetes. Some of the others I’ve utilized include ArgoCD, Flux, Prometheus, CRI-O, CoreDNS, Istio, OpenTelemetry, PostgreSQL, and Kyverno. This is just a snapshot of my experience; I’ve explored various CNCF projects throughout my career.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;How have the certs or CNCF helped you in your career?&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF certifications have been instrumental in my career growth. They’ve validated my skills, opened doors to new opportunities, and helped me stand out in the competitive job market. In a short period, I’ve been able to secure senior positions and contribute significantly to projects thanks to my certifications.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What are some other books/sites/courses you recommend for people who want to work with k8s?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For beginners, &lt;a href=&#34;https://www.youtube.com/c/techworldwithnana&#34;&gt;Tech with Nana on YouTube&lt;/a&gt; is an excellent resource, and you should quickly move on to Mumshad Mannambeth’s 8-minute video (he also has &lt;a href=&#34;https://www.udemy.com/user/mumshad-mannambeth/&#34;&gt;CNCF endorsed content on Udemy&lt;/a&gt;). For the &lt;a href=&#34;https://www.cncf.io/training/certification/kcna/&#34;&gt;Kubernetes and Cloud Native Associate (KCNA)&lt;/a&gt; certification, KodeKloud is the best platform to start with. Back when I started, there wasn’t a KCNA certificate, so I began with CKA on KodeKloud, but now students should first gain basic Kubernetes knowledge with KCNA. KodeKloud or Udemy courses (check out the &lt;a href=&#34;https://business.udemy.com/cncf-endorsed-content/&#34;&gt;CNCF endorsed content&lt;/a&gt;), especially “Kubernetes from Scratch” by Mohamed, along with KodeKloud’s PDFs, are highly recommended.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For intermediate learners, focus on the &lt;a href=&#34;https://www.cncf.io/training/certification/cka/&#34;&gt;Certified Kubernetes Administrator (CKA)&lt;/a&gt; certification with KodeKloud and complete all tasks. After that, practice on &lt;a href=&#34;http://killer.sh/&#34;&gt;Killer.sh&lt;/a&gt;, and study books related to Kubernetes. You should also check out Tech with Nana’s 3.5-hour course on YouTube for further insights. Ensure you achieve at least 85 on Killer.sh to be well-prepared for the exam. After CKA, move on to &lt;a href=&#34;https://www.cncf.io/training/certification/ckad/&#34;&gt;Certified Kubernetes Application Developer (CKAD&lt;/a&gt;), using KodeKloud and Killer.sh for practice. Additionally, explore content on GitHub and work on DevOps projects from YouTube to gain practical experience. Feel free to reach out to me on LinkedIn for project recommendations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For advanced learners, &lt;a href=&#34;https://www.cncf.io/training/certification/cks/&#34;&gt;Certified Kubernetes Security Specialist (CKS)&lt;/a&gt; is the next step, and you can use free resources like Killer.sh on YouTube, KodeKloud, and GVR videos by Venkata Ramana Gali. These are excellent materials for advanced CKS preparation. The CKS requires more in-depth knowledge, which is why it’s considered advanced.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Finally, aim for the &lt;a href=&#34;https://www.cncf.io/training/certification/kcsa/&#34;&gt;Kubernetes and Cloud Security Associate (KCSA)&lt;/a&gt; certification, which can be completed in two weeks using the same materials you used for CKS.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What do you do in your free time?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I mainly study various tools in my free time, focusing on deploying lab-based applications on Azure, AWS, or GCP platforms. In addition to tech, I enjoy staying active through sports—biking, boxing, and swimming are my favorite activities that I regularly engage in.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What would you tell someone who is just starting their K8s certification journey? Any tips or tricks?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Honestly, I don’t have any secret tricks. I mainly use LinkedIn for networking and professional development. I often connect with people who have passed the certifications I’m interested in, and I ask them various questions beyond the exam content. My goal is not just to gather information, but also to explore potential job opportunities or collaborations. Remember, there’s no shortcut to success in Kubernetes. It requires dedication, hard work, and using reliable resources.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Today the Cloud native ecosystem is way more than Kubernetes. Do you plan to get other cloud native certifications from the CNCF ?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Yes! I’m interested in both the &lt;a href=&#34;https://www.cncf.io/training/certification/pca/&#34;&gt;Prometheus Certified Associate (PCA)&lt;/a&gt;, as well as the &lt;a href=&#34;https://training.linuxfoundation.org/certification/linux-foundation-certified-sysadmin-lfcs/&#34;&gt;Linux Foundation Certified System Administrator (LFCS)&lt;/a&gt; and &lt;a href=&#34;https://www.cncf.io/training/certification/cgoa/&#34;&gt;GitOps Certified Associate (CGOA)&lt;/a&gt; certs, and last but not least, a &lt;a href=&#34;https://training.linuxfoundation.org/?s=finops&#34;&gt;FinOps Certification&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1650”高度=“866”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1.jpg&#34; alt=&#34;轨道上的 Kubestronaut：索福尼亚斯·门吉斯图&#34;类=“wp-image-122824”srcset=“https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1.jpg 1650w， https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-300x157.jpg 300w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-1024x537.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-768x403.jpg 768w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-388x204.jpg 388w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-1552x816.jpg 1552w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-900x472.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-381x200.jpg 381w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-590x310.jpg 590w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-1180x620.jpg 1180w&#34;尺寸=“自动，（最大宽度：1650px）100vw，1650px”referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;了解 Sofonias&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本周在 Orbit 上的 Kubetronaut 是位于埃塞俄比亚亚的斯亚贝巴的 Gebeya.INC 的开发运营工程师 Sofonias Mengistu。 Sofonias 拥有 14 年的 IT 经验（其中 5 年致力于云原生技术），领导了众多专注于实施、管理和保护 Kubernetes 环境的项目。他的职业生涯始于网络，但他对 DevOps 的热情激发了他的职业转变，使他能够更深入地研究云原生生态系统。 Sofonias 也是 CNCF 社区的积极贡献者，经常参加项目聚会和网络研讨会，与同行分享知识和协作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想成为像 Sofonias 一样的 Kubetronaut，请在 CNCF Kubetronaut 页面上获取更多详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;您什么时候开始使用 Kubernetes 和/或云原生？您的第一个项目是什么？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我于 2018 年开始了云和云原生技术之旅，使用 AWS 作为我在实验室环境中的第一个平台，主要用于研究目的。我早期的重点是部署静态应用程序，不久之后，我深入研究了 Docker 容器化和使用 GitHub 的版本控制。 2021 年，在朋友推荐 Kubernetes 后，我开始了我的第一个项目，使用 eksctl 在 EKS 上建立基础设施并部署投票应用程序，这是一次宝贵的实践学习经验。罪从那时起，我已经完成了 KodeKloud 工程师计划，直至 DevOps 架构师级别，我通过实际的 DevOps 任务获得了专业知识。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;您目前从事或使用的主要 CNCF 项目是什么？  在您的职业生涯中您最喜欢哪些项目？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我有机会参与几个关键的 CNCF 项目，从 Kubernetes 开始。我使用过的其他一些工具包括 ArgoCD、Flux、Prometheus、CRI-O、CoreDNS、Istio、OpenTelemetry、PostgreSQL 和 Kyverno。这只是我的经历的一个缩影；在我的职业生涯中，我探索了各种 CNCF 项目。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;证书或 CNCF 对您的职业生涯有何帮助？ &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF 认证对我的职业发展发挥了重要作用。他们验证了我的技能，为我打开了新机会的大门，并帮助我在竞争激烈的就业市场中脱颖而出。在很短的时间内，由于我的认证，我已经能够获得高级职位并为项目做出重大贡献。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;您为想要使用 k8s 的人推荐了哪些其他书籍/网站/课程？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于初学者来说，&lt;a href=&#34;https://www.youtube.com/c/techworldwithnana&#34;&gt;YouTube 上的 Tech with Nana&lt;/a&gt; 是一个极好的资源，您应该快速转向 Mumshad Mannambeth 的 8分钟的视频（他还在 Udemy 上发布了 &lt;a href=&#34;https://www.udemy.com/user/mumshad-mannambeth/&#34;&gt;CNCF 认可的内容&lt;/a&gt;）。对于 &lt;a href=&#34;https://www.cncf.io/training/certification/kcna/&#34;&gt;Kubernetes 和 Cloud Native Associate (KCNA)&lt;/a&gt; 认证，KodeKloud 是最好的入门平台。刚开始的时候，没有 KCNA 证书，所以我从 KodeKloud 上的 CKA 开始，但现在学生应该首先通过 KCNA 获得基本的 Kubernetes 知识。 KodeKloud 或 Udemy 课程（查看 &lt;a href=&#34;https://business.udemy.com/cncf-endorsed-content/&#34;&gt;CNCF 认可的内容&lt;/a&gt;），尤其是 Mohamed 的“Kubernetes from Scratch”，以及强烈推荐使用 KodeKloud 的 PDF。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于中级学习者，重点关注 KodeKloud 的&lt;a href=&#34;https://www.cncf.io/training/certification/cka/&#34;&gt;认证 Kubernetes 管理员 (CKA)&lt;/a&gt; 认证并完成所有任务。之后在&lt;a href=&#34;http://killer.sh/&#34;&gt;Killer.sh&lt;/a&gt;上进行练习，并学习Kubernetes相关书籍。您还应该在 YouTube 上查看 Tech with Nana 的 3.5 小时课程，以获取更多见解。确保您在 Killer.sh 上取得至少 85 分，以便为考试做好充分准备。在 CKA 之后，继续进行&lt;a href=&#34;https://www.cncf.io/training/certification/ckad/&#34;&gt;认证 Kubernetes 应用程序开发人员 (CKAD&lt;/a&gt;)，使用 KodeKloud 和 Killer.sh 进行练习。此外，探索 GitHub 上的内容并参与 YouTube 上的 DevOps 项目以获得实践经验。请随时在 LinkedIn 上与我联系以获取项目推荐。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于高级学习者，&lt;a href=&#34;https://www.cncf.io/training/certification/cks/&#34;&gt;下一步是认证 Kubernetes 安全专家 (CKS)&lt;/a&gt;，您可以使用免费资源，例如 YouTube 上的 Killer.sh、KodeKloud 和 Venkata Ramana Gali 的 GVR 视频这些是高级 CKS 准备的极好材料。CKS 需要更深入的知识，这就是它被认为是高级的原因。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，争取获得 &lt;a href=&#34;https://www.cncf.io/training/certification/kcsa/&#34;&gt;Kubernetes 和云安全助理 (KCSA)&lt;/a&gt; 认证，该认证可在使用与 CKS 相同的材料两周。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;你空闲时间做什么？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我主要在空闲时间研究各种工具，重点是在 Azure、AWS 或 GCP 平台上部署基于实验室的应用程序。除了科技之外，我还喜欢通过运动保持活跃——骑自行车、拳击和游泳是我最喜欢经常参加的活动。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;您会对刚刚开始 K8s 认证之旅的人说些什么？有什么提示或技巧吗？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;老实说，我没有什么秘诀。我主要使用 LinkedIn 进行社交和职业发展。我经常与通过了我感兴趣的认证的人联系，并向他们询问考试内容之外的各种问题。我的目标不仅仅是收集信息，还探索潜在的工作机会或合作。请记住，Kubernetes 的成功没有捷径。它需要奉献精神、辛勤工作和使用可靠的资源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;如今，云原生生态系统远不止 Kubernetes。您是否计划获得 CNCF 的其他云原生认证？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;是的！我对 &lt;a href=&#34;https://www.cncf.io/training/certification/pca/&#34;&gt;Prometheus Certified Associate (PCA)&lt;/a&gt; 以及 &lt;a href=&#34; https://training.linuxfoundation.org/certification/linux-foundation-certified-sysadmin-lfcs/&#34;&gt;Linux 基金会认证系统管理员 (LFCS)&lt;/a&gt; 和 &lt;a href=&#34;https://www.cncf.io/training/certification/cgoa/&#34;&gt;GitOps 认证助理 (CGOA)&lt;/a&gt; 证书，最后但并非最不重要的一点是 &lt;a href=&#34;https://training .linuxfoundation.org/?s=finops&#34;&gt;FinOps 认证&lt;/a&gt;&lt;em&gt;。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 30 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Cloud native solutions for SMBs: unlocking scalability and resilience】面向中小型企业的云原生解决方案：释放可扩展性和弹性</title>
      <link>https://www.cncf.io/blog/2024/12/20/cloud-native-solutions-for-smbs-unlocking-scalability-and-resilience/</link>
      <description>【&lt;p&gt;&lt;em&gt;Ambassador post by &lt;a href=&#34;https://www.linkedin.com/in/ar4mirez/&#34;&gt;Angel Ramirez&lt;/a&gt;, CEO of Cuemby and CNCF ambassador.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As the technology landscape evolves, businesses must embrace innovations that enable them to adapt and thrive. Cloud-native technologies, championed by the CNCF community, have emerged as essential tools for achieving scalability, agility, and resilience. For small and medium-sized businesses (SMBs), these solutions offer a unique opportunity to streamline operations, reduce costs, and accelerate growth.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Drawing from Cuemby’s experience in implementing cloud-native practices, this article explores the transformative potential of these technologies and their practical impact on SMBs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The Business Case for Cloud Native Technologies&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Cost Efficiency with Kubernetes and CNCF Projects&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Migrating to cloud-native solutions helps SMBs reallocate IT budgets more effectively. Kubernetes, a CNCF graduated project, eliminates the need for costly hardware investments by orchestrating containerized applications across cloud environments. Businesses only pay for the resources they use, significantly lowering operational costs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Take a mid-sized company with an annual IT budget of $5 million: moving to the cloud could result in savings ranging from $750,000 to $1.25 million annually (Flexera, 2023). These freed-up resources can then be strategically redirected toward growth-driving activities, such as marketing, product development, or customer acquisition.&lt;br&gt;&lt;br&gt;But the savings don’t stop there. Cloud solutions operate on a pay-as-you-go model, meaning businesses only pay for the resources they actually use. This is especially advantageous for companies with fluctuating demand, such as seasonal industries. For example, organizations in retail or travel could cut costs by up to 30% during low-demand periods by scaling down their usage (Deloitte, 2022). This flexibility not only prevents overinvestment but also optimizes operational expenses.&lt;br&gt;&lt;br&gt;In addition to infrastructure savings, maintenance costs are significantly reduced. On-premises systems often require 15% to 20% of the IT budget for hardware refreshes and updates (TechRepublic, 2021). With cloud migration, these tasks are handled by the cloud provider, enabling businesses to focus on their core objectives rather than routine IT upkeep.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Scalability Without Limits&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cloud-native platforms like Kubernetes enable businesses to scale operations in minutes rather than months. According to CNCF reports, organizations adopting Kubernetes see a 60% reduction in time-to-market for new services.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;During seasonal peaks, industries such as retail have relied on Kubernetes to dynamically scale workloads. For example, during high-demand periods like Black Friday, businesses using cloud platforms report improved performance with up to 40% less downtime compared to those relying on on-premises infrastructure (McKinsey, 2021). This ensures that operations remain uninterrupted, enhancing customer satisfaction and protecting revenue during crucial periods.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Practical Use Cases for SMBs&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Simplifying Maintenance with Open Source Tools&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Real-time monitoring and logging are essential for minimizing downtime. Tools like Prometheus and Fluentd, widely adopted CNCF projects, offer robust solutions for automating these tasks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Small businesses often lack the capacity to maintain and update traditional IT infrastructure. By migrating to the cloud, they can eliminate 15% to 20% of their IT budget typically allocated to hardware maintenance and upgrades (TechRepublic, 2021). Cloud platforms reduce downtime by leveraging built-in redundancies and failover mechanisms. For example, a Gartner 2023 study highlighted that businesses using cloud infrastructure experience 35% fewer unplanned outages compared to those with traditional on-premises systems (Gartner, 2023).&lt;br&gt;&lt;br&gt;This delegation of maintenance tasks empowers businesses to concentrate on growth activities such as customer engagement, product innovation, and scaling operations. For instance, a small e-commerce company that shifted to a cloud-based system reduced its IT overhead by 35%, enabling it to allocate more resources to digital marketing and inventory expansion (Flexera, 2023).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Collaboration and Flexibility for Distributed Teams&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cloud computing transforms collaboration, especially for businesses adopting remote or hybrid work models. According to a 2023 Gartner survey, organizations using cloud-based collaboration tools like Google Workspace or Microsoft Teams improved productivity by 25% and reduced project turnaround times by 18%.&lt;br&gt;&lt;br&gt;Small businesses with distributed teams particularly benefit from real-time collaboration features. Employees can access the same version of files, ensuring consistency and reducing errors. In one case, a startup leveraging cloud solutions for remote work reported a 30% increase in employee satisfaction due to the flexibility of accessing work resources from any device, anywhere (Deloitte, 2022). Additionally, cloud-based systems support secure access, ensuring sensitive data remains protected during remote operations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Transforming Business Models Through Cloud&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Rapid Prototyping&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In highly competitive industries like technology and e-commerce, speed is essential. The cloud goes beyond rapid scalability by enabling businesses to create sandbox environments, where new ideas can be tested, refined, and deployed with minimal risk. For example, retail companies can simulate and optimize seasonal promotions, while technology firms can rapidly prototype new applications without the delays of traditional infrastructure. This agility not only shortens time-to-market cycles but also empowers businesses to experiment and innovate with confidence, staying ahead of evolving market demands.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Aligning Technology with Strategic Goals&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Adopting the latest technologies is only part of the equation—using them strategically is where the cloud truly transforms businesses. A cloud-enabled digital transformation roadmap ensures every tool and system aligns with long-term business objectives. Leveraging predictive analytics and AI-driven insights in the cloud allows companies to proactively optimize supply chains, improve operational efficiency, and deliver highly personalized customer experiences. This strategic alignment ensures that technology supports growth, innovation, and competitive advantage rather than becoming a siloed resource.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;How Cloud Computing Has Changed Business&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Advanced Security and Compliance: Protecting What Matters Most&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cloud providers like AWS, Microsoft Azure, and Google Cloud collectively invest billions annually into cutting-edge security measures, including encryption, real-time threat monitoring, and advanced firewalls. In 2021 alone, Alphabet, Amazon, Meta, Apple and Microsoft spent a combined&amp;nbsp; $2.4 billion on funding or acquiring 23 cybersecurity companies (Statista). These investments ensure small and large businesses alike benefit from enterprise-grade security without the need for their own IT infrastructure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cloud platforms simplify compliance with regulations like GDPR, SOC 2, and HIPAA. A 2022 study by Forrester Research found that 68% of organizations using cloud services reduced the time spent on compliance-related tasks by 40%, streamlining audits and ensuring adherence to global standards (Forrester, 2022). Businesses using cloud-based tools can ensure compliance with automated data management and reporting features, mitigating risks and building trust among stakeholders.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Resilience Through Disaster Recovery: Continuity Without Compromise&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Disruptions such as natural disasters, cyberattacks, or hardware failures can severely impact business operations. Cloud-based disaster recovery solutions offer cost-effective and efficient means to safeguard data and maintain business continuity. For example, AWS Elastic Disaster Recovery provides scalable and reliable recovery options, enabling businesses to resume operations swiftly after a disruption (Amazon Web Services).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By utilizing cloud-based disaster recovery services, businesses can ensure their data remains accessible and protected, even in the face of unforeseen events. This resilience is invaluable for maintaining customer trust and sustaining operations during challenging times.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Embrace a Cloud-Native Future&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The journey to cloud migration is a call to action for businesses to reimagine their operations and embrace a future where agility and innovation define success. As companies adopt cloud solutions to drive digital transformation, they are also laying the groundwork for resilience and competitiveness in a rapidly evolving market.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To thrive in this cloud-first world, it’s essential to build strong partnerships. Collaborating with experts who understand the complexities of cloud adoption can make the transition seamless and ensure your business maximizes the value of this transformative technology. Whether you’re looking to streamline processes or scale operations, the right partner can help design a roadmap tailored to your needs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cuemby is dedicated to helping organizations navigate this transformation. By combining technical expertise with practical insights, we empower businesses to achieve resilience, scalability, and innovation. Discover how Cuemby’s cloud-native solutions can help your business succeed. Visit &lt;a href=&#34;https://www.cuemby.com/&#34;&gt;https://www.cuemby.com&lt;/a&gt; to learn more, or schedule a consultation to explore how cloud computing can optimize your operations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For more inspiration and resources, explore the CNCF blog and news section to stay updated on the latest trends and advancements in the cloud-native ecosystem. Let’s build a scalable and resilient future together.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;Cuemby 首席执行官兼 CNCF 大使 &lt;a href=&#34;https://www.linkedin.com/in/ar4mirez/&#34;&gt;Angel Ramirez&lt;/a&gt; 发表大使帖子。&lt;/em&gt;&lt;/em&gt;&lt;/a&gt; p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着技术格局的发展，企业必须拥抱创新，使其能够适应并蓬勃发展。 CNCF 社区倡导的云原生技术已成为实现可扩展性、敏捷性和弹性的重要工具。对于中小型企业 (SMB)，这些解决方案提供了简化运营、降低成本和加速增长的独特机会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本文借鉴 Cuemby 在实施云原生实践方面的经验，探讨了这些技术的变革潜力及其对中小企业的实际影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;云原生技术的商业案例&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Kubernetes 和 CNCF 项目的成本效率&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;迁移到云原生解决方案可帮助中小型企业更有效地重新分配 IT 预算。 Kubernetes 是 CNCF 毕业项目，通过跨云环境编排容器化应用程序，消除了昂贵的硬件投资。企业只需为他们使用的资源付费，从而显着降低运营成本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以一家年度 IT 预算为 500 万美元的中型公司为例：迁移到云可能每年节省 75 万美元到 125 万美元（Flexera，2023 年）。然后，可以将这些释放的资源战略性地重新用于推动增长的活动，例如营销、产品开发或客户获取。&lt;br&gt;&lt;br&gt;但节省的费用还不止于此。云解决方案采用按需付费模式，这意味着企业只需为实际使用的资源付费。这对于需求波动的公司（例如季节性行业）尤其有利。例如，零售或旅游组织可以通过减少使用量在需求低迷时期将成本削减高达 30%（Deloitte，2022）。这种灵活性不仅可以防止过度投资，还可以优化运营费用。&lt;br&gt;&lt;br&gt;除了节省基础设施之外，还可以显着降低维护成本。本地系统通常需要 15% 到 20% 的 IT 预算用于硬件更新和更新（TechRepublic，2021）。通过云迁移，这些任务由云提供商处理，使企业能够专注于其核心目标，而不是日常 IT 维护。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;无限制的可扩展性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 等云原生平台使企业能够在几分钟而不是几个月内扩展运营。根据 CNCF 报告，采用 Kubernetes 的组织发现新服务的上市时间缩短了 60%。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在季节性高峰期间，零售等行业依赖 Kubernetes 来动态扩展工作负载。例如，在黑色星期五等高需求时期，使用云平台的企业报告性能有所改善与依赖本地基础设施的企业相比，停机时间减少高达 40%（麦肯锡，2021 年）。这可确保运营不间断，提高客户满意度并在关键时期保护收入。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;中小型企业的实际用例&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;使用开源工具简化维护&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;实时监控和记录对于最大限度地减少停机时间至关重要。 Prometheus 和 Fluentd 等广泛采用的 CNCF 项目等工具为自动化这些任务提供了强大的解决方案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;小型企业通常缺乏维护和更新传统 IT 基础设施的能力。通过迁移到云，他们可以减少通常分配给硬件维护和升级的 IT 预算的 15% 到 20%（TechRepublic，2021）。云平台通过利用内置的冗余和故障转移机制来减少停机时间。例如，Gartner 2023 年的一项研究强调，与使用传统本地系统的企业相比，使用云基础设施的企业所经历的意外中断减少了 35%（Gartner，2023）。&lt;br&gt;&lt;br&gt;这种维护任务的委派使企业能够专注于增长活动，例如客户参与、产品创新和规模化运营。例如，一家小型电子商务公司转向基于云的系统，其 IT 开销减少了 35%，使其能够将更多资源分配给数字营销和库存扩张（Flexera，2023）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;分布式团队的协作和灵活性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;云计算改变了协作方式，特别是对于采用远程或混合工作模式的企业而言。根据 Gartner 2023 年的一项调查，使用 Google Workspace 或 Microsoft Teams 等基于云的协作工具的组织将工作效率提高了 25%，并将项目周转时间缩短了 18%。&lt;br&gt;&lt;br&gt;拥有分布式团队的小型企业尤其受益于实时时间协作功能。员工可以访问相同版本的文件，确保一致性并减少错误。在一个案例中，一家利用云解决方案进行远程工作的初创公司报告称，由于可以从任何地方的任何设备灵活地访问工作资源，员工满意度提高了 30%（Deloitte，2022）。此外，基于云的系统支持安全访问，确保敏感数据在远程操作期间保持受到保护。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;通过云转变业务模式&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;快速原型制作&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在科技和电子商务等竞争激烈的行业中，速度至关重要。云超越了快速可扩展性，使企业能够创建沙盒环境，在沙盒环境中可以以最小的风险测试、完善和部署新想法。例如，零售公司可以模拟和优化季节性促销，而科技公司可以快速制作新应用程序的原型。阳离子，而不会出现传统基础设施的延迟。这种敏捷性不仅缩短了上市周期，还使企业能够充满信心地进行试验和创新，从而领先于不断变化的市场需求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;使技术与战略目标保持一致&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;采用最新技术只是其中的一部分——战略性地使用它们才是云真正改变业务的地方。支持云的数字化转型路线图可确保每个工具和系统都符合长期业务目标。利用云中的预测分析和人工智能驱动的洞察力，企业可以主动优化供应链、提高运营效率并提供高度个性化的客户体验。这种战略联盟确保技术支持增长、创新和竞争优势，而不是成为孤立的资源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;云计算如何改变业务&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;高级安全性和合规性：保护最重要的内容&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;AWS、Microsoft Azure 和 Google Cloud 等云提供商每年总共投资数十亿美元用于尖端安全措施，包括加密、实时威胁监控和高级防火墙。仅 2021 年，Alphabet、亚马逊、Meta、苹果和微软就总共花费了 24 亿美元资助或收购 23 家网络安全公司 (Statista)。这些投资可确保小型和大型企业都受益于企业级安全性，而无需拥有自己的 IT 基础设施。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;云平台简化了 GDPR、SOC 2 和 HIPAA 等法规的合规性。 Forrester Research 2022 年的一项研究发现，68% 使用云服务的组织将合规相关任务所花费的时间减少了 40%，从而简化了审计并确保遵守全球标准（Forrester，2022）。使用基于云的工具的企业可以确保遵守自动化数据管理和报告功能，从而降低风险并在利益相关者之间建立信任。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;通过灾难恢复实现弹性：不妥协的连续性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自然灾害、网络攻击或硬件故障等中断可能会严重影响业务运营。基于云的灾难恢复解决方案提供了经济有效且高效的方法来保护数据并保持业务连续性。例如，AWS Elastic Disaster Recovery 提供可扩展且可靠的恢复选项，使企业能够在中断后迅速恢复运营（Amazon Web Services）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过利用基于云的灾难恢复服务，即使面对不可预见的事件，企业也可以确保其数据仍然可访问并受到保护。这种弹性对于在充满挑战的时期维持客户信任和维持运营非常宝贵。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;拥抱 Cloud-Nat我的未来&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;云迁移之旅呼吁企业采取行动，重新构想其运营并拥抱敏捷性和创新决定成功的未来。随着公司采用云解决方案来推动数字化转型，他们也为快速发展的市场中的弹性和竞争力奠定了基础。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要在这个云优先的世界中蓬勃发展，建立牢固的合作伙伴关系至关重要。与了解云采用复杂性的专家合作可以实现无缝过渡，并确保您的企业最大限度地发挥这一变革性技术的价值。无论您是希望简化流程还是扩大运营规模，合适的合作伙伴都可以帮助您设计适合您需求的路线图。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cuemby 致力于帮助组织应对这一转型。通过将技术专业知识与实践见解相结合，我们帮助企业实现弹性、可扩展性和创新。了解 Cuemby 的云原生解决方案如何帮助您的业务取得成功。请访问 &lt;a href=&#34;https://www.cuemby.com/&#34;&gt;https://www.cuemby.com&lt;/a&gt; 了解更多信息，或安排咨询以探索云计算如何优化您的运营。&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如需更多灵感和资源，请探索 CNCF 博客和新闻部分，了解云原生生态系统的最新趋势和进展。让我们共同构建一个可扩展且有弹性的未来。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 19 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Unlocking cloud native security with Cilium and eBPF】使用 Cilium 和 eBPF 解锁云原生安全</title>
      <link>https://www.cncf.io/blog/2025/01/02/unlocking-cloud-native-security-with-cilium-and-ebpf/</link>
      <description>【&lt;p&gt;Ambassador post originally published on &lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an&#34;&gt;Dev.to&lt;/a&gt; by Syed Asad Raza&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Introduction 🌐🔒🚀&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As cloud-native applications scale, securing workloads while maintaining performance becomes critical. This is where Cilium, an open-source networking, observability, and security tool, shines. Backed by the power of eBPF (Extended Berkeley Packet Filter), Cilium provides secure, high-performance communication between microservices in Kubernetes environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#what-is-cilium&#34;&gt;&lt;/a&gt;What is Cilium? 🔍💻🔧&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium is a cloud-native networking solution that secures and monitors service-to-service communication. It leverages eBPF to operate within the Linux kernel, enabling dynamic programmability and reducing the performance overhead associated with traditional firewalls.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#key-features-of-cilium&#34;&gt;&lt;/a&gt;Key Features of Cilium&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Network Security:&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Identity-aware security policies based on Kubernetes labels.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Transparent encryption for secure data transport.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Observability:&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Fine-grained visibility into network traffic using Hubble, Cilium’s observability platform.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Real-time service dependency maps and network flow monitoring.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Scalability and Performance:&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kernel-level packet processing with eBPF for low latency.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Scales seamlessly in large Kubernetes clusters.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Service Mesh Integration:&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Service mesh capabilities like traffic management, load balancing, and security.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Works alongside existing tools like Istio and Envoy.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#how-cilium-works&#34;&gt;&lt;/a&gt;How Cilium Works ⚙️📡📈&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium uses eBPF programs attached to various points in the Linux kernel, such as network interfaces and system calls. This allows it to inspect, modify, and route network packets in real-time. Kubernetes network policies are automatically translated into eBPF code, ensuring secure communication.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#deploying-cilium&#34;&gt;&lt;/a&gt;Deploying Cilium 🚀📦🔧&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Prepare Your Environment:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Ensure you have a running Kubernetes cluster.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Install kubectl and helm if not already installed.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Add the Cilium Helm Repository:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm repo add cilium https://helm.cilium.io/&#xA;helm repo update&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Deploy Cilium Using Helm:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm install cilium cilium/cilium --version &amp;lt;latest-version&amp;gt; \&#xA;  --namespace kube-system \&#xA;  --set kubeProxyReplacement=strict \&#xA;  --set k8sServiceHost=&amp;lt;your-k8s-api-server&amp;gt; \&#xA;  --set k8sServicePort=&amp;lt;your-k8s-api-port&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Verify Deployment:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl get pods -n kube-system&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ensure that all Cilium-related pods are running.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Enable Hubble (Optional for Observability):&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm upgrade cilium cilium/cilium --namespace kube-system \&#xA;  --set hubble.enabled=true \&#xA;  --set hubble.relay.enabled=true \&#xA;  --set hubble.ui.enabled=true&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#getting-started-with-cilium&#34;&gt;&lt;/a&gt;Getting Started with Cilium 🛡️👨‍💻📊&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Define Policies:&lt;/strong&gt;&amp;nbsp;Create Kubernetes NetworkPolicies or Cilium-specific policies.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Monitor Traffic:&lt;/strong&gt;&amp;nbsp;Use Hubble UI or CLI for observability.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#why-choose-cilium&#34;&gt;&lt;/a&gt;Why Choose Cilium? ⚡🔐👀&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Performance:&lt;/strong&gt;&amp;nbsp;Kernel-level processing ensures minimal performance impact.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt;&amp;nbsp;Built-in encryption and identity-aware access controls.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Visibility:&lt;/strong&gt;&amp;nbsp;Deep observability into cloud-native workloads.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#realworld-use-cases&#34;&gt;&lt;/a&gt;Real-World Use Cases 🌍🏦🛒&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;–&amp;nbsp;&lt;strong&gt;Financial Services:&lt;/strong&gt;&amp;nbsp;Enforcing strict network security for sensitive workloads.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;–&amp;nbsp;&lt;strong&gt;E-commerce:&lt;/strong&gt;&amp;nbsp;Scaling secure and reliable microservices.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;–&amp;nbsp;&lt;strong&gt;Healthcare:&lt;/strong&gt;&amp;nbsp;Ensuring data compliance and observability.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#conclusion&#34;&gt;&lt;/a&gt;Conclusion 🎯✅📈&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium is redefining cloud-native security and observability with eBPF. Its seamless integration with Kubernetes, superior performance, and deep visibility make it a go-to solution for modern cloud-native architectures. Whether securing a microservices-based application or building a scalable Kubernetes platform, Cilium offers the best of both worlds: powerful security and unmatched performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#call-to-action&#34;&gt;&lt;/a&gt;Call to Action: 📢📚✨&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ready to enhance your Kubernetes security? Explore the official Cilium documentation and start your journey toward a more secure and observable cloud-native environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;THANK’S FOR READING&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;大使帖子最初由 &lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an&#34;&gt;Dev.to&lt;/a&gt; 发布赛义德·阿萨德·拉扎&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;简介🌐🔒🚀&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着云原生应用程序的扩展，在保持性能的同时保护工作负载变得至关重要。这就是 Cilium（一款开源网络、可观察性和安全工具）的闪光点。在 eBPF（扩展伯克利数据包过滤器）的支持下，Cilium 在 Kubernetes 环境中的微服务之间提供安全、高性能的通信。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#what-is-cilium &#34;&gt;&lt;/a&gt;什么是纤毛？ 🔍💻🔧&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium 是一种云原生网络解决方案，可保护和监控服务间通信。它利用 eBPF 在 Linux 内核中运行，从而实现动态可编程性并降低与传统防火墙相关的性能开销。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#key-features-of -cilium&#34;&gt;&lt;/a&gt;Cilium 的主要特点&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;网络安全：&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;基于 Kubernetes 标签的身份感知安全策略。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;透明加密，确保数据安全传输。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可观察性：&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用 Cilium 的可观测平台 Hubble 对网络流量进行细粒度可见性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;实时服务依赖关系图和网络流量监控。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可扩展性和性能：&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用 eBPF 进行内核级数据包处理，以实现低延迟。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在大型 Kubernetes 集群中无缝扩展。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;服务网格集成：&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;流量管理、负载平衡和安全性等服务网格功能。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;与 Istio 和 Envoy 等现有工具配合使用。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#how-cilium-works &#34;&gt;&lt;/a&gt;Cilium 的工作原理⚙️📡📈&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium 使用附加到 Linux 内核中各个点的 eBPF 程序，例如网络接口和系统调用。这使得它能够实时检查、修改和路由网络数据包。 Kubernetes网络策略自动转换为eBPF代码，确保安全通信。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#deploying-cilium&#34;&gt; &lt;/a&gt;部署 Cilium 🚀📦🔧&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;准备您的环境：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;确保您有一个正在运行的 Kubernetes 集群。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;如果尚未安装 kubectl 和 helm，请安装已安装。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;添加 Cilium Helm 存储库：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm 仓库添加 cilium https://helm.cilium.io/&#xA;舵回购更新&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;使用 Helm 部署 Cilium：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm install cilium cilium/cilium --version &lt;最新版本&gt; \&#xA;  --命名空间 kube-system \&#xA;  --set kubeProxyReplacement=严格 \&#xA;  --set k8sServiceHost=&lt;your-k8s-api-server&gt; \&#xA;  --set k8sServicePort=&lt;您的 k8s-api-端口&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;验证部署：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl 获取 pods -n kube-system&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;确保所有与 Cilium 相关的 pod 都在运行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;启用 Hubble（可观测性可选）：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm 升级 cilium cilium/cilium --namespace kube-system \&#xA;  --set hubble.enabled=true \&#xA;  --set hubble.relay.enabled=true \&#xA;  --set hubble.ui.enabled=true&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#getting-started-with -cilium&#34;&gt;&lt;/a&gt;开始使用 Cilium 🛡️👨‍💻📊&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;定义策略&lt;/strong&gt;：创建 Kubernetes NetworkPolicies 或 Cilium 特定策略。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;监控流量&lt;/strong&gt;：使用 Hubble UI 或 CLI 进行观察。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#why-choose-cilium &#34;&gt;&lt;/a&gt;为什么选择Cilium？ ⚡🔐👀&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;性能&lt;/strong&gt;：内核级处理可确保对性能的影响降至最低。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;安全性&lt;/strong&gt;：内置加密和身份识别访问控制。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可见性&lt;/strong&gt;：可深入观察云原生工作负载。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#realworld-use-cases &#34;&gt;&lt;/a&gt;真实世界用例🌍🏦🛒&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;– &lt;strong&gt;金融服务&lt;/strong&gt;：对敏感工作负载实施严格的网络安全。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;– &lt;strong&gt;电子商务&lt;/strong&gt;：扩展安全可靠的微服务。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;–&lt;strong&gt;医疗保健&lt;/strong&gt;：确保数据合规性和可观察性。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#conclusion&#34;&gt;&lt;/ a&gt;结论🎯✅📈&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium 正在通过 eBPF 重新定义云原生安全性和可观察性。它与 Kubernetes 的无缝集成、卓越的性能和深入的可见性使其成为首选现代云原生架构的解决方案。无论是保护基于微服务的应用程序还是构建可扩展的 Kubernetes 平台，Cilium 都能提供两全其美的功能：强大的安全性和无与伦比的性能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#call-to-action &#34;&gt;&lt;/a&gt;号召性用语：📢📚✨&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;准备好增强您的 Kubernetes 安全性了吗？探索 Cilium 官方文档，开始迈向更安全、更可观察的云原生环境的旅程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢您的阅读&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 01 Jan 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【OpenTelemetry.io 2024 review】OpenTelemetry.io 2024 回顾</title>
      <link>https://www.cncf.io/blog/2024/12/20/opentelemetry-io-2024-review/</link>
      <description>【&lt;p&gt;&lt;em&gt;Project post originally published on the &lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/&#34;&gt;OpenTelemetry blog&lt;/a&gt; by&amp;nbsp;&lt;a href=&#34;https://github.com/svrnm&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Severin Neumann&lt;/a&gt;&amp;nbsp;(Cisco),&amp;nbsp;&lt;a href=&#34;https://github.com/chalin/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Patrice Chalin&lt;/a&gt;&amp;nbsp;(CNCF),&amp;nbsp;&lt;a href=&#34;https://github.com/tiffany76&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Tiffany Hrabusa&lt;/a&gt;&amp;nbsp;(Grafana Labs)&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As 2024 draws to a close, we reflect on the year and share some insights and accomplishments from&amp;nbsp;&lt;a href=&#34;https://docs.google.com/document/d/1wW0jLldwXN8Nptq2xmgETGbGn9eWP8fitvD5njM-xZY&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SIG Communications&lt;/a&gt;, the team responsible for managing this website, blog, and documentation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;key-achievements-of-2024&#34;&gt;Key achievements of 2024&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#key-achievements-of-2024&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Several key accomplishments stand out in our efforts to make OpenTelemetry documentation more accessible, user-friendly, and impactful for our global community.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;multilingual-documentation&#34;&gt;Multilingual documentation&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#multilingual-documentation&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A major accomplishment this year was achieving multilingual support with the launch of our&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/blog/2024/docs-localized/&#34;&gt;localized documentation&lt;/a&gt;. Thanks to the efforts of localization teams, over 120 pages were translated from English into other languages. The available translations include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/zh/&#34;&gt;Chinese&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/fr/&#34;&gt;French&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/ja/&#34;&gt;Japanese&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/pt/&#34;&gt;Portuguese&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/es/&#34;&gt;Spanish&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A big thank you to everyone who contributed to this initiative. These translations make OpenTelemetry more accessible, enhancing the user experience for our global audience.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;ia-improvements&#34;&gt;Information Architecture (IA) improvements&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#ia-improvements&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To&amp;nbsp;&lt;strong&gt;improve readership experience&lt;/strong&gt;&amp;nbsp;and make OpenTelemetry&amp;nbsp;&lt;strong&gt;documentation more intuitive and accessible&lt;/strong&gt;, we undertook important updates to our Information Architecture (IA) this year. These changes were driven by the need to better organize content, clarify the purpose of key sections, and provide a more structured and user-friendly experience for end-users and developers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Key IA updates include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Renaming the&amp;nbsp;&lt;code&gt;Instrumentation&lt;/code&gt;&amp;nbsp;section to&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/docs/languages/&#34;&gt;Language APIs &amp;amp; SDKs&lt;/a&gt;&amp;nbsp;to better reflect its purpose and set clearer expectations for users.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Moving&amp;nbsp;&lt;code&gt;Automatic Instrumentation&lt;/code&gt;&amp;nbsp;into the new&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/docs/zero-code/&#34;&gt;Zero-code Instrumentation&lt;/a&gt;&amp;nbsp;section to more clearly distinguish between instrumentation APIs &amp;amp; SDKs and tools like the Java agent, used to inject telemetry.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Following these updates, the Java SIG&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/discussions/4853&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;proposed&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pulls?q=is%3Apr+java+is%3Aclosed+label%3Asig%3Ajava+merged%3A2024-01-01..2024-12-31+author%3Ajack-berg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;reorganized their documentation&lt;/a&gt;, introducing substantial improvements to the structure and clarity of the content. The bulk of this effort is reflected in these PRs:&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pull/4966&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Refactor Java SDK and configuration #4966&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pull/5276&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Refactor Java instrumentation #5276&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pull/5590&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Move performance to Java agent, merge Javadoc into API page #5590&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;Kudos to&amp;nbsp;&lt;a href=&#34;https://github.com/jack-berg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jack Berg&lt;/a&gt;&amp;nbsp;and the&amp;nbsp;&lt;a href=&#34;https://docs.google.com/document/d/1D7ZD93LxSWexHeztHohRp5yeoTzsi9Dj1HRm7Tad-hM&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Java SIG&lt;/a&gt;&amp;nbsp;for their exemplary leadership in improving language-SIG documentation!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Next year, we aim to redesign how OpenTelemetry is introduced to beginners, ensuring a smoother and more accessible learning experience. If you’re passionate about making OpenTelemetry easier to understand and use, we’d love your contributions —&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/community/pull/2427&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;join us&lt;/a&gt;&amp;nbsp;in this collaborative effort.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;year-in-numbers&#34;&gt;Year in numbers&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#year-in-numbers&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;contributions&#34;&gt;Contributions&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#contributions&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/releases/tag/2022.12&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;December 2022&lt;/a&gt;, we started&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/releases&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;monthly releases&lt;/a&gt;&amp;nbsp;of the website so that we could regularly summarize activities and highlight significant contributions. These releases allow us to track progress over time and perform long-term comparisons.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For instance, comparing the periods&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/compare/2022.12...2023.11&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;December 2022 to November 2023&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/compare/2023.12...2024.11&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;December 2023 to November 2024&lt;/a&gt;, we observed an upward trend in contributions:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commits&lt;/strong&gt;&amp;nbsp;increased 33% from 1,011 to 1,340&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&amp;nbsp;grew 15% from 92 to 106&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The only metric that declined was the&amp;nbsp;&lt;strong&gt;number of files changed&lt;/strong&gt;, which decreased from 1,864 to 1,624 (13%)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Since the repository’s inception in April 2019, the community has seen remarkable growth, with:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;3,824 merged pull requests (3,982 commits) by&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;768 contributors&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thank you to every contributor for helping to build and improve the OpenTelemetry website. Your efforts make a difference!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;which-pages-were-the-most-popular&#34;&gt;Which pages were the most popular?&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#which-pages-were-the-most-popular&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;According to our publicly available&amp;nbsp;&lt;a href=&#34;https://lookerstudio.google.com/s/tSTKxK1ECeU&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;analytics&lt;/a&gt;&amp;nbsp;data,&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/&#34;&gt;opentelemetry.io&lt;/a&gt;&amp;nbsp;was viewed&amp;nbsp;&lt;strong&gt;12 million&lt;/strong&gt;&amp;nbsp;times across 4 million sessions this year. This marks a&amp;nbsp;&lt;strong&gt;16% increase&lt;/strong&gt;&amp;nbsp;over last year’s nearly 10 million views and over 3 million sessions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The most popular pages and sections of the documentation were:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Page/Section&lt;/th&gt;&lt;th&gt;Views&lt;/th&gt;&lt;th&gt;%&amp;nbsp;&lt;sup&gt;&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;https://opentelemetry.io/docs/what-is-opentelemetry/&#34;&gt;What is OpenTelemetry?&lt;/a&gt;&lt;/td&gt;&lt;td&gt;290K&lt;/td&gt;&lt;td&gt;2.4%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;https://opentelemetry.io/docs/collector&#34;&gt;Collector&lt;/a&gt;&lt;/td&gt;&lt;td&gt;1.3M&lt;/td&gt;&lt;td&gt;10.5%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;https://opentelemetry.io/docs/what-is-opentelemetry/&#34;&gt;Concepts&lt;/a&gt;&lt;/td&gt;&lt;td&gt;1.2M&lt;/td&gt;&lt;td&gt;9.8%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;https://opentelemetry.io/docs/demo/&#34;&gt;Demo&lt;/a&gt;&lt;/td&gt;&lt;td&gt;829K&lt;/td&gt;&lt;td&gt;6.7%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;https://opentelemetry.io/ecosystem/&#34;&gt;Ecosystem&lt;/a&gt;&lt;/td&gt;&lt;td&gt;500K&lt;/td&gt;&lt;td&gt;4.0%&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;trivia&#34;&gt;Fun trivia&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#trivia&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Did you know that:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;“OpenTelemetry” occurs 7.3K times in the English website pages, making it the 3rd most frequent word after “the” and “to.” The word “collector” is used 3.2K times, putting it in 11th place!&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34;&gt;Collector landing page&lt;/a&gt;&amp;nbsp;has been the most updated file since its creation, with 91 changes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;With 511 commits (27K additions, and 10K deletions) the&amp;nbsp;&lt;a href=&#34;https://github.com/opentelemetrybot&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;opentelemetrybot&lt;/a&gt;&amp;nbsp;is the fourth most active contributor. Go bots!&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The record for the PR with the most comments this year—and of all time is held by:&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pull/5575&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Generative AI updates blog post (#5575)&lt;/a&gt;, with 150 comments!&lt;/li&gt;&lt;/ul&gt;A close second goes to:&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pull/5380&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Portuguese translation of Go instrumentation&lt;/a&gt;, with 146 comments&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;amazing-community&#34;&gt;Amazing Community&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#amazing-community&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pulls?q=is%3Apr+is%3Amerged+merged%3A2024-01-01..2024-12-31&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;1.3K PRs&lt;/a&gt;, we collectively contributed an equally impressive number of reviews to ensure that content is accurate, valuable, aligned with our documentation goals, and easy to read and understand.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In addition to PRs, contributors created nearly&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/issues?q=is%3Aissue+created%3A2024-01-01..2024-12-31&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;500 issues&lt;/a&gt;&amp;nbsp;and engaged in many&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/discussions&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;discussions&lt;/a&gt;, reporting bugs, suggesting improvements, and driving collaboration. Each of these efforts reflects our community’s dedication to maintaining the quality of OpenTelemetry docs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We are fortunate to have many contributors who take on responsibilities, including:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Approvers and maintainers&lt;/strong&gt;&amp;nbsp;from other SIGs who co-own parts of the docs&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Localization teams&lt;/strong&gt;&amp;nbsp;who oversee translations into various languages&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;The OpenTelemetry community&lt;/strong&gt;, whose contributions make all the difference — every drive-by edit and typo fix counts!&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;SIG Communications team members&lt;/strong&gt;, for their contributions and for orchestrating it all!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thank you to everyone who contributed their time and expertise to OpenTelemetry docs this year!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;join-us-in-2025&#34;&gt;Join us in 2025&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#join-us-in-2025&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A big shout-out to everyone for making 2024 a successful year! We look forward to continuing our collaboration in 2025.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Whether you’re an end user, a contributor, or simply enthusiastic about OpenTelemetry, we welcome your participation. You can&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/docs/contributing/&#34;&gt;get involved&lt;/a&gt;&amp;nbsp;by raising&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/issues&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;issues&lt;/a&gt;, participating in&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/discussions&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;discussions&lt;/a&gt;, or&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/docs/contributing/pull-requests/&#34;&gt;submitting PRs&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can also join us:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;On the&amp;nbsp;&lt;a href=&#34;https://slack.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CNCF Slack&lt;/a&gt;&amp;nbsp;at any one of the many&amp;nbsp;&lt;code&gt;#otel&lt;/code&gt;-prefixed channels.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;In&amp;nbsp;&lt;a href=&#34;https://docs.google.com/document/d/1wW0jLldwXN8Nptq2xmgETGbGn9eWP8fitvD5njM-xZY&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Comms meetings&lt;/a&gt;, held every other Monday at 10:00 AM Pacific time.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Together, we can make 2025 another amazing year for&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/&#34;&gt;opentelemetry.io&lt;/a&gt;!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Percentage of the site-total 12M views.&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#fnref:1&#34;&gt;↩︎&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;项目帖子最初由 &lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/&#34;&gt;OpenTelemetry 博客&lt;/a&gt;发布://github.com/svrnm&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Severin Neumann&lt;/a&gt;（思科），&lt;a href=&#34;https://github.com/chalin/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;帕特里斯·查林&lt;/a&gt;（CNCF），&lt;a href=&#34;https://github.com/tiffany76&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;蒂芙尼Hrabusa&lt;/a&gt;（Grafana Labs）&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2024 年即将结束，我们回顾这一年并分享&lt;a href=&#34;https://docs.google.com/document/d/1wW0jLldwXN8Nptq2xmgETGbGn9eWP8fitvD5njM-xZY&#34; target=&#34;_blank&#34; 的一些见解和成就rel=&#34;noreferrer noopener&#34;&gt;SIG Communications&lt;/a&gt;，负责管理此网站、博客的团队，和文档。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;key-achievements-of-2024&#34;&gt;2024 年的主要成就&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/ #key-achievements-of-2024&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们努力使 OpenTelemetry 文档更易于访问、用户友好且对我们的全球社区产生影响，并取得了一些突出的关键成就。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;multilingual-documentation&#34;&gt;多语言文档 &lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#multilingual-documentation&#34;&gt; &lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今年的一项重大成就是通过推出&lt;a href=&#34;https://opentelemetry.io/blog/2024/docs-localized/&#34;&gt;本地化文档&lt;/a&gt;实现了多语言支持。在本地化团队的努力下，超过 120 页的内容已从英语翻译成其他语言。可用的翻译包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/zh/&#34;&gt;中文&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/fr/&#34;&gt;法语&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/ja/&#34;&gt;日语&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/pt/&#34;&gt;葡萄牙语&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/es/&#34;&gt;西班牙语&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;非常感谢所有为此计划做出贡献的人。这些翻译使 OpenTelemetry 更易于访问，从而增强了全球受众的用户体验。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;ia-improvements&#34;&gt;信息架构 (IA) 改进&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#ia -改进&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了&lt;strong&gt;改善读者体验&lt;/strong&gt;并让 OpenTelemetry &lt;strong&gt;文档更加直观和易于访问&lt;/strong&gt;，我们今年对信息架构 (IA) 进行了重要更新。这些变化是由于需要更好地组织内容、阐明关键部分的目的以及为最终用户和开发人员提供更加结构化和用户友好的体验。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;关键信息架构更新包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;重命名&lt;code&gt;仪器&lt;/code&gt; 部分添加到&lt;a href=&#34;https://opentelemetry.io/docs/languages/&#34;&gt;语言 API 和 SDK&lt;/a&gt;，以更好地反映其目的并为用户设定更明确的期望。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将&lt;code&gt;自动检测&lt;/code&gt;移至新的&lt;a href=&#34;https://opentelemetry.io/docs/zero-code/&#34;&gt;零代码检测&lt;/a&gt;部分，以更清晰地区分在仪器 API 和 SDK 以及 Java 代理等工具之间，用于注入遥测。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在这些更新之后，Java SIG &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/discussions/4853&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;提议&lt;/ a&gt; 和 &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pulls?q=is%3Apr+java+is%3Aclose+label%3Asig%3Ajava+merged%3A2024-01-01..2024- 12-31+author%3Ajack-berg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;重新组织了他们的文档&lt;/a&gt;，对内容的结构和清晰度。这些工作的大部分反映在这些 PR 中：&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pull/4966&#34; target=&#34;_blank&#34; rel=&#34; noreferrer noopener&#34;&gt;重构 Java SDK 和配置#4966&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pull/5276&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;重构 Java 检测#5276&lt;/a&gt;&lt;/li&gt;&lt;li &gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pull/5590&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;移动性能对于 Java 代理，将 Javadoc 合并到 API 页面 #5590&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;感谢 &lt;a href=&#34;https://github.com/jack-berg&#34; target=&#34;_blank&#34; rel=&#34; noreferrer noopener&#34;&gt;杰克·伯格&lt;/a&gt;和&lt;a href=&#34;https://docs.google.com/document/d/1D7ZD93LxSWexHeztHohRp5yeoTzsi9Dj1HRm7Tad-hM&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Java SIG&lt;/a&gt; 在改进语言 SIG 文档方面发挥着模范带头作用！ &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;明年，我们的目标是重新设计向初学者介绍 OpenTelemetry 的方式，确保更顺畅、更容易获得的学习体验。如果您热衷于让 OpenTelemetry 更易于理解和使用，我们非常乐意您的贡献 — &lt;a href=&#34;https://github.com/open-telemetry/community/pull/2427&#34; target=&#34;_blank&#34; rel =&#34;noreferrer noopener&#34;&gt;加入我们&lt;/a&gt;，参与这项合作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;year-in-numbers&#34;&gt;数字年份&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#year-数字内&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;contributions&#34;&gt;贡献&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#contributions&#34;&gt;&lt;/a&gt;&lt; /h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/releases/tag/2022.12&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;2022 年 12 月&lt;/a&gt;，我们开始&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/releases&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;网络每月发布&lt;/a&gt;网站，以便我们能够定期总结活动并突出重大贡献。这些版本使我们能够跟踪一段时间内的进展并进行长期比较。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;例如，比较周期&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/compare/2022.12...2023.11&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt; 2022 年 12 月至 2023 年 11 月&lt;/a&gt;和&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/compare/2023.12...2024.11&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;2023 年 12 月至 2024 年 11 月&lt;/a&gt;，我们观察到贡献呈上升趋势：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;提交次数&lt;/strong&gt;从 1,011 次增加到 1,340 次，增加了 33%&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;贡献者&lt;/strong&gt;增长了 15%，从 92 名增加到 106 名&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;唯一下降的指标是&lt;strong&gt;更改的文件数量&lt;/strong&gt;，从 1,864 个减少到 1,624 个 (13%)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自 2019 年 4 月存储库成立以来，社区取得了显着的增长，其中：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;3,824 个合并拉取请求（3,982 次提交）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;768 名贡献者&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢每一位贡献者帮助构建和改进 OpenTelemetry 网站。您的努力会有所作为！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;which-pages-were-the-most-popular&#34;&gt;哪些页面最受欢迎？&lt;a href=&#34;https://opentelemetry.io/blog/2024 /year-in-review/#which-pages-were-the-most-popular&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;根据我们公开的&lt;a href=&#34;https://lookerstudio.google.com/s/tSTKxK1ECeU&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;分析&lt;/a&gt;数据，&lt;a href=今年，“https://opentelemetry.io/&#34;&gt;opentelemetry.io&lt;/a&gt; 的观看次数为 400 万次，浏览量为&lt;strong&gt;1200 万次&lt;/strong&gt;。这比去年近 1000 万次观看次数和超过 300 万次会话增加了&lt;strong&gt;16%&lt;/strong&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;文档中最受欢迎的页面和部分是：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;页面/部分&lt;/th&gt;&lt;th&gt;视图&lt;/th&gt;&lt;th &gt;% &lt;sup&gt;&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody &gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;https://opentelemetry.io/docs/what-is-opentelemetry/&#34;&gt;什么是OpenTelemetry？&lt;/a&gt;&lt;/td&gt;&lt;td&gt;290K&lt;/td&gt;&lt;td&gt;2.4%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;https://opentelemetry.io/ docs/collector&#34;&gt;收集器&lt;/a&gt;&lt;/td&gt;&lt;td&gt;1.3M&lt;/td&gt;&lt;td&gt;10.5%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;https://opentelemetry.io/docs/what-is-opentelemetry/&#34;&gt;概念&lt;/a&gt;&lt;/td&gt;&lt;td&gt;120万&lt;/td&gt;&lt;td&gt;9.8%&lt;/td&gt;&lt;/ tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;https://opentelemetry.io/docs/demo/&#34;&gt;演示&lt;/a&gt;&lt;/td&gt;&lt;td&gt;829K&lt;/td&gt;&lt;td&gt;6.7%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt;&lt;a href=&#34;https://opentelemetry.io/ecosystem/&#34;&gt;生态系统&lt;/a&gt;&lt;/td&gt;&lt;td&gt;500K&lt;/td&gt;&lt;td&gt;4.0%&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt; /表&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;trivia&#34;&gt;有趣的问答&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#trivia&#34;&gt;&lt;/a&gt; &lt;/h3&gt;&lt;p&gt;你知道吗：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;“OpenTelemetry”在英文网站页面中出现了 7.3K 次，使其成为继“the”和“to”之后第三个最常见的单词。 “收藏家”这个词被使用了 3.2K 次，排在第 11 位！&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34;&gt;收集器登录页面&lt;/a&gt;是自创建以来最新更新的文件，共进行了 91 项更改。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/opentelemetrybot&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;opentelemetrybot&lt;/a&gt; 共进行了 511 次提交（27K 添加和 10K 删除），排名第四最活跃的贡献者。机器人来吧！&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;今年评论最多的 PR 记录（也是历史上的记录）保持者：&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/ pull/5575&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;生成式 AI 更新博客文章 (#5575)&lt;/a&gt;，有 150 条评论！&lt;/li&gt;&lt;/ul&gt;紧随其后的是：&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pull/5380&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Go 工具的葡萄牙语翻译&lt;/a&gt;，已有 146 条评论&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;amazing-community&#34;&gt;精彩社区&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#amazing-community&#34;&gt; &lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/pulls?q=is%3Apr+is%3Amerged+merged%3A2024-01-01..2024-12- 31&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;1.3K PR&lt;/a&gt;，我们共同贡献了同样令人印象深刻的评论数量，以确保内容准确、有价值、符合我们的文档目标，并且易于阅读和理解。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了 PR 之外，贡献者还创建了近&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/issues?q=is%3Aissue+created%3A2024-01-01..2024 -12-31&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;500 个问题&lt;/a&gt;并参与了许多&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/discussions&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;讨论&lt;/a&gt;、报告错误、提出改进建议和推动协作。每一项努力都体现了我们社区对维护 OpenTelemetry 文档质量的奉献精神。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们很幸运有许多承担责任的贡献者，包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;批准者和维护者&lt;/strong&gt;来自共同拥有部分文档的其他 SIG&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;本地化团队&lt;/strong&gt;负责监督各种语言的翻译&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;OpenTelemetry 社区&lt;/strong&gt;，他们的贡献使一切变得不同 - 每一次路过编辑和拼写错误修复都很重要！&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;SIG Communications 团队成员&lt;/strong&gt;，感谢他们的贡献和精心策划的一切！&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢所有贡献时间的人今年将向 OpenTelemetry 文档提供专业知识！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;join-us-in-2025&#34;&gt;2025 年加入我们&lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/ #join-us-in-2025&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;向大家大声喊叫，让 2024 年成为成功的一年！我们期待在 2025 年继续合作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;无论您是最终用户、贡献者，还是只是对 OpenTelemetry 充满热情，我们都欢迎您的参与。您可以通过筹集资金&lt;a href=&#34;https://opentelemetry.io/docs/contributing/&#34;&gt;参与&lt;/a&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/问题” target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;问题&lt;/a&gt;，参与&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/discussions&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;讨论&lt;/a&gt;，或&lt;a href=&#34;https://opentelemetry.io/docs/contributing/pull-requests/&#34;&gt;提交 PR&lt;/a&gt;。&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您也可以加入我们：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;在&lt;a href=&#34;https://slack.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CNCF Slack&lt;/a&gt;上的任意一个&lt;code&gt;#otel &lt;/code&gt;-前缀频道。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1wW0jLldwXN8Nptq2xmgETGbGn9eWP8fitvD5njM-xZY&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;通讯会议&lt;/a&gt;，每隔一周星期一举行太平洋时间上午 10:00。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;只要我们齐心协力，我们就能让 2025 年成为 &lt;a href=&#34;https://opentelemetry.io/&#34;&gt;opentelemetry.io&lt;/a&gt; 又一个精彩的一年！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;网站总浏览量 1200 万次的百分比。 &lt;a href=&#34;https://opentelemetry.io/blog/2024/year-in-review/#fnref:1&#34;&gt;↩︎&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 19 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Solving Android app issues with OpenTelemetry: Beyond local profiling】使用 OpenTelemetry 解决 Android 应用程序问题：超越本地分析</title>
      <link>https://www.cncf.io/blog/2024/12/30/solving-android-app-issues-with-opentelemetry-beyond-local-profiling/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on the &lt;a href=&#34;https://embrace.io/blog/solving-android-app-issues-with-opentelemetry/&#34;&gt;Embrace blog&lt;/a&gt; by Francisco Prieto Cardelle&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;em&gt;OpenTelemetry is a powerful observability framework that can help engineers monitor and resolve common Android performance issues. We’ll dive into a few of these issues, with instrumentation samples, below.&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As an Android developer, my first instinct for solving a bug, measuring performance, or improving the overall experience of an app is to test it and profile it locally. Tools like the Android Studio Profiler provide powerful capabilities to detect and address all kinds of performance issues, such as UI thread blocking, memory leaks, or excessive CPU usage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While these local tools are indispensable, they do have limitations. Certain problems don’t show up in controlled environments, with consistent network connectivity, predictable user behavior, and a limited range of testing devices. In the real world, users interact with apps in unexpected ways, with diverse hardware, and varying conditions, exposing issues that are difficult to replicate locally.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is where OpenTelemetry comes in.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1200&#34; height=&#34;628&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1.png&#34; alt=&#34;image with OTel and Android logos&#34; class=&#34;wp-image-122772&#34; title=&#34;Android_OTel_blogImage (1)&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1.png 1200w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-300x157.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-1024x536.png 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-768x402.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-194x102.png 194w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-388x204.png 388w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-900x471.png 900w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-382x200.png 382w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-764x400.png 764w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-590x310.png 590w&#34; sizes=&#34;auto, (max-width: 1200px) 100vw, 1200px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry is a framework for collecting, processing, and exporting data about application performance. While relatively new to mobile, it’s become a fast-growing standard for backend performance management.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The benefits to using this framework for mobile are significant. OpenTelemetry enables developers to collect observability data from production environments, providing a window into the app’s real-world behavior.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Local profiling and production observability&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Local Profiling has its uses&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Local profiling is invaluable for identifying issues that are reproducible in a controlled environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;2048&#34; height=&#34;602&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1.webp&#34; alt=&#34;image of dashboard&#34; class=&#34;wp-image-122773&#34; title=&#34;Android blog image 1&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1.webp 2048w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-300x88.webp 300w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-1024x301.webp 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-768x226.webp 768w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-900x265.webp 900w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-1800x529.webp 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-600x176.webp 600w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-1200x353.webp 1200w&#34; sizes=&#34;auto, (max-width: 2048px) 100vw, 2048px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are many common issues that can be detected and solved locally:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Main thread blockage:&lt;/strong&gt;&amp;nbsp;tasks that block the main thread can cause app freezes or ANRs, as that thread is responsible for handling user interactions and rendering the UI.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Memory leaks:&lt;/strong&gt;&amp;nbsp;memory leaks happen when objects that are no longer needed are not released correctly. This leads to excessive memory usage, which could cause Out Of Memory (OOM) errors.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Capacity-related jank:&lt;/strong&gt;&amp;nbsp;when some resources like the CPU or the GPU become overburdened, the UI might not be rendered correctly within a given timeslice.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These issues are quite straightforward to reproduce during testing, and local profiling tools are great for detecting and fixing them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;When production observability is needed&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While local profiling covers a wide array of issues, not all problems are evident in a local setup. Observability in production is essential for diagnosing:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Unexpected user behavior:&lt;/strong&gt;&amp;nbsp;Users may upload massive files, perform rapid actions, or navigate the app in unplanned ways, exposing edge cases.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Device-specific crashes:&lt;/strong&gt;&amp;nbsp;Android’s diversity means issues can arise on specific devices or OS versions, often undetectable during local testing.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Low network connectivity:&lt;/strong&gt;&amp;nbsp;Real-world users often face slow or unreliable internet, causing timeouts or prolonged loading, which can be hard to emulate.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Production-ready observability tools like OpenTelemetry are essential for uncovering and resolving these challenges.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;OpenTelemetry in Android&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt;&amp;nbsp;is a powerful observability framework that helps developers collect, process, and export telemetry data like&amp;nbsp;&lt;strong&gt;traces&lt;/strong&gt;,&amp;nbsp;&lt;strong&gt;metrics&lt;/strong&gt;, and&amp;nbsp;&lt;strong&gt;logs&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are many advantages to using OpenTelemetry for performance monitoring vs. proprietary tools. SDKs built on OpenTelemetry are very flexible, allowing engineers to easily extend their instrumentation to 3rd-party libraries. As an open source, widely-adopted framework, OpenTelemetry also lets organizations avoid vendor lock-in and have more control over their own data.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By integrating OpenTelemetry into your Android app, you can track the performance of individual operations, identify bottlenecks, and gain insights into how your app performs under various real-world conditions. Let’s walk through how to do this.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Initial integration and set-up&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To add the OpenTelemetry SDK to your app, you can include the OTel bill of materials along with some necessary dependencies, like this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// libs.versions.toml&#xA;[versions]&#xA;opentelemetry-bom = &#34;1.44.1&#34;&#xA;opentelemetry-semconv = &#34;1.28.0-alpha&#34;[libraries]&#xA;opentelemetry-bom = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-bom&#34;, version.ref = &#34;opentelemetry-bom&#34; }&#xA;opentelemetry-api = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-api&#34; }&#xA;opentelemetry-context = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-context&#34; }&#xA;opentelemetry-exporter-otlp = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-exporter-otlp&#34; }&#xA;opentelemetry-exporter-logging = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-exporter-logging&#34; }&#xA;opentelemetry-extension-kotlin = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-extension-kotlin&#34; }&#xA;opentelemetry-sdk = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-sdk&#34; }&#xA;opentelemetry-semconv = { group = &#34;io.opentelemetry.semconv&#34;, name = &#34;opentelemetry-semconv&#34;, version.ref = &#34;opentelemetry-semconv&#34; }&#xA;opentelemetry-semconv-incubating = { group = &#34;io.opentelemetry.semconv&#34;, name = &#34;opentelemetry-semconv-incubating&#34;, version.ref = &#34;opentelemetry-semconv&#34; }// build.gradle.kts&#xA;implementation(platform(libs.opentelemetry.bom))&#xA;implementation(libs.opentelemetry.api)&#xA;implementation(libs.opentelemetry.context)&#xA;implementation(libs.opentelemetry.exporter.otlp)&#xA;implementation(libs.opentelemetry.exporter.logging)&#xA;implementation(libs.opentelemetry.extension.kotlin)&#xA;implementation(libs.opentelemetry.sdk)&#xA;implementation(libs.opentelemetry.semconv)&#xA;implementation(libs.opentelemetry.semconv.incubating)&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Then, we can create an OpenTelemetry instance that acts as a central configuration point, managing the tracer provider, resources, and exporters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A tracer provider creates and manages tracers, which in turn generate spans. A resource contains metadata about the app and is attached to every span, helping to contextualize telemetry data. An exporter defines where the telemetry data will be sent, such as a backend observability platform or a local file for inspection.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// Resources that will be attached to telemetry to provide better context.&#xA;// This is a good place to add information about the app, device, and OS.&#xA;val resource = Resource.getDefault().toBuilder()&#xA;    .put(ServiceAttributes.SERVICE_NAME, &#34;[app name]&#34;)&#xA;    .put(DeviceIncubatingAttributes.DEVICE_MODEL_NAME, Build.DEVICE)&#xA;    .put(OsIncubatingAttributes.OS_VERSION, Build.VERSION.RELEASE)&#xA;    .build()// The tracer provider will create spans and export them to the configured span processors.&#xA;// For now, we will use a simple span processor that logs the spans to the console.&#xA;val sdkTracerProvider = SdkTracerProvider.builder()&#xA;    .addSpanProcessor(SimpleSpanProcessor.create(LoggingSpanExporter.create()))&#xA;    .setResource(resource)&#xA;    .build()&#xA;    &#xA;// The OpenTelemetry SDK is the entry point to the OpenTelemetry API. It is used to create spans, metrics, and other telemetry data.&#xA;// Create it and register it as the global instance.&#xA;val openTelemetry = OpenTelemetrySdk.builder()&#xA;    .setTracerProvider(sdkTracerProvider)&#xA;    .buildAndRegisterGlobal()&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once everything is initialized, we can get a tracer and create spans, using&amp;nbsp;&lt;code&gt;openTelemetry.sdkTracerProvider.get()&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A&amp;nbsp;&lt;strong&gt;trace&lt;/strong&gt;&amp;nbsp;represents a single operation or workflow within a distributed system. For Android apps, it could capture the entire journey of a user request or an action through the app. Within this journey, a&amp;nbsp;&lt;strong&gt;span&lt;/strong&gt;&amp;nbsp;represents an individual unit of work, such as a network request, database query, or UI rendering task, providing detailed information about its duration and context. Here’s how it looks in code:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;val tracer = openTelemetry.sdkTracerProvider.get(&#34;testAppTracer&#34;)&#xA;val span = tracer.spanBuilder(&#34;someUserAction&#34;).startSpan&#xA;&#xA;&#xA;try {&#xA;someAction()&#xA;} catch (e: Exception) {&#xA;span.recordException(e)&#xA;span.setStatus(StatusCode.ERROR)&#xA;} finally {&#xA;span.end()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Solving problems with OpenTelemetry&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now that we understand how to set up an OpenTelemetry instance in our Android app, let’s look at some common types of issues and how this framework actually helps us track them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Network latency issues&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Network performance is one of the most unpredictable factors in a production environment. While local testing occurs under stable, high-speed conditions, real-world users face diverse scenarios. They might encounter intermittent mobile connections, unreliable public Wi-Fi, or backend delays during periods of heavy traffic. These challenges can lead to long request times, failed operations, or even app abandonment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With OpenTelemetry, you can instrument network requests to measure their durations and identify bottlenecks. By tagging spans with metadata like endpoint URLs, request sizes, or response statuses, you can analyze trends such as:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Endpoints causing the longest delays:&lt;/strong&gt;&amp;nbsp;Identify APIs that consistently perform poorly and prioritize their optimization.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Impact of network conditions on user experience:&lt;/strong&gt;&amp;nbsp;Correlate high-latency spans with user drop-offs to measure the effect of slow responses.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Response time variability by region:&lt;/strong&gt;&amp;nbsp;Understand how performance differs geographically and tailor improvements for the most affected areas.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s take a look at an example.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Suppose we have an endpoint where users upload images to a server. Network performance might vary based on the image size, user location, or connectivity type. By instrumenting the network request using OpenTelemetry, we can capture relevant metadata and analyze trends, such as whether larger images or specific regions are associated with longer upload times. Here’s how we can instrument this scenario:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt; &#xA;fun uploadImage(image: ByteArray, networkType: String, region: String) {&#xA;    val span = tracer.spanBuilder(&#34;imageUpload&#34;)&#xA;        .setAttribute(HttpIncubatingAttributes.HTTP_REQUEST_SIZE, image.size.toLong())&#xA;        .setAttribute(NetworkIncubatingAttributes.NETWORK_CONNECTION_TYPE, networkType)&#xA;        .setAttribute(&#34;region&#34;, region)&#xA;        .startSpan()&#xA;    try {&#xA;        doNetworkRequest()&#xA;    } catch (e: Exception) {&#xA;        span.recordException(e)&#xA;        span.setStatus(StatusCode.ERROR)&#xA;    } finally {&#xA;        span.end()&#xA;    }&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;OS version or device-specific issues&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Android’s ecosystem is vast, with apps running on a wide variety of devices, OS versions, and hardware configurations. This diversity makes it challenging to ensure a consistent user experience across all devices. Certain crashes or bugs may surface only on specific devices or under particular conditions, making them hard to find in a controlled testing environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With OpenTelemetry, you can capture device-specific metadata in a centralized way, and add it to the resource configuration during the OpenTelemetry setup. This ensures that important contextual information is automatically attached to spans, logs, and metrics. This approach ensures consistency across telemetry data.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By analyzing this metadata, you can uncover trends like:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Frequent crashes on certain device models:&lt;/strong&gt;&amp;nbsp;users on older or budget devices can encounter crashes due to insufficient resources, and detecting this pattern might allow optimizing memory usage or offering a lighter version of the app.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Behavioral changes across Android versions:&lt;/strong&gt;&amp;nbsp;certain crashes may occur only on specific OS versions due to changes in Android APIs, stricter permission requirements, or bugs introduced in updates. With this data, you can prioritize compatibility fixes or update your app’s dependencies to avoid deprecated API usage.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Hardware-specific rendering issues:&lt;/strong&gt;&amp;nbsp;Some devices may have unique graphics drivers or hardware quirks that cause rendering issues like visual glitches or artifacts in the UI. For example, a custom animation might behave unexpectedly on devices with non-standard screen resolutions or refresh rates. Metadata about screen specs or GPU details can help pinpoint and address these inconsistencies.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s see how to set this up:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// Add some useful attributes to the Resource object.&#xA;val resource = Resource.getDefault().toBuilder()&#xA;    .put(&#34;device.model&#34;, Build.MODEL)&#xA;    .put(&#34;device.manufacturer&#34;, Build.MANUFACTURER)&#xA;    .put(&#34;os.version&#34;, Build.VERSION.SDK_INT.toString())&#xA;    .put(&#34;screen.resolution&#34;, getResolution())&#xA;    .build()// Use the resource object to build the tracer, logs and other telemetry providers&#xA;val sdkTracerProvider = SdkTracerProvider.builder()&#xA;    .setResource(resource)&#xA;    .build()&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Unexpected user behavior&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Real users often interact with apps in unexpected ways. This unpredictability can lead to performance issues, crashes, or unoptimized user experiences that aren’t caught in local testing.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For example, users might upload files much larger than anticipated, causing memory or performance bottlenecks. Others might repeatedly perform actions in rapid succession, like submitting forms or refreshing pages, leading to race conditions or server overload. Some users might navigate through the app in untested sequences, triggering unexpected states or errors.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By leveraging OpenTelemetry to instrument user interactions, you can capture and analyze spans that detail how users actually use your app. This data provides invaluable insights into unexpected patterns, allowing you to:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Detect resource-intensive actions:&lt;/strong&gt;&amp;nbsp;Track spans representing operations like image uploads, database queries, or API calls to identify scenarios where excessive usage impacts performance.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Uncover uncommon navigation paths:&lt;/strong&gt;&amp;nbsp;By monitoring user navigation flows, you can discover sequences that frequently result in errors or crashes, helping you prioritize fixes for real-world issues.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Identify high-demand features:&lt;/strong&gt;&amp;nbsp;Analyze spans to see which actions or features are used most often, even if they weren’t part of your initial test cases. This can guide both optimization efforts and feature prioritization.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s consider a scenario where users frequently navigate back and forth between two screens (e.g., a product listing and a product details page) in rapid succession. While this behavior may seem harmless, it could inadvertently cause resource leaks or worsen the rendering performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By tagging spans with navigation metadata like the screen name, a timestamp, and some other user interactions, you can analyze patterns in navigation behaviors:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Users may be toggling between screens at an unexpectedly high frequency, highlighting a need for caching or lazy loading mechanisms to reduce resource strain.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A particular screen might consistently produce errors, revealing edge cases or bottlenecks in its rendering logic.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Insights into navigation sequences can help refine user experience flows, making the app more intuitive for common behaviors while handling edge cases more gracefully.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This ability to uncover and address unexpected user behavior ensures your app remains reliable and performant, even under unconventional usage scenarios.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Next steps: forward your data where you want to analyze it&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we’ve discussed, instrumenting your Android app with OpenTelemetry is incredibly helpful for monitoring and understanding common performance issues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once you’ve started collecting data, however, you’ll need to set up a place for it to go. One of the great things about OpenTelemetry as a framework is that there are many, many observability tools that support ingesting this type of data. You may choose to forward it to a vendor-specific backend or to any number of open source tools, like Jaeger for spans or Loki for logs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Forwarding OpenTelemetry data from an SDK requires adding one or multiple exporters to give a destination for your data once that data is actually generated.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The exporter is a component that will connect the SDK you are using, which will capture the data, with an external OpenTelemetry collector that will receive the data. Exporters are designed with the OpenTelemetry data model in mind, emitting OpenTelemetry data without any loss of information. Many&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/ecosystem/registry/?component=exporter&amp;amp;language=&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;language-specific exporters&lt;/a&gt;&amp;nbsp;are available.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry collector&lt;/a&gt;&amp;nbsp;is a vendor-agnostic way to receive, process and export telemetry data. It is not always necessary to use, as you can send data directly to your backend of choice via the exporter. However, having a collector is good practice if you’re managing multiple sources of data ingest and sending to multiple observability backends. It allows your service to offload data quickly, and the collector can take care of additional handling like retries, batching, encryption, or even sensitive data filtering.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Embrace has a&amp;nbsp;&lt;a href=&#34;https://embrace.io/blog/android-opentelemetry-exporter-walkthrough/&#34;&gt;tutorial walk-through&lt;/a&gt;&amp;nbsp;on how to set up an OpenTelemetry exporter for Android, if using our SDK. You can also use the basic&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-android&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry Android SDK&lt;/a&gt;, which is built on top of the Java SDK, and which has its own&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-java/tree/main/exporters&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;exporter resources&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Final takeaways&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In a world where apps run on countless devices, in varied environments, and are used by diverse users, achieving optimal performance and reliability requires more than just local testing. While tools like Android Studio Profiler excel at addressing issues reproducible in controlled environments, production observability fills the gap for uncovering real-world problems that only surface under specific conditions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry provides a robust framework for collecting and analyzing telemetry data, giving developers the insights they need to understand and optimize their apps in production. By instrumenting spans and attaching meaningful metadata, you can pinpoint bottlenecks, diagnose device- or OS-specific issues, and uncover unexpected user behaviors that impact the app’s performance or user experience.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Interested in getting started for yourself? Check out the&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-android&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry SDK for Android&lt;/a&gt;. Or, for more advanced monitoring, you can use Embrace’s&amp;nbsp;&lt;a href=&#34;https://github.com/embrace-io/embrace-android-sdk&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;open source Android SDK&lt;/a&gt;. It’s built on OpenTelemetry and uses the same data conventions, but has added functionality for tracking complex Android issues, like ANRs, in a way that is OpenTelemetry-compliant.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初由 Francisco Prieto 在&lt;a href=&#34;https://embrace.io/blog/solving-android-app-issues-with-opentelemetry/&#34;&gt;拥抱博客&lt;/a&gt;上发布卡德尔&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;em&gt;OpenTelemetry 是一个强大的可观察性框架，可以帮助工程师监控和解决常见的 Android 性能问题。我们将通过下面的仪器示例深入探讨其中的一些问题。&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;作为一名 Android 开发人员，我解决错误、衡量性能或改善应用整体体验的第一直觉是在本地对其进行测试和分析。 Android Studio Profiler 等工具提供了强大的功能来检测和解决各种性能问题，例如 UI 线程阻塞、内存泄漏或 CPU 使用率过高。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然这些本地工具不可或缺，但它们也有局限性。某些问题不会出现在受控环境中，具有一致的网络连接、可预测的用户行为和有限的测试设备。在现实世界中，用户以意想不到的方式与应用程序交互，使用不同的硬件和不同的条件，暴露出难以在本地复制的问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这就是 OpenTelemetry 的用武之地。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1200”高度=“628”src=“https://www.cncf.io/wp-content” /uploads/2024/12/Android_OTel_blogImage-1.png&#34; alt=&#34;带有 OTel 和 Android 徽标的图像&#34; class=&#34;wp-image-122772&#34; title=&#34;Android_OTel_blogImage (1)&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1.png 1200w，https://www.cncf.io/wp-content/uploads/ 2024/12/Android_OTel_blogImage-1-300x157.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-1024x536.png 1024w，https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage -1-768x402.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-194x102.png 194w，https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage -1-388x204.png 388w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-900x471.png 900w，https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage -1-382x200.png 382w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-764x400.png 764w，https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage -1-590x310.png 590w“尺寸=”自动，（最大宽度：1200px） 100vw，1200px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry 是一个用于收集、处理和导出有关应用程序性能的数据的框架。虽然对于移动设备来说相对较新，但它已成为快速增长的后端性能管理标准。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用此移动框架的好处是显着的。 OpenTelemetry 使开发人员能够从生产环境中收集可观测性数据，从而提供了解应用程序真实行为的窗口。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2类=“wp-block-heading&#34;&gt;本地分析和生产可观察性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;本地分析有其用途&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本地分析对于识别在受控环境中可重现的问题非常有价值。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“2048”高度=“602”src=“https://www.cncf.io/wp-content” /uploads/2024/12/Android-blog-image-1.webp&#34; alt=&#34;仪表板图像&#34; class=&#34;wp-image-122773&#34; title=&#34;Android 博客图像 1&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1.webp 2048w，https://www.cncf.io/wp-content/uploads/ 2024/12/Android-blog-image-1-300x88.webp 300w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-1024x301.webp 1024w，https://www.cncf.io/wp-content/uploads/2024 /12/Android-blog-image-1-768x226.webp 768w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-900x265.webp 900w，https://www.cncf.io/wp-content/uploads/2024 /12/Android-blog-image-1-1800x529.webp 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-600x176.webp 600w，https://www.cncf.io/wp-content/uploads/2024 /12/Android-blog-image-1-1200x353.webp 1200w&#34; 尺寸 = &#34;自动, (最大宽度: 2048px) 100vw，2048px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有许多常见问题可以在本地检测和解决：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;主线程阻塞&lt;/strong&gt;：阻塞主线程的任务可能会导致应用冻结或出现 ANR，因为该线程负责处理用户交互和呈现 UI。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;内存泄漏&lt;/strong&gt;：当不再需要的对象未正确释放时，就会发生内存泄漏。这会导致内存使用过多，从而可能导致内存不足 (OOM) 错误。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;与容量相关的卡顿&lt;/strong&gt;：当 CPU 或 GPU 等某些资源负担过重时，用户界面可能无法在给定时间片内正确呈现。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些问题在测试过程中很容易重现，本地分析工具非常适合检测和修复它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;何时需要生产可观察性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然本地分析涵盖了广泛的问题，但并非所有问题在本地设置中都很明显。生产中的可观察性对于诊断至关重要：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;意外的用户行为&lt;/strong&gt;：用户可能会上传大量文件、执行快速操作或以计划外的方式导航应用，从而暴露边缘情况。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;特定于设备的崩溃&lt;/strong&gt;：Android 的多样性意味着特定设备或操作系统版本上可能会出现问题，而这些问题通常在本地测试期间无法检测到。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;网络连接速度低&lt;/strong&gt;：现实世界中的用户经常面临网速缓慢或不可靠的情况，导致超时或加载时间过长，这可能很难模拟。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;生产就绪的OB像 OpenTelemetry 这样的可服务性工具对于发现和解决这些挑战至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Android 中的 OpenTelemetry&lt;/h2​​&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt; 是一个强大的可观察性框架，可帮助开发者收集、处理和导出&lt;strong&gt;跟踪&lt;/strong&gt;、&lt;strong&gt;指标&lt;/strong&gt;和&lt;strong&gt;等遥测数据日志&lt;/strong&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与专有工具相比，使用 OpenTelemetry 进行性能监控有很多优势。基于 OpenTelemetry 构建的 SDK 非常灵活，允许工程师轻松地将其仪器扩展到第 3 方库。作为一个广泛采用的开源框架，OpenTelemetry 还可以让组织避免供应商锁定并更好地控制自己的数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过将 OpenTelemetry 集成到您的 Android 应用中，您可以跟踪各个操作的性能、识别瓶颈并深入了解您的应用在各种实际条件下的性能。让我们来看看如何执行此操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;初始集成和设置&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要将 OpenTelemetry SDK 添加到您的应用中，您可以包含 OTel 物料清单以及一些必要的依赖项，如下所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// libs.versions.toml&#xA;[版本]&#xA;opentelemetry-bom =“1.44.1”&#xA;opentelemetry-semconv =“1.28.0-alpha”[库]&#xA;opentelemetry-bom = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-bom&#34;, version.ref = &#34;opentelemetry-bom&#34; }&#xA;opentelemetry-api = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-api&#34; }&#xA;opentelemetry-context = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-context&#34; }&#xA;opentelemetry-exporter-otlp = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-exporter-otlp&#34; }&#xA;opentelemetry-exporter-logging = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-exporter-logging&#34; }&#xA;opentelemetry-extension-kotlin = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-extension-kotlin&#34; }&#xA;opentelemetry-sdk = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-sdk&#34; }&#xA;opentelemetry-semconv = { group = &#34;io.opentelemetry.semconv&#34;, name = &#34;opentelemetry-semconv&#34;, version.ref = &#34;opentelemetry-semconv&#34; }&#xA;opentelemetry-semconv-incubating = { group = &#34;io.opentelemetry.semconv&#34;, name = &#34;opentelemetry-semconv-incubating&#34;, version.ref = &#34;opentelemetry-semconv&#34; }// build.gradle.kts&#xA;实现（平台（libs.opentelemetry.bom））&#xA;实现（libs.opentelemetry.api）&#xA;实现（libs.opentelemetry.context）&#xA;实现（libs.opentelemetry.exporter.otlp）&#xA;实现（libs.opentelemetry.exporter.logging）&#xA;实现（libs.opentelemetry.extension.kotlin）&#xA;实现（libs.opentelemetry.sdk）&#xA;实现（libs.opentelemetry.semconv）&#xA;实现（libs.opentelemetry.semconv.incubating）&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;然后，我们可以创建一个 OpenTelemetry 实例，充当中央配置点，管理跟踪器提供程序、资源和导出程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一个跟踪器提供程序创建并管理跟踪器，跟踪器又生成跨度。资源包含有关应用程序的元数据，并附加到每个跨度，有助于将遥测数据置于上下文中。导出器定义遥测数据将发送到何处，例如后端可观测平台或用于检查的本地文件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// 将附加到遥测以提供更好上下文的资源。&#xA;// 这是添加有关应用程序、设备和操作系统信息的好地方。&#xA;val 资源 = Resource.getDefault().toBuilder()&#xA;    .put(ServiceAttributes.SERVICE_NAME, &#34;[应用程序名称]&#34;)&#xA;    .put（DeviceIncubatingAttributes.DEVICE_MODEL_NAME，Build.DEVICE）&#xA;    .put(OsIncubatingAttributes.OS_VERSION, Build.VERSION.RELEASE)&#xA;    .build()//跟踪器提供程序将创建跨度并将它们导出到配置的跨度处理器。&#xA;// 现在，我们将使用一个简单的跨度处理器将跨度记录到控制台。&#xA;val sdkTracerProvider = SdkTracerProvider.builder()&#xA;    .addSpanProcessor(SimpleSpanProcessor.create(LoggingSpanExporter.create()))&#xA;    .setResource(资源)&#xA;    。建造（）&#xA;    &#xA;// OpenTelemetry SDK 是 OpenTelemetry API 的入口点。它用于创建跨度、指标和其他遥测数据。&#xA;// 创建它并将其注册为全局实例。&#xA;val openTelemetry = OpenTelemetrySdk.builder()&#xA;    .setTracerProvider(sdkTracerProvider)&#xA;    .buildAndRegisterGlobal()&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一旦一切都初始化完毕，我们就可以使用&lt;code&gt;openTelemetry.sdkTracerProvider.get()&lt;/code&gt;获取跟踪器并创建跨度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;跟踪&lt;/strong&gt;代表分布式系统中的单个操作或工作流程。对于 Android 应用程序，它可以捕获用户请求或通过应用程序执行操作的整个过程。在此旅程中，&lt;strong&gt;跨度&lt;/strong&gt;代表一个单独的工作单元，例如网络请求、数据库查询或 UI 渲染任务，提供有关其持续时间和上下文的详细信息。代码如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;val tracer = openTelemetry.sdkTracerProvider.get(&#34;testAppTracer&#34;)&#xA;val span = tracer.spanBuilder(&#34;someUserAction&#34;).startSpan&#xA;&#xA;&#xA;尝试 {&#xA;一些动作()&#xA;} catch (e: 异常) {&#xA;span.recordException(e)&#xA;span.setStatus(StatusCode.ERROR)&#xA;} 最后 {&#xA;跨度.end()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;使用 OpenTelemetry 解决问题&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在我们了解了如何在 Android 应用中设置 OpenTelemetry 实例，让我们看看一些常见的问题类型以及该框架如何实际帮助我们跟踪它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;网络延迟问题&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网络性能是生产环境中最不可预测的因素之一。虽然本地测试是在稳定、高速的条件下进行的，但现实世界的用户面临着不同的场景。他们可能会遇到间歇性的移动连接、不可靠的公共 Wi-Fi 或后端延迟。交通繁忙。这些挑战可能会导致请求时间过长、操作失败，甚至应用被放弃。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;借助 OpenTelemetry，您可以检测网络请求以测量其持续时间并识别瓶颈。通过使用端点 URL、请求大小或响应状态等元数据标记跨度，您可以分析以下趋势：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;导致最长延迟的端点&lt;/strong&gt;：识别始终表现不佳的 API，并优先考虑其优化。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;网络状况对用户体验的影响&lt;/strong&gt;：将高延迟时间与用户流失相关联，以衡量缓慢响应的影响。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;不同地区的响应时间差异&lt;/strong&gt;：了解性能在不同地理位置上的差异，并针对受影响最严重的地区制定改进措施。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们看一个例子。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;假设我们有一个端点，用户可以将图像上传到服务器。网络性能可能会因图像大小、用户位置或连接类型而异。通过使用 OpenTelemetry 检测网络请求，我们可以捕获相关元数据并分析趋势，例如较大的图像或特定区域是否与较长的上传时间相关。以下是我们如何检测这种情况：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt; &#xA;有趣的 uploadImage(图像: ByteArray, 网络类型: 字符串, 区域: 字符串) {&#xA;    val span = tracer.spanBuilder(&#34;imageUpload&#34;)&#xA;        .setAttribute(HttpIncubatingAttributes.HTTP_REQUEST_SIZE, image.size.toLong())&#xA;        .setAttribute(NetworkIncubatingAttributes.NETWORK_CONNECTION_TYPE, 网络类型)&#xA;        .setAttribute(&#34;区域&#34;, 区域)&#xA;        .startSpan()&#xA;    尝试 {&#xA;        doNetworkRequest()&#xA;    } catch (e: 异常) {&#xA;        span.recordException(e)&#xA;        span.setStatus(StatusCode.ERROR)&#xA;    } 最后 {&#xA;        跨度.end()&#xA;    }&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;操作系统版本或设备特定问题&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Android 的生态系统非常庞大，应用程序可以在各种设备、操作系统版本和硬件配置上运行。这种多样性使得确保所有设备上一致的用户体验变得具有挑战性。某些崩溃或错误可能仅在特定设备或特定条件下出现，因此很难在受控测试环境中发现它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;借助 OpenTelemetry，您可以集中方式捕获设备特定的元数据，并在 OpenTelemetry 设置期间将其添加到资源配置中。这可确保重要的上下文信息自动附加到跨度、日志和指标。这种方法可确保遥测数据的一致性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过分析此元数据，您可以发现以下趋势：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;某些设备型号上频繁崩溃&lt;/strong&gt;：使用较旧设备或廉价设备的用户可能会因资源不足而遇到崩溃，并检测采用这种模式可能会优化内存使用或提供应用程序的更轻版本。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Android 版本之间的行为变化&lt;/strong&gt;：由于 Android API 的更改、更严格的权限要求或更新中引入的错误，某些崩溃可能仅在特定操作系统版本上发生。利用这些数据，您可以优先考虑兼容性修复或更新应用的依赖项，以避免使用已弃用的 API。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;特定于硬件的渲染问题&lt;/strong&gt;：某些设备可能具有独特的图形驱动程序或硬件怪癖，从而导致渲染问题，例如用户界面中的视觉故障或伪影。例如，自定义动画在屏幕分辨率或刷新率非标准的设备上可能会出现意外行为。有关屏幕规格或 GPU 详细信息的元数据可以帮助查明并解决这些不一致问题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们看看如何设置：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// 向 Resource 对象添加一些有用的属性。&#xA;val 资源 = Resource.getDefault().toBuilder()&#xA;    .put(&#34;设备.model&#34;, Build.MODEL)&#xA;    .put(&#34;设备.制造商&#34;, Build.MANUFACTURER)&#xA;    .put(&#34;os.version&#34;, Build.VERSION.SDK_INT.toString())&#xA;    .put(&#34;屏幕.分辨率&#34;, getResolution())&#xA;    .build()// 使用资源对象构建跟踪器、日志和其他遥测提供程序&#xA;val sdkTracerProvider = SdkTracerProvider.builder()&#xA;    .setResource(资源)&#xA;    .build()&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;意外的用户行为&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;真实用户经常以意想不到的方式与应用交互。这种不可预测性可能会导致本地测试中未发现的性能问题、崩溃或未优化的用户体验。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;例如，用户可能上传比预期大得多的文件，从而导致内存或性能瓶颈。其他人可能会快速连续地重复执行操作，例如提交表单或刷新页面，从而导致竞争条件或服务器过载。某些用户可能会以未经测试的顺序浏览应用程序，从而触发意外状态或错误。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过利用 OpenTelemetry 来检测用户交互，您可以捕获和分析详细说明用户如何实际使用您的应用的跨度。这些数据提供了对意外模式的宝贵见解，使您能够：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;检测资源密集型操作&lt;/strong&gt;：跟踪代表图像上传、数据库查询或 API 调用等操作的范围，以识别过度使用影响性能的场景。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;发现不常见的导航路径&lt;/strong&gt;：通过监控用户导航流，您可以发现经常导致错误或崩溃的序列，帮助您优先修复实际问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;识别高需求功能&lt;/strong&gt;：分析跨度以了解哪些操作或功能最常使用，即使它们不是您初始测试用例的一部分会话。这可以指导优化工作和功能优先级。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们考虑这样一个场景：用户频繁地在两个屏幕（例如产品列表和产品详细信息页面）之间快速连续地来回导航。虽然这种行为看似无害，但可能会无意中导致资源泄漏或渲染性能恶化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过使用屏幕名称、时间戳和其他一些用户交互等导航元数据标记范围，您可以分析导航行为的模式：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;用户可能会以意想不到的高频率在屏幕之间切换，这突出表明需要缓存或延迟加载机制来减少资源紧张。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;特定屏幕可能会持续产生错误，从而暴露其渲染逻辑中的边缘情况或瓶颈。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;深入了解导航序列有助于优化用户体验流程，使应用对于常见行为更加直观，同时更加优雅地处理边缘情况。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种发现和解决意外用户行为的能力可确保您的应用即使在非常规使用场景下也能保持可靠和高性能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;后续步骤：将数据转发到您想要分析的位置&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;正如我们所讨论的，使用 OpenTelemetry 检测您的 Android 应用对于监控和了解常见性能问题非常有帮助。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，一旦开始收集数据，您就需要为其设置一个存放位置。 OpenTelemetry 作为框架的一大优点是，有很多很多可观察性工具支持提取此类数据。您可以选择将其转发到特定于供应商的后端或任意数量的开源工具，例如用于跨度的 Jaeger 或用于日志的 Loki。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从 SDK 转发 OpenTelemetry 数据需要添加一个或多个导出器，以便在实际生成数据后为数据提供目的地。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;导出器是一个组件，它将连接您正在使用的 SDK（将捕获数据）与将接收数据的外部 OpenTelemetry 收集器。导出器在设计时考虑了 OpenTelemetry 数据模型，可在不丢失任何信息的情况下发出 OpenTelemetry 数据。许多&lt;a href=&#34;https://opentelemetry.io/ecosystem/registry/?component=exporter&amp;language=&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;特定于语言的导出器&lt;/a&gt;都可用。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry 收集器&lt;/a&gt;是一种与供应商无关的接收、处理方式并导出遥测数据。并不总是需要使用，因为您可以通过导出器将数据直接发送到您选择的后端。但是，如果您要管理多个数据源并将其发送到多个可观察点，那么拥有收集器是一种很好的做法ty 后端。它允许您的服务快速卸载数据，并且收集器可以负责其他处理，例如重试、批处理、加密，甚至敏感数据过滤。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Embrace 有一个&lt;a href=&#34;https://embrace.io/blog/android-opentelemetry-exporter-walkthrough/&#34;&gt;教程演练&lt;/a&gt;，介绍如何设置适用于 Android 的 OpenTelemetry 导出器，如果使用我们的 SDK。您还可以使用基本的&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-android&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry Android SDK&lt;/a&gt;，它是由在 Java SDK 之上，它有自己的 &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-java/tree/main/exporters&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;出口商资源&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;最终要点&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当今世界，应用程序在无数设备上、不同环境中运行，并由不同用户使用，要实现最佳性能和可靠性，需要的不仅仅是本地测试。虽然 Android Studio Profiler 等工具擅长解决受控环境中可重现的问题，但生产可观察性填补了发现仅在特定条件下出现的现实问题的空白。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry 提供了一个用于收集和分析遥测数据的强大框架，为开发人员提供了理解和优化生产中的应用程序所需的见解。通过检测跨度并附加有意义的元数据，您可以查明瓶颈、诊断特定于设备或操作系统的问题，并发现影响应用性能或用户体验的意外用户行为。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有兴趣自己开始吗？请查看&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-android&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;适用于 Android 的 OpenTelemetry SDK&lt;/a&gt;。或者，要进行更高级的监控，您可以使用 Embrace 的&lt;a href=&#34;https://github.com/embrace-io/embrace-android-sdk&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;开源 Android SDK &lt;/a&gt;。它基于 OpenTelemetry 构建并使用相同的数据约定，但添加了以符合 OpenTelemetry 的方式跟踪复杂 Android 问题（例如 ANR）的功能。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 29 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Running a production-ready Raspbery Pi Kubernetes cluster at home】在家运行生产就绪的 Raspbery Pi Kubernetes 集群</title>
      <link>https://www.cncf.io/blog/2024/12/27/running-a-production-ready-raspbery-pi-kubernetes-cluster-at-home/</link>
      <description>【&lt;p&gt;&lt;em&gt;Ambassador post originally published on &lt;a href=&#34;https://geraldonit.com/2024/12/16/production-ready-raspbery-pi-kubernetes-cluster/&#34;&gt;Gerald on IT &lt;/a&gt;by Gerald Venzl&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;em&gt;In this guide, I’ll cover how to run a production-ready Raspberry Pi Kubernetes Cluster using K3s.&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;background&#34;&gt;Background&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you are like me, you probably have a bunch of (older) Raspberry Pi models lying around not doing much because you replaced them with newer models. So, instead of just having them collect dust, why not create your own little Kubernetes cluster and deploy something on them, or just use it to learn Kubernetes?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;setup&#34;&gt;Setup&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;hardware&#34;&gt;Hardware&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;1 x Raspberry Pi Model 4 B with 4 GB RAM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;1 x Raspberry Pi Model 4 B with 2 GB RAM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;4 x Raspberry Pi Model 3 B+ with 1 GB of RAM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;1 x Netgear ProSafe 8 Port Gigabit unmanaged switch&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;1 x Corsair Flash Voyager GTX 256GB USB 3.1 Premium Flash Drive&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;Note: This hardware setup is what I have available. At no point is this the recommendation for building your own cluster. If you have newer, more powerful Raspberry Pi models, you are probably better off using them instead.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://geraldonit.com/wp-content/uploads/2024/12/k3s-cluster-topology.png&#34; alt=&#34;image&#34; class=&#34;wp-image-6245&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;software&#34;&gt;Software&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;All Raspberry Pis are running Raspberry Pi OS (with desktop)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Release date:&amp;nbsp;November 19th 2024&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;System:&amp;nbsp;64-bit&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kernel version:&amp;nbsp;6.6&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Debian version:&amp;nbsp;12 (bookworm)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;why-k3s&#34;&gt;Why K3s?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;K3s is a lightweight, CNCF-certified, and fully compliant Kubernetes distribution. It ships as a single binary, requires half the memory, supports other data stores, and more. As&amp;nbsp;&lt;a href=&#34;https://docs.k3s.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;their website&lt;/a&gt;&amp;nbsp;says, it’s:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote has-gray-200-background-color has-background is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;Great for:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Edge&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Homelab&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Internet of Things (IoT)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Continuous Integration (CI)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Development&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Single board computers (ARM)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Air-gapped environments&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Embedded K8s&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Situations where a PhD in K8s clusterology is infeasible&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;  – &lt;a href=&#34;https://docs.k3s.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;K3s Documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Another advantage of K3s for Raspberry Pis is that it allows for data stores other than&amp;nbsp;&lt;code&gt;etcd&lt;/code&gt;. That’s great because, as&amp;nbsp;&lt;a href=&#34;https://docs.k3s.io/installation/requirements#disks&#34;&gt;their website&lt;/a&gt;&amp;nbsp;says,&amp;nbsp;&lt;code&gt;etcd&lt;/code&gt;&amp;nbsp;is write-intensive and the SD cards can usually not handle the IO load:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote has-gray-200-background-color has-background is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;K3s performance depends on the performance of the database. To ensure optimal speed, we recommend using an SSD when possible.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If deploying K3s on a Raspberry Pi or other ARM devices, it is recommended that you use an external SSD. etcd is write intensive; SD cards and eMMC cannot handle the IO load.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– &lt;a href=&#34;https://docs.k3s.io/installation/requirements#disks&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;K3s Documentation – Requirements -&amp;gt; Hardware -&amp;gt; Disks&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In my case, I am using an external MariaDB database running on the&amp;nbsp;&lt;a href=&#34;https://www.corsair.com/us/en/p/data-storage/cmfvygtx3c-256gb/flash-voyager-gtx-usb-3-1-256gb-premium-flash-drive-cmfvygtx3c-256gb&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Corsair Flash Voyager GTX 256GB USB 3.1 Premium Flash Drive&lt;/a&gt;. For comparison, the&amp;nbsp;&lt;a href=&#34;https://www.amazon.com/SanDisk-Extreme-microSDXC-Memory-Adapter/dp/B09X7CRKRZ/ref=sr_1_1?crid=2WFZDBMVRT0HP&amp;amp;dib=eyJ2IjoiMSJ9.ux20OaUNF6XBPajRAA5x7UFt2T38_NMfoGlpb-uQPK1_89xjiZxpbbPkaUaV8G2tQw_5FW_O22WD_gawx6y4opdJ0NFIO759qaHG5G8vbpkNQi5vlLuXTd41nASoHxZgIik331NU0usAH42GN_ptsKhWSdVm_jCNrA_t85IsKSKyV3Llpx5zt3m1nVVjS2Q0VzxBMt_ygdX7eBYZiQ7HrA0gFaLDBv-xLd7MZpAvYjU.Dx2XvPX09HARgnZYlYmAeENyINErLjMjnes3mkiI_9s&amp;amp;dib_tag=se&amp;amp;keywords=sanDisk%2B256GB%2BExtreme%2BmicroSDXC%2BUHS-I&amp;amp;qid=1733096767&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SanDisk 256GB Extreme microSDXC UHS-I&amp;nbsp;&lt;/a&gt;card offers a write rate of 130MB/s and a read rate of 190MB/s, while the Voyager GTX USB 3.1 provides a read and write rate of 440MB/s. However, it comes at 2.5 times the price of a microSD card.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;cgroups&#34;&gt;cgroups&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes requires the&amp;nbsp;&lt;code&gt;cgroups&lt;/code&gt;&amp;nbsp;(control groups) Linux kernel feature. Unfortunately, the memory subsystem of this feature is not enabled by default in the latest Raspberry Pi OS image. To verify whether it is, you can do a&amp;nbsp;&lt;code&gt;cat /proc/cgroups&lt;/code&gt;&amp;nbsp;and see whether there is a&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;in the&amp;nbsp;&lt;code&gt;enabled&lt;/code&gt;&amp;nbsp;column for the&amp;nbsp;&lt;code&gt;memory&lt;/code&gt;&amp;nbsp;row:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ cat /proc/cgroups&#xA;#subsys_name    hierarchy    num_cgroups    enabled&#xA;cpuset                  0             58          1&#xA;cpu                     0             58          1&#xA;cpuacct                 0             58          1&#xA;blkio                   0             58          1&#xA;memory                  0             58          0&#xA;devices                 0             58          1&#xA;freezer                 0             58          1&#xA;net_cls                 0             58          1&#xA;perf_event              0             58          1&#xA;net_prio                0             58          1&#xA;pids                    0             58          1&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you see a&amp;nbsp;&lt;code&gt;0&lt;/code&gt;&amp;nbsp;like in the output above, you have to enable the memory subsystem. This is done by adding&amp;nbsp;&lt;code&gt;cgroup_enable=memory&lt;/code&gt;&amp;nbsp;to the&amp;nbsp;&lt;code&gt;/boot/firmware/cmdline.txt&lt;/code&gt;&amp;nbsp;file and then reboot the system. The quickest way to do this is via these commands (&lt;strong&gt;note&lt;/strong&gt;:&amp;nbsp;&lt;code&gt;sudo reboot&lt;/code&gt;&amp;nbsp;will reboot your Raspberry Pi):&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo sh -c &#39;echo &#34; cgroup_enable=memory&#34; &amp;gt;&amp;gt; /boot/firmware/cmd&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Note:&amp;nbsp;&lt;/strong&gt;&lt;code&gt;cgroup_enable=cpuset&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;cgroup_memory=1&lt;/code&gt;&amp;nbsp;are no longer required.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once the system is up again, doublecheck the entry for the&amp;nbsp;&lt;code&gt;memory&lt;/code&gt;&amp;nbsp;subsystem, which should now show a&amp;nbsp;&lt;code&gt;1&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ cat /proc/cgroups&#xA;#subsys_name    hierarchy    num_cgroups    enabled&#xA;cpuset                  0             94          1&#xA;cpu                     0             94          1&#xA;cpuacct                 0             94          1&#xA;blkio                   0             94          1&#xA;memory                  0             94          1&#xA;devices                 0             94          1&#xA;freezer                 0             94          1&#xA;net_cls                 0             94          1&#xA;perf_event              0             94          1&#xA;net_prio                0             94          1&#xA;pids                    0             94          1&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-400-background-color has-background&#34;&gt;&lt;strong&gt;Repeat the above step on every Raspberry Pi before continuing.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;static-ip-address-configuration&#34;&gt;Static IP address configuration&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Static IP addresses make things easy for cluster management and communication. It ensures that devices always have the same IP address, which makes it easier to identify a given node and prevent communication disruption between nodes due to changing IP addresses. The latest Raspberry Pi OS has a new NetworkManager and associated command line utilities. For an interactive, text-based UI, use the&amp;nbsp;&lt;code&gt;nmtui&lt;/code&gt;&amp;nbsp;(network manager text user interface) command. For scripting purposes, you can use the&amp;nbsp;&lt;code&gt;nmcli&lt;/code&gt;&amp;nbsp;(network manager command line interface) to assign static IP addresses for the Raspberry Pis. You should find an already preconfigured&amp;nbsp;&lt;code&gt;Wired connection 1&lt;/code&gt;&amp;nbsp;on the ethernet device&amp;nbsp;&lt;code&gt;eth0&lt;/code&gt;. You can verify that via&amp;nbsp;&lt;code&gt;nmcli con show&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ nmcli con show&#xA;NAME                UUID                                  TYPE      DEVICE&#xA;preconfigured       999a68d9-b3e1-4437-bf86-1c9a5f775159  wifi      wlan0&#xA;lo                  db18dd9c-94fe-4fac-8c66-d6ddc3406900  loopback  lo&#xA;Wired connection 1  68f30a89-ef57-3ee9-8238-9310f0829f21  ethernet  eth0&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To change the configuration for the ethernet connection to have a static IP address, use&amp;nbsp;&lt;code&gt;sudo nmcli con mod&lt;/code&gt;. The&amp;nbsp;&lt;code&gt;NN&lt;/code&gt;&amp;nbsp;reflects the digits you want to use for the Raspberry Pi. In my case, it’s going to be&amp;nbsp;&lt;code&gt;10&lt;/code&gt;,&amp;nbsp;&lt;code&gt;11&lt;/code&gt;,&amp;nbsp;&lt;code&gt;12&lt;/code&gt;,&amp;nbsp;&lt;code&gt;13&lt;/code&gt;,&amp;nbsp;&lt;code&gt;14&lt;/code&gt;, and&amp;nbsp;&lt;code&gt;15&lt;/code&gt;&amp;nbsp;on the given node:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo nmcli c mod &#34;Wired connection 1&#34; ipv4.addresses &#34;192.168.0.NN/24&#34; ipv4.method manual&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you also want to set a Gateway address to reach the outside network and/or internet and DNS entries for name resolution, you can do so with the following commands:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo nmcli con mod &#34;Wired connection 1&#34; ipv4.gateway 192.168.0.1&#xA;sudo nmcli con mod &#34;Wired connection 1&#34; ipv4.dns &#34;192.168.0.1, 1.1.1.1, 8.8.8.8&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&amp;nbsp;In my case, I will reach the outside world via the WiFi connection. The ethernet connection is purely for cluster communication&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-400-background-color has-background&#34;&gt;&lt;strong&gt;Repeat the above step on every Raspberry Pi before continuing.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;installing-k3s&#34;&gt;Installing K3s&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The simplest way to install K3s is by running&amp;nbsp;&lt;code&gt;curl -sfL https://get.k3s.io | sh -&lt;/code&gt;. However, because I’m using an external MariaDB database as the cluster data store, things are a bit different. Instead of using&amp;nbsp;&lt;code&gt;etcd&lt;/code&gt;, the installation needs to connect to the MariaDB database. This can be done by supplying the&amp;nbsp;&lt;code&gt;--datastore-endpoint&lt;/code&gt;&amp;nbsp;parameter or&amp;nbsp;&lt;code&gt;K3S_DATASTORE_ENDPOINT&lt;/code&gt;&amp;nbsp;environment variable during the installation. For more details, see&amp;nbsp;&lt;a href=&#34;https://docs.k3s.io/datastore?ext-db=MySQL+%2F+MariaDB&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cluster Datastore in the K3s documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;creating-the-mariadb-database-and-user-for-kubernetes&#34;&gt;Creating the MariaDB database and user for Kubernetes&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;K3s is capable of connecting to the MariaDB socket at&amp;nbsp;&lt;code&gt;/var/run/mysqld/mysqld.sock&lt;/code&gt;&amp;nbsp;using the&amp;nbsp;&lt;code&gt;root&lt;/code&gt;&amp;nbsp;user if just&amp;nbsp;&lt;code&gt;mysql://&lt;/code&gt;&amp;nbsp;is provided as the datastore-endpoint. That means that the database needs to run on the same host as the control plane and socket connectivity for&amp;nbsp;&lt;code&gt;root&lt;/code&gt;&amp;nbsp;has to be enabled in the MariaDB configuration. Alternatively, one can create a user and database manually, which is what I will do. The user and database will both be called&amp;nbsp;&lt;code&gt;kubernetes&lt;/code&gt;. Here are the four SQL statements you will need for that:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;CREATE DATABASE kubernetes;&#xA;CREATE USER &#39;kubernetes&#39;@&#39;&amp;lt;your IP address range&amp;gt;&#39; IDENTIFIED BY &#39;&amp;lt;your password&amp;gt;&#39;;&#xA;GRANT ALL PRIVILEGES ON kubernetes.* TO &#39;kubernetes&#39;@&#39;&amp;lt;your IP address range&amp;gt;&#39;;&#xA;FLUSH PRIVILEGES;&#xA;gvenzl@gvenzl-rbp-0:~ $ sudo mysql&#xA;Welcome to the MariaDB monitor.  Commands end with ; or \g.&#xA;Your MariaDB connection id is 36&#xA;Server version: 10.11.6-MariaDB-0+deb12u1 Debian 12&#xA; &#xA;Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.&#xA; &#xA;Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.&#xA; &#xA;MariaDB [(none)]&amp;gt; CREATE DATABASE kubernetes;&#xA;Query OK, 1 row affected (0.001 sec)&#xA; &#xA;MariaDB [(none)]&amp;gt; CREATE USER &#39;kubernetes&#39;@&#39;192.168.10.%&#39; IDENTIFIED BY &#39;*********&#39;;&#xA;Query OK, 0 rows affected (0.005 sec)&#xA; &#xA;MariaDB [(none)]&amp;gt; GRANT ALL PRIVILEGES ON kubernetes.* TO &#39;kubernetes&#39;@&#39;192.168.10.%&#39;;&#xA;Query OK, 0 rows affected (0.002 sec)&#xA; &#xA;MariaDB [(none)]&amp;gt; FLUSH PRIVILEGES;&#xA;Query OK, 0 rows affected (0.002 sec)&#xA; &#xA;MariaDB [(none)]&amp;gt; exit;&#xA;Bye&#xA;gvenzl@gvenzl-rbp-0:~ $&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;running-the-k3s-setup-script-on-the-control-plane-raspberry-pi&#34;&gt;Running the K3s setup script on the control plane Raspberry Pi&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To start the K3s installation, a slightly different variation from the above setup script needs to be run to include the&amp;nbsp;&lt;code&gt;--datastore-endpoint&lt;/code&gt;&amp;nbsp;parameter:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | sh -s - --datastore-endpoint mysql://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@tcp(&amp;lt;hostname&amp;gt;:3306)/&amp;lt;database-name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In my case, this is going to look like this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | sh -s - --datastore-endpoint &#34;mysql://kubernetes:*******@tcp(192.168.10.10:3306)/kubernetes&#34;&#xA;gvenzl@gvenzl-rbp-0:~ $ curl -sfL https://get.k3s.io | sh -s - --datastore-endpoint &#34;mysql://kubernetes:*********@tcp(192.168.10.10:3306)/kubernetes&#34;&#xA;[INFO]  Finding release for channel stable&#xA;[INFO]  Using v1.30.6+k3s1 as release&#xA;[INFO]  Downloading hash https://github.com/k3s-io/k3s/releases/download/v1.30.6+k3s1/sha256sum-arm64.txt&#xA;[INFO]  Downloading binary https://github.com/k3s-io/k3s/releases/download/v1.30.6+k3s1/k3s-arm64&#xA;[INFO]  Verifying binary download&#xA;[INFO]  Installing k3s to /usr/local/bin/k3s&#xA;[INFO]  Finding available k3s-selinux versions&#xA;sh: 416: [: k3s-selinux-1.6-1.el9.noarch.rpm: unexpected operator&#xA;[INFO]  Creating /usr/local/bin/kubectl symlink to k3s&#xA;[INFO]  Creating /usr/local/bin/crictl symlink to k3s&#xA;[INFO]  Creating /usr/local/bin/ctr symlink to k3s&#xA;[INFO]  Creating killall script /usr/local/bin/k3s-killall.sh&#xA;[INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh&#xA;[INFO]  env: Creating environment file /etc/systemd/system/k3s.service.env&#xA;[INFO]  systemd: Creating service file /etc/systemd/system/k3s.service&#xA;[INFO]  systemd: Enabling k3s unit&#xA;Created symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.&#xA;[INFO]  Host iptables-save/iptables-restore tools not found&#xA;[INFO]  Host ip6tables-save/ip6tables-restore tools not found&#xA;[INFO]  systemd: Starting k3s&#xA;gvenzl@gvenzl-rbp-0:~ $&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once the script has finished, verify the control plane setup via&amp;nbsp;&lt;code&gt;sudo kubectl get nodes&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ sudo kubectl get nodes&#xA;NAME           STATUS   ROLES                  AGE     VERSION&#xA;gvenzl-rbp-0   Ready    control-plane,master   2m48s   v1.30.6+k3s1&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;adding-nodes-to-the-cluster&#34;&gt;Adding nodes to the cluster&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To add the additional Pis to the cluster, you must first retrieve the cluster token in the&amp;nbsp;&lt;code&gt;/var/lib/rancher/k3s/server/token&lt;/code&gt;&amp;nbsp;file, which is needed for the agent installation. You can do that via the following command:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo cat /var/lib/rancher/k3s/server/token&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And will get a token that looks something like this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ sudo cat /var/lib/rancher/k3s/server/token&#xA;K103bf5abb471fc2f7bcda85fa95a60c0f934a22a858c6ae943f4d7e0ee4091bc11::server:f3d376e3274a174a38b3b97d224aac6d&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once you have retrieved the token, connect to the other Raspberry Pis and execute the following command:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | K3S_URL=https://&amp;lt;control plane node IP&amp;gt;:6443 K3S_TOKEN=&amp;lt;server token&amp;gt; sh -&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For example:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | K3S_URL=https://192.168.10.10:6443 K3S_TOKEN=K103bf5abb471fc2f7bcda85fa95a60c0f934a22a858c6ae943f4d7e0ee4091bc11::server:f3d376e3274a174a38b3b97d224aac6d sh -&#xA;gvenzl@gvenzl-rbp-1:~ $ curl -sfL https://get.k3s.io | K3S_URL=https://192.168.10.10:6443 K3S_TOKEN=K103bf5abb471fc2f7bcda85fa95a60c0f934a22a858c6ae943f4d7e0ee4091bc11::server:f3d376e3274a174a38b3b97d224aac6d sh -&#xA;[INFO]  Finding release for channel stable&#xA;[INFO]  Using v1.30.6+k3s1 as release&#xA;[INFO]  Downloading hash https://github.com/k3s-io/k3s/releases/download/v1.30.6+k3s1/sha256sum-arm64.txt&#xA;[INFO]  Downloading binary https://github.com/k3s-io/k3s/releases/download/v1.30.6+k3s1/k3s-arm64&#xA;[INFO]  Verifying binary download&#xA;[INFO]  Installing k3s to /usr/local/bin/k3s&#xA;[INFO]  Finding available k3s-selinux versions&#xA;sh: 416: [: k3s-selinux-1.6-1.el9.noarch.rpm: unexpected operator&#xA;[INFO]  Creating /usr/local/bin/kubectl symlink to k3s&#xA;[INFO]  Creating /usr/local/bin/crictl symlink to k3s&#xA;[INFO]  Creating /usr/local/bin/ctr symlink to k3s&#xA;[INFO]  Creating killall script /usr/local/bin/k3s-killall.sh&#xA;[INFO]  Creating uninstall script /usr/local/bin/k3s-agent-uninstall.sh&#xA;[INFO]  env: Creating environment file /etc/systemd/system/k3s-agent.service.env&#xA;[INFO]  systemd: Creating service file /etc/systemd/system/k3s-agent.service&#xA;[INFO]  systemd: Enabling k3s-agent unit&#xA;Created symlink /etc/systemd/system/multi-user.target.wants/k3s-agent.service → /etc/systemd/system/k3s-agent.service.&#xA;[INFO]  Host iptables-save/iptables-restore tools not found&#xA;[INFO]  Host ip6tables-save/ip6tables-restore tools not found&#xA;[INFO]  systemd: Starting k3s-agent&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once the installation has finished on all nodes, you have your K3s cluster up and running. You can verify that by running&amp;nbsp;&lt;code&gt;sudo kubectl get nodes&lt;/code&gt;&amp;nbsp;on the control plane one more time:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ sudo kubectl get nodes&#xA;NAME           STATUS   ROLES                  AGE     VERSION&#xA;gvenzl-rbp-0   Ready    control-plane,master   16m     v1.30.6+k3s1&#xA;gvenzl-rbp-1   Ready    &amp;lt;none&amp;gt;                 5m42s   v1.30.6+k3s1&#xA;gvenzl-rbp-2   Ready    &amp;lt;none&amp;gt;                 3m14s   v1.30.6+k3s1&#xA;gvenzl-rbp-3   Ready    &amp;lt;none&amp;gt;                 2m36s   v1.30.6+k3s1&#xA;gvenzl-rbp-4   Ready    &amp;lt;none&amp;gt;                 2m7s    v1.30.6+k3s1&#xA;gvenzl-rbp-5   Ready    &amp;lt;none&amp;gt;                 42s     v1.30.6+k3s1&#xA;gvenzl@gvenzl-rbp-0:~ $&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Congratulations, you now have a K3s cluster ready for action!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;bonus-access-your-cluster-from-the-outside-with-kubectl&#34;&gt;Bonus: Access your cluster from the Outside with&amp;nbsp;&lt;code&gt;kubectl&lt;/code&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you want to access the cluster from, e.g., your local MacBook with&amp;nbsp;&lt;code&gt;kubectl&lt;/code&gt;, you will need to save a copy of the&amp;nbsp;&lt;code&gt;/etc/rancher/k3s/k3s.yaml&lt;/code&gt;&amp;nbsp;file locally as&amp;nbsp;&lt;code&gt;~/.kube/config&lt;/code&gt;&amp;nbsp;(the&amp;nbsp;&lt;code&gt;k3s.yaml&lt;/code&gt;&amp;nbsp;file needs to be called&amp;nbsp;&lt;code&gt;config&lt;/code&gt;) and replace the value of the&amp;nbsp;&lt;code&gt;server&lt;/code&gt;&amp;nbsp;field with the IP address or name of the K3s server.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;code&gt;kubectl&lt;/code&gt;&amp;nbsp;itself can be installed via Homebrew:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-mac ~ % brew install kubectl&#xA;==&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/kubernetes-cli/manifests/1.31.3&#xA;Already downloaded: /Users/gvenzl/Library/Caches/Homebrew/downloads/f8fd19d10e239038f339af3c9b47978cb154932f089fbf6b7d67ea223df378de--kubernetes-cli-1.31.3.bottle_manifest.json&#xA;==&amp;gt; Fetching kubernetes-cli&#xA;==&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/kubernetes-cli/blobs/sha256:fd154ae205719c58f90bdb2a51c63e428c3bf941013557908ccd322d7488fb67&#xA;Already downloaded: /Users/gvenzl/Library/Caches/Homebrew/downloads/ec1af5c100c16e5e4dc51cff36ce98eb1e257a312ce5a501fae7a07724e59bf9--kubernetes-cli--1.31.3.sonoma.bottle.tar.gz&#xA;==&amp;gt; Pouring kubernetes-cli--1.31.3.sonoma.bottle.tar.gz&#xA;==&amp;gt; Caveats&#xA;zsh completions have been installed to:&#xA;  /usr/local/share/zsh/site-functions&#xA;==&amp;gt; Summary&#xA;🍺  /usr/local/Cellar/kubernetes-cli/1.31.3: 237 files, 61.3MB&#xA;==&amp;gt; Running `brew cleanup kubernetes-cli`...&#xA;Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.&#xA;Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Next, create the&amp;nbsp;&lt;code&gt;~/.kube&lt;/code&gt;&amp;nbsp;folder and save a copy of&amp;nbsp;&lt;code&gt;k3s.yaml&lt;/code&gt;&amp;nbsp;as&amp;nbsp;&lt;code&gt;config&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-mac ~ % mkdir ~/.kube&#xA;gvenzl@gvenzl-mac ~ % scp root@gvenzl-rbp-0:k3s.yaml ~/.kube/config&#xA;root@gvenzl-rbp-0&#39;s password:&#xA;k3s.yaml                               100% 2965   221.2KB/s   00:00&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And replace the&amp;nbsp;&lt;code&gt;server&lt;/code&gt;&amp;nbsp;parameter with the IP address or hostname of your control plane node:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-mac ~ % sed -i &#39;&#39; &#39;s|server: .*|server: https://gvenzl-rbp-0:6443|g&#39; ~/.kube/config&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once you have done that, you can control your cluster locally too:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-mac ~ % kubectl get nodes&#xA;NAME           STATUS   ROLES                  AGE   VERSION&#xA;gvenzl-rbp-0   Ready    control-plane,master   39m   v1.30.6+k3s1&#xA;gvenzl-rbp-1   Ready    &amp;lt;none&amp;gt;                 28m   v1.30.6+k3s1&#xA;gvenzl-rbp-2   Ready    &amp;lt;none&amp;gt;                 25m   v1.30.6+k3s1&#xA;gvenzl-rbp-3   Ready    &amp;lt;none&amp;gt;                 25m   v1.30.6+k3s1&#xA;gvenzl-rbp-4   Ready    &amp;lt;none&amp;gt;                 24m   v1.30.6+k3s1&#xA;gvenzl-rbp-5   Ready    &amp;lt;none&amp;gt;                 23m   v1.30.6+k3s1&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;大使帖子最初发布于 &lt;a href=&#34;https://geraldonit.com/2024/12/16/product-ready-raspbery-pi-kubernetes-cluster/&#34;&gt;Gerald on IT &lt;/a &gt;作者：杰拉尔德·文茨尔&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;em&gt;在本指南中，我将介绍如何使用 K3s 运行生产就绪的 Raspberry Pi Kubernetes 集群。&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;background&#34;&gt;​​背景&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您像我一样，您可能有一堆（较旧的）Raspberry Pi 模型，但没有做太多事情，因为您用较新的模型替换了它们。因此，与其让它们积满灰尘，为什么不创建自己的小型 Kubernetes 集群并在其上部署一些东西，或者只是用它来学习 Kubernetes？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;setup&#34;&gt;设置&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;hardware&#34;&gt;硬件&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;1 个 Raspberry Pi 型号 4 B，带 4 GB RAM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;1 个 Raspberry Pi 型号 4 B，带 2 GB RAM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;4 个 Raspberry Pi 型号 3 B+，带 1 GB RAM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;1 个 Netgear ProSafe 8 端口千兆非托管交换机&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;1 个 Corsair Flash Voyager GTX 256GB USB 3.1 高级闪存盘&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;​​注意：此硬件设置是我可用的。这绝不是构建您自己的集群的建议。如果您有更新、功能更强大的 Raspberry Pi 型号，那么最好使用它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://geraldonit.com/wp-content/uploads/2024/12/k3s-cluster-topology.png&#34; alt= “图像”类=“wp-image-6245”referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;software&#34;&gt;软件&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;所有 Raspberry Pi 都运行 Raspberry Pi OS（带桌面）&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;发布日期：2024 年 11 月 19 日&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;系统：64 位&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;内核版本：6.6&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Debian 版本：12（书呆子）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;why-k3s&#34;&gt;为什么选择 K3？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;K3s 是一个轻量级、经过 CNCF 认证且完全兼容 Kubernetes 的发行版。它作为单个二进制文件提供，需要一半的内存，支持其他数据存储等等。正如&lt;a href=&#34;https://docs.k3s.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;他们的网站&lt;/a&gt;所说，它是：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote has-gray-200-background-color has-background is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;非常适合：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;边缘&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;家庭实验室&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;物联网 (IoT)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;持续集成 (CI)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;开发&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;单板计算机 (ARM)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;气隙环境&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;嵌入式 K8&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;无法获得 K8s 集群学博士学位的情况&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; – &lt;a href=&#34;https://docs.k3s.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;K3s 文档&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安适用于 Raspberry Pi 的 K3s 的另一个优势是它允许除 &lt;code&gt;etcd&lt;/code&gt; 之外的数据存储。这很棒，因为正如&lt;a href=&#34;https://docs.k3s.io/installation/requirements#disks&#34;&gt;他们的网站&lt;/a&gt;所说，&lt;code&gt;etcd&lt;/code&gt; 是写入密集型的，而且 SD卡通常无法处理 IO 负载：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote has-gray-200-background-color has-background is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;K3s的性能取决于数据库的性能。为了确保最佳速度，我们建议尽可能使用 SSD。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果在 Raspberry Pi 或其他 ARM 设备上部署 K3s，建议您使用外部 SSD。 etcd 是写密集型的； SD卡和eMMC无法处理IO负载。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– &lt;a href=&#34;https://docs.k3s.io/installation/requirements#disks&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;K3s 文档 – 要求 -&gt; 硬件 -&gt; 磁盘&lt;/a &gt;&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就我而言，我使用的是在 &lt;a href=&#34;https://www.corsair.com/us/en/p/data-storage/cmfvygtx3c-256gb/flash-voyager- 上运行的外部 MariaDB 数据库gtx-usb-3-1-256gb-premium-flash-drive-cmfvygtx3c-256gb&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Corsair Flash Voyager GTX 256GB USB 3.1 高级闪存盘&lt;/a&gt;。为了进行比较，&lt;a href=&#34;https://www.amazon.com/SanDisk-Extreme-microSDXC-Memory-Adapter/dp/B09X7CRKRZ/ref=sr_1_1?crid=2WFZDBMVRT0HP&amp;dib=eyJ2I joiMSJ9.ux20OaUNF6XBPajRAA5x7UFt2T38_NMfoGlpb-uQPK1_89xjiZxpbbPkaUaV8G2tQw_5FW_O22WD_gawx6y4opdJ0NFIO759qaHG5G8vbpkNQi5vlLu XTd41nASoHxZgIik331NU0usAH42GN_ptsKhWSdVm_jCNrA_t85IsKSKyV3Llpx5zt3m1nVVjS2Q0VzxBMt_ygdX7eBYZiQ7HrA0gFaLDBv-xLd7MZpAvYjuU.Dx 2XvPX09HARgnZYlYmAeENyINErLjMjnes3mkiI_9s&amp;dib_tag=se&amp;关键字=sanDisk%2B256GB%2BExtreme%2BmicroSDXC%2BUHS-I&amp;qid=1733096767&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;闪迪 256GB Extreme microSDXC UHS-I 卡提供 130MB/s 的写入速率和 190MB/s 的读取速率，而 Voyager GTX USB 3.1 则提供 190MB/s 的读取速率写入速率为 440MB/s。然而，它的价格是 microSD 卡的 2.5 倍。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;installation&#34;&gt;安装&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;cgroups&#34;&gt;cgroups&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 需要 &lt;code&gt;cgroups&lt;/code&gt;（控制组）Linux 内核功能。不幸的是，在最新的 Raspberry Pi OS 映像中，默认情况下未启用此功能的内存子系统。要验证是否存在，您可以执行 &lt;code&gt;cat /proc/cgroups&lt;/code&gt; 并查看 &lt;code&gt;enabled&lt;/code&gt; 列中是否存在 &lt;code&gt;1&lt;/code&gt; &lt;代码&gt;内存&lt;/code&gt;行：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ cat /proc/cgroups&#xA;#subsys_name 层次结构 num_cgroups 已启用&#xA;中央处理器组 0 581&#xA;中央处理器 0 58 1&#xA;cpuacct 0 58 1&#xA;BLKIO 0 58 1&#xA;内存 0 58 0&#xA;设备 0 58 1&#xA;冷冻柜 0 58 1&#xA;网络_cls 0 58 1&#xA;性能事件 0 58 1&#xA;网络优先级 0 58 1&#xA;pid 0 58 1&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您在上面的输出中看到 &lt;code&gt;0&lt;/code&gt;，则必须启用内存子系统。这是通过将 &lt;code&gt;cgroup_enable=memory&lt;/code&gt; 添加到 &lt;code&gt;/boot/firmware/cmdline.txt&lt;/code&gt; 文件中，然后重新启动系统来完成的。最快的方法是通过以下命令（&lt;strong&gt;注意&lt;/strong&gt;：&lt;code&gt;sudo restart&lt;/code&gt; 将重新启动您的 Raspberry Pi）：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo sh -c &#39;echo &#34; cgroup_enable=memory&#34; &gt;&gt; /boot/firmware/cmd&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code&gt;cgroup_enable=cpuset&lt;/code&gt; 和 &lt;code&gt;cgroup_memory=1&lt;/code&gt; 不再需要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;系统再次启动后，请仔细检查&lt;code&gt;内存&lt;/code&gt;子系统的条目，该子系统现在应显示&lt;code&gt;1&lt;/code&gt;：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ cat /proc/cgroups&#xA;#subsys_name 层次结构 num_cgroups 已启用&#xA;中央处理器组 0 94 1&#xA;中央处理器 0 94 1&#xA;cpuacct 0 94 1&#xA;BLKIO 0 94 1&#xA;内存 0 94 1&#xA;设备 0 94 1&#xA;冷冻柜 0 94 1&#xA;网络_cls 0 94 1&#xA;性能事件 0 94 1&#xA;网络优先级 0 94 1&#xA;pid 0 94 1&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-400-background-color has-background&#34;&gt;​​&lt;strong&gt;在每个 Raspberry Pi 上重复上述步骤，然后再继续。&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;static-ip-address-configuration&#34;&gt;静态IP地址配置&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;静态 IP 地址使集群管理和通信变得容易。它确保设备始终具有相同的 IP 地址，这使得更容易识别给定节点并防止由于 IP 地址更改而导致节点之间的通信中断。最新的 Raspberry Pi 操作系统有一个新的 NetworkManager 和相关的命令行实用程序。对于基于文本的交互式 UI，请使用&lt;code&gt;nmtui&lt;/code&gt;（网络管理器文本用户界面）命令。出于编写脚本的目的，您可以使用&lt;code&gt;nmcli&lt;/code&gt;（网络管理器命令行界面）为 Raspberry Pi 分配静态 IP 地址。你应在以太网设备 &lt;code&gt;eth0&lt;/code&gt; 上找到已预配置的&lt;code&gt;有线连接 1&lt;/code&gt;。您可以通过&lt;code&gt;nmcli con show&lt;/code&gt;进行验证：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ nmcli con show&#xA;名称 UUID 类型 设备&#xA;预配置 999a68d9-b3e1-4437-bf86-1c9a5f775159 wifi wlan0&#xA;罗 db18dd9c-94fe-4fac-8c66-d6ddc3406900 环回罗&#xA;有线连接 1 68f30a89-ef57-3ee9-8238-9310f0829f21 以太网 eth0&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要将以太网连接的配置更改为静态 IP 地址，请使用 &lt;code&gt;sudo nmcli con mod&lt;/code&gt;。 &lt;code&gt;NN&lt;/code&gt; 反映您想要用于 Raspberry Pi 的数字。就我而言，它将是 &lt;code&gt;10&lt;/code&gt;、&lt;code&gt;11&lt;/code&gt;、&lt;code&gt;12&lt;/code&gt;、&lt;code&gt;13&lt;/code&gt;、&lt;code&gt;14&lt;/code&gt;给定节点上的 code&gt; 和 &lt;code&gt;15&lt;/code&gt;：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo nmcli c mod &#34;有线连接1&#34; ipv4.addresses &#34;192.168.0.NN/24&#34; ipv4.method 手册&lt;/code&gt;&lt;/上一篇&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您还想设置网关地址以访问外部网络和/或 Internet 和 DNS 条目以进行名称解析，则可以使用以下命令来实现：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo nmcli con mod &#34;有线连接 1&#34; ipv4.gateway 192.168.0.1&#xA;sudo nmcli con mod &#34;有线连接1&#34; ipv4.dns &#34;192.168.0.1, 1.1.1.1, 8.8.8.8&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：就我而言，我将通过 WiFi 连接与外界联系。以太网连接纯粹用于集群通信&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-400-background-color has-background&#34;&gt;​​&lt;strong&gt;在每个 Raspberry Pi 上重复上述步骤，然后再继续。&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;installing-k3s&#34;&gt;安装 K3s&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安装 K3s 最简单的方法是运行 &lt;code&gt;curl -sfL https://get.k3s.io | sh-&lt;/code&gt;。但是，因为我使用外部 MariaDB 数据库作为集群数据存储，所以情况有点不同。安装需要连接到 MariaDB 数据库，而不是使用 &lt;code&gt;etcd&lt;/code&gt;。这可以通过在安装期间提供 &lt;code&gt;--datastore-endpoint&lt;/code&gt; 参数或 &lt;code&gt;K3S_DATASTORE_ENDPOINT&lt;/code&gt; 环境变量来完成。有关更多详细信息，请参阅 K3s 文档中的&lt;a href=&#34;https://docs.k3s.io/datastore?ext-db=MySQL+%2F+MariaDB&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;集群数据存储&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;creating-the-mariadb-database-and-user-for-kubernetes&#34;&gt;为 Kubernetes 创建 MariaDB 数据库和用户&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;K3s 能够使用 &lt;code&gt;root&lt;/code&gt; 用户连接到 &lt;code&gt;/var/run/mysqld/mysqld.sock&lt;/code&gt; 处的 MariaDB 套接字，只要 &lt;code&gt;mysql:// &lt;/code&gt; 作为数据存储端点提供。这意味着数据base 需要与控制平面运行在同一主机上，并且必须在 MariaDB 配置中启用 &lt;code&gt;root&lt;/code&gt; 的套接字连接。或者，可以手动创建用户和数据库，这就是我要做的。用户和数据库都称为&lt;code&gt;kubernetes&lt;/code&gt;。以下是您需要的四个 SQL 语句：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;创建数据库 kubernetes;&#xA;CREATE USER &#39;kubernetes&#39;@&#39;&lt;您的 IP 地址范围&gt;&#39; IDENTIFIED BY &#39;&lt;您的密码&gt;&#39;;&#xA;将 kubernetes.* 上的所有权限授予 &#39;kubernetes&#39;@&#39;&lt;您的 IP 地址范围&gt;&#39;;&#xA;同花顺特权；&#xA;gvenzl@gvenzl-rbp-0:~ $ sudo mysql&#xA;欢迎使用 MariaDB 监视器。  命令以 ; 结尾或\g。&#xA;您的 MariaDB 连接 ID 是 36&#xA;服务器版本：10.11.6-MariaDB-0+deb12u1 Debian 12&#xA; &#xA;版权所有 (c) 2000、2018，Oracle、MariaDB Corporation Ab 等。&#xA; &#xA;输入“帮助”；或“\h”寻求帮助。键入“\c”以清除当前输入语句。&#xA; &#xA;MariaDB [(无)]&gt; 创建数据库 kubernetes;&#xA;查询正常，1 行受影响（0.001 秒）&#xA; &#xA;MariaDB [(无)]&gt; 创建用户 &#39;kubernetes&#39;@&#39;192.168.10.%&#39; 标识为 &#39;************&#39;;&#xA;查询正常，0 行受影响（0.005 秒）&#xA; &#xA;MariaDB [(none)]&gt; 将 kubernetes.* 上的所有权限授予 &#39;kubernetes&#39;@&#39;192.168.10.%&#39;;&#xA;查询正常，0 行受影响（0.002 秒）&#xA; &#xA;MariaDB [(无)]&gt; 刷新权限；&#xA;查询正常，0 行受影响（0.002 秒）&#xA; &#xA;MariaDB [(无)]&gt; 退出；&#xA;再见&#xA;gvenzl@gvenzl-rbp-0:~ $&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;running-the-k3s-setup-script-on-the-control-plane-raspberry-pi&#34;&gt;在控制平面 Raspberry Pi 上运行 K3s 设置脚本&lt;/ H4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要开始 K3s 安装，需要运行与上述设置脚本略有不同的变体以包含 &lt;code&gt;--datastore-endpoint&lt;/code&gt; 参数：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | sh -s - --datastore-endpoint mysql://&lt;用户名&gt;:&lt;密码&gt;@tcp(&lt;主机名&gt;:3306)/&lt;数据库名称&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就我而言，它看起来像这样：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | sh -s - --datastore-endpoint &#34;mysql://kubernetes:********@tcp(192.168.10.10:3306)/kubernetes&#34;&#xA;gvenzl@gvenzl-rbp-0:~ $curl -sfL https://get.k3s.io | sh -s - --datastore-endpoint &#34;mysql://kubernetes:*********@tcp(192.168.10.10:3306)/kubernetes&#34;&#xA;[INFO] 寻找通道稳定版本&#xA;[INFO] 使用 v1.30.6+k3s1 作为版本&#xA;[信息] 下载哈希 https://github.com/k3s-io​​/k3s/releases/download/v1.30.6+k3s1/sha256sum-arm64.txt&#xA;[信息] 下载二进制文件 https://github.com/k3s-io​​/k3s/releases/download/v1.30.6+k3s1/k3s-arm64&#xA;[INFO] 验证二进制下载&#xA;[INFO] 将 k3s 安装到 /usr/local/bin/k3s&#xA;[INFO] 查找可用的 k3s-selinux 版本&#xA;sh：416：[：k3s-selinux-1.6-1.el9.noarch.rpm：意外的运算符&#xA;[INFO] 创建 /usr/local/bin/kubectl 到 k3s 的符号链接&#xA;[INFO] 创建 /usr/local/bin/crictl 到 k3s 的符号链接[INFO] 创建 /usr/local/bin/ctr 到 k3s 的符号链接&#xA;[信息] 创建killall脚本 /usr/local/bin/k3s-killall.sh&#xA;[信息] 创建卸载脚本 /usr/local/bin/k3s-uninstall.sh&#xA;[INFO] env：创建环境文件 /etc/systemd/system/k3s.service.env&#xA;[信息] systemd：创建服务文件 /etc/systemd/system/k3s.service&#xA;[INFO] systemd：启用 k3s 单元&#xA;创建符号链接 /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service。&#xA;[信息] 找不到主机 iptables-save/iptables-restore 工具&#xA;[信息] 找不到主机 ip6tables-save/ip6tables-restore 工具&#xA;[信息] systemd：启动 k3s&#xA;gvenzl@gvenzl-rbp-0:~ $&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;脚本完成后，通过&lt;code&gt;sudo kubectl getnodes&lt;/code&gt;验证控制平面设置：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ sudo kubectl 获取节点&#xA;姓名 状态 角色 年龄 版本&#xA;gvenzl-rbp-0 就绪控制平面，master 2m48s v1.30.6+k3s1&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;adding-nodes-to-the-cluster&#34;&gt;向集群添加节点&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要将其他 Pi 添加到集群，您必须首先在 &lt;code&gt;/var/lib/rancher/k3s/server/token&lt;/code&gt; 文件中检索集群令牌，这是安装代理所需的。您可以通过以下命令来做到这一点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo cat /var/lib/rancher/k3s/server/token&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;并且会得到一个看起来像这样的令牌：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ sudo cat /var/lib/rancher/k3s/server/token&#xA;K103bf5abb471fc2f7bcda85fa95a60c0f934a22a858c6ae943f4d7e0ee4091bc11::server:f3d376e3274a174a38b3b97d224aac6d&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;检索到令牌后，连接到其他 Raspberry Pi 并执行以下命令：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | K3S_URL=https://&lt;控制平面节点IP&gt;:6443 K3S_TOKEN=&lt;服务器令牌&gt; sh -&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;例如：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | K3S_URL=https://192.168.10.10:6443 K3S_TOKEN=K103bf5abb471fc2f7bcda85fa95a60c0f934a22a858c6ae943f4d7e0ee4091bc11::server:f3d376e3274a174a38b3b97d224aac6d sh -&#xA;gvenzl@gvenzl-rbp-1:~ $curl -sfL https://get.k3s.io | K3S_URL=https://192.168.10.10:6443 K3S_TOKEN=K103bf5abb471fc2f7bcda85fa95a60c0f934a22a858c6ae943f4d7e0ee4091bc11::server:f3d376e3274a174a38b3b97d224aac6d sh -&#xA;[INFO] 寻找通道稳定版本&#xA;[INFO] 使用 v1.30.6+k3s1 作为版本&#xA;[信息] 下载哈希 https://github.com/k3s-io​​/k3s/releases/download/v1.30.6+k3s1/sha256sum-arm64.txt&#xA;[信息] 下载二进制文件 https://github.com/k3s-io​​/k3s/releases/download/v1.30.6+k3s1/k3s-arm64&#xA;[INFO] 验证二进制下载&#xA;[INFO] 将 k3s 安装到 /usr/local/bin/k3s&#xA;[INFO] 查找可用的 k3s-selinux 版本&#xA;sh：416：[：k3s-selinux-1.6-1.el9.noarch.rpm：意外的运算符&#xA;[我NFO] 创建 /usr/local/bin/kubectl 到 k3s 的符号链接&#xA;[INFO] 创建 /usr/local/bin/crictl 到 k3s 的符号链接&#xA;[INFO] 创建 /usr/local/bin/ctr 到 k3s 的符号链接&#xA;[信息] 创建killall脚本 /usr/local/bin/k3s-killall.sh&#xA;[信息] 创建卸载脚本 /usr/local/bin/k3s-agent-uninstall.sh&#xA;[INFO] env：创建环境文件 /etc/systemd/system/k3s-agent.service.env&#xA;[信息] systemd：创建服务文件 /etc/systemd/system/k3s-agent.service&#xA;[INFO] systemd：启用 k3s-agent 单元&#xA;创建符号链接 /etc/systemd/system/multi-user.target.wants/k3s-agent.service → /etc/systemd/system/k3s-agent.service。&#xA;[信息] 找不到主机 iptables-save/iptables-restore 工具&#xA;[信息] 找不到主机 ip6tables-save/ip6tables-restore 工具&#xA;[信息] systemd：启动 k3s-agent&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在所有节点上完成安装后，您的 K3s 集群就已启动并运行。您可以通过在控制平面上再次运行 &lt;code&gt;sudo kubectl getnodes&lt;/code&gt; 来验证这一点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-rbp-0:~ $ sudo kubectl 获取节点&#xA;姓名 状态 角色 年龄 版本&#xA;gvenzl-rbp-0 就绪控制平面，master 16m v1.30.6+k3s1&#xA;gvenzl-rbp-1 就绪 &lt;无&gt; 5m42s v1.30.6+k3s1&#xA;gvenzl-rbp-2 就绪 &lt;无&gt; 3m14s v1.30.6+k3s1&#xA;gvenzl-rbp-3 就绪 &lt;无&gt; 2m36s v1.30.6+k3s1&#xA;gvenzl-rbp-4 就绪 &lt;无&gt; 2m7s v1.30.6+k3s1&#xA;gvenzl-rbp-5 就绪 &lt;无&gt; 42s v1.30.6+k3s1&#xA;gvenzl@gvenzl-rbp-0:~ $&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;恭喜，您现在已经拥有一个可以使用的 K3s 集群！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;bonus-access-your-cluster-from-the-outside-with-kubectl&#34;&gt;奖励：使用 &lt;code&gt;kubectl&lt;/code&gt; 从外部访问您的集群&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想使用 &lt;code&gt;kubectl&lt;/code&gt; 从本地 MacBook 等设备访问集群，则需要保存 &lt;code&gt;/etc/rancher/k3s/k3s.yaml&lt; /code&gt; 本地文件为 &lt;code&gt;~/.kube/config&lt;/code&gt;（&lt;code&gt;k3s.yaml&lt;/code&gt; 文件需要调用 &lt;code&gt;config&lt;/code&gt;）并替换&lt;code&gt;server&lt;/code&gt; 字段的值以及 K3s 服务器的 IP 地址或名称。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;code&gt;kubectl&lt;/code&gt; 本身可以通过 Homebrew 安装：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-mac ~ %brew install kubectl&#xA;==&gt; 下载 https://ghcr.io/v2/homebrew/core/kubernetes-cli/manifests/1.31.3&#xA;已下载：/Users/gvenzl/Library/Caches/Homebrew/downloads/f8fd19d10e239038f339af3c9b47978cb154932f089fbf6b7d67ea223df378de--kubernetes-cli-1.31.3.bottle_manifest.json&#xA;==&gt; 获取 kubernetes-cli&#xA;==&gt;下载https://ghcr.io/v2/homebrew/core/kubernetes-cli/blobs/sha256:fd154ae205719c58f90bdb2a51c63e428c3bf941013557908ccd322d7488fb67&#xA;已下载：/Users/gvenzl/Library/Caches/Homebrew/downloads/ec1af5c100c16e5e4dc51cff36ce98eb1e257a312ce5a501fae7a07724e59bf9--kubernetes-cli--1.31.3.sonoma.bottle.tar.gz&#xA;==&gt;浇注kubernetes-cli--1.31.3.sonoma.bottle.tar.gz&#xA;==&gt; 注意事项&#xA;zsh 补全已安装到：&#xA;  /usr/local/share/zsh/site-functions&#xA;==&gt;总结&#xA;🍺 /usr/local/Cellar/kubernetes-cli/1.31.3：237 个文件，61.3MB&#xA;==&gt; 运行 `brew cleanup kubernetes-cli`...&#xA;通过设置 HOMEBREW_NO_INSTALL_CLEANUP 禁用此行为。&#xA;使用 HOMEBREW_NO_ENV_HINTS 隐藏这些提示（请参阅“manbrew”）。&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;接下来，创建 &lt;code&gt;~/.kube&lt;/code&gt; 文件夹并将 &lt;code&gt;k3s.yaml&lt;/code&gt; 的副本保存为 &lt;code&gt;config&lt;/code&gt;：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-mac ~ % mkdir ~/.kube&#xA;gvenzl@gvenzl-mac ~ % scp root@gvenzl-rbp-0:k3s.yaml ~/.kube/config&#xA;root@gvenzl-rbp-0 的密码：&#xA;k3s.yaml 100% 2965 221.2KB/s 00:00&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;并将 &lt;code&gt;server&lt;/code&gt; 参数替换为控制平面节点的 IP 地址或主机名：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-mac ~ % sed -i &#39;&#39; &#39;s|服务器：.*|服务器：https://gvenzl-rbp-0 :6443|g&#39; ~/.kube/config&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;完成此操作后，您也可以在本地控制集群：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;gvenzl@gvenzl-mac ~ % kubectl 获取节点&#xA;姓名 状态 角色 年龄 版本&#xA;gvenzl-rbp-0 就绪控制平面，master 39m v1.30.6+k3s1&#xA;gvenzl-rbp-1 就绪 &lt;无&gt; 28m v1.30.6+k3s1&#xA;gvenzl-rbp-2 就绪 &lt;无&gt; 25m v1.30.6+k3s1&#xA;gvenzl-rbp-3 就绪 &lt;无&gt; 25m v1.30.6+k3s1&#xA;gvenzl-rbp-4 就绪 &lt;无&gt; 24m v1.30.6+k3s1&#xA;gvenzl-rbp-5 就绪 &lt;无&gt; 23m v1.30.6+k3s1&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 26 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Navigating Platform Engineering pitfalls with WebAssembly components】使用 WebAssembly 组件克服平台工程陷阱</title>
      <link>https://www.cncf.io/blog/2024/12/23/navigating-platform-engineering-pitfalls-with-webassembly-components/</link>
      <description>【&lt;p&gt;&lt;em&gt;Ambassador post by &lt;a href=&#34;https://www.linkedin.com/in/hectaman&#34;&gt;Liam Randall&lt;/a&gt;, CNCF Ambassador and CEO, Cosmonic&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We recently had the opportunity to &lt;a href=&#34;https://wasmcloud.com/blog/2024-09-24-wasmcloud-innovation-day-2024-in-review&#34;&gt;reflect&lt;/a&gt; on the state of platform engineering within large companies—and the role WebAssembly has to play in the discipline’s future. In this post, we’ll take a look at the cost and complexity challenges faced by teams building and running applications at scale. Then, we’ll consider the role of WebAssembly—and platforms like incubating Cloud Native Foundation (CNCF) wasmCloud—in overcoming these obstacles.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The pitfalls of modern platform engineering&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Platform engineering as a practice really began during the “container era” of compute. We split archaic systems into manageable microservices, packaged those microservices into containers, then orchestrated those containers with Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This brought infrastructure and platform teams closer together. Infrastructure teams became part of the same team that provisioned common application services for developers to build with—everything from Secrets management to authentication and authorization. Without a doubt, containers have improved engineering for the better, but they’ve also brought along some big problems.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;💡 For a more in-depth analysis of the challenges facing platform engineering teams Bailey Hayes’s &lt;a href=&#34;https://youtu.be/PexRsU8sVIs&#34;&gt;recent Innovation Day keynote&lt;/a&gt; is unmissable.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;2235&#34; height=&#34;914&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform.jpg&#34; alt=&#34;Fig 1. Eras of compute and the evolution of the platform.&#34; class=&#34;wp-image-122098&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform.jpg 2235w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-300x123.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-1024x419.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-768x314.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-900x368.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-1800x736.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-489x200.jpg 489w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-978x400.jpg 978w&#34; sizes=&#34;auto, (max-width: 2235px) 100vw, 2235px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Fig 1. Eras of compute and the evolution of the platform.&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The high price of application build-run-maintain&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Today, it is simply too expensive to build, run, and maintain applications. This starts with the choice of language, and the “golden template” we use for all our different enterprise applications. We are tied into specific clients and frameworks that are built for a specific language. All of this means we have to build and maintain applications on an app-by-app basis.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When platform engineers need to update a given platform, they need their users—application developers—to update dependencies for every application. Because most applications are composed largely of open source dependencies, they inherit the cost of maintaining these to prevent vulnerabilities. Engineers churn on a hamster wheel of application maintenance which is expensive and unproductive.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Containers can’t solve the hamster wheel. Moreover, containerization runs up against some significant limits in portability. We have to build differentiated containers for diverse architectures. Even at their leanest, Kubernetes and containers are too unwieldy to run on sensors, on IoT devices, and in many other edge environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;So how can we make applications that are truly portable? While we’re at it, can we &lt;strong&gt;solve the hamster wheel&lt;/strong&gt; and language silo problems?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The answer lies in portable, interoperable &lt;strong&gt;WebAssembly components&lt;/strong&gt;. We’re entering a new era of &lt;em&gt;componentization&lt;/em&gt; where our distributed units of compute are WebAssembly components—orchestrated by wasmCloud.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Wasm vs Containers&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It’s important to mention, wasmCloud loves Kubernetes—Wasm runs really well &lt;a href=&#34;https://wasmcloud.com/blog/how-to-run-webassembly-components-on-kubernetes-with-wasmcloud&#34;&gt;alongside containers&lt;/a&gt;. The &lt;a href=&#34;https://github.com/wasmCloud/wasmcloud-operator&#34;&gt;wasmcloud-operator&lt;/a&gt; and Helm charts make deploying Wasm on Kubernetes pretty simple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;💡 For an example of a large organization bringing Wasm to its Kubernetes estate, &lt;a href=&#34;https://www.cncf.io/blog/2022/11/17/better-together-a-kubernetes-and-wasm-case-study/&#34;&gt;Adobe’s use case&lt;/a&gt; is a great starting point.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Having said that, Kubernetes is designed for &lt;em&gt;infrastructure&lt;/em&gt; orchestration, not application management. wasmCloud is designed for application orchestration at-scale, and it can handle that job either standalone or on a Kubernetes cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Think of WebAssembly as a tiny VM. A Wasm application is compiled with components into a highly efficient binary format which is smaller and more lightweight than traditional container images. This reduced size minimizes memory and storage requirements, allowing more workloads to fit into the same amount of space. Containers are much larger—ranging from MBs to GBs—where a componentized WebAssembly application ranges from &lt;strong&gt;KBs to MBs&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Wasm components themselves are sandboxed, stateless, and &lt;strong&gt;secure by-default&lt;/strong&gt; because they are incapable of interacting with an operating system on their own. With containers, there are a host of processes, best practices, and tools required to achieve the right level of security and isolation. Containers are an intrinsically safe way to sandbox and isolate arbitrary user code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While containers enhance the portability of applications, those images are still bound to specific CPU architectures. With WebAssembly components, &lt;strong&gt;the .wasm binary is the same for any environment&lt;/strong&gt;, as long as that environment has a WebAssembly runtime. Wasm’s portability allows workloads to run across heterogeneous environments, such as cloud, edge, or even resource-constrained devices.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Container cold-starts take seconds, whereas &lt;strong&gt;WebAssembly components start in less than a millisecond&lt;/strong&gt;. The latency of a user’s request is typically about 200ms, which means containers must be running at all times, ready to service requests even when they’re not needed.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;2158&#34; height=&#34;943&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly.jpg&#34; alt=&#34;Fig 2. Container cold start time compared to that of WebAssembly.&#34; class=&#34;wp-image-122099&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly.jpg 2158w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-300x131.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-1024x447.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-768x336.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-900x393.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-1800x787.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-458x200.jpg 458w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-915x400.jpg 915w&#34; sizes=&#34;auto, (max-width: 2158px) 100vw, 2158px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Fig 2. Container cold start time compared to that of WebAssembly.&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’ll soon see new types of architectures evolve that capitalize on the size and speed of components. Why make a network request to somewhere else when you run that compute locally, on a user’s device?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This all sounds great. But what if you’ve spent years putting Kubernetes at the center of your universe—if containers work well enough, does adopting Wasm equal another heavy lift into the unknown? To answer that, we need to explore how components work.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Components…everywhere!&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We often pack the whole world into containers, with Wasm components we get down to the application’s core logic. Packaged as &lt;a href=&#34;https://tag-runtime.cncf.io/wgs/wasm/deliverables/wasm-oci-artifact/&#34;&gt;OCI artifacts&lt;/a&gt;, components radically simplify the way that developers build applications. We compose applications with standard, &lt;strong&gt;reusable&lt;/strong&gt; building blocks (components) that only contain the logic we need and that are compiled at runtime.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;That’s huge. We can reuse our components—rather than rewriting them—and they only contain the code required. By eliminating boilerplate code (the stuff we import in libraries) vulnerabilities are completely eliminated. When thinking about the time spent identifying, reporting, and remediating vulnerabilities, this is transformational.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Components build on top of each other, &lt;strong&gt;just like Lego blocks&lt;/strong&gt;. They run anywhere components are supported and, of course, because they’re tiny, we can run componentized applications in resource-constrained environments at network edges. As we’ll see later manufacturing and IoT is emerging as a clear use case for wasmCloud.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;💡 The &lt;a href=&#34;https://wasmcloud.com/docs/concepts/components&#34;&gt;Components Starter Guide&lt;/a&gt; is a fantastic resource for those at the start of their journey with components.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1539&#34; height=&#34;812&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries.jpg&#34; alt=&#34;Fig 3. Components are language interoperable and API-driven design defines operational boundaries.&#34; class=&#34;wp-image-122100&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries.jpg 1539w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-300x158.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-1024x540.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-768x405.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-900x475.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-379x200.jpg 379w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-758x400.jpg 758w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-590x310.jpg 590w&#34; sizes=&#34;auto, (max-width: 1539px) 100vw, 1539px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Fig 3. Components are language interoperable and API-driven design defines operational boundaries.&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Most importantly, components are &lt;strong&gt;interoperable and polyglot&lt;/strong&gt;. First principles dictate that we use applications written in many different languages, all of which must be supported. Components communicate over a common set of shared, standardized interfaces—WASI—bound together with Wasm Interface Types (WIT). One might be written in Go, another in Rust, and another in JavaScript, but they can all communicate with one another over these shared APIs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;💡 Check out Alex Creighton’s &lt;a href=&#34;https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md&#34;&gt;documentation&lt;/a&gt; which perfectly explains the ways in which the WIT IDL supports the WebAssembly Component Model.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Teams use their favorite libraries in their favorite languages, and once they compile the code to a Wasm component, other components can make use of the functions they expose—regardless of the language and libraries used to write those components.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;💡 The Bytecode Alliance also has &lt;a href=&#34;https://component-model.bytecodealliance.org/introduction.html&#34;&gt;extensive resources&lt;/a&gt; on the WebAssembly Component Model. And check out the &lt;a href=&#34;https://cosmonic.com/downloads/WIT-Cheatsheet-v1.2.pdf&#34;&gt;WIT cheat sheet&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Composing in wasmCloud&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;An incubating, open source &lt;a href=&#34;https://www.cncf.io/projects/wasmcloud/&#34;&gt;CNCF project&lt;/a&gt;, wasmCloud is designed to bring the WebAssembly Component Model to life in real-world use cases. Components are the portable unit of code, and wasmCloud orchestrates deployments across distributed environments. Like Kubernetes is the chosen orchestration platform for containers, wasmCloud is cloud-native application orchestration, at-scale.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;WebAssembly &lt;strong&gt;eliminates the rinse-and-repeat,&lt;/strong&gt; app-by-app maintenance cycle common in most organizations. wasmCloud allows teams to create one lean set of core applications, built on common standards, and portable to &lt;em&gt;any&lt;/em&gt; location.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The architecture of wasmCloud makes it naturally suited to hybrid clouds and multi-tenant environments, with automatic failover and load balancing built in. wasmCloud can stand alone or run on Kubernetes with the &lt;a href=&#34;https://github.com/wasmCloud/wasmcloud-operator&#34;&gt;wasmcloud-operator.&lt;/a&gt;. Moreover, wasmCloud is designed to integrate with existing cloud native tooling and standards such as OpenTelementry and Open Policy Agent.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;2078&#34; height=&#34;943&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges.jpg&#34; alt=&#34;Fig 4: wasmCloud is built for orchestrating applications in the cloud and on diverse edges.&#34; class=&#34;wp-image-122101&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges.jpg 2078w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges-300x136.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges-1024x465.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges-768x349.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges-900x408.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges-1800x817.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges-441x200.jpg 441w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges-881x400.jpg 881w&#34; sizes=&#34;auto, (max-width: 2078px) 100vw, 2078px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Fig 4: wasmCloud is built for orchestrating applications in the cloud and on diverse edges.&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In wasmCloud, Wasm applications use open standards and common interfaces for platform capabilities. These can be swapped runtime, allowing us to switch vendors or do maintenance upgrades on-the-fly. Because these are high-level APIs, they’re vendor-agnostic which means teams can use their own tooling.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;💡 Take a look at the growing set of &lt;a href=&#34;https://wasmcloud.com/docs/capabilities/&#34;&gt;capability providers&lt;/a&gt; to see how wasmCloud integrates with common cloud native tools.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;wasmCloud also allows engineers to write their own custom capabilities and interfaces—completely essential given every organization’s use cases and infrastructure are different.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Industrial adoption&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re seeing WebAssembly being adopted in a wide variety of use cases in banking, manufacturing, telecommunications, digital services, gaming, and more. In every case, this idea of being able to build one set of applications, capable of running everywhere is what engineers are asking for.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Manufacturing and IoT use cases are proliferating because orchestrators like wasmCloud make it possible to put compute power on devices and in production lines. A great example is industrial analytics company &lt;a href=&#34;https://www.cncf.io/blog/2024/08/23/wasmcloud-on-the-factory-floor-efficient-and-secure-processing-of-high-velocity-machine-data/&#34;&gt;MachineMetrics&lt;/a&gt;: deploying wasmCloud on factory machinery to put real-time analytics on expensive machinery and improve performance and longevity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Adobe has been a long-time user of wasmCloud. They first proved the value of bringing wasmCloud to its Kubernetes infrastructure to &lt;a href=&#34;https://wasmcloud.com/blog/better-together-building-efficient-microservices-in-kubernetes-with-webassembly&#34;&gt;improve the efficiency of microservices&lt;/a&gt; running in Kubernetes. Lean and lightweight, wasmCloud can be almost instantly scaled as traffic scales up, giving more scheduling flexibility than a coarse-grained container. Now, the use cases for Wasm are growing at Adobe.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Adoption in telecoms is growing. &lt;a href=&#34;https://www.youtube.com/watch?v=1sWQqgK-79c&#34;&gt;Orange&lt;/a&gt; is working with wasmCloud to improve service delivery on customer handsets. Orange is also part of a wider group which includes Vodafone, Etisalat and nbnco who have &lt;a href=&#34;https://www.cncf.io/blog/2024/01/05/bringing-webassembly-to-telecoms-with-cncf-wasmcloud/&#34;&gt;proved the potential value&lt;/a&gt; of &lt;em&gt;replacing&lt;/em&gt; Kubernetes with Wasm in managing the TM Forum’s estate of open APIs. The WebAssembly Canvas project is now in Phase II which will look at the value of bringing wasmCloud &lt;em&gt;together&lt;/em&gt; with Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Akamai’s &lt;a href=&#34;https://youtu.be/vEHbZCBmPok&#34;&gt;recent presentation&lt;/a&gt; at wasmCloud Innovation Day gave us an insight into how platforms like wasmCloud can extend compute power to the edge in even more advanced use cases. And our celestial-terrestrial mesh demo shows how space agencies could put Wasm to use in super-distributed, multi-tenant use cases.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Finally, it was incredible to see engineers from global financial services company American Express, &lt;a href=&#34;https://www.youtube.com/watch?v=KrugZVTKDKk&amp;amp;list=PLbzoR-pLrL6o0UD4PoO0H_RnoToEiWBIS&amp;amp;index=11&#34;&gt;on stage at WasmCon&lt;/a&gt;, showing how they’re bringing Wasm, and wasmCloud, to their architecture to elevate serverless platforms with Wasm components.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1920&#34; height=&#34;1243&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrestrial-and-celestial-compute-mesh-for-highly-distributed-use-cases.png&#34; alt=&#34;Fig 5. An example of wasmCloud as a terrestrial and celestial compute mesh for highly distributed use cases.&#34; class=&#34;wp-image-122102&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrestrial-and-celestial-compute-mesh-for-highly-distributed-use-cases.png 1920w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrestrial-and-celestial-compute-mesh-for-highly-distributed-use-cases-300x194.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrestrial-and-celestial-compute-mesh-for-highly-distributed-use-cases-1024x663.png 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrestrial-and-celestial-compute-mesh-for-highly-distributed-use-cases-768x497.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrestrial-and-celestial-compute-mesh-for-highly-distributed-use-cases-900x583.png 900w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrestrial-and-celestial-compute-mesh-for-highly-distributed-use-cases-1800x1165.png 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrestrial-and-celestial-compute-mesh-for-highly-distributed-use-cases-309x200.png 309w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrestrial-and-celestial-compute-mesh-for-highly-distributed-use-cases-618x400.png 618w&#34; sizes=&#34;auto, (max-width: 1920px) 100vw, 1920px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Fig 5. An example of wasmCloud as a terrestrial and celestial compute mesh for highly distributed use cases.&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Will Wasm replace containers?&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Like in past epochs of computing, VM’s did not disappear with the advent of containers, just as containers will not be completely replaced by Wasm. Stateful, long-running compute and appliances like databases are unlikely to be replaced with Wasm. This evolution in technology will not occur overnight and so Wasm apps will continue to run alongside the thousands of apps already running in containers and on Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Take a look at our &lt;a href=&#34;https://wasmcloud.com/docs/intro&#34;&gt;documentation&lt;/a&gt; and click on &lt;a href=&#34;https://wasmcloud.com/docs/tour/hello-world&#34;&gt;Quickstart&lt;/a&gt; for a tour of wasmCloud, its features and functionality.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Don’t forget, the wasmCloud community meets every week on Wednesday at 1pm EST. You can add the meeting to your calendar, or join us on &lt;a href=&#34;https://www.youtube.com/@wasmCloud/streams&#34;&gt;YouTube&lt;/a&gt;. Oh, and come join the discussion on &lt;a href=&#34;https://wasmcloud.slack.com/&#34;&gt;Slack&lt;/a&gt;!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;大使帖子，作者：CNCF 大使兼 Cosmonic 首席执行官 &lt;a href=&#34;https://www.linkedin.com/in/hectaman&#34;&gt;Liam Randall&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们最近有机会&lt;a href=&#34;https://wasmcloud.com/blog/2024-09-24-wasmcloud-innovation-day-2024-in-review&#34;&gt;反思&lt;/a&gt;大公司内平台工程的现状以及 WebAssembly 在该学科的未来中扮演的角色。在这篇文章中，我们将研究大规模构建和运行应用程序的团队所面临的成本和复杂性挑战。然后，我们将考虑 WebAssembly 以及孵化 Cloud Native Foundation (CNCF) wasmCloud 等平台在克服这些障碍方面的作用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;现代平台工程的陷阱&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;平台工程作为一种实践真正开始于计算的“容器时代”。我们将过时的系统拆分为可管理的微服务，将这些微服务打包到容器中，然后使用 Kubernetes 编排这些容器。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这使基础设施和平台团队更加紧密地联系在一起。基础设施团队成为为开发人员提供通用应用程序服务的同一团队的一部分，以供开发人员构建从秘密管理到身份验证和授权的一切服务。毫无疑问，容器使工程技术变得更好，但它们也带来了一些大问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;​​💡 要更深入地分析平台工程团队所面临的挑战，Bailey Hayes 的 &lt;a href=&#34;https://youtu.be/PexRsU8sVIs &#34;&gt;最近的创新日主题演讲&lt;/a&gt;不容错过。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“2235”高度=“914”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform.jpg&#34; alt=&#34;图 1. 计算时代和计算机的演变 平台。” class =“wp-image-122098”srcset =“https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-平台.jpg 2235w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-300x123.jpg 300w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-1024x419.jpg 1024w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-768x314.jpg 768w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-900x368.jpg 900w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-1800x736.jpg 1800w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-489x200.jpg 489w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-1-Eras-of-compute-and-the-evolution-of-the-platform-978x400.jpg 978w“尺寸=”自动，（最大宽度：2235px) 100vw, 2235px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 1. 计算时代和平台的演变。&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;应用构建-运行-维护的高昂成本&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如今，构建、运行和维护应用程序的成本实在太高了。这从语言的选择以及我们用于所有不同企业应用程序的“黄金模板”开始。我们与为特定语言构建的特定客户端和框架联系在一起。所有这些意味着我们必须逐个应用地构建和维护应用程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当平台工程师需要更新给定平台时，他们需要用户（应用程序开发人员）更新每个应用程序的依赖项。由于大多数应用程序主要由开源依赖项组成，因此它们继承了维护这些依赖项以防止漏洞的成本。工程师们忙于进行应用程序维护，这是昂贵且低效的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;容器无法解决仓鼠轮子的问题。此外，容器化在可移植性方面遇到了一些重大限制。我们要针对不同的架构打造差异化的容器。即使在最精简的情况下，Kubernetes 和容器也太笨重，无法在传感器、物联网设备和许多其他边缘环境中运行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;那么我们怎样才能制作出真正可移植的应用程序呢？当我们这样做时，我们可以&lt;strong&gt;解决仓鼠轮&lt;/strong&gt;和语言孤岛问题吗？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;答案在于可移植、可互操作的&lt;strong&gt;WebAssembly 组件&lt;/strong&gt;。我们正在进入一个&lt;em&gt;组件化&lt;/em&gt;的新时代，我们的分布式计算单元是由 wasmCloud 编排的 WebAssembly 组件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Wasm 与容器&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;值得一提的是，wasmCloud 热爱 Kubernetes——Wasm 运行得非常好 &lt;a href=&#34;https://wasmcloud.com/blog/how-to-run-web assembly-components-on-kubernetes-with-wasmcloud&#34;&gt;与容器一起&lt;/a&gt;。 &lt;a href=&#34;https://github.com/wasmCloud/wasmcloud-operator&#34;&gt;wasmcloud-operator&lt;/a&gt; 和 Helm 图表使在 Kubernetes 上部署 Wasm 变得非常简单。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;​​💡 作为将 Wasm 引入其 Kubernetes 产业的大型组织的示例，&lt;a href=&#34;https://www.cncf.io/blog /2022/11/17/better-together-a-kubernetes-and-wasm-case-study/&#34;&gt;Adobe 的用例&lt;/a&gt;是一个很好的起点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;话虽如此，Kubernetes 是为&lt;em&gt;基础设施&lt;/em&gt;编排而设计的，而不是应用程序管理。 wasmCloud 专为大规模应用程序编排而设计，它可以独立处理该作业，也可以在 Kubernetes 集群上处理该作业。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将 WebAssembly 视为一个微型虚拟机。 Wasm 应用程序与组件一起编译成高效的二进制格式，比传统容器更小、更轻量图像。这种减小的尺寸最大限度地减少了内存和存储需求，从而允许在相同的空间内容纳更多的工作负载。容器要大得多（从 MB 到 GB），而组件化 WebAssembly 应用程序的范围从 &lt;strong&gt;KB 到 MB&lt;/strong&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Wasm 组件本身是沙盒的、无状态的，并且&lt;strong&gt;默认情况下是安全的&lt;/strong&gt;，因为它们无法自行与操作系统交互。对于容器，需要大量流程、最佳实践和工具来实现适当的安全性和隔离级别。容器是一种本质安全的沙箱和隔离任意用户代码的方式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然容器增强了应用程序的可移植性，但这些镜像仍然绑定到特定的 CPU 架构。对于 WebAssembly 组件，&lt;strong&gt;.wasm 二进制文件对于任何环境都是相同的&lt;/strong&gt;，只要该环境具有 WebAssembly 运行时即可。 Wasm 的可移植性允许工作负载跨异构环境运行，例如云、边缘，甚至资源受限的设备。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;容器冷启动需要几秒钟，而&lt;strong&gt;WebAssembly 组件启动时间不到一毫秒&lt;/strong&gt;。用户请求的延迟通常约为 200 毫秒，这意味着容器必须始终运行，即使在不需要时也准备好服务请求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“2158”高度=“943”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly.jpg&#34; alt=&#34;图 2. 与此相比的容器冷启动时间WebAssembly 的。” class =“wp-image-122099”srcset =“https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that- of-WebAssembly.jpg 2158w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-300x131.jpg 300w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-1024x447.jpg 1024w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-768x336.jpg 768w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-900x393.jpg 900w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-1800x787.jpg 1800w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-458x200.jpg 458w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-2-Container-cold-start-time-compared-to-that-of-WebAssembly-915x400.jpg 915w“尺寸=”自动，（最大宽度：2158px）100vw，2158px“referrerpolicy =“no-referrer”&gt; &lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 2. 容器冷启动时间与 WebAssembly 的比较。&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们很快就会看到新类型架构的发展充分利用了组件的大小和速度。当您在用户设备上本地运行该计算时，为什么要向其他地方发出网络请求？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这一切听起来都很棒。但是，如果您花了数年时间将 Kubernetes 置于您宇宙的中心，如果容器运行得足够好，采用 Wasm 是否等于又一次进入未知世界的沉重负担？为了回答这个问题，我们需要探索组件是如何工作的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;组件……无处不在！&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们经常将整个世界打包到容器中，通过 Wasm 组件我们可以深入了解应用程序的核心逻辑。组件打包为 &lt;a href=&#34;https://tag-runtime.cncf.io/wgs/wasm/deliverables/wasm-oci-artifact/&#34;&gt;OCI 工件&lt;/a&gt;，从根本上简化了开发人员构建应用程序的方式。我们使用标准的、&lt;strong&gt;可重用&lt;/strong&gt;构建块（组件）来编写应用程序，这些构建块（组件）仅包含我们需要的逻辑并在运行时编译。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;这是巨大的。我们可以重用我们的组件，而不是重写它们，并且它们只包含所需的代码。通过消除样板代码（我们在库中导入的东西），漏洞就被完全消除了。考虑到识别、报告和修复漏洞所花费的时间，这是变革性的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;组件相互构建，&lt;strong&gt;就像乐高积木&lt;/strong&gt;。它们可以在支持组件的任何地方运行，当然，因为它们很小，所以我们可以在网络边缘的资源受限环境中运行组件化应用程序。正如我们稍后将看到的，制造业和物联网正在成为 wasmCloud 的一个明显用例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;​​💡&lt;a href=&#34;https://wasmcloud.com/docs/concepts/components&#34;&gt;组件入门指南&lt;/a&gt;是对于那些刚开始使用组件的人来说是很棒的资源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1539”高度=“812”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries.jpg&#34; alt=&#34;图 3. 组件是语言可互操作和 API 驱动的设计定义了操作边界。” class =“wp-image-122100”srcset =“https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-设计定义操作边界.jpg 1539w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-300x158.jpg 300w , https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-1024x540.jpg 1024w , https://www.cncf.io/wp-content/uploads/2024/12/Fig-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-768x405.jpg 768w ，https://www.cncf.io/wp-content/uploads/2024/12/Figure-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-194x102.jpg 194w， https://www.cncf.io/wp-content/uploads/2024/12/Figure-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-388x204.jpg 388w , https://www.cncf.io/wp-content/uploads/2024/12/Figure-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-776x408.jpg 776w , https://www.cncf.io/wp-content/uploads/2024/12/Figure-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-900x475.jpg 900w , https://www.cncf.io/wp-content/uploads/2024/12/Figure-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-379x200.jpg 379w , https://www.cncf.io/wp-content/uploads/2024/12/Figure-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-758x400.jpg 758w , https://www.cncf.io/wp-content/uploads/2024/12/Figure-3-Components-are-language-interoperable-and-API-driven-design-defines-operational-boundaries-590x310.jpg 590w “尺寸=“自动，（最大宽度：1539px）100vw，1539px” referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 3. 组件是语言可互操作的，API 驱动的设计定义了操作边界。&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最重要的是，组件&lt;strong&gt;可互操作且支持多种语言&lt;/strong&gt;。第一原则规定我们使用以多种不同语言编写的应用程序，所有这些语言都必须得到支持。组件通过一组通用的共享标准化接口（WASI）进行通信，该接口与 Wasm 接口类型 (WIT) 绑定在一起。一个可能是用 Go 编写的，另一个是用 Rust 编写的，另一个是用 JavaScript 编写的，但它们都可以通过这些共享 API 相互通信。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;​​💡 查看 Alex Creighton 的 &lt;a href=&#34;https://github.com/WebAssembly/component-model/blob/main/design/mvp /WIT.md&#34;&gt;文档&lt;/a&gt;完美地解释了 WIT IDL 支持 WebAssembly 组件模型的方式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;团队以他们最喜欢的语言使用他们最喜欢的库，一旦他们将代码编译为 Wasm 组件，其他组件就可以使用他们公开的功能 - 无论用于编写这些组件的语言和库是什么。&lt;/p &gt;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;​​💡字节码联盟还拥有&lt;a href=&#34;https://component-model.bytecodealliance.org/introduction.html&#34;&gt;广泛的资源&lt; /a&gt; 在 WebAssembly 组件模型上。并查看&lt;a href=&#34;https://cosmonic.com/downloads/WIT-Cheatsheet-v1.2.pdf&#34;&gt;WIT 备忘单&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;在 wasmCloud 中创作&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;wasmCloud 是一个正在孵化的开源&lt;a href=&#34;https://www.cncf.io/projects/wasmcloud/&#34;&gt;CNCF 项目&lt;/a&gt;，旨在将 WebAssembly 组件模型变为现实。世界使用案例。组件是可移植的代码单元，wasmCloud 跨分布式环境协调部署。就像 Kubernetes 是容器选择的编排平台一样，wasmCloud 是大规模的云原生应用程序编排。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;WebAssembly &lt;strong&gt;消除了大多数组织中常见的逐个应用程序的冲洗和重复维护周期。 wasmCloud 允许团队创建一组精简的核心应用程序，这些应用程序基于通用标准构建，并且可移植到&lt;em&gt;任何&lt;/em&gt;位置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;wasmCloud 的架构使其天生适合混合云和多租户环境，并内置自动故障转移和负载平衡。wasmCloud 可以独立运行，也可以通过 &lt;a href=&#34;https://github.com/kubernetes/kubernetes/k8s&#34; 运行在 Kubernetes 上。 com/wasmCloud/wasmcloud-operator&#34;&gt;wasmcloud-operator。&lt;/a&gt;。此外，wasmCloud 旨在与现有的云原生工具和标准集成，例如 OpenTelementry 和 Open Policy Agent。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“2078”高度=“943”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges.jpg&#34; alt=&#34;Fig 4：wasmCloud 专为在云端和不同边缘编排应用程序而构建。” class =“wp-image-122101”srcset =“https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in- the-cloud-and-on-diverse-edges.jpg 2078w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges- 300x136.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges- 1024x465.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges- 768x349.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges- 900x408.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges- 1800x817.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges- 441x200.jpg 441w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-4-wasmCloud-is-built-for-orchestrating-applications-in-the-cloud-and-on-diverse-edges- 881x400.jpg 881w&#34; 尺寸 = &#34;自动, (最大宽度: 2078 像素) 100vw, 2078 像素&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 4：wasmCloud 专为在云端和不同边缘编排应用程序而构建。&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在 wasmCloud 中，Wasm 应用程序使用开放标准和通用接口来实现平台功能。这些可以在运行时交换，允许我们更换供应商或进行维护nce 即时升级。因为这些是高级 API，所以它们与供应商无关，这意味着团队可以使用自己的工具。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-gray-300-background-color has-background&#34;&gt;​​💡 看看不断增长的&lt;a href=&#34;https://wasmcloud.com/docs/capability/&#34;&gt;能力提供者&lt; /a&gt; 查看 wasmCloud 如何与常见的云原生工具集成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;wasmCloud 还允许工程师编写自己的自定义功能和接口 - 鉴于每个组织的用例和基础设施都不同，这是完全必要的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;工业采用&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们看到 WebAssembly 被广泛应用于银行、制造、电信、数字服务、游戏等领域的各种用例中。在每种情况下，工程师所要求的就是能够构建一组能够在任何地方运行的应用程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;制造和物联网用例正在激增，因为像 wasmCloud 这样的编排器可以将计算能力放在设备和生产线上。一个很好的例子是工业分析公司 &lt;a href=&#34;https://www.cncf.io/blog/2024/08/23/wasmcloud-on-the-factory-floor-efficient-and-secure-processing-of- high-velocity-machine-data/&#34;&gt;MachineMetrics&lt;/a&gt;：在工厂机械上部署 wasmCloud，对昂贵的机械进行实时分析并提高性能和使用寿命。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Adobe 一直是 wasmCloud 的长期用户。他们首先证明了将 wasmCloud 引入其 Kubernetes 基础设施对于提高效率的价值在 Kubernetes 中运行的微服务&lt;/a&gt;。 wasmCloud 精益且轻量，几乎可以随着流量的增加而立即扩展，从而比粗粒度容器提供更多的调度灵活性。现在，Adobe 的 Wasm 用例正在不断增长。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;电信领域的采用正在不断增长。 &lt;a href=&#34;https://www.youtube.com/watch?v=1sWQqgK-79c&#34;&gt;Orange&lt;/a&gt; 正在与 wasmCloud 合作，改善客户手机上的服务交付。 Orange 也是包括沃达丰、Etisalat 和 nbnco 在内的更广泛集团的一部分，这些集团拥有&lt;a href=&#34;https://www.cncf.io/blog/2024/01/05/bringing-web assembly-to-telecoms-with- cncf-wasmcloud/&#34;&gt;证明了用 Wasm 取代 Kubernetes 在管理 TM 论坛的开放 API 资产方面的潜在价值&lt;/a&gt;。 WebAssembly Canvas 项目目前处于第二阶段，该项目将研究将 wasmCloud 与 Kubernetes 结合在一起的价值。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Akamai 在 wasmCloud 创新日上&lt;a href=&#34;https://youtu.be/vEHbZCBmPok&#34;&gt;最近的演示&lt;/a&gt;让我们深入了解了 wasmCloud 等平台如何以更先进的方式将计算能力扩展到边缘用例。我们的天地网格演示展示了航天机构如何将 Wasm 用于超分布式、多租户用例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，看到来自全球金融服务公司美国运通的工程师&lt;a href=&#34;https://www.youtube.com/watch?v=KrugZVTKDKk&amp;list=PLbzoR-pLrL6o0UD4PoO0H_RnoToEiWBIS&amp;index=11&#34;&gt;在 WasmCon 上登台&lt;/a&gt;真是令人难以置信，展示了他们如何将 Wasm 和 wasmCloud 引入其架构，以使用 Wasm 组件提升无服务器平台。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1920”高度=“1243” src =“https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrescial-and-celestial-compute-mesh-for -highly-distributed-use-cases.png&#34; alt=&#34;图 5. wasmCloud 作为高度分布式用例的陆地和天体计算网格的示例。&#34; class =“wp-image-122102”srcset =“https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrescial- and-celestial-compute-mesh-for-highly-distributed-use-cases.png 1920w， https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrescial-and-celestial-compute-mesh-for-highly-分布式用例-300x194.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrescial-and-celestial-compute-mesh-for-highly-分布式用例-1024x663.png 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrescial-and-celestial-compute-mesh-for-highly-分布式用例-768x497.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrescial-and-celestial-compute-mesh-for-highly-分布式用例-900x583.png 900w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrescial-and-celestial-compute-mesh-for-highly-分布式用例-1800x1165.png 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrescial-and-celestial-compute-mesh-for-highly-分布式用例-309x200.png 309w, https://www.cncf.io/wp-content/uploads/2024/12/Fig-5-An-example-of-wasmCloud-as-a-terrescial-and-celestial-compute-mesh-for-highly-分布式使用案例-618x400.png 618w“尺寸=”自动，（最大宽度：1920px）100vw， 1920px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 5. wasmCloud 作为高度分布式用例的陆地和天体计算网格的示例。&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Wasm 会取代容器吗？&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就像过去的计算时代一样，VM 并没有随着容器的出现而消失，就像容器不会被 Wasm 完全取代一样。有状态、长时间运行的计算和数据库等设备不太可能被 Wasm 取代。这种技术的发展不会在一夜之间发生，因此 Wasm 应用程序将继续与容器和 Kubernetes 上已经运行的数千个应用程序一起运行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;查看我们的&lt;a href=&#34;https://wasmcloud.com/docs/intro&#34;&gt;文档&lt;/a&gt; 并单击&lt;a href=&#34;https://wasmcloud.com/docs/tour/hello-world&#34;&gt;快速入门&lt;/a&gt;，了解 wasmCloud 及其特性和功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不要忘记，wasmCloud 社区每周三下午 1 点（美国东部时间）举行会议。您可以将会议添加到日历中，或通过 &lt;a href=&#34;https://www.youtube.com/@wasmCloud/streams&#34;&gt;YouTube&lt;/a&gt; 加入我们。哦，来参加 &lt;a href=&#34;https://wasmcloud.slack.com/&#34;&gt;Slack&lt;/a&gt; 上的讨论吧！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 22 Dec 2024 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>