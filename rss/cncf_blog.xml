<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://cloudys-rsshub-ab061133bcab.herokuapp.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【KubeCon + CloudNativeCon North America 2025 Co-located Event Deep Dive: Istio Day】Kubecon + Cloudnativecon北美2025年共同介绍的活动深度潜水：Istio Day</title>
      <link>https://www.cncf.io/blog/2025/09/09/kubecon-cloudnativecon-north-america-2025-co-located-event-deep-dive-istio-day/</link>
      <description>【&lt;p&gt;&lt;em&gt;November 10, 2025&lt;br&gt;Atlanta, Georgia&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;205&#34; height=&#34;67&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/09/Istio-Day-NA_2023_Logos_Istio-Day-Logo-Color.svg&#34; alt=&#34;Istio Day North America&#34; class=&#34;wp-image-117642&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/co-located-events/istio-day/&#34;&gt;Istio Day&lt;/a&gt; is the biannual community event for the industry’s most widely adopted and feature rich service mesh, where attendees will find lessons learned from running Istio in production, the latest updates on Istio’s ambient mode developments, and the opportunity to meet and learn from maintainers across the Istio ecosystem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This will be the fourth Istio Day.&lt;a href=&#34;https://istio.io/latest/blog/2023/istio-at-kubecon-eu/&#34;&gt; The first Istio Day&lt;/a&gt; was co-located with KubeCon Europe 2023, in Amsterdam. This colocated event replaces ServiceMeshCon, which was first held in 2019, before Istio was a CNCF project.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Who will get the most out of attending this event?&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Everyone from newcomers to seasoned professionals will benefit from this event. Whether you’re just starting with Istio or have extensive experience, you’ll gain new insights, discover emerging trends, and have the opportunity to engage directly with industry experts and fellow practitioners.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What is new and different this year?&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This year, we’ve curated a selection of topics that provide fresh and diverse perspectives on Istio. The event features new voices, emerging technologies, and real-world use cases that reflect the latest industry trends, offering attendees valuable insights they won’t find elsewhere.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What will the day look like?&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The event will begin with a welcome from the chairs, followed by a series of technical sessions covering various aspects of Istio, including case studies, new features, and practical recipes. Throughout the event, there will be dedicated breaks for coffee and networking, giving attendees the chance to connect with speakers and fellow practitioners. The event will conclude with closing remarks summarizing key takeaways.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Should I do any homework first?&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attendees are encouraged to familiarize themselves with the basics of Istio and review the schedule to identify sessions of interest. Reading recent blog posts or documentation updates can also provide valuable context for the discussions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Find your community!&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Istio Day is more than just a conference; it’s a community gathering that fosters collaboration and innovation. We encourage attendees to actively participate, ask questions, and share their experiences to make the most of this opportunity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re excited to see how the community has embraced service mesh technologies and to learn from the diverse set of sessions and speakers at KubeCon + CloudNativeCon. The opportunity to network with peers and discuss the future of cloud-native technologies is something we highly anticipate.&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/?utm_source=www&amp;amp;utm_medium=homepage&amp;amp;utm_campaign=10608228-KubeCon-NA-2025&amp;amp;utm_content=hero&amp;amp;ajs_aid=b4cbcea8-db3a-48a5-b9ca-81b8469a1e6a&amp;amp;__hstc=60185074.8e4b51df8090e8cfa91e680bb9f547c3.1753120388630.1757099605228.1757114301600.188&amp;amp;__hssc=60185074.4.1757114301600&amp;amp;__hsfp=1387625814&#34;&gt;Don’t forget to register&lt;/a&gt; for KubeCon + CloudNativeCon North America 2025.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; &lt;em&gt; 2025年11月10日&lt;br&gt;乔治亚州亚特兰大&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy” dododing =“ async” width =“ 205” height =“ 67” src =“ https://www.cncf.io/wp-content/uploads/2024/09/istio-day-na_2023_istio-day-day-loogos_istio-day-logo-color.svg”&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://events.linuxfoundation.org/kubecon-cloudnativecon-north-north-america/co-located-events/istio-day/&gt; istio day&gt;&gt; istio day&gt;” ISTIO的环境模式发展，以及向ISTIO生态系统中的维护者见面和学习的机会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这将是第四天。这个共凝结的事件取代了ISTIO是CNCF项目之前于2019年首次举行的ServiceMeshcon。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;谁会最大程度地参加此活动？&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从新移民到经验丰富的专业人士的每个人都将受益于这一活动。无论您是从ISTIO开始还是有丰富的经验，都可以获得新的见解，发现新兴趋势，并有机会直接与行业专家和其他从业人员互动。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ WP-block-heading”&gt; &lt;strong&gt;今年有什么新鲜事物？&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今年，我们策划了一系列主题，这些主题为ISTIO提供了新鲜而多样的观点。该活动以新的声音，新兴技术和现实世界中的用例以反映最新行业趋势，为与会者提供了他们在其他地方找不到的宝贵见解。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;这一天会是什么样？&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该活动将从椅子的欢迎开始，然后是一系列技术会议，涵盖了ISTIO的各个方面，包括案例研究，新功能和实际食谱。在整个活动期间，将有专门的休息时间用于咖啡和网络，这使与会者有机会与演讲者和同事们建立联系。该活动将以总结关键要点的结束评论来结束。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;我应该先做任何家庭作业吗？&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;鼓励与会者熟悉ISTIO的基础知识，并审查时间表以确定感兴趣的会议。阅读最近的博客文章或文档更新也可以为讨论提供宝贵的背景。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;找到您的社区！&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; istio day不仅仅是会议。这是一个促进合作和创新的社区聚会。我们鼓励与会者积极参与ipate，提出问题并分享他们的经验以充分利用这一机会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们很高兴看到社区如何接受服务网络技术，并从Kubecon + Cloudnativecon的各种会议和演讲者中学习。我们非常期待与同行建立联系并讨论云本地技术的未来的机会。&lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/gregister/?utm_source=www&amp;utm_medium = homeium = homepage&amp;utm_campaign = 1060608228-kubecon-kubecon-na-na-20222 emandtent = BBENTINT = BBENTINT =BBENTINTINTICTINTINT。 4CBCEA8-DB3A-48A5-B9CA-81B8469A1E6A＆__ HSTC = 60185074.8E4B51DF8090E8CFA91E680BBBBB9F547C3.17531203 88630.1757099605228.1757114301600.188＆__ HSSC = 60185074.4.4.1757114301600＆__ HSFP = 1387625814“&gt;忘记注册&lt;/a&gt; kubecon + Cloudnativecon北美2025年。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 08 Sep 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Combatting Sophisticated Cybersecurity Threats with AI】用AI对抗复杂的网络安全威胁</title>
      <link>https://www.cncf.io/blog/2025/09/08/combatting-sophisticated-cybersecurity-threats-with-ai/</link>
      <description>【&lt;p&gt;As AI continues to evolve, businesses are rapidly integrating it into their operations. But with this growth comes an urgent need to prioritise cybersecurity because ignoring security risks in an AI-driven landscape can leave businesses vulnerable to sophisticated threats.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cybersecurity isn’t about relying on a single tool but rather building layered defences. A strategic combination of firewalls, encryption, and advanced threat detection systems can significantly reduce cyber risks while ensuring your organisation runs smoothly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When security is effectively managed, uncertainty is reduced, and your organisation can operate with confidence, allowing you to focus on what truly matters: &lt;strong&gt;scaling your business, driving innovation, and staying ahead of the competition.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This article explores key cybersecurity tools and how they work together to build a robust security strategy. Whether you’re looking to enhance your existing defences or implement new solutions, these insights will help you strengthen your organisation’s security posture.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Smarter, faster, and more dangerous&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cybersecurity is no longer just an IT concern, but rather a boardroom priority. With AI-driven cyber threats no longer limited to generic phishing emails or outdated malware, today’s attacks are smarter, more precise, and alarmingly convincing.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In 2023, &lt;a href=&#34;https://darktrace.com/cyber-ai&#34;&gt;Darktrace reported a staggering 135%&lt;/a&gt; increase in social engineering attacks. These aren’t just your average phishing attempts – they’re highly targeted, AI-generated, and built to exploit human trust. Tools like wormGPT and FraudGPT are being used by attackers to create realistic, personalised, and highly deceptive campaigns that can slip past traditional security filters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I’ve seen emails that perfectly mimic legitimate correspondence, right down to the sender’s domain and writing style, designed to fool recipients into clicking malicious links. I know many of us have encountered that moment when something about an email just doesn’t feel right.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It’s no longer enough to rely on human intuition or traditional security measures. We need AI-powered defences that evolve as fast as the threats themselves.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Intrusion Detection Systems (IDS) as your early warning system&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;An Intrusion Detection System (IDS) is a non-negotiable part of modern cybersecurity. Without it, you’re leaving your organisation vulnerable to stealthy threats that can infiltrate and wreak havoc before you even realise it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Many companies only discover data breaches after significant damage has already been done, which is a costly and entirely preventable situation. An IDS helps to detect suspicious behaviour in real time, allowing teams to respond before threats escalate.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For organisations that don’t self-host and have no on-premise networks or physical servers to monitor, Cloud-Native IDS solutions provided by AWS, Azure, and Google Cloud, or third-party security vendors are the alternative. Some examples of Cloud-Native IDS solutions include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;AWS GuardDuty – Monitors AWS accounts, workloads, and network traffic for threats.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Microsoft Defender for Cloud – Provides security alerts for Azure-based infrastructure.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Google Cloud IDS – Detects malicious activity within Google Cloud environments.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CrowdStrike Falcon &amp;amp; Palo Alto Prisma Cloud – Offer cloud-specific IDS capabilities for SaaS and multi-cloud environments.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On the other hand, for SaaS security and API monitoring solutions, there are Cloud Access Security Brokers (CASB) like Microsoft Defender CASB and Netskope, which play a crucial role in identifying and flagging suspicious activity in fully remote and hybrid environments.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These tools maintain a comprehensive audit trail of user actions across an organisation, enabling IT security teams to investigate and respond to potential breaches.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Additionally, CASBs are particularly effective in hybrid and remote work environments, offering full visibility into user activity, from logins to file transfers and other movements within the network. Example architecture:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1280&#34; height=&#34;794&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/09/image.jpg&#34; alt=&#34;&#34; class=&#34;wp-image-146065&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/09/image.jpg 1280w, https://www.cncf.io/wp-content/uploads/2025/09/image-300x186.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/09/image-1024x635.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/09/image-768x476.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/09/image-900x558.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/09/image-322x200.jpg 322w, https://www.cncf.io/wp-content/uploads/2025/09/image-645x400.jpg 645w&#34; sizes=&#34;auto, (max-width: 1280px) 100vw, 1280px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Image caption: A visual representation of how a Wi-Fi connection can serve as an entry point for cyber threats, while log data is securely transmitted to Microsoft Cloud App Security, which is a Microsoft Defender (CASB)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OAuth applications have become a prime target for cybercriminals. They exploit users’ trust, tricking them into granting access to corporate credentials, often without a second thought. Many organisations rely on OAuth to log into websites using their company Google accounts, for example. Once access is granted, these apps can tap into everything from employee Google Calendars and LinkedIn accounts to project management tools, GitHub repositories, and more.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By leveraging AI and machine learning, CASBs can also monitor which OAuth apps are genuinely authorised within the organisation, giving IT security teams the power to set policies that automatically block risky access attempts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Beyond just access control, CASBs also add another layer of security to cloud storage which makes them an essential defence mechanism in today’s digital workplace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Choosing the right IDS approach&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A seemingly harmless Flash Player update began spreading across corporate networks in Russia and Ukraine in 2017. Employees thought they were simply installing routine software, unknowingly opening the gates to one of the most disruptive ransomware attacks of the year: BadRabbit ransomware attack. Within a few hours, critical files were encrypted, operations stopped, and businesses faced a difficult choice: pay a ransom of 0.05 Bitcoin (BTC) per infected device (283 USD equivalent), or lose their data.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The attack was devastating because it was highly sophisticated and slipped past traditional security measures. Signature-based detection systems failed to flag it and the malware hadn’t been seen before, so it didn’t match any known threat signatures. By the time security teams realised what was happening, the damage was done.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;What if there had been another layer of defence that could have detected the unusual behaviour? Today, traditional IDS falls short because cyber threats are more dynamic than ever. Attackers constantly evolve their tactics, exploiting zero-day vulnerabilities and using AI-driven methods to bypass defences.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Relying solely on signature-based IDS is like trying to catch a criminal using only a database of known suspects which may be effective for repeat offenders, but useless against a new threat.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Anomaly-based IDS, on the other hand, acts like an intelligent detective, identifying suspicious patterns and behaviour. It can catch new and unknown attacks but requires ongoing fine-tuning to reduce false positives.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Each method has its strengths and limitations, which is why enterprises can no longer afford to rely on just one.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Future-proofing your security with a hybrid approach&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A hybrid IDS combines the precision of signature-based detection with the adaptability of anomaly-based analysis, offering a more robust security posture. Here’s how organisations can determine the right balance:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A signature-based IDS is best suited for:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Organisations with well-documented threats like malware and phishing.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Security teams that rely on predefined threat intelligence due to limited resources.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Networks with relatively predictable traffic patterns.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;An anomaly-based IDS is more effective when:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Operating in industries with high-value data, such as finance, healthcare, or government.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Security teams have the expertise to fine-tune and manage evolving detection rules.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Managing hybrid or cloud infrastructures with complex and dynamic network activity.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For modern enterprises, security must be both precise and adaptive and a hybrid IDS ensures that both known and emerging threats are addressed while also improving operational efficiency. Key advantages include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Proactive risk management – Real-time detection of both signature-based threats and anomalous activities.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Adaptive security for hybrid environments – Reduces attack surfaces across multi-cloud and on-premises networks.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Regulatory compliance – Enhances security visibility to meet standards like GDPR, ISO 27001, and NIST.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Improved SOC efficiency – Reduces false positives, allowing security teams to focus on real threats.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;BadRabbit was a wake-up call, but it won’t be the last. Cybercriminals are constantly refining their techniques, and organisations that fail to adapt will always be playing catch-up. A hybrid IDS isn’t just a smart investment, but an essential step in staying ahead of the next inevitable attack.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Introducing an Intrusion Prevention System (IPS) to complement your IDS as a proactive defence&amp;nbsp;&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While an IDS alerts you to potential threats, an IPS takes it a step further by proactively blocking threats before they can infiltrate your network.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Equally, with the integration of machine learning capabilities to enhance security observability, organisations are empowered to detect both known and unknown risks when both security systems complement and work together. &lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; src=&#34;blob:https://www.cncf.io/60179765-c43e-490e-80de-59b1b52d02bd&#34; width=&#34;728&#34; height=&#34;465&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Image caption: IDS and IPS working together to enhance network security. Source: &lt;/em&gt;&lt;/strong&gt;&lt;a href=&#34;https://citeseerx.ist.psu.edu/document?doi=ddcb13f5dc671786b6fef5aa1fc4cc0285c4c79d&amp;amp;repid=rep1&amp;amp;type=pdf&#34;&gt;&lt;strong&gt;&lt;em&gt;Intrusion Detection System (IDS) &amp;amp; Intrusion Prevention System (IPS): Case Study&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One great example of an organisation that uses both IDS and IPS effectively is Omada Health. They are a provider of digital healthcare solutions and they initially used a log-based IDS but found it inadequate due to the growing complexity of threats and stringent healthcare regulations. To enhance security, they adopted Threat Stack, a host-based IPS that examined running processes and system calls for more actionable insights.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With the combination of &lt;a href=&#34;https://www.f5.com/products/distributed-cloud-services&#34;&gt;Threat Stack’s Cloud Security Platform and managed cybersecurity services&lt;/a&gt;, Omada Health gained real-time intrusion detection and proactive threat prevention. The IPS automatically blocked threats as they were detected, while the IDS flagged potential risks. This dual approach allowed Omada Health to respond faster to security incidents, protecting sensitive healthcare data and ensuring compliance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The integration also improved operational efficiency. The security team no longer had to sift through low-priority alerts, saving two to four hours of analysis time per day. This blend of IDS and IPS provided a comprehensive, AI-powered security solution, enhancing both detection and prevention capabilities while streamlining security operations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This story illustrates how an organisation achieved a well-rounded security solution while boosting their operational efficiency. Here’s an overview of how IDS and IPS work well together:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Detection vs. prevention:&lt;/strong&gt; The IDS, whether signature-based or anomaly-based, monitors network traffic and system behaviour to identify threats. However, it doesn’t take action on its own. The IPS takes immediate action to block or mitigate detected threats, such as stopping malicious traffic or quarantining compromised systems.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Improved response time: &lt;/strong&gt;In the event of a detection, an IPS can respond faster than a purely manual security response, which might take time to assess and act. This makes it particularly useful for blocking attacks in real time, enhancing the overall efficiency of the hybrid IDS system.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Minimising damage:&lt;/strong&gt; While the IDS provides alerts, the IPS stops attacks from spreading, minimising potential damage. For example, if the IDS detects unusual behaviour, such as a ransomware attack beginning to encrypt files, the IPS can prevent it from executing or spreading further.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Leveraging Cloud-Native Endpoint Security for fully-remote or hybrid organisational setups&amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If each device in your network is a potential entry point for attackers, wouldn’t you want to secure every single one? For fully remote and cloud-based businesses, traditional endpoint security isn’t enough. You’d need a Cloud-Native approach that scales without adding complexity or friction. Here’s how Cloud-Native Endpoint Security can enhance your network’s security:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1280&#34; height=&#34;794&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/09/image.jpg&#34; alt=&#34;An example of a cloud-based solution for Endpoint Security and management that offers a unified approach through a SaaS model. Source: Endpoint Central&#34; class=&#34;wp-image-146066&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/09/image.jpg 1280w, https://www.cncf.io/wp-content/uploads/2025/09/image-300x186.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/09/image-1024x635.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/09/image-768x476.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/09/image-900x558.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/09/image-322x200.jpg 322w, https://www.cncf.io/wp-content/uploads/2025/09/image-645x400.jpg 645w&#34; sizes=&#34;auto, (max-width: 1280px) 100vw, 1280px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Image caption: An example of a cloud-based solution for Endpoint Security and management that offers a unified approach through a SaaS model. Source: &lt;/em&gt;&lt;/strong&gt;&lt;a href=&#34;https://www.manageengine.com/products/desktop-central/help/cloud-architecture.html#ecserver&#34;&gt;&lt;strong&gt;&lt;em&gt;Endpoint Central&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;AI plays a crucial role in distinguishing modern Endpoint protection from traditional solutions. It enables advanced protection by using models trained on vast amounts of data to predict threats accurately, particularly when enhancing defences against sophisticated attacks like fileless threats.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One standout solution is CrowdStrike Falcon. This tool is a Cloud-Native Endpoint Security platform designed for speed, efficiency, and AI-driven protection. Unlike traditional security tools, Falcon doesn’t require constant signature updates, on-premise management infrastructure, or complex integrations that slow down operations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Instead, it leverages machine learning to analyse files, network traffic, and user behaviour, detecting and stopping threats before they cause harm.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The WannaCry ransomware attack in May 2017 disrupted businesses globally by exploiting a Windows vulnerability (MS17-010), known as EternalBlue, to spread and encrypt files, demanding ransom in Bitcoin.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In response, CrowdStrike Falcon was deployed to identify WannaCry’s unusual behaviour through machine learning, flagging its deviation from normal patterns. Falcon automatically isolated infected endpoints, preventing further spread, and helped organisations apply the MS17-010 patch to mitigate the vulnerability.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Additionally, deep learning algorithms in endpoint security now detect advanced threats, like polymorphic malware, which evades traditional detection methods by constantly changing its signature.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;User Behaviour Analytics (UBA)&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;No matter how well-vetted your employees are, intentional or accidental insider threats remain an ongoing risk. Even a well-meaning employee might download unapproved software that appears harmless but ends up introducing malware into the organisation. A more serious scenario is when a departing employee with access to sensitive intellectual property takes that data to a competitor.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Traditional security measures like firewalls and Endpoint protection aren’t always equipped to detect these behaviours, especially as phishing tactics and scams become increasingly sophisticated, so this is where User Behaviour Analytics (UBA) becomes a critical layer of defence.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The strength of UBA lies in its focus on insider threats. It excels in this area with its subtle, undercover-like approach to monitoring user behaviour within the organisation. It not only looks for obvious red flags, it also establishes a baseline of normal activity i.e. which files employees access, how often they log in, where they typically work from, and more.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;UBA also detects subtle deviations that might go unnoticed, like accessing sensitive data at odd hours or logging in from unusual locations. It identifies these anomalies before they escalate, offering tailored security based on your organisation’s unique patterns.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Splunk UBA stands out as a promising solution, as it provides a range of detection models that have comprehensive security insights and advanced analytics:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Streaming models: &lt;/strong&gt;Process events in real-time, assessing the impact of each event within a short period (e.g., 24 hours).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Batch models: &lt;/strong&gt;Analyse longer time windows i.e. 30 days to detect anomalies and trends using historical data.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A powerful example of AI and UBA together in action is DarkTrace. DarkTrace detected an active cyberattack on an energy grid just hours after its deployment. By monitoring around 5,000 devices, the AI grouped them based on behavioural similarities and quickly identified an anomaly that indicated a potential threat.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;UBA’s ability to leverage AI and machine learning for real-time threat detection makes it a crucial tool in identifying insider threats and maintaining the security of an organisation’s IT infrastructure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;br&gt;&lt;strong&gt;Security is about layering, not luck&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A unified, multi-layered approach to cybersecurity, combining IDS, IPS, UBA, and Endpoint Security, creates a dynamic, adaptable defence system.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Each tool enhances the other, forming a self-learning security network that shares insights to improve detection and response. AI-powered systems take this a step further, evolving to outsmart attackers, safeguard critical data, and stay ahead of emerging threats.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Implementing AI in cybersecurity requires thoughtful investment in technology, training, and infrastructure, but the long-term benefits are clear: improved threat detection, prevention, and response, securing your organisation’s assets and reputation. To stay ahead of evolving threats, ensure your security systems evolve with technological advancements.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;随着AI的不断发展，企业正在迅速将其整合到他们的运营中。但是随着这种增长，迫切需要优先考虑网络安全，因为无视AI驱动的景观中的安全风险可能会使企业容易受到复杂威胁的影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网络安全不是要依靠单个工具，而是要构建分层防御。防火墙，加密和高级威胁检测系统的战略组合可以显着降低网络风险，同时确保您的组织运行顺利。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当安全有效地管理安全性时，不确定性会减少，您的组织可以充满信心地运作，使您可以专注于真正重要的事情：&lt;strong&gt;扩展业务，推动创新并保持竞争领先地位。&lt;/strong&gt; &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本文探讨了关键的网络安全工具以及它们如何共同努力以建立强大的安全策略。无论您是想增强现有防御措施还是实施新解决方案，这些见解都将帮助您加强组织的安全姿势。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;更聪明，更快，更危险&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网络安全不再只是IT关注，而是董事会优先事项。由于AI驱动的网络威胁不再限于通用的网络钓鱼电子邮件或过时的恶意软件，因此今天的攻击更加聪明，更精确且令人震惊。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在2023年，&lt;a href =“ https://darktrace.com/cyber-ai”&gt; DarkTrace报告了惊人的135％&lt;/a&gt;社会工程攻击的增加。这些不仅是您的平均网络钓鱼尝试 - 它们是高度针对性，AI生成的，并且是为了利用人类信任而建立的。攻击者正在使用诸如Wormgpt和欺诈的工具来创建现实，个性化和高度欺骗性的活动，这些活动可以滑过传统的安全过滤器。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我已经看到了完美模仿合法通信的电子邮件，直到发件人的域和写作风格，旨在欺骗接收者单击恶意链接。我知道我们中的许多人遇到了那一刻，关于电子邮件的事情感觉不正确。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这已经不足以依靠人类的直觉或传统的安全措施。我们需要AI驱动的防御能力，这些防御能力与威胁本身一样快。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ WP-block-heading”&gt; &lt;strong&gt;入侵检测系统（IDS）作为您的预警系统&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;入侵检测系统（IDS）是现代网络安全的不可谈判的一部分。没有它，您的组织很容易受到隐秘威胁，这些威胁甚至可能在意识到它之前渗透和破坏。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;许多公司仅在造成重大损害后才发现数据泄露，这是一种昂贵且完全可预防的情况。 IDS有助于实时检测可疑行为，使团队在威胁升级之前做出响应。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;没有自我主持人且没有可监视的本地网络或物理服务器的组织，AWS，Azure和Google Cloud提供的云本地IDS解决方案或第三方安全供应商是替代方案。云本地IDS解决方案的一些示例包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; AWS GuardDuty  - 监视威胁的AWS帐户，工作量和网络流量。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; Microsoft Defender for Cloud  - 为基于Azure的基础结构提供安全警报。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; Google Cloud ID  - 检测Google Cloud Environments中的恶意活动。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; CrowdStrike Falcon＆Palo Alto Prisma Cloud  - 为SaaS和Multi-Cloud环境提供特定于云的IDS功能。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;另一方面，对于SaaS安全和API监视解决方案，有云访问安全经纪人（CASB），例如Microsoft Defender Casb和Netskope，它们在识别和标记完全遥远和混合环境中的可疑活动中起着至关重要的作用。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些工具维持了整个组织中用户行动的全面审计，使IT安全团队能够调查并应对潜在的违规行为。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，CASB在混合和远程工作环境中特别有效，可全面了解用户活动，从登录到网络中的文件传输和其他动作。示例体系结构：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy” dododing =“ async” width =“ 1280” height =“ 794” src =“ https：//www.cncf.io/wp-content/wp-content/wp-content/uploads/uploads/uploads/uploads/2555/2025/09/image.image.image.image.jpg” class =“ wp-image-146065” srcset =“ https://www.cncf.io/wp-content/uploads/2025/09/image.jpg 1280W， https://www.cncf.io/wp-content/uploads/2025/09/image-300x186.jpg 300W，https://www.cncf.io/wp.io/wp-content/wp-content/uploads/uploads/uploads/20255/2025/209/image-1024x635.jpgpg55.jppgpg5.jppg5.jppgpg5.jppgpg5 and https://www.cncf.io/wp-content/uploads/2025/09/image-768x476.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/09/image-900x558.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/09/image-322x200.jpg 322w，https://www.cncf.io/wp.io/wp-content/wp-content/wp-content/uploads/uploads/uploads/255/2025/2025/209/image-image-image-image-1445.jpg45.jpg45.jpg&#39;&#39; （最大宽度：1280px）100VW，1280px“ reverrerpolicy =“ no-referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; &lt;em&gt;图像标题：Wi-Fi连接如何作为网络威胁的切入点的视觉表示，而日志数据则牢固地传输到Microsoft Cloud App App Security，这是Microsoft Defender（CASB）&#xA;&#xA;&#xA;&#xA;&lt;p&gt; oauth应用已成为网络犯罪分子的主要目标。他们利用用户的信任，欺骗他们授予对公司凭据的访问，通常没有再考虑。例如，许多组织依靠Oauth使用其公司Google帐户登录网站。授予访问后，这些应用程序可以利用从员工Google日历和LinkedIn帐户到项目管理工具，GitHub存储库等的所有内容。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过利用AI和机器学习，CASB还可以监视组织内真正授权的OAuth应用程序，使其安全团队有权设定自动阻止风险访问尝试的策略。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了访问控制之外，Casbs还为云存储添加了另一层安全性，这使它们成为当今数字工作场所的重要防御机制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class =“ WP-block-heading”&gt; &lt;strong&gt;选择正确的IDS方法&lt;/strong&gt; &lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;看似无害的Flash Player更新开始在2017年开始在俄罗斯和乌克兰的公司网络上传播。员工认为他们只是在安装例行软件，在不知不觉中将大门打开了今年最具破坏性的勒索软件攻击之一：Badrabbit Bitbit Ransomware攻击。在几个小时内，关键文件被加密，停止操作，并且企业面临一个困难的选择：每个受感染的设备（283 USD同等用途）支付0.05比特币（BTC）的赎金，或丢失其数据。&lt;/p&gt; &lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这次攻击是毁灭性的，因为它是高度复杂且经过传统的安全措施。基于签名的检测系统未能标记它，并且以前从未见过恶意软件，因此它与任何已知的威胁签名不符。到安全团队意识到发生了什么时，损坏已造成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果有另一层防御能够检测到异常行为怎么办？如今，传统ID不足，因为网络威胁比以往任何时候都更具动态性。攻击者不断发展他们的战术，利用零日漏洞，并使用AI驱动的方法绕过防御。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;仅依靠基于签名的ID就像试图使用已知犯罪嫌疑人的数据库捕获犯罪分子，这些嫌疑人可能对重复犯罪者有效，但对新威胁无用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;另一方面，&lt;p&gt;基于异常的ID像智能侦探一样，识别可疑模式和行为。它可以捕获新的且未知的攻击，但需要进行持续的微调以减少误报。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;每种方法都有其优势和局限性，这就是为什么企业不再能够仅依靠一个。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class =“ WP-block-neading”&gt; &lt;strong&gt;通过混合方法&lt;/strong&gt; &lt;/h4&gt;来防止您的安全性&#xA;&#xA;&#xA;&#xA;&lt;p&gt;混合IDS结合了基于签名的检测的精度和基于异常的分析的适应性，提供了更强大的安全姿势。这是组织如何确定正确平衡的方法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最适合以下基于签名的ID：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;具有据可查的组织，例如恶意软件和网络钓鱼。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;由于资源有限而依靠预定义威胁情报的安全团队。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;具有相对可预测的流量模式的网络。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当以下情况下，基于异常的ID更有效：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;在WI行业运营高价值数据，例如财务，医疗保健或政府。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;安全团队具有微调和管理不断发展的检测规则的专业知识。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用复杂且动态的网络活动管理混合或云基础架构。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于现代企业，安全必须既精确又适应性，并且混合ID可以确保对已知和新兴威胁的解决，同时也提高了运营效率。关键优势包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;主动风险管理 - 实时检测基于签名的威胁和异常活动。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;混合环境的自适应安全性 - 减少多云和本地网络的攻击表面。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;监管合规性 - 提高安全性可见性，以满足GDPR，ISO 27001和NIST等标准。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;提高了SOC效率 - 降低误报，使安全团队专注于真正的威胁。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Badrabbit是一个警钟，但这不是最后一个。网络犯罪分子一直在不断完善其技术，而未能适应的组织将始终在追赶。混合ID不仅是一项明智的投资，而且是在下一次不可避免的攻击之前的重要一步。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ WP-block-heading”&gt; &lt;strong&gt;引入入侵预防系统（IPS）以将您的ID作为主动防御&lt;/strong&gt; &lt;/strong&gt; &lt;/h3&gt;补充&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然IDS会提醒您对潜在威胁的提醒，但IPS通过主动阻止威胁在渗透您的网络之前将其更进一步。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;同样，随着机器学习能力的集成以增强安全性可观察性，当安全系统均补充和共同工作时，组织有权检测已知和未知风险。 &lt;img loading =“ lazy”解码=“ async” src =“ blob：https：//www.cncf.io/60179765-c490e-490e-490e-80de-59b1b1b1b1b1b52d02bd02bd02bd”&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; &lt;em&gt;图像标题：IDS和IP共同努力增强网络安全性。资料来源：&lt;/em&gt; &lt;/strong&gt; &lt;a href =“ https://citeseerx.ist.ist.psu.edu/document?doi = ddcb13f5dc671786b6b6fef5aaaa1fc41fc4c4cc0285c49dc79d时间入侵预防系统（IPS）：案例研究&lt;/em&gt; &lt;/strong&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有效使用ID和IP的组织的一个很好的例子是Omada健康。他们是数字医疗解决方案的提供商，最初使用基于日志的ID，但由于威胁和严格的医疗保健法规的复杂性日益严重，因此发现它不足。为了提高安全性，他们采用了基于主机的IPS的威胁堆栈，该堆栈检查了运行过程和系统要求提供更多可行的见解。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;结合&lt;a href =“ https://www.f5.com/products/distributed-cloud-services”&gt;威胁堆栈的云安全平台和托管网络安全服务&lt;/a&gt;，OMA，OMADA Health获得了实时入侵检测和积极的威胁预防。 IPS在检测到时会自动阻止威胁，而IDS则标记了潜在风险。这种双重方法使Omada Health可以更快地应对安全事件，保护敏感的医疗保健数据并确保合规。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;集成也提高了运营效率。安全团队不再需要筛选低优先级的警报，每天节省了两到四个小时的分析时间。这种ID和IP的混合物提供了一种全面的，AI驱动的安全解决方案，在简化安全操作的同时增强了检测和预防功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这个故事说明了组织如何在提高其运营效率的同时实现全面的安全解决方案。这是ID和IP如何一起工作的概述：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;检测与预防：&lt;/strong&gt; ID，无论是基于签名还是基于异常的ID，监视网络流量和系统行为以识别威胁。但是，它不会自行采取行动。 IPS立即采取行动来阻止或减轻检测到的威胁，例如停止恶意流量或隔离损害系统。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;改善了响应时间：&lt;/strong&gt;在检测时，IPS可以比纯粹的手动安全响应更快，这可能需要时间来评估和采取行动。这使得它对于实时阻止攻击特别有用，从而提高了混合IDS系统的整体效率。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;最小化损害：&lt;/strong&gt; IDS提供警报时，IPS阻止攻击扩散，从而最大程度地减少潜在的损害。例如，如果IDS检测到异常行为，例如勒索软件攻击开始加密文件，则IPS可以防止其执行或进一步传播。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ WP-block-heading”&gt; &lt;strong&gt;利用云原状端点安全性用于全身或混合组织设置&lt;/strong&gt; &lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您的网络中的每个设备都是攻击者的潜在切入点，您是否想保护每个设备？对于完全遥远和基于云的业务，传统的端点安全是不​​够的。您需要一种云原状方法，可以扩展而不会增加复杂性或摩擦。以下是云本地端点安全性可以增强网络安全性的方法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1280&#34; height=&#34;794&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/09/image.jpg&#34; alt=&#34;An example of a cloud-based solution for Endpoint Security and management通过SaaS模型提供了统一的方法：端点中央“ class” =“ WP-Image-146066” srcset =“ https://www.cncf.io/wp-content/wp-content/uploads/2025/2025/09/image.jpg 1280w， https://www.cncf.io/wp-content/uploads/2025/09/image-300x186.jpg 300W，https://www.cncf.io/wp-content/uploads/2025/09/image-1024x635.jpg 1024W，https：//www.cncf.io/wp-content/uploads/2025/09/image-768x476.jpg 768w， https://www.cncf.io/wp-content/uploads/2025/09/image-900x558.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/09/image-322x200.jpg 322w, https://www.cncf.io/wp-content/uploads/2025/09/image-645x400.jpg 645w&#34; sizes=&#34;auto, (max-width: 1280px) 100vw, 1280px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; &lt;em&gt;图像标题：用于端点安全和管理的基于云的解决方案的示例，该解决方案通过SaaS模型提供了统一的方法。来源：&lt;/em&gt; &lt;/strong&gt; &lt;a href =“ https://www.manageengine.com/products/desktop-central/help/help/cloud-architecture.htmll#ecserver”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; AI在区分现代端点保护与传统解决方案方面起着至关重要的作用。它可以通过使用对大量数据训练的模型来准确预测威胁，尤其是在增强防御攻击之类的复杂攻击（如无归档威胁）时，可以实现高级保护。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一个出色的解决方案是Crowdstrike Falcon。该工具是云端端点安全平台，旨在速度，效率和AI驱动保护。与传统的安全工具不同，Falcon不需要持续的签名更新，本地管理基础架构或复杂的集成，以减慢操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;相反，它利用机器学习分析文件，网络流量和用户行为，在造成危害之前检测和停止威胁。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 2017年5月，WannaCry勒索软件攻击通过利用Windows漏洞（MS17-010）（称为EternalBlue）来散布和加密文件，从而在全球范围内破坏了企业，要求在比特币中赎金。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了响应，CrowdStrike Falcon被部署以通过机器学习来识别WannaCry的异常行为，并标记其与正常模式的偏差。猎鹰会自动隔离感染的端点，防止进一步扩散，并帮助组织应用MS17-010补丁以减轻漏洞。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，端点安全中的深度学习算法现在检测到高级威胁，例如多态性恶意软件，该威胁通过不断更改其签名来逃避传统的检测方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;用户行为分析（UBA）&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;无论您的员工对员工有多良好，故意或意外的内幕威胁仍然是持续的风险。即使是善意的员工也可能下载未批准的软件，该软件似乎无害，但最终将恶意软件引入了组织。一个更严重的情况是，当访问敏感知识产权的离开员工将数据带给竞争对手时。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;防火墙和端点保护等传统的安全措施并不总是能够检测这些行为，尤其是随着网络钓鱼策略和骗局变得越来越复杂，因此，这是用户行为分析（UBA）成为防御的关键层的地方。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; UBA的优势在于它的重点是内幕威胁。它在该领域以其微妙的，类似卧底的方法来监视组织内部的用户行为。它不仅寻找明显的危险信号，还建立了正常活动的基准，即文件访问员工访问，登录的频率，通常从何处工作等等。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; uba还检测到可能不会引起注意的微妙偏差，例如在奇数小时访问敏感数据或从异常位置登录。它在这些异常升级之前确定了这些异常，并根据您组织的独特模式提供量身定制的安全性。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Splunk UBA是一个有前途的解决方案，因为它提供了具有全面安全见解和高级分析的一系列检测模型：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;流媒体模型：&lt;/strong&gt;实时过程事件，评估每个事件在短时间内的影响（例如24小时）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;批处理模型：&lt;/strong&gt;分析更长的时间窗口，即使用历史数据检测异常和趋势的30天。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; AI和UBA一起进行的一个有力的例子是DarkTrace。 DarkTrace在部署后仅数小时就在电网上检测到了一个主动网络攻击。通过监视约5,000个设备，AI根据行为相似性将它们分组，并迅速确定了一种表明潜在威胁的异常。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; UBA利用AI和机器学习进行实时威胁检测的能力使其成为识别内部威胁和维护组织IT基础架构的安全性的至关重要工具。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一种统一的，多层的网络安全方法，结合ID，IPS，UBA和端点安全性，创建了动态，适应性的防御系统。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;每个工具都会增强另一个工具，形成一个自学习的安全网络，该网络共享洞察力以改善检测和响应。 AI驱动的系统将这一步骤进一步发展，发展为超车攻击者，保护关键数据，并保持领先于新兴威胁。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在网络安全上实施AI需要对技术，培训和基础设施进行周到的投资，但是长期收益很明显：改善威胁检测，预防和响应，确保您的组织的资产和声誉。要保持不断发展的威胁，请确保您的安全系统通过技术进步而发展。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 07 Sep 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Considerations when doing AI on Kubernetes】在Kubernetes上进行AI时的考虑</title>
      <link>https://www.cncf.io/blog/2025/09/05/considerations-when-doing-ai-on-kubernetes/</link>
      <description>【&lt;p&gt;As more teams start weaving generative AI (GenAI) into their apps and workflows, Kubernetes naturally comes up as the go-to platform. It’s a tried-and-tested solution for managing containerized workloads, but AI workloads are a different beast.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s a rundown of what you should think about—and which tools can help—when running AI workloads in cloud-native environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;em&gt;GenAI Workloads Need Event-Driven Infrastructure&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;GenAI features often hinge on user prompts, streaming data, or background jobs. That means you need infrastructure that’s reactive, scalable, and lean.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://knative.dev/docs/concepts/&#34;&gt;&lt;strong&gt;Knative Serving&lt;/strong&gt;&lt;/a&gt;: Great for HTTP-based GenAI services (like LLM APIs). It automatically scales up when requests come in, and scales to zero when they don’t. Perfect for saving money on GPU-bound workloads.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://keda.sh/docs/2.11/concepts/&#34;&gt;&lt;strong&gt;KEDA&lt;/strong&gt;&lt;/a&gt;: Adds event-driven autoscaling based on external sources like Kafka, RabbitMQ, or Prometheus. It complements Knative by widening the scope of what can trigger scaling.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Together, they give you a nimble setup that reacts fast and keeps infra costs manageable.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Things to consider when serving LLMs in Cloud-Native Environments&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cloud-native tooling provides robust building blocks to tackle the considerations below. The key is integrating scalable serving, observability, and DevOps best practices into your AI stack.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Autoscaling Sensitivity&lt;/strong&gt;: Traffic to LLMs can spike unpredictably. Autoscalers must be finely tuned with custom metrics.&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://keda.sh/docs/2.11/concepts/&#34;&gt;&lt;strong&gt;KEDA&lt;/strong&gt;&lt;/a&gt;: Great for event-based scaling—think queue lengths or custom metrics like token usage.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://knative.dev/docs/concepts/&#34;&gt;&lt;strong&gt;Knative Serving&lt;/strong&gt;&lt;/a&gt;: Scales based on actual HTTP traffic, and goes to zero when idle—perfect for APIs.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/autoscaling/&#34;&gt;&lt;strong&gt;VPA&lt;/strong&gt;&lt;/a&gt;: Helps tune your pods’ CPU and memory requests automatically.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.kubeflow.org/docs/external-add-ons/kserve/introduction/&#34;&gt;&lt;strong&gt;KServe&lt;/strong&gt;&lt;/a&gt;: Built with ML in mind, it supports scaling on things like inference throughput or request count.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Observability &amp;amp; Debugging&lt;/strong&gt;: GenAI behaviors are opaque. You need metrics, traces, and feedback to understand what’s working.&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/docs/concepts/&#34;&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt;&lt;/a&gt;: The go-to for collecting logs, metrics, and traces all in one.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://prometheus.io/docs/introduction/overview/&#34;&gt;&lt;strong&gt;Prometheus&lt;/strong&gt;&lt;/a&gt;: System monitoring and alerting toolset.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Prompt and Model Drift&lt;/strong&gt;: Just like model drift, prompts can become stale or produce inconsistent outputs.&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/evidentlyai/evidently&#34;&gt;&lt;strong&gt;Evidently AI&lt;/strong&gt;&lt;/a&gt;: Great for keeping tabs on prompt or input drift with real-time monitoring.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/langfuse/langfuse&#34;&gt;&lt;strong&gt;Langfuse&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; / PromptLayer&lt;/strong&gt;: Track how prompts perform and evolve—like analytics for your LLM calls.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/protectai/llm-guard&#34;&gt;&lt;strong&gt;LLMGuard&lt;/strong&gt;&lt;/a&gt;: Adds guardrails around your outputs to keep them on track and safe.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Resource Intensity&lt;/strong&gt;: Consider smart scheduling to avoid resource waste. LLMs are GPU-hungry and memory-heavy.&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Karpenter or Cluster Autoscaler&lt;/strong&gt;: Automatic node provisioning (like GPU-powered ones) when your workloads need them.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.kubeflow.org/docs/components/pipelines/concepts/&#34;&gt;&lt;strong&gt;Kubeflow Pipelines&lt;/strong&gt;&lt;/a&gt;: Deploying scalable ML workflows using containers on kubernetes based systems.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://kueue.sigs.k8s.io/docs/concepts/&#34;&gt;&lt;strong&gt;Kueue&lt;/strong&gt;&lt;/a&gt;:&amp;nbsp; It manages queues for batch jobs, especially when resources are tight. Need four GPUs for one big job? Kueue would ensure all resources are in place before the workload starts.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/&#34;&gt;&lt;strong&gt;Kubernetes GPU Scheduling (Device Plugins)&lt;/strong&gt;&lt;/a&gt;: You can fine-tune pod placement using labels and selectors. It will let you request specific specific sources using selectors and tolerations.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;3&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;em&gt;MLDevOps is Growing Up: It’s Not Just About Models Anymore&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With GenAI, it’s not just about models anymore. We’re now managing prompts, routing, evaluation loops—and all of it needs version control, observability, and automation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;PromptOps- Prompts as Versioned Artifacts: &lt;/strong&gt;Treat prompts like you treat code. Use Gitops tools like Argo CD to manage prompt templates. Deploy and validate with Ci/CD tools like Argo workflows and monitor using prometheus and/or grafana. You can utilize KServe to dynamically serve versioned prompts.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Shadow Deployments for GenAI: &lt;/strong&gt;Deploy new prompts or models in the background, monitor behavior, then roll out by using Istio, Knative(handles requests route and scale) and KServe(which is built on Knative and adds model lifecycle and inference management)&amp;nbsp; that helps with Traffic routing, traffic splitting and shadow support.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Evaluation Pipelines- Automate Model and Prompt Testing: &lt;/strong&gt;Keep quality high with continuous evaluation. Utilize MLflow/Weights and biases to log prompts and model changes. Also, Kubeflow pipelines to manage ML-native workflows.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Final Thoughts&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Running AI on Kubernetes isn’t just possible, it’s powerful. With the right tools, you can treat prompts, models, and GenAI services just like any other production-grade software component. But doing so requires a mindset shift: prompts aren’t just strings, they’re assets. And evaluations aren’t just test scripts, they’re pipelines. Lean into the cloud-native ecosystem and let your AI workflows evolve alongside your infrastructure.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;随着越来越多的团队开始将生成AI（Genai）编织到他们的应用程序和工作流程中，Kubernetes自然会成为首选平台。这是用于管理容器化工作负载的尝试和测试的解决方案，但是AI工作负载是另一种野兽。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是您应该考虑的内容以及在云本地环境中运行AI工作负载时的想法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; &lt;em&gt; genai工作负载需要事件驱动的基础架构&lt;/em&gt; &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; genai特征通常在用户提示，流数据或背景作业上取决于。这意味着您需要反应性，可扩展和瘦的基础架构。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://knative.dev/docs/concepts/”&gt; &lt;strong&gt; knative serving &lt;/strong&gt; &lt;/a&gt;：非常适合基于HTTP的Genai Services（例如LLM APIS）。当请求进来时，它会自动缩放，并在不提出时将其缩放为零。非常适合在GPU结合工作量上节省资金。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://keda.sh/docs/2.11/concepts/”&gt; &lt;strong&gt; keda &lt;/strong&gt; &lt;/a&gt;：添加了基于Kafka，Rabbitmq或Prometheus（例如Kafka，Rabbitmq或Prometheus）的外部来源的Event-event-drive驱动自动式化。它通过扩大可以触发缩放的范围的范围来补充Knative。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一起，它们为您提供了一个敏捷的设置，可以快速反应并保持中产阶级成本可管理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; &lt;em&gt;在云本地环境中服务LLM时要考虑的事情&lt;/em&gt; &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;云本地工具提供了可靠的构建块，以应对以下注意事项。关键是将可扩展的服务，可观察性和DevOps的最佳实践集成到您的AI堆栈中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;自动敏感性&lt;/strong&gt;：llms的流量可能无法预测。必须用自定义指标对自动制剂进行精心调整。&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://keda.sh/docs/2.11/concepts/”&gt; &lt;strong&gt; &lt;strong&gt; keda &lt;/strong&gt; &lt;/a&gt;：非常适合基于事件的缩放量表 - 思考队列长度或诸如图形用法之类的自定义指标。&lt;/li&gt;。&lt;/li&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://knative.dev/docs/concepts/”&gt; &lt;strong&gt; &lt;strong&gt; knative serving &lt;/strong&gt; &lt;/a&gt;：基于实际http流量的缩放量表&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://kubernetes.io/docs/conectes/workloads/workloads/autoscaling/”&gt; &lt;strong&gt; &lt;strong&gt; vpa &lt;/strong&gt; &lt;/a&gt;：帮助调整Pods的CPU和内存请求。&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://www.kubeflow.org/docs/external-add-ons/kserve/introduction/”&gt; &lt;strong&gt; kserve &lt;/strong&gt; &lt;/a&gt;：使用ML构建，它可以牢记ML，它支持诸如contription taky taky taby taky taby taby taby taby taby taby contput或请求。&lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/lie&gt; &lt;/&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;可观察性和调试性&lt;/strong&gt;：Genai行为不透明。您需要指标，跟踪和反馈来了解有效的方法。&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://opentelemetry.io/docs/concepts/”&gt; &lt;strong&gt; opentelemetry &lt;/strong&gt; &lt;/a&gt;：收集日志，指标和指标和痕迹全部。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://prometheus.io/docs/introduction/overview/”&gt; &lt;strong&gt; Prometheus &lt;/strong&gt; &lt;/a&gt;：系统监视和警报工具集。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;提示和模型漂移&lt;/strong&gt;：就像模型漂移一样，提示也可能变成陈旧或产生不一致的输出。&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/evideshiai/evidesly&#39;&gt; &lt;strong&gt;显然是ai &lt;/strong&gt; &lt;/a&gt;：非常适合通过实时监控来保持及时或输入漂移的标签。&lt;/li&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/langfuse/langfuse”&gt; &lt;strong&gt; &lt;strong&gt; langfuse &lt;/strong&gt; &lt;/a&gt; &lt;strong&gt; &lt;strong&gt;/stressLayer &lt;/strong &lt;/strong&gt;：跟踪提示的性能和进化方式 - 类似于LLM呼叫的分析。&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/protectai/llm-guard”&gt; &lt;strong&gt; &lt;strong&gt; llmguard &lt;/strong&gt; &lt;/a&gt;：在您的输出周围添加护栏，以使其保持正轨和安全。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;资源强度&lt;/strong&gt;：考虑智能调度以避免资源浪费。 LLMS是渴望GPU的人和记忆力繁多的。&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; karpenter或cluster Autoscaler &lt;/strong&gt;：当您的工作负载需要时，自动节点配置（如gpu驱动的节点）。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://www.kubeflow.org/docs/components/pipelines/pipelines/concepts/”&gt; &lt;strong&gt; kubeflow Pipelines &lt;/strong&gt; &lt;/a&gt;：使用Kubernetes基于Kubernetes上的容器在Kubernetes上使用容器来部署可扩展的ML Workflows。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://kueue.sigs.k8s.io/docs/concepts/”&gt; &lt;strong&gt; &lt;strong&gt; kueue &lt;/strong&gt; &lt;/a&gt;：它管理批处理工作的排队，尤其是当资源紧张时。需要四个GPU才能做一份大工作吗？ Kueue将在工作负载开始之前确保所有资源已到位。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/”&gt; &lt;strong&gt; kubernetes gpu Scheduling（设备插件）&lt;/strong&gt; &lt;/a&gt;：您可以使用Babels and Persectors进行填充POD POD。它将让您使用选择器和公差请求特定的特定来源。 &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 3” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; &lt;em&gt; Mldevops正在成长：不仅与模型有关&lt;/em&gt; &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与Genai一起，不仅仅是模型。我们现在正在管理提示，路由，评估循环 - 所有它都需要版本控制，可观察性和自动化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;提示 - 提示为版本的工件：&lt;/strong&gt;像对待代码一样处理提示。使用诸如Argo CD之类的Gitops工具来管理及时模板。使用Prometheus和/或Grafana使用CI/CD工具（例如Argo Workfrows）进行部署和验证。您可以利用Kserve动态服务于版本的提示。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; genai的阴影部署：&lt;/strong&gt;在后台部署新提示或模型，监视行为，然后使用istio，knative（手柄请求路线和规模）和kserve推出（构建在knative上，并添加模型生命周期和生命周期型生命周期和模型推理管理），有助于交通路由，流量分裂和阴影支持。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;评估管道 - 自动化模型和及时测试：&lt;/strong&gt;通过连续评估保持高质量。利用MLFLOW/权重和偏见来日志提示和模型更改。另外，KubeFlow管道管理ML本地工作流程。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;最终思想&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在kubernetes上运行AI不仅有可能，而且很强大。使用正确的工具，您可以像其他任何生产级软件组件一样处理提示，模型和Genai服务。但是这样做需要改变心态：提示不仅是字符串，它们是资产。评估不仅是测试脚本，而且是管道。倾斜到云本地生态系统，让您的AI工作流与基础架构一起发展。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 04 Sep 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Debug Trap: Why Smart Engineers Waste Hours on Trivial Problems】调试陷阱：为什么智能工程师浪费小时数小时</title>
      <link>https://www.cncf.io/blog/2025/09/04/the-debug-trap-why-smart-engineers-waste-hours-on-trivial-problems/</link>
      <description>【&lt;p&gt;Last month, I watched three senior engineers burn four hours debugging a “mysterious” Kubernetes issue that turned out to be a kubectl version upgrade. The same week, another team spent an entire night hunting phantom load balancer bugs when a certificate rotation had broken mobile clients with certificate pinning.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These aren’t stories about incompetent engineers. These are stories about brilliant people falling into the same cognitive trap that catches everyone: diving deep instead of looking broad.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The Question Nobody Asks&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s what happened with the kubectl disaster. The symptoms looked serious: cron jobs failing, secrets not updating across namespaces, image pulls crashing left and right. Classic distributed systems chaos, right?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The team immediately went into full forensic mode. Pod logs. RBAC permissions. Service account configurations. Network policies. Container registry connectivity. They even started questioning whether someone had compromised their infrastructure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Four hours later, an exhausted engineer finally asked the obvious question: “Wait, did we change anything recently?”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One git log later, they found their smoking gun: a kubectl version bump from earlier that day. The new version handled secret types differently. Five minutes to roll back, problem solved.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The brutal truth? They spent 240 minutes debugging something that took 5 minutes to fix, all because they forgot to ask a 10-second question.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The Change Principle (It’s Not Rocket Science)&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Production systems don’t just randomly decide to break on Tuesday afternoon. Something always changes first. Always.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The change usually falls into one of four buckets:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Code: deployments, feature flags, that “quick fix” someone pushed&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Infrastructure: server upgrades, network changes, scaling operations&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Configuration: environment variables, that toggle, you flipped “just to test”&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Traffic: load spikes, geographic shifts, bot attacks&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once you accept this reality, debugging becomes less about technical wizardry and more about detective work. Good detectives don’t start by analyzing the murder weapon—they start with “who was here when it happened?”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The Revert Rebellion&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s where I lose most engineers: your first instinct shouldn’t be to understand the problem. It should be to undo whatever caused it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This goes against everything we’re taught. Engineers love understanding root causes. We want to learn, to fix things properly, to write post-mortems that impress people with our technical depth.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But production users don’t care about your learning journey. They care about working software.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The certificate pinning incident I mentioned? Operations had rotated SSL certificates overnight. The mobile app couldn’t connect because it was checking for the old certificate fingerprint. Web browsers worked fine because they don’t do certificate pinning.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The “proper” debugging approach: dive into TLS handshake logs, analyze certificate validation failures, and understand the cryptographic details of pinning implementations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The first-principle approach: “What changed? Oh, certificates. Let’s roll back.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One took six hours. The other took six minutes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The Exotic Bug Fallacy&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Every engineer has a favorite theory about why their system is broken. Usually, it involves something impressive-sounding:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“It might be a race condition in our distributed cache.” “Could be a memory leak in the JVM garbage collector.” “I bet it’s that new Kubernetes version causing networking issues.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s the uncomfortable truth: 95% of production issues are caused by boring, obvious changes that you made recently. The remaining 5% are caused by boring, obvious changes that someone else made recently.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Your code is almost certainly the problem. Your recent deployment is almost certainly the problem. That configuration change you made this morning is almost certainly the problem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Exotic platform bugs make great conference talks, but they’re terrible debugging hypotheses.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The Debug Stack&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When something breaks, work through this hierarchy:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;What did I deploy recently?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;What infrastructure changed?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;What configuration changed?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;What external dependencies changed?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Is there a platform bug?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Most issues resolve at level 1 or 2. If you’re investigating level 5 before exhausting levels 1-4, you’re debugging in hard mode for no reason.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The Meta Problem&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After years of watching engineers debug in circles, I realized the real problem isn’t technical complexity. It changes visibility.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When production breaks, teams shouldn’t have to play “did anyone deploy anything?” detective. They shouldn’t have to dig through multiple repositories, chat histories, and change management systems to build a timeline.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This insight sparked our current product, which has unified change management as a core principle that captures everything: &lt;em&gt;code, infrastructure, and configuration&lt;/em&gt; in one timeline. When alerts fire, the ‘what changed?’ question has an immediate answer.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Next time your production system decides to have a bad day, resist every instinct to dive deep. Take a breath. Ask the right question: “What changed?”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Then fix it first, and understand it later.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Your users will thank you. Your sleep schedule will thank you. And your ego might take a small hit, but that’s probably good for you anyway.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;上个月，我看着三位高级工程师燃烧了四个小时，调试了一个“神秘的”库伯内特问题，结果证明是Kubectl版本的升级。同一周，当证书轮换折断的移动客户端时，另一个团队整夜狩猎幻影负载均衡器错误。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些不是关于无能的工程师的故事。这些故事是关于聪明的人陷入抓住每个人的认知陷阱的故事：深入深处而不是看起来很广泛。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;没有人问&lt;/strong&gt; &lt;/h3&gt;的问题&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是Kubectl灾难发生的事情。症状看上去很严重：Cron作业失败，秘密不会在命名空间上更新，图像左右拉动。经典分布式系统混乱，对吗？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;团队立即进入完整的法医模式。 POD日志。 RBAC许可。服务帐户配置。网络政策。容器注册表连接。他们甚至开始质疑某人是否妥协了他们的基础设施。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;四个小时后，一位疲惫的工程师终于问了一个明显的问题：“等等，我们最近更改了什么吗？” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;稍后，他们发现了吸烟枪：那天早些时候的kubectl版本。新版本处理秘密类型的处理方式不同。五分钟回头，解决问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;残酷的真相？他们花了240分钟调试一些需要5分钟的时间来修复的东西，这一切都是因为他们忘了提出10秒的问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;变化原理（不是火箭科学）&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;生产系统不仅决定在星期二下午随机休息。某事总是首先改变。总是。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;更改通常落入四个存储桶之一：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;代码：部署，功能标志，“快速修复”某人推了&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;基础架构：服务器升级，网络更改，缩放操作&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;配置：环境变量，切换，您翻转“只是测试” &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;流量：负载尖峰，地理班次，机器人攻击&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一旦您接受了这一现实，调试就会变得越来越涉及技术巫术，而更多地涉及侦探工作。好的侦探不是从分析谋杀武器开始的，他们从“发生的时候在这里？” &lt;/p&gt;开始&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;恢复叛乱&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是我失去大多数工程师的地方：您的第一个本能不应该理解问题。应该撤消任何造成的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这违背了我们所教的一切。工程师喜欢理解根本原因。我们想学习，正确修复事情，写验尸，以我们的技术深度打动人们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是生产用户不在乎您的学习旅程。他们关心工作软件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我提到的证书固定事件？运营已旋转了SSL证书过夜。移动应用无法连接，因为它正在检查旧的证书指纹。 Web浏览器工作正常，因为它们没有固定证书。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“正确”调试方法：潜入TLS握手日志，分析证书验证失败并了解固定实现的加密细节。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;第一原理方法：“什么变化了？哦，证书。让我们回滚。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一个小时花了六个小时。另一个花了六分钟。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;每个工程师都有一个喜欢的理论，说明为什么他们的系统被打破了。通常，它涉及一些令人印象深刻的东西：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“这可能是我们分布式缓存中的种族条件。” “可能是JVM垃圾收集器中的记忆泄漏。” “我敢打赌，这是新的kubernetes版本引起了网络问题。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是令人不安的事实：95％的生产问题是由于您最近做出的无聊，明显的变化而引起的。其余的5％是由于最近有人做出的无聊，明显的变化引起的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您的代码几乎可以肯定是问题所在。您最近的部署几乎可以肯定是问题所在。您今天早上进行的这种配置更改几乎可以肯定是问题所在。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;异国情调的平台错误进行了很棒的会议演讲，但它们是可怕的调试假设。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt; debug stack &lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当某件事破裂时，通过此层次结构进行工作：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;我最近部署了什么？&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;哪些基础架构发生了变化？&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;哪种配置更改？&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;哪些外部依赖性发生了变化？&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;是否有平台错误？&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;大多数问题在第1级或2级解决。如果您在耗尽1-4级之前正在调查5级，则无缘无故地在硬模式下进行调试。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;元问题&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;经过多年的观看工程师的调试，我意识到真正的问题不是技术复杂性。它改变了可见性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当生产中断时，团队不必玩“有人部署任何东西吗？”侦探。他们不必挖掘多个存储库，聊天历史记录和更改管理系统来构建时间表。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种见解引发了我们当前的产品，该产品将统一的变更管理作为捕获所有内容的核心原则：&lt;em&gt;代码，基础架构和配置&lt;/em&gt;在一个时间轴中。当警报起火时，“什么变化？”问题立即得到答案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下次您的生产系统决定度过糟糕的一天时，可以抵制每一个本能深入研究。屏住呼吸。问正确的问题：“发生了什么变化？” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;然后首先修复并理解后来。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您的用户会感谢您。您的睡眠时间表将感谢您。而且您的自我可能会受到很小的打击，但无论如何可能对您有好处。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 03 Sep 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Securing the Node: A Primer on Cilium’s Host Firewall】确保节点：Cilium的主机防火墙上的底漆</title>
      <link>https://www.cncf.io/blog/2025/09/03/securing-the-node-a-primer-on-ciliums-host-firewall/</link>
      <description>【&lt;p&gt;When discussing Kubernetes network security, much of the attention focuses on pod-to-pod traffic, ingress controllers, and service meshes. But what about the underlying nodes themselves, the very foundation on which our workloads run? The attack surface that Kubernetes nodes expose is vast and, if left unprotected, can become a golden ticket for malicious actors.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium host firewall is built to lock down the host network namespace with precision, visibility, and control, extending the same familiar declarative Kubernetes network policy model to the underlying host. In this blog post, we’ll explore what Cilium Host Firewall is, how it works, and why it should be a core part of your Kubernetes security.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The Node as a Blind Spot&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes native network policies don’t apply to host-level traffic. This means any communication that enters or leaves the host directly (for example, SSH, kubelet, or external monitoring agents) is largely invisible to traditional Kubernetes policy enforcement. While some firewalling is possible via firewalld or external systems, managing those rules is brittle and lacks integration with Kubernetes. At its core, this is the problem Cilium Host Firewall solves. Leveraging eBPF, Cilium introduces host firewalling directly into the fabric of the cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;How Cilium’s Host Firewall Works&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium treats the node as a special type of endpoint with the label reserved:host. This lets us apply policies just like we would for pods, except these apply to traffic to and from the node(s) themselves. Cilium host firewall operates at the interface level. You can explicitly set which devices it attaches to (eth0, eth1, etc.), or let Cilium auto-detect them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;998&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/08/image-2.jpg&#34; alt=&#34;Kind cluster graphic&#34; class=&#34;wp-image-145310&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/08/image-2.jpg 1600w, https://www.cncf.io/wp-content/uploads/2025/08/image-2-300x187.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/08/image-2-1024x639.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/08/image-2-768x479.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/08/image-2-900x561.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/08/image-2-321x200.jpg 321w, https://www.cncf.io/wp-content/uploads/2025/08/image-2-641x400.jpg 641w&#34; sizes=&#34;auto, (max-width: 1600px) 100vw, 1600px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Enabling Host Firewall&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The most convenient way to try out Cilium’s host firewall while keeping the user experience close to that of a production cluster is to set up your Kubernetes environment using a tool that spins up virtual machines locally. This makes it easier to test SSH access, simulate real network interfaces, and apply node-level policies. My preferred approaches include &lt;a href=&#34;https://minikube.sigs.k8s.io/docs/&#34;&gt;Minikube&lt;/a&gt; with the V&lt;a href=&#34;https://minikube.sigs.k8s.io/docs/drivers/virtualbox/&#34;&gt;irtualbox driver&lt;/a&gt;, or &lt;a href=&#34;https://k3s.io/&#34;&gt;k3s&lt;/a&gt; combined with &lt;a href=&#34;https://canonical.com/multipass&#34;&gt;Multipass&lt;/a&gt; for lightweight VM-based nodes that you can SSH into. We won’t dive into setting up a cluster for the sake of brevity. That said, you’re free to set up your cluster however you like, as long as it allows you to test Cilium in a way that includes host-level visibility and networking.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you are installing Cilium via the Cilium CLI, you can enable host firewall with the flag below.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;cilium install \&#xA;&#xA;&amp;nbsp;&amp;nbsp;--version 1.17.4 \&#xA;&#xA;&amp;nbsp;&amp;nbsp;--set hostFirewall.enabled=true \&#xA;&#xA;&amp;nbsp;&amp;nbsp;--set kubeProxyReplacement=true&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Via Helm, you can also enable the host firewall like below.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm install cilium ./cilium \&#xA;&#xA;&amp;nbsp;&amp;nbsp;--namespace kube-system \&#xA;&#xA;&amp;nbsp;&amp;nbsp;--set hostFirewall.enabled=true \&#xA;&#xA;&amp;nbsp;&amp;nbsp;--set devices=&#39;{eth0}&#39;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once Cilium has been deployed, it starts managing the selected interfaces and the host endpoint. You can verify the status with:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl exec -n kube-system ds/cilium -- cilium-dbg status | grep&#xA;&#39;Host firewall&#39;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We can also verify that the Host Firewall feature is activated using the Cilium CLI:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;cilium config view | grep host-firewall&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To apply policies, first label the target node:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl label node k8s1 node-access=ssh&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This allows you to scope policies to specific nodes based on purpose or function (e.g., node-access=ssh, type=ingress-worker).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Audit Mode&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Before enforcing a new host policy, you can enable Policy Audit Mode. This mode logs what would have been dropped without actually enforcing the rules. It’s an essential step to avoid self-inflicted outages such as accidentally cutting off access to the kube-apiserver or SSH.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&amp;nbsp; &amp;nbsp; kexec cilium-dbg endpoint config $HOST_EP_ID&#xA;PolicyAuditMode=Enabled&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Monitor traffic verdicts with:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&amp;nbsp; &amp;nbsp; kexec cilium-dbg monitor -t policy-verdict --related-to&#xA;$HOST_EP_ID&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This provides real-time insights into which flows would have been denied, letting you fine-tune policies before flipping the enforcement switch.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Observe Network Traffic with Hubble&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium assigns a special identity of “1” to the nodes in a cluster. We can use this identity to filter and observe the node’s network traffic.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&amp;nbsp; &amp;nbsp; hubble observe --to-identity 1 --port 22 -f&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Writing Host Network Policies&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Host network policies are defined using the CiliumClusterwideNetworkPolicy (CCNP) custom resource. Anatomically, the major difference between host policies and network policies is that traffic is matched based on the nodeSelector field rather than podSelector or endpointSelector like in Cilium network policies. This essentially means policies are scoped to the node itself, rather than to specific pods or workloads.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This table summarizes the key differences between Cilium host policies and Cilium network policies.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Cilium Network Policy&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Cilium Host Policy&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Selector Type&lt;/td&gt;&lt;td&gt;endpointSelector (pod-level)&lt;/td&gt;&lt;td&gt;nodeSelector (node-level)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Namespace Scope&lt;/td&gt;&lt;td&gt;Namespaced or cluster-wide&lt;/td&gt;&lt;td&gt;Always cluster-wide&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Applies To&lt;/td&gt;&lt;td&gt;Pods (in or out of host networking)&lt;/td&gt;&lt;td&gt;Host namespace + host-networked pods&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L3/L4 Rules&lt;/td&gt;&lt;td&gt;✅&lt;/td&gt;&lt;td&gt;✅&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L7 Rules&lt;/td&gt;&lt;td&gt;✅&lt;/td&gt;&lt;td&gt;❌&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s an example host network policy that allows only SSH (TCP/22) and ICMP (ping) traffic from outside the cluster, while permitting all internal cluster communications to the host:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: &#39;cilium.io/v2&#39;&#xA;&#xA;kind: CiliumClusterwideNetworkPolicy&#xA;&#xA;metadata:&#xA;&#xA;&amp;nbsp;&amp;nbsp;name: &#39;demo-host-policy&#39;&#xA;&#xA;spec:&#xA;&#xA;&amp;nbsp;&amp;nbsp;nodeSelector:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;matchLabels:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node-access: ssh&#xA;&#xA;&amp;nbsp;&amp;nbsp;ingress:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- fromEntities:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- cluster&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- toPorts:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- ports:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- port: &#39;22&#39;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protocol: TCP&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- icmps:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- fields:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- type: EchoRequest&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;family: IPv4&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Enforcing the Policy&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once you’re confident your policy won’t break anything, you can disable audit mode:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&amp;nbsp; &amp;nbsp; kexec cilium-dbg endpoint config $HOST_EP_ID&#xA;PolicyAuditMode=Disabled&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Immediately, Cilium will begin enforcing the host policy. Any disallowed communication, like a rogue external SSH attempt, will be blocked and logged with a clear verdict:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&amp;nbsp; &amp;nbsp; Policy verdict log: action deny, match none, 10.0.2.2:49038&#xA;-&amp;gt; 10.0.2.15:21 tcp SYN&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s an example of a real-world production policy that permits just the minimum required ingress traffic to a worker node:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;piVersion: &#39;cilium.io/v2&#39;&#xA;&#xA;kind: CiliumClusterwideNetworkPolicy&#xA;&#xA;metadata:&#xA;&#xA;&amp;nbsp;&amp;nbsp;name: &#39;lock-down-ingress-worker-node&#39;&#xA;&#xA;spec:&#xA;&#xA;&amp;nbsp;&amp;nbsp;nodeSelector:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;matchLabels:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;type: ingress-worker&#xA;&#xA;&amp;nbsp;&amp;nbsp;ingress:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- fromEntities:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- remote-node&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- health&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- toPorts:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- ports:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- port: &#39;22&#39;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protocol: TCP&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- port: &#39;6443&#39;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protocol: TCP # kube-apiserver&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- port: &#39;2379&#39;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protocol: TCP # etcd&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- port: &#39;4240&#39;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protocol: TCP # health checks&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- port: &#39;8472&#39;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protocol: UDP # VXLAN&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Best Practices and Troubleshooting Tips&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Label Nodes Clearly : Make sure nodeSelector labels in your policy match what’s actually set on the nodes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use Audit Mode First : Always test in audit mode to avoid breaking the control plane or SSH access.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Watch Monitor Logs : Use cilium-dbg monitor to get clear visibility into dropped or allowed packets.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Match Devices : If host firewall seems inactive, verify that Cilium is managing the correct interfaces with cilium-dbg status.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Hubble is Your Friend : Flow logs from Hubble come in very handy when writing and debugging policies.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium Host Firewall brings Kubernetes-native, eBPF-powered network security to the host layer, giving operators fine-grained control over traffic to and from the Kubernetes nodes themselves. By using the same familiar Kubernetes network policy declarative model, it’s easier than ever to treat your nodes as first-class citizens.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Additional Resources:&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://isovalent.com/labs/cilium-host-firewall/&#34;&gt;Cilium Host Firewall Lab&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=GLLLcz398K0&amp;amp;t=288s&#34;&gt;eCHO Episode 40: Cilium Host Firewall&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fLYHG07VdNc&#34;&gt;eCHO Episode 184: Securing Kubernetes Nodes with Cilium Host Firewall&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-3Fbb3BNjjE&#34;&gt;Kubernetes Node Firewalling from the Inside Out – Jef Spaleta &amp;amp; Justin Garrison&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;在讨论Kubernetes网络安全性时，大部分注意力集中在吊舱流量，入口控制器和服务网格上。但是，基础节点本身呢？ Kubernetes节点暴露的攻击表面很大，如果没有保护，可能会成为恶意演员的金票。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Cilium Host Firewall旨在锁定主机网络名称空间，可见性和控制，将相同熟悉的声明性Kubernetes网络策略模型扩展到基础主机。在这篇博客文章中，我们将探讨Cilium Host Firewall是什么，其工作原理以及为什么它应该成为您的Kubernetes安全的核心部分。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;节点作为盲点&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubernetes本地网络策略不适用于主机级流量。这意味着直接进入或离开主机的任何通信（例如，SSH，kubelet或外部监视剂）对于传统的Kubernetes政策执法基本上都是看不见的。尽管通过防火墙或外部系统可以进行一些防火墙，但管理这些规则是脆弱的，并且缺乏与Kubernetes的集成。从本质上讲，这是Cilium Host Firewall解决的问题。利用EBPF，Cilium将宿主防火墙直接引入集群的结构。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt; cilium的主机防火墙如何工作&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; cilium将节点视为特殊类型的端点，并保留标签：主机。这使我们能够像吊舱一样应用策略，除了适用于节点本身的流量。 Cilium主机防火墙在接口级别运行。您可以显式设置其设备所附到（ETH0，ETH1等）的设备，或者让Cilium自动检测它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy” dexoding =“ async” width =“ 1600” height =“ 998” src =“ https://wwwww.cncf.io/wp-content/wp-content/wp-content/uploads/uploads/uploads/uploads/uploads/2025/2025/08/08/image-clustr = class =“ wp-image-145310” srcset =“ https://www.cncf.io/wp-content/uploads/2025/08/image-2.jpg 1600W， https://www.cncf.io/wp-content/uploads/2025/08/image-2-300x187.jpg 300w，https://wwwwwww.cncf.io/wpf.io/wp-p-content/wp-content/wp-content/uploads/uploads/uploads/uploads/2025/2025/08/08/image-cage-camage-cage-cage-cage-cage-cage-10244w9.jp.-1024w9.jpp. https://www.cncf.io/wp-content/uploads/2025/08/image-2-768x479.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/08/image-2-900x561.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/08/image-2-321x200.jpg 321W，https://www.cncf.io/wp.io/wp-content/wp-content/wploads/uploads/uploads/uploads/2025/2025/2025/08/image-cage-244414.pp644144414414414414414414.pp尺寸=“ auto，（最大宽度：1600px）100VW，1600px” referrerpolicy =“ no-toferrer”&gt; &lt;/fige&gt;&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;启用主机防火墙&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;尝试Cilium的主机防火墙的最方便方法，同时使用户体验接近生产群集的使用情况是使用本地启动虚拟机的工具来设置Kubernetes环境。这使它更容易要测试SSH访问，请模拟真实的网络接口并应用节点级策略。我首选的方法包括&lt;a href =“ https://minikube.sigs.k8s.io/docs/”&gt; minikube &lt;/a&gt;与v &lt;a href =“ https://minikube.sig.sigs.k8s.k8s.k8s.k8s.io/docs/docs/drivers/drivers/drivers/virtialbox/”&gt; href =“ https://k3s.io/”&gt; k3s &lt;/a&gt;与&lt;a href =“ https://canonical.com/multipass”&gt; Multipass &lt;/a&gt;用于您可以进入的轻量级节点。为了简洁起见，我们不会潜入建立集群。也就是说，您可以自由地设置群集，只要您允许您以包括主机级可见性和网络的方式测试纤毛。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果要通过Cilium CLI安装Cilium，则可以在下面的标志上启用主机防火墙。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; cilium install \&#xA;&#xA;   -  Version 1.17.4 \&#xA;&#xA;  -SET HOSTFIREWALL.ENABLED = TRUE \&#xA;&#xA;  -Set kubeproxyplacement = true &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过Helm，您也可以启用如下所示的主机防火墙。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;  -namespace kube-system \&#xA;&#xA;  -SET HOSTFIREWALL.ENABLED = TRUE \&#xA;&#xA;  -set设备=&#39;{eth0}&#39;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一旦部署了纤毛，就会开始管理所选接口和主机端点。您可以通过以下方式验证状态：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; kubectl exec -n kube-system ds/cilium-cilium-dbg状态|格雷普&#xA;“主机防火墙” &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们还可以使用Cilium Cli激活主机防火墙功能：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;纤毛配置视图| GREP主机壁壁&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要应用策略，首先标记目标节点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; kubectl标签节点k8s1 node-access = ssh &lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这使您可以根据目的或功能将策略范围范围范围（例如node-access = ssh，type = indress-worker）。&lt;/p&gt;）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-neading”&gt; &lt;strong&gt;审核模式&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在执行新的主机策略之前，您可以启用策略审核模式。此模式在没有实际执行规则的情况下记录了将要删除的内容。这是避免自我造成的停电的重要步骤，例如不小心切断了对Kube-abiserver或SSH的访问。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; kexec cilium-dbg端点config $ host_ep_id&#xA;PolicyAuditMode =启用&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用以下方式监视流量判决：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;$ host_ep_id &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这提供了实时见解，将拒绝流动，让您在翻转执行开关之前进行微调策略。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ WP-block-heading”&gt; &lt;strong&gt;使用哈勃&lt;/strong&gt; &lt;/h2&gt;观察网络流量&#xA;&#xA;&#xA;&#xA;&lt;p&gt; cilium在群集中的节点分配了“ 1”的特殊身份。我们可以使用此身份过滤和观察节点的网络流量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用CiliumClusterWideNetworkPolicy（CCNP）自定义资源定义主机网络策略。从解剖学上讲，主机策略和网络策略之间的主要区别在于，流量是基于NodeSelector字段而不是PodSelector或EndpointSelector匹配的，例如Cilium Network Policies中。从本质上讲，这意味着策略范围范围为节点本身，而不是特定的POD或工作负载。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该表总结了纤毛主机策略与纤毛网络策略之间的关键差异。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-table”&gt; &lt;table class =“ has-fixed-layout”&gt; &lt;tbody&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;td&gt; &lt;strong&gt;功能&lt;/strong&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;strong&gt; cilium网络策略&lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;strong&gt; cilium cilium cilium host polition &lt;/td&gt; &lt;/td&gt; &lt;/td&gt; &lt;/td&gt; &lt;/td&gt; &lt;/td&gt; &lt;/td&gt; Type&lt;/td&gt;&lt;td&gt;endpointSelector (pod-level)&lt;/td&gt;&lt;td&gt;nodeSelector (node-level)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Namespace Scope&lt;/td&gt;&lt;td&gt;Namespaced or cluster-wide&lt;/td&gt;&lt;td&gt;Always cluster-wide&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Applies To&lt;/td&gt;&lt;td&gt;Pods (in or out of host networking)&lt;/td&gt;&lt;td&gt;Host namespace + host-networked pods&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L3/L4 Rules&lt;/td&gt;&lt;td&gt;✅&lt;/td&gt;&lt;td&gt;✅&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L7规则&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/table&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是一个示例主机网络策略，仅允许SSH（TCP/22）和ICMP（PING）流量来自集群外部，同时允许所有内部群集通信到主机：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：&#39;cilium.io/v2&#39;&#xA;&#xA;种类：ciliumclusterwidenetworkpolicy&#xA;&#xA;元数据：&#xA;&#xA;  名称：“演示主持人”&#xA;&#xA;规格：&#xA;&#xA;  NodeSelector：&#xA;&#xA;    MatchLabels：&#xA;&#xA;      节点访问：SSH&#xA;&#xA;  入口：&#xA;&#xA;     - 发出：&#xA;&#xA;        - 簇&#xA;&#xA;     - 高额：&#xA;&#xA;         - 端口：&#xA;&#xA;             - 端口：&#39;22&#39;&#xA;&#xA;              协议：TCP&#xA;&#xA;    -ICMP：&#xA;&#xA;         - 字段：&#xA;&#xA;             - 类型：EchoreQuest&#xA;&#xA;              家庭：IPv4 &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;执行策略&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一旦您确信政策不会破坏任何事情，就可以禁用审计模式：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; kexec cilium-dbg端点config $ host_ep_id&#xA;PolicyAuditMode =禁用&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;立即，纤毛将开始执行主机政策y。任何不允许的沟通，例如流氓外部SSH的尝试，都将被阻止和记录，以明确的判决：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA; - &gt; 10.0.2.15:21 TCP SYN &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是现实世界中生产政策的一个示例，该策略仅允许最低要求的入学流量到工人节点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; piversion：&#39;cilium.io/v2&#39;&#xA;&#xA;种类：ciliumclusterwidenetworkpolicy&#xA;&#xA;元数据：&#xA;&#xA;  名称：“锁定 - 吉式工人节点”&#xA;&#xA;规格：&#xA;&#xA;  NodeSelector：&#xA;&#xA;    MatchLabels：&#xA;&#xA;      类型：Ingress-Worker&#xA;&#xA;  入口：&#xA;&#xA;     - 发出：&#xA;&#xA;         - 远程节点&#xA;&#xA;        - 健康&#xA;&#xA;     - 高额：&#xA;&#xA;         - 端口：&#xA;&#xA;             - 端口：&#39;22&#39;&#xA;&#xA;              协议：TCP&#xA;&#xA;             - 端口：&#39;6443&#39;&#xA;&#xA;              协议：TCP＃kube-abiserver&#xA;&#xA;             - 端口：&#39;2379&#39;&#xA;&#xA;              协议：TCP＃etcd&#xA;&#xA;             - 端口：&#39;4240&#39;&#xA;&#xA;              协议：TCP＃健康检查&#xA;&#xA;             - 端口：&#39;8472&#39;&#xA;&#xA;              协议：udp＃vxlan &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-heading”&gt; &lt;strong&gt;最佳实践和故障排除提示&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;标签节点清楚：确保策略中的nodeselector标签匹配节点上实际设置的内容。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;首先使用审核模式：始终在审核模式下测试以避免打破控制平面或SSH访问。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;观看监视器日志：使用Cilium-DBG监视器以清晰可见或允许的数据包。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;匹配设备：如果主机防火墙似乎不活跃，请验证Cilium正在管理具有Cilium-DBG状态的正确接口。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;哈勃是您的朋友：在编写和调试政策时，Hubble的Flow Logs非常方便。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;结论&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; cilium主机防火墙将kubernetes-native，EBPF驱动的网络安全带到主机层，从而使操作员对往返Kubernetes节点本身的流量进行了细粒度的控制。通过使用同一家族iliar kubernetes网络政策声明模型，将您的节点视为一流的公民比以往任何时候都容易。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;附加资源：&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://isovalent.com/labs/cilium-host-firewall/”&gt; cilium主机防火墙实验室&lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://www.youtube.com/watch?v=glllcz398k0&amp;t=288s”&gt; echo第40集：cilium主机firewall &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://www.youtube.com/watch?v=flyhg07vdnc”&gt; Echo第184集：用Cilium Host FireWall &lt;/a&gt; &lt;/a&gt; &lt;/li&gt;确保Kubernetes节点&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://www.youtube.com/watch?v=-3fbbbb3bnjje”&gt; kubernetes节点防火墙从内而外 -  Jef Spaleta＆Justin Garrison &lt;/a&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 02 Sep 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Beyond Terraform Modules: Infrastructure Design by Contract】超越Terraform模块：合同基础设施设计</title>
      <link>https://www.cncf.io/blog/2025/09/02/beyond-terraform-modules-infrastructure-design-by-contract/</link>
      <description>【&lt;p&gt;It’s 2AM. You’re staring at a failed deployment pipeline, trying to figure out why your EKS cluster can’t find the right subnets. You’ve checked the variables, verified the outputs, and triple-checked your depends_on statements. Everything looks correct, yet it still fails.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This scenario plays out daily across organizations that have adopted Terraform. While modules promised composable, reusable infrastructure, the reality has become a complex web of string-matching, implicit dependencies, and tribal knowledge.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;How much of your team’s time is spent debugging module connections rather than delivering value?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The Hidden Tax of Module Stitching&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Every time a team provisions infrastructure for a new service or application, they pay an invisible tax in cognitive overhead:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Hunt &amp;amp; Wire&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For each input a module needs, someone must make critical decisions: Is this value a hard-coded constant? A data lookup? An output from another module? The answer differs for every project and environment, so this decision tree must be rebuilt from scratch each time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A seemingly simple task like connecting a Kubernetes cluster to a VPC becomes a detective exercise in matching string outputs to string inputs, with no verification until runtime, long after the PR is merged.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Re-implement Environment Rules&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Resource naming, tagging strategies, IAM permissions, and security controls must be consistently applied across environments. Yet traditional modules handle environments inconsistently—sometimes a module accepts an environment parameter, sometimes it doesn’t, and nothing enforces correct usage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The burden of “getting production right” sits squarely on whoever writes the module composition code, with no systematic guardrails.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Maintain a Second Codebase&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The glue code that ties modules together inevitably balloons into a project-sized Terraform configuration:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;# Just a small sample of typical glue code&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;locals {&#xA;&#xA;&amp;nbsp;&amp;nbsp;vpc_name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; = &#34;${var.prefix}-${var.environment}-vpc&#34;&#xA;&#xA;&amp;nbsp;&amp;nbsp;private_subnets&amp;nbsp; = module.vpc.private_subnet_ids&#xA;&#xA;&amp;nbsp;&amp;nbsp;cluster_name &amp;nbsp; &amp;nbsp; = &#34;${local.vpc_name}-eks&#34;&#xA;&#xA;&amp;nbsp;&amp;nbsp;# ... dozens more variable mappings&#xA;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This “composition layer” often contains more logic and complexity than the underlying modules themselves.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The result is a silent cost curve: each new service adds marginally less business value but exactly the same cognitive overhead. At scale, that overhead caps delivery speed, security posture, and team morale.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Four Pillars of Infrastructure Design by Contract&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Software engineers have long used “Design by Contract” to create reliable, modular systems. This approach establishes formal agreements between components about what each provides and requires. Applying these same principles to infrastructure transforms how components interact through four key pillars:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;1. Contract-Led Composition: Explicit Interfaces Between Components&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Traditional Reality:&lt;/strong&gt; Infrastructure integration is a string-matching game of chance. You pray that the VPC module’s outputs match what the EKS module expects, but there’s no guarantee until runtime:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;# Traditional Terraform Approach&#xA;&#xA;# VPC module outputs&#xA;&#xA;output &#34;vpc_id&#34; &amp;nbsp; &amp;nbsp; { value = aws_vpc.this.id }&#xA;&#xA;output &#34;subnet_ids&#34; { value = aws_subnet.private.*.id }&#xA;&#xA;# EKS module variables&#xA;&#xA;variable &#34;vpc_id&#34; &amp;nbsp; &amp;nbsp; { type = string }&#xA;&#xA;variable &#34;subnet_ids&#34; { type = list(string) }&#xA;&#xA;# Manual wiring in root module&#xA;&#xA;module &#34;eks&#34; {&#xA;&#xA;&amp;nbsp;&amp;nbsp;vpc_id&amp;nbsp; &amp;nbsp; &amp;nbsp; = module.vpc.vpc_id&#xA;&#xA;&amp;nbsp;&amp;nbsp;subnet_ids&amp;nbsp; = module.vpc.subnet_ids&#xA;&#xA;&amp;nbsp;&amp;nbsp;# No validation that these are the correct subnets&#xA;&#xA;&amp;nbsp;&amp;nbsp;# No guarantee vpc_id is from a compatible VPC&#xA;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With dozens of modules interacting, teams waste significant time debugging issues when these string interfaces don’t align perfectly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Contract-Based Transformation:&lt;/strong&gt; Modern approaches transform infrastructure composition through explicit type contracts:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;# VPC module declares what it produces&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;outputs:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;default:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;type: “@output/aws-vpc”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;# Kubernetes module declares what it requires&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;inputs:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;network:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;type: “@output/aws-vpc”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This implements true Design by Contract, where each component makes explicit promises about what it provides and requires. The orchestrator enforces that producers and consumers speak the same language, catching mismatches immediately rather than during production deployment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Just as software contracts guarantee function behavior, these infrastructure contracts guarantee correct composition and integration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;2. Environment-Aware by Design: Contracts Across Environments&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Traditional Reality: &lt;/strong&gt;Environment handling is bolted on as an afterthought. Teams create convoluted folder structures, copy-paste config files, or resort to complex variable overrides that inevitably drift out of sync.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Contract-Based Transformation:&lt;/strong&gt; Environment becomes a first-class dimension in each contract, with explicit declarations of what can vary between environments and what must remain consistent:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;vpc_cidr:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;default: “10.0.0.0/16”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;x-ui-overrides-only: true&amp;nbsp; # Can change per environment&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;enable_dns_hostnames:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;default: true&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;x-ui-override-disable: true&amp;nbsp; # Cannot change per environment&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This extends the contract beyond just interfaces to include environment-specific guarantees. Module authors don’t just hope their code handles environments correctly—they design explicit contracts for multi-environment deployment with orchestrator-enforced invariants.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;3. Progressive Rollouts for Infrastructure: Versioned Contracts&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Traditional Reality:&lt;/strong&gt; Infrastructure updates are all-or-nothing affairs. “Let’s merge this change to all environments and hope nothing breaks” is the unstated strategy. Version control exists primarily in git, with no structured way to progressively roll out changes across environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Contract-Based Transformation:&lt;/strong&gt; Users control which contract version is deployed to each resource in each environment:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p&gt;# Deploy version 2.0 to dev, 1.5 to staging, 1.0 to prod&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;infrastructure:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;network:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;environments:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dev:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;version: “2.0”&amp;nbsp; # Testing new features&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;staging:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;version: “1.5”&amp;nbsp; # Partial upgrade&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;prod:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;version: “1.0”&amp;nbsp; # Stable version&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This brings software-style contract versioning to infrastructure. Security patches can be rapidly deployed to lower environments, validated, and then incrementally rolled out to production. The versioning system creates a safety net that traditional Terraform lacks, allowing teams to move quickly with the ability to roll back precisely if a contract is broken.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;4. Developer Experience That Preserves Governance: Preconditions and Postconditions&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Traditional Reality:&lt;/strong&gt; Infrastructure teams face an impossible choice: lock everything down and become a bottleneck, or expose raw Terraform and risk security or compliance issues. The common “solution” is complex approval workflows that frustrate everyone and slow down delivery.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Contract-Based Transformation:&lt;/strong&gt; Schema-driven interfaces implement preconditions and postconditions that adapt to context:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-group is-layout-constrained wp-block-group-is-layout-constrained&#34;&gt;&#xA;&lt;p&gt;# Schema-driven interfaces enforce conditions&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;database:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;engine:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;type: string&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;enum: [“postgres”, “mysql”]&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;performance:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;type: string&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;enum: [“dev”, “standard”, “premium”]&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x-ui-visible-if:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;environment: [“staging”, “prod”]&amp;nbsp; # Hidden in dev&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Just as Design by Contract uses preconditions and postconditions to ensure correct function behavior, this approach uses them to ensure correct infrastructure behavior. The result is interfaces that adapt to context, showing different options based on environment, user role, or related settings, while maintaining critical governance boundaries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;From Configuration to Contract-Driven Infrastructure&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The shift from traditional Terraform modules to contract-driven modules isn’t just a technical improvement—it’s a fundamental change in how we think about infrastructure. By applying Design by Contract principles to infrastructure, we create:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Explicit guarantees about how components interact&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Verifiable constraints on what can change between environments&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Clear boundaries between different teams’ responsibilities&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Consistent interfaces that scale across an organization&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ask yourself:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;How much time does your team spend troubleshooting module integration issues?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Do you have confidence that your environments differ only in the ways you intend?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Can you safely roll out infrastructure changes gradually, or are you forced into risky all-or-nothing deployments?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This contract-driven approach creates a clearer separation of concerns:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Platform engineers focus on building robust modules with explicit contracts&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Developers express their infrastructure needs through verified interfaces&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The orchestrator handles the complex validation and enforcement&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The future of infrastructure isn’t about writing more configuration—it’s about establishing clear, enforceable contracts between components and letting orchestrators ensure those contracts are honored.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It’s important to understand that contract-driven infrastructure is not a replacement for Terraform, but rather a framework built on top of it—similar to how Spring Boot relates to Java. Just as Spring Boot provides structure, convention, and higher-level abstractions over Java while leveraging its core capabilities, contract-driven approaches that provide organization guarantees, and higher-level abstractions over Terraform while maintaining all its underlying power and flexibility.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;是凌晨2点。您正在盯着部署管道失败，试图弄清楚为什么您的EKS群集找不到正确的子网。您已经检查了变量，验证了输出，并检查了三次检查您的依赖性语句。一切看起来都正确，但仍然失败。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种情况每天在采用Terraform的组织中每天发挥作用。虽然模块承诺可重复使用的基础架构，但现实已成为弦乐匹配，隐性依赖性和部落知识的复杂网络。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您团队的时间中有多少时间用于调试模块连接而不是提供价值？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;模块缝制的隐藏税&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;每当团队提供新服务或应用程序的基础架构时，他们都会在认知开销中支付无形税：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class =“ wp-block头”&gt;狩猎与电线&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于每个输入，模块需要，有人必须做出关键决定：此值是硬编码常数吗？数据查找？来自另一个模块的输出？每个项目和环境的答案都不同，因此必须每次从头开始重建该决策树。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将Kubernetes群集与VPC连接到VPC的一项看似简单的任务成为将字符串输出与字符串输入匹配的侦探练习，直到合并PR之后很长时间才能进行验证。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class =“ wp-block头”&gt;重新实现环境规则&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;资源命名，标记策略，IAM权限和安全控制必须始终在环境中始终应用。然而，传统模块不一致地处理环境 - 有时，模块接受环境参数，有时没有，没有任何强制使用。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“正确生产”的负担直接坐在编写模块组成代码的任何人身上，没有系统的护栏。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class =“ wp-block头”&gt;维护第二个代码库&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将模块不可避免地与项目大小的Terraform配置联系在一起的胶水代码：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;＃只是典型胶代码的一小部分&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;当地人{&#xA;&#xA;  vpc_name =“ $ {var.prefix}  -  $ {var.environment} -vpc”&#xA;&#xA;  private_subnets = module.vpc.private_subnet_ids&#xA;&#xA;  cluster_name =“ $ {local.vpc_name} -eks”&#xA;&#xA;  ＃...数十个可变映射&#xA;&#xA;} &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这个“组成层”通常包含比基础模块本身更多的逻辑和复杂性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;结果是一个无声的成本曲线：每项新服务的业务价值较小，但认知开销完全相同。从规模上，高架上限交付速度，安全姿势和团队士气。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-heading”&gt;基础设施设计的四个支柱&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;软件工程师长期以来使用“合同设计”��创建可靠的模块化系统。这种方法建立了关于每个人提供和要求的组件之间的正式协议。将这些相同的原理应用于基础设施可以改变组件如何通过四个关键支柱相互作用：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; 1。合同主导的组成：组件之间的显式接口&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;传统现实：&lt;/strong&gt;基础架构集成是一种竞争机会游戏。您祈祷VPC模块的输出与EKS模块的期望相匹配，但是直到运行时才有保证：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;＃传统Terraform方法&#xA;&#xA;＃VPC模块输出&#xA;&#xA;输出“ vpc_id” {value = aws_vpc.this.id}&#xA;&#xA;输出“ subnet_ids” {value = aws_subnet.private。*。id}&#xA;&#xA;＃EKS模块变量&#xA;&#xA;变量“ VPC_ID” {type = string}&#xA;&#xA;变量“ subnet_ids” {type = list（string）}&#xA;&#xA;＃根模块中的手动布线&#xA;&#xA;模块“ eks” {&#xA;&#xA;  vpc_id = module.vpc.vpc_id&#xA;&#xA;  subnet_ids = module.vpc.subnet_ids&#xA;&#xA;  ＃没有验证这些是正确的子网&#xA;&#xA;  ＃不保证VPC_ID来自兼容的VPC&#xA;&#xA;} &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着数十个模块的交互，当这些字符串接口无法完美对齐时，团队浪费了大量的时间调试问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;基于合同的转型：&lt;/strong&gt;现代方法通过明确的类型合同转换基础设施组成：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;＃VPC模块声明其产生的&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;输出：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;默认值：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;类型：“@utput/aws-vpc” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;＃kubernetes模块声明其要求&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;输入：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网络：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;类型：“@utput/aws-vpc” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这通过合同实现了真实的设计，每个组件都会明确承诺其提供和所需的内容。编排者强制执行生产者和消费者说相同的语言，立即捕捉不匹配而不是在生产部署期间。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就像软件合同保证功能行为一样，这些基础设施合同保证了正确的组成和集成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; 2。设计：设计：跨环境的合同&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;传统现实：&lt;/strong&gt;环境处理是事后想法的。团队创建复杂的文件夹结构，复制式配置文件或诉诸复杂的变量覆盖不可避免地会从同步中流出。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;基于合同的转型：&lt;/strong&gt;环境成为每个合同中的一流维度，并明确声明环境之间可能会有所不同，并且必须保持一致的内容：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; vpc_cidr：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;默认值：“ 10.0.0.0/16” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; x-ui-overrides-仅：true＃可以改变每个环境&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; enable_dns_hostnames：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;默认值：true &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; x-ui-override-disable：true＃无法更改每个环境&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这将合同范围扩展到仅仅是界面，以包括特定于环境的保证。模块作者不仅希望他们的代码能够正确处理环境 - 他们设计的明确合同用于与管弦乐队增强的不变性的多种环境部署。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; 3。基础架构的渐进式推广：版本的合同&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;传统现实：&lt;/strong&gt;基础架构更新是全有或全无的事务。 “让我们将这种变化合并到所有环境中，并希望什么都没有破坏”是未知的策略。版本控制主要存在于git中，没有结构化的方式来逐步推出环境的更改。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;基于合同的转换：&lt;/strong&gt;用户控制每个环境中每个资源的合同版本：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-group是可能约束的wp-block-group-is-layout-inconted”&gt;&#xA;&lt;p&gt;＃将版本2.0部署到dev，1.5登台，1.0 to prod &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;基础架构：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网络：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;环境：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; dev：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;版本：“ 2.0”＃测试新功能&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;分期：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;版本：“ 1.5”＃部分升级&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; prod：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;版本：“ 1.0”＃稳定版本&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这将软件式合同版本用于基础架构。安全补丁可以迅速部署到较低的环境中，经过验证，然后逐步推出到生产中。版本控制系统创建了传统Terraform所缺乏的安全网，使团队能够迅速移动，并在合同破损的情况下精确退回。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; 4。维护治理的开发人员经验：先进和后条件&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;传统现实：&lt;/strong&gt;基础设施团队面临不可能的选择：锁定一切并成为瓶颈，或者揭露原始地带和风险安全或合规性问题。常见的“解决方案”是复杂的批准工作流程，使所有人感到沮丧并减慢交付。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;基于合同的转换：&lt;/strong&gt;模式驱动的接口实现适应上下文的前提和后条件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-group是可能约束的wp-block-group-is-layout-inconted”&gt;&#xA;&lt;p&gt;＃模式驱动的接口强制执行条件&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;数据库：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;引擎：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;类型：字符串&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;枚举：[“ postgres”，“ mysql”] &lt;/p&gt;&lt;p&gt;性能：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;类型：字符串&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;枚举：[“ dev”，“标准”，“ premium”] &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; x-ui-visible-if：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;环境：[“阶段”，“ prod”]＃隐藏在dev &lt;/p&gt;中&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;正如通过合同设计使用前提条件和后条件来确保正确的功能行为一样，此方法使用它们来确保正确的基础架构行为。结果是适应上下文的接口，根据环境，用户角色或相关设置显示不同的选项，同时保持关键的治理边界。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;从配置到合同驱动的基础架构&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从传统的Terraform模块到合同驱动的模块的转变不仅是技术改进，而且是我们对基础架构的看法的根本变化。通过将合同原则的设计应用于基础架构，我们创建：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;明确保证组件如何互动&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;对环境之间可以改变什么的可验证约束&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;不同团队的职责之间的明确界限&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;一致的界面跨组织扩展&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;问问自己：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;您的团队花费了多少时间来解决模块集成问题？&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;您是否有信心您的环境仅在您打算的方式上有所不同？&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;您可以安全地推出基础架构的更改，还是被迫进行全或全神贯注的部署？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种合同驱动的方法创造了更清晰的关注点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;平台工程师专注于用明确合同构建强大的模块&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;开发人员通过经过验证的接口表达其基础架构需求&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;编排者处理复杂的验证和执行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;基础架构的未来不是要编写更多的配置，而是建立组件之间的明确，可强制执行的合同，并让整理器确保这些合同得到尊重。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;重要的是要了解，以合同驱动的基础架构不是Terraform的替代，而是建立在其顶部的框架，就像Spring Boot与Java的关系一样。就像春季靴子在利用其核心功能的同时提供结构，惯例和高级抽象，提供组织保证的合同驱动方法以及对Terraform的高级抽象，同时保持其所有基本功能和灵活性。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 01 Sep 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Jaeger at 10: Forged in Community, Reborn in OpenTelemetry】Jaeger 10：在社区中伪造，重生在Opentelemetry中</title>
      <link>https://www.cncf.io/blog/2025/09/01/jaeger-at-10-forged-in-community-reborn-in-opentelemetry/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;512&#34; height=&#34;279&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/08/image.jpg&#34; alt=&#34;Jaeger 10th Anniversary graphic&#34; class=&#34;wp-image-145250&#34; style=&#34;aspect-ratio:16/9;object-fit:cover&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/08/image.jpg 512w, https://www.cncf.io/wp-content/uploads/2025/08/image-300x163.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/08/image-367x200.jpg 367w&#34; sizes=&#34;auto, (max-width: 512px) 100vw, 512px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the fast-paced world of software, reaching 10 years is a testament to a project’s resilience, utility, and community strength. Half a decade ago, we celebrated&lt;a href=&#34;https://medium.com/jaegertracing/jaeger-turns-five-a-tribute-to-project-contributors-8f2f4c15405&#34;&gt; Jaeger’s fifth anniversary&lt;/a&gt;, marveling at its growth from a nascent idea to a critical component in the observability stack. Today, as we mark 10 years, we’re not just celebrating longevity; we’re celebrating a profound evolution. Jaeger has been reborn, embracing a future built on collaboration, standardization, and the incredible momentum of OpenTelemetry.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Most Challenging Part of Tracing&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For years, the most significant barrier to adopting distributed tracing wasn’t the backend. It was instrumentation. Getting telemetry data out of applications was a complex, often proprietary, and labor-intensive process. Every tracing system had its own SDKs, its own agents, and its own way of doing things. This fragmentation created vendor lock-in and a steep learning curve, hindering widespread adoption.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is where OpenTelemetry changed everything. It didn’t just offer another SDK; it advanced the entire practice of instrumentation. By providing a single, vendor-neutral standard, OpenTelemetry unified both manual instrumentation (SDKs) and automatic instrumentation (agents). This solved the hardest part of the tracing puzzle. It created a unified language and a consistent methodology for telemetry, allowing developers to instrument their code once — or not at all, in the case of auto-instrumentation — and send the data to any compatible backend.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For the Jaeger project, the rise of OpenTelemetry was a watershed moment. It presented an opportunity to shed the burden of maintaining its own clients and to focus on what it does best: providing a powerful, scalable, and intuitive tracing product. The decision was made to go all-in on OpenTelemetry, a move that has defined Jaeger’s recent evolution and solidified its place in the modern observability landscape.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Journey to v2&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The journey to Jaeger v2 and the full embrace of OpenTelemetry was a massive undertaking. The culmination of this strategic shift is a fundamental re-architecture of the Jaeger backend. Jaeger v2 is built on the OpenTelemetry Collector, leveraging its flexible, extensible pipeline to process and route telemetry data.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This new architecture brings a host of benefits:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Unified and simplified:&lt;/strong&gt; The multiple binaries of Jaeger v1 have been replaced by a single, streamlined binary. This simplifies deployment and provides a consistent configuration experience.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Native OpenTelemetry support:&lt;/strong&gt; Jaeger v2 natively understands the OpenTelemetry Protocol (OTLP) end to end, eliminating the need for translation layers and improving performance.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Unprecedented flexibility:&lt;/strong&gt; By building on the OpenTelemetry Collector, Jaeger inherits its rich ecosystem of receivers, processors, and exporters. This allows for advanced data manipulation, from tail-based sampling to PII filtering and seamless integration with other observability tools.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Future-proofed:&lt;/strong&gt; The tight alignment with OpenTelemetry ensures that Jaeger will continue to evolve alongside the industry standard, benefiting from the collective innovation of the entire observability community.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Fueling the Future: The Mentorship Pipeline&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This transition was made possible by the dedication of the project’s maintainers and the vibrant community that surrounds it. A special and heartfelt thank you goes to the participants of the &lt;strong&gt;LFX Mentorship program&lt;/strong&gt; and &lt;strong&gt;Google Summer of Code&lt;/strong&gt;. These programs have become a critical pipeline for talent and innovation, directly fueling Jaeger’s evolution.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Major, tangible progress has been driven by&lt;a href=&#34;https://www.jaegertracing.io/mentorship/&#34;&gt; these mentees&lt;/a&gt;. We’ve seen foundational work on Jaeger v2 from&lt;a href=&#34;https://github.com/akagami-harsh&#34;&gt; Harshvir Potpose&lt;/a&gt;,&lt;a href=&#34;https://github.com/james-ryans&#34;&gt; James Ryans&lt;/a&gt;, and&lt;a href=&#34;https://github.com/Pushkarm029&#34;&gt; Pushkar Mishra&lt;/a&gt;. The Jaeger v2 Kubernetes Operator and Helm Chart were advanced by&lt;a href=&#34;https://github.com/Ankit152&#34;&gt; Ankit Kurmi&lt;/a&gt; and&lt;a href=&#34;https://github.com/hellspawn679&#34;&gt; Mehul Gautam&lt;/a&gt;. Key architectural components like the Kafka-based architecture and Service Performance Monitoring were tackled by&lt;a href=&#34;https://github.com/joeyyy09&#34;&gt; Harshith Mente&lt;/a&gt; and&lt;a href=&#34;https://github.com/FlamingSaint&#34;&gt; Raghuram Kannan&lt;/a&gt;. The UI has seen significant upgrades, with&lt;a href=&#34;https://github.com/anshgoyalevil&#34;&gt; Ansh Goyal&lt;/a&gt; and&lt;a href=&#34;https://github.com/vishvamsinh28&#34;&gt; Vishvamsinh Vaghela&lt;/a&gt; updating it to the latest React.js,&lt;a href=&#34;https://github.com/prathamesh-mutkure&#34;&gt; Prathamesh Mutkure&lt;/a&gt; unifying graph views, and&lt;a href=&#34;https://github.com/hari45678&#34;&gt; Hariom Gupta&lt;/a&gt; upgrading charts. We’ve also expanded our backend support, with&lt;a href=&#34;https://github.com/pmuls99&#34;&gt; Yashwanth Reddy&lt;/a&gt; building support for Elasticsearch 8 and&lt;a href=&#34;https://github.com/pipiland2612&#34;&gt; Minh Nguyen&lt;/a&gt; working on native SPM support. This is just a sample of the incredible work done by all our mentees, including&lt;a href=&#34;https://github.com/chahatsagarmain&#34;&gt; Chahat Sagar&lt;/a&gt;,&lt;a href=&#34;https://github.com/Manik2708&#34;&gt; Manik Mehta&lt;/a&gt;,&lt;a href=&#34;https://github.com/Wise-Wizard&#34;&gt; Saransh Shankar&lt;/a&gt;,&lt;a href=&#34;https://github.com/afzal442&#34;&gt; Afzal Ansari&lt;/a&gt;,&lt;a href=&#34;https://github.com/GLVSKiriti&#34;&gt; GLVS Kiriti&lt;/a&gt;, and&lt;a href=&#34;https://github.com/haanhvu&#34;&gt; Ha Anh Vu&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Their fresh perspectives, hard work, and technical contributions have not just been helpful; they have been instrumental. We are immensely proud of what they have accomplished and are excited to see them grow into regular contributors and the future maintainers of the project.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Mature Ecosystem of Tracing&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The move to OpenTelemetry and the release of Jaeger v2 represent a significant maturation of the Jaeger project. The focus has shifted from building a self-contained system to creating a core component within a larger, collaborative ecosystem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This unification extends to the entire tracing pipeline. With OpenTelemetry handling instrumentation, and the OpenTelemetry Collector providing a standardized data processing layer, Jaeger can now focus on its core mission: providing a robust, scalable, pluggable storage and query engine for traces. The continued support for popular backends like Cassandra and Elasticsearch, along with the upcoming addition of ClickHouse as an official storage backend, underscores this commitment to flexibility and choice.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Recognition of the Community&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we look back on 10 years of Jaeger, one thing remains constant: the incredible community that has built, maintained, and championed the project. From the early days at Uber to its graduation within the CNCF and the countless contributions from individuals and organizations around the world, Jaeger is a testament to the power of open source collaboration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The scale of this collaboration is staggering. Five years ago, the project’s impressive momentum was already clear, with &lt;strong&gt;302 companies&lt;/strong&gt; contributing &lt;strong&gt;4.3K code commits&lt;/strong&gt; and &lt;strong&gt;3.2K pull requests&lt;/strong&gt;. That momentum has not only continued but accelerated. Today, the community has grown to &lt;strong&gt;1,359 contributors&lt;/strong&gt; from &lt;strong&gt;597 companies&lt;/strong&gt;. The core Jaeger repository has surpassed &lt;strong&gt;6.5k commits&lt;/strong&gt; and &lt;strong&gt;5.1k pull requests&lt;/strong&gt;. This incredible growth, with a diverse range of organizations from startups to tech giants investing in Jaeger’s future, is a direct reflection of the project’s importance and the community’s unwavering dedication.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The future of Jaeger is focused on continuing this platform evolution. We will no longer maintain Jaeger v1, which will be fully deprecated in January 2026 following the last v1 release in December 2025. The rest of the roadmap includes supporting even more backends and, most importantly, creating easier ways for new users to demo the project and get value quickly. By lowering the barrier to entry, we can bring the immense power of tracing to an even wider audience. Here’s to the last 10 years, and to a future that is open, unified, and more accessible than ever.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 512” height =“ 279” class =“ wp-image-145250” style =“ fack-ratio：16/9; object-fit：cover” srcset =“ https://www.cncf.io/wp-content/wp-content/uploads/2025/2025/08/image.jpg 512w，512w， https://www.cncf.io/wp-content/uploads/2025/08/image-300x163.jpg 300W，https://www.cncf.io/wp-content/wp-content/uploads/uploads/uploads/267 x267x267x267x267x267x267x267x267x267x267x267jjpg = jpg = jpg。 （最大宽度：512px）100VW，512px“ reverrerpolicy =“ no-referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在快节奏的软件世界中，达到10年是一个项目的韧性，公用事业和社区实力的证明。五年前，我们庆祝了&lt;a href =“ https://medium.com/jaegertracing/jaeger-turns-five-a-tribute-to-project-contributors-8f2f4c15405”&gt; jaeger的第五个周期性&lt;/a&gt;，这是一个重要的&lt;/a&gt;，这是从一个重要的&lt;/a&gt;中逐渐成长的，这是一个关键的构成。今天，当我们纪念10年时，我们不仅在庆祝长寿。我们正在庆祝一个深刻的发展。 Jaeger已重生，拥抱建立在协作，标准化和令人难以置信的Opentelemetry的势头上的未来。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-heading”&gt; &lt;strong&gt;跟踪中最具挑战性的部分&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;多年来，采用分布式跟踪的最重要的障碍不是后端。那是仪器。从应用程序中获取遥测数据是一个复杂的，通常是专有且劳动密集型的过程。每个跟踪系统都有自己的SDK，自己的代理商和自己的做事方式。这种破碎化创造了供应商的锁定和陡峭的学习曲线，阻碍了广泛采用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是OpentElemetry改变一切的地方。它不仅提供另一个SDK；它提高了整个仪器的实践。通过提供单个供应商中立的标准，Opentelemetry统一手动仪器（SDK）和自动仪器（代理）。这解决了追踪难题的最难部分。它创建了一种统一的语言和一种一致的遥测方法，使开发人员可以启动其代码一次（或根本没有自动启动仪器），并将数据发送到任何兼容的后端。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于Jaeger项目，Opentelemetry的兴起是一个分水岭。它提供了一个机会，减轻了维护自己的客户的负担，并专注于最擅长的事情：提供强大，可扩展和直观的追踪产品。该决定是在Opentelemetry上全面融入的，此举定义了Jaeger最近的进化并巩固了其在现代可观察性景观中的地位。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt; v2 &lt;/strong&gt; &lt;/h3&gt;的旅程&#xA;&#xA;&#xA;&#xA;&lt;p&gt;前往Jaeger V2的旅程以及Opentelemetry的全面拥抱是一项巨大的事业。这种战略转变的结晶是Jaeger后端的基本重新结构。 jAEGER V2建立在OpenTelemetry收集器上，利用其灵活的，可扩展的管道来处理和路由遥测数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这个新建筑带来了许多好处：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;统一和简化：&lt;/strong&gt; Jaeger V1的多个二进制文件已被一个简化的二进制替代。这简化了部署并提供一致的配置体验。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;本机opentelemetry支持：&lt;/strong&gt; jaeger v2原始理解opentelemetry协议（OTLP）端到头，消除了对翻译层的需求并提高性能。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;空前的灵活性：&lt;/strong&gt;通过在Opentelemetry收集器上构建，Jaeger继承了其丰富的接收器，处理器和出口商的生态系统。这允许进行高级数据操作，从基于尾部的采样到PII过滤和与其他可观察性工具无缝集成。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;未来的范围：&lt;/strong&gt;与OpentElemetry的紧密结合确保Jaeger将继续与行业标准一起发展，从而受益于整个观察性社区的集体创新。&lt;/li&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过项目的维护者和周围的充满活力的社区的奉献精神使这种过渡成为可能。 &lt;strong&gt; lfx指导计划的参与者&lt;/strong&gt;和&lt;strong&gt; Google Summer of Code &lt;/strong&gt;都特别感谢。这些计划已成为人才和创新的关键渠道，直接加剧了Jaeger的进化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://www.jaegertracing.io/mentorship/”&gt;这些受训者&lt;/a&gt;。我们已经从&lt;a href =“ https://github.com/akagami-harsh”&gt; harshvir potpose &lt;/a&gt;，&lt;a href =“ https：//github.com.com.com/james-ryans”&gt; Pushkar Mishra &lt;/a&gt;。 Jaeger V2 Kubernetes操作员和Helm Chart由&lt;a href =“ https://github.com/ankit152”&gt; ankit kurmi &lt;/a&gt;和&lt;a href =“ https://github.com/hellspawn679”&gt; mehul gautam &lt;/afam &lt;/a&gt;。 &lt;a href =“ https://github.com/joeyyy09”&gt; Harshith Mente &lt;/a&gt;和&lt;a href =“ https：//github.com/github.com/flamings.com/flamings.com/flamingsaint”&gt; raghuramkannananananananananananananan &lt;/a&gt;。 UI看到了明显的升级，并使用&lt;a href =“ https://github.com/anshgoyalevil”&gt; ansh goyal &lt;/a&gt;和&lt;a href =“ https://github.com/vishub.com/vishvamsinh28”&gt; href =“ https://github.com/prathamesh-mutkure”&gt; prathamesh mutkure &lt;/a&gt;统一图表，&lt;a href =“ https://github.com/hari45678”&gt; hariom gupta &lt;/a&gt; upgrading图表。我们还通过&lt;a href =“ https://github.com/pmuls99”&gt; yashwanth reddy &lt;/a&gt;建立对EL的支持asticsearch 8和&lt;a href =“ https://github.com/pipiland2612”&gt; minh nguyen &lt;/a&gt;致力于本机SPM支持。 This is just a sample of the incredible work done by all our mentees, including&lt;a href=&#34;https://github.com/chahatsagarmain&#34;&gt; Chahat Sagar&lt;/a&gt;,&lt;a href=&#34;https://github.com/Manik2708&#34;&gt; Manik Mehta&lt;/a&gt;,&lt;a href =“ https://github.com/wiss-wizard”&gt; saransh shankar &lt;/a&gt;，&lt;a href =“ https://github.com/afzal442”&gt; afzal ansari &lt;/a&gt; href =“ https://github.com/haanhvu”&gt; ha anh vu &lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;他们的新观点，努力和技术贡献不仅有帮助；他们一直在发挥作用。我们为他们所取得的成就感到非常自豪，并很高兴看到他们成长为定期贡献者和未来的项目维护者。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt; tracing的成熟生态系统&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;移至Opentelemetry，Jaeger V2的释放代表了Jaeger项目的重要成熟。重点已从建立独立的系统转变为在更大的协作生态系统中创建核心组件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此统一扩展到整个跟踪管道。借助OpenTelemetry处理仪器，以及提供标准化数据处理层的OpenTelemetry Collector，Jaeger现在可以专注于其核心任务：提供可靠的，可扩展的，可扩展的，可插入的存储和查询引擎的痕迹。对Cassandra和Elasticsearch等流行后端的持续支持，以及即将增加的Clickhouse作为正式存储后端，强调了灵活性和选择的承诺。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;识别社区&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当我们回顾约10年的Jaeger时，一件事仍然不变：令人难以置信的社区已经建立，维护和倡导了该项目。从Uber的早期到CNCF的毕业以及世界各地个人和组织的无数贡献，Jaeger都是开源协作的力量的证明。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这项合作的规模令人震惊。五年前，该项目令人印象深刻的势头已经很明显，&lt;strong&gt; 302公司&lt;/strong&gt; &lt;strong&gt; 4.3k代码提交&lt;/strong&gt;和&lt;strong&gt; 3.2K拉力请求&lt;/strong&gt;。这种势头不仅在继续，而且加速了。如今，该社区已从&lt;strong&gt; 597公司&lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt;。核心Jaeger存储库已超过&lt;strong&gt; 6.5k Consits &lt;/strong&gt;和&lt;strong&gt; 5.1K拉的请求&lt;/strong&gt;。这种令人难以置信的增长，从初创企业到高科技巨头投资Jaeger的未来的各种各样的组织，是对该项目的重要性和社区坚定不移的奉献精神的直接反映。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Jaeger的未来专注于继续这一平台发展。我们将不再维护Jaeger V1这将在2025年12月上次发行后，将在2026年1月对其进行完全弃用。该路线图的其余部分包括支持更多的后端，最重要的是，为新用户创造了更轻松的方式来演示项目并迅速获得价值。通过降低进入障碍，我们可以将追踪的巨大力量带给更广泛的观众。这是过去十年，以及一个开放，统一和比以往更容易获得的未来。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 31 Aug 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing Kyverno Release 1.15!】宣布kyverno版本1.15！</title>
      <link>https://www.cncf.io/blog/2025/08/30/announcing-kyverno-release-1-15/</link>
      <description>【&lt;p&gt;Kyverno 1.15 makes Kubernetes policy management more powerful, extensible, and user-friendly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We are thrilled to announce the release of Kyverno 1.15.0, continuing our mission to make policy management in Kubernetes environments more modular, performant, and user-friendly. This release introduces new capabilities across multiple policy types, enhances testing and CLI functionality, and brings many improvements that a vibrant community has contributed.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;New MutatingPolicy for dynamic resource transformation with native Kubernetes integration&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;New GeneratingPolicy for intelligent resource creation and synchronization using CEL expressions&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;New DeletingPolicy resource for controlled cleanup of Kubernetes resources&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Advanced CEL functions and enhanced policy exception support for fine-grained control&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Community milestone: over 850 changes merged from 70+ contributors, including many first-timers!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;New Policy Types&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Building on the foundation of ValidatingPolicy and ImageValidatingPolicy from previous releases, Kyverno 1.15 introduces three new CEL-based policy types that complete our comprehensive policy ecosystem. While Kyverno, created by Nirmata, maintains its traditional policy engine capabilities, these new policy types provide native Kubernetes integration by automatically converting to Kubernetes admission controllers – MutatingPolicy converts to MutatingAdmissionPolicy (MAP) and ValidatingPolicy converts to ValidatingAdmissionPolicy (VAP). This hybrid approach gives users the flexibility to choose between Kyverno’s rich policy engine features and native Kubernetes performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;MutatingPolicy: Flexible Resource Transformation&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The new MutatingPolicy type provides native Kubernetes integration through MutatingAdmissionPolicy, offering:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Full support for all functions that a mutate rule of a traditional policy supports&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Easier for each loop iteration with CEL’s map() and filter() functions&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Full support of advanced custom CEL libraries for complex policy logic&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CLI support for offline resources mutation in CI/CD pipelines&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Before &amp;amp; After: ClusterPolicy Mutate vs MutatingPolicy&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is an example of adding default labels to deployments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Previous ClusterPolicy approach:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: kyverno.io/v1&#xA;&#xA;kind: ClusterPolicy&#xA;&#xA;metadata:&#xA;&#xA;&amp;nbsp;&amp;nbsp;name: add-default-labels&#xA;&#xA;spec:&#xA;&#xA;&amp;nbsp;&amp;nbsp;rules:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- name: add-labels&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;match:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resources:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kinds:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Deployment&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mutate:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;patchStrategicMerge:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;metadata:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;labels:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;environment: &#34;production&#34;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;managed-by: &#34;kyverno&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;New &lt;code&gt;MutatingPolicy&lt;/code&gt; approach:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: policies.kyverno.io/v1alpha1&#xA;&#xA;kind: MutatingPolicy&#xA;&#xA;metadata:&#xA;&#xA;&amp;nbsp;&amp;nbsp;name: add-default-labels&#xA;&#xA;spec:&#xA;&#xA;&amp;nbsp;&amp;nbsp;mutations:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- patchType: ApplyConfiguration&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;applyConfiguration:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;expression: &amp;gt;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object{&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;metadata: Object.metadata{&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;labels: Object.metadata.labels{&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;environment: &#34;production&#34;,&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;managed-by: &#34;kyverno&#34;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&#xA;&#xA;&amp;nbsp;&amp;nbsp;matchConstraints:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resourceRules:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- apiGroups: [&#34;apps&#34;]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;apiVersions: [&#34;v1&#34;]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resources: [&#34;deployments&#34;]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;operations: [&#34;CREATE&#34;, &#34;UPDATE&#34;]&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;MutatingAdmissionPolicy Generation&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This release enhances policy flexibility with the ability to automatically generate Kubernetes &lt;code&gt;MutatingAdmissionPolicies&lt;/code&gt; from &lt;code&gt;MutatingPolicies&lt;/code&gt;, enabling mutations to be performed directly by the Kubernetes API server rather than the Kyverno admission controller. This capability improves performance and resilience by leveraging native Kubernetes mutation while maintaining the rich feature set and ease of use provided by Kyverno.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Comparison with MutatingAdmissionPolicy&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The table below compares major features across the Kubernetes &lt;code&gt;MutatingAdmissionPolicy&lt;/code&gt; and Kyverno &lt;code&gt;MutatingPolicy&lt;/code&gt; types.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;MutatingAdmissionPolicy&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;MutatingPolicy&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Enforcement&lt;/td&gt;&lt;td&gt;Admission&lt;/td&gt;&lt;td&gt;Admission, Background, Pipelines, …&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Payloads&lt;/td&gt;&lt;td&gt;Kubernetes&lt;/td&gt;&lt;td&gt;Kubernetes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Distribution&lt;/td&gt;&lt;td&gt;Kubernetes&lt;/td&gt;&lt;td&gt;Helm, CLI, Web Service, API, SDK&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CEL Library&lt;/td&gt;&lt;td&gt;Basic&lt;/td&gt;&lt;td&gt;Extended&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Bindings&lt;/td&gt;&lt;td&gt;Manual&lt;/td&gt;&lt;td&gt;Automatic&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Auto-generation&lt;/td&gt;&lt;td&gt;–&lt;/td&gt;&lt;td&gt;Pod Controllers, MutatingAdmissionPolicy&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;External Data&lt;/td&gt;&lt;td&gt;–&lt;/td&gt;&lt;td&gt;Kubernetes resources or API calls&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Caching&lt;/td&gt;&lt;td&gt;–&lt;/td&gt;&lt;td&gt;Global Context, image verification results&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Background scans&lt;/td&gt;&lt;td&gt;–&lt;/td&gt;&lt;td&gt;Periodic, On policy creation or change&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Exceptions&lt;/td&gt;&lt;td&gt;–&lt;/td&gt;&lt;td&gt;Fine-grained exceptions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Reporting&lt;/td&gt;&lt;td&gt;–&lt;/td&gt;&lt;td&gt;Policy WG Reports API&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Testing&lt;/td&gt;&lt;td&gt;–&lt;/td&gt;&lt;td&gt;Kyverno CLI (unit), Chainsaw (e2e)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Existing Resources&lt;/td&gt;&lt;td&gt;–&lt;/td&gt;&lt;td&gt;Background mutation support&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;GeneratingPolicy: Intelligent Resource Creation&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The new GeneratingPolicy type provides enhanced integration through CEL expressions, offering:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;CEL-First Approach&lt;/strong&gt;: Define generation logic using Common Expression Language for improved flexibility and expressiveness&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Enhanced Expressiveness&lt;/strong&gt;: Leverage CEL’s powerful functions for complex generation scenarios&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Kyverno CEL Libraries&lt;/strong&gt;: Access to Kyverno’s extensive custom CEL libraries for advanced resource manipulation and generation&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Built-in Looping Support: Native CEL looping capabilities for generating resources across multiple namespaces or items&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For example, the following policy automatically clones an image pull secret from the default namespace into any newly created Namespace:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: policies.kyverno.io/v1alpha1&#xA;&#xA;kind: GeneratingPolicy&#xA;&#xA;metadata:&#xA;&#xA;&amp;nbsp;&amp;nbsp;name: clone-image-pull-secret&#xA;&#xA;spec:&#xA;&#xA;&amp;nbsp;&amp;nbsp;matchConstraints:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resourceRules:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- apiGroups: &amp;nbsp; [“”]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;apiVersions: [“v1&#34;]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;operations:&amp;nbsp; [“CREATE”]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resources: &amp;nbsp; [“namespaces”]&#xA;&#xA;&amp;nbsp;&amp;nbsp;variables:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- name: targetNs&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;expression: “object.metadata.name”&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- name: sourceSecret&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;expression: resource.Get(“v1&#34;, “secrets”, “default”, “regcred”)&#xA;&#xA;&amp;nbsp;&amp;nbsp;generate:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- expression: generator.Apply(variables.targetNs, [variables.sourceSecret])&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This policy demonstrates how GeneratingPolicy provides the same core functionality as Kyverno’s generate rules, but with a CEL-first approach for improved flexibility and consistency with other Kyverno policy types.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;DeletingPolicy: Controlled Cleanup Made Easy&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As Kyverno evolves, managing the full lifecycle of Kubernetes resources through policies becomes essential. The new DeletingPolicy CRD empowers administrators to declaratively control how resources are cleaned up or cascaded when no longer needed. This complements existing Mutating and Validating policies by closing the resource lifecycle loop with safe, policy-driven deletion.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The DeletingPolicy provides the same functionality as the CleanupPolicy but it is designed to use CEL expressions for Kubernetes compatibility.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Unlike admission policies that react to API requests, DeletingPolicy:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Runs periodically at scheduled times&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Evaluates existing resources in the cluster&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Deletes resources when matching rules and conditions are satisfied&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s an example that automatically deletes old test pods:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: policies.kyverno.io/v1alpha1&#xA;&#xA;kind: DeletingPolicy&#xA;&#xA;metadata:&#xA;&#xA;&amp;nbsp;&amp;nbsp;name: cleanup-old-test-pods&#xA;&#xA;spec:&#xA;&#xA;&amp;nbsp;&amp;nbsp;schedule: &#34;0 1 * * *&#34;&amp;nbsp; # Run daily at 1 AM&#xA;&#xA;&amp;nbsp;&amp;nbsp;matchConstraints:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resourceRules:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- apiGroups: [&#34;&#34;]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;apiVersions: [&#34;v1&#34;]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;operations: [&#34;*&#34;]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resources: [&#34;pods&#34;]&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scope: &#34;Namespaced&#34;&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespaceSelector:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;matchLabels:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;environment: test&#xA;&#xA;&amp;nbsp;&amp;nbsp;conditions:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- name: isOld&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;expression: &#34;now() - object.metadata.creationTimestamp &amp;gt; duration(&#39;72h&#39;)&#34;&#xA;&#xA;&amp;nbsp;&amp;nbsp;variables:&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- name: isEphemeral&#xA;&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;expression: &#34;has(object.metadata.labels.ephemermal) &amp;amp;&amp;amp; object.metadata.labels.ephemeral == &#39;true&#39;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This policy automatically deletes pods that are:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Located in namespaces labeled &lt;code&gt;environment: test&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Are older than 72 hours&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Runs daily at 1 AM using a cron schedule&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Pod Security Standard(PSS) Policy Performance: ClusterPolicy vs ValidatingPolicy&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our performance testing reveals significant improvements when using ValidatingPolicy (vpol) over traditional ClusterPolicy (cpol) for Pod Security Standards (PSS) enforcement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;replicas&lt;/td&gt;&lt;td&gt;# policies&lt;/td&gt;&lt;td&gt;Rule Type&lt;/td&gt;&lt;td&gt;Mode&lt;/td&gt;&lt;td&gt;Subject&lt;/td&gt;&lt;td&gt;Virtual Users/Iterations&lt;/td&gt;&lt;td&gt;Latency (avg/max)&lt;/td&gt;&lt;td&gt;Memory (max)&lt;/td&gt;&lt;td&gt;CPU (max)&lt;/td&gt;&lt;td&gt;Memory Limit&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;Validate&lt;/td&gt;&lt;td&gt;Enforce&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;100/1,000&lt;/td&gt;&lt;td&gt;37.71ms / 110.53ms&lt;/td&gt;&lt;td&gt;152Mi&lt;/td&gt;&lt;td&gt;548m&lt;/td&gt;&lt;td&gt;384Mi (default)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;Validate&lt;/td&gt;&lt;td&gt;Enforce&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;200/5,000&lt;/td&gt;&lt;td&gt;80.74ms / 409.35ms&lt;/td&gt;&lt;td&gt;182Mi&lt;/td&gt;&lt;td&gt;2885m&lt;/td&gt;&lt;td&gt;384Mi (default)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;Validate&lt;/td&gt;&lt;td&gt;Enforce&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;500/10,000&lt;/td&gt;&lt;td&gt;92.73ms / 3.15s&lt;/td&gt;&lt;td&gt;143Mi&lt;/td&gt;&lt;td&gt;3033m&lt;/td&gt;&lt;td&gt;512Mi&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;Validate&lt;/td&gt;&lt;td&gt;Enforce&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;100/1,000&lt;/td&gt;&lt;td&gt;32.89ms / 121.19ms&lt;/td&gt;&lt;td&gt;104Mi&lt;/td&gt;&lt;td&gt;262m&lt;/td&gt;&lt;td&gt;384Mi (default)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;Validate&lt;/td&gt;&lt;td&gt;Enforce&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;200/5,000&lt;/td&gt;&lt;td&gt;60.06ms / 1.01s&lt;/td&gt;&lt;td&gt;117Mi&lt;/td&gt;&lt;td&gt;1067m&lt;/td&gt;&lt;td&gt;384Mi (default)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;Validate&lt;/td&gt;&lt;td&gt;Enforce&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;500/10,000&lt;/td&gt;&lt;td&gt;151.97ms / 3.17s&lt;/td&gt;&lt;td&gt;107Mi&lt;/td&gt;&lt;td&gt;1182m&lt;/td&gt;&lt;td&gt;512Mi&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;ValidatingPolicy&lt;/td&gt;&lt;td&gt;Deny&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;100/1,000&lt;/td&gt;&lt;td&gt;28.3ms / 108.36ms&lt;/td&gt;&lt;td&gt;142Mi&lt;/td&gt;&lt;td&gt;108m&lt;/td&gt;&lt;td&gt;384Mi (default)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;ValidatingPolicy&lt;/td&gt;&lt;td&gt;Deny&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;200/5,000&lt;/td&gt;&lt;td&gt;54.87ms / 346.74ms&lt;/td&gt;&lt;td&gt;211Mi&lt;/td&gt;&lt;td&gt;2339m&lt;/td&gt;&lt;td&gt;384Mi (default)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;ValidatingPolicy&lt;/td&gt;&lt;td&gt;Deny&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;500/10,000&lt;/td&gt;&lt;td&gt;133.67ms / 1.63s&lt;/td&gt;&lt;td&gt;163Mi&lt;/td&gt;&lt;td&gt;4123m&lt;/td&gt;&lt;td&gt;512Mi&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;ValidatingPolicy&lt;/td&gt;&lt;td&gt;Deny&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;100/1,000&lt;/td&gt;&lt;td&gt;24.87ms / 59.37ms&lt;/td&gt;&lt;td&gt;129Mi&lt;/td&gt;&lt;td&gt;135m&lt;/td&gt;&lt;td&gt;384Mi (default)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;ValidatingPolicy&lt;/td&gt;&lt;td&gt;Deny&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;200/5,000&lt;/td&gt;&lt;td&gt;45.97ms / 1.12s&lt;/td&gt;&lt;td&gt;159Mi&lt;/td&gt;&lt;td&gt;554m&lt;/td&gt;&lt;td&gt;384Mi (default)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;ValidatingPolicy&lt;/td&gt;&lt;td&gt;Deny&lt;/td&gt;&lt;td&gt;Pods&lt;/td&gt;&lt;td&gt;500/10,000&lt;/td&gt;&lt;td&gt;114.01ms / 3.28s&lt;/td&gt;&lt;td&gt;170Mi&lt;/td&gt;&lt;td&gt;810m&lt;/td&gt;&lt;td&gt;512Mi&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Key Performance Improvements&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Under Heavy Load (500/10,000 iterations):&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;44% faster latency&lt;/strong&gt; in single-replica deployments&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;59% less memory usage&lt;/strong&gt; in multi-replica deployments&amp;nbsp;&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;48% lower CPU consumption&lt;/strong&gt; in medium load scenarios&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Across All Load Conditions:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;25% average latency improvement&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Up to 80% CPU reduction&lt;/strong&gt; in single-replica deployments&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Consistent performance gains&lt;/strong&gt; under all tested scenarios&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Why It Matters&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ValidatingPolicy’s native Kubernetes integration delivers superior performance while maintaining the same security posture. The improvements are most pronounced under heavy load conditions, making it ideal for production environments with frequent policy enforcement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;For standard deployments&lt;/strong&gt;: Even in typical workloads, ValidatingPolicy shows 25% average latency improvement and up to 80% CPU reduction, providing immediate benefits for most Kubernetes environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;For large-scale clusters&lt;/strong&gt;: The performance gains scale significantly under heavy load, with 44% faster latency and 59% less memory usage, making it highly valuable for high-traffic production environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The performance gains translate directly to reduced infrastructure costs and improved cluster stability, providing a clear upgrade path from traditional ClusterPolicy implementations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;New OpenReports API Group Support&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.15 introduces support for the new OpenReports API group (&lt;code&gt;openreports.io&lt;/code&gt;) for PolicyReport resources. This standardization aligns with the broader Kubernetes policy ecosystem and provides a more robust foundation for policy reporting across the community.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;What’s New:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Kyverno: Now generates PolicyReports using the new API group&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Reports Server: Updated to consume and serve reports from the new API group&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Policy Reporter: Enhanced to visualize and manage reports from the new API group&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Migration Path: The legacy API group (wgpolicyk8s.io) will be deprecated in future releases. Users are encouraged to update their tooling and integrations to use the new API group for continued support and enhanced functionality.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Benefits:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Improved integration with the broader Kubernetes policy ecosystem&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Long-term support and community alignment&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Community &amp;amp; Contributions&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This release is a testament to our growing community. We continue to see more changes made by our open source community contributors—many of whom made their first Kyverno contribution in this cycle! We want to thank everyone who shared feedback, bug reports, and code contributions helping Kyverno thrive.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Upgrade with Helm:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm repo update&#xA;&#xA;helm upgrade kyverno kyverno/kyverno -n kyverno --version v1.15.0&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.15 remains fully backward compatible with existing ClusterPolicy resources. You can adopt new policy types at your own pace while continuing to benefit from your existing policies.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What’s Next?&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our roadmap continues with plans to:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Expand cross-cutting features like event logging and metrics&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Support namespaced versions of all CEL-based policy types&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Implement fine-grained policy exceptions for enhanced control&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Publish Kyverno engine API and SDK for broader ecosystem integration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.15.0 represents a major milestone in policy management, introducing three consequential new CEL-based policy types that provide enhanced integration while maintaining Kyverno’s rich feature set. With enhanced CLI capabilities, and a thriving contributor community, Kyverno is now more powerful, flexible, and user-friendly than ever before.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Explore the full release notes on GitHub, try the new features, and join our community to help shape the future of policy enforcement! For more details, visit &lt;a href=&#34;https://kyverno.io/&#34;&gt;kyverno.io&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thank you to everyone who contributed and supported this release. Together, we’re building a safer, more manageable ecosystem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;— The Kyverno Team&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; kyverno 1.15使Kubernetes政策管理更强大，可扩展和用户友好。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们很高兴地宣布发布Kyverno 1.15.0，继续我们的使命，以使Kubernetes环境中的政策管理更加模块化，表演和用户友好。该版本介绍了多种策略类型的新功能，增强了测试和CLI功能，并带来了充满活力的社区贡献的许多改进。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt; tl; dr &lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;与天然Kubernetes Integration的动态资源转换的新型突变体&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用CEL表达式创建智能资源创建和同步的新生成物质&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;用于控制Kubernetes资源的可控清理资源的新删除资源&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;高级CEL功能和增强的政策异常支持对细粒度控制&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;社区里程碑：超过850个更改与70多名贡献者合并，包括许多新手！&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-tearing”&gt; &lt;strong&gt;新策略类型&#xA;&#xA;&#xA;&#xA;&lt;p&gt;建立在以前版本的验证集中和图像效率的基础上，Kyverno 1.15介绍了三种新的基于CEL的政策类型，这些类型填写了我们的全面政策生态系统。尽管Nirmata创建的Kyverno保持其传统的策略引擎功能，但这些新政策类型通过自动转换为Kubernetes录取控制器（突变型物质转换为MutatingAdmissionPolicy（MAP）和验证PolicyPolicy PolickationPolicy的验证addaDADPOLICYPOLICY（VAP），这些新政策类型提供了本地Kubernetes集成。这种混合方法使用户可以灵活地在Kyverno丰富的政策引擎功能和本地Kubernetes Performance之间进行选择。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;新的突变类型类型通过stutatingAdmissionPolicy，提供：&lt;/p&gt;，提供了本地的kubernetes集成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;对传统政策的突变规则支持的所有功能的全力支持&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用CEL的MAP（）和Filter（）功能更容易为每个循环迭代&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;复杂策略逻辑的高级自定义CEL库的全面支持&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; CLI支持CI/CD管道中的离线资源突变&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class =“ wp-block头”&gt; &lt;strong&gt; &lt;strong&gt;：clusterpolicy突变与MutatingPolicy &lt;/strong&gt; &lt;/strong&gt; &lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是将默认标签添加到部署的示例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;先前的簇粉方法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：kyverno.io/v1&#xA;&#xA;种类：群集&#xA;&#xA;元数据：&#xA;&#xA;  名称：add-default-labels&#xA;&#xA;规格：&#xA;&#xA;  规则：&#xA;&#xA;     - 名称：添加标签&#xA;&#xA;      匹配：&#xA;&#xA;        资源：&#xA;&#xA;    和NBSP;     种类：&#xA;&#xA;             - 部署&#xA;&#xA;      突变：&#xA;&#xA;        PatchStrategicmerge：&#xA;&#xA;          元数据：&#xA;&#xA;            标签：&#xA;&#xA;              环境：“生产”&#xA;&#xA;              托管：“ kyverno” &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;新的&lt;code&gt;突变policy &lt;/code&gt;方法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：palicies.kyverno.io/v1alpha1&#xA;&#xA;善良：突变型&#xA;&#xA;元数据：&#xA;&#xA;  名称：add-default-labels&#xA;&#xA;规格：&#xA;&#xA;  突变：&#xA;&#xA;     -  PatchType：ApplyConfiguration&#xA;&#xA;      申请配置：&#xA;&#xA;        表达：&gt;&#xA;&#xA;          目的{&#xA;&#xA;            元数据：object.metadata {&#xA;&#xA;              标签：object.metadata.labels {&#xA;&#xA;                环境：“生产”，&#xA;&#xA;                管理：“ kyverno”&#xA;&#xA;              }&#xA;&#xA;            }&#xA;&#xA;          }&#xA;&#xA;  Matchconstraints：&#xA;&#xA;    资源：&#xA;&#xA;      -Apigroups：[“应用程序”]&#xA;&#xA;        apiversions：[“ V1”]&#xA;&#xA;        资源：[“部署”]&#xA;&#xA;        操作：[“创建”，“更新”] &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class =“ wp-block-heading”&gt; &lt;strong&gt; mutatingAdmission-policy oferent &lt;/strong&gt; &lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此版本可以从&lt;code&gt;突变polations &lt;/code&gt;中自动生成Kubernetes &lt;/code&gt; sutationAdmissionpolicies &lt;/code&gt; &lt;/code&gt;，从而增强了策略灵活性，从而使kubernetes api服务器直接执行突变，而不是养生控制者。这种能力通过利用本地Kubernetes突变来提高性能和韧性，同时保持富裕的功能集和易于使用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class =“ wp-block头”&gt; &lt;strong&gt;与MutatingAdmissionPolicy &lt;/strong&gt; &lt;/h4&gt;进行比较&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下表比较kubernetes上的主要功能&lt;code&gt; mutatingAdmission -policy &lt;/code&gt;和kyverno &lt;code&gt; mutatingpolicy &lt;/code&gt; types。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figie class =“ wp-block-table“&gt; &lt;表class =“固定的layout”&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;td&gt; &lt;strong&gt;功能&lt;/strong&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;stry&gt; mutatingAdmissignAdmatisspolicyPolicy &lt;/strong&gt; &lt;/strong&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;strong&gt; mutatingPolicyPolicyPolicyPolicyPolicyPolicy &lt;/strong&gt;背景，管道，…&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;有效负载&lt;/td&gt; &lt;td&gt; kubernetes &lt;/td&gt; &lt;td&gt; &lt;td&gt; kubernetes &lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;/td&gt; SDK &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; cel库&lt;/td&gt; &lt;td&gt;基本&lt;/td&gt; &lt;td&gt;扩展&lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; bindings &lt;/td&gt; &lt;/td&gt; &lt;td&gt;手动&lt;/td&gt; &lt;/td&gt; &lt;td&gt;自动&lt;/td&gt; &lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;td&gt; auto-generator突变admissiondermisspolicy &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;外部数据&lt;/td&gt; &lt;td&gt;  -  &lt;/td&gt; &lt;td&gt; &lt;td&gt; kubernetes资源或api调用&lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;tt&gt; caching &lt;/td&gt;扫描&lt;/td&gt; &lt;td&gt;  -  &lt;/td&gt; &lt;td&gt;周期性，在策略创建或更改&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;td&gt;异常Api &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;测试&lt;/td&gt; &lt;td&gt;  -  &lt;/td&gt; &lt;td&gt; &lt;td&gt; kyverno cli（单位），Chainsaw（e2e）&lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;ttd&gt;现有支持&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;新的GeneratingPolicy类型通过CEL表达式提供了增强的集成：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; cel-first方法&lt;/strong&gt;：使用通用表达语言来定义生成逻辑，以提高灵活性和表现力&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;增强的表现力&lt;/strong&gt;：利用CEL的强大功能用于复杂的生成场景&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; kyverno cel图书馆&lt;/strong&gt;：访问Kyverno的广泛的自定义CEL图书馆，用于高级资源操纵和一代&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;内置循环支持：本机CEL循环功能，用于在多个名称空间或项目上生成资源&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;例如，以下策略会自动克隆默认名称空间的图像拉动秘密到任何新创建的名称空间：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：palicies.kyverno.io/v1alpha1&#xA;&#xA;种类：生成policy&#xA;&#xA;元数据：&#xA;&#xA;  名称：克隆图像扣秘密&#xA;&#xA;规格：&#xA;&#xA;  Matchconstraints：&#xA;&#xA;    资源：&#xA;&#xA;    -Apigroups：[“”]&#xA;&#xA;      apiversions：[“ V1”]&#xA;&#xA;      操作：[“创建”]&#xA;&#xA;      资源：[“名称空间”]&#xA;&#xA;  变量：&#xA;&#xA;     - 名称：目标&#xA;&#xA;      表达式：“ object.metadata.name”&#xA;&#xA;     - 名称：sourcecret&#xA;&#xA;      表达式：resource.get（“ v1”，“ secrets”，“默认”，“ regcred”）&#xA;&#xA;  g活力：&#xA;&#xA;     - 表达式：generator.apply（variables.targetns，[variables.sourcesecret]）&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此策略演示了生成物质如何提供与Kyverno生成规则相同的核心功能，但是采用CEL-Instrif的方法来提高灵活性和与其他Kyverno策略类型的一致性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着Kyverno的发展，通过政策管理Kubernetes资源的完整生命周期变得至关重要。新的DeletingPolicy CRD使管理人员声明地控制了在不再需要时如何清理或级联的资源。通过安全，政策驱动的删除，通过结束资源生命周期循环来补充现有的突变和验证策略。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; deletingpolicy提供了与清洁纯素的功能相同的功能，但旨在将cel表达式用于kubernetes兼容性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与对API请求做出反应的录取策略不同，请删除Policy：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;定期在预定时间运行&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;评估集群中的现有资源&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;满足匹配的规则和条件时删除资源&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是一个自动删除旧测试吊舱的示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：palicies.kyverno.io/v1alpha1&#xA;&#xA;KIND：DELETINGPOLICY&#xA;&#xA;元数据：&#xA;&#xA;  名称：清理老测试纸&#xA;&#xA;规格：&#xA;&#xA;  时间表：“ 0 1 * * *”＃每天在凌晨1点运行&#xA;&#xA;  Matchconstraints：&#xA;&#xA;    资源：&#xA;&#xA;      -Apigroups：[“”]&#xA;&#xA;        apiversions：[“ V1”]&#xA;&#xA;        运营： [”*”]&#xA;&#xA;        资源：[“ Pods”]&#xA;&#xA;        范围：“名称”&#xA;&#xA;    namespaceselector：&#xA;&#xA;      MatchLabels：&#xA;&#xA;        环境：测试&#xA;&#xA;  状况：&#xA;&#xA;     - 名称：ISOLD&#xA;&#xA;      表达式：“ now（） -  object.metadata.creationtimestamp&gt;持续时间（&#39;72H&#39;）”&#xA;&#xA;  变量：&#xA;&#xA;     - 名称：Isephemeral&#xA;&#xA;      表达式：“ ake object.metadata.labels.ephemermal）&amp;&amp; object.metadata.labels.ephemeral ==&#39;true&#39;” &lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此策略会自动删除：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;位于标有&lt;code&gt;环境的名称空间中：test &lt;/code&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;年龄超过72小时&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用CRON时间表每天1点运行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的性能测试揭示了显着的进步使用验证台面（VPOL），而不是传统的粉尘层（CPOL）进行POD安全标准（PSS）执行时。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-table”&gt; &lt;table class =“ has-fixed-layout”&gt; &lt;tbody&gt; &lt;ttry&gt; &lt;tr&gt; &lt;td&gt; replicas &lt;/td&gt; &lt;td&gt; &lt;td&gt;＃policies &lt;/td&gt; &lt;td&gt; &lt;td&gt; rule type &lt;/td&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;/td&gt; mode &lt;/td&gt; mode &lt;/td&gt; officce &lt;td&gt; ofject &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; （avg/max）&lt;/td&gt; &lt;td&gt;内存（max）&lt;/td&gt; &lt;td&gt; cpu（max）&lt;/td&gt; &lt;td&gt;内存限制&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; 1 &lt;/td&gt; &lt;td&gt; 17 &lt;/td&gt; &lt;td&gt; validate &lt;/td&gt; &lt;td&gt; enforce &lt;/td&gt; emforce &lt;/td&gt; &lt;td&gt; pods &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; 100/1,000/1,000 &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; 37.71mms/ 110.53ms &lt;/td&gt; &lt;td&gt; 152mi &lt;/td&gt; &lt;td&gt; 548m &lt;/td&gt; &lt;td&gt; 384mi （默认）&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; 1 &lt;/td&gt; &lt;td&gt; 17 &lt;/td&gt; &lt;td&gt; validate &lt;/td&gt; &lt;td&gt; emforce &lt;/td&gt; 409.35ms &lt;/td&gt; &lt;td&gt; 182mi &lt;/td&gt; &lt;td&gt; 2885m &lt;/td&gt; &lt;td&gt; 384mi （默认）&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; 1 &lt;/td&gt; &lt;td&gt; 17 &lt;/td&gt; &lt;td&gt; validate &lt;/td&gt; &lt;td&gt; emforce &lt;/td&gt; 3.15S &lt;/td&gt; &lt;td&gt; 143mi &lt;/td&gt; &lt;td&gt; 3033m &lt;/td&gt; &lt;td&gt; 512mi &lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; 17 &lt; /td&gt; &lt;td&gt; validate&lt;/td&gt; &lt;td&gt; enforce&lt;/td&gt; &lt;td&gt; pods&lt;/td&gt; &lt;td&gt; &lt;td&gt; 1,000/1,000/&lt;td&gt; &lt;td&gt; &lt;td&gt; 32.89ms /121.19ms &lt;/td&gt; &lt;td&gt; 104mi &lt;/td&gt; &lt;td&gt; 262m &lt;/td&gt; &lt;td&gt; 384mi （默认）&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; 17 &lt;/td&gt; &lt;td&gt; validate &lt;/td&gt; &lt;td&gt; emforce &lt;/td&gt; 1.01S &lt;/td&gt; &lt;td&gt; 117mi &lt;/td&gt; &lt;td&gt; 1067m &lt;/td&gt; &lt;td&gt; 384mi （默认）&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; 17 &lt;/td&gt; &lt;td&gt; validate &lt;/td&gt; &lt;td&gt; emforce &lt;/td&gt; emforce &lt;/td&gt; &lt;td&gt; pods &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; 500/10,000/10,000 &lt;/td&gt; &lt;/td&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; 151.97MS/ 3.17S &lt;/td&gt; &lt;td&gt; 107mi &lt;/td&gt; &lt;td&gt; 1182m &lt;/td&gt; &lt;td&gt; 512mi &lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;td&gt; 1 &lt;/td&gt; 1 &lt;/td&gt; &lt;td&gt; &lt;td&gt; 16 &lt;/t d&gt; &lt;td&gt;验证policy &lt;/td&gt; &lt;td&gt; deny &lt;/td&gt; &lt;td&gt; pods &lt;/td&gt; &lt;td&gt; &lt;td&gt; 100/1,000 &lt;/td&gt; &lt;td&gt; &lt;td&gt; 28.3ms /108.36ms &lt;/td&gt; &lt;td&gt; 142mi &lt;/td&gt; &lt;td&gt; 108m &lt;/td&gt; &lt;td&gt; 384mi （默认）&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; 1 &lt;/td&gt; &lt;td&gt; 16 &lt;/td&gt; &lt;td&gt; 346.74ms &lt;/td&gt; &lt;td&gt; 211mi &lt;/td&gt; &lt;td&gt; 2339m &lt;/td&gt; &lt;td&gt; 384Mi （默认）&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; 1 &lt;/td&gt; &lt;td&gt; 16 &lt;/td&gt; &lt;td&gt;验证policypolicy &lt;/td&gt; &lt;td&gt; deny &lt;/td&gt; &lt;td&gt; &lt;td&gt; pods &lt;/td&gt; pods &lt;/td&gt; &lt;td&gt; &lt;td&gt; 500/td&gt; 500/td&gt; 500/td&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; 133.67mms/ 1.63S &lt;/td&gt; &lt;td&gt; 163mi &lt;/td&gt; &lt;td&gt; 4123M &lt;/td&gt; &lt;td&gt; 512mi &lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; 3 &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; 16 &lt;/td &gt; &lt;td&gt;验证policy &lt;/td&gt; &lt;td&gt; deny &lt;/td&gt; &lt;td&gt; pods &lt;/td&gt; &lt;td&gt; &lt;td&gt; 100/1,000 &lt;/td&gt; &lt;td&gt; &lt;td&gt; 24.87ms /59.37ms &lt;/td&gt; &lt;td&gt; 129mi &lt;/td&gt; &lt;td&gt; 135m &lt;/td&gt; &lt;td&gt; 384mi （默认）&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; 16 &lt;/td&gt; &lt;td&gt; 1.12S &lt;/td&gt; &lt;td&gt; 159mi &lt;/td&gt; &lt;td&gt; 554m &lt;/td&gt; &lt;td&gt; 384mi （默认）&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; 16 &lt;/td&gt; &lt;td&gt;验证policypolicy &lt;/td&gt; &lt;td&gt; deny &lt;/td&gt; &lt;td&gt; &lt;td&gt; pods &lt;/td&gt; pods &lt;/td&gt; &lt;td&gt; &lt;td&gt; 500/td&gt; 500/td&gt; 500/td&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; 114.01MMS/ 3.28S &lt;/td&gt; &lt;td&gt; 170mi &lt;/td&gt; &lt;td&gt; 810m &lt;/td&gt; &lt;td&gt; 512mi &lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/table&gt; &lt;/table&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;在重载（500/10,000迭代）下：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;单重复部署中的44％延迟&lt;/strong&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;少59％的内存使用&lt;/strong&gt;多弹药部署&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;在中等载荷方案中，CPU消耗&lt;/strong&gt; &lt;/li&gt; &lt;/strong&gt; &lt;/strong&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;在所有负载条件下：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list“&gt;&#xA;&lt;li&gt; &lt;strong&gt;平均延迟改善25％&lt;/strong&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;单重复部署中最多80％的CPU降低&lt;/strong&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;在所有测试的场景下均一稳定的性能提高&lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;为什么它很重要&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;验证Policy的本机Kubernetes集成提供了卓越的性能，同时保持相同的安全姿势。在重负荷条件下，这些改进最为明显，非常适合经常执行政策的生产环境。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;对于标准部署&lt;/strong&gt;：即使在典型的工作量中，验证的policy显示了25％的平均延迟提高和最高80％的CPU，为大多数Kubernetes环境提供了直接的好处。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;对于大型群集&lt;/strong&gt;：在重负荷下，性能显着增长，延迟速度更快44％，记忆使用量降低了59％，这对于高流量生产环境而言非常有价值。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;性能直接转化为降低的基础架构成本和提高集群稳定性，从传统的群集实现中提供了清晰的升级路径。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;新的OpenReports API组支持&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kyverno 1.15为策略报告资源提供了对新的OpenReports API组（&lt;code&gt; OpenReports.io &lt;/code&gt;）的支持。该标准化与更广泛的Kubernetes政策生态系统保持一致，并为整个社区的政策报告提供了更强大的基础。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;新事物：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; kyverno：现在使用新的API组生成策略报告&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;报告服务器：更新以消费并提供新API组的报告&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;策略记者：增强以可视化和管理新API组的报告&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;迁移路径：旧版API组（WGPOLICYK8S.IO）将在以后的版本中被弃用。鼓励用户更新其工具和集成，以使用新的API组继续支持和增强功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;好处：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;改善了与更广泛的Kubernetes政策生态系统的整合&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;长期支持和社区一致性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;社区和贡献&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此版本证明了我们不断增长的社区。我们继续看到开源社区贡献者做出的更多变化 - 许多人在这个周期中做出了第一个kyverno的贡献！我们要感谢所有分享反馈，错误报告和代码贡献帮助Kyverno Thrive Thrive的人。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;入门&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用掌舵升级：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; helm repo更新&#xA;&#xA;Helm升级kyverno kyverno/kyverno -n kyverno -version v1.15.0 &lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&lt;p&gt; kyverno 1.15保持与现有的群集资源完全兼容。您可以按照自己的速度采用新的政策类型，同时继续从现有的政策中受益。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;下一步是什么？&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的路线图继续进行：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;扩展横切功能，例如事件记录和指标&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;支持所有基于CEL的策略类型的名称版本&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;实施增强控制的细粒政策例外&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;发布Kyverno Engine API和SDK，以进行更广泛的生态系统集成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;结论&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kyverno 1.15.0代表了政策管理中的一个主要里程碑，引入了三种基于CEL的新型政策类型，它们提供了增强的集成，同时保持Kyverno的丰富功能集。 Kyverno具有增强的CLI功能和蓬勃发展的贡献者社区，现在比以往任何时候都更加强大，灵活和用户友好。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;探索Github上的完整发行说明，尝试新功能，并加入我们的社区，以帮助塑造政策执法的未来！有关更多详细信息，请访问&lt;a href =“ https://kyverno.io/”&gt; kyverno.io &lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢所有贡献并支持此版本的人。一起，我们正在建立一个更安全，更可管理的生态系统。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;  -  kyverno团队&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Fri, 29 Aug 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Signal in the Storm: Why Chasing More Data Misses the Point】风暴中的信号：为什么追逐更多的数据错过了重点</title>
      <link>https://www.cncf.io/blog/2025/08/29/the-signal-in-the-storm-why-chasing-more-data-misses-the-point/</link>
      <description>【&lt;p&gt;As OpenTelemetry adoption has exploded, so has the volume of telemetry data moving through modern observability pipelines. But despite collecting more logs, metrics, and traces than ever before, teams are still struggling to answer the most basic questions during incidents: &lt;em&gt;What broke? Where? And why?&lt;/em&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In my recent talk at OpenTelemetry Community Day, &lt;em&gt;“&lt;/em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Gy38gx-7phA&#34;&gt;&lt;em&gt;T&lt;/em&gt;&lt;em&gt;he Signal in the Storm: Practical Strategies for Managing Telemetry Overload&lt;/em&gt;&lt;/a&gt;&lt;em&gt;,”&lt;/em&gt; I laid out a different path forward, one focused not on volume, but on meaning.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;More telemetry doesn’t guarantee more understanding. In many cases, it gives you the illusion of control while silently eroding your ability to reason about the system. That illusion becomes expensive, especially when telemetry pipelines are optimized for ingestion, not insight.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Observability Needs a Better Model&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Traditional observability relies on emitting and aggregating raw signals (spans, logs, and metrics), then querying across that pile post-hoc. That model assumes the data will be useful &lt;em&gt;after&lt;/em&gt; something goes wrong. But today’s distributed, dynamic, multi-tenant AI-driven systems don’t give you that luxury. The&lt;a href=&#34;https://www.causely.ai/blog/be-smarter-about-observability-data&#34;&gt; cost of collecting all raw signals&lt;/a&gt; without semantics and without context is too high.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We need a shift: from streams of telemetry to structured, semantic representations of how systems behave. That starts by modeling the actual components of the system (entities) and the relationships between them. Not as metadata bolted onto spans, but as first-class signals. This is the work being advanced by the&lt;a href=&#34;https://github.com/open-telemetry/community#special-interest-groups&#34;&gt; OpenTelemetry Entities SIG&lt;/a&gt;, and it’s central to how we think about observability at&lt;a href=&#34;https://www.causely.ai/&#34;&gt; Causely&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What It Looks Like in Practice&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At Causely, we’ve been applying these ideas in production. We observe system behavior, and instead of centralizing all that raw output, we extract anomalies in the context of semantic entities and relationship graphs at the edge. This gives us fine-grained insight without overwhelming the pipeline.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The impact is real:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Less data, more clarity&lt;/strong&gt;: structured signals replace noisy aggregates&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Better performance and cost-efficiency&lt;/strong&gt;: telemetry becomes lean and targeted&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Stronger privacy&lt;/strong&gt;: raw, user-level data never needs to leave the cluster&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Faster debugging&lt;/strong&gt;: understanding is built-in, not reverse-engineered&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The goal isn’t to eliminate data; it’s to &lt;strong&gt;collect with intent&lt;/strong&gt;. To make the system itself understandable, not just observable.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Watch the Talk&lt;/strong&gt;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the session, I go deep into what this looks like technically, including:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;How teams are adapting their telemetry strategies to manage scale and cost&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The role of entities, ontologies, and semantic modeling in modern observability&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Why centralized data lakes aren’t a sustainable long-term answer&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;What we’ve learned building systems that can reason about their own behavior&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’ve felt the limits of traditional observability, and you’re looking for a more scalable, reliable, and thoughtful path forward, I hope you’ll check it out.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Watch the recording: &lt;/strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Gy38gx-7phA&#34;&gt;https://www.youtube.com/watch?v=Gy38gx-7phA&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;See the slides:&lt;/strong&gt; &lt;a href=&#34;https://static.sched.com/hosted_files/otelopenobservabilityna25/75/signal-in-storm-observabilitysummit-2025.pptx&#34;&gt;https://static.sched.com/hosted_files/otelopenobservabilityna25/75/signal-in-storm-observabilitysummit-2025.pptx&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;随着OpentElemetry的采用率爆炸了，遥测数据的数量也在现代可观察性管道中移动。但是，尽管收集了比以往更多的日志，指标和痕迹，但团队仍在努力回答事件中最基本的问题：&lt;em&gt;什么破裂了？在哪里？为什么？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在我最近在Opentelemetry社区日的演讲中，&lt;em&gt;“ &lt;/em&gt;”向前，一个专注于音量，而是含义。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;更多的遥测不能保证更多的理解。在许多情况下，它给您控制的幻想，同时默默地侵蚀了您对系统推理的能力。这种幻想变得昂贵，尤其是当遥测管道优化以摄入而不是洞察力时。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;可观察性需要更好的模型&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;传统的可观察性依赖于发射和汇总的原始信号（跨度，日志和指标），然后在事后查询。该模型假设数据将是有用的&lt;em&gt; &lt;/em&gt;出现问题。但是，今天的分布式，动态的，多租户的AI驱动系统并不能为您提供这种奢侈品。 &lt;a href =“ https://www.causely.ai/blog/be-smarter-about-observability-data”&gt;收集所有原始信号的成本&lt;/a&gt;没有语义，没有上下文的情况太高。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们需要转变：从遥测流到系统行为方式的结构化语义表示。首先要建模系统（实体）的实际组件及其之间的关系。元数据不是螺栓固定在跨度上，而是一流的信号。这是由&lt;a href =“ https://github.com/open-telemetry/community#special-interest-groups”&gt; opentelemetry实体sig &lt;/a&gt;所提出的，这对于我们在&lt;&lt;ahref =“ href =” href =“ href =” href =“ href =” href =“ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;实践中的外观&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在Causely，我们一直在生产中应用这些想法。我们观察到系统行为，而不是集中所有原始输出，而是在语义实体和边缘的关系图的背景下提取异常。这为我们提供了细粒度的见解，而不会压倒管道。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;影响是真实的：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;较少的数据，更多的清晰度&lt;/strong&gt;：结构化信号替换噪声骨料&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;更好的性能和成本效益&lt;/strong&gt;：遥测变得精益而有针对性&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;更强的隐私&lt;/strong&gt;：RAW，用户级数据不需要离开群集&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;更快的调试&lt;/strong&gt;：理解是内置的，不是反向工程的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;目标不是消除数据；是&lt;strong&gt;意图&lt;/strong&gt;收集。为了使系统本身可以理解，而不仅仅是可观察到的。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;观看谈话&lt;/strong&gt;：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在会话中，我深入研究了技术的样子，包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;团队如何调整其遥测策略来管理规模和成本&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;实体，本体和语义建模在现代可观察性中的作用&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;为什么集中数据湖不是可持续的长期答案&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;我们学到的建筑系统可以推论自己的行为&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您感受到了传统可观察性的限制，并且正在寻找更可扩展，可靠和周到的前进道路，我希望您能检查一下。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;观看录音：&lt;/strong&gt; &lt;a href =“ https://www.youtube.com/watch?v=gy38gx-7pha”&gt; https://www.youtube.com/watch?v=gy38gx-7pha &lt;/a&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;请参阅幻灯片：&lt;/strong&gt; &lt;a href =“ https://static.sched.com/hosted_files/otelopenobservabilityna25/75/signal-in-signal-in-storm-observibalietysummit-2025.pptx”&gt; https://static.sched.com/hosted_files/otelopenobserviabilityna25/75/signal-in-signal-in-storm-observibalietysummit-2025.pptx &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 28 Aug 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Building a Scalable, Flexible, Cloud-Native GenAI Platform with Open Source Solutions】使用开源解决方案构建可扩展，灵活的云原生genai平台</title>
      <link>https://www.cncf.io/blog/2025/08/28/building-a-scalable-flexible-cloud-native-genai-platform-with-open-source-solutions/</link>
      <description>【&lt;p&gt;AI workloads are complex, and unmanaged complexity kills velocity. Your architecture is the key to mastering it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As generative AI (GenAI) becomes foundational to modern software products, developers face a chaotic new reality, juggling different APIs from various providers while also attempting to deploy self-hosted open-source models. This leads to credential sprawl, inconsistent security policies, runaway costs, and an infrastructure that is difficult to scale and govern.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Your architecture doesn’t have to be this complex.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Platform engineering teams need a secure, scalable way to serve both internal and external LLMs to their users. That’s where tools such as &lt;a href=&#34;https://aigateway.envoyproxy.io/&#34;&gt;Envoy AI Gateway&lt;/a&gt; come in.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This reference architecture outlines how to build a flexible GenAI platform using the open source solutions Envoy AI Gateway, KServe, and complementary tools. Whether you’re self-hosting models or integrating with model-serving services on cloud providers, such as OpenAI and Anthropic, this architecture enables a unified, governable interface for LLM traffic.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Core Architecture: Two-Tier Gateway Design&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#core-architecture-two-tier-gateway-design&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The foundation of this platform is a Two-Tier Gateway Architecture:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Tier One Gateway&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#tier-one-gateway&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Deployed in a centralized Gateway Cluster. It serves as the main API traffic entry point for client applications.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Its Job:&lt;/strong&gt; To route traffic to external LLM providers (e.g., OpenAI, Anthropic, Bedrock, Vertex) or to the appropriate internal gateway to access an internal model-serving cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Why It Matters:&lt;/strong&gt; This gateway provides a unified API for all application developers. They don’t need to know or care if a model is hosted by a third party or in-house. It centralizes coarse-grained policies, such as authentication, top-level routing, and global rate limiting, simplifying the developer experience and providing a single control point for platform-wide governance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Tier Two Gateway&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#tier-two-gateway&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Deployed as part of a self-hosted model serving cluster&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Its Job:&lt;/strong&gt; To handle internal traffic routing, load balancing, and policy enforcement specific to self-hosted models running on platforms like KServe.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Why It Matters:&lt;/strong&gt; This empowers platform teams. They can manage model versions, conduct releases, and apply specific security rules for self-hosted models without needing to make changes to the primary, customer-facing gateway. This separation ensures that internal operational changes don’t impact external clients.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Design Benefits&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#design-benefits&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This design cleanly separates external access from internal implementation, giving teams the autonomy they need to move fast without breaking things, and provides:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Centralized credential management&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Unified API access&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Cost tracking and traffic governance&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf04V2__Gj50sGmCHCWMN6ur5NV7Cs8XHPqMn1D4D5I43crRUSixpaaQthIOyx5r6qp5gKmAPe87U4S-jFZVlLklCqycA0CV2FfXzCTwbhtW7Aal5_BXKGaQHrO4Y4X5KlroRDeKw?key=55BEAzL15Do3_AoyMRuJUQ&#34; alt=&#34;Tier 1 Envoy AI Gateway Graphic&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Routing and Traffic Management&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#routing-and-traffic-management&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Envoy AI Gateway provides a consistent client interface and abstracts the complexity of accessing diverse GenAI backends. It supports:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Problem&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Upstream Authentication with Credential Injection&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Application developers must manage, store, and rotate API keys for multiple external LLM providers. This is a security risk and an operational burden that slows down development.&lt;/td&gt;&lt;td&gt;The gateway injects the correct credentials per provider. Developers can make requests to the gateway using a single, internal authentication token, and the gateway handles attaching the appropriate third-party API key. &lt;strong&gt;This decouples applications from external secrets, dramatically improving security and simplifying code.&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Token-Based Rate Limiting and Cost Optimization&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;A single buggy script or a new feature can lead to unexpected spikes in usage, resulting in huge bills from LLM providers or overwhelming your self-hosted infrastructure.&lt;/td&gt;&lt;td&gt;The gateway acts as an intelligent financial and operational circuit breaker. You can enforce policies based on token usage, requests, or estimated cost. &lt;strong&gt;This prevents abuse and ensures that you stay within budget, providing critical protection for the business.&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Observability Hooks for Usage Patterns and Latency&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;When you use multiple model providers, it’s nearly impossible to get a clear picture of usage. Which teams are spending the most? Which models have the highest latency? How many tokens is our new feature consuming?&lt;/td&gt;&lt;td&gt;By routing all traffic through a single point, the gateway provides a unified source of truth and built-in support for metrics, logs, and traces tailored for GenAI workloads. &lt;strong&gt;This enables you to accurately track costs, identify performance bottlenecks, and understand usage patterns across your entire GenAI stack.&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;tip&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Clients simply hit a single endpoint and let the Gateway handle routing to the appropriate backend—self-hosted or third-party.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Self-Hosted Model Serving with KServe&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#self-hosted-model-serving-with-kserve&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While many organizations start with external providers, self-hosting models offer advantages in terms of cost, privacy, and customization. If you are self-hosting models, KServe is a powerful addition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For many data scientists and ML engineers, turning a trained model into a production-ready API is a major hurdle that requires deep expertise in Kubernetes, networking, and infrastructure. KServe bridges this gap and eliminates the complexity. KServe is a model serving platform that automates the heavy lifting, allowing an engineer to simply provide a configuration file for their model while KServe builds the scalable, resilient API endpoint.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;A few highlights of what KServe provides:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Autoscaling (including token-based autoscaling for LLMs and scale-to-zero for GPUs)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Multi-node inference (via vLLM)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Support for OpenAI-compatible APIs and advanced runtime integrations (vLLM)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Built-in support for model and prompt caching&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://kserve.github.io/website/latest/&#34;&gt;KServe Documentation&lt;/a&gt; to learn more about all the capabilities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Use tools like Backstage to simplify model deployment and namespace management for teams.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Info&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Self-hosting is optional. Many adopters will initially rely on external providers and add internal hosting as requirements evolve.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcivyEQpovIBsvn0WhCKqRcv7y6BA0JjTFIZ94t_rwRADwOuKV7H7dOxPkBHrPr7Lt8L333FHe0b0aFKIHmZMCKHiny4T20OqoikyRmi-wHpAdFY_026JOuaGypout5E0hyvIKYyA?key=55BEAzL15Do3_AoyMRuJUQ&#34; alt=&#34;Envoy API gateway graphic&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Observability, Control, and Optimization for Production Readiness&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#observability-control-and-optimization-for-production-readiness&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In a production GenAI platform environment, observability, control, and optimization become must-haves. Envoy AI Gateway and KServe offer integrations that cater to these needs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Observability&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#observability&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Achieving visibility into your system enables the identification of bottlenecks, effective cost management, and ensures model reliability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Unified Metrics and Tracing:&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Envoy AI Gateway integrates seamlessly with &lt;strong&gt;OpenTelemetry&lt;/strong&gt;, adhering to the GenAI Semantic Conventions. This delivers a unified view of requests, latency, token usage, and errors across all external and internal models.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Leverage specialized telemetry, like &lt;strong&gt;OpenLLMetry&lt;/strong&gt;, for granular insights into LLM-specific metrics, ensuring you capture essential details like prompt and completion lengths, token throughput, and model-specific performance.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Centralized Logging:&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Centralize logging across providers through Envoy AI Gateway, facilitating easier debugging, auditing, and compliance.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Control&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#control&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Enforcing policies and controls ensures your platform remains secure, stable, and cost-effective:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Policy Enforcement and Guardrails:&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Set usage-based guardrails directly in Envoy AI Gateway to prevent cost overruns, enforce compliance, and safeguard against prompt misuse or model hallucination.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Implement safety checks and output validation rules that enable your team to control quality and compliance centrally, rather than embedding these checks individually within applications.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Optimization&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#optimization&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Maximizing the efficiency and responsiveness of your models can significantly enhance user experience and operational efficiency:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Caching Strategies:&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;KServe’s &lt;strong&gt;model caching&lt;/strong&gt; further optimizes inference, significantly lowering response times and improving model utilization.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Disaggregated Serving:&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Optimize hardware resources by leveraging KServe’s support for &lt;strong&gt;disaggregated inference&lt;/strong&gt;, which enables the separate management of compute-intensive inference stages and memory-intensive operations, thereby maximizing hardware efficiency and reducing costs.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;info&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Be sure to review the documentation for each project to learn more about preparing your setup for production.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Pluggable and Flexible&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#pluggable-and-flexible&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is not a rigid, all-or-nothing platform. It’s a set of foundational components you can adopt and extend to fit your unique environment. This architecture works whether you’re fully committed to Kubernetes or using a hybrid cloud.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;You can:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Start with externally hosted LLMs or self-hosted inference&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use Envoy AI Gateway with any compatible provider via a unified API&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Add your own authorization logic and/or custom functionality via Envoy’s extension filters&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Deploy your Gateways in different clusters and cloud providers, giving you flexibility of choice in hosting environments&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is not a rigid platform. It’s a foundational component you can build on and extend.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#summary&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Envoy AI Gateway reference architecture gives platform teams a guide to:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Centralize access to GenAI models with a unified API&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Enforce consistent traffic and security policies across model providers&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Support both internal and external LLM usage without refactoring client applications&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Scale safely and cost-effectively without reinventing core infrastructure&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Envoy AI Gateway sits at the heart of this design, an intelligent, extensible control point for all your GenAI traffic.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; AI工作负载很复杂，不受管理的复杂性杀死了速度。您的体系结构是掌握它的关键。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;作为生成AI（Genai）成为现代软件产品的基础，开发人员将面临混乱的新现实，兼顾各种提供商的不同API，同时也试图部署自托管的开源模型。这导致凭证蔓延，不一致的安全策略，失控成本以及难以扩展和管理的基础架构。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;您的体系结构不必这么复杂。&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;平台工程团队需要一种安全，可扩展的方式，以为其用户提供内部和外部LLM。那就是&lt;a href =“ https://aigateway.envoyproxy.io/”等工具的地方。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此参考体系结构概述了如何使用开源解决方案Envoy AI Gateway，Kserve和补充工具来构建灵活的Genai平台。无论您是自我托管模型还是与云提供商（例如OpenAI和Anthropic）上的模型服务服务集成，此体系结构可为LLM流量提供一个统一的，可管理的接口。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block-heading”&gt; &lt;strong&gt;核心体系结构：两层网关设计&lt;/strong&gt; &lt;a href =“ https://aigateway.envoyproxy.io/blog#core-achitection-two-two-two-two-tier-tier-tier-tier-tier-gateway-design-design&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该平台的基础是两层网关体系结构：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block-heading”&gt; &lt;strong&gt;层One Gateway &lt;/strong&gt; &lt;a href =“ https://aigateway.envoyproxy.io/blog#tier-one-negateway&gt; &lt;strong&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;部署在集中式网关群集中。它是客户端应用程序的主要API流量入口点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;其工作：&lt;/strong&gt;将流量路由到外部LLM提供商（例如OpenAI，人类，基岩，顶点）或适当的内部网关以访问内部模型服务集群。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;为什么重要的是：&lt;/strong&gt;该网关为所有应用程序开发人员提供统一的API。他们不需要知道或关心模型是由第三方还是内部托管的。它集中了诸如身份验证，顶级路由和全球利率限制之类的粗粒策略，简化了开发人员的体验并为范围范围的治理提供了一个控制点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block-heading”&gt; &lt;strong&gt; tier tier tier tier tier &lt;/strong&gt; &lt;a href =“ https://aigateway.envoyproxy.io/blog#tier-two-gateway”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;部署为服务集群的自托模型的一部分&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;其工作：&lt;/strong&gt;处理内部流量路由，负载平衡以及特定于在Kserve等平台上运行的自托模型的政策执行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;为什么重要的是：&lt;/strong&gt;这使平台团队能力。他们可以管理模型版本，进行发行并应用特定的安全规则丁，更改针对客户的主要网关。这种分离确保了内部操作变化不会影响外部客户。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block-heading”&gt; &lt;strong&gt;设计好处&lt;/strong&gt; &lt;a href =“ https://aigateway.envoyproxy.io/blog#design-benefits&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种设计将外部访问与内部实现分开，为团队提供了他们在不破坏事物的情况下快速移动所需的自主权，并提供：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;集中凭证管理&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;统一的API访问&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;成本跟踪和交通治理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxf04v2__gj50sgmchcwmn6ur5nv7cs8xhpqmn1d41d4d4d5i43crrusixpaaq thioyx5r6qp5gkmape87u4s-jfzvllklcqyca0cv2ffxzctwbhtw7aal5_bxkgaqhro4y4x5klrordekw？ Alt =“ Tier 1 Envoy AI Gateway Graphic” reverrerPolicy =“ no-treferrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Envoy AI网关提供了一个一致的客户界面，并抽象了访问多种Genai后端的复杂性。它支持：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-table”&gt; &lt;table class =“ has-fixed-layout”&gt; &lt;tbody&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;td&gt; &lt;strong&gt;功能&lt;/strong&gt; &lt;/strong&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;std&gt; &lt;strong&gt;问题注射&lt;/strong&gt; &lt;/td&gt; &lt;td&gt;应用程序开发人员必须为多个外部LLM提供商管理，存储和旋转API键。这是一个安全风险和运营负担减慢了开发。&lt;/td&gt; &lt;td&gt;网关注入每个提供商的正确凭据。开发人员可以使用单个内部身份验证令牌向网关提出请求，并且网关处理附加了适当的第三方API键。 &lt;strong&gt;这将应用程序与外部秘密脱离，极大地提高了安全性并简化了代码。&lt;/strong&gt; &lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;td&gt; &lt;td&gt; &lt;std&gt; &lt;strong&gt;基于代币的速率限制和成本优化&lt;/strong&gt; &lt;/strong&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;/tdd&gt; &lt;td&gt;单个货运脚本或新功能会导致在用户中出现意外的自我范围或供应范围。基础架构。&lt;/td&gt; &lt;td&gt;网关充当智能财务和运营断路器。您可以根据令牌使用，请求或估计成本执行政策。 &lt;strong&gt;这可以防止滥用，并确保您保持预算范围内，为业务提供关键的保护。&lt;/strong&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;td&gt; &lt;std&gt; &lt;strong&gt;使用模式的可观察性挂钩和延迟&lt;/strong&gt; &lt;/strong&gt; &lt;/td&gt; &lt;td&gt;当您使用多个模型提供者时，几乎不可能获得清晰的用途图片。哪些团队花费最多？哪些型号的延迟最高？我们的新功能消耗了多少个令牌？&lt;/td&gt; &lt;td&gt;通过路由所有通过单点的流量，网关为指标，日志和针对Genai工作负载量身定制的指标，日志和轨迹提供了统一的真理来源和内置支持。 &lt;strong&gt;这使您能够准确跟踪成本，确定性能瓶颈并了解整个Genai堆栈中的使用模式。&lt;/strong&gt; &lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/table&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;提示&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;客户只需击中一个端点，然后让网关将路由路由到适当的后端 - 托管或第三方。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block-heading”&gt; &lt;strong&gt; kserve &lt;/strong&gt; &lt;a href =“ https://aigateway.envoyproxy.io/blog#selp-host-host-host-host-model-model-serving-with-with-kserve-with-kserve-&#xA;&#xA;&#xA;&#xA;&lt;p&gt;尽管许多组织从外部提供商开始，但自托管模型在成本，隐私和自定义方面提供了优势。如果您是自我托管模型，Kserve是一个有力的补充。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于许多数据科学家和ML工程师而言，将受过训练的模型变成准备生产的API是一个主要障碍，需要在Kubernetes，网络和基础架构方面进行深厚的专业知识。 kserve桥这一差距并消除了复杂性。 Kserve是一个模型服务平台，可自动化繁重的举重，使工程师可以简单地为其模型提供配置文件，而Kserve则构建可扩展的弹性API端点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; Kserve提供的一些亮点：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;自动化（包括基于令牌的LLMS自动化和GPU的比例到零）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;多节点推理（通过VLLM）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;支持与OpenAI兼容的API和高级运行时集成（VLLM）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;内置支持模型和提示缓存&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;查看&lt;a href =“ https://kserve.github.io/website/latest/”&gt; kserve文档&lt;/a&gt;以了解有关所有功能的更多信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用后台诸如团队的模型部署和命名空间管理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;信息&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自我托管是可选的。许多采用者最初将依靠外部提供商并随着需求而添加内部托管。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxcivyeqpovibsvn0wh0whckqrcv7y6ba0jjjtfiz944t_rwradwoukv7h7h7dox PKBHRPR7LT8L333FHE0B0AFKIHMZMCKHINY4T20OQOIKYRMI-WHPADFY_026JOUAGYPOUT5E0HYVIKYYA？ alt =“ Envoy Api Gateway Graphic” reverrerpolicy =“ no-treferrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Observability, Control, and Optimization for Production Readiness&lt;/strong&gt;&lt;a href=&#34;https://aigateway.envoyproxy.io/blog#observability-control-and-optimization-for-production-readiness&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在生产Genai平台环境中，可观察性，控制和优化离子成为必不可少的。 Envoy AI Gateway和Kserve提供满足这些需求的集成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block-heading”&gt; &lt;strong&gt;可观察性&lt;/strong&gt; &lt;a href =“ https://aigateway.envoyproxy.io/blog#observisials”&gt; &lt;strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/a&gt; &lt;/a&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;实现对系统的可见性，可以识别瓶颈，有效的成本管理并确保模型可靠性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;统一指标和追踪：&lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; Eyboy AI Gateway与&lt;strong&gt; OpentElemetry &lt;/strong&gt;无缝集成，并遵守Genai语义惯例。这为所有外部和内部模型中的请求，延迟，令牌使用和错误提供了统一的视图。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;利用专门的遥测，例如&lt;strong&gt; OpenLlmetry &lt;/strong&gt;，用于对LLM特异性指标的颗粒状见解，确保您捕获基本细节，例如及时和完成长度，代币吞吐量和模型特定的性能。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;集中记录：&lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;通过Envoy AI Gateway集中登录提供商，促进更轻松的调试，审计和合规性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block-heading”&gt; &lt;strong&gt;控制&lt;/strong&gt; &lt;a href =“ https://aigateway.envoyproxy.io/blog#control”&gt; &lt;strong&gt; &lt;strong&gt; &lt;/strong&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;执行策略和控件可确保您的平台保持安全，稳定和成本效益：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;政策执行和护栏：&lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;直接在Envoy AI网关中设置基于用法的护栏，以防止成本超支，执行合规性和保护迅速滥用或模型幻觉。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;实施安全检查和输出验证规则，使您的团队能够集中控制质量和合规性，而不是将这些检查分别嵌入应用程序中。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block-heading”&gt; &lt;strong&gt;优化&lt;/strong&gt; &lt;a href =“ https://aigateway.envoyproxy.io/blog#optimization”&gt; &lt;strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/a&gt; &lt;/a&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最大化模型的效率和响应能力可以显着提高用户体验和操作效率：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;缓存策略：&lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; kserve的&lt;strong&gt;模型缓存&lt;/strong&gt;进一步优化了推理，大大降低了响应时间并改善了模型利用率。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;分解服务：&lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;通过利用Kserve对&lt;strong&gt;分类推理的支持来优化硬件资源，该推理可以单独管理计算密集型推理阶段和内存密集型操作，从而最大程度地提高硬件效率和降低成本。&lt;/li&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;信息&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一定要查看每个项目的文档o了解有关准备生产的设置的更多信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block-heading”&gt; &lt;strong&gt;可插入且灵活&lt;/strong&gt; &lt;a href =“ https://aigateway.envoyproxy.io/blog#pluggable-and-pluggable-and-flegable-and-flexible--flexible”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这不是一个僵化的，全或全无的平台。这是您可以采用并扩展以适合您独特环境的一组基础组件。无论您是完全致力于Kubernetes还是使用混合云。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;您可以：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;从外部托管的LLM或自主推理开始&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;通过统一的API &lt;/li&gt;，将Envoy AI网关与任何兼容的提供商一起使用&#xA;&#xA;&#xA;&#xA;&lt;li&gt;通过Envoy的扩展过滤器添加您自己的授权逻辑和/或自定义功能&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将网关部署在不同的群集和云提供商中，为您在托管环境中的首选灵活性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这不是一个僵化的平台。这是您可以建立并扩展的基础组件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block-heading”&gt; &lt;strong&gt;摘要&lt;/strong&gt; &lt;a href =“ https://aigateway.envoyproxy.io/blog#summary”&gt; &lt;strong&gt; &lt;strong&gt; &lt;/strong&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;特使AI网关参考体系结构为平台团队提供了指南：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;以统一的API &lt;/li&gt;集中化对Genai模型的访问&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在模型提供商中执行一致的流量和安全策略&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;支持内部和外部LLM使用情况，而无需重构客户端应用程序&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;安全和成本效益的规模而不重新发明核心基础架构&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Envoy AI网关位于该设计的核心，这是您所有Genai交通的智能，可扩展的控制点。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 27 Aug 2025 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>