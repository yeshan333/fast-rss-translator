<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://rsshub.rssforever.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【CNCF and Synadia align on securing the future of the NATS.io project】CNCF和Synadia一致确保Nats.io项目的未来</title>
      <link>https://www.cncf.io/blog/2025/05/01/cncf-and-synadia-align-on-securing-the-future-of-the-nats-io-project-2/</link>
      <description>【&lt;p&gt;CNCF and Synadia have come to an agreement to ensure that NATS continues to thrive as a healthy open source project within CNCF, with Synadia’s continued support and involvement. Please see our &lt;a href=&#34;https://www.cncf.io/announcements/2025/05/01/cncf-and-synadia-align-on-securing-the-future-of-the-nats-io-project/&#34;&gt;joint announcement&lt;/a&gt; for more information.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; CNCF和Synadia已达成协议，以确保NAT在CNCF内的健康开源项目中继续蓬勃发展，并继续支持和参与。请参阅我们的&lt;a href =“ https://www.cncf.io/announcements/2025/05/01/cncf-and-synadia-align-align-align-align-an-securing-the-the-future-o-------------------------------------------------------------------------------------------------------------/-&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 30 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Open Source PaaS Cozystack Becomes a CNCF Sandbox Project】开源Paas sozystack成为CNCF沙箱项目</title>
      <link>https://www.cncf.io/blog/2025/04/28/open-source-paas-cozystack-becomes-a-cncf-sandbox-project/</link>
      <description>【&lt;p&gt;On February 28, members of the CNCF Technical Oversight Committee completed their voting and unanimously accepted Cozystack, a platform for building private clouds and PaaS, into the CNCF Sandbox. The project is currently undergoing the onboarding process. Let’s break down what this means in practice, what Cozystack is, and what the CNCF Sandbox represents.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What is Cozystack?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cozystack is an open-source platform that enables the creation of a bare metal cloud for deploying proven cloud-native and open-source tools: managed Kubernetes clusters, databases as a service, applications as a service, and virtual machines based on KubeVirt (see the full list of components). Cozystack also provides a ready-made stack for observability and alerting based on Victoria Metrics, Victoria Logs, Grafana, and Alerta.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Service and hosting providers, banks, SaaS solution vendors, medtech, fintech, AI/ML services, and other companies use Cozystack to offer customers managed services, managed Kubernetes, and databases that run directly on hardware, ensuring maximum performance and service stability. Additionally, Cozystack can be used to build geo-distributed clusters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The platform is developed and maintained by Ænix. The core developer and creator of Cozystack is Andrey Kvapil, known in the engineering community by the nickname “kvaps.” He is an active contributor to Linstor, KubeVirt, Kamaji, Kubernetes, Cilium, and others.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What Does It Mean for Users?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Transferring the project to the CNCF guarantees all Cozystack users that the platform will always be available under the Apache 2.0 license and will not suffer the fate of projects like Mongo, Redis, Terraform, and Vault, whose licenses were changed to closed-source and no longer comply with the Open Source Initiative criteria. From this point forward, the rights to Cozystack belong to the non-profit industry organization, the CNCF.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Moreover, inclusion in the CNCF provides an opportunity to engage a broad engineering community in the development and use of Cozystack, making project management more transparent. Expanding the base of contributors and users will, in turn, significantly accelerate the platform’s development and the exploration of a wide range of use cases.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Andrey Kvapil, CEO of Ænix and creator of Cozystack:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;“I believe in honest and genuine open source, in the tools we use to build the platform, and I am happy that we can be useful to the community. In just one year, our small team of excellent engineers, with the support of our clients and the open-source community, has created a project worthy of inclusion in the CNCF. This is truly a significant achievement. Thank you to everyone who believed in us and supported us throughout this time. We will continue to improve the platform and plan to apply for CNCF Incubating status this fall. From an engineering perspective, we are already a mature project and ready for this. The main task now is to refine the project management process and community interaction.”&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Matthew Robin, CEO &amp;amp; Founder of Hidora:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“&lt;em&gt;Cozystack represents a significant advancement in simplifying complex cloud infrastructure deployment. Its integration into the CNCF Sandbox marks an important milestone that will accelerate its adoption and enrich its ecosystem through community collaboration. We are confident that Cozystack will play a key role in democratizing cloud-native technologies for businesses of all sizes.&lt;/em&gt;“&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kingdon Barrett, FluxCD &amp;amp; Cozystack maintainer:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;“Cozystack combines cutting edge open source cloud native technologies in a way that I could probably set up myself, the hard way, if I wanted to spend 6 months figuring out how they fit together. It’s Talos Linux, configured as a cloud on bare metal, ready in half an hour or so!”&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ænix will continue to actively develop the platform and support both clients and community users.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What’s next?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our dev team is currently wrapping up GPU support for virtual machines, and we’re actively testing the new functionality. This will make it possible to run AI and ML workloads directly on the platform.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can check out what else we’re working on in our &lt;a href=&#34;https://cozystack.io/docs/roadmap&#34;&gt;public roadmap&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Useful Links&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cozystack.io/&#34;&gt;Cozystack Website&amp;nbsp;&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cozystack&#34;&gt;GitHub&amp;nbsp;&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://t.me/cozystack&#34;&gt;Telegram Community&amp;nbsp;&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://slack.k8s.io/&#34;&gt;Slack Community&lt;/a&gt; (registration in the Kubernetes Slack workspace required)&amp;nbsp;&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://calendar.google.com/calendar/embed?src=cozystack.io&#34;&gt;Community Meeting Calendar&amp;nbsp;&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtube.com/cozystack&#34;&gt;Cozystack Community Meetings Recordings&amp;nbsp;&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://landscape.cncf.io/&#34;&gt;Cozystack on CNCF Landscape&amp;nbsp;&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/sandbox-projects/&#34;&gt;Cozystack in CNCF Sandbox&amp;nbsp;&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://devstats.cncf.io/&#34;&gt;Cozystack on Devstat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; 2月28日，CNCF技术监督委员会的成员完成了他们的投票，并一致接受了Cozystack，这是一个建造私有云和PAAS的平台，用于CNCF Sandbox。该项目目前正在进行入职过程。让我们分解这在实践中的含义，什么是sozystack以及CNCF沙盒所代表的内容。&lt;/p&gt;。&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;什么是cozystack？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; cozystack是一个开源平台，它可以创建裸露的金属云，用于部署经过验证的云本地和开源工具：托管Kubernetes群集，数据库作为服务，应用程序作为服务以及基于Kubevirt的虚拟机（请参阅组件的完整列表）。 Cozystack还提供了一个现成的堆栈，以根据维多利亚指标，维多利亚日志，Grafana和Alerta进行可观察性和警报。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;服务和托管提供商，银行，SaaS解决方案供应商，MedTech，Fintech，AI/ML服务以及其他公司使用CozyStack为客户提供托管服务，托管Kubernetes以及直接在硬件上运行的数据库，以确保最高的性能和服务稳定性。此外，Cozystack可用于构建地理分布的簇。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该平台由Énix开发和维护。 Cozystack的核心开发人员和创建者是Andrey Kvapil，在工程社区中以“ Kvaps”为名。他是Linstor，Kubevirt，Kamaji，Kubernetes，Cilium等的积极贡献者。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;对用户意味着什么？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将项目转移到CNCF可以保证所有Cozystack用户，即该平台将始终在Apache 2.0许可下可用，并且不会遭受Mongo，Redis，Terraform和Vault等项目的命运，其许可证已更改为封闭消息，并且不再遵守开源启动标准。从这一点开始，Cozystack的权利属于非营利性行业组织CNCF。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;此外，&lt;p&gt;包含在CNCF中，提供了一个机会，可以使广泛的工程社区参与Cozystack的开发和使用，从而使项目管理更加透明。扩大贡献者和用户的基础将大大加快平台的开发和探索广泛的用例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ænix首席执行官和Cozystack的创建者Andrey Kvapil：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt;“我相信我们用来建立平台的工具，我很高兴我们能对社区有用。在短短一年内，我们的优秀工程师的小型团队在我们的客户和开源社区的支持下，为您提供了一个值得一提的是，这是一个非常重要的计划。这是一个重要的计划。申请今年秋天的CNCF状态Gineering的观点，我们已经是一个成熟的项目，并为此做好了准备。现在的主要任务是完善项目管理过程和社区互动。” &lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Hidora的首席执行官兼创始人Matthew Robin：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“ &lt;em&gt; cozystack在简化复杂的云基础架构部署方面是一个重大进步。其集成到CNCF沙箱中标志着一个重要的里程碑，它将加速其采用并通过社区协作来丰富其生态系统。我们将在Cozystack中发挥着重要的作用。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;金登·巴雷特（Kingdon Barrett），Fluxcd＆Cozystack维护者：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt;“ cozystack结合了最前沿的开源云本地技术，我可能可以设置自己，如果我想花6个月的时间来弄清楚它们如何结合在一起。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ænix将继续积极开发平台并支持客户和社区用户。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;下一步是什么？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的开发团队目前正在整理对虚拟机的GPU支持，我们正在积极测试新功能。这将使直接在平台上运行AI和ML工作负载。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以查看我们在&lt;a href =“ https://cozystack.io/docs/roadmap”&gt;公共路线图&lt;/a&gt;。&lt;/p&gt;中的其他工作。&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-heading”&gt;有用的链接&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://cozystack.io/”&gt; cozystack网站&lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/cozystack”&gt; github &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://t.me/cozystack”&gt; Telegram社区&lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://slack.k8s.io/”&gt; Slack Community &lt;/a&gt;（需要在Kubernetes Slack Slack Workspace中进行注册）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://calendar.google.com/calendar/embed?src=cozystack.io”&gt;社区会议日历&lt;/a&gt; &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://youtube.com/cozystack”&gt; Cozystack社区会议录音&lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://landscape.cncf.io/”&gt; cncf landscape上的cozystack &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://www.cncf.io/sandbox-projects/”&gt; cncf sandbox中的cozystack &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://devstats.cncf.io/”&gt; devstat上的cozystack &lt;/a&gt; &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 27 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing the Automated Governance Maturity Model】宣布自动治理成熟模型</title>
      <link>https://www.cncf.io/blog/2025/05/05/announcing-the-automated-governance-maturity-model/</link>
      <description>【&lt;p&gt;We are entering an era where Governance is increasingly important; with AI systems generating code and becoming a critical part of application’s runtime infrastructure, we can produce outputs at an increasingly rapid pace. Organizations and individuals need to ensure that there are appropriate guardrails on the inputs and outputs of these systems to keep workloads safe and conformant with our expectations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Governance ensures that a system or group of systems operates in line with organizational expectations, complies with regulations, and achieves strategic objectives. We created the &lt;a href=&#34;https://tag-security.cncf.io/community/resources/automated-governance-maturity-model/&#34;&gt;Automated Governance Maturity Model&lt;/a&gt; guidance as a part of TAG-Security to help organizations build roadmaps and assess their progress along the journey of not only developing Governance, but automating the Evaluation, Enforcement, and Audit activities that correspond to it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The contributors to this effort were Matt Flannery, Pedro Ignácio, Brandt Keller, Eddie Knight, and Jon Zeolla.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;How to use the Maturity Model&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While we wrote the Maturity Model primarily with Security roles in mind, we also expect roles like Auditors, Control or Product Owners, or Control Implementers (Platform teams, SREs, DevOps, Developers) to benefit from reading or using this document.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Automated Governance Maturity Model assesses organizational capabilities across four core categories; &lt;strong&gt;Policy&lt;/strong&gt;, &lt;strong&gt;Evaluation&lt;/strong&gt;, &lt;strong&gt;Enforcement&lt;/strong&gt;, and &lt;strong&gt;Audit&lt;/strong&gt;. These categories outline practices for leveraging automation and embedding modern approaches like rapid feedback loops and data-driven decision-making into traditionally manual administrative tasks, for example writing policies and standards, or managing audits.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Maturity Model is designed to optimize usability and simplicity. It consists of over 50 total practices, each of which can be self-assessed fully independently, as in no practice depends on another. These items can also be assessed within a specific scope, such as a single product or business unit, or organization-wide. You simply check the box next to a practice to confirm that it is being performed in your organization and then tally all checked boxes and compare your results against our rubric to identify your overall grade.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’re interested in this work and would like to provide feedback on what we’ve done so far, please reach out to the team directly, or via the #tag-security channel in the &lt;a href=&#34;https://slack.cncf.io/&#34;&gt;CNCF slack&lt;/a&gt;! Possible future work may include additional practices, new categories, or adding supplementary guidance or materials based on feedback.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;我们进入一个越来越重要的时代。随着AI系统生成代码并成为应用程序运行时基础架构的关键部分，我们可以以越来越快的速度产生输出。组织和个人需要确保在这些系统的输入和输出上有适当的护栏，以使工作负载保持安全和符合我们的期望。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;治理确保系统或一组系统符合组织期望，符合法规并实现战略目标。我们创建了&lt;a href =“ https://tag-security.cncf.io/community/community/resources/automated-governance-maturity-model/”&gt;自动化治理成熟度模型&lt;/a&gt;指导&lt;/a&gt;指导&lt;/a&gt;作为标签的一部分，以帮助组织的一部分，不仅可以评估他们的进步，而且评估了他们的进步，而且在旅途中进行了审核，但自动在旅途中，自动进行了旅程，并自动评估了旅程，并自动评估审核，并且会自动评估，并且自动评估了旅程，并自动评估了旅程，并且自动评估了旅程，并且自动化的行为，并将其自动评估，并且自动化的旅程，并自动评估审核的过程。与之相对应的活动。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这项工作的贡献者是Matt Flannery，PedroIgnácio，Brandt Keller，Eddie Knight和Jon Zeolla。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;如何使用成熟模型&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当我们主要牢记安全角色编写了成熟模型时，我们还期望审计师，控制或产品所有者或控制实施者（平台团队，SRES，DEVOPS，开发人员）等角色将从阅读或使用本文档中受益。&lt;/p&gt;&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自动化治理成熟度模型评估了四个核心类别的组织能力； &lt;strong&gt;政策&lt;/strong&gt;，&lt;strong&gt;评估&lt;/strong&gt;，&lt;strong&gt;执法&lt;/strong&gt;和&lt;strong&gt;审计&lt;/strong&gt;。这些类别概述了利用自动化和嵌入现代方法（例如快速反馈循环和数据驱动决策）的实践，例如传统手动管理任务，例如编写政策和标准或管理审核。&lt;/p&gt;&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;成熟模型旨在优化可用性和简单性。它由50多种总体实践组成，每种实践都可以完全独立地进行自我评估，因为在没有实践中，它都取决于另一种实践。这些项目也可以在特定范围内进行评估，例如单个产品或业务部门或整个组织。您只需选中练习旁边的框即可确认它是在组织中执行的，然后对所有检查框进行计数，并将您的结果与我们的标题进行比较以识别您的整体成绩。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您对这项工作感兴趣，并且想提供有关我们到目前为止所做的事情的反馈，请直接与团队联系，或通过&lt;a href =“ https://slack.cncf.io/”中的＃tag-security频道“&gt; cncf slack &lt;/a&gt;！未来可能的工作可能包括其他实践，新类别或基于反馈的补充指南或材料。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style =“高度：80px” aria-hidded =“ true” class =“ wp-b锁定器是风格的80-120“&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 04 May 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing OpenReports: Standardized Kubernetes Reporting】宣布OpenReports：标准化的Kubernetes报告</title>
      <link>https://www.cncf.io/blog/2025/05/06/announcing-openreports-standardized-kubernetes-reporting/</link>
      <description>【&lt;p&gt;The Kubernetes ecosystem, while powerful, is a sprawling landscape of tools. As organizations scale their deployments, ensuring compliance and security becomes paramount. But how do you effectively track and report on your Kubernetes policies and scanners across diverse tools?&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Enter &lt;strong&gt;OpenReports (&lt;/strong&gt;&lt;a href=&#34;https://openreports.io/&#34;&gt;&lt;strong&gt;https://openreports.io/&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;, a new but incredibly promising project aiming to standardize reporting, drawing inspiration from the success of OpenTelemetry.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenReports is designed to capture, correlate, and export evaluation results for any Kubernetes tool, such as policy engines, scanners, or any controller that wishes to produce reports.&amp;nbsp; This is the core vision of OpenReports. The project seeks to provide a unified API and set of tools for producing and consuming reports in a standardized, vendor-neutral format.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The OpenReports API was initially developed by the &lt;a href=&#34;https://github.com/kubernetes/community/blob/master/wg-policy/README.md&#34;&gt;Kubernetes Policy Working Group&lt;/a&gt; and has now been spun out into its own project.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;The Challenge: Reporting Fragmentation&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Currently, reporting in Kubernetes is a fragmented affair. Each policy engine, scanner, or controller often has its own reporting mechanism, and integration points. This creates significant challenges for:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Centralized Visibility:&lt;/strong&gt; Gaining a holistic view of policy compliance across multiple clusters is difficult.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Correlation and Analysis:&lt;/strong&gt; Correlating policy violations with other system events is cumbersome.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Automation and Auditing:&lt;/strong&gt; Automating compliance reporting and audit trails requires significant custom integration.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;OpenReports: A Unified Approach&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenReports aims to address these challenges by providing:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Standardized Data Model:&lt;/strong&gt; A common data model for representing evaluation results, including names, resource details, evaluation status, and relevant metadata.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Collection and Aggregation:&lt;/strong&gt; Mechanisms for collecting reports from different engines and aggregating them into a central repository.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Export and Integration:&lt;/strong&gt; Standardized export formats (e.g., JSON, Prometheus metrics) and integrations with popular monitoring and logging systems (e.g., Prometheus, Elasticsearch, Grafana).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What OpenReports Provides&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The OpenReports project provides a Kubernetes Custom Resource Definition (CRD) and several tools to manage reports:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;OpenReports API&lt;/strong&gt;:&amp;nbsp; cluster-wide and namespaced resource for reports.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Web Console&lt;/strong&gt;: a web UI for viewing reports.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Reports Routing Service&lt;/strong&gt;: a service to route reports to various notification targets, like Slack, Teams, ElasticSearch, and several others.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;API Aggregation Service&lt;/strong&gt;: a service to offload etcd by storing reports in a separate database. This is required for larger or busier clusters where a large amount of reports may be produced.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Report Producers and Consumers&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While OpenReports is a new project, the API has been maintained for several years by the Kubernetes Policy Working Group, and several producers and consumers exist. Here is the current list:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Report Producers:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/falcosecurity/falcosidekick/blob/master/outputs/policyreport.go&#34;&gt;Falco&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/statnett/image-scanner-operator&#34;&gt;Image Scanner&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/loft-sh/jspolicy/&#34;&gt;jsPolicy&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://kyverno.io/docs/policy-reports/&#34;&gt;Kyverno&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.netchecks.io/&#34;&gt;Netchecks&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/fjogeleit/tracee-polr-adapter&#34;&gt;Tracee Adapter&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://aquasecurity.github.io/trivy-operator/v0.15.1/tutorials/integrations/policy-reporter/&#34;&gt;Trivy Operator&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.kubewarden.io/explanations/audit-scanner/policy-reports&#34;&gt;Kubewarden&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Report Consumers:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://fairwinds.com/insights&#34;&gt;Fairwinds Insights&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://kyverno.github.io/policy-reporter/&#34;&gt;Kyverno Policy Reporter&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/defenseunicorns/lula&#34;&gt;Lula&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://nirmata.com/nirmata-control-hub/&#34;&gt;Nirmata Control Hub&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://open-cluster-management.io/&#34;&gt;Open Cluster Management&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Why OpenReports Makes Sense&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The comparison to OpenTelemetry is apt. Just as OpenTelemetry standardized observability signals (traces, metrics, logs), OpenReports aims to standardize policy reporting. This brings several key advantages:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Vendor Neutrality:&lt;/strong&gt; OpenReports is designed to be vendor-neutral, ensuring interoperability between different policy engines and reporting tools.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Community-Driven:&lt;/strong&gt; As a CNCF sandbox project (hopefully – submission is planned once all tools are integrated!), OpenReports will benefit from community contributions and collaboration.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Scalability and Performance:&lt;/strong&gt; The project is designed to handle large-scale Kubernetes deployments and high volumes of policy reports.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Simplified Integration:&lt;/strong&gt; Standardized formats and integrations simplify the process of integrating policy reporting into existing monitoring and logging workflows.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;The Future of Kubernetes Compliance&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenReports has the potential to revolutionize Kubernetes compliance by providing a unified and standardized approach to policy reporting. By simplifying the process of collecting, analyzing, and reporting on policy and controller evaluations, OpenReports will empower organizations to build more secure and compliant Kubernetes environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As the Kubernetes ecosystem continues to evolve, projects like OpenReports are crucial for ensuring that security and compliance remain top priorities. If you are passionate about Kubernetes policy management and reporting, consider contributing to this exciting project. The future of Kubernetes compliance may very well depend on it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Get Involved:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Visit the OpenReports website:&lt;a href=&#34;https://openreports.io/&#34;&gt; https://openreports.io/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Explore the project on GitHub: &lt;a href=&#34;https://github.com/openreports&#34;&gt;https://github.com/openreports&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Join the community discussions: &lt;a href=&#34;https://cloud-native.slack.com/archives/C08JH5223A6&#34;&gt;https://cloud-native.slack.com/archives/C08JH5223A6&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Stay tuned for more updates on OpenReports as it progresses towards its goal of standardizing Kubernetes policy reporting.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; kubernetes生态系统虽然强大，但却是一种庞大的工具景观。随着组织扩大部署的扩展，确保合规性和安全性变得至关重要。但是，您如何有效地跟踪和报告各种工具的Kubernetes政策和扫描仪？ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;输入&lt;strong&gt; openReports（&lt;/strong&gt; &lt;a href =“ https://openreports.io/”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; OpenReports旨在为任何Kubernetes工具（例如策略引擎，扫描仪或任何希望生产报告的控制器）捕获，关联和出口评估结果。  这是OpenReports的核心愿景。该项目旨在提供统一的API和一套工具，用于以标准化的供应商中性格式生产和消费报告。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最初由&lt;a href =“ https://github.com/kubernetes/community/blob/blob/master/wg-policy/readme.md”开发了OpenReports API。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;挑战：报告碎片&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;目前，在Kubernetes报告是一件零散的事情。每个政策引擎，扫描仪或控制器通常都有自己的报告机制和集成点。这给：&lt;/p&gt;带来了重大挑战&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;集中的可见性：&lt;/strong&gt;很难获得多个集群的政策依从性的整体观点。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;相关性和分析：&lt;/strong&gt;将违反政策的行为与其他系统事件相关联。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;自动化和审计：&lt;/strong&gt;自动化合规性报告和审计跟踪需要大量的自定义集成。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; OpenReports：统一方法&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; OpenReports旨在通过提供以下方式解决这些挑战：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;标准化数据模型：&lt;/strong&gt;用于表示评估结果的常见数据模型，包括名称，资源详细信息，评估状态和相关元数据。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;收集和聚合：&lt;/strong&gt;用于从不同发动机收集报告并将其汇总到中央存储库中的机制。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;出口和集成：&lt;/strong&gt;标准化出口格式（例如JSON，Prometheus指标）以及与流行的监控和伐木系统（例如Prometheus，elasticsearch，Grafana）的集成。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; OpenReports提供的&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; OpenReports项目提供了Kubernetes自定义资源定义（CRD）和几种管理报告的工具：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; OpenReports api &lt;/strong&gt;：范围内的集群和报告空间的资源。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; Web控制台&lt;/strong&gt;：用于查看的Web UI端口。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;报告路由服务&lt;/strong&gt;：将报告向各种通知目标路由报告的服务，例如Slack，Teams，Elasticsearch等。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; API聚合服务&lt;/strong&gt;：通过在单独的数据库中存储报告来卸载等。这对于可能产生大量报告的较大或更忙碌的群集需要。 &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;报告生产者和消费者&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然OpenReports是一个新项目，但Kubernetes政策工作组已维护了几年的API，并且存在一些生产者和消费者。这是当前列表：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;报告生产者：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/falcosecurity/falcosidekick/blob/master/master/master/outputs/policyreports/policyreport.go”&gt; falco &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/statnett/image-scanner-operator”&gt;图像扫描仪&lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/loft-sh/jspolicy/”&gt; jspolicy &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://kyverno.io/docs/policy-reports/”&gt; kyverno &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://docs.netchecks.io/”&gt; netchecks &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/fjogeleit/tracee-polr-adapter”&gt; Tracee Adapter &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://aquasecurity.github.io/trivy-operator/v0.15.1/tutorials/integrations/policy-reporter/”&gt; trivy Operator &lt;/a&gt; &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://docs.kubewarden.io/explanations/audit-scanner/policy-reports”&gt; kubewarden &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;报告消费者：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://fairwinds.com/insights”&gt; Fairwinds Insights &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://kyverno.github.io/policy-reporter/”&gt; kyverno政策记者&lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/defenseunicorns/lula”&gt; lula &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://nirmata.com/nirmata-control-hub/”&gt; Nirmata Control Hub &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://open-cluster-management.io/”&gt;打开群集管理&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;为什么OpenReports有意义&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与OpentElemetry的比较很恰当。正如OpentElemetry标准化的可观察性信号（迹线，指标，日志）一样，OpenReports旨在标准化策略报告。这带来了几个关键优势：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;供应商中立性：&lt;/strong&gt; OpenReports设计为供应商中立，可确保不同的策略引擎和报告工具之间的互操作性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;社区驱动：&lt;/strong&gt;作为CNCF沙盒项目（希望 - 一旦整合了所有工具，就计划提交！），OpenReports将从社区贡献和协作中受益。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;可伸缩性和性能：&lt;/strong&gt;该项目旨在处理大规模的Kubernetes部署和大量政策报告。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;简化集成：&lt;/strong&gt;标准化格式和集成简化了将策略报告整合到现有MON中的过程迭代和记录工作流程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; kubernetes合规性的未来&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; OpenReports有可能通过提供统一和标准化的政策报告方法来彻底改变Kubernetes的合规性。通过简化收集，分析和报告政策和控制者评估的过程，OpenReports将使组织能够建立更安全和合规的Kubernetes环境。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着Kubernetes生态系统继续发展，OpenReports之类的项目对于确保安全和合规性仍然是首要任务至关重要。如果您对Kubernetes政策管理和报告充满热情，请考虑为这个令人兴奋的项目做出贡献。 Kubernetes合规的未来很可能取决于它。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;参与：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;访问OpenReports网站：&lt;A href =“ https://openreports.io/”&gt; https://openreports.io/ &lt;/a&gt; &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在github上探索该项目：&lt;a href =“ https://github.com/openreports”&gt; https://github.com/openreports &lt;/a&gt; &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;加入社区讨论：&lt;a href =“ https://cloud-native.slack.com/archives/c08jh5223a6”&gt; https://cloud-native.slack.com/archives/archives/c08jh5223a6 &lt;/a&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;请继续关注OpenReports的更多更新，因为它朝着标准化Kubernetes政策报告的目标。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 05 May 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Enforcing Artifact Security with Trivy and OPA】使用Trivy和OPA执行工件安全</title>
      <link>https://www.cncf.io/blog/2025/05/01/enforcing-artifact-security-with-trivy-and-opa/</link>
      <description>【&lt;p&gt;In cloud-native development, ensuring the integrity and security of software artifacts (such as Docker images, Python wheels, and Helm charts) is a fundamental challenge. With the growing adoption of continuous integration and delivery pipelines, there’s a critical need for automation around vulnerability detection and policy enforcement at every stage of the artifact lifecycle.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Two tools that are increasingly adopted for this purpose are Trivy and Open Policy Agent (OPA). Together, they form a powerful combination for scanning and securing artifacts while enabling fine-grained policy control in cloud-native ecosystems&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Vulnerability Detection with Trivy&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Trivy is a versatile security scanner that supports containers, file systems, and code repositories. It offers several key capabilities critical to securing the software supply chain:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Vulnerability Detection&lt;/strong&gt;: Trivy identifies known vulnerabilities (CVEs) across multiple ecosystems. It also benefits from community-driven enhancements, incorporating additional vulnerability data sources and enriched CVE metadata for more comprehensive results.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;License Compliance&lt;/strong&gt;: Trivy flags packages based on their associated software licenses, helping organizations enforce licensing policies and avoid compliance risks.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;SBOM Generation and Ingestion&lt;/strong&gt;: Trivy can generate Software Bill of Materials (SBOMs) in widely adopted formats such as SPDX, SPDX JSON, and CycloneDX. It also supports scanning existing SBOMs, including attestations in CycloneDX format, to detect vulnerabilities in declared dependencies.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When integrated into artifact repositories or CI/CD pipelines, Trivy can automatically scan artifacts as they are pushed, surfacing vulnerabilities and license issues early in the development lifecycle.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For example, scanning a Python package like requests==2.6.0 with Trivy immediately surfaces any known issues, along with metadata including CVSS scores and fixed versions:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;pip download requests==2.6.0&#xA;trivy fs requests-2.6.0-py2.py3-none-any.whl&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This helps teams respond quickly to known threats and maintain visibility into their software supply chain.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Automating Remediation with OPA&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Detection is only one side of the equation. The &lt;strong&gt;CNCF Graduate&lt;/strong&gt; project OPA enables the enforcement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OPA is a general-purpose policy engine that supports &lt;strong&gt;policy-as-code&lt;/strong&gt;, making it possible to express complex rules over infrastructure, workloads, or (relevant to Cloudsmith) artifact metadata. OPA policies are written in Rego, a purpose-built declarative language.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A typical policy might look like this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;package cloudsmith # artifact mgmt policy&#xA;import rego.v1&#xA;default match := false&#xA;max_cvss_score := 6&#xA;&#xA;match if {&#xA;count(reason) != 0&#xA;}&#xA;&#xA;reason contains msg if {&#xA;some vulnerability in input.v0.security_scan.Vulnerabilities&#xA;    vulnerability.FixedVersion&#xA;    vulnerability.Status == &#34;fixed&#34;&#xA;some _, val in vulnerability.CVSS&#xA;val.V3Score &amp;gt; max_cvss_score&#xA;msg := &#34;CVSS Score &amp;gt;= 6&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This rule blocks any package or container image that includes a vulnerability with a CVSS score above 6.0. These policies can be tested in isolation or simulated before being fully enforced, reducing the risk of disrupting builds or deployments during rollout.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Integrating Trivy and OPA in Practice&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At Cloudsmith, we use Cloudsmith to secure Cloudsmith. This means combining Trivy and OPA to allow for automated pipelines that:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Scan&lt;/strong&gt; every artifact upon ingestion or upload.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Evaluate&lt;/strong&gt; vulnerabilities against defined security policies.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Take action&lt;/strong&gt;, such as quarantining risky packages, alerting teams, or tagging artifacts for review.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This model moves security left in the DevOps lifecycle, embedding policy enforcement closer to where artifacts are built and stored.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Depending on the platform or ecosystem you’re using, this workflow can be implemented in various ways – either via GitOps-style pipelines, repository-level webhooks, or platform APIs. What’s important is the consistent enforcement of security policies &lt;strong&gt;automatically&lt;/strong&gt;, at scale.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Why This Approach Matters&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In cloud-native environments, the scale and speed of deployments often make manual review impractical. Vulnerable packages can propagate quickly if not caught early. By combining scanning with policy automation:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Teams &lt;strong&gt;reduce risk&lt;/strong&gt; without introducing delays.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Organizations enforce &lt;strong&gt;consistent compliance&lt;/strong&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Security policies can &lt;strong&gt;evolve&lt;/strong&gt; alongside threats and requirements.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And because Trivy and OPA are both open source, this approach supports openness, flexibility, and community best practices.&lt;br&gt;&lt;br&gt;At&lt;a href=&#34;https://cloudsmith.com/&#34;&gt; Cloudsmith&lt;/a&gt;, this exact pattern is used to secure the artifact supply chain. Artifacts are scanned automatically with Trivy on upload, and OPA is used to quarantine packages that violate defined security policies — all without manual intervention.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;在云本地开发中，确保软件工件的完整性和安全性（例如Docker Images，Python Wheels和Helm Charts）是一个基本挑战。随着持续集成和交付管道的越来越多，在人工制品生命周期的每个阶段围绕脆弱性检测和政策执法都有至关重要的需求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为此目的越来越多地采用的两个工具是Trivy和Open Policy Agent（OPA）。它们一起构成了扫描和保护工件的强大组合，同时在云本地生态系统中实现细粒度的政策控制&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ WP-block-neading”&gt; trivy &lt;/h3&gt;漏洞检测&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Trivy是一种多功能安全扫描仪，支持容器，文件系统和代码存储库。它提供了确保软件供应链至关重要的几个关键功能：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;脆弱性检测&lt;/strong&gt;：琐事识别多个生态系统的已知漏洞（CVE）。它还受益于社区驱动的增强功能，结合了其他脆弱性数据源，并丰富了CVE元数据以获得更全面的结果。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;许可合规性&lt;/strong&gt;：基于其相关软件许可证的Trivy Flags软件包，帮助组织执行许可政策并避免合规风险。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; SBOM生成和摄入&lt;/strong&gt;：Trivy可以以广泛采用的格式（例如SPDX，SPDX JSON和Cyclonedx）生成软件材料清单（SBOM）。它还支持扫描现有的SBOM，包括Cyclonedx格式的证明，以检测已声明的依赖项中的漏洞。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当整合到工件存储库或CI/CD管道中时，Trivy可以在推动时自动扫描工件，从而在开发生命周期的早期表现出脆弱性和许可问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;例如，扫描一个python软件包，例如请求== 2.6.0，trivy立即表现出任何已知问题，以及包括CVSS分数和固定版本的元数据：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; pip下载请求== 2.6.0&#xA;Trivy FS请求-2.6.0-py2.py3-none-any.whl&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这有助于团队快速响应已知威胁并保持对软件供应链的可见性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt;使用OPA &lt;/h3&gt;自动补救&#xA;&#xA;&#xA;&#xA;&lt;p&gt;检测只是方程的一侧。 &lt;strong&gt; CNCF毕业生&lt;/strong&gt;项目OPA实现执法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; OPA是一种通用政策引擎，支持&lt;strong&gt;策略 - 代码&lt;/strong&gt;，使得对基础架构，工作负载，或（与Cloudsmith）伪影元数据表达复杂的规则。 OPA政策是用Rego编写的，Rego是一种专门构建的声明性语言。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;典型政策可能看起来像这样：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;preclass =“ wp-block-code”&gt; &lt;code class =“”&gt;软件包cloudsmith＃trifact mgmt策略&#xA;导入rego.v1&#xA;默认匹配：= false&#xA;max_cvss_score：= 6&#xA;&#xA;匹配如果{&#xA;计数（原因）！= 0&#xA;}&#xA;&#xA;原因如果{&#xA;input.v0.security_scan.vulnerabilities&#xA;    漏洞&#xA;    漏洞。Status==“固定”&#xA;一些_，val中的val.cvss&#xA;val.v3score&gt; max_cvss_score&#xA;msg：=“ CVSS得分&gt; = 6”&#xA;}&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此规则会阻止任何包含CVSS分数高于6.0的漏洞的软件包或容器映像。这些策略可以孤立地测试或在完全执行之前进行模拟，从而降低了在推出期间破坏构建或部署的风险。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;在实践中整合琐事和OPA &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在Cloudsmith，我们使用Cloudsmith来保护Cloudsmith。这意味着将Trivy和OPA结合起来，以允许自动化管道：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;扫描&lt;/strong&gt;摄入或上传时的每一个工件。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;评估&lt;/strong&gt;针对定义的安全政策的漏洞。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;采取行动&lt;/strong&gt;，例如隔离风险包，提醒团队或标记工件进行审查。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此模型移动剩余的安全性生命周期中的安全性，将策略执行嵌入到建立和存储伪像的位置。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;根据您使用的平台或生态系统，可以通过各种方式实现此工作流程 - 通过Gitops风格的管道，存储库级的Webhooks或Platform API。重要的是，安全策略的一致执行&lt;strong&gt;自动&lt;/strong&gt;，大​​规模。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;为什么这种方法很重要&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在云本地环境中，部署的规模和速度通常使手动审查不切实际。如果没有提早发现，脆弱的包裹可以迅速传播。通过将扫描与策略自动化相结合：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;团队&lt;strong&gt;降低风险&lt;/strong&gt;而不会引入延迟。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;组织执行&lt;strong&gt;一致的合规&lt;/strong&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;安全政策可以&lt;strong&gt;以及威胁和要求以及威胁和要求。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;并且由于Trivy和Opa都是开源的，因此这种方法支持开放性，灵活性和社区最佳实践。&lt;br&gt; &lt;br&gt; at &lt;a href =“ https:///cloudsmith.com/”&gt; cloudsmith &lt;/a&gt;，此精确模式可用于保护人工供应链。工件在上传时会自动扫描工件，而OPA则用于隔离违反已定义的安全策略的包裹 - 所有这些都没有手动干预。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 30 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kubestronaut in Orbit: Jana Vonšák】轨道上的kubestronaut：JanaVonšák</title>
      <link>https://www.cncf.io/blog/2025/04/29/kubestronaut-in-orbit-jana-vonsak/</link>
      <description>【&lt;h3 class=&#34;wp-block-heading&#34;&gt;Get to know Jana&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re thrilled to recognize Jana Vonšák from Slovakia as our first-ever female Golden Kubestronaut. A dedicated DevOps Security Engineer with a background in software development, Jana brings a rare blend of development and security expertise to her role. Her passion lies in embedding robust security practices into cloud-native environments, ensuring applications are both scalable and secure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Outside of her day-to-day work, Jana is a strong advocate for continuous learning and community engagement. Her curiosity and drive to explore new frontiers in the cloud-native ecosystem have earned her all of the CNCF certifications.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;When did you get started with Kubernetes and/or cloud-native? What was your first project?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I began working with Kubernetes about three years ago when I joined the Technology Delivery International (TDI) unit at Deutsche Telekom, making the leap from software development into the world of DevSecOps. It was a significant transition — and admittedly a bit overwhelming at first — but I quickly grew to enjoy the new challenges and the dynamic, fast-paced nature of the cloud native ecosystem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;My first project involved an in-house WAF-as-a-Service solution already running on Kubernetes and spanning multiple clusters. Working within the security division, applying Kubernetes security best practices has been a core part of my journey — and it’s a topic I remain deeply passionate about.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What are the primary CNCF projects you work on or use today? What projects have you enjoyed the most in your career?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The primary CNCF projects I currently work with include Kubernetes, Helm, Argo, Prometheus, Grafana, and CloudNativePG. Each tool brings unique strengths to the table, and together they create a powerful, well-balanced ecosystem — it’s tough to pick a favorite.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are also a few projects I’m not actively using yet but would love to explore further, especially Kyverno and OpenTelemetry. Both offer exciting capabilities that I’m eager to integrate into my work in the near future.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;How have the certs or CNCF helped you in your career?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The certifications themselves haven’t had a major direct impact on my career — aside from attracting a lot more random recruiter messages on LinkedIn. However, the preparation process was incredibly valuable, especially for the hands-on exams. You simply can’t fake your way through those; you need a solid grasp of the core concepts, the ability to navigate the documentation efficiently, and the confidence to apply your knowledge in real-world scenarios.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When I began studying for the Kubernetes certifications, I was in a position where I had to quickly and thoroughly understand the entire ecosystem for a project I was assigned to. Following the official domains and competencies outlined in the exam guides turned out to be the most effective and structured way to achieve that.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What are some other books/sites/courses you recommend for people who want to work with k8s?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When it comes to preparing for certifications or deepening your Kubernetes knowledge, official documentation is always the best source of truth — it’s your most reliable companion. Beyond that, there are several hands-on resources I highly recommend:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Killerkoda&lt;/strong&gt; – Excellent hands-on labs that let you practice real scenarios.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;KodeKloud&lt;/strong&gt; – Great course content with interactive labs. They operate on a subscription model, but many of their courses are also available individually on Udemy.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Kim Wüstkamp’s CKS Course&lt;/strong&gt; – Formerly on Udemy, now freely available on &lt;a href=&#34;https://www.youtube.com/&#34;&gt;YouTube&lt;/a&gt;. It’s a fantastic resource for CKS preparation.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Killershell Mock Exams&lt;/strong&gt; – Challenging, but definitely worth doing to get comfortable with the exam environment and expectations.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What do you do in your free time?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Most of my free time is joyfully spent with my two amazing kids and my husband — and I wouldn’t trade it for anything. When I do carve out a bit of time for myself, you’ll usually find me lifting heavy things for fun (a.k.a. weightlifting) or out on a run.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Last year, I completed my first Spartan Beast race — and I think I’m officially hooked. I’m already looking forward to joining again and beating my previous time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What would you tell someone who is just starting their K8s certification journey? Any tips or tricks?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes can feel overwhelming at first, but the key is hands-on practice. Start experimenting early — spin up a local cluster, break things, fix them, and repeat. Tools like Kind and Minikube are great for getting started and building confidence in a safe environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Also, get comfortable with the official Kubernetes documentation. It’s incredibly detailed and allowed during the hands-on certification exams. You don’t need to memorize everything — but knowing how to quickly find what you need is a huge advantage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The more time you spend working with Kubernetes, the more everything will start to click. Stick with it, and you’ll begin to see how all the pieces fit together.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Today the cloud native ecosystem is way more than Kubernetes. Do you plan to get other cloud native certifications from the CNCF?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Currently, I have all of them… let’s see what the future will bring!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What else would you like to share in this feature?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I absolutely &lt;strong&gt;love&lt;/strong&gt; the Kubestronaut community! Honestly, I didn’t expect this to be such a big part of the experience when becoming a Kubestronaut, but it’s turned out to be one of the best perks. It’s a space filled with curious, supportive people who are always ready to share knowledge and offer advice.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;KubeCon + CloudNativeCons will never be the same for me — not only will I get to attend incredible talks in person, but I’ll also finally have the chance to meet some of these inspiring individuals face-to-face. I’m already looking forward to it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;h3 class =“ wp-block头”&gt;了解jana &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们很高兴将来自斯洛伐克的JanaVonšák认识为我们有史以来的第一个女性金kubestronaut。 Jana是具有软件开发背景背景背景的专用DevOPS安全工程师，他将开发和安全专业知识的罕见融合为她的角色。她的热情在于将强大的安全实践嵌入到云本地环境中，确保应用程序既可扩展又安全。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在日常工作之外，Jana是持续学习和社区参与的强有力的拥护者。她的好奇心和探索云本地生态系统中新边界的动力为她赢得了所有CNCF认证。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block-heading”&gt;您什么时候开始使用kubernetes和/或云本地？您的第一个项目是什么？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我大约三年前就开始与Kubernetes合作，当时我加入了Deutsche Telekom的Technology International（TDI）部门，从软件开发到DevSecops的世界。这是一个重大的过渡 - 一开始有点不知所措 - 但我很快就开始享受新的挑战和云本机生态系统的动态，快节奏的本质。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我的第一个项目涉及已经在kubernetes上运行并跨越多个群集的内部WAF-AS-A-Service解决方案。在安全部门工作，应用Kubernetes安全最佳实践一直是我旅程的核心部分 - 这是我对此深表激情的话题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt;您今天从事或使用的主要CNCF项目是什么？您在职业生涯中最喜欢哪些项目？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我目前与之合作的主要CNCF项目包括Kubernetes，Helm，Argo，Prometheus，Grafana和CloudNativePG。每个工具都为桌子带来了独特的优势，它们共同创造了一个功能强大，平衡的生态系统 - 很难选择喜欢的生态系统。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我还没有积极使用一些项目，但很想进一步探索，尤其是kyverno和opentelemetry。两者都提供令人兴奋的功能，我渴望在不久的将来融入我的工作中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-heading”&gt;证书或CNCF在职业生涯中如何帮助您？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;认证本身并没有对我的职业产生重大影响 - 除了吸引LinkedIn上更多随机的招聘人员消息。但是，准备过程非常有价值，特别是对于动手考试。您根本无法通过这些方式伪造自己的方式；您需要对核心概念，有效浏览文档的能力以及在现实世界中运用知识的信心。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当我开始学习Kubernetes认证时，我处于一个必须迅速而彻底地了解被分配给一个项目的整个生态系统的位置。跟随官员考试指南中概述的领域和能力被证明是实现这一目标的最有效和结构化的方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt;您建议想要与K8合作的人推荐哪些其他书籍/网站/课程？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在准备认证或加深您的Kubernetes知识方面，官方文档始终是真理的最佳来源 - 这是您最可靠的伴侣。除此之外，我强烈建议有几种动手资源：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; killerkoda &lt;/strong&gt;  - 出色的动手实验室，可让您练习真正的场景。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; kodekloud &lt;/strong&gt;  - 交互式实验室的出色课程内容。他们以订阅模型运行，但是他们的许多课程也可以在Udemy上单独使用。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;KimWüstkamp的CKS课程&lt;/strong&gt;  - 以前在Udemy上，现在在&lt;a href =“ https://www.youtube.com/”&gt; youtube上免费提供。这是CKS准备的绝佳资源。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; Killershell模拟考试&lt;/strong&gt;  - 具有挑战性，但绝对值得锻炼考试环境和期望。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt;您在空闲时间做什么？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我的大部分空闲时间都与我的两个了不起的孩子和我的丈夫一起度过了快乐的愉快度 - 我不会用任何东西来换它。当我为自己花点时间时，您通常会发现我抬起繁重的东西以娱乐（又称举重）或跑步。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;去年，我完成了我的第一场斯巴达野兽比赛 - 我想我正式迷上了。我已经期待再次加入并击败我的前一次。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ WP-block-neading”&gt;您会告诉一个刚开始K8认证旅程的人？有任何技巧或窍门吗？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kubernetes一开始会感到不知所措，但关键是动手实践。开始早日实验 - 旋转当地群集，打破事物，修复它们并重复。诸如Kind和Minikube之类的工具非常适合入门，并在安全环境中建立信心。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，对官方的Kubernetes文档感到满意。在动手认证考试中，它非常详细和允许。您不需要记住一切，而是知道如何快速找到所需的东西是一个巨大的优势。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与Kubernetes合作的时间越多，所有内容都会开始点击的时间越多。坚持下去，您将开始看到所有碎片如何结合在一起。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ WP-block-heading”&gt;今天，云本机生态系统比kubernetes要多。您是否打算从CNCF获得其他云本机认证？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;目前，我都拥有所有……让我们看看未来会带来什么！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt;您还想在此功能中分享什么？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我绝对&lt;strong&gt;爱&lt;/strong&gt; kubestronaut社区！老实说，我没想到这是成为kubestronaut时经历的很大一部分，但事实证明这是最好的津贴之一。这是一个充满好奇，支持的人，他们随时准备分享知识并提供建议。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubecon + Cloudnativecons对我来说永远不会一样 - 我不仅可以亲自参加令人难以置信的演讲，而且我最终也有机会面对面与其中一些鼓舞人心的人见面。我已经期待它。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 28 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing Vitess 22】宣布健身22</title>
      <link>https://www.cncf.io/blog/2025/04/29/announcing-vitess-22/</link>
      <description>【&lt;p&gt;The Vitess maintainers are happy to announce the release of version &lt;em&gt;22.0.0&lt;/em&gt;, along with version &lt;em&gt;2.15.0&lt;/em&gt; of the Vitess Kubernetes Operator. This release is the first to benefit from a 6-month-long development cycle, after our &lt;a href=&#34;https://github.com/vitessio/enhancements/pull/12&#34;&gt;recent change to the release cadence&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Version 22.0.0 comes with significant enhancements to query serving and cluster management. These changes have allowed Vitess to be more performant and easier to operate compared to version 21. This blog post highlights some of the major changes that went into the release. For a more detailed description of the release, please refer to &lt;a href=&#34;https://github.com/vitessio/vitess/releases/tag/v22.0.0&#34;&gt;the release notes&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;——————————————————————————————————————————&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Summary&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Query Serving: &lt;/strong&gt;&lt;em&gt;Prepared statements and new VTGate metrics&lt;/em&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Cluster Management and VTOrc: &lt;/strong&gt;&lt;em&gt;Stalled-disk recovery, improved errant GTID discovery and VTOrc performance improvements&lt;/em&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Kubernetes Operator: &lt;/strong&gt;&lt;em&gt;Automated backups, Kubernetes 1.32 support, better examples&lt;/em&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Performance:&lt;/strong&gt; &lt;em&gt;Improvements compared to v21.0.0&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Query Serving&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vitess 22.0 brings a host of query‑serving enhancements focused on observability, smarter handling of prepared statements, GA support for sharded views, and feature‑complete atomic distributed transactions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class=&#34;wp-block-heading&#34;&gt;Observability&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vitess now emits metrics for query execution plans, which help you analyze execution patterns and optimize costly plans—see the&lt;a href=&#34;https://vitess.io/docs/22.0/reference/query-serving/metrics/&#34;&gt; Query Serving metrics guide&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class=&#34;wp-block-heading&#34;&gt;Prepared Statements&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We have overhauled VTGate’s prepare pipeline: prepared statements are cached as raw SQL to skip redundant parsing, and deferred execution plans are generated using actual bind values for more optimized, parameter‑aware planning.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class=&#34;wp-block-heading&#34;&gt;Views and Atomic Distributed Transactions&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sharded view support is GA now, and the atomic distributed transaction feature is complete—learn more in the&lt;a href=&#34;https://vitess.io/docs/22.0/reference/features/distributed-transaction/&#34;&gt; Distributed Transactions guide&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Cluster Management and VTOrc&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There were several performance and usability enhancements to VTOrc in the Vitess 22.0 release. It now operates more efficiently, with fewer topology service calls and better overall resource consumption.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;VTOrc now supports specifying shard ranges in the `–keyspaces-to-watch` flag, making it easier to configure in large deployments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This release also introduces stalled disk recovery to VTOrc, along with improved handling of errant GTID detection. Additionally, vttablets are now prevented from joining the replication topology if they contain errant GTIDs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Finally, we’ve added a new semi-sync monitor to VTOrc. This helps detect and unblock vttablets that are stuck waiting for semi-sync ACKs – a situation that can occur if ACKs are lost due to network issues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Kubernetes Operator&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The v22.0.0 release of Vitess comes along with the v2.15.0 release of our Kubernetes operator. This new release follows the same release cycle as Vitess. As part of this release, the officially supported Kubernetes version is v1.32.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The original implementation of automated and scheduled backups done in v2.13.0 used an empty pod running &lt;strong&gt;&lt;em&gt;vtctldclient BackupShard&lt;/em&gt;&lt;/strong&gt; to execute the backup. This approach had trade-offs, the backup process ran faster but effectively removed a serving tablet from the available tablet pool. In v2.15.0, we have changed the implementation to use a VTBackup pod instead, to be consistent with our own recommendations for production deployments and to reduce impact on availability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;All our provided examples have been enhanced to illustrate how the VitessOperator and VitessCluster can be run in two different namespaces.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://github.com/planetscale/vitess-operator/releases/tag/v2.15.0&#34;&gt;operator release notes&lt;/a&gt; to learn more about v2.15.0.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Performance&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this release, we have reduced query latency and cut memory allocations across Vitess through targeted optimizations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;gRPC Codec upgrade&lt;/strong&gt;: Vitess now uses gRPC with Codec v2 and a pooled buffer, yielding a ~3% QPS improvement and ~13% reduction in per‑request allocations.&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Normalizer AST walk reduction&lt;/strong&gt;: Merged two normalization AST passes into one, speeding VTGate’s normalizer by ~5% and cutting allocations per operation by ~5.5%.&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;AST rewriting optimization&lt;/strong&gt;: Combined RewriteAST and Normalizer into a single pass, trimming planner latency by ~2.7% and reducing allocations by ~4.3%.&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Merge‑sort avoidance on single‑shard queries&lt;/strong&gt;: VTGate now skips redundant merge sorts when only one shard is involved, eliminating unnecessary CPU work for the common single‑shard case.&lt;br&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;——————————————————————————————————————————&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Migrate and Learn More&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To ease migration from a previous version to &lt;em&gt;v22.0.0&lt;/em&gt;, it is highly recommended to read the release notes of both &lt;a href=&#34;https://github.com/vitessio/vitess/releases/tag/v22.0.0&#34;&gt;Vitess&lt;/a&gt; and the &lt;a href=&#34;https://github.com/planetscale/vitess-operator/releases/tag/v2.15.0&#34;&gt;Kubernetes Operator&lt;/a&gt;. The entire &lt;a href=&#34;https://github.com/vitessio/vitess/blob/main/changelog/22.0/22.0.0/changelog.md&#34;&gt;changelog&lt;/a&gt; for this version is available too.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It is also recommended to explore our &lt;a href=&#34;https://vitess.io/docs/22.0/&#34;&gt;documentation for &lt;em&gt;v22.0.0&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;where you can find step-by-step user guides, best practices, and tips to run Vitess.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Community&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As an open-source project, we truly appreciate feedback, insights, and contributions from our community. Whether you want to share a story, ask a question, or anything else, you can reach out to us on &lt;a href=&#34;https://github.com/vitessio/vitess&#34;&gt;GitHub&lt;/a&gt; or in our &lt;a href=&#34;http://vitess.io/slack&#34;&gt;Slack&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;——————————————————————————————————————————&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;The Vitess Maintainer Team&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; Vitess维护者很乐意宣布版本&lt;em&gt; 22.0.0 &lt;/em&gt;以及Vitess Kubernetes操作员的版本&lt;em&gt; 2.15.0 &lt;/em&gt;。此版本是我们&lt;a href =“ https://github.com/vitessio/enhancements/pull/12”之后的第一个从6个月长的开发周期中受益的版本。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;版本22.0.0对查询服务和群集管理具有重大增强功能。与版本21相比，这些更改使Vitess更具性能和更易于操作。本博客文章突出了该版本中的一些主要更改。有关版本的更详细说明，请参阅&lt;a href =“ https://github.com/vitessio/vitess/releases/tag/v22.0.0”&gt;发行说明&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; ————————————————————————————————————————— &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;摘要&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;查询服务：&lt;/strong&gt; &lt;em&gt;准备的语句和新的VTGATE指标&lt;/em&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;群集管理和VTORC：&lt;/strong&gt; &lt;em&gt;停滞磁盘恢复，改进的错误GTID发现和VTORC性能改进&lt;/em&gt; &lt;/em&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; kubernetes操作员：&lt;/strong&gt; &lt;em&gt;自动备份，kubernetes 1.32支持，更好的示例&lt;/em&gt; &lt;/em&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;性能：&lt;/strong&gt; &lt;em&gt;与V21.0.0.0 &lt;/em&gt; &lt;/li&gt;相比&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;查询服务&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Vitess 22.0带来了许多查询性增强功能，重点是可观察性，更明智地处理准备的陈述，对碎片视图的GA支持以及功能 - 完整的原子分布式交易。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class =“ wp-block头”&gt;可观察性&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Vitess现在发布了查询执行计划的指标，可以帮助您分析执行模式并优化昂贵的计划 - 请参阅&lt;a a href =“ https://vitess.io/docs/22.0/2.0/reference/query/query-serving/query-serving/query-serving/metrics/metrics/metrics/”&gt; QUERY SERVing Metrics指南&lt;/a&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt;。&#xA;&#xA;&#xA;&#xA;&lt;h5 class =“ wp-block头”&gt;准备的语句&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们已经大修了Vtgate的准备管道：准备好的陈述作为RAW SQL缓存，以跳过冗余解析，并使用实际绑定值来生成延期的执行计划，以进行更优化的参数意识计划。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class =“ wp-block头”&gt;视图和原子分布式交易&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;碎片视图支持现在是GA，并且原子分布式事务功能已完成 - 在&lt;a a href =“ https://vitess.io/docs/22.0/reference/features/distributed-transaction/”&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-heading”&gt;集群管理和VTORC &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在Vitess 22.0版本中，VTORC有几种性能和可用性提高。现在，它的运行效率更高，拓扑服务较少和更好的总体资源消耗。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; VTORC现在支持`–keyspaces-to中指定碎片范围-watch`标志，使得更容易在大型部署中配置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此版本还向VTORC引入了停滞的磁盘恢复，并改善了错误的GTID检测的处理。此外，如果VTTABLETS包含错误的GTID，则可以防止它们加入复制拓扑。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，我们已向VTORC添加了一个新的半同步显示器。这有助于检测并解开粘贴的vttbablets等待半同步ACKS  - 如果由于网络问题而丢失ACK，这种情况可能会发生。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; kubernetes操作员&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; V22.0.0 Vitess的释放与我们的Kubernetes操作员的v2.15.0释放相同。这个新版本遵循与Vitess相同的发行周期。作为此版本的一部分，正式支持的Kubernetes版本为v1.32。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在v2.13.0中完成的自动化和计划备份的原始实现使用了一个空的POD &lt;strong&gt; &lt;em&gt; vtctldclient backupshard &lt;/em&gt; &lt;/em&gt; &lt;/strong&gt;执行备份。这种方法进行了权衡，备份过程的运行速度更快，但有效地从可用的平板电脑池中删除了一份平板电脑。在v2.15.0中，我们更改了使用VTbackup POD的实现，以与我们自己的生产部署建议一致并减少对可用性的影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们所有提供的示例都得到了增强，以说明如何在两个不同的名称空间中运行Vitessoperator和VitessCluster。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;请参阅&lt;a href =“ https://github.com/planetscale/vitess-operator/releases/tag/v2.15.0”&gt;操作员发行笔记&lt;/a&gt;以了解有关v2.15.0的更多信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;性能&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在此版本中，我们通过目标优化减少了查询潜伏期和削减了整个Vitess的记忆分配：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; GRPC编解码器升级&lt;/strong&gt;：Vitess现在使用编解码器V2和合并缓冲液的GRPC，可提高约3％的QPS，每次要求分配降低约13％。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;标准化器AST步行减少&lt;/strong&gt;：合并两个归一化的AST逐渐变成一个，使VTGATE的标准化器加快了〜5％，每次操作分配〜5.5％。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; AST重写优化&lt;/strong&gt;：将重写和标准式组合成单个通过，将计划者延迟提高〜2.7％，并将分配减少〜4.3％。&lt;br&gt; &lt;br&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;单影查询避免避免使用合并&gt; &lt;/strong&gt;：VTGATE现在仅涉及一个碎片时跳过冗余合并，消除了不必要的CPU在常见的单影案例中工作。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; ————————————————————————————————————————— &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;迁移并了解更多&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了简化从以前的版本迁移到&lt;em&gt; v22.0.0 &lt;/em&gt;，强烈建议阅读这两个&lt;a href =&#39;https：// github.com/vitessio/vitess/releases/tag/tag/v22.0&#34;&gt; vitess &lt;/a&gt;和&lt;a href =“ https://github.com/planetscale/planetscale/vitess-operator/releator/releases/releases/tag/tag/tag/tag/tag/tag/tag/tag/tag/tag/tag/tag/tag/tag/tag/tag/tag/tag&gt; kubernetes&#39;s&gt; Kubernetes&#39;s&gt; href =“ https://github.com/vitessio/vitess/blob/main/main/changelog/22.0/22.0.0.0.0/changelog.md”&gt; changelog &lt;/a&gt;此版本也可用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;还建议探索我们的&lt;a href =“ https://vitess.io/docs/22.0/”&gt; &lt;em&gt; v22.0.0.0.0 &lt;/em&gt; &lt;/a&gt; &lt;em&gt; &lt;em&gt;，&lt;/em&gt;的文档，您可以在其中找到逐步逐步的用户，最佳实践，最佳实践，最佳练习，vitess。&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;社区&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;作为一个开源项目，我们非常感谢我们社区的反馈，见解和贡献。无论您是想分享一个故事，问一个问题还是其他任何事情，都可以通过&lt;a href =“ https://github.com/vitessio/vitess”&gt; github &lt;/a&gt;与我们联系，或者在我们的&lt;a href =“ http://vitess.io/slack”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;——————————————————————————————————————————&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt; Vitess维护者团队&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 28 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Understanding Kubernetes Gateway API: A Modern Approach to Traffic Management】了解Kubernetes Gateway API：一种现代的交通管理方法</title>
      <link>https://www.cncf.io/blog/2025/05/02/understanding-kubernetes-gateway-api-a-modern-approach-to-traffic-management/</link>
      <description>【&lt;p&gt;Traffic management in Kubernetes can be complex, especially with modern applications composed of multiple services like frontends, APIs, and backends spread across hybrid and multi-cloud environments. As these environments grow, ensuring secure, efficient, and reliable communication between services becomes increasingly difficult.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Traditional approaches often involve combining tools like Ingress for routing, NGINX for load balancing, and NetworkPolicies for security. While effective, this fragmented setup can create operational challenges, such as managing multiple configurations, ensuring consistency across tools, scaling in dynamic environments, and maintaining uniform security policies. These complexities can slow down deployments and make it harder to adapt to the demands of fast-paced microservices environments where scalability and reliability are crucial.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Kubernetes Gateway API addresses these challenges by introducing a standardized, Kubernetes-native framework for managing traffic. Designed to extend and improve upon Ingress, it supports advanced routing, robust load balancing, enhanced security, and multi-tenancy; all with native support for Kubernetes declarative configurations. This unified approach simplifies traffic management, enabling teams to scale their applications effortlessly while maintaining operational efficiency and security.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Networking In Kubernetes&lt;/strong&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When you deploy applications in Kubernetes, they run inside a cluster made up of multiple nodes. These nodes could be virtual machines or bare-metal servers, and Kubernetes distributes your application across them using pods. A pod is the smallest deployable unit in Kubernetes, and it can move between nodes based on factors like scaling, replication, and resource availability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To connect users to your applications, Kubernetes relies on services. A service acts as a bridge between the pods running your application and the network. There are different types of services for different use cases:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;ClusterIP&lt;/strong&gt;: The default type, provides an internal IP that makes the application accessible only within the cluster.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;NodePort&lt;/strong&gt;: Exposes the service on a static port of each node’s IP, allowing limited external access.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;LoadBalancer&lt;/strong&gt;: Assigns an external IP address, making the service accessible to users outside the cluster.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For applications that need external access, the LoadBalancer&lt;strong&gt; &lt;/strong&gt;service is a common choice. However, using a separate load balancer for each application doesn’t scale well. It becomes expensive, wasteful, and difficult to manage as the number of services grows.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To solve this, Kubernetes introduced the concept of Ingress. An Ingress acts as a centralized entry point, routing incoming traffic to the correct service based on rules like URL paths or hostnames. For example, traffic to my-site.com/bills can be routed to a billing service. This eliminates the need for a load balancer for every service, making it a more efficient solution.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;However, an Ingress is just a set of rules and it requires an Ingress Controller (like NGINX or Traefik) to handle traffic and implement those rules. While Ingress simplifies networking in Kubernetes, it comes with its own set of limitations.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Limitations Of Kubernetes Ingress&lt;/strong&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now that you understand how traffic flows into your Kubernetes applications using LoadBalancers and Ingress, let’s dive into the limitations of Ingress.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While Ingress simplifies application networking in Kubernetes, it does have some limitations that can make it less effective for modern, complex setups:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Protocol Restrictions&lt;/strong&gt;: The standard Ingress is designed only for HTTP/HTTPS traffic (Layer 7). If your application uses other protocols like TCP or UDP (Layer 4), Ingress alone cannot handle them. You’ll need additional tools or combine them with Kubernetes services to enable TCP or UDP protocols.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Lack of Standardization&lt;/strong&gt;: Advanced features like load balancing and traffic routing are not part of the standard Ingress specification. Instead, they depend on the specific Ingress Controller you’re using, like NGINX or Traefik. Each controller has its own way of configuring these features, often requiring annotations or custom setups. This lack of standardization can be frustrating, especially if you’re managing multiple clusters or want to switch controllers.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Limited Extensibility&lt;/strong&gt;: Features like SSL/TLS termination, managing certificates, or integrating with tools like Cert-Manager aren’t natively handled by Ingress itself. Instead, these rely on the Ingress Controller, and the level of support varies. This can make it hard to ensure consistency, especially in multi-cluster or multi-cloud environments. For advanced functionality, like natively handling SSL/TLS without extra configuration or tools, a service mesh like Istio can be introduced. Service meshes extend Kubernetes’ capabilities by providing built-in support for tasks like SSL termination, traffic encryption, and more.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These limitations make the standard Ingress less ideal for complex or large-scale applications, especially when dealing with diverse protocols or advanced traffic control needs. Recognizing these challenges, the Kubernetes community developed the Gateway API, a more flexible and extensible solution to address the gaps in the Ingress model.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What Is The Gateway API&lt;/strong&gt;?&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Kubernetes Gateway API is a specification that standardizes how traffic routing is managed within Kubernetes clusters. It was created by the Kubernetes &lt;a href=&#34;https://github.com/kubernetes/community/tree/master/sig-network&#34;&gt;SIG-NETWORK group &lt;/a&gt;as a more flexible and powerful alternative to the limitations of the Ingress API. The Gateway API makes it easier to handle things like ingress, load balancing, service discovery, and traffic routing, and it integrates well with Kubernetes’ native resources, such as Services and Endpoints. While Kubernetes doesn’t offer a default implementation, there are several popular &lt;a href=&#34;https://gateway-api.sigs.k8s.io/implementations/&#34;&gt;open-source and commercial tools&lt;/a&gt;, like Istio and Envoy Gateway, that support the Gateway API.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;strong&gt;Gateway API &lt;/strong&gt;consists of three main components:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;GatewayClass&lt;/strong&gt;: Think of this as a template or a blueprint for setting up Gateways. It defines a group of Gateways that share the same configuration and are managed by a controller that follows the specifications of the class.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Gateway&lt;/strong&gt;: This is where the traffic handling happens. A Gateway is like an entry point to your cluster, such as a cloud load balancer, that directs incoming traffic to the appropriate destinations based on your configuration.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;HTTPRoute&lt;/strong&gt;: This is where you set the rules for how HTTP traffic gets routed. It helps map traffic from the Gateway to your backend services, such as those running in Kubernetes Pods, based on things like URL paths, headers, or hosts.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Together, these components provide a structured and flexible way to manage traffic flow and routing in a Kubernetes environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;How The Gateway API Works&lt;/strong&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;So far, we’ve covered what the Kubernetes Gateway API is, why it’s essential, and its key components. Now, let’s dive into how it works, giving you a clearer understanding of its functionality.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is a logical breakdown of each of its components and how it works:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdmJx9LoMTwpEcsmuf49DRi5H5RjaoCq6nQgJ7lL8hQcFp2Fzbb5pu6hoL08i6KlI9N_qvmw-2nEtQfCoQzzB5G7bTGVQVyAPYhg2VCXWeeKYvox1HOAh3lvehGK1sbkfNc22694w?key=Z-KPszJYAp9VyaZcAfctOhuT&#34; alt=&#34;Gateway API flow chart&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The Gateway Controller&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Similar to the Ingress Controller, the Gateway Controller is the central component that manages all Gateway resources. It is responsible for ensuring that the configurations defined in Gateway resources are implemented correctly. The Gateway Controller listens for changes in the Gateway, GatewayClass, and Route objects, then updates the network configuration accordingly to handle incoming traffic as defined. This enables the Kubernetes cluster to react to changes in routing configurations and manage traffic efficiently.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The GatewayClass&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The GatewayClass defines the behavior and configuration of Gateways in your cluster. Think of it as a template or blueprint for your Gateway resources. It specifies which controller will manage the Gateway (this could be an open-source solution like Istio or a custom implementation). The GatewayClass also contains configurations like IP pools and resource limits. The infrastructure provider is responsible for defining and managing the GatewayClass.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is an example code snippet of a GatewayClass:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: gateway.networking.k8s.io/v1&#xA;kind: GatewayClass&#xA;metadata:&#xA;  name: example-gatewayclass&#xA;spec:&#xA;  controller: example.com/gateway-controller&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This defines a GatewayClass named example-gatewayclass. It specifies the controller (example.com/gateway-controller) responsible for managing this Gateway.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Gateway&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once the GatewayClass is defined, you can create a Gateway object based on it. The Gateway object is created based on a specific GatewayClass. It defines how traffic enters the cluster and which listeners will handle the traffic (e.g., HTTP, HTTPS). A single Gateway can handle traffic for multiple applications, and these applications can share the same Gateway while still maintaining their own routing rules.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is an example code snippet of a Gateway:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: gateway.networking.k8s.io/v1&#xA;kind: Gateway&#xA;metadata:&#xA;  name: example-gateway&#xA;spec:&#xA;  gatewayClassName: example-gatewayclass&#xA;  listeners:&#xA;    - name: http&#xA;      port: 80&#xA;      protocol: HTTP&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This defines a Gateway named example-gateway, which uses the previously created example-gatewayclass. It listens on port 80 using the HTTP protocol to handle incoming traffic.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;HTTPRoute&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After setting up the Gateway, you define HTTPRoutes (or other route types, like TCPRoute) to specify how traffic should be forwarded to the services in your cluster. HTTPRoute objects define rules for routing HTTP traffic, such as matching paths, headers, or other HTTP attributes. The HTTPRoute object essentially acts as the set of instructions for how the Gateway should direct incoming traffic to specific applications or services in the Kubernetes cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is an example of how HTTPRoute is configured:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: gateway.networking.k8s.io/v1&#xA;kind: HTTPRoute&#xA;metadata:&#xA;  name: example-httproute&#xA;spec:&#xA;  hosts:&#xA;    - &#34;example.com&#34;&#xA;  rules:&#xA;    - matches:&#xA;        - path:&#xA;            type: Prefix&#xA;            value: /app&#xA;      forwardTo:&#xA;        - serviceName: app-service&#xA;          port: 80&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This defines an HTTPRoute named example-httproute, which listens for requests to example.com. It forwards requests with the path /app to the app-service on port 80.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These components work together to make it easier to manage traffic routing in Kubernetes. They give teams more control over how network traffic flows and how security is handled. The system is designed so that different teams like infrastructure providers, cluster operators, and application developers can work together smoothly without interfering with each other’s tasks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Installing and Using the Gateway API&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By now, the need for the Gateway API should be clear. Let’s move on to how you can install the Gateway API in your cluster and use it effectively to manage traffic.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Prerequisites&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To follow along you’ll need a Kubernetes Cluster with two or more nodes. You can create one by using &lt;a href=&#34;https://minikube.sigs.k8s.io/docs/start/?arch=%2Flinux%2Fx86-64%2Fstable%2Fbinary+download&#34;&gt;minikube&lt;/a&gt; or you can use one of these Kubernetes playgrounds:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://killercoda.com/&#34;&gt;Killercoda&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://labs.play-with-k8s.com/&#34;&gt;Play with Kubernetes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this tutorial, we’ll install the Kubernetes Gateway API and use it to route traffic between the frontend and backend of an e-commerce app. By the end, you’ll understand how to set up GatewayClass, Gateway, and HTTPRoute for efficient traffic management.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe9OX1aHVcj6VY3WSoO_Op9nzRcb6vQis7ksUNx136mSTDTJLbrsFUVWL4Nk7ENFeQoo3QZl0gTN-S1E-9qDBiw9cgfQRWrB4CpXtDX-i5E_yJ2Q5DRhVTZMukGccXDFGkNEiNDlg?key=Z-KPszJYAp9VyaZcAfctOhuT&#34; alt=&#34;installing the Kubernetes Gateway API&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Step 1: Install the Gateway API CRDs&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;First, install the Gateway API Custom Resource Definitions (CRDs) in our cluster:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`kubectl apply -f &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;https://github.com/kubernetes-sigs/gateway-api/releases/latest/download/standard-install.yaml`&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Verify the installation:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`kubectl get crds | grep gateway`&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Step 2: Deploy a Gateway Controller&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Gateway API doesn’t come with a built-in controller. You can use an existing one like Istio, Kong, or Envoy Gateway. For example, to install the Istio Gateway Controller, run:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`istioctl install –set profile=default&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;kubectl apply -f &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/istio/istio/releases/latest/download/gateway.yaml&#34;&gt;https://github.com/istio/istio/releases/latest/download/gateway.yaml&lt;/a&gt;`&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Step 3: Define a GatewayClass&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The GatewayClass defines how gateways should behave, similar to an IngressClass.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```&#xA;apiVersion: gateway.networking.k8s.io/v1&#xA;kind: GatewayClass&#xA;metadata:&#xA;  name: my-gateway-class&#xA;spec:&#xA;  controllerName: istio.io/gateway-controller&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apply it:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`kubectl apply -f gatewayclass.yaml`&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Step 4: Create a Gateway&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Gateway is the actual network entry point handling traffic.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```&#xA;apiVersion: gateway.networking.k8s.io/v1&#xA;kind: Gateway&#xA;metadata:&#xA;  name: ecommerce-gateway&#xA;spec:&#xA;  gatewayClassName: my-gateway-class&#xA;  listeners:&#xA;  - name: http&#xA;    protocol: HTTP&#xA;    port: 80&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apply it:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`kubectl apply -f gateway.yaml`&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Step 5: Define HTTP Routes&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Routes define how incoming requests are forwarded to backend services.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Routes define how incoming requests are forwarded to backend services.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```&#xA;apiVersion: gateway.networking.k8s.io/v1&#xA;kind: HTTPRoute&#xA;metadata:&#xA;  name: frontend-to-backend&#xA;spec:&#xA;  parentRefs:&#xA;  - name: ecommerce-gateway&#xA;  rules:&#xA;  - matches:&#xA;    - path:&#xA;        type: Prefix&#xA;        value: &#34;/api&#34;&#xA;    backendRefs:&#xA;    - name: backend-service&#xA;      port: 8080&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apply it:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`kubectl apply -f httproute.yaml`&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Step 6: Deploy Frontend and Backend Services&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For simplicity, deploy a basic frontend and backend.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Frontend Service:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```&#xA;apiVersion: v1&#xA;kind: Service&#xA;metadata:&#xA;  name: frontend-service&#xA;spec:&#xA;  selector:&#xA;    app: frontend&#xA;  ports:&#xA;    - protocol: TCP&#xA;      port: 80&#xA;      targetPort: 3000&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Backend Service:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```&#xA;apiVersion: v1&#xA;kind: Service&#xA;metadata:&#xA;  name: backend-service&#xA;spec:&#xA;  selector:&#xA;    app: backend&#xA;  ports:&#xA;    - protocol: TCP&#xA;      port: 8080&#xA;      targetPort: 8080&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apply both:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```&#xA;kubectl apply -f frontend-service.yaml&#xA;kubectl apply -f backend-service.yaml&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Step 7: Test the Setup&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Retrieve the external IP of your Gateway:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```&#xA;kubectl get gateway ecommerce-gateway&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Send a request:&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;```&#xA;curl http://&amp;lt;GATEWAY-IP&amp;gt;/api&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If everything is set up correctly, the request should be routed to the backend service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Gateway API vs. Kubernetes Ingress&lt;/strong&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now that we have a clear understanding of how the Gateway API works, let’s explore the key differences between Gateway API and Kubernetes Ingress, both of which are used for traffic management in Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Gateway API&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Ingress&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;br&gt;&lt;strong&gt;Protocol Support&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Supports more protocols like gRPC, HTTP/2, and WebSockets, enabling complex traffic management.&lt;/td&gt;&lt;td&gt;Primarily supports HTTP and HTTPS traffic.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;br&gt;&lt;strong&gt;Routing Complexity&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Allows complex routing, including weighted traffic splitting and advanced rules for different services and protocols.&lt;/td&gt;&lt;td&gt;Supports basic routing rules for HTTP/HTTPS traffic.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;br&gt;&lt;strong&gt;Ease of Management&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Makes it easy for cluster operators to create and manage multiple Gateway classes, deploy new gateways, and test configurations before production deployment.&lt;/td&gt;&lt;td&gt;Ingress is simpler but lacks the advanced features for managing multiple gateways or complex configurations.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;br&gt;&lt;strong&gt;Extensibility&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;br&gt;More extensible with the ability to define new protocols and routing rules, making it suitable for complex networking scenarios.&lt;/td&gt;&lt;td&gt;&lt;br&gt;Limited extensibility, primarily focused on HTTP-based use cases.&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;Use Case&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;Ideal for managing complex networking scenarios and multiple services with diverse requirements.&lt;/td&gt;&lt;td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;Best suited for simpler applications with basic HTTP/HTTPS routing needs.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To sum it up, the Gateway API offers a more flexible and scalable way to manage traffic in Kubernetes compared to the traditional Ingress. With new resources like GatewayClass, Gateway, and HTTPRoute, it gives teams more control over routing, security, and infrastructure. Its role-oriented design enables collaboration between different teams, offering greater flexibility in defining networking policies and handling complex traffic scenarios. Plus, with support for multiple protocols and advanced features like weighted routing, the Gateway API is a powerful tool for handling traffic in modern Kubernetes environments.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; Kubernetes中的流量管理可能很复杂，尤其是在由跨越，API和后端等多个服务组成的现代应用程序中，遍布混合和多云环境。随着这些环境的增长，服务之间的安全，高效和可靠的沟通变得越来越困难。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;传统方法通常涉及组合工具，例如用于路由的工具，用于负载平衡的NGINX以及用于安全性的网络。虽然有效，但这种零散的设置可以创建运营挑战，例如管理多种配置，确保跨工具的一致性，在动态环境中扩展以及维护统一的安全策略。这些复杂性可以放慢部署，使得很难适应快速节奏的微服务环境的需求，在这些环境中，可伸缩性和可靠性至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kubernetes Gateway API通过引入一个标准化的Kubernetes-intative框架来管理流量，从而解决了这些挑战。它旨在扩展和改进入口，支持高级路由，强大的负载平衡，增强的安全性和多租金；全部支持Kubernetes声明性配置。这种统一的方法简化了流量管理，使团队能够轻松地扩展其应用程序，同时保持运营效率和安全性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ wp-block头”&gt; &lt;strong&gt; kubernetes中的网络&lt;/strong&gt; &lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当您在kubernetes中部署应用程序时，它们在由多个节点组成的集群中运行。这些节点可能是虚拟机或裸机服务器，而Kubernetes使用PODS将您的应用程序分发。 POD是Kubernetes中最小的可部署单元，它可以基于缩放，复制和资源可用性等因素在节点之间移动。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了将用户连接到您的应用程序，Kubernetes依赖于服务。服务充当运行您应用程序和网络的POD之间的桥梁。对于不同用例，有不同类型的服务：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; clusterip &lt;/strong&gt;：默认类型，提供了一个内部IP，使该应用程序仅在集群中访问。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; nodeport &lt;/strong&gt;：在每个节点IP的静态端口上公开服务，允许有限的外部访问。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; loadBalancer &lt;/strong&gt;：分配外部IP地址，使群集以外的用户可以访问该服务。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于需要外部访问的应用程序，LoadBalancer &lt;strong&gt; &lt;/strong&gt;服务是一个常见的选择。但是，为每个应用程序使用单独的负载平衡器并不能很好地扩展。随着服务数量的增加，它变得昂贵，浪费且难以管理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了解决这个问题，Kubernetes介绍了入口的概念。入口充当集中入口点，将传入的流量路由到基于服务的正确服务关于URL路径或主机名之类的规则。例如，可以将My-site.com/bills的流量路由到计费服务。这消除了每项服务的负载平衡器的需求，使其成为更有效的解决方案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，入口只是一组规则，它需要一个入口控制器（例如nginx或traefik）来处理流量并实施这些规则。虽然Ingress简化了Kubernetes中的网络，但它具有自己的一套限制。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ wp-block头”&gt; &lt;strong&gt; kubernetes intress &lt;/strong&gt; &lt;/h1&gt;的限制&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在您了解了使用Loadbalancer和Ingress流量如何流入Kubernetes应用程序，让我们深入研究入口的局限性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然入学简化了Kubernetes中的应用程序网络，但它确实有一些限制，可以使其对现代，复杂的设置有效：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;协议限制&lt;/strong&gt;：标准入口仅针对HTTP/HTTPS流量设计（第7层）。如果您的应用程序使用其他协议，例如TCP或UDP（第4层），则仅入口就无法处理它们。您需要其他工具或将它们与Kubernetes服务相结合以启用TCP或UDP协议。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;缺乏标准化&lt;/strong&gt;：诸如负载平衡和流量路由之类的高级功能不是标准入口规范的一部分。相反，它们取决于您正在使用的特定入口控制器，例如Nginx或Traefik。每个控制器都有自己的配置这些功能的方式，通常需要注释或自定义设置。缺乏标准化可能会令人沮丧，尤其是当您管理多个集群或想切换控制器时。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;有限的可扩展性&lt;/strong&gt;：诸如SSL/TLS终止，管理证书或与Cert-Manager这样的工具集成之类的功能并没有由Ingress本身本地处理。相反，这些依赖于入口控制器，并且支持级别各不相同。这可能使难以确保一致性，尤其是在多群众或多云环境中。对于高级功能，例如无需额外配置或工具的本地处理SSL/TLS，就可以引入像ISTIO这样的服务网格。服务网格通过为SSL终止，流量加密等提供内置支持来扩展Kubernetes的功能。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些限制使标准入口降低了复杂或大规模应用程序的理想选择，尤其是在处理各种协议或高级交通控制需求时。认识到这些挑战，Kubernetes社区开发了Gateway API，这是一种更灵活，更可扩展的解决方案，以解决入口模型中的空白。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ wp-block头”&gt; &lt;strong&gt;网关API &lt;/strong&gt;？&lt;/h1&gt;是什么&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kubernetes Gateway API是一项规范，标准化了如何在Kubernetes集群中管理流量路由。它是由kubernetes &lt;a href =“ https://github.com/kubernetes/community/tree/master/master/sig-network”&gt; sig-network group &lt;/a&gt;作为Ingress API限制的更灵活，更有力的替代方案。网关API使处理进入，负载平衡，服务发现和流量路由之类的东西变得更加容易，并且与Kubernetes的本机资源（例如服务和端点）很好地集成在一起。虽然Kubernetes没有提供默认实现，但有几个流行的&lt;a href =“ https://gateway-api.sigs.k8s.io/implementations/”&gt; Open-Source和商业工具&lt;/a&gt;，例如Istio和Envoy Gateway，支持Gateway API。&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;网关API &lt;/strong&gt;由三个主要组成部分组成：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; GatewayClass &lt;/strong&gt;：将其视为模板或用于设置网关的蓝图。它定义了一组共享相同配置的网关，并由遵循类规范的控制器管理。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;门户&lt;/strong&gt;：这是交通处理的地方。网关就像您的集群的入口点，例如云负载平衡器，它根据您的配置将传入的流量引导到适当的目的地。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; httproute &lt;/strong&gt;：这是您设置HTTP流量如何路由的规则。它有助于根据URL路径，标题或主机等事物来绘制从网关到后端服务的流量，例如在Kubernetes Pod中运行的服务。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一起，这些组件提供了一种结构化且灵活的方式来管理Kubernetes环境中的交通流量和路由。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ wp-block头”&gt; &lt;strong&gt;网关API如何工作&lt;/strong&gt; &lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;到目前为止，我们已经介绍了Kubernetes Gateway API的内容，为什么它是必不可少的及其关键组件。现在，让我们研究它的工作原理，使您对其功能有更清晰的了解。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是其每个组件及其工作原理的逻辑分解：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxdmjx9lomtwpecsmuf49dri5h5rjaocq6nqgj7lll8hqcfpppp2fpp2fzbb5pu6ho L08I6KLI9N_QVMW-2NETQFCOQZZB5G7BTGVQVYAPYHG2VCXWEEKYKYKIKYKYVOX1HOAH3LVEHGK1SBKFNC22694W？ alt =“ Gateway API流程图” referrerPolicy =“ no-treferrer”&gt; &lt;/figife&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;网关控制器&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;类似于入口控制器，网关控制器是管理所有网关资源的中心组件。它负责确保正确实现网关资源中定义的配置。网关控制器聆听网关，网关和路由对象的更改，然后相应地更新网络配置，以处理定义的传入流量。这使Kubernetes群集能够对路由配置的变化做出反应并有效地管理流量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt; GatewayClass &lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; GatewayClass定义了群集中网关的行为和配置。将其视为您网关资源的模板或蓝图。它指定哪个控制器将管理网关（这可能是ISTIO或自定义实现的开源解决方案）。 GatewayClass还包含IP池和资源限制之类的配置。基础架构提供商负责定义和管理GatewayClass。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是GatewayClass的示例代码段：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：gateway.networking.k8s.io/v1&#xA;善良：GatewayClass&#xA;元数据：&#xA;  姓名：示例gatewayclass&#xA;规格：&#xA;  控制器：example.com/gateway-controller&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这定义了一个名为example-gatewayclass的网关频道。它指定控制器（example.com/gateway-controller）负责管理此网关。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;门户&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;定义了GatewayClass后，您可以基于它创建一个网关对象。网关对象是基于特定的网关频道创建的。它定义了流量如何进入集群，并且哪些听众将处理流量（例如HTTP，HTTPS）。单个网关可以处理多个应用程序的流量，这些应用程序可以共享相同的网关，同时仍维护自己的路由规则。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是网关的示例代码段：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：gateway.networking.k8s.io/v1&#xA;善良：网关&#xA;元数据：&#xA;  姓名：示例门户&#xA;规格：&#xA;  GatewayClassName：示例GatewayClass&#xA;  听众：&#xA;     - 名称：http&#xA;      港口：80&#xA;      协议：http&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这定义了一个名为“示例门户”的网关，该网关使用先前创建的示例gatewayclass。它使用HTTP协议在端口80上听取端口的聆听来处理传入流量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt; httproute &lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;设置网关后，您定义了HTTPROUTES（或其他路由类型，例如TCPROUTE），以指定应如何将流量转发到群集中的服务。 HTTPROUTE对象定义了路由HTTP流量的规则，例如匹配路径，标题或其他HTTP属性。 HTTPROUTE对象本质上是网关应如何将传入流量引导到Kubernetes群集的特定应用程序或服务的指令集。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是HTTPROUTE如何配置的示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：gateway.networking.k8s.io/v1&#xA;类型：httproute&#xA;元数据：&#xA;  名称：示例httproute&#xA;规格：&#xA;  主持人：&#xA;     - “ example.com”&#xA;  规则：&#xA;     - 匹配：&#xA;        - 小路：&#xA;            类型：前缀&#xA;            值： /app&#xA;      向前：&#xA;         -  ServiceName：应用程序服务&#xA;          港口：80&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这定义了一个名为example-httproute的httproute，该示例聆听请求示例.com。它将路径 /应用程序的请求转发到端口80上的应用程序服务。&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些组件共同起作用，使管理Kubernetes中的流量路由变得更加容易。他们为团队提供了更多控制网络流量流的方式以及如何处理安全性的控制权。该系统的设计使得基础架构提供商，集群操作员和应用程序开发人员等不同团队可以平稳地合作而无需干扰彼此的任务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;安装和使用网关API &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;到目前为止，应该清楚网关API的需求。让我们继续前进如何将网关API安装在群集中并有效地管理流量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;先决条件&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要跟随您需要一个带有两个或两个节点的kubernetes群集。您可以使用&lt;a href =“ https://minikube.sigs.k8s.io/docs/start/?ark=%2flinux%2FX86-64%2FSTABLE；&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://killercoda.com/”&gt; killercoda &lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href =“ https://labs.play-with-k8s.com/”&gt;与kubernetes一起玩&lt;/a&gt; &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在本教程中，我们将安装Kubernetes Gateway API，并使用它在电子商务应用程序的前端和后端之间进行路由流量。最后，您将了解如何设置GatewayClass，Gateway和Httproute以进行有效的流量管理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxe9ox1ahvcj6vy3wsoo_op9nzrcb6vqis7ks7ksnx136mstdtttttttjlbrsfuvwlbrsfuvwl 4NK7ENFEQOO3QZL0GTN-S1E-9QDBIW9CGFQRWRB4CPXTDX-I5E_YJ2Q5DRHVTZMUKGCCXDFGKNEINDLG？ alt =“安装Kubernetes Gateway API” referrerpolicy =“ no-referrer”&gt; &lt;/figifer&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;首先，在我们的集群中安装网关API自定义资源定义（CRD）：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`kubectl应用-f &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; https：//github.com/kubernetes-sigs/gateway-api/earsees/lestest/dlownload/download/standard-install.yaml` &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;验证安装：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`kubectl获取CRD | Grep Gateway` &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-teading”&gt;步骤2：部署网关控制器&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网关API不带有内置控制器。您可以使用ISTIO，Kong或Envoy Gateway等现有的。例如，要安装ISTIO网关控制器，请运行：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`istioctl install –set profile = default &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubectl应用-f &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://github.com/istio/istio/releases/latest/download/download/gateway.yaml”&gt; https://github.com/istio/istio/istio/releases/releases/latest/latest/latest/download/download/gateway.yaml.yaml.yaml &lt;/aaml &lt;/a&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block-neading”&gt;步骤3：定义网关级&#xA;&#xA;&#xA;&#xA;&lt;p&gt; GatewayClass定义了网关的表现，类似于IngressClass。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;```&#xA;apiversion：gateway.networking.k8s.io/v1&#xA;善良：网关班级&#xA;元数据：&#xA;  名称：My-Gateway级&#xA;规格：&#xA;  ControllerName：istio.io/gateway-controller&#xA;````````&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;应用它：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`kubectl应用-f gatewayclass.yaml` &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt;步骤4：创建网关&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网关是实际网络入口处处理流量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;```&#xA;apiversion：gateway.networking.k8s.io/v1&#xA;善良：网关&#xA;元数据：&#xA;  姓名：电子商务门口&#xA;规格：&#xA;  GatewayClassName：My-Gateway-Class&#xA;  听众：&#xA;   - 名称：http&#xA;    协议：http&#xA;    港口：80&#xA;````````&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;应用它：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`kubectl应用-f gateway.yaml` &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;步骤5：定义http路由&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;路线定义了传入请求是如何转发到后端服务的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;路线定义了传入请求是如何转发到后端服务的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;```&#xA;apiversion：gateway.networking.k8s.io/v1&#xA;类型：httproute&#xA;元数据：&#xA;  名称：前端到后世&#xA;规格：&#xA;  parentrefs：&#xA;   - 名称：电子商务门道&#xA;  规则：&#xA;   - 匹配：&#xA;    - 小路：&#xA;        类型：前缀&#xA;        价值：“/api”&#xA;    Backendrefs：&#xA;     - 名称：后端服务&#xA;      端口：8080&#xA;````````&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;应用它：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;`kubectl应用-f httproute.yaml` &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-heading”&gt;步骤6：部署前端和后端服务&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为简单起见，部署基本前端和后端。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;前端服务：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;```&#xA;apiversion：v1&#xA;善良：服务&#xA;元数据：&#xA;  名称：前端服务&#xA;规格：&#xA;  选择器：&#xA;    应用：前端&#xA;  端口：&#xA;     - 协议：TCP&#xA;      港口：80&#xA;      TargetPort：3000&#xA;````````&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;后端服务：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;```&#xA;apiversion：v1&#xA;善良：服务&#xA;元数据：&#xA;  名称：后端服务&#xA;规格：&#xA;  选择器：&#xA;    应用：后端&#xA;  端口：&#xA;     - 协议：TCP&#xA;      端口：8080&#xA;      TargetPort：8080&#xA;````````&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;同时应用：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;```&#xA;kubectl apply -f frontend -service.yaml&#xA;kubectl apply -f backend -service.yaml&#xA;````````&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt;步骤7：测试设置&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;检索网关的外部IP：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;```&#xA;kubectl获取网关电子商务门道&#xA;````````&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;发送请求：&lt;br&gt; &lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;```&#xA;curl http：// &lt;Gateway-ip&gt;/api&#xA;````````&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果正确设置了所有内容，则应将请求路由到后端服务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ wp-block头”&gt; &lt;strong&gt;网关API与Kubernetes入口&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，我们已经清楚地了解了网关API的工作原理，让我们探索Gateway API和Kubernetes Ingress之间的关键差异，这两者都用于Kubernetes中的交通管理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figie class =“ wp-block-table”&gt; &lt;table class =“固定 -  layout”&gt; &lt;tbody&gt; &lt;ttry&gt; &lt;td&gt; &lt;td&gt; &lt;strong&gt;特征&lt;/strong&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;std&gt; &lt;strong&gt;网关API &lt;/strong&gt; &lt;/td&gt; &lt;td&gt; &lt;stry&gt; intress &lt;/strong&gt; &lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;td&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;协议支持&lt;/strong&gt; &lt;/td&gt; &lt;td&gt;支持更多的协议，例如GRPC，HTTP/2，HTTP/2和Websocket，以及使复杂的流量管理和支持复杂的流量管理。流量。&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;br&gt; &lt;br&gt; &lt;brang&gt;路由复杂度&lt;/strong&gt; &lt;/td&gt; &lt;td&gt;允许复杂的路由，包括加权流量分配和针对不同服务和协议的高级规则。&lt;/td&gt; &lt;td&gt;支持HTTP/TTP/TDP的基本路由规则。管理&lt;/strong&gt; &lt;/td&gt; &lt;td&gt;使集群操作员可以轻松地创建和管理生产部署之前的多个网关类，部署新网关和测试配置。&lt;/td&gt; &lt;td&gt; &lt;td&gt;入口更简单，但缺少用于管理多个网关或复杂复杂的高级功能配置。&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;可扩展性&lt;/strong&gt; &lt;/td&gt; &lt;td&gt; &lt;td&gt; &lt;br&gt;更可扩展的能力可以定义新协议和路由规则，使其适用于复杂的网络场景。&lt;/td&gt;案例。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;用例&lt;/strong&gt; &lt;/strong&gt; &lt;/td&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;是管理复杂的网络场景和具有多种服务的多元化服务。 http/https路由需求。&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ wp-block头”&gt; &lt;strong&gt;结论&lt;/strong&gt; &lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;总结一下，与传统入口相比，Gateway API提供了一种更灵活，更可扩展的方法来管理Kubernetes的流量。借助GatewayClass，Gateway和Httproute等新资源，它为团队提供了对路由，安全性和基础架构的更多控制。其面向角色的设计使不同团队之间的合作可以在定义网络政策和处理复杂的流量方案方面具有更大的灵活性。另外，在支持多个协议和高级功能（例如加权路由）的情况下，网关API是在现代Kubernetes环境中处理流量的强大工具。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 01 May 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Protecting NATS and the integrity of open source: CNCF’s commitment to the community】保护NAT和开源的完整性：CNCF对社区的承诺</title>
      <link>https://www.cncf.io/blog/2025/05/01/protecting-nats-and-the-integrity-of-open-source-cncfs-commitment-to-the-community/</link>
      <description>【&lt;p&gt;&lt;strong&gt;&lt;em&gt;Updated May 1, 2025&lt;/em&gt;: CNCF and Synadia have come to an agreement to ensure that NATS continues to thrive as a healthy open source project within CNCF, with Synadia’s continued support and involvement. Please see our &lt;a href=&#34;https://www.cncf.io/announcements/2025/05/01/cncf-and-synadia-align-on-securing-the-future-of-the-nats-io-project/&#34;&gt;joint announcement&lt;/a&gt; for more information.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Updated: April 28, 2025 with additional information about contents of Synadia’s written&amp;nbsp;proposal and CNCF’s $10,000 reimbursement to Synadia for trademark legal expenses&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When a company contributes a project to the Cloud Native Computing Foundation (CNCF), it’s not just sharing code—it’s making a commitment to the open source community. It’s a pledge to uphold open collaboration, shared community ownership, and neutral governance. The CNCF exists to protect these values and principles—ensuring no single entity can dominate, relicense, or claw back what has been given to the community. This principled stewardship fosters trust, diverse contributions, and long-term sustainability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Those commitments and principles are under threat. Synadia, the original donor of the&lt;a href=&#34;https://nats.io/&#34;&gt; NATS&lt;/a&gt; project, has notified CNCF of its intention to “withdraw” the NATS project from the foundation and “adopt the Business Source License (BUSL) for the NATS.io server —a &lt;strong&gt;non-open source license&lt;/strong&gt; that restricts user freedoms and undermines years of open development.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s be clear: this is not a typical license change or fork. It’s an attempt to “take back” a mature, community-driven open source project and convert it into a proprietary product—after years of growth and collaboration under open governance and CNCF’s stewardship.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Linux Foundation and the CNCF have &lt;a href=&#34;https://www.linuxfoundation.org/blog/how-open-source-foundations-protect-the-licensing-integrity-of-open-source-projects&#34;&gt;protected the licensing integrity of open source projects before&lt;/a&gt;. There are proper ways for companies to fork projects and take another direction based on business needs. For example, the &lt;a href=&#34;https://grafana.com/blog/2022/03/30/qa-with-our-ceo-about-grafana-mimir/&#34;&gt;vendor Grafana forked the CNCF Cortex project under the new name Mimir&lt;/a&gt; while the original Cortex project continues to be maintained by the community within CNCF. Synadia’s actions here are markedly different. Rather than creating a fork of NATS under a new name, Synadia wants to unilaterally seize control of the project’s community-owned assets.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Synadia’s recent actions&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Synadia-affiliated maintainers appear to have held a private vote to “exit CNCF” (see &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/NATS.io%20Maintainer%20Minutes%20-%20March%202025.pdf&#34;&gt;meeting minutes&lt;/a&gt; and &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Proposal%20to%20exit%20NATS%20from%20CNCF.pdf&#34;&gt;exit proposal&lt;/a&gt;) without transparency, without a clear transition plan, and without engaging the broader contributor community that has helped shape NATS.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The exit proposal makes clear that Synadia seeks to “retain &lt;strong&gt;complete and exclusive governance&lt;/strong&gt; over the project and its future direction,” further asserting that Synadia “will remain the &lt;strong&gt;sole owner &lt;/strong&gt;of the NATS.io trademark and intellectual property” and “request[ing] the return of the NATS.io domain registration, as well as sole administrative control over the GitHub organization.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In a further escalation, Synadia’s legal counsel &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Cease%20and%20Demand%20Letter%20from%20Synadia%20Counsel.pdf&#34;&gt;demanded in writing&lt;/a&gt; that CNCF hand over “full control of the &lt;strong&gt;nats.io domain name&lt;/strong&gt; and the &lt;strong&gt;nats-io GitHub repository&lt;/strong&gt; &lt;strong&gt;within two weeks&lt;/strong&gt;”, a particularly aggressive timeline given that the proposal had not yet been submitted to the CNCF Technical Oversight Committee (TOC) or shared with the broader community. These demands came despite the fact that:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Synadia &lt;strong&gt;committed in writing&lt;/strong&gt; to transfer the NATS trademark to CNCF as part of the original donation;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CNCF provided &lt;strong&gt;substantial financial, marketing, legal, and technical support&lt;/strong&gt; to the NATS project for more than seven years;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The NATS brand has become synonymous with CNCF and its promise of vendor-neutral governance.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The NATS domain name and GitHub repository are assets that serve as community infrastructure and have been managed by CNCF since the project’s acceptance in 2018.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The demand letter also &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Cease%20and%20Demand%20Letter%20from%20Synadia%20Counsel.pdf&#34;&gt;disputed the enforceability of CNCF’s project and trademark policies&lt;/a&gt;—policies that all CNCF member companies, including Synadia, agreed to in the membership contract they signed. Synadia claims that CNCF’s governance documents are “too vague” to apply to the NATS project—despite a clear statement in the &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/charter.md#11-ip-policy&#34;&gt;CNCF Charter&lt;/a&gt; that “Any project that is added to the CNCF must have ownership of its trademark and logo assets transferred to the Linux Foundation.”&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Proposal%20to%20exit%20NATS%20from%20CNCF.pdf&#34;&gt;exit proposal&lt;/a&gt; also outlines Synadia’s relicensing plans: “Upon leaving CNCF, Synadia will adopt the [BUSL] for the NATS.io server.” “This change in licensing does not signal a departure from our commitment to the open-source community,” Synadia indicated its “plan to specify the Apache License as the ‘Change License’ in the [BUSL].”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It’s important to understand that under the BUSL, regardless of which “change license” is specified, the code would be subject to significant commercial restrictions and would not be licensed as open source until after a significant delay, which could be up to 4 years.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF has offered multiple paths that would allow Synadia to pursue its goals while respecting open source principles and community governance. Synadia is free to walk away from contributing to the existing NATS project. They’re also free to fork NATS and build a proprietary offering under a new name. What they &lt;strong&gt;can’t&lt;/strong&gt; do is unilaterally claw back a community project and its infrastructure, assets, and branding.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Synadia has unfortunately declined to work with us on an appropriate option that respects open source principles and CNCF community governance processes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In a further escalation, Synadia’s legal counsel sent a &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Cease%20and%20Demand%20Letter%20from%20Synadia%20Counsel.pdf&#34;&gt;letter challenging the enforceability of CNCF’s project and trademark policies&lt;/a&gt;—policies that all CNCF member companies, including Synadia, agreed to in the membership contract they signed. Synadia claims that CNCF’s governance documents are “too vague” to apply to the NATS project—despite a clear statement in the &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/charter.md#11-ip-policy&#34;&gt;CNCF Charter&lt;/a&gt; that “Any project that is added to the CNCF must have ownership of its trademark and logo assets transferred to the Linux Foundation.”&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Meanwhile, Synadia-affiliated maintainers appear to have held a private vote to “exit CNCF” (see &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/NATS.io%20Maintainer%20Minutes%20-%20March%202025.pdf&#34;&gt;meeting minutes&lt;/a&gt; and &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Proposal%20to%20exit%20NATS%20from%20CNCF.pdf&#34;&gt;exit proposal&lt;/a&gt;) without transparency, without a clear transition plan, and without engaging the broader contributor community that has helped shape NATS.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In short: Synadia is attempting to convert a successful open source project into a closed, commercial product—and take the NATS community’s name, trust, and infrastructure with it. Imagine if Google tried to take back Kubernetes after all these years of it being a neutral open source and community-driven project.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;CNCF IP and Trademarks&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Open source foundations exist in part to protect the ecosystem from unilateral license changes and other vendor-driven rug-pulls. That’s why CNCF, per its charter (&lt;a href=&#34;https://github.com/cncf/foundation/blob/main/charter.md#11-ip-policy&#34;&gt;Section 11a&lt;/a&gt;), requires all contributed projects to transfer trademark and logo ownership to the Linux Foundation. This ensures that no single vendor can later assert control of the project through trademark rights.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Synadia’s CEO, as one of the original members of the CNCF Governing Board, has been aware of this policy from the start.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When NATS was contributed in 2018, Synadia had already filed for trademark registrations on both the NATS name and logo. Synadia’s CEO explicitly committed—in writing—to transfer those trademarks upon the project’s acceptance into CNCF. However, a trademark dispute with Major League Baseball (MLB) over the name “NATS” (related to the Washington Nationals) delayed the transfer.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To resolve the issue, CNCF paid for legal counsel to work with Synadia’s trademark attorneys throughout 2018–2019. When proposed settlement terms threatened to limit community use, CNCF rejected them. CNCF then presented Synadia with two clear paths:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Rename the open source project and retain “NATS” as a commercial brand for Synadia.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Resolve the dispute with MLB and transfer the marks to CNCF post-settlement.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Synadia chose the latter. Once the dispute was resolved, Synadia requested and was paid $10,000 as a reimbursement from CNCF for Synadia’s NATS trademark registration legal expenses. While the LF originally sent a check for the trademark expenses, at Synadia’s request, that check was cancelled and an ACH payment was made. The ACH payment was received by Synadia as can be seen in the screen shot below.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1220&#34; height=&#34;668&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Artboard-1.jpg&#34; alt=&#34;ACH payment screenshot&#34; class=&#34;wp-image-130836&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Artboard-1.jpg 1220w, https://www.cncf.io/wp-content/uploads/2025/04/Artboard-1-300x164.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/Artboard-1-1024x561.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/Artboard-1-768x421.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/Artboard-1-900x493.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/Artboard-1-365x200.jpg 365w, https://www.cncf.io/wp-content/uploads/2025/04/Artboard-1-731x400.jpg 731w&#34; sizes=&#34;auto, (max-width: 1220px) 100vw, 1220px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;Yet even after the issue was cleared and the payment was made, Synadia did not complete the promised transfer of the trademark registration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Today, Synadia still refuses to follow through on its promise—despite years of commitment, financial support, and active stewardship from CNCF. And despite significant contributions from hundreds of other organizations and individuals.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Not only has Synadia broken its promise; it’s now weaponizing that broken promise against the community and foundation that helped make NATS successful, by asserting that its status as the current holder of record of the NATS trademark registrations entitles it to unilaterally take over project infrastructure and assets that have been community-owned for seven years.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;CNCF support of NATS&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Since NATS joined the CNCF in 2018, the foundation has provided extensive support—financial, technical, legal, and organizational—to help the project grow, mature, and thrive as a trusted part of the cloud native ecosystem. This support has included:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Funding two third-party security audits (over $90,000)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Supporting legal and trademark work&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;KubeCon + CloudNativeCon speaking slots, keynotes, booths, and marketing inclusion&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Ongoing mentorship and contributor growth programs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thanks to this support—and the dedication of the community—NATS has flourished. Downloads, contributors, and integrations with CNCF and third-party projects (like Helm, Kubernetes, Prometheus, ClickHouse, JetStream, and more) have grown significantly. Although Synadia has indeed been a significant contributor, over 700 other organizations have also contributed to the project.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-gallery has-nested-images columns-default is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex&#34;&gt;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1620&#34; height=&#34;654&#34; data-id=&#34;130389&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44%E2%80%AFPM.jpg&#34; alt=&#34;Contributions under CNCF for past 7 years&#34; class=&#34;wp-image-130389&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM.jpg 1620w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-300x121.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-1024x413.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-768x310.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-900x363.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-495x200.jpg 495w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-991x400.jpg 991w&#34; sizes=&#34;auto, (max-width: 1620px) 100vw, 1620px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Image: Contributions under CNCF for past 7 years&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The success and reputation of NATS today is not just due to one company’s efforts—it’s the result of years of community collaboration, CNCF stewardship, and a commitment to open governance. And that’s what we’re committed to defending.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;CNCF’s response and actions to protect NATS&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF will continue to host and support NATS under its Apache-2.0 license for as long as there is community interest. We are committed to ensuring that NATS continues to be governed openly, available freely, and protected from unilateral takeover.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With this in mind, CNCF and the Linux Foundation are taking the following actions in response to Synadia’s legal demands:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Initiating a &lt;a href=&#34;https://github.com/cncf/toc/issues/1632&#34;&gt;CNCF TOC health check issue&lt;/a&gt; to evaluate the health of the project&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Making a call for support and additional maintainers&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Asking the USPTO to cancel the conflicting Synadia trademark registrations (see our &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Petition%20for%20cancellation%20NATS%20stylized%20Reg%20No%206216924%20final.pdf&#34;&gt;cancellation petitions for the NATS logo&lt;/a&gt; and &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Petition%20for%20cancellation%20NATS%20IO%20Reg%20No%206216925%20final.pdf&#34;&gt;for NATS.IO&lt;/a&gt;)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Continuing to reject Synadia’s demands that the NATS infrastructure and assets be handed over to them&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We will continue to update the CNCF community and ecosystem on our work to protect the project’s open source license and neutral governance. We are sharing this information to foster continued discussion out in the open–within the Technical Oversight Committee (TOC) and the broader community–following CNCF’s standard governance processes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can follow or comment on the &lt;a href=&#34;https://github.com/cncf/toc/issues/1632&#34;&gt;discussion about NATS’s future&lt;/a&gt; in the CNCF TOC repository. If you’re a NATS user, contributor, or stakeholder, we invite you to help us protect the future of this important project. Please consider becoming a NATS maintainer or increasing your contributions to the project.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; &lt;strong&gt; &lt;em&gt; 2025年5月1日更新：CNCF和Synadia已达成协议，以确保NAT在CNCF内的健康开源项目中继续壮成长，并在Synadia的持续支持和参与下蓬勃发展。请参阅我们的&lt;a href =“ https://www.cncf.io/announcements/2025/05/01/cncf-and-synadia-align-align-align-align-align-align-securing-the-the-the-the-future-o------------------------------------------------------------ &lt;/a&gt;有关更多信息。&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; &lt;em&gt;更新：2025年4月28日，还有有关Synadia书面提案内容的其他信息，以及CNCF的10,000美元报销，以支付Synadia的商标法律费用&lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/prong&gt;。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当公司向云本地计算基金会（CNCF）贡献项目时，它不仅是共享代码，而且还对开源社区做出了承诺。这是维护公开合作，共享社区所有权和中立治理的承诺。 CNCF的存在是为了保护这些价值观和原则，没有一个实体可以统治，重新统治，或缩减给社区的内容。这种原则的管理促进了信任，多样化的贡献和长期的可持续性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些承诺和原则受到威胁。 Synadia, the original donor of the&lt;a href=&#34;https://nats.io/&#34;&gt; NATS&lt;/a&gt; project, has notified CNCF of its intention to “withdraw” the NATS project from the foundation and “adopt the Business Source License (BUSL) for the NATS.io server —a &lt;strong&gt;non-open source license&lt;/strong&gt; that restricts user freedoms and undermines years of open development.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们清楚：这不是典型的许可证更改或叉子。这是一种试图“收回”一个成熟的，社区驱动的开源项目并将其转换为专有产品 - 在公开治理和CNCF的管理下的增长和协作之后。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Linux基金会和CNCF具有&lt;a href =“ https://www.linuxfoundation.org/blog/blog/how-open-source-foundations-protect-protect-protect-licensing-incensing-integrity-open-source-projects-- protinally-open-source-projects”&gt;在&lt;/a&gt;之前推动了开放式启动项目的许可完整性。公司有适当的方法可以根据业务需求进行项目并采取另一个方向。 For example, the &lt;a href=&#34;https://grafana.com/blog/2022/03/30/qa-with-our-ceo-about-grafana-mimir/&#34;&gt;vendor Grafana forked the CNCF Cortex project under the new name Mimir&lt;/a&gt; while the original Cortex project continues to be maintained by the community within CNCF. Synadia在这里的行动明显不同。 Synadia并没有以新名称创建一小块NAT，而是希望单方面抓住该项目的社区拥有的资产。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt; Synadia的最新动作&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Synadia-cropliatied Mainters似乎已经举行了私人投票来“退出CNCF”（请参阅​​&lt;a a href =“ https://github.com/cncf/foundation/blob/main/main/main/main/documents/nats/nats.io%20mint.20minutes;g分钟&lt;/a&gt;和&lt;a href =“ https://github.com/cncf/foundation/blob/main/main/documents/nats/nats/proposal%20to%20to%20exit%20nats%20nats%20from%20cncncf.pdf”&gt; exit exit提案无需透支而无需透支，而无需跨越透支，而无需跨越跨越计划。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The exit proposal makes clear that Synadia seeks to “retain &lt;strong&gt;complete and exclusive governance&lt;/strong&gt; over the project and its future direction,” further asserting that Synadia “will remain the &lt;strong&gt;sole owner &lt;/strong&gt;of the NATS.io trademark and intellectual property” and “request[ing] the return of the NATS.io domain registration, as well as sole administrative control over the GitHub organization.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在进一步的升级中，Synadia的法律顾问&lt;a href =“ https://github.com/cncf/foundation/blob/main/main/main/documents/nats/nats/cease%20and%20demand%20letter%20letter%20letper%20FROM20FROM20FROM 20SYNADIA； &lt;strong&gt; nats.io域名&lt;/strong&gt;和&lt;strong&gt; nats-io github存储库&lt;/strong&gt; &lt;strong&gt;在两周内&lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt;”，鉴于该提案尚未提交给CNCF技术监督委员会（TOC）或与更广泛的社区共享。尽管事实是：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; Synadia &lt;strong&gt;以书面形式致力于&lt;/strong&gt;作为原始捐赠的一部分将NATS商标转移到CNCF； &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; cncf提供了&lt;strong&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; NATS品牌已成为CNCF的代名词及其对供应商中性治理的承诺。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; NATS域名和GitHub存储库是作为社区基础架构的资产，自2018年项目接受以来已由CNCF管理。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;需求信还&lt;a href =“ https://github.com/cncf/foundation/blob/main/main/documents/nats/nats/cease%20and%20demand%20letter%20letter%20from%20synadia%20synadia%20Counsel.pdf”包括Synadia在内的CNCF会员公司在他们签署的会员合同中同意。 Synadia声称，CNCF的治理文件“太模糊”以至于适用于NATS项目，尽管在&lt;a href =“ https：//github.com/cncf/foundation/blob/main/main/parter.md#11-policy.md-policy.md-ip-policy.md-ip-policy.m.md-ippolicy obly operlip &lt;a a href =“ https：//github.com/cncf/foundation y&gt; cncf charter oblosean ast of the Project”徽标资产转移到Linux基金会。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://github.com/cncf/foundation/blob/main/main/documents/nats/nats/nats/proposal%20to%20to%20exit%20nats%20nats%20from%20cncf.pdf”&gt; exit提议&gt; exit提议&lt;/a&gt; &lt;/a&gt;在connadia cornadia will planica will plancair planica will plancair will ply connc. nats.io服务器。” “许可的变化并不表示偏离我们对开源社区的承诺。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;重要的是要了解，在Busl下，无论指定“更改许可证”，该守则都将受到重大商业限制，并且直到大量延迟后才能将其作为开源许可，最多可达4年。&lt;/p&gt; &lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; CNCF提供了多种途径，可以使Synadia在尊重开源原则和社区治理的同时追求其目标。 Synadia可以自由地摆脱为现有NATS项目的贡献。他们还可以自由地叉，并以新名称建立专有产品。他们&lt;strong&gt;不能做的是单方面缩减社区项目及其基础设施，资产和品牌。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不幸的是，Synadia拒绝与我们合作采用尊重开源原则和CNCF社区治理流程的适当选择。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在进一步的升级中，Synadia的法律顾问向A &lt;a href =“ https://github.com/cncf/foundation/blob/main/main/main/documents/nats/nats/cease%20and%20demand%20letter%20letter%20letper%20from%20from%20from%20synadia；政策&lt;/a&gt;  - 包括Synadia在内的所有CNCF成员公司都同意他们签署的会员合同中同意的政策。 Synadia声称，CNCF的治理文件“太模糊”以至于适用于NATS项目，尽管在&lt;a href =“ https：//github.com/cncf/foundation/blob/main/main/parter.md#11-policy.md-policy.md-ip-policy.md-ip-policy.m.md-ippolicy obly operlip &lt;a a href =“ https：//github.com/cncf/foundation y&gt; cncf charter oblosean ast of the Project”徽标资产转移到Linux基金会。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;同时，与Synadia相关的维护者似乎已经举行了私人投票来“退出CNCF”（请参阅​​&lt;a href =“ https：//github.com/cncf/foundation/blob/main/main/main/documents/nats/nats/nats/nats.io； href =“ https://github.com/cncf/foundation/blob/main/documents/nats/nats/proposal%20to 20 exit%20nats%20nats%20from%20cncf.pdf“&gt; exit progosal &lt;/a&gt;）没有透明的态度，没有明确的过渡计划，没有更广泛的贡献，&lt;/ext &lt;/a&gt; &lt;/a&gt;）&#xA;&#xA;&#xA;&#xA;&lt;p&gt;简而言之：Synadia试图将成功的开源项目转换为封闭的商业产品，并使用NATS社区的名称，信任和基础架构。想象一下，如果Google成为一个中立的开源和社区驱动的项目，Google是否试图取回Kubernetes。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block-heading”&gt; &lt;strong&gt; cncf ip和商标&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开源基础部分是为了保护生态系统免受单方面许可变化和其他供应商驱动的地毯扣。这就是为什么CNCF，根据其章程（&lt;a href =“ https://github.com/cncf/foundation/blob/main/charter.md#11）-ip-policy“&gt;第11a节&lt;/a&gt;）要求所有贡献项目以将商标和徽标所有权转让给Linux Foundation。这确保没有单个供应商以后可以通过商标权来控制项目。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Synadia的首席执行官是CNCF管理委员会的原始成员之一，从一开始就意识到了这一政策。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当NATS于2018年捐款时，Synadia已经对NATS名称和徽标进行了商标注册。 Synadia的首席执行官在书面上明确承诺将这些商标转移到CNCF中。但是，与美国职棒大联盟（MLB）的商标争端有关“ Nats”（与华盛顿国民有关）的名称推迟了转会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了解决这个问题，CNCF付款，要求法律顾问在2018  -  2019年间与Synadia的商标律师合作。当拟议的和解条款威胁要限制社区使用时，CNCF拒绝了它们。然后，CNCF向Synadia提供了两个清晰的路径：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;重命名开源项目并将“ NAT”保留为Synadia的商业品牌。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;解决与MLB的争议，并将标记转移到CNCF后解决后。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Synadia选择了后者。一旦解决争议，请要求Synadia，并获得10,000美元的报销，以偿还CNCF的Synadia NATS商标注册法律费用。尽管LF最初根据Synadia的要求发送了商标费用的支票，但该支票被取消并进行了ACH付款。 Synadia收到了ACH付款，如下面的屏幕截图。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 1220” height =“ 668” src =“ https://wwwww.cncf.io of class =“ wp-image-130836” srcSet =“ https://www.cncf.io/wp-content/uploads/2025/04/artboard-board-1.jpg 1220w，https://www.cncf.io of 300W，https://www.cncf.io/wp-content/uploads/2025/04/artboard-1024x561.jpg 1024w，https://www.cncf.io https：//www.cncf.io/wp-content/wp-content/uploads/upploads/2025/2025/1488888888888888888888888888888888888888888888888888888848888888888888888888888888888888888888 8888888888888888意 https://www.cncf.io/wp-content/uploads/2025/04/Artboard-1-900x493.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/Artboard-1-365x200.jpg 365w, https://www.cncf.io/wp-content/uploads/2025/04/artboard-1-731x400.jpg 731W“ sizes =” size =“ auto，（max-width：1220px）100vw，100vw，1220px“ referrerpolerpolicy =” notrerpolicy =&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;br&gt;即使在清除了问题并付款后，Synadia也无法完成商标注册的承诺转让。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今天，Synadia仍然拒绝遵守其承诺，尽管有多年的承诺，财政支持和CNCF的积极管理。尽管其他数百个组织和个人做出了重大贡献。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Synadia不仅违反了其诺言；现在是武器Zing对社区和基金会的承诺破裂，这有助于使NATS成功，通过断言其作为NATS商标注册记录持有人的地位使其有权单方面接管已有7年社区拥有的项目基础设施和资产。&lt;/p&gt;&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt; nats的CNCF支持&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自NATS于2018年加入CNCF以来，该基金会提供了广泛的支持（财务，技术，法律和组织），以帮助该项目作为云本地生态系统的值得信赖的部分增长，成熟和成长。此支持包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;资助两个第三方安全审核（超过$ 90,000）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;支持法律和商标工作&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; kubecon + CloudNativeCon讲话老虎机，主题演讲，展位和营销包容&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;持续的指导和贡献者成长计划&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢这种支持以及社区的奉献精神 - 纳特人蓬勃发展。下载，贡献者以及与CNCF和第三方项目的集成（例如Helm，Kubernetes，Prometheus，clickhouse，Jetstream等）已大大增长。尽管Synadia确实是一个重要的贡献者，但其他700多个组织也为该项目做出了贡献。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figue class =“ WP-block-Gallery具有nest-nested-inted-bailts列 - 默认为wp-block-gallery-1 is-layout-layout-flex-flex-block-gallery-is-layout-layout-flex”&gt;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy” dododing =“ async” width =“ 1620” height =“ 654” data-id =“ 130389” src =“ https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-23-04-23-at-8.17.44%E2%80%80%80%80%80%Afpm.jpgm.jpg. srcset =“ https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.44pm.jpg.jpg 1620w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.4444pm-300x121.jpg 300W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.4444pm-1024x413.jpg 1024w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.4444pm-768x310.jpg 768w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.44.44pm-900x363.jpg 900w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.4444pm-495x200.jpg 495w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-23-AT-8.17.44pm-991x400.jpg 991W 991W“ sizes =” sizes =“ auto，（max-witth：max-witth：max-witth：1620px）100vx） referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt;图片：CNCF下的贡献过去7年&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当今NAT的成功和声誉不仅是由于一家公司的努力，而且是社区合作，CNCF管理的多年的结果以及对公开治理的承诺。这就是我们致力于捍卫的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt; CNCF的响应和保护NATS &lt;/strong&gt; &lt;/h2&gt;的行动&#xA;&#xA;&#xA;&#xA;只要有社区兴趣，CNCF将继续在其Apache-2.0许可下托管和支持NAT。我们致力于确保NAT继续公开，自由使用，并保护NAT，免受单方面的接管。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;考虑到这一点，CNCF和Linux基金会正在采取以下措施，以应对Synadia的法律要求：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;启动a &lt;a href =“ https://github.com/cncf/toc/issues/1632”&gt; cncf toc toc健康检查问题&lt;/a&gt;评估项目的健康&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;呼吁支持和其他维护者&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;要求USPTO取消矛盾的Synadia商标注册（请参阅我们的&lt;a a href =“ https://github.com/cncf/foundation/blob/blob/main/main/main/documents/nats/petition%20for%20for%20cancell%20cancellation; NATS徽标的请愿书&lt;/a&gt;和&lt;a href =“ https://github.com/cncf/foundation/blob/main/main/documents/nats/petition%20for%20cancellation%20cancellation%20nats%20nats%20IO20IO20IO20IO20REG20REG 20NO；&#xA;&#xA;&#xA;&#xA;&lt;li&gt;继续拒绝Synadia要求将NAT的基础设施和资产移交给它们&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们将继续在保护项目的开源许可和中立治理方面的工作中更新CNCF社区和生态系统。我们正在分享此信息，以促进在技术监督委员会（TOC）和更广泛的社区的公开讨论中继续讨论。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以关注或评论&lt;a href =“ https://github.com/cncf/toc/issues/1632”&gt;在CNCF TOC存储库中讨论NATS的未来&lt;/a&gt;。如果您是NATS的用户，贡献者或利益相关者，我们邀请您帮助我们保护这个重要项目的未来。请考虑成为NAT的维护者或增加您对项目的贡献。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 30 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Building Trust with OpenID Federation Trust Chain on Keycloak】使用OpenID联邦信任链建立信任在KeyCloak上</title>
      <link>https://www.cncf.io/blog/2025/05/05/building-trust-with-openid-federation-trust-chain-on-keycloak-2/</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://openid.net/specs/openid-federation-1_0.html&#34;&gt;OpenID Federation 1.0&lt;/a&gt;&amp;nbsp;provides a framework to build trust between a Relying Party and an&amp;nbsp;OpenID Provider that have no direct relationship so that the Relying Party can&amp;nbsp; send OIDC/OAuth requests to the OpenID Provider without being previously authorized from that directly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://openid.net/specs/openid-federation-wallet-1_0.html&#34;&gt;One primary use case&lt;/a&gt; is the trust between an Issuer and a Holder on W3C’s &lt;a href=&#34;https://www.w3.org/TR/vc-overview/&#34;&gt;Verifiable Credential(VC) Data Model&lt;/a&gt;, which is getting a lot of attention as an approach to realize the Digital Identity Wallet ecosystem. (In that context, the word “Wallet” is used instead of “Holder”.)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1278&#34; height=&#34;306&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.53.54%E2%80%AFAM.jpg&#34; alt=&#34;roles and information flows&#34; class=&#34;wp-image-131285&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.53.54 AM.jpg 1278w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.53.54 AM-300x72.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.53.54 AM-1024x245.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.53.54 AM-768x184.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.53.54 AM-900x215.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.53.54 AM-600x144.jpg 600w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.53.54 AM-1200x287.jpg 1200w&#34; sizes=&#34;auto, (max-width: 1278px) 100vw, 1278px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenID Foundation provides a couple of specifications based on widely used OIDC/OAuth, such as &lt;a href=&#34;https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html&#34;&gt;OpenID for Verifiable Credentials Issuance (OID4VCI)&lt;/a&gt;, where an OpenID Provider as Issuer provides Verifiable Credentials, VCs (protected resources in OAuth term) to a Relying Party as Holder (Wallet).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But in the Digital Identity Wallet ecosystem, the Holder (Wallet) is usually provided as Mobile Native Application and that is classified as a “public” client in OIDC/OAuth terms. It is because they are distributed from application download services of each mobile platform and can not easily issue their client secrets in a safe manner.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here using &lt;a href=&#34;https://openid.net/specs/openid-connect-registration-1_0.html&#34;&gt;Dynamic Client Registration&lt;/a&gt;&amp;nbsp;to provision per-instance secrets is recommended to mitigate that risk.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And OpenID Federation can provide a more secure way to realize the provisioning, which makes it easier to implement issuing VCs to the Wallet especially in use cases of accessing sensitive data.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.keycloak.org/&#34;&gt;Keycloak&lt;/a&gt;, Identity and Access Management OSS, is working towards implementing OpenID Federation, and it is attracting attention as a component that plays a central role in the Digital Identity Wallet ecosystem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This article provides how to use OpenID Federation Trust Chain for building trust with 3-rd parties using Keycloak step-by-step.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Overview of OpenID Federation trust framework&lt;/strong&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In OIDC/OAuth, a Relying Party and an OpenID Provider have a direct relationship, which means that a Relying Party has registered with an OpenID Provider in advance. When the OpenID Provider gets the registration request from the Relying Party, it has to know that the Relying Party is reliable enough. For that purpose, OpenID Providers usually provide a GUI tool like an admin console for an administrator to register applications or get credentials to use for calling a client registration endpoint.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenID Federation is a framework to build trust between a Relying Party and an OpenID Provider before registration or without pre-registration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It can be described with the figure below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenID Provider A has a direct relationship with Relying Party A-1/ A-2. On the other hand, Relying Party B does not have a direct relationship with OpenID Provider A. Based on OpenID Federation Trust Chain, OpenID Provider A trusts Relying Party B so that OpenID Provider A accepts OIDC/OAuth requests from Relying Party B without prior registration or sharing credentials for registration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1426&#34; height=&#34;760&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.55.16%E2%80%AFAM.jpg&#34; alt=&#34;overview of OpenID Federation&#34; class=&#34;wp-image-131286&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.55.16 AM.jpg 1426w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.55.16 AM-300x160.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.55.16 AM-1024x546.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.55.16 AM-768x409.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.55.16 AM-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.55.16 AM-900x480.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.55.16 AM-375x200.jpg 375w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.55.16 AM-751x400.jpg 751w&#34; sizes=&#34;auto, (max-width: 1426px) 100vw, 1426px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Relying Party B is authorized by the Trust Chain, which is built by third-party&amp;nbsp;authorities. One is a Trust Anchor, which is the origin of a trust chain. The other is an Intermediate Authority, which is authorized by the Trust Anchor.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this article, we use Keycloak as the OpenID Provider and show you how to register a client dynamically with OpenID Federation Trust Chain.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For registering a client, there are two approaches defined in OpenID Federation and we adapt &lt;a href=&#34;https://openid.net/specs/openid-federation-1_0.html#name-explicit-registration&#34;&gt;Explicit Client Registration&lt;/a&gt;, which is suitable for implementation on top of the&lt;a href=&#34;https://openid.net/specs/openid-connect-registration-1_0.html&#34;&gt;&amp;nbsp;OpenID Connect Dynamic Client Registration 1.0&lt;/a&gt;&amp;nbsp;endpoint of an OpenID Provider deployment. It enables an OpenID Provider to provision a Client ID, potentially a Client Secret, and other metadata parameters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The flow detail of Explicit Client Registration is something like the following figure:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1308&#34; height=&#34;520&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.56.57%E2%80%AFAM.jpg&#34; alt=&#34;explicit client registration flow&#34; class=&#34;wp-image-131287&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.56.57 AM.jpg 1308w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.56.57 AM-300x119.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.56.57 AM-1024x407.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.56.57 AM-768x305.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.56.57 AM-900x358.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.56.57 AM-503x200.jpg 503w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.56.57 AM-1006x400.jpg 1006w&#34; sizes=&#34;auto, (max-width: 1308px) 100vw, 1308px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here the OpenID provider receives Dynamic Client Registration request with the Entity Configuration of the Relying Party. This includes information about the Relying Party itself such as endpoints of authorities, which authorize the Relying Party.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The OpenID provider then sends the request to the one of the authorities, usually called Intermediate Authority, for getting the Entity Configuration of that and the Subordinate Statement which is the statement about a subordinate entity, the Relying Party in this case, with the digital signature of the Intermediate Authority.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If the Entity Configuration includes endpoints of authorities again, which authorize the Intermediate Authority, the OpenID provider then sends the request to the one of the authorities for getting the Entity Configuration and the Subordinate Statement pretty much same way as before until the OpenID provider gets the Entity Configuration of the Trust Anchor, of which the Entity Configuration does not include any endpoints of authorities.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the below tutorial, we show how to prepare a PoC environment for building trust with OpenID Federation Trust Chain. We use Keycloak as OpenID Provider, which provides a customized dynamic client registration endpoint with OpenID Federation plugin. And it accepts a request with OpenID Federation Trust Chain, validates that with Intermediate Authority/Trust Anchor, and creates a client.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;About a PoC environment&lt;/strong&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The table below shows the system configuration for each component of a PoC environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1312&#34; height=&#34;362&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.58.06%E2%80%AFAM.jpg&#34; alt=&#34;components of a PoC environment&#34; class=&#34;wp-image-131288&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.58.06 AM.jpg 1312w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.58.06 AM-300x83.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.58.06 AM-1024x283.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.58.06 AM-768x212.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.58.06 AM-900x248.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.58.06 AM-600x166.jpg 600w, https://www.cncf.io/wp-content/uploads/2025/05/Screenshot-2025-05-05-at-10.58.06 AM-1200x331.jpg 1200w&#34; sizes=&#34;auto, (max-width: 1312px) 100vw, 1312px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And the list below is the steps for preparing those components and performing Explicit Client Registration;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Set up a mock server for Trust Anchor&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Set up a mock server for Intermediate Authority&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Set up Keycloak as OpenID Provider&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Perform Explicit Client Registration with OpenID Federation Trust Chain&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;From the next section, the details of each steps is explained one by one.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Set up a mock server for Trust Anchor&lt;/strong&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;First, prepare a trust anchor as a mock server with two endpoints.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Federation Entity Configuration endpoint&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A HTTP GET request with the path /.well-known/openid-configuration looks like this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;GET /.well-known/openid-federation HTTP/1.1&#xA;Host: ta.example.com:9091&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And the GET returns JWT, which payload is like below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#xA;      &#34;exp&#34;: 1730322632,&#xA;      &#34;iat&#34;: 1729322632,&#xA;      &#34;iss&#34;: &#34;http://ta.example.com&#34;,&#xA;      &#34;sub&#34;: &#34;http://ta.example.com&#34;,&#xA;      &#34;jwks&#34;: {&#xA;        &#34;keys&#34;: [&#xA;          {&#xA; &#34;alg&#34;: &#34;RS256&#34;,&#xA;            &#34;e&#34;: &#34;AQAB&#34;,&#xA;            &#34;kid&#34;: &#34;9b26fdf1-595d-48ef-9f56-a47716849255&#34;,&#xA;            &#34;kty&#34;: &#34;RSA&#34;,&#xA;            &#34;use&#34;: &#34;sig&#34;,&#xA;            &#34;n&#34;: &#34;tTlizL_eQMbyOE1V4OXZSzg_2rODbGiYHhnW7ZhtqMJjZdr58NSDDwe5Dp0GzX4ecUaUK1hqX2Gv50tF8bV1qMMVnwDrtf1w8ctcElATf0NPbfgSfRy__t273R6kvJ7SPH5AmiPKA0LRaJSQv53zRwgpxAy2zba588--xdyfv4aYinow5LnaXecuap5l52X0ha7409eTV40shOC84coJTB1BpFECMZjJZ8W8xY1ST9MMyJhmdVLIuHCBKf4ErJImwFDDJO6AIa_kKyA_IbXlArAtU3SntTiNpFSx2t5Bz-rMXdcJTJjEp8ePvQwZPE54hJUV4_QwA79wLGUDbsCeVQ&#34;&#xA;          }&#xA;        ]&#xA;      },&#xA;      &#34;metadata&#34;: {&#xA;        &#34;federation_entity&#34;: {&#xA;          &#34;contacts&#34;: [&#34;ops@ta.example.com&#34;],&#xA;          &#34;federation_api_endpoint&#34;: &#34;http://ta.example.com:9091/oidc/fedapi&#34;,&#xA;          &#34;homepage_uri&#34;: &#34;https://www.ta.example.com&#34;&#xA;        }&#xA;      }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This statement is information about the Trust Anchor, so both “iss” and “sub” are the Trust Anchor itself. The “metadata” is the one about this Trust Anchor and among those the most important claim here is “federation_api_endpoint”, which issues Subordinate Statement like the next section.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Subordinate Statement Endpoint&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The HTTP GET request with the path /oidc/fedapi(*) looks like below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;(*)”federation_api_endpoint “ in Entity Configuration tells you which path you should use here.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;GET /oidc/fedapi?sub=http%3A%2F%2Fia.example.com&amp;amp;&#xA;iss=http%3A%2F%2Fta.example.com HTTP/1.1&#xA;Host: ta.example.com:9091&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Query parameter “iss” is the one to specify who issues the requested Subordinate Statement. That is the Trust Anchor here, who also signs that statement. And Query parameter “sub” is the one to specify who is the subject of that statement. That is the Intermediate Authority here, who is authorized by the Issuer with that sign.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And the GET returns JWT, which payload is like below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#xA;   &#34;iss&#34;: &#34;http://ta.example.com&#34;,&#xA;   &#34;sub&#34;: &#34;http://ia.example.com&#34;,&#xA;   &#34;jwks&#34;: {&#xA;        &#34;keys&#34;: [&#xA;          {&#xA;            &#34;alg&#34;: &#34;RS256&#34;,&#xA;            &#34;e&#34;: &#34;AQAB&#34;,&#xA;            &#34;kty&#34;: &#34;RSA&#34;,&#xA;            &#34;use&#34;: &#34;sig&#34;,&#xA;            &#34;kid&#34;: &#34;78e94429-8454-4088-8f60-0210de4278d9&#34;,&#xA;            &#34;n&#34;: &#34;3wzwjizDbuMsNkdauEphWQmp4G4uUw_wrABiSE5p164Z5LF1zsDR45zai_LbTdv58LmfOzgSmE19Ai7u1BPbv7K1CsjtVqdD6RS7AV9zsZTfye1r_M1lBDj810KqYShMaOpnB4KSH0BejH6IUDqPJbI64Sl5iVRI0SM6jevIMjKX83MfmOWBcFhpmpIWNzMxmp7A0BAA8lwwoH9uFPM2pBmBSLvjtucZIfrj-BzzEgiBC3Ho4NU5X2HZsHVLBuLqrbCEGEgiyhZ4uulosshYi_va4hE2LQEpdXybzHfBvk77AWA9H4LRKLTLZAepqUkC2g0IO-6sahjUdtWPkpqv0w&#34;&#xA;          }&#xA;        ]&#xA;      },&#xA;   &#34;metadata_policy&#34;: {&#xA;    &#34;openid_provider&#34;: {&#xA;      &#34;id_token_signing_alg_values_supported&#34;: {&#xA;        &#34;subset_of&#34;: [&#xA;          &#34;RS256&#34;,&#xA;          &#34;ES256&#34;,&#xA;          &#34;ES384&#34;,&#xA;          &#34;ES512&#34;&#xA;        ]&#xA;      },&#xA;      &#34;token_endpoint_auth_methods_supported&#34;: {&#xA;        &#34;subset_of&#34;: [&#xA;          &#34;client_secret_jwt&#34;,&#xA;          &#34;private_key_jwt&#34;&#xA;        ]&#xA;      },&#xA;      &#34;userinfo_signing_alg_values_supported&#34;: {&#xA;        &#34;subset_of&#34;: [&#xA;          &#34;ES256&#34;,&#xA;          &#34;ES384&#34;,&#xA;          &#34;ES512&#34;&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA; &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This statement is information about the Intermediate Authority in “sub” and signed by the Trust Anchor in “iss”. A public key in this statement is the Intermediate Authority’s and signed by a private key of the Trust Anchor, like X.509 certificate.&lt;br&gt;The Intermediate Authority mentioned here is set up in the following step.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Set up a mock server for Intermediate Authority&lt;/strong&gt;&lt;br&gt;Then prepare an Intermediate Authority as a mock server with two endpoints.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;Federation Entity Configuration endpoint&lt;br&gt;A HTTP GET request with the path /.well-known/openid-configuration looks like this:&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;GET /.well-known/openid-federation HTTP/1.1&#xA;Host: ia.example.com:9090&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And the GET returns JWT, which payload is like below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#xA;      &#34;authority_hints&#34;: [&#xA;        &#34;http://ta.example.com:9091&#34;&#xA;      ],&#xA;      &#34;exp&#34;: 1730322632,&#xA;      &#34;iat&#34;: 1729322632,&#xA;      &#34;iss&#34;: &#34;http://ia.example.com&#34;,&#xA;      &#34;sub&#34;: &#34;http://ia.example.com&#34;,&#xA;      &#34;jwks&#34;: {&#xA;        &#34;keys&#34;: [&#xA;          {&#xA;            &#34;alg&#34;: &#34;RS256&#34;,&#xA;            &#34;e&#34;: &#34;AQAB&#34;,&#xA;            &#34;kid&#34;: &#34;78e94429-8454-4088-8f60-0210de4278d9&#34;,&#xA;            &#34;n&#34;: &#34;3wzwjizDbuMsNkdauEphWQmp4G4uUw_wrABiSE5p164Z5LF1zsDR45zai_LbTdv58LmfOzgSmE19Ai7u1BPbv7K1CsjtVqdD6RS7AV9zsZTfye1r_M1lBDj810KqYShMaOpnB4KSH0BejH6IUDqPJbI64Sl5iVRI0SM6jevIMjKX83MfmOWBcFhpmpIWNzMxmp7A0BAA8lwwoH9uFPM2pBmBSLvjtucZIfrj-BzzEgiBC3Ho4NU5X2HZsHVLBuLqrbCEGEgiyhZ4uulosshYi_va4hE2LQEpdXybzHfBvk77AWA9H4LRKLTLZAepqUkC2g0IO-6sahjUdtWPkpqv0w&#34;,&#xA;            &#34;kty&#34;: &#34;RSA&#34;,&#xA;            &#34;use&#34;: &#34;sig&#34;&#xA;          }&#xA;        ]&#xA;      },&#xA;      &#34;metadata&#34;: {&#xA;        &#34;federation_entity&#34;: {&#xA;          &#34;contacts&#34;: [&#34;ops@ia.example.com&#34;],&#xA;          &#34;federation_api_endpoint&#34;: &#34;http://ia.example.com:9090/oidc/fedapi&#34;,&#xA;          &#34;homepage_uri&#34;: &#34;https://www.ia.example.com&#34;&#xA;        }&#xA;      }&#xA;    }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here “authority_hints” is a list of authorities who can authorize this Intermediate Authority and which should include the Trust Anchor described in the previous step. This statement is information about the Intermediate Authority itself as same as the one for the Trust Anchor.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Subordinate Statement Endpoint&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A HTTP GET request with the path /oidc/fedapi(*) looks like below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;(*)”federation_api_endpoint “ in Entity Configuration tells you which path you should use here.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;GET /oidc/fedapi?sub=http%3A%2F%2Frp.node.io&amp;amp;&#xA;iss=http%3A%2F%2Fia.example.com HTTP/1.1&#xA;Host: ia.example.com:9090&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Query parameter “iss” is the one to specify who issues the requested Subordinate Statement. That is the Intermediate Authority here, who also signs that statement. And Query parameter “sub” is the one to specify who is the subject of that statement. That is the Relying Party here, who is authorized by the Issuer with that sign.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And the GET returns JWT, which payload is like below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#xA;   &#34;iss&#34;: &#34;http://ia.example.com&#34;,&#xA;   &#34;sub&#34;: &#34;http://rp.node.io&#34;,&#xA;   &#34;jwks&#34;: {&#xA;        &#34;keys&#34;: [&#xA;          {&#xA;            &#34;alg&#34;: &#34;RS256&#34;,&#xA;            &#34;e&#34;: &#34;AQAB&#34;,&#xA;            &#34;kty&#34;: &#34;RSA&#34;,&#xA;            &#34;use&#34;: &#34;sig&#34;,&#xA;            &#34;kid&#34;: &#34;47145cad-4d1a-4494-9f17-8de6af81a966&#34;,&#xA;            &#34;n&#34;: &#34;wx_rZVLSeoqomxR8ZYuyW_wNmAlHfI4C2YMwLC1vqp9n59I9XPs40NyaZw37DnZJgAC76kXqJxOhWN9yJ4L7sC87GHd_rcmV5inp0F6nAz8_vQnJv4RlGIOKxsZJ5b-mYzpvmCys_Q2MNOKw4i_2MblhCXN08Wgm60dHUeBBZF5Lpo5BUw6zC-7PReNBd76xo20WXely7we-zONPW4146szwo4knaZseCzpUSbP8hyTE8PgCvFTSF5LVVLL-5CXkdKiywZVZn7svbA2Dk9INAwKnwYXoXptFwxD7F6bYrO94CwSWJjlfl-u38ze9hrVQ14q95U0QglQlrQeGSfeczw&#34;          &#xA;          }&#xA;        ]&#xA;      },&#xA;   &#34;metadata_policy&#34;: {&#xA;        &#34;openid_provider&#34;: {&#xA;          &#34;contacts&#34;: {&#xA;            &#34;add&#34;: [&#xA;              &#34;ops@rp.node.io&#34;&#xA;            ]&#xA;          },&#xA;          &#34;organization_name&#34;: {&#xA;            &#34;value&#34;: &#34;University of Umeå&#34;&#xA;          },&#xA;          &#34;subject_types_supported&#34;: {&#xA;            &#34;value&#34;: [&#xA;              &#34;pairwise&#34;&#xA;            ]&#xA;          },&#xA;          &#34;token_endpoint_auth_methods_supported&#34;: {&#xA;            &#34;default&#34;: [&#xA;              &#34;private_key_jwt&#34;&#xA;            ],&#xA;            &#34;subset_of&#34;: [&#xA;              &#34;private_key_jwt&#34;,&#xA;              &#34;client_secret_jwt&#34;&#xA;            ],&#xA;            &#34;superset_of&#34;: [&#xA;              &#34;private_key_jwt&#34;&#xA;            ]&#xA;          }&#xA;        }&#xA;     }&#xA;  }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;This statement is information about the Relying Party in “sub” and signed by the Intermediate Authority in “iss”. A public key in this statement is the Relying Party’s and signed by a private key of the Intermediate Authority, like X.509 certificate.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;&lt;strong&gt;Set up Keycloak as OpenID Provider&lt;/strong&gt;&lt;br&gt;Finally prepare Keycloak as OpenID Provider:&lt;br&gt;First, install Keycloak. Download and unzip the Keycloak.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;wget https://github.com/keycloak/keycloak/releases/download/25.0.5/keycloak-25.0.5.tar.gz&#xA;tar zxvf keycloak-25.0.5.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Next, install the Keycloak OpenID Federation plugin. Copy the jar file created in the target directory using the commands below to the Keycloak providers directory.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;git clone -b update/keycloak-25.0.x https://github.com/thomasdarimont/keycloak-oidc-federation.git&#xA;cd keycloak-oidc-federation&#xA;mvn clean package&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Then, start Keycloak.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;./kc.sh start-dev&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Access the 8080 port of the Keycloak host and log in to the admin console with the administrator username/password.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcRO59e-jpSBf5gzdGEndk5XmtnsiE8fwpRoQxsv95gj53_I1Y8xpwhFBpOMKS6Xk3n6KSRBrT-4k-8iIk2Bf8AmRv1excIx4F84Aw3DbRIcqZGtp_VE5IgoeljSKl_0fGiLyGJzVf4uM0vDSrHZWU?key=jskB4iDnEtwCBmCgcApLTfra&#34; alt=&#34;Keycloak host&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Create a realm “fed01”.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcrZQ6NnKCplReYrGgahywH_sXyTv6eKQEIPS-SNfEnaNckyP6VZgzN5Y2OuzXYlf4xd1EKN_AlVioo7_3fxjJypIEm-SY58PDIIXqpSid3IdMsYelj3zqmn1kH12Mb40I4H7eN5z7hFNBEaAYNgQ?key=jskB4iDnEtwCBmCgcApLTfra&#34; alt=&#34;Create a realm&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Register a trust anchor for the new realm:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;POST /realms/fed01/oidc-federation/configuration HTTP/1.1&#xA;Host: localhost:8080&#xA;Content-Type: application/json&#xA;&#xA;{“authorityHints”:[“http://ia.example.com:9090”],“expirationTime”: 3600,“trustAnchor”:[“http://ta.example.com”]}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Perform Explicit Client Registration with OpenID Federation Trust Chain&lt;/strong&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now your Keycloak is all ready for Explicit Client Registration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Then, for the Explicit Client Registration request, prepare JWT, which payload is like below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#xA;    &#34;exp&#34;: 1730322632,&#xA;    &#34;iat&#34;: 1729322632,&#xA;    &#34;jwks&#34;: {&#xA;      &#34;keys&#34;: [&#xA;        {&#xA;          &#34;kid&#34;: &#34;47145cad-4d1a-4494-9f17-8de6af81a966&#34;,&#xA;          &#34;n&#34;: &#34;wx_rZVLSeoqomxR8ZYuyW_wNmAlHfI4C2YMwLC1vqp9n59I9XPs40NyaZw37DnZJgAC76kXqJxOhWN9yJ4L7sC87GHd_rcmV5inp0F6nAz8_vQnJv4RlGIOKxsZJ5b-mYzpvmCys_Q2MNOKw4i_2MblhCXN08Wgm60dHUeBBZF5Lpo5BUw6zC-7PReNBd76xo20WXely7we-zONPW4146szwo4knaZseCzpUSbP8hyTE8PgCvFTSF5LVVLL-5CXkdKiywZVZn7svbA2Dk9INAwKnwYXoXptFwxD7F6bYrO94CwSWJjlfl-u38ze9hrVQ14q95U0QglQlrQeGSfeczw&#34;, &#xA;          &#34;kty&#34;: &#34;RSA&#34;,&#xA;          &#34;alg&#34;: &#34;RS256&#34;,&#xA;          &#34;use&#34;: &#34;sig&#34;&#xA;          &#34;e&#34;: &#34;AQAB&#34;&#xA;        }&#xA;      ]&#xA;    },&#xA;    &#34;aud&#34;: &#34;http://localhost:8080/realms/fed01&#34;,&#xA;    &#34;iss&#34;: &#34;http://rp.node.io&#34;,&#xA;    &#34;sub&#34;: &#34;http://rp.node.io&#34;,&#xA;    &#34;authority_hints&#34;: [&#xA;      &#34;http://ia.example.com:9090&#34;&#xA;    ],&#xA;    &#34;metadata&#34;: {&#xA;    &#34;openid_relying_party&#34;: {&#xA;      &#34;application_type&#34;: &#34;web&#34;,&#xA;      &#34;contacts&#34;: [&#34;ops@rp.node.io&#34;],&#xA;      &#34;grant_types&#34;: [&#34;authorization_code&#34;],&#xA;      &#34;jwks_uri&#34;: &#34;https://rp.node.io/jwks.jose&#34;,&#xA;      &#34;redirect_uris&#34;: [&#xA;        &#34;https://rp.node.io/openid/callback&#34;&#xA;      ], &#xA;      &#34;subject_type&#34;: &#34;public&#34;&#xA;    }&#xA;    }&#xA;  }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Registration request, prepare JWT, which payload is like below. This statement is information about the Relying Party, so both “iss” and “sub” are the Relying Party itself. On the other hand, “aud” is the OpenID provider which receives this registration request. The “metadata” is the one about this Relying Party, which includes OIDC/OAuth related ones, such as “jwks_uri”, “redirect_uris”. And most importantly “authority_hints” is a list of authorities who can authorize this Relying Party, usually the list of Intermediate Authorities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And send a HTTP POST request with the JWT above:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;POST /realms/fed01/oidc-federation/op/fedreg HTTP/1.1&#xA;Host: localhost:8080&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Finally,&amp;nbsp; check if a new client is created on admin console like below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd6K_Ku4mXyl8I10oWDz1v4jIAgTHZZU41y_zseL3pcnpoUQRMa1wLL8EPCHg6aJEoPIkkZ1VEXnD9A5h4yxSDarwqfq7X9AlQNeEbsE53c2pmnh90rXhC7H_wPhKaWX1Itnqv0P9INnyTZ4Y-vUzI?key=jskB4iDnEtwCBmCgcApLTfra&#34; alt=&#34;new console&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdMPDcxDKDoHk517WetJBSTWLeu7g_uySJYnuz0zTkT8ntHvyW9GgonAN0_F9Vxnx1A23D-LvsiBIwux1vaF3QuB3m2wVM4K-bxGRicGHkq7vsoqfvqnNk_yg0HfOsW7bnpOMDeSFESQ8X_TBoE7Hs?key=jskB4iDnEtwCBmCgcApLTfra&#34; alt=&#34;Explicit Client&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As a result, you can see here the client you have just created by Explicit Client Registration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this article, I explained how to build trust between a 3-rd party Relying Party and Keycloak as an OpenID Provider with OpenID Federation Trust Chain.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Currently in the Keycloak community, &lt;a href=&#34;https://github.com/keycloak/kc-sig-fapi&#34;&gt;OAuth-SIG&lt;/a&gt; (a group whose activity is mainly supporting OIDC/OAuth and its related security features to Keycloak) discusses how to enhance&amp;nbsp; Keycloak to build the Digital Identity Wallet ecosystem, for which we believe OpenID Federation plays a crucial role and we are taking an initiative to include the OpenID Federation functionality into Keycloak.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; &lt;a href =“ https://openid.net/specs/openid-federation-1_0.html”&gt;开放式联邦1.0 &lt;/a&gt;提供了一个框架来建立一个依赖方和没有直接关系的依赖人物之间的信任，以使依赖的派对可以向以前的operc/oauth provider发送给Oauth provider，以前&lt;oauth provider &lt;oauth provider &lt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://openid.net/specs/openid-federation-wallet-1_0.html”&gt;一个主要用例&lt;/a&gt;是发行人与W3C的持有人之间的信任模型&lt;/a&gt;，它引起了很多关注，作为实现数字身份钱包生态系统的一种方法。 （在这种情况下，使用“钱包”一词代替“持有人”。）&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy” dododing =“ async” width =“ 1278” height =“ 306” src =“ https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-05-05-0.53.54%E2%80%80%80%80%Afm.jpg- srcset =“ https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-05-AT-10.53.53.54AM.JPG 1278W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.53.53.54AM-300X72.JPG 300W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.53.53.54AM-1024X245.JPG 1024W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.53.53.54AM-768X184.JPG 768W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.53.53.54AM-900X215.JPG 900W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.53.53.54AM-600X144.JPG 600W，JPG 600W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-05-AT-10.53.53.53.54AM-1200X287.JPG 1200W 1200W 1200W“尺寸referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; OpenID粉底提供了基于广泛使用的OIDC/OAUTH的几个规格，例如&lt;a href =“ https://openid.net/specs/pecs/openid-4-verifial-verifable-verifial-verectial-credential-issuance-issuance-issuance-1_0.html”凭证，VCS（OAuth术语中受保护的资源）作为依赖方作为持有人（钱包）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是在数字身份钱包生态系统中，持有人（钱包）通常以移动本机应用程序提供，并且在OIDC/OAUTH术语中被归类为“公共”客户端。这是因为它们是从每个移动平台的应用程序下载服务中分发的，并且无法以安全的方式发布其客户秘密。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此处使用&lt;a href =“ https://openid.net/specs/openid-connect-registration-conredration-1_0.html”&gt;动态客户端注册&lt;/a&gt;建议减轻均一分子的求职来减轻这种风险。&lt;/p&gt; p&gt; p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;和OpenID联合会可以提供一种更安全的方法来实现供应，这使得更容易地将VC实施到钱包中，尤其是在访问的用例中敏感数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://www.keycloak.org/”&gt; keycloak &lt;/a&gt;，身份和访问管理OSS正在努力实施OpenID联合会，并且它吸引了注意力作为在数字身份身份生态系统中发挥核心作用的组成部分。&lt;/p&gt; &lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本文提供了如何使用KeyCloak逐步使用OpenID Federation Trust Chain与3-RD派对建立信任。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ wp-block头”&gt; &lt;strong&gt; OpenID联邦信任框架&lt;/strong&gt; &lt;/h1&gt;概述&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在OIDC/OAUTH中，依赖方和开放式提供商有直接关系，这意味着一个依赖方已提前与OpenID提供商注册。当OpenID提供商从依赖方获得注册请求时，它必须知道依赖方足够可靠。为此，OpenID提供商通常提供一个GUI工具，例如管理员供管理员注册应用程序或获取用于调用客户端注册端点的凭据。&lt;/p&gt;的凭据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; OpenID联合会是一个框架，可以在注册前或没有预注册之前建立依赖方和开放式提供商之间的信任。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;可以用下图描述：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; OpenID提供商A与依赖方A-1/ A-2有直接关系。另一方面，依赖方B与OpenID提供商A没有直接关系A。根据OpenID联邦信托链，OpenID提供商A信托基于依靠方B的信托基金，因此OpenID提供商A接受OIDC/OAUTH请求，而无需依靠Partion B而不先前注册或共享注册凭证。&#xA;&#xA;&#xA;&#xA;在src =“ https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-2025-05-05-05-05-05-55.16%E2%80%80%80%Afm.jpg- srcset =“ https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.55.16AM.JPG 1426W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.55.16AM-300X160.JPG 300W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.55.16AM-1024X546.JPG 1024W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.55.16AM-768X409.JPG 768W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.55.16AM-194X102.JPG 194W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.55.16AM-900X480.JPG 900W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.55.16AM-375X200.JPG 375W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-05-AT-10.55.16AM-751X400.JPG 751W 751W 751W“尺寸referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;依靠党的B由第三方当局建造的信托链授权。一个是信托基础，这是信托链的起源。 t他的另一个是中级权威，由信托主持人授权。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在本文中，我们将KeyCloak用作OpenID提供商，并向您展示如何在OpenID Federation Trust链中动态注册客户。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了注册客户，在OpenID联邦中定义了两种方法，我们适应&lt;a href =“ https://openid.net/specs/openid-federation-1_0.html#name-epplitic-ecplitic-regentation-regentation-regentation-registration”&gt; explicit客户注册&lt;/a&gt;，适用于&lt;/a&gt; &lt;/a&gt; href =“ https://openid.net/specs/openid-connect-registration-connect-registration-1_0.html”&gt; OpenID Connect Dynamic Client Dynamic Client注册1.0 &lt;/a&gt; OpenID提供商部署的端点。它使OpenID提供商能够提供客户ID，可能是客户端秘密和其他元数据参数。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;显式客户注册的流程细节是下图：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在src =“ https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-2025-05-05-05-05-05-AT-10.56.56.57%E2%80%80%80%80%Afm.jpg.jpg” srcset =“ https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.56.56.57AM.JPG 1308W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.56.56.57AM-300X119.JPG 300W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.56.56.57AM-1024X407.JPG 1024W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.56.56.57AM-768X305.JPG 768W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.56.56.57AM-900X358.JPG 900W，900W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.56.56.57AM-503X200.JPG 503W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-05-AT-10.56.56.57AM-1006X400.JPG 1006W referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在这里，OpenID提供商通过依赖方的实体配置接收动态客户端注册请求。这包括有关依赖方本身的信息，例如当局的终点，这些信息授权依靠一方。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;然后，OpenID提供商将请求发送给一个当局，通常称为中级当局，以获取该实体配置，以及下属语句，该声明是关于下属实体的陈述，在这种情况下，依赖方，具有中间当局的数字签名。&lt;/p&gt;。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果实体配置再次包括当局的端点，授权中级权威，则OpenID提供商然后将请求发送给当局之一，以获取实体配置和下属语句与以前几乎相同，直到OpenID提供商获得n extity配置的实体配置，否则OT包括当局的任何端点。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在下面的教程中，我们展示了如何使用OpenID联合信任链准备POC环境来建立信任。我们使用KeyCloak作为OpenID提供商，该提供商为OpenID Federation插件提供了自定义的动态客户端注册端点。它接受了使用OpenID联合信任链的请求，并验证了与中级权威/信托主持人的验证，并创建客户。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ WP-block-heading”&gt; &lt;strong&gt;关于POC环境&lt;/strong&gt; &lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下表显示了POC环境每个组件的系统配置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy” dododing =“ async” width =“ 1312” height =“ 362” src =“ https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-2025-05-05-05-05-AT-10.58.06%E2%80%80%80%80%80%Afafam.jpg” srcset =“ https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.58.06AM.JPG 1312W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.58.06AM-300X83.JPG 300W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.58.06AM-1024X283.JPG 1024W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.58.06AM-768X212.JPG 768W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.58.06AM-900X248.JPG 900W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-AT-10.58.06AM-600X166.JPG 600W，600W， https://www.cncf.io/wp-content/uploads/2025/05/screenshot-2025-05-05-05-05-05-AT-10.58.06AM-1200X3331.JPG 1200W 1200W 1200W“尺寸referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;和下面的列表是准备这些组件并执行明确的客户注册的步骤； &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;为信任锚定设置模拟服务器&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;为中级权威设置模拟服务器&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将KeyCloak设置为OpenID提供商&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用OpenID联合信任链执行明确的客户注册&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从下一节中，每个步骤的详细信息都一个一个一个。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ wp-block头”&gt; &lt;strong&gt;为信任锚定设置模拟服务器&#xA;&#xA;&#xA;&#xA;&lt;p&gt;First, prepare a trust anchor as a mock server with two endpoints.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;联邦实体配置端点&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; http带有路径/.well-newand/openid-configuration的http请求如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; get/well-nowny/openid-federation http/1.1&#xA;主持人：ta.example.com:9091&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;和get返回JWT，有效载荷如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; {&#xA;      “ Exp”：1730322632，&#xA;      “ IAT”：1729322632，&#xA;      “ ISS”：“ http：//ta.example.com”，&#xA;      “ sub”：“ http：//ta.example.com”，&#xA;      “ JWKS”：{&#xA;        “钥匙”：[[&#xA;          {&#xA; “ alg”：“ rs256”，&#xA;            “ e”：“ aqab”，“ KID”：“ 9B26FDF1-595D-48EF-9F56-A47716849255”，&#xA;            “ kty”：“ rsa”，&#xA;            “使用”：“ sig”，&#xA;            “ n”： ” ttlizl_eqmbyoe1v4oxzszg_2rodbgiyhhnw7zhtqmjzdr58nnsddddwe5dp0gzx4ecuauk1hqx2gv550tf8bv1q mmvnwdrtf1w8ctcelatf0npbfgsfry__t273r6kvj7sph5amipka0lrajsqv53zrwgpxay2zba588-xdyfv4a yinow5lnaxecuap5l52x0ha7409etv40shoc84cojtb1bpfecmzjjjjjjjz8w8xy1st9mmyjhmdvliuhcbkf4erjimw FDDJO6AIA_KKYA_IBXLARATU3SNTTINPFSX2T5BZ-RMXDCJTJJJJEP8EPVQWZPE54HJUV4_QWA79WLGUDBSCEVQ“&#xA;          }&#xA;        这是给出的&#xA;      }，，&#xA;      “元数据”：{&#xA;        “ federation_entity”：{&#xA;          “联系人”：[“ ops@ta.example.com”]，&#xA;          “ federation_api_endpoint”：“ http：//ta.example.com:9091/oidc/fedapi”，&#xA;          “ homepage_uri”：“ https：//www.ta.example.com”&#xA;        }&#xA;      }&#xA;    }&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此语句是有关信托基金的信息，因此“ ISS”和“ SUB”都是信托锚本身。 “元数据”是关于此信托基金的一个，其中最重要的主张是“ federation_api_endpoint”，它发布了下属语句，例如下一节。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;下属语句端点&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; http使用路径/oidc/fedapi（*）的http请求如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;（*）” federation_api_endpoint“在实体配置中告诉您应在此处使用的路径。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; get /odc/fedapi?sub=http%3A%2F%2Fia.example.com＆＆＆＆＆＆＆＆＆＆&#xA;ISS = http％3A％2F％2fta.example.com http/1.1&#xA;主持人：ta.example.com:9091&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;查询参数“ ISS”是指定谁发出所请求的下属语句的参数。那是这里的信任主持人，他也签署了该声明。查询参数“ sub”是指定谁是该语句的主题的参数。那是这里的中级机构，由发行人授权该标志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;和get返回JWT，有效载荷如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; {&#xA;   “ ISS”：“ http：//ta.example.com”，&#xA;   “ sub”：“ http：//ia.example.com”，&#xA;   “ JWKS”：{&#xA;        “钥匙”：[[&#xA;          {&#xA;            “ alg”：“ rs256”，&#xA;            “ e”：“ aqab”，&#xA;            “ kty”：“ rsa”，&#xA;            “使用”：“ sig”，&#xA;            “ KID”：“ 78E94429-8454-4088-8F60-0210DE4278D9”，&#xA;            “ n”： “ 3WZWJIZDBUMSNKDAUEPHWQMP4G4G4UW_WRABISE5P164Z5LF1ZSDR45ZAI_LBTDV58LMFOZGSME19AI7U1BPBV 7K1CSJTVQDD6RS7AV9ZSZSTFYE1R_M1LBDJ810KQYSHMAOPNB4KSH0BEJH6IUDQPJBI64SL5IVRI0SM6JEVIMJK X83MFMOWBCFHPMPIWNZMXMP7A0BAA8LWWOH9UFPM2PBMBSLVJTUCZIFRJ-BZZEGIBC3HO4NU4NU5X2HZSHVLBULQR bcegegiyhz4uulosshyi_va4he2lqepdxybzhfbvk77awa9h4lrrkltlzaepqukc2g0io-6sahjudtwpkpqvkpqv0w“&#xA;          }&#xA;        这是给出的&#xA;      }，，&#xA;   “ metadata_policy”：{&#xA;    “ OpenID_Provider”：{&#xA;      “ id_token_signing_alg_values_supported”：{&#xA;        “ subset_of”：[&#xA;          “ RS256”，&#xA;          “ ES256”，&#xA;          “ ES384”，&#xA;          “ ES512”&#xA;        这是给出的&#xA;      }，，&#xA;      “ token_endpoint_auth_methods_supported”：{&#xA;        “ subset_of”：[&#xA;          “ client_secret_jwt”，&#xA;          “ private_key_jwt”&#xA;        这是给出的&#xA;      }，，&#xA;      “ userInfo_signing_alg_values_supported”：{&#xA;        “ subset_of”：[&#xA;          “ ES256”，&#xA;          “ ES384”，&#xA;          “ ES512”&#xA;        这是给出的&#xA;      }&#xA;    }&#xA;  }&#xA; &#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此声明是有关“ Sub”中中级权威的信息，并由信托基金主持人在“ ISS”中签署。此语句中的公共密钥是中级当局的，并由信托主持人的私钥签名，例如X.509证书。&lt;br&gt;此处提到的中级当局是在以下步骤中设置的。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;为InterMediate Authority设置了模拟服务器&lt;/strong&gt; &lt;br&gt;然后，与两个Endpoints的模拟服务器一起准备一个中介服务器。&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;br&gt;联邦实体配置端点&lt;br&gt; http get request the path/well-newand/openid-configuration看起来像这样：&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; get/well-nowny/openid-federation http/1.1&#xA;主持人：ia.example.com:9090&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;和get返回JWT，有效载荷如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; {&#xA;      “ pertioner_hints”：[[&#xA;        “ http://ta.example.com:9091”&#xA;      ]，，&#xA;      “ Exp”：1730322632，&#xA;      “ IAT”：1729322632，&#xA;      “ ISS”：“ http：//ia.example.com”，&#xA;      “ sub”：“ http：//ia.example.com”，&#xA;      “ JWKS”：{&#xA;        “钥匙”：[[&#xA;          {&#xA;            “ alg”：“ rs256”，&#xA;            “ e”：“ aqab”，&#xA;            “ KID”：“ 78E94429-8454-4088-8F60-0210DE4278D9”，&#xA;            “ n”： “ 3WZWJIZDBUMSNKDAUEPHWQMP4G4G4UW_WRABISE5P164Z5LF1ZSDR45ZAI_LBTDV58LMFOZGSME19AI7U1BPBV 7K1CSJTVQDD6RS7AV9ZSZSTFYE1R_M1LBDJ810KQYSHMAOPNB4KSH0BEJH6IUDQPJBI64SL5IVRI0SM6JEVIMJK X83MFMOWBCFHPMPIWNZMXMP7A0BAA8LWWOH9UFPM2PBMBSLVJTUCZIFRJ-BZZEGIBC3HO4NU4NU5X2HZSHVLBULQR bcegegiyhz4uulosshyi_va4he2lqepdxybzhfbvk77awa9h4lrrkltlzaepqukc2g0io-6sahjudtwpkpqvkpqv0w“，&#xA;            “ kty”：“ rsa”，&#xA;            “使用”：“ sig”&#xA;          }&#xA;        这是给出的&#xA;      }，，&#xA;      “元数据”：{&#xA;        “ federation_entity”：{&#xA;          “联系人”：[“ ops@ia.example.com”]，&#xA;          “ federation_api_endpoint”：“ http：//ia.example.com:9090/oidc/fedapi”，&#xA;          “ homepage_uri”：“ https：//www.ia.example.com”&#xA;        }&#xA;      }&#xA;    }&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这里的“权限_hints”是可以授权此中级权威的当局的清单，其中应包括上一步中描述的信托锚。该声明是有关中级权威本身与信托主持人一样的信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下属语句端点&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; http带有路径/oidc/fedapi（*）的http请求如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;（*）” federation_api_endpoint“在实体配置中告诉您应在此处使用的路径。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; get /odc/fedapi?sub=http%3a%2f%2frp.node.io＆o&#xA;ISS = HTTP％3A％2F％2FIA.EXAMPLE.com HTTP/1.1&#xA;主持人：ia.example.com:9090&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;查询参数“ ISS”是指定谁发出要求的下属statem的参数恩特。那是这里的中级权威，他也签署了该声明。查询参数“ sub”是指定谁是该语句的主题的参数。那是这里的依赖方，由发行人授权该标志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;和get返回JWT，有效载荷如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; {&#xA;   “ ISS”：“ http：//ia.example.com”，&#xA;   “ sub”：“ http：//rp.node.io”，&#xA;   “ JWKS”：{&#xA;        “钥匙”：[[&#xA;          {&#xA;            “ alg”：“ rs256”，&#xA;            “ e”：“ aqab”，&#xA;            “ kty”：“ rsa”，&#xA;            “使用”：“ sig”，&#xA;            “ KID”：“ 47145CAD-4D1A-4494-9F17-8DE6AF81A966”，&#xA;            “ n”： ” WX_RZVLSEOQOMXR8ZYUYW_WNMALHFI4C2YMWLC1VQP9N59I9XPS4NYAZW37DNZJGAC76KXQJXQJXOHWN9YJ4L7S C87GHD_RCMV5INP0F6NAZ8_VQNJV4RLGIOKXSZJ5B-MYZPVMCYS_Q2MNOKW4I_2MBLHCXN08WGM60DHUEBBBBZF5 LPO5BUW6ZC-7PRENBD76XO20WXELY7WE-ZONPW4146SZWO4KNAZSECZPUSBP8HYTE8PGCVFFTSF5LVVLVLL-5CXKD kiywzvzn7svba2dk9inawknwyxoxptfwxd7f6byro94cwswswjjjlfl-u38ze9hrvq14q95U0U0U0U0U0QGLQLQLRQEGSFECZW“          &#xA;          }&#xA;        这是给出的&#xA;      }，，&#xA;   “ metadata_policy”：{&#xA;        “ OpenID_Provider”：{&#xA;          “联系人”：{&#xA;            “添加”： [&#xA;              “ ops@rp.node.io”&#xA;            这是给出的&#xA;          }，，&#xA;          “ agrismans_name”：{&#xA;            “价值”：“Umeå大学”&#xA;          }，，&#xA;          “ object_types_supported”：{&#xA;            “价值”： [&#xA;              “成对”&#xA;            这是给出的&#xA;          }，，&#xA;          “ token_endpoint_auth_methods_supported”：{&#xA;            “默认”： [&#xA;              “ private_key_jwt”&#xA;            ]，，&#xA;            “ subset_of”：[&#xA;              “ private_key_jwt”，&#xA;              “ client_secret_jwt”&#xA;            ]，，&#xA;            “ superset_of”：[&#xA;              “ private_key_jwt”&#xA;            这是给出的&#xA;          }&#xA;        }&#xA;     }&#xA;  }&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此声明是“ Sub”中有关依赖方的信息，并由中级当局在“ ISS”中签署。该声明中的一个公钥是依赖方，并由中级管理局的私钥签署，例如X.509证书。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;br&gt; &lt;strong&gt;设置KeyCloak作为OpenID提供商&lt;/strong&gt; &lt;br&gt;最终准备KeyCloak作为OpenID提供商：&lt;br&gt;首先，安装KeyCloak。下载并解开KeyCloak。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; wget https://github.com/keycloak/keycloak/keycloak/releases/download/25.0.5/keycloak-25.0.tar.5.tar.gz&#xA;tar zxvf keycloak-25.0.5.5.tar.gz&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;接下来，安装KeyCloak OpenID联合插件。使用以下命令在目标目录中创建的JAR文件中创建的JAR文件为KeyCloak提供者目录。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; git克隆-b update/keycloak-25.0.x https://github.com/thomasdarimont/keyclimont/keycloak-oidc-federation.git&#xA;CD KeyCloak-oidc-Federation&#xA;MVN干净包装&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;然后，启动keycloak。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; ./ kc.sh start-dev &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;访问KeyCloak主机的8080端口，并使用管理员用户登录到管理员控制台名称/密码。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxcro59e-jpsbf5gzdgendk5xmtnsie8fwproqxv95gj5gj5gj5gj53_i1y1y1y8xpwhfbpomks6 XK3N6KSRBRT-4K-8IIK2BF8AMRV1EXCIX4F84AW3DBRICQZGTP_VE5IGOELJSKL_0FGILYGJZVF4UM0VDSRHZWU？ alt =“ keycloak主机” referrerpolicy =“ no-toferrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;创建一个领域“ fed01”。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxcrzq6nnkcplreyrggahywh_sxytv6ekqeips-snfenanckyp6vzgzgzgzgzgzn5y2ouzxy LF4XD1EKN_ALVIOO7_3FXJJYPIEM-SY58PDIIXQPSID3IDMSYELJ3ZQMN1KH12MB40I4H7EN5Z7HFNBEAYNGQ？ alt =“创建一个领域” reverrerpolicy =“ no-referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;注册新领域的信任锚：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; post/realms/fed01/oidc-federation/configuration http/1.1&#xA;主持人：Localhost：8080&#xA;内容类型：应用程序/JSON&#xA;&#xA;{“ pertionalhints”：[“ http://ia.example.com:9090”]，“ Expiration Time”：3600，“ Trustanchor”：[http：//ta.example.com”}}&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ WP-block-heading”&gt; &lt;strong&gt;使用OpenID联邦信任链执行明确的客户注册&lt;/strong&gt; &lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，您的KeyCloak都准备好进行明确的客户注册。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;然后，对于明确的客户注册请求，准备JWT，哪个有效载荷如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; {&#xA;    “ Exp”：1730322632，&#xA;    “ IAT”：1729322632，&#xA;    “ JWKS”：{&#xA;      “钥匙”：[[&#xA;        {&#xA;          “ KID”：“ 47145CAD-4D1A-4494-9F17-8DE6AF81A966”，&#xA;          “ n”： ” WX_RZVLSEOQOMXR8ZYUYW_WNMALHFI4C2YMWLC1VQP9N59I9XPS4NYAZW37DNZJGAC76KXQJXQJXOHWN9YJ4L7S C87GHD_RCMV5INP0F6NAZ8_VQNJV4RLGIOKXSZJ5B-MYZPVMCYS_Q2MNOKW4I_2MBLHCXN08WGM60DHUEBBBBZF5 LPO5BUW6ZC-7PRENBD76XO20WXELY7WE-ZONPW4146SZWO4KNAZSECZPUSBP8HYTE8PGCVFFTSF5LVVLVLL-5CXKD kiywzvzn7svba2dk9inawknwyxoxptfwxd7f6byro94cwswswjjjlfl-u38ze9hrvq14q95U0U0U0U0U0U0QGLQLQLRQEGSFECZW“， &#xA;          “ kty”：“ rsa”，&#xA;          “ alg”：“ rs256”，&#xA;          “使用”：“ sig”&#xA;          “ e”：“ aqab”&#xA;        }&#xA;      这是给出的&#xA;    }，，&#xA;    “ aud”：“ http：// localhost：8080/ronems/fid01”，&#xA;    “ ISS”：“ http：//rp.node.io”，&#xA;    “ sub”：“ http：//rp.node.io”，&#xA;    “ pertioner_hints”：[[&#xA;      “ http://ia.example.com:9090”&#xA;    ]，，&#xA;    “元数据”：{&#xA;    “ OpenID_RELYING_PARTY”：{&#xA;      “ application_type”：“ web”，&#xA;      “联系人”：[“ ops@rp.node.io”]，&#xA;      “ grant_types”：[“授权_code”]，&#xA;      “ jwks_uri”：“ https：//rp.node.io/jwks.jose”，&#xA;      “ redirect_uris”：[&#xA;        “ https://rp.node.io/openid/callback”&#xA;      ]，， &#xA;      “ object_type”：“ public”&#xA;    }&#xA;    }&#xA;  }&#xA;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;注册请求，准备JWT，有效载荷如下。该声明是有关依赖方的信息，因此“ ISS”和“ Sub”都是依赖方本身。另一方面，“ AUD”是接收此注册请求的OpenID提供商。 “元数据”是关于这个依赖方的人，其中包括OIDC/OAUTH相关的一方，例如“ jwks_uri”，“ redirect_uris”。最重要的是，“权威_HINTS”是可以授权该依赖方的当局名单，通常是中级当局的列表。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;并在上面的JWT上发送HTTP POST请求：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; post/realms/fed01/oidc-federation/op/op/fedReg http/1.1&#xA;主持人：Localhost：8080&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，检查是否在管理控制台上创建新客户端，如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxd6k_ku4mxyl8ii10owdz1v4jiagthzzu4jiagthzzu41y_zsel3pcn3pcnpcnpcnpcrma1wllma1wll8epchg6a jeopikkz1vexnd9a5h4yxsdarwqfq7x9alqneebse53c2pmnh90rxhc7h_wphkawx1itnqv0p9innytz4y-vuz4y-vuzi？ alt =“新控制台” reverrerPolicy =“ no-toferrer”&gt; &lt;/figifrer&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxdmpdcxdkdokdohk517wetjbstwleu7g_uysjynuz0ztktktktktktktktktktktktktktktktkt8nthvyw9ggonan0_f9vx NX1A23D-LVSIBIWUX1VAF3QUB3M2WVM4K-BXGRICGHKQ7VSOQFVQNNK_YG0HFOSW7BNPOMDESFESQ8X_TBOE7HS？ alt =“ equarlicit client” reverrerpolicy =“ no-toferrer”&gt; &lt;/figifrer&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;结果，您可以在此处查看刚刚通过显式客户注册创建的客户端。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class =“ wp-block头”&gt; &lt;strong&gt;结论&lt;/strong&gt; &lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在本文中，我解释了如何建立依赖方的3-RD方与KeyCloak作为OpenID联合信任链的开放式提供商。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Currently in the Keycloak community, &lt;a href=&#34;https://github.com/keycloak/kc-sig-fapi&#34;&gt;OAuth-SIG&lt;/a&gt; (a group whose activity is mainly supporting OIDC/OAuth and its related security features to Keycloak) discusses how to enhance  Keycloak to build the Digital Identity Wallet ecosystem, for which we believe OpenID Federation plays a至关重要的角色，我们正在主动将开放式联合会功能包括在KeyCloak中。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 04 May 2025 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>