<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://rsshub.rssforever.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【Get to know our new DEI Community Hub at KubeCon + CloudNativeCon North America 2024】在 KubeCon + CloudNativeCon North America 2024 上了解我们的新 DEI 社区中心</title>
      <link>https://www.cncf.io/blog/2024/11/05/get-to-know-our-new-dei-community-hub-at-kubecon-cloudnativecon-north-america-2024/</link>
      <description>【&lt;p&gt;We are delighted to announce our new &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/attend/diversity-inclusion/#dei-community-hub&#34;&gt;DEI Community Hub&lt;/a&gt; at &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/&#34;&gt;KubeCon + CloudNativeCon North America&lt;/a&gt;, sponsored by &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud&lt;/a&gt;, a physical space to connect, learn, and celebrate diversity, equity, and inclusion and accessibility! The DEI Hub is a great place to join community groups, participate in allyship and advocacy workshops, or simply relax in a safe space during open lounge hours.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It is our hope that the Community Hub will not just be a place for education, networking and downtime, but also a place where people can find and make new friends.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Don’t Miss the Community Gatherings!&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;We believe strong communities foster a feeling of belonging by providing opportunities for interaction, collaboration, and shared experiences. Gatherings are planned for students, BIPOC (Black, Indigenous and People of Color), LGBTQIA+, and the broader community of attendees.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://kccncna2024.sched.com/overview/type/Diversity+%2B+Equity+%2B+Inclusion?iframe=no&#34;&gt;Search the schedule&lt;/a&gt; to find a gathering you’d like to attend.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Polish your Allyship Skills&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;From the way we conduct meetings to how we name our projects, there are countless opportunities in our day-to-day interactions to create better, more psychologically safe environments. Join Mike Bufano, Program Manager, Open Source DEI and Outreachat Google, in his session, “Be Part of the Solution: Cultivating Inclusion in Open Source” where he will share data from the field, discuss inclusion best practices, and leave attendees with actionable steps to cultivate inclusion in open source spaces.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Feel Empowered!&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attendees who identify as women, non-binary individuals and allies are invited to start the day on a powerful note over a continental breakfast at a gathering, known as &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/program/schedule/&#34;&gt;EmpowerUs&lt;/a&gt;. Network with peers, make new connections and discuss workplace issues and more before heading into the keynotes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Explore LGBTQIA+ Advocacy and Honor Trans Awareness Week&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To honor and celebrate &lt;a href=&#34;https://projectrainbowutah.org/taw&#34;&gt;Trans Awareness Week&lt;/a&gt;, come join this &lt;a href=&#34;https://sched.co/1qKKw&#34;&gt;fireside chat&lt;/a&gt; with Jacey Thornton from local Salt Lake City nonprofit &lt;a href=&#34;https://projectrainbowutah.org/&#34;&gt;Project Rainbow&lt;/a&gt;. Topics will include the current climate for the queer community in Salt Lake City and ways in which we can better show up for our LGBTQIA+ peers more broadly. This session will be immediately followed by the &lt;a href=&#34;https://sched.co/1pedK&#34;&gt;LGBTQIA+ Community Gathering&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Learn Sign Language (and more!)&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Help make the cloud native community more accessible by joining the Deaf + Hard of Hearing Working Group for a&lt;a href=&#34;https://sched.co/1peg2&#34;&gt; lively discussion about advocacy&lt;/a&gt; and allyship. Then stay around for a &lt;a href=&#34;https://sched.co/1pegV&#34;&gt;Sign Language Crash Course&lt;/a&gt; where you can learn how sign language works and practice some basic cloud native signs.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Meet me at the DEI Community Hub&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Use this space to meet friends, old and new, before heading to the keynotes, attending a session, going to lunch or enjoying Salt Lake City. Or, our favorite suggestion: Find (or make) a friend then head to &lt;a href=&#34;https://kccncna2024.sched.com/event/1icVN?iframe=no&#34;&gt;KubeCrawl + CloudNativeFest&lt;/a&gt;, the official launch party of KubeCon + CloudNativeCon in the Solutions Showcase.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Try Peer Group Mentoring&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is a great &lt;a href=&#34;https://sched.co/1mSv1&#34;&gt;opportunity&lt;/a&gt; for attendees to meet with experienced open source veterans from different CNCF projects for wide-ranging conversations across technical, community, career, and certification topics. Mentors will pair with 2-8 mentees in a pod-like environment to facilitate conversation and connection.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;我们很高兴宣布我们新的 &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/attend/diversity-inclusion/#dei-community-hub&#34;&gt;DEI 社区中心&lt;/a&gt;，&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/&#34;&gt;KubeCon + CloudNativeCon 北美&lt;/a&gt;，赞助商：&lt;a href=&#34;https:/ /cloud.google.com/&#34;&gt;Google Cloud&lt;/a&gt;，一个用于联系、学习和庆祝多样性、公平性、包容性和可访问性的物理空间！ DEI 中心是加入社区团体、参加联盟和宣传研讨会或在开放休息室时间在安全空间放松身心的好地方。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们希望社区中心不仅是一个教育、交流和休息的地方，而且还是一个人们可以找到和结交新朋友的地方。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;不要错过社区聚会！&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 我们相信，强大的社区可以通过提供互动、协作和共享体验的机会来培养归属感。计划为学生、BIPOC（黑人、原住民和有色人种）、LGBTQIA+ 以及更广泛的参与者群体举办聚会。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://kccncna2024.sched.com/overview/type/Diversity+%2B+Equity+%2B+Inclusion?iframe=no&#34;&gt;搜索日程&lt;/a&gt;以查找您的聚会我想参加。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;磨练你的盟友技能&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从我们召开会议的方式到我们如何命名项目，我们的日常互动中有无数的机会来创造更好、心理上更安全的环境。与开源 DEI 和 Outreachat Google 项目经理 Mike Bufano 一起参加“成为解决方案的一部分：培养开源包容性”的会议，他将分享现场数据、讨论包容性最佳实践，并为与会者提供可行的建议培养开源空间包容性的步骤。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;感受力量！&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;邀请女性、非二元个体和盟友的与会者在一次名为 &lt;a href=&#34;https://events.linuxfoundation.org/ 的聚会上享用欧陆式早餐，以强有力的方式开始新的一天。 kubecon-cloudnativecon-north-america/program/schedule/&#34;&gt;EmpowerUs&lt;/a&gt;。在进入主题演讲之前，与同事建立联系、建立新的联系并讨论工作场所问题等。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;探索 LGBTQIA+ 倡导和荣誉跨性别意识周&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了纪念和庆祝&lt;a href=&#34;https://projectrainbowutah.org/taw&#34;&gt;跨性别意识周&lt;/a&gt;，请参加这个&lt;a href=&#34;https://sched.co/1qKKw&#34;&gt;与盐湖城当地非营利组织 &lt;a href=&#34;https://projectrainbowutah.org/&#34;&gt;彩虹计划&lt;/a&gt; 的 Jacey Thornton 进行炉边聊天&lt;/a&gt;。主题将包括盐湖城酷儿社区当前的氛围以及我们如何更好地向您展示p 更广泛地为 LGBTQIA+ 群体服务。本次会议之后将立即举行&lt;a href=&#34;https://sched.co/1pedK&#34;&gt;LGBTQIA+ 社区聚会&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;学习手语（以及更多！）&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;加入聋哑人士 + 听力障碍人士工作组，进行&lt;a href=&#34;https://sched.co/1peg2&#34;&gt;有关倡导和联盟的热烈讨论&lt;/a&gt;，帮助让云原生社区变得更容易访问。然后参加&lt;a href=&#34;https://sched.co/1pegV&#34;&gt;手语速成课程&lt;/a&gt;，在这里您可以了解手语的工作原理并练习一些基本的云原生手语。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;在 DEI 社区中心与我见面&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在参加主题演讲、参加会议、共进午餐或游览盐湖城之前，请使用此空间结识新老朋友。或者，我们最喜欢的建议：找到（或结交）一个朋友，然后前往官方网站 &lt;a href=&#34;https://kccncna2024.sched.com/event/1icVN?iframe=no&#34;&gt;KubeCrawl + CloudNativeFest&lt;/a&gt;解决方案展示中的 KubeCon + CloudNativeCon 发布会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;尝试同伴小组指导&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于与会者来说，这是一个很好的&lt;a href=&#34;https://sched.co/1mSv1&#34;&gt;机会&lt;/a&gt;，可以与来自不同 CNCF 项目的经验丰富的开源资深人士会面，进行跨技术、社区的广泛对话、职业和认证主题。导师将在类似 Pod 的环境中与 2-8 名学员配对，以促进对话和联系。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 04 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【LitmusChaos is joining KubeCon + CloudNativeCon North America 2024!】LitmusChaos 即将加入 KubeCon + CloudNativeCon North America 2024！</title>
      <link>https://www.cncf.io/blog/2024/11/06/litmuschaos-is-joining-kubecon-cloudnativecon-north-america-2024/</link>
      <description>【&lt;p&gt;&lt;em&gt;Project post originally on the &lt;a href=&#34;https://litmuschaos.io/blog/litmuschaos-is-joining-kubecon-cloudnativecon-north-america-2024-3blg&#34;&gt;Litmus blog&lt;/a&gt; by Sayan Mondal, Community Manager and Maintainer&amp;nbsp;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;2400&#34; height=&#34;700&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t.jpg&#34; alt=&#34;image&#34; class=&#34;wp-image-119930&#34; style=&#34;width:900px;height:auto&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t.jpg 2400w, https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-300x88.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-1024x299.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-768x224.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-900x263.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-1800x525.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-600x175.jpg 600w, https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-1200x350.jpg 1200w&#34; sizes=&#34;(max-width: 2400px) 100vw, 2400px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Hello LitmusChaos Community! &lt;/strong&gt;👋&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Over the past few years, LitmusChaos has evolved tremendously, becoming a leading open-source tool for Chaos Engineering within the Cloud Native ecosystem. It’s been inspiring to watch our community grow, from engineers just getting started with chaos testing to large teams running complex fault scenarios across cloud and on-prem environments.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;On behalf of the maintainers&lt;/strong&gt;, we’re deeply grateful for the energy and passion each of you brings to the project. Your contributions, ideas, and feedback have fueled LitmusChaos’ growth and helped tackle real-world resilience challenges in a collaborative, open-source environment. Whether it’s through insightful discussions in our Slack channels, pull requests on GitHub, or your experiences shared at events, it’s clear we’re building something special—together!&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our maintainers and contributors will be on-site, eager to meet with attendees, discuss how&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;to get started with LitmusChaos, answer questions, and share opportunities to contribute to the project. We invite you to stop by, say hello, and learn more about how chaos engineering is transforming modern cloud-native applications.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1240&#34; height=&#34;1073&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/11/team.jpeg&#34; alt=&#34;Image&#34; class=&#34;wp-image-119931&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11/team.jpeg 1240w, https://www.cncf.io/wp-content/uploads/2024/11/team-300x260.jpeg 300w, https://www.cncf.io/wp-content/uploads/2024/11/team-1024x886.jpeg 1024w, https://www.cncf.io/wp-content/uploads/2024/11/team-768x665.jpeg 768w, https://www.cncf.io/wp-content/uploads/2024/11/team-900x779.jpeg 900w, https://www.cncf.io/wp-content/uploads/2024/11/team-231x200.jpeg 231w, https://www.cncf.io/wp-content/uploads/2024/11/team-462x400.jpeg 462w&#34; sizes=&#34;(max-width: 1240px) 100vw, 1240px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Where to Find Us: &lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Project Pavilion Kiosk #16A&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Location&lt;/strong&gt;: Level 1 | Halls A-C + 1-5 | Project Pavilion (Hall 1), Kiosk #16A &lt;strong&gt;Shift&lt;/strong&gt;: Half-shift AM schedule&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Project Pavilion Hours&lt;/strong&gt;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Wednesday, November 13: 10:45 AM – 3:15 PM&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Thursday, November 14: 10:30 AM – 1:45 PM&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Friday, November 15: 10:30 AM – 12:30 PM&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our team will be at the &lt;strong&gt;Project Pavilion &lt;/strong&gt;ready to talk chaos engineering, share resources, and hand out some awesome LitmusChaos stickers, candies and more. No matter your experience level—whether you’re an expert or just beginning to explore chaos engineering—this is the perfect opportunity to get personalized guidance and learn best practices for using LitmusChaos.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;2330&#34; height=&#34;993&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/11/comp.jpg&#34; alt=&#34;Image &#34; class=&#34;wp-image-119932&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11/comp.jpg 2330w, https://www.cncf.io/wp-content/uploads/2024/11/comp-300x128.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/11/comp-1024x436.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/11/comp-768x327.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/11/comp-900x384.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/11/comp-1800x767.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/11/comp-469x200.jpg 469w, https://www.cncf.io/wp-content/uploads/2024/11/comp-939x400.jpg 939w&#34; sizes=&#34;(max-width: 2330px) 100vw, 2330px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Project Engagement Opportunities at KubeCon NA&amp;nbsp;&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are plenty of ways to connect with us beyond our kiosk! Here’s where you can find us around the venue:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Project Pavilion Lounge&lt;/strong&gt;: Located in the heart of the Pavilion, the Lounge is a welcoming spot to relax, network, and have insightful discussions with other community members in a casual setting.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Coffee Stations&lt;/strong&gt;: Fuel up and chat with us at the coffee stations on both sides of the Pavilion. Grab a coffee, and let’s discuss your ideas for chaos engineering! &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Ad-Hoc Meeting Tables&lt;/strong&gt;: Need more time to dive deeper into LitmusChaos? Ad-hoc meeting tables are available next to the Project Pavilion on a first-come, first-served basis, offering a chance for impromptu discussions.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’d like to set up a specific time to meet with us, please feel free to email &lt;strong&gt;matthew.schillerstrom@harness.io &lt;/strong&gt;or &lt;strong&gt;sayan.mondal@harness.io&lt;/strong&gt;—we’d love to connect at KubeCon NA 2024!&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What You Can Learn at the LitmusChaos Booth&amp;nbsp;&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our booth offers a hands-on opportunity to dive into chaos engineering, ask questions, and explore the latest developments in LitmusChaos. Here are some highlights:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Getting Started with Chaos Engineering&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Introduction to LitmusChaos: First Steps &amp;amp; Best Practices&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Adopting Chaos Engineering at Scale&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Solving Challenges &amp;amp; Troubleshooting with LitmusChaos&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Latest Updates and Enhancements in LitmusChaos&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Roadmap for LitmusChaos&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;How to Get Involved as a Contributor or Future Maintainer&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Whether you’re facing blockers, looking for experiment guidance, or curious about the project roadmap, our team is here to help you make the most of chaos engineering with LitmusChaos.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Connect with LitmusChaos Year-Round&lt;/strong&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Can’t make it to KubeCon NA? You can still stay connected with the LitmusChaos community:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Website&lt;/strong&gt;: Visit the LitmusChaos Website for the latest resources.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Slack&lt;/strong&gt;: Join the conversation on &lt;strong&gt;#litmus &lt;/strong&gt;in the Kubernetes Slack to learn, ask questions, and contribute.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;: Get started as a contributor by checking out our Contributing Guide.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;YouTube&lt;/strong&gt;: Subscribe to the LitmusChaos YouTube Channel for the latest demos and tutorials.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt;: Stay updated by following @LitmusChaos on Twitter.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;LinkedIn&lt;/strong&gt;: Connect with @litmuschaos on LinkedIn for latest updates.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;DEV.to&lt;/strong&gt;: Share your insights on DEV.to with #litmuschaos, or check out community-written blogs to learn from other contributors.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;项目帖子最初发表在 &lt;a href=&#34;https://litmuschaos.io/blog/litmuschaos-is-joining-kubecon-cloudnativecon-north-america-2024-3blg&#34;&gt;Litmus 博客&lt;/a &gt; 作者：Sayan Mondal，社区经理兼维护者&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;imgloading=&#34;lazy&#34;decoding=&#34;async&#34;width=&#34;2400&#34;height=&#34;700&#34;src=&#34;https://www.cncf .io/wp-content/uploads/2024/11/s752lulge3etcjshg93t.jpg&#34; alt=&#34;image&#34; class=&#34;wp-image-119930&#34; style=&#34;width:900px;height:auto&#34; srcset=&#34;https://www .cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t.jpg 2400w，https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-300x88.jpg 300w，https:// /www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-1024x299.jpg 1024w，https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-768x224.jpg 768w ，https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-900x263.jpg 900w，https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t- 1800x525.jpg 1800w，https://www.cncf.io/wp-content/uploads/2024/11/s752lulge3etcjshg93t-600x175.jpg 600w，https://www.cncf.io/wp-content/uploads/2024/ 11/s752lulge3etcjshg93t-1200x350.jpg 1200w“尺寸=”（最大宽度：2400px）100vw，2400px“referrerpolicy=”no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;LitmusChaos 社区您好！ &lt;/strong&gt;👋&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在过去的几年里，LitmusChaos 取得了巨大的发展，成为云原生生态系统中领先的混沌工程开源工具。看到我们的社区不断发展，从刚刚开始混沌测试的工程师到跨云和本地环境运行复杂故障场景的大型团队，这真是令人鼓舞。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;代表维护者&lt;/strong&gt;，我们对你们每个人为该项目带来的活力和热情深表感谢。您的贡献、想法和反馈推动了 LitmusChaos 的发展，并帮助在协作、开源环境中解决现实世界的弹性挑战。无论是通过 Slack 频道中富有洞察力的讨论、GitHub 上的拉取请求，还是您在活动中分享的经验，很明显，我们正在共同打造一些特别的东西！ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的维护者和贡献者将在现场，渴望与与会者会面，讨论如何进行&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开始使用 LitmusChaos、回答问题并分享为项目做出贡献的机会。我们邀请您过来打个招呼，并详细了解混沌工程如何改变现代云原生应用程序。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1240”高度=“1073”src=“https://www.cncf.io/ wp-content/uploads/2024/11/team.jpeg&#34; alt=&#34;图像&#34; class=&#34;wp-image-119931&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11 /team.jpeg 1240w，https://www.cncf.io/wp-content/uploads/2024/11/team-300x260.jpeg 300w，https://www.cncf.io/wp-content/uploads/2024 /11/team-1024x886.jpeg 1024w，https://www.cncf.io/wp-content/uploads/2024/11/team-768x665.jpeg 768w，https://www.cncf.io/wp-content/uploads/2024/11/team -900x779.jpeg 900w，https://www.cncf.io/wp-content/uploads/2024/11/team-231x200.jpeg 231w，https://www.cncf.io/wp-content/uploads/2024 /11/team-462x400.jpeg 462w“尺寸=”（最大宽度：1240px）100vw，1240px“referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;在哪里找到我们：&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;项目展馆信息亭#16A&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;位置&lt;/strong&gt;：1 级 | A-C 展厅 + 1-5 |项目馆（1 号馆），Kiosk #16A &lt;strong&gt;轮班&lt;/strong&gt;：上午半班时间表&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;项目展馆开放时间&lt;/strong&gt;：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;11 月 13 日星期三：上午 10:45 至下午 3:15 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;11 月 14 日星期四：上午 10:30 至下午 1:45 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;11 月 15 日星期五：上午 10:30 至中午 12:30&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的团队将在&lt;strong&gt;项目展馆&lt;/strong&gt;准备讨论混沌工程、共享资源，并分发一些很棒的 LitmusChaos 贴纸、糖果等。无论您的经验水平如何，无论您是专家还是刚刚开始探索混沌工程，这都是获得个性化指导和学习使用 LitmusChaos 的最佳实践的绝佳机会。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“2330”高度=“993”src=“https://www.cncf.io/ wp-content/uploads/2024/11/comp.jpg&#34; alt=&#34;图片&#34; class=&#34;wp-image-119932&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11 /comp.jpg 2330w，https://www.cncf.io/wp-content/uploads/2024/11/comp-300x128.jpg 300w，https://www.cncf.io/wp-content/uploads/2024 /11/comp-1024x436.jpg 1024w，https://www.cncf.io/wp-content/uploads/2024/11/comp-768x327.jpg 768w，https://www.cncf.io/wp-content /uploads/2024/11/comp-900x384.jpg 900w，https://www.cncf.io/wp-content/uploads/2024/11/comp-1800x767.jpg 1800w，https://www.cncf.io /wp-content/uploads/2024/11/comp-469x200.jpg 469w，https://www.cncf.io/wp-content/uploads/2024/11/comp-939x400.jpg 939w&#34; 尺寸 = &#34;(最大-宽度：2330px) 100vw，2330px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;KubeCon NA 的项目参与机会&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了我们的信息亭之外，还有很多方式可以与我们联系！您可以在会场周围找到我们：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Project Pavilion 休息室&lt;/strong&gt;：休息室位于 Pavilion 中心，是一个放松身心、建立联系并在休闲环境中与其他社区成员进行深入讨论的好去处。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;咖啡站&lt;/strong&gt;：在展馆两侧的咖啡站补充能量并与我们聊天。喝杯咖啡，让我们讨论一下您对混沌工程的想法！ &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;临时会议桌&lt;/strong&gt;：需要更多时间深入了解 LitmusChaos？接下来可使用临时会议桌以先到先得的方式前往项目展馆，提供即兴讨论的机会。 &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想安排与我们会面的具体时间，请随时发送电子邮件至&lt;strong&gt;ma​​tthew.schillerstrom@harness.io&lt;/strong&gt;或&lt;strong&gt;sayan.mondal@harness.io&lt; /strong&gt;—我们很乐意在 KubeCon NA 2024 上进行交流！ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;您可以在 LitmusChaos 展位学到什么&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的展位提供了深入研究混沌工程、提出问题和探索 LitmusChaos 最新发展的实践机会。以下是一些亮点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;混沌工程入门&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;LitmusChaos 简介：第一步和最佳实践&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;大规模采用混沌工程&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用 LitmusChaos 解决挑战并排除故障&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;LitmusChaos 的最新更新和增强功能&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;LitmusChaos 路线图&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;如何作为贡献者或未来维护者参与进来&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;无论您是面临阻碍、寻求实验指导，还是对项目路线图感到好奇，我们的团队都会随时帮助您利用 LitmusChaos 充分利用混沌工程。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;全年与 LitmusChaos 保持联系&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;无法参加 KubeCon NA？您仍然可以与 LitmusChaos 社区保持联系：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;网站&lt;/strong&gt;：访问 LitmusChaos 网站以获取最新资源。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Slack&lt;/strong&gt;：加入 Kubernetes Slack 中 &lt;strong&gt;#litmus&lt;/strong&gt; 上的对话来学习、提出问题和做出贡献。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;贡献指南&lt;/strong&gt;：查看我们的贡献指南，开始作为贡献者。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;YouTube&lt;/strong&gt;：订阅 LitmusChaos YouTube 频道以获取最新的演示和教程。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt;：在 Twitter 上关注@LitmusChaos，随时了解最新动态。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;LinkedIn&lt;/strong&gt;：与 LinkedIn 上的@litmuschaos 联系以获取最新动态。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;DEV.to&lt;/strong&gt;：与 #litmuschaos 分享您对 DEV.to 的见解，或查看社区撰写的博客向其他贡献者学习。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 05 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kubestronaut in Orbit: Rishabh Sharma】在轨道上的 Kubetronaut：Rishabh Sharma</title>
      <link>https://www.cncf.io/blog/2024/11/05/kubestronaut-in-orbit-rishabh-sharma/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1500&#34; height=&#34;787&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4.jpg&#34; alt=&#34;headshot&#34; class=&#34;wp-image-119877&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4.jpg 1500w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-300x157.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-1024x537.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-900x472.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-381x200.jpg 381w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-590x310.jpg 590w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-1180x620.jpg 1180w&#34; sizes=&#34;(max-width: 1500px) 100vw, 1500px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Get to know Rishabh&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This week’s Kubestronaut in Orbit, Rishabh Sharma, our first Kubestonaut from Finland, is a senior software development engineer where he manages cloud native tech solutions for Capgemini Finland Oy. He is currently responsible for implementing and managing Kubernetes solutions for 4G and 5G technologies. His other key areas of interest are Java, Spring-Boot, Containerd, Linux, Istio, Linkerd, Falco, Sysdig, CoreDNS, Helm, OPA (Open Policy Agent), Cilium, Envoy etc.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’d like to be a Kubestronaut like Rishabh, get more details on the &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;CNCF Kubestronaut&lt;/a&gt; page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;When did you get started with Kubernetes and/or cloud-native? What was your first project?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In early 2017, I was a part of a DevOps bootcamp in Chennai, India. In the 7 days of bootcamp I explored GCE VMs, Docker, and Kubernetes on a high level. It was the trigger point for me to explore Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;My first major project in Kubernetes was a Telco Network planning application which was deployed over a Kubernetes cluster as StatefulSet/Deployment pods.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I saw the real Kubernetes magic when we never had a single second downtime for our network planning application deployed as Kubernetes workloads. We used a multi-zone setup – two k8s clusters in two different zones.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What are the primary CNCF projects you work on or use today?&amp;nbsp; What projects have you enjoyed the most in your career?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I use the following CNCF projects today:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;1. &lt;a href=&#34;https://www.cncf.io/projects/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2. &lt;a href=&#34;https://www.cncf.io/projects/cilium/&#34;&gt;Cilium&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;3. &lt;a href=&#34;https://www.cncf.io/projects/containerd/&#34;&gt;Containerd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;4. &lt;a href=&#34;https://www.cncf.io/projects/coredns/&#34;&gt;CoreDNS&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;5. &lt;a href=&#34;https://www.cncf.io/projects/fluentd/&#34;&gt;Fluentd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;6. &lt;a href=&#34;https://www.cncf.io/projects/prometheus/&#34;&gt;Prometheus&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;7. &lt;a href=&#34;https://www.cncf.io/projects/etcd/&#34;&gt;Etcd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;8. &lt;a href=&#34;https://www.cncf.io/projects/helm/&#34;&gt;Helm&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;9. &lt;a href=&#34;https://www.cncf.io/projects/kyverno/&#34;&gt;Kyverno&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;10. &lt;a href=&#34;https://www.cncf.io/projects/istio/&#34;&gt;Istio&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;11. &lt;a href=&#34;https://www.cncf.io/projects/falco/&#34;&gt;Falco&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;12. &lt;a href=&#34;https://www.cncf.io/projects/open-policy-agent-opa/&#34;&gt;Open Policy Agent (OPA)&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I love the Kubernetes project so much because I am a telco guy and I have seen how Kubernetes actually supports telco new generation technologies – 4G and 5G and more.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes’ flexible architecture and robust cloud-native management capabilities allow telcos to rapidly develop new features while maintaining performance and reliability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These projects are also favorites for these reasons:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Prometheus: Truly amazing project which is a must-application to monitor cloud native workloads.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Helm: Best well-known package manager for Kubernetes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Cilium: The most famous CNI network plugin.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Istio: My favourite service-mesh.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kyverno:&amp;nbsp; (K for Kubernetes, K for Kyverno), Just write your policies as yaml and no need to learn any other language to develop policies,&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;containerd: Container Runtime Interface known for its scalability, performance, and stability.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How have the certs or CNCF helped you in your career?&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I have completed 6 CNCF certifications as follows:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/kcna/&#34;&gt;Kubernetes and Cloud Native Associate (KCNA)&lt;/a&gt;: The first certificate gave me confidence to take the CNCF exam and gave me high-level introductions to a lot of cloud native technologies. It motivated me for further certifications.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/ckad/&#34;&gt;Certified Kubernetes Application Developer (CKAD)&lt;/a&gt;: To prepare for this certificate, I read the whole &lt;a href=&#34;http://k8s.io/docs/concepts&#34;&gt;k8s.io/docs/concepts &lt;/a&gt;section and studied every single concept line by line. I also took the Killercoda K8s free lab and then tried to practice Kubernetes concepts.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/cka/&#34;&gt;Certified Kubernetes Administrator (CKA&lt;/a&gt;): My focus for this cert was to explore and learn k8s from the administration side–Kubeadm cluster setup, etcd backup, TLS, mTLS self signed certificates. It was a wonderful journey to explore these concepts and then use in my day-to-today work in my job.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/cks/&#34;&gt;Certified Kubernetes Security Specialist (CKS)&lt;/a&gt;: Security is the key in any industry and CKS actually motivated me to get the training I needed to add “Sec” to my job profile and become “DevSecOps”. Falco, sysdig, supply chain security, CIS standards, Kube-bench and many more security tools are also key.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/kcsa/&#34;&gt;Kubernetes and Cloud Security Associate (KCSA)&lt;/a&gt;: This provides the basics about Kubernetes and security and the process of getting this cert was a wonderful experience in exploring security basics and standards.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/pca/&#34;&gt;Prometheus Certified Associate (PCA)&lt;/a&gt;: I recently cracked Prometheus Certified Associate. Prometheus truly helps us in monitoring our telco cloud-native workloads to ensure their health and by alerting when there is something wrong.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What are some other books/sites/courses you recommend for people who want to work with k8s?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To be honest the only “book” to learn Kubernetes is the from the source: &lt;a href=&#34;https://kubernetes.io/docs/concepts&#34;&gt;https://kubernetes.io/docs/concepts&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You should read the docs thoroughly and practice with free Kubernetes clusters like on killercoda.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apart from official docs, if you would like to learn via courses, I would suggest the following courses:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kodekloud.com/learning-path/cka&#34;&gt;CKA&lt;/a&gt; and &lt;a href=&#34;https://kodekloud.com/learning-path/ckad&#34;&gt;CKAD&lt;/a&gt; courses from KodeKloud and &lt;a href=&#34;https://business.udemy.com/cncf-endorsed-content/&#34;&gt;Udemy &lt;/a&gt;(check out the CNCF endorsed content).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=d9xfB5qaOfg&#34;&gt;CKS course&lt;/a&gt; by Kim Wuestkamp over Killer Shell YouTube channel.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;For practice,use the &lt;a href=&#34;https://killer.sh/&#34;&gt;Killer Shell questions labs&lt;/a&gt; (absolutely free with purchase of exam).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What do you do in your free time?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I enjoy these things in my free time:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Exploring Kubernetes: It is bottomless, like the ocean and I am always learning new concepts.&amp;nbsp; Some concepts like Pod topology spread constraints were not part of any k8s exam but these are really magical concepts as well as other features like scheduling framework, Pod Priority, and Preemption.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Exploring other CNCF projects: Currently learning Kyverno by making live policies and deploying them to see the real admission controller magic.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Preparing for other CNCF certifications: Now that I have PCA, my next targets are &lt;a href=&#34;https://www.cncf.io/training/certification/cca/&#34;&gt;CCA (Cilium Certified Associate)&lt;/a&gt; and &lt;a href=&#34;https://www.cncf.io/training/certification/ica/&#34;&gt;ICA (Istio Certified Associate)&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Contributing to various CNCF activities: I like to participate in other CNCF activities and I’m also publishing my knowledge about CNCF technologies over medium and other platforms.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Watching crime thrillers I love to watch crime thrillers in my free time.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What would you tell someone who is just starting their K8s certification journey? Any tips or tricks?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Just go through the Kubernetes docs and then practice, practice, practice over free platforms like killer shell.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Get your hands dirty with Kubernetes concepts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Today the Cloud native ecosystem is way more than Kubernetes. Do you plan to get other cloud native certifications from the CNCF?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I am planning to complete all cloud native certifications from the CNCF.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I would like to complete all 10 CNCF certifications and then there will be new certifications launched soon like Kyverno, Backstage, OpenTelemetry.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;So the learning journey will continue.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1500”高度=“787”src=“https://www.cncf.io/ wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4.jpg&#34; alt=&#34;headshot&#34; class=&#34;wp-image-119877&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4.jpg 1500w，https://www.cncf.io/wp-content/uploads/ 2024/11/Kubestronaut-in-Orbit-4-300x157.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-1024x537.jpg 1024w，https://www.cncf.io/wp-content/uploads/2024 /11/Kubestronaut-in-Orbit-4-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-194x102.jpg 194w，https://www.cncf.io/wp-content/uploads/2024 /11/Kubestronaut-in-Orbit-4-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-776x408.jpg 776w，https://www.cncf.io/wp-content/uploads/2024 /11/Kubestronaut-in-Orbit-4-900x472.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-381x200.jpg 381w，https://www.cncf.io/wp-content/uploads/2024 /11/Kubestronaut-in-Orbit-4-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-4-590x310.jpg 590w，https://www.cncf.io/wp-content/uploads/2024 /11/Kubestronaut-in-Orbit-4-1180x620.jpg 1180w&#34; 尺寸 = &#34;(最大宽度: 1500px) 100vw, 1500px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;了解 Rishabh&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本周的 Orbit Kubetronaut Rishabh Sharma 是我们第一位来自芬兰的 Kubestonaut，他是一名高级软件开发工程师，为 CapgeminiFinland Oy 管理云原生技术解决方案。他目前负责实施和管理 4G 和 5G 技术的 Kubernetes 解决方案。他感兴趣的其他主要领域包括 Java、Spring-Boot、Containerd、Linux、Istio、Linkerd、Falco、Sysdig、CoreDNS、Helm、OPA（开放策略代理）、Cilium、Envoy 等。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想成为像 Rishabh 一样的 Kubestronaut，请在 &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;CNCF Kubestronaut&lt;/a&gt; 页面获取更多详细信息。&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您什么时候开始使用 Kubernetes 和/或云原生？您的第一个项目是什么？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2017 年初，我参加了印度钦奈的 DevOps 训练营。在 7 天的训练营中，我对 GCE VM、Docker 和 Kubernetes 进行了高水平的探索。这是我探索 Kubernetes 的触发点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我在 Kubernetes 中的第一个主要项目是一个电信网络规划应用程序，它作为 StatefulSet/Deployment Pod 部署在 Kubernetes 集群上。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当我们部署为 Kubernetes 工作负载的网络规划应用程序从未出现过一秒钟的停机时，我看到了真正的 Kubernetes 魔力。我们使用了多区域设置——两个不同区域中的两个 k8s 集群。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您现在从事或使用的主要 CNCF 项目是什么？  在您的职业生涯中，您最喜欢哪些项目？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我今天使用以下 CNCF 项目：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;1. &lt;a href=&#34;https://www.cncf.io/projects/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2. &lt;a href=&#34;https://www.cncf.io/projects/cilium/&#34;&gt;Cilium&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;3. &lt;a href=&#34;https://www.cncf.io/projects/containerd/&#34;&gt;Containerd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;4. &lt;a href=&#34;https://www.cncf.io/projects/coredns/&#34;&gt;CoreDNS&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;5. &lt;a href=&#34;https://www.cncf.io/projects/fluentd/&#34;&gt;Fluentd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;6. &lt;a href=&#34;https://www.cncf.io/projects/prometheus/&#34;&gt;普罗米修斯&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;7. &lt;a href=&#34;https://www.cncf.io/projects/etcd/&#34;&gt;Etcd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;8. &lt;a href=&#34;https://www.cncf.io/projects/helm/&#34;&gt;头盔&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;9. &lt;a href=&#34;https://www.cncf.io/projects/kyverno/&#34;&gt;Kyverno&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;10。 &lt;a href=&#34;https://www.cncf.io/projects/istio/&#34;&gt;Istio&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;11。 &lt;a href=&#34;https://www.cncf.io/projects/falco/&#34;&gt;Falco&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;12. &lt;a href=&#34;https://www.cncf.io/projects/open-policy-agent-opa/&#34;&gt;开放策略代理 (OPA)&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我非常喜欢 Kubernetes 项目，因为我是一名电信人员，并且我看到了 Kubernetes 如何实际支持电信新一代技术 - 4G 和 5G 等。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 灵活的架构和强大的云原生管理功能使电信公司能够快速开发新功能，同时保持性能和可靠性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;由于以下原因，这些项目也很受欢迎：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;Prometheus：真正令人惊叹的项目，是监控云原生工作负载的必备应用程序。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Helm：最著名的 Kubernetes 包管理器。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Cilium：最著名的 CNI 网络插件。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Istio：我最喜欢的服务网格。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kyverno：（K 代表 Kubernetes，K 代表 Kyverno），只需将您的策略​​编写为 yaml，无需学习任何其他语言来开发策略，&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;containerd：容器运行时接口，以其可扩展性、性能和稳定性而闻名。 &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;证书或 CNCF 对您的职业生涯有何帮助？ &lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我已完成以下 6 项 CNCF 认证：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/kcna/&#34;&gt;Kubernetes 和 Cloud Native Associate (KCNA)&lt;/a&gt;：第一个证书让我有信心参加 CNCF 考试并对我介绍了很多云原生技术。这激励我获得进一步的认证。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/ckad/&#34;&gt;认证 Kubernetes 应用程序开发人员 (CKAD)&lt;/a&gt;：为了准备此证书，我阅读了整个 &lt;a href=&#34;http://k8s.io/docs/concepts&#34;&gt;k8s.io/docs/concepts &lt;/a&gt;部分并逐行研究了每个概念。我还参加了 Killercoda K8s 免费实验室，然后尝试练习 Kubernetes 概念。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/cka/&#34;&gt;经过认证的 Kubernetes 管理员 (CKA&lt;/a&gt;)：我获得此证书的重点是从管理端 – Kubeadm 集群设置、etcd 备份、TLS、mTLS 自签名证书。探索这些概念并将其运用到我的日常工作中是一次美妙的旅程。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/cks/&#34;&gt;认证 Kubernetes 安全专家 (CKS)&lt;/a&gt;：安全性是任何行业的关键，CKS 实际上激励了我为了获得培训，我需要将“Sec”添加到我的工作资料中并成为“DevSecOps”。 Falco、sysdig、供应链安全、CIS 标准、Kube-bench 和更多安全工具也是关键。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/kcsa/&#34;&gt;Kubernetes 和云安全助理 (KCSA)&lt;/a&gt;：这提供了有关 Kubernetes 和安全性以及流程的基础知识获得此证书是探索安全基础知识和标准的一次美妙经历。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/training/certification/pca/&#34;&gt;Prometheus Certified Associate (PCA)&lt;/a&gt;：我最近破解了 Prometheus Certified Associate。 Prometheus 真正帮助我们监控电信云原生工作负载，以确保其运行状况，并在出现问题时发出警报。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您为想要使用 k8s 的人推荐了哪些其他书籍/网站/课程？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;说实话，学习 Kubernetes 的唯一“书”是来源：&lt;a href=&#34;https://kubernetes.io/docs/concepts&#34;&gt;https://kubernetes.io/docs/concepts&lt; /a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您应该仔细阅读文档并使用免费的 Kubernetes 集群进行练习，例如在 Killercoda 上。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了官方文档之外，如果您想通过课程学习，我建议您选择以下课程：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kodekloud.com/learning-path/cka&#34;&gt;CKA&lt;/a&gt; 和 &lt;a href=&#34;https://kodekloud.com/learning-path/ckad&#34;&gt;CKAD &lt;/a&gt; 来自 KodeKloud 和 &lt;a href=&#34;https://business.udemy.com/cncf-endorsed-content/&#34;&gt;Udemy &lt;/a&gt; 的课程（查看 CNCF 认可的内容）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=d9xfB5qaOfg&#34;&gt;CKS 课程&lt;/a&gt;，由 Kim Wuestkamp 通过 Killer Shell YouTube 频道提供。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;如需练习，请使用&lt;a href=&#34;https://killer.sh/&#34;&gt;Killer Shell 问题实验室&lt;/a&gt;（购买考试后完全免费）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;你空闲时间做什么？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我在空闲时间喜欢这些事情：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;探索 Kubernetes：它就像海洋一样​​无底，我总是在学习新概念。  Pod 拓扑扩展约束等一些概念并不是任何 k8s 考试的一部分，但这些概念以及调度框架、Pod 优先级和抢占等其他功能确实是神奇的概念。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;探索其他 CNCF 项目：目前通过制定实时策略并部署它们来学习 Kyverno，以了解真正的准入控制器魔力。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;准备其他 CNCF 认证：现在我已经获得了 PCA，我的下一个目标是 &lt;a href=&#34;https://www.cncf.io/training/certification/cca/&#34;&gt;CCA (Cilium认证工程师）&lt;/a&gt; 和 &lt;a href=&#34;https://www.cncf.io/training/certification/ica/&#34;&gt;ICA（Istio 认证工程师）&lt;/a&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;为各种 CNCF 活动做出贡献：我喜欢参加其他 CNCF 活动，并且还在媒体和其他平台上发布我有关 CNCF 技术的知识。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;观看犯罪惊悚片 我喜欢在空闲时间观看犯罪惊悚片。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您会对刚刚开始 K8s 认证之旅的人说些什么？有什么提示或技巧吗？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;只需浏览 Kubernetes 文档，然后在 Killer shell 等免费平台上练习、练习、练习。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;亲自了解 Kubernetes 概念。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;如今，云原生生态系统的意义远不止 Kubernetes。您是否计划获得 CNCF 的其他云原生认证？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我计划完成 CNCF 的所有云原生认证。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我想完成所有 10 个 CNCF 认证，然后很快就会推出新的认证，例如 Kyverno、Backstage、OpenTelemetry。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;所以学习之旅还将继续。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 04 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why Falco’s new response engine is a game changer for open source cloud native security】为什么 Falco 的新响应引擎会改变开源云原生安全的游戏规则</title>
      <link>https://www.cncf.io/blog/2024/11/06/why-falcos-new-response-engine-is-a-game-changer-for-open-source-cloud-native-security/</link>
      <description>【&lt;p&gt;&lt;em&gt;Project post by the Falco Team and Nigel Douglas&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Falco achieved &lt;a href=&#34;https://www.cncf.io/announcements/2024/02/29/cloud-native-computing-foundation-announces-falco-graduation/&#34;&gt;&lt;strong&gt;CNCF Graduation status&lt;/strong&gt;&lt;/a&gt; on February 29, 2024. Following the celebration of this significant milestone at&amp;nbsp; KubeCon EU in Paris earlier this year, the project has seen several major highlight-worthy updates.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Falco community’s recent development efforts have focused on enhancing performance and stability to deliver the best possible user experience for Falco adopters. Notable improvements include the integration of a new endpoint for exposing metrics in Prometheus format, automatic selection of the optimal driver for your system, a new collector that enriches captures with Kubernetes metadata, and many other exciting features.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here are the key highlights:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Falco Talon&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://falco.org/blog/falco-talon-v0-1-0/&#34;&gt;&lt;strong&gt;Falco Talon&lt;/strong&gt;&lt;/a&gt; is officially part of the &lt;a href=&#34;https://github.com/falcosecurity/falco-talon&#34;&gt;&lt;strong&gt;falcosecurity&lt;/strong&gt;&lt;/a&gt; project in Github. Searching for Falco Talon in Helm, you can see it now officially starting off on version 0.1.1. So what is Falco Talon? It’s a dedicated response engine for Falco. Response actions are linked to Falco rules, so when a detection rule is triggered, any of the listed “&lt;a href=&#34;https://docs.falco-talon.org/docs/actionners/list/&#34;&gt;&lt;strong&gt;actionners&lt;/strong&gt;&lt;/a&gt;” can be triggered in response to that unwanted behavior.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm search repo falcosecurity/falco-talon&#xA;NAME                     CHART      APP VERSIONDESCRIPTION                   &#xA;falcosecurity/falco-talon0.1.1        0.1.1      React to the events from Falco&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rethinking how organizations should respond to threats in cloud-native architectures, Talon provides an industry-first, &lt;a href=&#34;https://dzone.com/articles/rethinking-threat-detection-and-response-in-cloud&#34;&gt;&lt;strong&gt;API-driven approach&lt;/strong&gt;&lt;/a&gt; to threat mitigation directly via existing API primitives like &lt;a href=&#34;https://docs.falco-talon.org/docs/actionners/list/#ciliumnetworkpolicy&#34;&gt;&lt;strong&gt;networkpolicy&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://docs.falco-talon.org/docs/actionners/list/#kuberneteslabel&#34;&gt;&lt;strong&gt;label&lt;/strong&gt;&lt;/a&gt; enforcement. and graceful &lt;a href=&#34;https://docs.falco-talon.org/docs/actionners/list/#kubernetesterminate&#34;&gt;&lt;strong&gt;termination&lt;/strong&gt;&lt;/a&gt;. This is a no-code implementation for threat isolation. Assign Falco rules to Falco actions in YAML, and let the automated API responses work their magic. This is the fastest, most efficient, and most reliable approach in today’s rapidly evolving Kubernetes and Cloud environments.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;New regex operator&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The new Regular Expression (RegEx) operator allows you to match patterns in string fields using the &lt;a href=&#34;https://github.com/google/re2/wiki/Syntax&#34;&gt;&lt;strong&gt;Google RE2&lt;/strong&gt;&lt;/a&gt; library. While powerful, it’s important to note that the regex operator is significantly slower — potentially up to ten times slower — than other string comparison operators, which are recommended for simpler cases. For example, to detect certain patterns in file descriptors, you could use the following: &lt;code&gt;fd.name regex [a-z]*/proc/[0-9]+/cmdline&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It is important that users are mindful of performance impacts when opting for regex over simpler string operations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;New Integrations and Sources&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our community has once again played a vital role in expanding Falco’s capabilities by integrating new alerting targets, including Dynatrace, Sumo Logic, OpenTelemetry Traces, and Quickwit. These integrations provide more flexibility in how users receive and analyze security alerts, allowing Falco to seamlessly connect with existing ecosystem tools.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Additionally, Falco can now collect Kubernetes audit logs from Google Kubernetes Engine (&lt;a href=&#34;https://cloud.google.com/blog/products/identity-security/wrangle-your-alerts-with-open-source-falco-and-the-gcpaudit-plugin&#34;&gt;&lt;strong&gt;GKE&lt;/strong&gt;&lt;/a&gt;) and logs from &lt;a href=&#34;https://github.com/gnosek/falco-journald-plugin&#34;&gt;&lt;strong&gt;journald&lt;/strong&gt;&lt;/a&gt;, providing deeper visibility into cluster activities and system-level events. New data sources, such as &lt;a href=&#34;https://github.com/falcosecurity/plugins/tree/main/plugins/kafka&#34;&gt;&lt;strong&gt;Kafka&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/mattiaforc/falco-keycloak-plugin&#34;&gt;&lt;strong&gt;Keycloak&lt;/strong&gt;&lt;/a&gt;, have also been added, broadening the scope of environments which Falco can collect events from. These enhancements further empower teams to detect threats and monitor compliance across a wider range of architectures.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Field transformers and value comparison in conditions&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This applies to the following transform operators:&lt;code&gt; toupper, tolower, b64&lt;/code&gt;, and &lt;code&gt;basename&lt;/code&gt;. Previously, it was not possible to write conditions that compared a field to another field, such as detecting when “a process deletes its own executable.” This limitation existed because field values couldn’t be used on the right-hand side of conditions. However, in this version, we’ve introduced the val() operator, which solves this issue.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;evt.type = unlink and proc.exepath = val(fs.path.name)&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This rule will only trigger if the process’s executable path (&lt;code&gt;proc.exepath&lt;/code&gt;) matches the unlink target (&lt;code&gt;fs.path.name&lt;/code&gt;), effectively detecting when a process attempts to delete its own executable. Additionally, you can apply simple transformation operators to both sides of the comparison:&lt;code&gt; toupper()&lt;/code&gt; and &lt;code&gt;tolower()&lt;/code&gt; convert the case of strings, while b64() decodes base64-encoded strings.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Stay tuned as more transformers will be introduced to support additional use cases! For more details, check the documentation on transform operators.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Automatic driver selection&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Deploying across diverse Kubernetes environments just got easier! When using the official Falco Helm chart and setting &lt;code&gt;driver.kind=auto&lt;/code&gt;, the driver loader now intelligently handles the heavy lifting for you.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s how it works: the driver loader will automatically generate a new Falco configuration file and select the correct engine driver based on the specific node Falco is deployed on. This means whether you’re using eBPF, kmod, or a modern eBPF driver, Falco will configure itself dynamically depending on the environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In many Kubernetes clusters, nodes can differ in terms of kernel versions, capabilities, and driver compatibility. With this new auto-selection feature, you can seamlessly deploy different Falco drivers across various nodes within the same cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This setup gives you flexibility and ensures that each node in your Kubernetes cluster is running Falco in the most optimized way possible, without manual configuration. Simply set driver.kind=auto in the Helm chart and let Falco do the rest.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Built-in Prometheus metrics&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you have been following Falco development, you probably know we are constantly improving support for metrics that tell you how the Falco engine is doing. We now have introduced &lt;a href=&#34;https://falco.org/docs/metrics/falco-metrics/#prometheus-support&#34;&gt;&lt;strong&gt;Prometheus support&lt;/strong&gt;&lt;/a&gt; so you can better integrate Falco with your existing performance monitoring infrastructure and paves the way for the community to create an official Grafana dashboard that can be integrated into users’ charts. We integrated the new endpoint to expose a lot of useful metrics in the Prometheus format, which allows for the out-of-the-box Grafana dashboard creation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Plugins Rust SDK&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;a href=&#34;https://gnosek.github.io/falco-plugin-rs/falco_plugin/index.html&#34;&gt;&lt;strong&gt;Falco Plugin Rust SDK&lt;/strong&gt;&lt;/a&gt; is a newly developed toolkit designed to allow developers to build Falco plugins using the Rust programming language. Rust, known for its focus on safety, performance, and efficiency, is a natural fit for building high-quality plugins that interact with the Falco ecosystem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This SDK provides a robust framework for creating Falco plugins, offering flexibility for different plugin types. Developers can create both dynamically and statically linked plugins:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dynamically linked plugins&lt;/strong&gt;: Built as shared libraries using &lt;code&gt;crate_type = [&#34;dylib&#34;]&lt;/code&gt;, these plugins leverage macros like plugin! to enable various plugin capabilities.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Statically linked plugins&lt;/strong&gt;: Created using &lt;code&gt;crate_type = [&#34;staticlib&#34;],&lt;/code&gt; these plugins use the &lt;code&gt;static_plugin&lt;/code&gt;! macro without needing to manage individual capabilities.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The SDK simplifies plugin development and extends Falco’s functionality, while opening doors for Rust developers to contribute and innovate within the Falco community.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Falco Growth&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To close where we began, Falco has seen a boom in growth and usage since achieving CNCF graduation earlier this year. In total, Falco has now been downloaded 130M times, but that’s not all.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When users deploy Falco with its default configuration, Falco checks for community rule updates four times per day. We can derive how many Falco instances run daily using rules download stats &lt;a href=&#34;https://github.com/falcosecurity/rules/pkgs/container/rules%2Ffalco-rules&#34;&gt;&lt;strong&gt;from GitHub&lt;/strong&gt;&lt;/a&gt; — in the last month, we have experienced over 120M downloads for the latest ruleset version. In short, Falco currently monitors around 1M active nodes daily using the latest ruleset and subscribed to the community rules feed. This is in addition to many millions more running previous versions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thank you for your continued support of the Falco project. We hope to see you at &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/&#34;&gt;KubeCon + CloudNativeCon North America&lt;/a&gt; in Salt Lake City!&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;Falco 团队和 Nigel Douglas 发布的项目帖子&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Falco 取得&lt;a href=&#34;https://www.cncf.io/announcements/2024/02/29/cloud-native-computing-foundation-announces-falco-graduation/&#34;&gt;&lt;strong&gt;CNCF 毕业状态&lt;/strong&gt;&lt;/a&gt; 于 2024 年 2 月 29 日举行。继今年早些时候在巴黎 KubeCon EU 庆祝这一重要里程碑之后，该项目出现了几个值得关注的重大事件更新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Falco 社区最近的开发工作侧重于增强性能和稳定性，以便为 Falco 采用者提供最佳的用户体验。显着的改进包括集成用于以 Prometheus 格式公开指标的新端点、自动选择适合您系统的最佳驱动程序、使用 Kubernetes 元数据丰富捕获的新收集器以及许多其他令人兴奋的功能。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下是主要亮点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;隼爪&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://falco.org/blog/falco-talon-v0-1-0/&#34;&gt;&lt;strong&gt;Falco Talon&lt;/strong&gt;&lt;/a&gt; 是 &lt;a href=&#34;https://github.com/falcosecurity/falco-talon&#34;&gt;Github 中的&lt;strong&gt;falcosecurity&lt;/strong&gt;&lt;/a&gt; 项目。在Helm中搜索Falco Talon，可以看到它现在正式启动于0.1.1版本。那么Falco Talon 是什么？它是 Falco 的专用响应引擎。响应操作链接到 Falco 规则，因此当触发检测规则时，任何列出的“&lt;a href=&#34;https://docs.falco-talon.org/docs/actionners/list/&#34;&gt;&lt;strong&gt;actionners &lt;/strong&gt;&lt;/a&gt;”可以被触发以响应这种不需要的行为。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm 搜索仓库 falcosecurity/falco-talon&#xA;名称图表应用程序版本描述                   &#xA;falcosecurity/falco-talon0.1.1 0.1.1 对 Falco 的事件做出反应&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;重新思考组织应如何应对云原生架构中的威胁，Talon 提供了业界首创的&lt;a href=&#34;https://dzone.com/articles/rethinking-threat-detection-and-response-in-云&#34;&gt;&lt;strong&gt;API驱动的方法&lt;/strong&gt;&lt;/a&gt;直接通过现有的API原语（例如&lt;a）缓解威胁href=&#34;https://docs.falco-talon.org/docs/actionners/list/#ciliumnetworkpolicy&#34;&gt;&lt;strong&gt;网络策略&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&#34;https://docs.falco -talon.org/docs/actionners/list/#kuberneteslabel&#34;&gt;&lt;strong&gt;标签&lt;/strong&gt;&lt;/a&gt;强制执行。和优雅的&lt;a href=&#34;https://docs.falco-talon.org/docs/actionners/list/#kubernetesterminate&#34;&gt;&lt;strong&gt;终止&lt;/strong&gt;&lt;/a&gt;。这是用于威胁隔离的无代码实现。在 YAML 中将 Falco 规则分配给 Falco 操作，并让自动化 API 响应发挥其魔力。在当今快速发展的 Kubernetes 和云环境中，这是最快、最高效、最可靠的方法。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;新的正则表达式运算符&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;新的正则表达式 (RegEx) 运算符允许您匹配 stri 中的模式使用 &lt;a href=&#34;https://github.com/google/re2/wiki/Syntax&#34;&gt;&lt;strong&gt;Google RE2&lt;/strong&gt;&lt;/a&gt; 库的 ng 字段。虽然功能强大，但值得注意的是，正则表达式运算符比其他字符串比较运算符要慢得多（可能慢十倍），建议将其用于更简单的情况。例如，要检测文件描述符中的某些模式，您可以使用以下命令：&lt;code&gt;fd.name regex [a-z]*/proc/[0-9]+/cmdline&lt;/code&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用户在选择正则表达式而不是简单的字符串操作时要注意性能影响，这一点很重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;新的集成和来源&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的社区通过集成新的警报目标（包括 Dynatrace、Sumo Logic、OpenTelemetry Traces 和 Quickwit），在扩展 Falco 功能方面再次发挥了至关重要的作用。这些集成为用户接收和分析安全警报的方式提供了更大的灵活性，使 Falco 能够与现有的生态系统工具无缝连接。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，Falco 现在可以从 Google Kubernetes Engine 收集 Kubernetes 审核日志 (&lt;a href=&#34;https://cloud.google.com/blog/products/identity-security/wrangle-your-alerts-with-open- source-falco-and-the-gcpaudit-plugin&#34;&gt;&lt;strong&gt;GKE&lt;/strong&gt;&lt;/a&gt;）和来自 &lt;a href=&#34;https://github.com/gnosek/falco-journald-plugin&#34; 的日志&gt;&lt;strong&gt;日志&lt;/strong&gt;&lt;/a&gt;，提供对集群活动和系统级事件的更深入的可见性。新数据源，例如 &lt;a href=&#34;https://github.com/falcosecurity/plugins/tree/main/plugins/kafka&#34;&gt;&lt;strong&gt;Kafka&lt;/strong&gt;&lt;/a&gt; 和 &lt;a href=&#34; https://github.com/mattiaforc/falco-keycloak-plugin&#34;&gt;&lt;strong&gt;Keycloak&lt;/strong&gt;&lt;/a&gt; 也已添加，扩大了 Falco 可以收集事件的环境范围。这些增强功能进一步使团队能够检测威胁并监控更广泛架构的合规性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;现场变压器和条件下的值比较&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这适用于以下转换运算符：&lt;code&gt; toupper、tolower、b64&lt;/code&gt; 和 &lt;code&gt;basename&lt;/code&gt;。以前，无法编写将一个字段与另一个字段进行比较的条件，例如检测“进程删除其自己的可执行文件”的时间。存在此限制是因为字段值无法在条件的右侧使用。不过，在这个版本中，我们引入了 val() 运算符，解决了这个问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;evt.type = unlink 和 proc.exepath = val(fs.path.name)&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;仅当进程的可执行路径 (&lt;code&gt;proc.exepath&lt;/code&gt;) 与取消链接目标 (&lt;code&gt;fs.path.name&lt;/code&gt;) 匹配时才会触发此规则，从而有效检测进程何时尝试删除它自己的可执行文件。此外，您可以对比较的两边应用简单的转换运算符：&lt;code&gt; toupper()&lt;/code&gt; 和 &lt;code&gt;tolower()&lt;/code&gt; 转换字符串的大小写，而 b64() 解码 Base64 编码的字符串。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;敬请关注，我们将引入更多变压器来支持其他用例！有关更多详细信息，请查看有关转换运算符的文档。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;自动选择驱动程序&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;跨不同 Kubernetes 环境进行部署变得更加容易！当使用官方 Falco Helm 图表并设置 &lt;code&gt;driver.kind=auto&lt;/code&gt; 时，驱动程序加载程序现在可以智能地为您处理繁重的工作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;其工作原理如下：驱动程序加载器将自动生成新的 Falco 配置文件，并根据部署 Falco 的特定节点选择正确的引擎驱动程序。这意味着无论您使用 eBPF、kmod 还是现代 eBPF 驱动程序，Falco 都会根据环境动态配置自身。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在许多 Kubernetes 集群中，节点在内核版本、功能和驱动程序兼容性方面可能有所不同。借助这一新的自动选择功能，您可以在同一集群内的各个节点上无缝部署不同的 Falco 驱动程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此设置为您提供了灵活性，并确保 Kubernetes 集群中的每个节点都以最优化的方式运行 Falco，无需手动配置。只需在 Helm 图表中设置 driver.kind=auto ，然后让 Falco 完成剩下的工作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;内置 Prometheus 指标&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您一直关注 Falco 的开发，您可能知道我们正在不断改进对指标的支持，这些指标可以告诉您 Falco 引擎的运行情况。我们现在引入了&lt;a href=&#34;https://falco.org/docs/metrics/falco-metrics/#prometheus-support&#34;&gt;&lt;strong&gt;Prometheus 支持&lt;/strong&gt;&lt;/a&gt;，以便您可以更好地集成 Falco与您现有的性能监控基础设施相结合，并为社区创建可集成到用户图表中的官方 Grafana 仪表板铺平道路。我们集成了新端点，以 Prometheus 格式公开许多有用的指标，从而允许创建开箱即用的 Grafana 仪表板。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;插件 Rust SDK&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://gnosek.github.io/falco-plugin-rs/falco_plugin/index.html&#34;&gt;&lt;strong&gt;Falco Plugin Rust SDK&lt;/strong&gt;&lt;/a&gt; 是一个新的开发的工具包旨在允许开发人员使用 Rust 编程语言构建 Falco 插件。 Rust 以其对安全性、性能和效率的关注而闻名，非常适合构建与 Falco 生态系统交互的高质量插件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该 SDK 提供了用于创建 Falco 插件的强大框架，为不同插件类型提供了灵活性。开发人员可以创建动态和静态链接的插件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;动态链接插件&lt;/strong&gt;：使用&lt;code&gt;crate_type = [&#34;dylib&#34;]&lt;/code&gt;构建为共享库，这些插件像插件一样利用宏！启用各种插件功能。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;统计专门链接的插件&lt;/strong&gt;：使用&lt;code&gt;crate_type = [&#34;staticlib&#34;]创建，&lt;/code&gt;这些插件使用&lt;code&gt;static_plugin&lt;/code&gt;！宏观，无需管理个人能力。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该 SDK 简化了插件开发并扩展了 Falco 的功能，同时为 Rust 开发人员在 Falco 社区中做出贡献和创新打开了大门。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Falco 成长&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，自今年早些时候获得 CNCF 毕业以来，Falco 的增长和使用量出现了蓬勃发展。目前，Falco 的总下载量已达到 1.3 亿次，但这还不是全部。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当用户使用默认配置部署 Falco 时，Falco 每天检查社区规则更新四次。我们可以使用&lt;a href=&#34;https://github.com/falcosecurity/rules/pkgs/container/rules%2Ffalco-rules&#34;&gt;&lt;strong&gt;来自 GitHub&lt;/strong&gt; 的规则下载统计信息来得出每天运行的 Falco 实例数量&lt;/a&gt; — 上个月，最新规则集版本的下载量超过 1.2 亿次。简而言之，Falco 目前每天使用最新的规则集监控大约 100 万个活跃节点，并订阅社区规则源。除此之外，还有数百万人正在运行以前的版本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢您对 Falco 项目的持续支持。我们希望在盐湖城的&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/&#34;&gt;KubeCon + CloudNativeCon 北美&lt;/a&gt;见到您！&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 05 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to ace the Prometheus Certified Associate (PCA) exam】如何通过 Prometheus Certified Associate (PCA) 考试</title>
      <link>https://www.cncf.io/blog/2024/11/07/how-to-ace-the-prometheus-certified-associate-pca-exam/</link>
      <description>【&lt;p&gt;&lt;em&gt;Community post originally published on &lt;a href=&#34;https://faun.pub/how-to-ace-pca-prometheus-certified-associate-exam-6485fbe5789f&#34;&gt;Medium&lt;/a&gt; by Giorgi Keratishvili&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:2000/1*7qsoqjiCKrUx0-RDKKzfwg.png&#34; alt=&#34;PCA image&#34; style=&#34;width:900px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;7019&#34;&gt;Introduction&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;724c&#34;&gt;If you have worked on&amp;nbsp;&lt;strong&gt;Kubernetes production systems&lt;/strong&gt;&amp;nbsp;at any time during the last&amp;nbsp;&lt;strong&gt;10 years&lt;/strong&gt;&amp;nbsp;and needed to check your pods or application uptime, resource consumption, HTTP error rates, and needed to observe them for a certain period of time, most probably you have been using the&amp;nbsp;&lt;strong&gt;Prometheus&amp;nbsp;&lt;/strong&gt;and&amp;nbsp;&lt;strong&gt;Grafana&amp;nbsp;&lt;/strong&gt;stack. If you want to extend your knowledge of&amp;nbsp;&lt;strong&gt;observability&amp;nbsp;&lt;/strong&gt;and&amp;nbsp;&lt;strong&gt;monitoring&lt;/strong&gt;, then this exam is exactly for you because it does not focus only on Prometheus but also on general concepts such as SLA, SLO, SLI, how to structure alerting, and best practices for observability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;3bf3&#34;&gt;Besides that, Prometheus is&amp;nbsp;one of the first open source projects&amp;nbsp;that joined the CNCF after Kubernetes and has since been one of the most preferred tools for monitoring and observability in containerized environments. It also incorporates other open source projects such as&amp;nbsp;&lt;strong&gt;Grafana&amp;nbsp;&lt;/strong&gt;for visualization and&amp;nbsp;&lt;strong&gt;OpenTelemetry&amp;nbsp;&lt;/strong&gt;for observability, which greatly impact the whole industry.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;0925&#34;&gt;Who should take this exam?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;d6c1&#34;&gt;As mentioned above, the majority of the time we see Prometheus in Kubernetes or containerized environments, but nonetheless, it is not limited only to containerized scenarios. Overall, if we have any production system, we must have some kind of monitoring tool.&amp;nbsp;&lt;strong&gt;If we don’t have observability, we are blind&lt;/strong&gt;&amp;nbsp;and when things go wrong — and they will — it’s just a matter of time before it happens, you will appreciate that you could see more and on time everything.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;963e&#34;&gt;Regarding persons who would benefit&amp;nbsp;&lt;strong&gt;SysAdmins/Dev/Ops/SRE/Managers/Patform engineers&lt;/strong&gt;&amp;nbsp;or anyone who is doing anything on production should consider it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1400/0*Cs7JWMoQKhLVkhkT.jpg&#34; alt=&#34;image&#34; style=&#34;width:465px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;af01&#34;&gt;Exam Format and PSI Proctored Exam Tips&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;4549&#34;&gt;So, are we fired up like a torch, eager to spot any degradation in your systems and wanting to pass the exam? Then, we have a long path ahead until we reach this point. First, we need to understand what kind of exam it is compared to&amp;nbsp;&lt;strong&gt;CKAD&lt;/strong&gt;,&amp;nbsp;&lt;strong&gt;CKA&lt;/strong&gt;, and&amp;nbsp;&lt;strong&gt;CKS&lt;/strong&gt;. This is the first exam where the CNCF has adopted&amp;nbsp;&lt;strong&gt;multiple-choice questions&lt;/strong&gt;, and compared to other multiple-choice exams, this one, I would say, is not easy-peasy. However, it is still qualified as pre-professional, on par with the&lt;strong&gt;&amp;nbsp;KCNA&amp;nbsp;&lt;/strong&gt;and&amp;nbsp;&lt;strong&gt;KCSA&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;6990&#34;&gt;This exam is conducted online, proctored similarly to other Kubernetes certifications, and is facilitated by&amp;nbsp;&lt;strong&gt;PSI&lt;/strong&gt;. As someone who has taken more than 15 exams with PSI, I can say that every time it’s a new journey. I&amp;nbsp;&lt;strong&gt;HIGHLY ADVISE joining the exam 30 minutes&lt;/strong&gt;&amp;nbsp;before taking the test because there are pre-checks of ID, and the room in which you are taking it needs to be checked for exam criteria. Please check these two links for the&amp;nbsp;&lt;a href=&#34;https://docs.linuxfoundation.org/tc-docs/certification/lf-handbook2/exam-rules-and-policies&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;exam rules&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://docs.linuxfoundation.org/tc-docs/certification/lf-handbook2/taking-the-exam&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;PSI portal guide&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;2676&#34;&gt;You’ll have&amp;nbsp;&lt;strong&gt;90 minutes&lt;/strong&gt;&amp;nbsp;to answer&lt;strong&gt;&amp;nbsp;60 questions&lt;/strong&gt;, which is generally considered sufficient time. Be prepared for some questions that can be quite tricky. I marked a couple of them for review and would advise doing the same because sometimes you could find a hint or partial answers in the next question. By this way, you could refer back to those questions. Regarding pricing, the exam costs&lt;strong&gt;&amp;nbsp;$250&lt;/strong&gt;, but you can&amp;nbsp;&lt;strong&gt;often&amp;nbsp;&lt;/strong&gt;find it at a&amp;nbsp;&lt;strong&gt;discount&lt;/strong&gt; during Black Friday promotions or near dates for CNCF events like KubeCon, Open Source Summit, etc.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1400/0*mLVgSUK5oX-UDIzD.png&#34; alt=&#34;Prometheus logo&#34; style=&#34;width:343px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;7a6d&#34;&gt;The Path of Learning&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;2765&#34;&gt;At this point, we understand what we have signed up for and are ready to dedicate time to training, but where should we start? Before taking this exam, I had a good experience with Kubernetes and its ecosystem and had experience with Prometheus but only for things that I needed. I did not delve deeper, yet I still learned a lot from this exam.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;8f98&#34;&gt;Let break down&amp;nbsp;&lt;strong&gt;Domains &amp;amp; Competencies&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-preformatted&#34;&gt;&lt;strong&gt;**Observability Concepts 18%**&lt;/strong&gt;&lt;br&gt;    Metrics&lt;br&gt;    Understand logs and events&lt;br&gt;    Tracing and Spans&lt;br&gt;    Push vs Pull&lt;br&gt;    Service Discovery&lt;br&gt;    Basics of SLOs, SLAs, and SLIs&lt;br&gt;&lt;br&gt;&lt;strong&gt;**Prometheus Fundamentals 20%**&lt;/strong&gt;&lt;br&gt;    System Architecture&lt;br&gt;    Configuration and Scraping&lt;br&gt;    Understanding Prometheus Limitations&lt;br&gt;    Data Model and Labels&lt;br&gt;    Exposition Format&lt;br&gt;&lt;br&gt;&lt;strong&gt;**PromQL 28%**&lt;/strong&gt;&lt;br&gt;    Selecting Data&lt;br&gt;    Rates and Derivatives&lt;br&gt;    Aggregating over time&lt;br&gt;    Aggregating over dimensions&lt;br&gt;    Binary operators&lt;br&gt;    Histograms&lt;br&gt;    Timestamp Metrics&lt;br&gt;&lt;br&gt;&lt;strong&gt;**Instrumentation and Exporters 16%**&lt;/strong&gt;&lt;br&gt;    Client Libraries&lt;br&gt;    Instrumentation&lt;br&gt;    Exporters&lt;br&gt;    Structuring and naming metrics&lt;br&gt;&lt;br&gt;&lt;strong&gt;**Alerting &amp;amp; Dashboarding 18%**&lt;/strong&gt;&lt;br&gt;    Dashboarding basics&lt;br&gt;    Configuring Alerting rules&lt;br&gt;    Understand and Use Alertmanager&lt;br&gt;    Alerting basics (when, what, and why)&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;6e54&#34;&gt;At first glance, this list might seem too simple and easy; however, we need to learn the fundamentals of observability first in order to understand higher-level concepts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;9a60&#34;&gt;Understanding Observability&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;300e&#34;&gt;Observability is a measure of how well the internal states of a system can be inferred from knowledge of its external outputs. In the context of system engineering and IT operations, observability is crucial for diagnosing issues and ensuring that all parts of the system are functioning as expected.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;d86f&#34;&gt;The Pillars of Observability&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Logs: These are immutable records that describe discrete events that have happened over time. Logs are useful for understanding what happened in a system after an event.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Metrics: These are numerical values that measure some aspect of a system over intervals of time. Metrics are vital for understanding the performance of a system and for making comparisons over time.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Traces: These are records of the full paths or sequences of events that occur as requests flow through a system. Tracing helps in identifying how requests propagate through a system and where delays or issues arise.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1400/0*fLO7pJnCaWwiIGxZ.png&#34; alt=&#34;bubble chart with observability, traces, logs and metrics&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;a58e&#34;&gt;Some Key Concepts to Remember:&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;SLA (Service Level Agreement):&lt;/strong&gt;&amp;nbsp;An SLA is the agreement you establish with your clients or users, defining the level of service they can expect.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;SLO (Service Level Objective):&lt;/strong&gt;&amp;nbsp;SLOs are specific, measurable goals your team must achieve to meet the SLA. They represent the performance targets you aim to reach.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;SLI (Service Level Indicator)&lt;/strong&gt;: SLIs are the actual metrics or measurements that indicate the real-time performance of your system. They are used to assess compliance with SLOs.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Pull:&lt;/strong&gt;&amp;nbsp;Metric scraping is initiated by Prometheus. Prometheus queries target endpoints to collect metrics at regular intervals.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Push:&lt;/strong&gt;&amp;nbsp;Metrics are published by the application to an endpoint (e.g., Pushgateway). This method allows applications to push metrics when they are generated.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Trace&lt;/strong&gt;: A trace represents a sequence of operations that together form a unique transaction handled by an application and its constituent services. Traces help in understanding the flow of requests and identifying bottlenecks or issues in your system.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Span&lt;/strong&gt;: A span, in the context of tracing, represents a single operation within a trace. It provides detailed information about the duration and context of that operation.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Rule Types:&amp;nbsp;&lt;/strong&gt;In Prometheus, there are two types of rules.&amp;nbsp;&lt;strong&gt;Record rules&lt;/strong&gt;&amp;nbsp;help precompute frequently needed or computationally expensive expressions, while&amp;nbsp;&lt;strong&gt;alert rule&lt;/strong&gt;s enable you to define alert conditions using PromQL queries.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Meta-Monitoring:&amp;nbsp;&lt;/strong&gt;Comprehend the concept of meta-monitoring, which involves monitoring the Prometheus instances themselves.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;f154&#34;&gt;Key Learning Objectives:&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;PromQL&lt;/strong&gt;: PromQL is pivotal you can put your skills to the test by exploring metrics&amp;nbsp;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/examples/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;here&lt;/a&gt;&amp;nbsp;and delving into Prometheus’s basic system architecture&amp;nbsp;&lt;a href=&#34;https://prometheus.io/docs/introduction/overview/#architecture&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;here&lt;/a&gt;. Additionally, grasp the fundamentals of Prometheus’s basic functions&amp;nbsp;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/functions/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;AlertManager&lt;/strong&gt;: You need to understand AlertManager and its functionalities are crucial. Gain insights into AlertManager features&amp;nbsp;&lt;a href=&#34;https://prometheus.io/docs/alerting/latest/alertmanager/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;here&lt;/a&gt;&amp;nbsp;and visualize your AlertManager routes&amp;nbsp;&lt;a href=&#34;https://prometheus.io/webtools/alerting/routing-tree-editor/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Exporters&lt;/strong&gt;: Familiarize yourself with exporters like node_exporter and blackbox_exporter.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1400/0*yN90oQ-nfP8hbpxd.png&#34; alt=&#34;map&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;b570&#34;&gt;You can explore and learn about PCA Certification and related topics freely through the following GitHub repositories which I have used&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/walidshaari/PrometheusCertifiedAssociate&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;walidshaari/PrometheusCertifiedAssociate&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/edgarpf/prometheus-certified-associate&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;edgarpf/prometheus-certified-associate&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Al-HusseinHameedJasim/prometheus-certified-associate&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Al-HusseinHameedJasim/prometheus-certified-associate&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/edgarpf/prometheus-certified-associate&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://github.com/edgarpf/prometheus-certified-associate&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;f0de&#34;&gt;For structured and comprehensive PCA exam preparation, consider investing in these paid course from KodeKloud where they providy play ground I used it in preparation and it helped a lot&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kodekloud.com/courses/prometheus-certified-associate-pca&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;KodeKloud PCA Certification Course&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://training.promlabs.com/trainings/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://training.promlabs.com/trainings/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://robustperception.teachable.com/p/introduction-to-prometheus&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://robustperception.teachable.com/p/introduction-to-prometheus&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;0235&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;ffa5&#34;&gt;The exam is not easy among other certs. I would rank it in this order&amp;nbsp;&lt;strong&gt;KCNA/CGOA/CKAD/PCA/KCSA/CKA/CKS&lt;/strong&gt;. After conducting the exam, you will receive grading within 24 hours and after passing the exam it feels pretty satisfying. Overall, I hope it was informative and useful 🚀&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:2000/1*ENet0gQW5vbAyT1J9U-lwQ.png&#34; alt=&#34;PCA certificate&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/tag/prometheus?source=post_page-----6485fbe5789f--------------------------------&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;社区帖子最初由 Giorgi 在 &lt;a href=&#34;https://faun.pub/how-to-ace-pca-prometheus-certified-associate-exam-6485fbe5789f&#34;&gt;Medium&lt;/a&gt; 上发布克拉蒂什维利&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image is-resized&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:2000/1*7qsoqjiCKrUx0-RDKKzfwg.png &#34; alt=&#34;PCA 图像&#34; style=&#34;width:900px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;7019&#34;&gt;简介&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;724c&#34;&gt;如果您在过去&lt;strong&gt;10年&lt;/strong&gt;的任何时间都曾使用过&lt;strong&gt;Kubernetes生产系统&lt;/strong&gt;，并且需要检查您的 Pod 或应用程序的正常运行时间、资源消耗情况、HTTP 错误率，并且需要在一段时间内观察它们，很可能您一直在使用 &lt;strong&gt;Prometheus&lt;/strong&gt; 和 &lt;strong&gt;Grafana&lt;/strong&gt; 堆栈。如果您想扩展&lt;strong&gt;可观察性&lt;/strong&gt;和&lt;strong&gt;监控&lt;/strong&gt;方面的知识，那么这项考试非常适合您，因为它不仅关注 Prometheus，还关注诸如 SLA、 SLO、SLI、如何构建警报以及可观察性的最佳实践。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;3bf3&#34;&gt;除此之外，Prometheus 是继 Kubernetes 之后最早加入 CNCF 的开源项目之一，自此成为容器化环境中监控和可观察性最受欢迎的工具之一。它还整合了其他开源项目，例如用于可视化的 &lt;strong&gt;Grafana&lt;/strong&gt; 和用于可观察性的 &lt;strong&gt;OpenTelemetry &lt;/strong&gt;，这对整个行业产生了巨大影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;0925&#34;&gt;谁应该参加这项考试？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;d6c1&#34;&gt;如上所述，我们大多数时候在 Kubernetes 或容器化环境中看到 Prometheus，但它不仅限于容器化场景。总的来说，如果我们有任何生产系统，我们就必须有某种监控工具。 &lt;strong&gt;如果我们没有可观察性，我们就是盲目的&lt;/strong&gt;，当事情出错时（它们确实会出错），它发生只是时间问题，您会感激自己可以看到更多、准时的一切.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;963e&#34;&gt;对于&lt;strong&gt;SysAdmins/Dev/Ops/SRE/Managers/Patform 工程师&lt;/strong&gt;受益的人员或任何在生产中从事任何工作的人都应该考虑它。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image is-resized&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1400/0*Cs7JWMoQKhLVkhkT.jpg&#34; alt =&#34;图像&#34; style=&#34;width:465px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;af01&#34;&gt;考试格式和 PSI 监考考试提示&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;4549&#34;&gt;那么，我们是否像火炬一样兴奋，渴望发现您系统中的任何退化并希望通过考试？然后，在到达这一点之前，我们还有很长的路要走。首先，我们需要了解一下它与&lt;strong&gt;CKAD&lt;/strong&gt;、&lt;strong&gt;CKA&lt;/strong&gt;和&lt;strong&gt;CKS&lt;/strong&gt;相比是一种考试。这是 CNCF 第一次采用&lt;strong&gt;多项选择题&lt;/strong&gt;的考试，与其他多项选择题考试相比，我想说，这次考试并不容易。不过，它仍然具有与&lt;strong&gt;朝中社&lt;/strong&gt;和&lt;strong&gt;KCSA&lt;/strong&gt;同等的预科资格。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;6990&#34;&gt;此考试在线进行，监考方式与其他 Kubernetes 认证类似，并由 &lt;strong&gt;PSI&lt;/strong&gt; 提供协助。作为参加过超过 15 次 PSI 考试的人，我可以说每次都是新的旅程。我&lt;strong&gt;强烈建议在考试前 30 分钟参加考试&lt;/strong&gt;，因为需要预先检查身份证件，并且需要检查您参加考试的房间是否符合考试标准。请检查这两个链接以获取 &lt;a href=&#34;https://docs.linuxfoundation.org/tc-docs/certification/lf-handbook2/exam-rules-and-policies&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank &#34;&gt;&lt;strong&gt;考试规​​则&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&#34;https://docs.linuxfoundation.org/tc-docs/certification/lf-handbook2/take-the-exam&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;PSI 门户指南&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;2676&#34;&gt;您将有&lt;strong&gt;90 分钟&lt;/strong&gt;时间来回答&lt;strong&gt;60 个问题&lt;/strong&gt;，这通常被认为是足够的时间。为一些可能相当棘手的问题做好准备。我标记了其中几个以供审查，并建议您也这样做，因为有时您可以在下一个问题中找到提示或部分答案。这样你就可以回过头来看看这些问题了。关于定价，考试费用&lt;strong&gt; 250 美元&lt;/strong&gt;，但您&lt;strong&gt;通常&lt;/strong&gt;可以在黑色星期五促销期间或临近 CNCF 活动（例如 KubeCon）期间以&lt;strong&gt;折扣&lt;/strong&gt;找到它、开源峰会等&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image is-resized&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1400/0*mLVgSUK5oX-UDIzD.png &#34; alt=&#34;普罗米修斯标志&#34; style=&#34;width:343px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;7a6d&#34;&gt;学习之路&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;2765&#34;&gt;至此，我们了解了自己注册的目的，并准备好投入时间进行培训，但我们应该从哪里开始呢？在参加这次考试之前，我对 Kubernetes 及其生态系统有很好的体验，并且对 Prometheus 有很好的体验，但仅限于我需要的东西。我没有深入研究，但我还是从这次考试中学到了很多东西。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;8f98&#34;&gt;让我们分解一下&lt;strong&gt;领域和能力&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-preformatted&#34;&gt;&lt;strong&gt;**可观测性概念 18%**&lt;/strong&gt;&lt;br&gt; 指标&lt;br&gt; 了解日志和事件&lt;br&gt; 跟踪和跨度&lt;br&gt; 推与拉&lt;br&gt; 服务发现&lt;br&gt; SLO、SLA 和 SLI 基础知识&lt;br&gt;&lt;br&gt;&lt;strong&gt;**Prometheus 基础知识 20%**&lt;/strong&gt;&lt;br&gt; 系统架构&lt;br&gt; 配置和抓取&lt;br&gt; 了解 Prometheus 限制&lt;br&gt; 数据模型和标签&lt;br&gt; 说明格式&lt;br&gt;&lt;br&gt;&lt;strong &gt;**PromQL 28%**&lt;/strong&gt;&lt;br&gt; 选择数据&lt;br&gt; 比率和导数&lt;br&gt; 随时间聚合&lt;br&gt; 跨维度聚合&lt;br&gt; 二元运算符&lt;br&gt; 直方图&lt;br&gt; 时间戳指标&lt; br&gt;&lt;br&gt;&lt;strong&gt;**工具和导出器 16%**&lt;/strong&gt;&lt;br&gt; 客户端库&lt;br&gt; 工具&lt;br&gt; 导出器&lt;br&gt; 构建和命名指标&lt;br&gt;&lt;br&gt;&lt;strong&gt; **警报和仪表板 18%**&lt;/strong&gt;&lt;br&gt; 仪表板基础知识&lt;br&gt; 配置警报规则&lt;br&gt; 了解和使用 Alertmanager&lt;br&gt; 警报基础知识（时间、内容和原因）&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;6e54&#34;&gt;乍一看，这个列表似乎过于简单和容易；然而，我们需要首先学习可观察性的基础知识，才能理解更高层次的概念。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;9a60&#34;&gt;了解可观察性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;300e&#34;&gt;可观测性是衡量系统内部状态如何根据其外部输出的知识推断出来的指标。在系统工程和 IT 运营的背景下，可观察性对于诊断问题和确保系统所有部分按预期运行至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;d86f&#34;&gt;可观察性的支柱&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;日志：这些是不可变的记录，描述随着时间的推移发生的离散事件。日志对于了解事件发生后系统中发生的情况很有用。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;指标：这些是在一段时间内衡量系统某些方面的数值。指标对于了解系统的性能以及随时间进行比较至关重要。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;跟踪：这些是请求流经系统时发生的完整路径或事件序列的记录。跟踪有助于识别请求如何在系统中传播以及出现延迟或问题的位置。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1400/0*fLO7pJnCaWwiIGxZ.png&#34; alt=&#34;bubble包含可观察性、痕迹、日志和指标的图表”referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;a58e&#34;&gt;一些需要记住的关键概念：&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;SLA（服务级别协议）&lt;/strong&gt;：SLA 是您与客户或用户签订的协议，定义了他们可以期望的服务级别。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;SLO（服务级别目标）&lt;/strong&gt;：SLO 是您的团队为满足 SLA 必须实现的具体、可衡量的目标。它们代表您想要达到的绩效目标。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;SLI（服务水平指标）&lt;/strong&gt;：SLI 是指示系统实时性能的实际指标或测量结果。他们习惯于作为确保遵守 SLO。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;拉动&lt;/strong&gt;：指标抓取由 Prometheus 发起。 Prometheus 查询目标端点以定期收集指标。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;推送&lt;/strong&gt;：指标由应用程序发布到端点（例如 Pushgateway）。此方法允许应用程序在生成指标时推送指标。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;跟踪&lt;/strong&gt;：跟踪表示一系列操作，这些操作共同形成由应用程序及其组成服务处理的唯一事务。跟踪有助于了解请求流并识别系统中的瓶颈或问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;跨度&lt;/strong&gt;：在跟踪上下文中，跨度表示跟踪中的单个操作。它提供有关该操作的持续时间和上下文的详细信息。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;规则类型：&lt;/strong&gt;在 Prometheus 中，有两种类型的规则。 &lt;strong&gt;记录规则&lt;/strong&gt;有助于预先计算经常需要的或计算成本较高的表达式，而&lt;strong&gt;警报规则&lt;/strong&gt;使您能够使用 PromQL 查询定义警报条件。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;元监控：&lt;/strong&gt;理解元监控的概念，其中涉及监控 Prometheus 实例本身。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;f154&#34;&gt;主要学习目标：&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;PromQL&lt;/strong&gt;：PromQL 至关重要，您可以通过探索指标来测试您的技能&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/examples/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;此处&lt;/a&gt;并深入研究 Prometheus 的基本系统架构&lt;a href=&#34;https://prometheus.io/docs/introduction/overview/#architecture&#34; target=&#34;_blank “ rel=&#34;noreferrer noopener&#34;&gt;此处&lt;/a&gt;。此外，&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/functions/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;此处&lt;/a&gt;掌握 Prometheus 基本功能的基础知识.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;AlertManager&lt;/strong&gt;：您需要了解AlertManager，它的功能至关重要。 &lt;a href=&#34;https://prometheus.io/docs/alerting/latest/alertmanager/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;此处&lt;/a&gt;深入了解 AlertManager 功能，并可视化您的 AlertManager 路线&lt; a href=&#34;https://prometheus.io/webtools/alerting/routing-tree-editor/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;此处&lt;/a&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;导出器&lt;/strong&gt;：熟悉 node_exporter 和 blackbox_exporter 等导出器。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:1400/0*yN90oQ-nfP8hbpxd.png&#34; alt= “地图”referrerpolicy =“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;b570&#34;&gt;您可以通过我使用过的以下 GitHub 存储库自由探索和了解 PCA 认证及相关主题&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-块-列表&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/walidshaari/PrometheusCertifiedAssociate&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;walidshaari/PrometheusCertifiedAssociate&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/edgarpf/prometheus-certified-associate&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;edgarpf/prometheus-certified-associate&lt;/a&gt;&lt;/li &gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Al-HusseinHameedJasim/prometheus-certified-associate&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Al-HusseinHameedJasim/prometheus-certified-associate&lt;/a &gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/edgarpf/prometheus-certified-associate&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://github.com/edgarpf/prometheus-certified-同事&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;f0de&#34;&gt;对于结构化和全面的 PCA 考试准备，请考虑投资 KodeKloud 的这些付费课程，他们提供了游乐场，我在准备过程中使用了它，它很有帮助&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kodekloud.com/courses/prometheus-certified-associate-pca&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;KodeKloud PCA 认证课程&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://training.promlabs.com/trainings/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://training.promlabs.com/trainings/&lt;/a&gt;&lt; /里&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://robustperception.teachable.com/p/introduction-to-prometheus&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://robustperception.teachable.com/p/普罗米修斯简介&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;0235&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;ffa5&#34;&gt;与其他证书相比，考试并不容易。我会按以下顺序排列：&lt;strong&gt;KCNA/CGOA/CKAD/PCA/KCSA/CKA/CKS&lt;/strong&gt;。考试后，你会在24小时内收到评分，通过考试后的感觉非常满意。总的来说，我希望它内容丰富且有用🚀&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://miro.medium.com/v2/resize:fit:2000/1*ENet0gQW5vbAyT1J9U-lwQ.png&#34; alt= “PCA 证书”referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/tag/prometheus?source=post_page-----6485fbe5789f--------------------- -----------&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 06 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Fast, secure, and simple: Istio’s Ambient Mode reaches General Availability in v1.24】快速、安全且简单：Istio 的 Ambient 模式在 v1.24 中全面可用</title>
      <link>https://www.cncf.io/blog/2024/11/07/fast-secure-and-simple-istios-ambient-mode-reaches-general-availability-in-v1-24/</link>
      <description>【&lt;p&gt;&lt;em&gt;Project post by Lin Sun, Solo.io, for the Istio Steering and Technical Oversight Committees&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;em&gt;Our latest release signals ambient mode – service mesh without sidecars – is ready for everyone.&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We are proud to announce that Istio’s ambient data plane mode has reached General Availability, with the ztunnel, waypoints and APIs being marked as Stable by the Istio TOC. This marks the final stage in Istio’s&amp;nbsp;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/releases/feature-stages/&#34;&gt;feature phase progression&lt;/a&gt;, signaling that ambient mode is fully ready for broad production usage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ambient mesh — and its reference implementation with Istio’s ambient mode —&amp;nbsp;&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2022/introducing-ambient-mesh/&#34;&gt;was announced in September 2022&lt;/a&gt;. Since then, our community has put in 26 months of hard work and collaboration, with contributions from Solo.io, Google, Microsoft, Intel, Aviatrix, Huawei, IBM, Red Hat, and many others. Stable status in 1.24 indicates the features of ambient mode are now fully ready for broad production workloads. This is a huge milestone for Istio, bringing Istio to production readiness without sidecars, and&amp;nbsp;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/overview/dataplane-modes/&#34;&gt;offering users a choice&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;why-ambient-mesh&#34;&gt;Why ambient mesh?&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/#why-ambient-mesh&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;From the launch of Istio in 2017, we have observed a clear and growing demand for mesh capabilities for applications — but heard that many users found the resource overhead and operational complexity of sidecars hard to overcome. Challenges that Istio users shared with us include how sidecars can break applications after they are added, the large CPU and memory requirement for a proxy with every workload, and the inconvenience of needing to restart application pods with every new Istio release.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As a community, we designed ambient mesh from the ground up to tackle these problems, alleviating the previous barriers of complexity faced by users looking to implement service mesh. The new concept was named ‘ambient mesh’ as it was designed to be transparent to your application, with no proxy infrastructure collocated with user workloads, no subtle changes to configuration required to onboard, and no application restarts required. In ambient mode it is trivial to add or remove applications from the mesh. All you need to do is&amp;nbsp;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/add-workloads/&#34;&gt;label a namespace&lt;/a&gt;, and all applications in that namespace are instantly added to the mesh. This immediately secures all traffic within that namespace with industry-standard mutual TLS encryption — no other configuration or restarts required!. Refer to the&amp;nbsp;&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2022/introducing-ambient-mesh/&#34;&gt;Introducing Ambient Mesh blog&lt;/a&gt;&amp;nbsp;for more information on why we built Istio’s ambient mode.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;how-does-ambient-mode-make-adoption-easier&#34;&gt;How does ambient mode make adoption easier?&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/#how-does-ambient-mode-make-adoption-easier&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The core innovation behind ambient mesh is that it slices Layer 4 (L4) and Layer 7 (L7) processing into two distinct layers. Istio’s ambient mode is powered by lightweight, shared L4 node proxies and optional L7 proxies, removing the need for traditional sidecar proxies from the data plane. This layered approach allows you to adopt Istio incrementally, enabling a smooth transition from no mesh, to a secure overlay (L4), to optional full L7 processing — on a per-namespace basis, as needed, across your fleet.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By utilizing ambient mesh, users bypass some of the previously restrictive elements of the sidecar model. Server-send-first protocols now work, most reserved ports are now available, and the ability for containers to bypass the sidecar — either maliciously or not — is eliminated.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The lightweight shared L4 node proxy is called the&amp;nbsp;&lt;em&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/overview/#ztunnel&#34;&gt;ztunnel&lt;/a&gt;&lt;/em&gt;&amp;nbsp;(zero-trust tunnel). ztunnel drastically reduces the overhead of running a mesh by removing the need to potentially over-provision memory and CPU within a cluster to handle expected loads. In some use cases, the savings can exceed 90% or more, while still providing zero-trust security using mutual TLS with cryptographic identity, simple L4 authorization policies, and telemetry.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The L7 proxies are called&amp;nbsp;&lt;em&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/overview/#waypoint-proxies&#34;&gt;waypoints&lt;/a&gt;&lt;/em&gt;. Waypoints process L7 functions such as traffic routing, rich authorization policy enforcement, and enterprise-grade resilience. Waypoints run outside of your application deployments and can scale independently based on your needs, which could be for the entire namespace or for multiple services within a namespace. Compared with sidecars, you don’t need one waypoint per application pod, and you can scale your waypoint effectively based on its scope, thus saving significant amounts of CPU and memory in most cases.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The separation between the L4 secure overlay layer and L7 processing layer allows incremental adoption of the ambient mode data plane, in contrast to the earlier binary “all-in” injection of sidecars. Users can start with the secure L4 overlay, which offers a majority of features that people deploy Istio for (mTLS, authorization policy, and telemetry). Complex L7 handling such as retries, traffic splitting, load balancing, and observability collection can then be enabled on a case-by-case basis.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;rapid-exploration-and-adoption-of-ambient-mode&#34;&gt;Rapid exploration and adoption of ambient mode&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/#rapid-exploration-and-adoption-of-ambient-mode&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The ztunnel image on Docker Hub has reached over&amp;nbsp;&lt;a href=&#34;https://hub.docker.com/search?q=istio&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;1 million downloads&lt;/a&gt;, with ~63,000 pulls in the last week alone.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/ztunnel-image.png&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/ztunnel-image.png&#34; alt=&#34;Docker Hub downloads of Istio ztunnel!&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We asked a few of our users for their thoughts on ambient mode’s GA:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;Istio’s implementation of a service mesh with their ambient mesh design has been a great addition to our Kubernetes clusters to simplify the team responsibilities and overall network architecture of the mesh. In conjunction with the Gateway API project it has given me a great way to enable developers to get their networking needs met at the same time as only delegating as much control as needed. While it’s a rapidly evolving project it has been solid and dependable in production and will be our default option for implementing networking controls in a Kubernetes deployment going forth. —&amp;nbsp;&lt;a href=&#34;https://uk.linkedin.com/in/danielloader&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Daniel Loader&lt;/a&gt;, Lead Platform Engineer at Quotech&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;It is incredibly easy to install ambient mesh with the Helm chart wrapper. Migrating is as simple as setting up a waypoint gateway, updating labels on a namespace, and restarting. I’m looking forward to ditching sidecars and recuperating resources. Moreover, easier upgrades. No more restarting deployments! —&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/raymond-wong-43baa8a2/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Raymond Wong&lt;/a&gt;, Senior Architect at Forbes&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;Istio’s ambient mode has served our production system since it became Beta. We are pleased by its stability and simplicity and are looking forward to additional benefits and features coming together with the GA status. Thanks to the Istio team for the great efforts! — &lt;strong&gt;Saarko Eilers&lt;/strong&gt;, Infrastructure Operations Manager at EISST International Ltd&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;By Switching from AWS App Mesh to Istio in ambient mode, we were able to slash about 45% of the running containers just by removing sidecars and SPIRE agent DaemonSets. We gained many benefits, such as reducing compute costs or observability costs related to sidecars, eliminating many of the race conditions related to sidecars startup and shutdown, plus all the out-of-the-box benefits just by migrating, like mTLS, zonal awareness and workload load balancing. —&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/ahmad-al-masry-9ab90858/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ahmad Al-Masry&lt;/a&gt;, DevSecOps Engineering Manager at Harri&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;We chose Istio because we’re excited about ambient mesh. Different from other options, with Istio, the transition from sidecar to sidecar-less is not a leap of faith. We can build up our service mesh infrastructure with Istio knowing the path to sidecar-less is a two way door. —&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/troydai/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Troy Dai&lt;/a&gt;, Senior Staff Software Engineer at Coinbase&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;Extremely proud to see the fast and steady growth of ambient mode to GA, and all the amazing collaboration that took place over the past months to make this happen! We are looking forward to finding out how the new architecture is going to revolutionize the telcos world. —&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/faseela-k-42178528/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Faseela K&lt;/a&gt;, Cloud Native Developer at Ericsson&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;We are excited to see the Istio dataplane evolve with the GA release of ambient mode and are actively evaluating it for our next-generation infrastructure platform. Istio’s community is dynamic and welcoming, and ambient mesh is a testament to the community embracing new ideas and pragmatically working to improve developer experience operating Istio at scale. —&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/tylerschade/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Tyler Schade&lt;/a&gt;, Distinguished Engineer at GEICO Tech&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;With Istio’s ambient mode reaching GA, we finally have a service mesh solution that isn’t tied to the pod lifecycle, addressing a major limitation of sidecar-based models. Ambient mesh provides a more lightweight, scalable architecture that simplifies operations and reduces our infrastructure costs by eliminating the resource overhead of sidecars. —&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/bartoszsobieraj/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Bartosz Sobieraj&lt;/a&gt;, Platform Engineer at Spond&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;Our team chose Istio for its service mesh features and strong alignment with the Gateway API to create a robust Kubernetes-based hosting solution. As we integrated applications into the mesh, we faced resource challenges with sidecar proxies, prompting us to transition to ambient mode in Beta for improved scalability and security. We started with L4 security and observability through ztunnel, gaining automatic encryption of in-cluster traffic and transparent traffic flow monitoring. By selectively enabling L7 features and decoupling the proxy from applications, we achieved seamless scaling and reduced resource utilization and latency. This approach allowed developers to focus on application development, resulting in a more resilient, secure, and scalable platform powered by ambient mode. —&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/jdcmarques/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jose Marques&lt;/a&gt;, Senior DevOps at Blip.pt&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;We are using Istio to ensure strict mTLS L4 traffic in our mesh and we are excited for ambient mode. Compared to sidecar mode it’s a massive save on resources and at the same time it makes configuring things even more simple and transparent. —&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/andrea-dolfi-58b427128/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Andrea Dolfi&lt;/a&gt;, DevOps Engineer&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;what-is-in-scope&#34;&gt;What is in scope?&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/#what-is-in-scope&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The general availability of ambient mode means the following things are now considered stable:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/install/&#34;&gt;Installing Istio with support for ambient mode&lt;/a&gt;, with Helm or&amp;nbsp;&lt;code&gt;istioctl&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/add-workloads/&#34;&gt;Adding your workloads to the mesh&lt;/a&gt;&amp;nbsp;to gain mutual TLS with cryptographic identity,&amp;nbsp;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/l4-policy/&#34;&gt;L4 authorization policies&lt;/a&gt;, and telemetry.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/waypoint/&#34;&gt;Configuring waypoints&lt;/a&gt;&amp;nbsp;to&amp;nbsp;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/l7-features/&#34;&gt;use L7 functions&lt;/a&gt;&amp;nbsp;such as traffic shifting, request routing, and rich authorization policy enforcement.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Connecting the Istio ingress gateway to workloads in ambient mode, supporting the Kubernetes Gateway APIs and all existing Istio APIs.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Using waypoints for controlled mesh egress&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Using&amp;nbsp;&lt;code&gt;istioctl&lt;/code&gt;&amp;nbsp;to operate waypoints, and troubleshoot ztunnel &amp;amp; waypoints.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Refer to the&amp;nbsp;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/releases/feature-stages/#ambient-mode&#34;&gt;feature status page&lt;/a&gt;&amp;nbsp;for more information.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;roadmap&#34;&gt;Roadmap&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/#roadmap&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We are not standing still! There are a number of features that we continue to work on for future releases, including some that are currently in Alpha/Beta.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In our upcoming releases, we expect to move quickly on the following extensions to ambient mode:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Full support for sidecar and ambient mode interoperability&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Multi-cluster installations&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Multi-network support&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;VM support&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;what-about-sidecars&#34;&gt;What about sidecars?&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/#what-about-sidecars&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sidecars are not going away, and remain first-class citizens in Istio. You can continue to use sidecars, and they will remain fully supported. While we believe most use cases will be best served with a mesh in ambient mode, the Istio project remains committed to ongoing sidecar mode support.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;try-ambient-mode-today&#34;&gt;Try ambient mode today&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/#try-ambient-mode-today&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With the 1.24 release of Istio and the GA release of ambient mode, it is now easier than ever to try out Istio on your own workloads.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Follow the&amp;nbsp;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/getting-started/&#34;&gt;getting started guide&lt;/a&gt;&amp;nbsp;to explore ambient mode.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Read our&amp;nbsp;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/&#34;&gt;user guides&lt;/a&gt;&amp;nbsp;to learn how to incrementally adopt ambient for mutual TLS &amp;amp; L4 authorization policy, traffic management, rich L7 authorization policy, and more.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Explore the&amp;nbsp;&lt;a href=&#34;https://medium.com/kialiproject/kiali-2-0-for-istio-2087810f337e&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;new Kiali 2.0 dashboard&lt;/a&gt;&amp;nbsp;to visualize your mesh.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can engage with the developers in the #ambient channel on&amp;nbsp;&lt;a href=&#34;https://slack.istio.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;the Istio Slack&lt;/a&gt;, or use the discussion forum on&amp;nbsp;&lt;a href=&#34;https://github.com/istio/istio/discussions&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt;&amp;nbsp;for any questions you may have.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;Solo.io 的 Lin Sun 为 Istio 指导和技术监督委员会发布的项目帖子&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;em&gt;我们的最新版本标志着环境模式 - 没有 sidecar 的服务网格 - 已经为所有人做好了准备。&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们很自豪地宣布，Istio 的环境数据平面模式已全面可用，ztunnel、路点和 API 被 Istio TOC 标记为稳定。这标志着 Istio &lt;a href=&#34;https://preliminary.istio.io/latest/docs/releases/feature-stages/&#34;&gt;功能阶段进展&lt;/a&gt;的最后阶段，表明环境模式已完全准备好广泛的生产用途。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;环境网格 - 及其使用 Istio 环境模式的参考实现 - &lt;a href=&#34;https://preliminary.istio.io/latest/blog/2022/introducing-ambient-mesh/&#34;&gt;于 2022 年 9 月宣布&lt; /a&gt;.从那时起，我们的社区投入了 26 个月的辛勤工作和协作，其中包括 Solo.io、Google、Microsoft、Intel、Aviatrix、华为、IBM、Red Hat 和许多其他公司的贡献。 1.24 中的稳定状态表明环境模式的功能现已完全准备好用于广泛的生产工作负载。这对于 Istio 来说是一个巨大的里程碑，使 Istio 在没有 sidecar 的情况下进入生产就绪状态，并&lt;a href=&#34;https://preliminary.istio.io/latest/docs/overview/dataplane-modes/&#34;&gt;为用户提供了选择&lt;/一个&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;why-ambient-mesh&#34;&gt;为什么使用环境网格？&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches- ga/#why-ambient-mesh&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自 2017 年 Istio 推出以来，我们观察到应用程序对网格功能的需求明显且不断增长，但听说许多用户发现 sidecar 的资源开销和操作复杂性难以克服。 Istio 用户与我们分享的挑战包括 sidecar 在添加应用程序后如何破坏应用程序、每个工作负载对代理的大量 CPU 和内存需求，以及每个新的 Istio 版本都需要重新启动应用程序 Pod 带来的不便。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;作为一个社区，我们从头开始设计了环境网格来解决这些问题，减轻了希望实现服务网格的用户之前面临的复杂性障碍。新概念被命名为“环境网格”，因为它的设计对您的应用程序是透明的，没有与用户工作负载并置的代理基础设施，不需要对配置进行细微的更改，也不需要重新启动应用程序。在环境模式下，从网格中添加或删除应用程序很简单。您需要做的就是&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/add-workloads/&#34;&gt;标记一个命名空间&lt;/a&gt;，该命名空间中的所有应用程序都会立即添加到网格中。这会立即使用行业标准的双向 TLS 加密来保护该命名空间内的所有流量 - 无需其他配置或重新启动！请参阅&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2022/introducing-ambient-mesh/&#34;&gt;介绍 Ambient Mesh 博客&lt;/a&gt;，了解有关我们为何构建 Istio 环境模式的更多信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;how-does-ambient-mode-make-adoption-easier&#34;&gt;环境模式如何让采用变得更容易？&lt;a href=&#34;https://preliminary.istio. io/latest/blog/2024/ambient-reaches-ga/#how-does-ambient-mode-make-adoption-easier&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;环境网格背后的核心创新在于，它将第 4 层 (L4) 和第 7 层 (L7) 处理分割为两个不同的层。 Istio 的环境模式由轻量级共享 L4 节点代理和可选的 L7 代理提供支持，从而消除了数据平面对传统 sidecar 代理的需求。这种分层方法允许您逐步采用 Istio，实现从无网格到安全覆盖 (L4)，再到可选的完整 L7 处理的平滑过渡 - 根据需要，在整个队列中基于每个命名空间。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过利用环境网格，用户绕过了 sidecar 模型之前的一些限制性元素。服务器发送优先协议现在可以工作，大多数保留端口现在可用，并且容器绕过 sidecar 的能力（无论是恶意还是非恶意）都被消除了。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;轻量级共享 L4 节点代理称为 &lt;em&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/overview/#ztunnel&#34;&gt;ztunnel&lt;/a&gt;&lt;/em &gt;（零信任隧道）。 ztunnel 无需在集群内过度配置内存和 CPU 来处理预期负载，从而大大降低了运行网格的开销。在某些使用案例中，节省的费用可以超过 90% 或更多，同时仍然使用具有加密身份的双向 TLS、简单的 L4 授权策略和遥测来提供零信任安全性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L7 代理称为&lt;em&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/overview/#waypoint-proxies&#34;&gt;路径点&lt;/a&gt;&lt;/em&gt;。 Waypoints 处理 L7 功能，例如流量路由、丰富的授权策略实施和企业级弹性。路点在应用程序部署之外运行，并且可以根据您的需求独立扩展，这可以针对整个命名空间或命名空间内的多个服务。与 Sidecar 相比，每个应用程序 Pod 不需要一个路点，并且可以根据其范围有效地扩展路点，从而在大多数情况下节省大量 CPU 和内存。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L4 安全覆盖层和 L7 处理层之间的分离允许增量采用环境模式数据平面，这与早期的 sidecar 二进制“全部”注​​入形成鲜明对比。用户可以从安全的 L4 覆盖开始，它提供了人们部署 Istio 的大部分功能（mTLS、授权策略和遥测）。然后可以根据具体情况启用复杂的 L7 处理，例如重试、流量分割、负载平衡和可观察性收集。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;rapid-exploration-and-adoption-of-ambient-mode&#34;&gt;环境模式的快速探索和采用&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches- ga/#rapid-exploration-and-adoption-of-ambient-mode&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Docker Hub 上的 ztunnel 镜像下载量已超过&lt;a href=&#34;https://hub.docker.com/search?q=istio&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;100 万次&lt;/ a&gt;，仅上周就有约 63,000 次拉动。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/ztunnel-image.png&#34;&gt;&lt;img 解码= &#34;async&#34; src=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/ztunnel-image.png&#34; alt=&#34;Docker Hub 下载 Istio z隧道！” referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们询问了一些用户对环境模式的 GA 的看法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;Istio 的服务网格实现及其环境网格设计对我们的 Kubernetes 集群来说是一个很好的补充，可以简化网格的团队职责和整体网络架构。与 Gateway API 项目相结合，它为我提供了一种很好的方法，使开发人员能够在只委托所需的控制权的同时满足他们的网络需求。虽然这是一个快速发展的项目，但它在生产中一直稳定可靠，并且将成为我们在未来的 Kubernetes 部署中实现网络控制的默认选项。 — &lt;a href=&#34;https://uk.linkedin.com/in/danielloader&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Daniel Loader&lt;/a&gt;，Quotech 首席平台工程师&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;使用 Helm 图表包装器安装环境网格非常容易。迁移就像设置路径点网关、更新命名空间上的标签以及重新启动一样简单。我期待着放弃边车并恢复资源。此外，升级更容易。不再需要重新启动部署！ — &lt;a href=&#34;https://www.linkedin.com/in/raymond-wong-43baa8a2/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Raymond Wong&lt;/a&gt;，福布斯高级架构师&lt;/ p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;Istio 的环境模式自 Beta 版以来一直为我们的生产系统服务。我们对其稳定性和简单性感到满意，并期待着 GA 状态带来更多好处和功能。感谢 Istio 团队的付出！ — &lt;strong&gt;Saarko Eilers&lt;/strong&gt;，EISST International Ltd 基础设施运营经理&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;通过在环境模式下从 AWS App Mesh 切换到 Istio，我们只需删除 sidecar 和 SPIRE 代理 DaemonSet，就能减少大约 45% 的正在运行的容器。我们获得了许多好处，例如降低与 sidecar 相关的计算成本或可观测性成本，消除与 sidecar 启动和关闭相关的许多竞争条件，以及仅通过迁移即可获得的所有开箱即用的好处，例如 mTLS、区域感知和工作负载负载平衡。 — &lt;a href=&#34;https://www.linkedin.com/in/ahmad-al-masry-9ab90858/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ahmad Al-Masry&lt;/a&gt;，DevSecOps 工程哈里经理&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;我们选择 Istio 是因为我们对环境网格感到兴奋。与其他选择不同，对于 Istio，从 sidecar 到无 sidecar 的转变并不是信仰的飞跃。我们可以使用 Istio 构建我们的服务网格基础设施，因为我们知道通往无 sidecar 的道路是双向的。 — &lt;a href=&#34;https://www.linkedin.com/in/troydai/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Troy Dai&lt;/a&gt;，Coinbase 高级软件工程师&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;非常自豪地看到环境模式快速稳定地发展到正式版，以及过去几个月为实现这一目标而进行的所有令人惊叹的合作！我们期待着了解新架构将如何彻底改变电信世界。 — &lt;a href=&#34;https://www.linkedin.com/in/faseela-k-42178528/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Faseela K&lt;/a&gt;，爱立信云原生开发人员&lt; /p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;我们很高兴看到 Istio 数据平面随着环境模式的 GA 版本而不断发展，并正在积极评估它是否适合我们的下一代基础设施平台。 Istio 的社区充满活力且热情好客，环境网格证明了社区拥抱新想法并务实地致力于改善大规模操作 Istio 的开发人员体验。 — &lt;a href=&#34;https://www.linkedin.com/in/tylerschade/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Tyler Schade&lt;/a&gt;，GEICO Tech 杰出工程师&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;随着 Istio 的环境模式达到 GA，我们终于有了一个与 Pod 生命周期无关的服务网格解决方案，解决了基于 Sidecar 的模型的主要限制。 Ambient Mesh 提供了更轻量级、可扩展的架构，通过消除 sidecar 的资源开销来简化操作并降低基础设施成本。 — &lt;a href=&#34;https://www.linkedin.com/in/bartoszsobieraj/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Bartosz Sobieraj&lt;/a&gt;，Spond 平台工程师&lt;/p&gt;&#xA;&lt;/块引用&gt;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;我们的团队选择 Istio 是因为它的服务网格功能以及与网关 API 的强大一致性，以创建强大的基于 Kubernetes 的托管解决方案。当我们将应用程序集成到网格中时，我们面临着 sidecar 代理的资源挑战，促使我们在 Beta 版中过渡到环境模式，以提高可扩展性和安全性。我们首先通过 ztunnel 实现 L4 安全性和可观察性，获得集群内流量的自动加密和透明的流量监控。通过有选择地启用 L7 功能并将代理与应用程序解耦，我们实现了无缝扩展并降低了资源利用率和延迟。这种方法使开发人员能够专注于应用程序开发，从而形成由环境模式支持的更具弹性、安全性和可扩展性的平台。 — &lt;a href=&#34;https://www.linkedin.com/in/jdcmarques/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jose Marques&lt;/a&gt;，Blip.pt 高级开发运营&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;我们正在使用 Istio 来确保网格中严格的 mTLS L4 流量，并且我们对环境模式感到兴奋。与 sidecar 模式相比，它可以节省大量资源，同时使配置变得更加简单和透明。 — &lt;a href=&#34;https://www.linkedin.com/in/andrea-dolfi-58b427128/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Andrea Dolfi&lt;/a&gt;，DevOps 工程师&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;what-is-in-scope&#34;&gt;范围是什么？&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient -reaches-ga/#what-is-in-scope&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;环境模式的普遍可用性意味着以下内容现在被认为是稳定的：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/install/&#34;&gt;使用 Helm 或 &lt;code&gt;istioctl&lt;/code 安装支持环境模式的 Istio&lt;/a&gt; &gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/add-workloads/&#34;&gt;将您的工作负载添加到网格&lt;/a&gt;以获取具有加密身份的相互 TLS， &lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/l4-policy/&#34;&gt;L4 授权策略&lt;/a&gt;和遥测。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/waypoint/&#34;&gt;将路径点配置&lt;/a&gt;至&lt;a href=&#34;https://preliminary.istio. io/latest/docs/ambient/usage/l7-features/&#34;&gt;使用 L7 功能&lt;/a&gt;，例如流量转移、请求路由和丰富的授权策略实施。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在环境模式下将 Istio 入口网关连接到工作负载，支持 Kubernetes 网关 API 和所有现有的 Istio API。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用路径点控制网格出口&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用 &lt;code&gt;istioctl&lt;/code&gt; 操作路径点，并对 ztunnel 和路径点进行故障排除ts。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;请参阅&lt;a href=&#34;https://preliminary.istio.io/latest/docs/releases/feature-stages/#ambient-mode&#34;&gt;功能状态页面&lt;/a&gt;了解更多信息。&lt;/ p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;roadmap&#34;&gt;路线图&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches-ga/#roadmap&#34;&gt;&lt; /a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们没有坐以待毙！我们将继续在未来的版本中开发许多功能，包括目前处于 Alpha/Beta 版本的一些功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在即将发布的版本中，我们希望快速实现环境模式的以下扩展：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;全面支持 sidecar 和环境模式互操作性&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;多集群安装&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;多网络支持&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;虚拟机支持&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;what-about-sidecars&#34;&gt;边车怎么样？&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-reaches- ga/#what-about-sidecars&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sidecar 不会消失，并且仍然是 Istio 中的一等公民。您可以继续使用 sidecar，它们将保持完全支持。虽然我们相信大多数用例最好在环境模式下使用网格，但 Istio 项目仍然致力于持续支持 Sidecar 模式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;try-ambient-mode-today&#34;&gt;立即尝试环境模式&lt;a href=&#34;https://preliminary.istio.io/latest/blog/2024/ambient-到达-ga/#try-ambient-mode-today&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着 Istio 1.24 版本和环境模式的 GA 版本的发布，现在在您自己的工作负载上尝试 Istio 变得比以往更加容易。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;按照&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/getting-started/&#34;&gt;入门指南&lt;/a&gt;探索微光模式。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;阅读我们的&lt;a href=&#34;https://preliminary.istio.io/latest/docs/ambient/usage/&#34;&gt;用户指南&lt;/a&gt;，了解如何逐步采用环境来实现双向 TLS 和 L4 授权政策、流量管理、丰富的L7授权策略等等。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;探索&lt;a href=&#34;https://medium.com/kialiproject/kiali-2-0-for-istio-2087810f337e&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;新的 Kiali 2.0 仪表板&lt;/ a&gt; 可视化您的网格。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以在&lt;a href=&#34;https://slack.istio.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Istio Slack&lt;/a&gt;上的#ambient频道与开发者互动，或者使用 &lt;a href=&#34;https://github.com/istio/istio/discussions&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt; 上的讨论论坛解答您可能遇到的任何问题有。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 06 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Argo CD image updater with Helm: a complete configuration guide】使用 Helm 掌握 Argo CD 映像更新程序：完整的配置指南</title>
      <link>https://www.cncf.io/blog/2024/11/05/mastering-argo-cd-image-updater-with-helm-a-complete-configuration-guide/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post by Stanislava Racheva, DevOps &amp;amp; Cloud engineer at &lt;a href=&#34;https://itgix.com/kubernetes-services/&#34;&gt;ITGix&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Understanding Argo CD Image Updater&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In modern Kubernetes environments, managing container images and ensuring that applications are always running the latest, most secure versions can be daunting. Argo CD Image Updater simplifies this process by automatically checking for new container image versions and updating your applications accordingly. Integrating seamlessly with Argo CD enables fully automated updates to Kubernetes workloads.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The beauty of Argo CD Image Updater lies in its simplicity and flexibility. By annotating your Argo CD application resources with a list of images and defining version constraints, the Image Updater takes over the heavy lifting. It regularly polls for new image versions from your container registry, checks if they meet the specified constraints, and updates your applications automatically.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Argo CD Image Updater also offers a range of advanced features, such as support for Helm and Kustomize-based applications, various update strategies (like semver, latest, name, and digest), and seamless integration with private container registries. Additionally, it allows parallel updates and supports filtering tags with custom matchers, making it highly customizable and suitable for both small and large-scale Kubernetes environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Use Cases and Problems Solved&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Keeping Images Up-to-Date Automatically&lt;/strong&gt;: For teams deploying frequently updated images, manually tracking and updating these images can lead to inefficiencies and downtime. Argo CD Image Updater solves this by automating the entire image update process.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Version Control and Stability&lt;/strong&gt;: Sometimes teams want to stick to a specific versioning pattern like semver or ensure they only pick stable releases. With Argo CD Image Updater’s configurable strategies, it’s easy to enforce such policies and ensure the application is always running on the desired version.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Efficient GitOps Workflow&lt;/strong&gt;: By integrating with Argo CD, changes can be written back to Git, maintaining the declarative model central to GitOps and ensuring that the application state and versioning are always in sync with the source of truth.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Whether you’re running a simple workload or managing complex deployments across multiple environments, Argo CD Image Updater provides a streamlined way to automate image updates, reduce operational overhead, and ensure that your applications are always running with the latest and most secure versions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Configuration and Setup&lt;br&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this example implementation, we are using the official argocd-image-updater helm chart, available at: &lt;a href=&#34;https://github.com/argoproj/argo-helm/tree/main/charts/argocd-image-updater&#34;&gt;https://github.com/argoproj/argo-helm/tree/main/charts/argocd-image-updater&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It is deployed as an argocd application in the same cluster and namespace as Argo CD:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: argoproj.io/v1alpha1&#xA;kind: Application&#xA;metadata:&#xA;&amp;nbsp; name: argocd-image-updater&#xA;&amp;nbsp; namespace: argocd&#xA;spec:&#xA;&amp;nbsp; destination:&#xA;&amp;nbsp; &amp;nbsp; namespace: argocd&#xA;&amp;nbsp; &amp;nbsp; server: https://kubernetes.default.svc&#xA;&amp;nbsp; project: &#39;applications&#39;&#xA;&amp;nbsp; source:&#xA;&amp;nbsp; &amp;nbsp; helm:&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; valueFiles:&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; - ../argocd-image-updater/values.yaml&#xA;&amp;nbsp; &amp;nbsp; path: helm/argocd-image-updater&#xA;&amp;nbsp; &amp;nbsp; repoURL: https://gitlab.org.com/demo.git&#xA;&amp;nbsp; &amp;nbsp; targetRevision: HEAD&#xA;&amp;nbsp; syncPolicy:&#xA;&amp;nbsp; &amp;nbsp; automated:&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; prune: true&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; selfHeal: true&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; allowEmpty: false&#xA;&amp;nbsp; &amp;nbsp; syncOptions:&#xA;&amp;nbsp; revisionHistoryLimit: 3&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s review the values file, where we’ll explore some of the essential configuration options required. These options are critical to ensuring proper functionality and deployment of the service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Registries&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here we will configure the container registries that we are using. Argo CD Image Updater supports the majority of container registries (public and private), that implement Docker registry v2 API and has been tested against registries such as Docker Hub, Docker Registry v2 reference implementation (on-premise), Red Had Quay, Jfrog Artifactory, Github Container Registry, GitHub Packages Registry, GitLab Container Registry and Google Container Registry.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the following examples, we will configure two of the most widely used container registries – Amazon Elastic Container Registry (ECR) and GitHub Container Registry (GHCR). In our case, we are working with private registries to ensure secure storage and access control for container images.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Amazon Elastic Container Registry (ECR) configuration:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;registries:&#xA;&amp;nbsp; - name: ECR&#xA;&amp;nbsp; &amp;nbsp; api_url: https://000000000000.dkr.ecr.eu-west-1.amazonaws.com&#xA;&amp;nbsp; &amp;nbsp; prefix: 000000000000.dkr.ecr.eu-west-1.amazonaws.com&#xA;&amp;nbsp; &amp;nbsp; ping: yes&#xA;&amp;nbsp; &amp;nbsp; insecure: false&#xA;&amp;nbsp; &amp;nbsp; credentials: ext:/scripts/login.sh&#xA;&amp;nbsp; &amp;nbsp; credsexpire: 10h&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For Amazon Elastic Container Registry, authentication is possible through a script that executes an API call to retrieve the necessary credentials. In the values file, we can include this script in the authScripts section:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;authScripts:&#xA;  # -- Whether to mount the defined scripts that can be used to authenticate with a registry, the scripts will be mounted at `/scripts`&#xA;  enabled: true&#xA;  # -- Map of key-value pairs where the key consists of the name of the script and the value the contents&#xA;  scripts:&#xA;    login.sh: |&#xA;      #!/bin/sh&#xA;      aws ecr --region &#34;eu-west-1&#34; get-authorization-token --output text --query &#39;authorizationData[].authorizationToken&#39; | base64 -d&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The script is executed by the pod and is responsible for obtaining the ECR authorization token. We use a role attached to our EKS node group, which includes the AWS-managed policy AmazonEC2ContainerRegistryReadOnly. This policy permits the GetAuthorizationToken API call:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#xA;&amp;nbsp; &amp;nbsp; &#34;Version&#34;: &#34;2012-10-17&#34;,&#xA;&amp;nbsp; &amp;nbsp; &#34;Statement&#34;: [&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;Effect&#34;: &#34;Allow&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;Action&#34;: [&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:GetAuthorizationToken&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:BatchCheckLayerAvailability&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:GetDownloadUrlForLayer&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:GetRepositoryPolicy&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:DescribeRepositories&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:ListImages&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:DescribeImages&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:BatchGetImage&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:GetLifecyclePolicy&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:GetLifecyclePolicyPreview&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:ListTagsForResource&#34;,&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;ecr:DescribeImageScanFindings&#34;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ],&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#34;Resource&#34;: &#34;*&#34;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;GitHub Container Registry configuration:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;registries:&#xA;&amp;nbsp; - name: GitHub Container Registry&#xA;&amp;nbsp; &amp;nbsp; api_url: https://ghcr.io&#xA;&amp;nbsp; &amp;nbsp; prefix: ghcr.io&#xA;&amp;nbsp; &amp;nbsp; ping: yes&#xA;&amp;nbsp; &amp;nbsp; credentials: secret:argocd/ghcr-secret#token&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For registry authentication, in the credentials section, we are using Kubernetes secret. The #token part refers to the specific key (usually containing a personal access token or authentication token) inside the secret. The token must have at least read:packages permissions. Here is a manifest of the Kubernetes secret which has to be applied in the argocd namespace:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: v1&#xA;kind: Secret&#xA;metadata:&#xA;  name: ghcr-secret3&#xA;  namespace: argocd&#xA;stringData:&#xA;  token: user_name:access_token&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Enabling the service account and RBAC creation:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;rbac:&#xA;&amp;nbsp; &lt;em&gt;# -- Enable RBAC creation&lt;/em&gt;&#xA;&amp;nbsp; enabled: true&#xA;&#xA;serviceAccount:&#xA;&amp;nbsp; &lt;em&gt;# -- Specifies whether a service account should be created&lt;/em&gt;&#xA;&amp;nbsp; create: true&#xA;&amp;nbsp; &lt;em&gt;# -- Annotations to add to the service account&lt;/em&gt;&#xA;&amp;nbsp; annotations: {}&#xA;&amp;nbsp; &lt;em&gt;# -- Labels to add to the service account&lt;/em&gt;&#xA;&amp;nbsp; labels: {}&#xA;&amp;nbsp; &lt;em&gt;# -- The name of the service account to use.&lt;/em&gt;&#xA;&amp;nbsp; &lt;em&gt;# If not set and create is true, a name is generated using the fullname template&lt;/em&gt;&#xA;&amp;nbsp; name: &#34;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ServiceAccount provides the necessary identity for ArgoCD Image Updater to authenticate and interact with the Kubernetes API in order to perform updates on deployment manifests or Helm charts (e.g., changing container image tags).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;rbac ensures that ArgoCD Image Updater is granted only the permissions it needs, helping to secure your cluster by restricting its access and reducing the attack surface.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Without enabling both, the ArgoCD Image Updater would either lack the permissions to modify Kubernetes resources (failing to update your applications) or could have overly broad permissions, which could be a security risk.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the default installation scenario, i.e. Argo CD Image Updater installed to the argocd namespace, no further configuration has to be done for Argo CD Image Updater to access the Kubernetes API. If your Argo CD installation is in a different namespace than argocd, you would have to adapt the RoleBinding to bind to the ServiceAccount in the correct namespace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Log Level:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&lt;em&gt;# -- Argo CD Image Update log level&lt;/em&gt;&#xA;&amp;nbsp; logLevel: &#34;debug&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Changing the log level from “info” to “debug” in the Argo CD Image Updater values file can be beneficial in certain scenarios where you need deeper insights into the system’s behavior.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Argo CD Image Updater binary:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The argocd-image-updater binary and specifically the test subcommand provides a variety of test options including testing registry access, multi-arch images, semver constrains, update strategies, and credentials before configuring annotations on your Argo CD applications. It is available in the argocd-image-updater pod or you can install it locally. Here are the argocd-image-updater test command options:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;Flags:&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --allow-tags string &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; only consider tags &lt;strong&gt;in&lt;/strong&gt; registry that satisfy the match &lt;strong&gt;function&lt;/strong&gt;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --credentials string&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; the credentials definition &lt;strong&gt;for&lt;/strong&gt; the test (overrides registry config)&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --disable-kubernetes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; whether to disable the Kubernetes client&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --disable-kubernetes-events &amp;nbsp; &amp;nbsp; Disable kubernetes events&#xA;&amp;nbsp; -h, --help&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; help &lt;strong&gt;for&lt;/strong&gt; test&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --ignore-tags stringArray &amp;nbsp; &amp;nbsp; &amp;nbsp; ignore tags &lt;strong&gt;in&lt;/strong&gt; registry that match given glob pattern&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --kubeconfig string &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; path to your Kubernetes client configuration&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --loglevel string &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; log level to use (one of trace, debug, info, warn, error) (default &#34;debug&#34;)&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --platforms strings &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; limit images to given platforms (default [linux/amd64])&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --rate-limit int&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; specificy registry rate limit (overrides registry.conf) (default 20)&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --registries-conf-path string &amp;nbsp; path to registries configuration&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --semver-constraint string&amp;nbsp; &amp;nbsp; &amp;nbsp; only consider tags matching semantic version constraint&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; --update-strategy string&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; update strategy to use, one of: semver, latest) (default &#34;semver&#34;)&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Update methods&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Argo CD Image Updater supports two write-back methods for propagating new image versions to Argo CD:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;argocd : Directly modifies the Argo CD application resource via Kubernetes or the Argo CD API, depending on the configuration.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;git : Creates a Git commit in the application’s repository with the updated image information.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The write-back method and its configuration are set per application, with further configuration options available depending on the method used.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this article, the examples are applied using the argocd update method, which is the default update method and does not need further configuration. For production environments, it is recommended to use the git update method to persist the changes made by Argo CD Image Updater in your git repository.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Update strategies&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;An update strategy specifies how Argo CD Image Updater identifies new image versions for updates. It supports various strategies for tracking and updating configured images. Each image can have its update strategy, with the default being the semver strategy.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The currently supported update strategies are:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;• semver: Updates based on semantic versioning.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;• latest: Updates to the most recently built image in the registry.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;• digest: Updates to the latest version of a tag using its SHA digest.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;• name: Sorts tags alphabetically and updates to the highest version&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the examples below we show how to annotate our argocd applications in order to enable Argo CD Image Updater, setting up all update strategies. We are using an umbrella helm chart to deploy our sample application. For Helm applications with multiple images in the manifest or when parameters other than image.name and image.tag are used to define images, you need to configure an &amp;lt;image_alias&amp;gt; in the image specification. This alias helps identify the image and enables the Ago CD Image Updater:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;argocd-image-updater.argoproj.io/image-list: &#34;&amp;lt;image_alias&amp;gt;=&amp;lt;some/image&amp;gt;&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;semver update strategy :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is the default update strategy. Via semver strategy Argo CD Image Updater operates with images tagged in semantic versioning format. Tags should include semver-compatible identifiers in the structure X.Y.Z, where X, Y, and Z are whole numbers. An optional prefix of “v” (for example, vX.Y.Z) can be used, and both formats are considered equivalent. In this first example each annotation is specifically explained because we are using some of the annotations for semver update strategy in all examples.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Example annotations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: argoproj.io/v1alpha1&#xA;kind: Application&#xA;metadata:&#xA;&amp;nbsp; name: sampleapp&#xA;&amp;nbsp; namespace: argocd&#xA;&amp;nbsp; annotations:&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/image-list: &#34;sampleapp=0.dkr.ecr.eu-west-1.amazonaws.com/sampleapp:v1.2.x&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/sampleapp.helm.image-name: &#34;sampleapp.deployment.image.repository&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/sampleapp.helm.image-tag: &#34;sampleapp.deployment.image.tag&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/sampleapp.update-strategy: &#34;semver&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/pull-policy: Always&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/write-back-method: argocd&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;image-list – as we explained earlier, the image-list annotation enables Argo CD Image Updater to operate with the application – for the value we are using sampleapp as alias and we are specifying the image and its tag.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;image-name – we are specifying the image name via its helm values path, where we are defining the image repository&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;image-tag – defines the image tag via its helm values path&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;update-strategy – here we are declaring the desired update strategy&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;pull-policy – specifying the pull-policy, in this case we are always getting the latest version.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;write-back-method – specifying the Argo CD Image Updater write-back-method&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this scenario, we are using a semantic versioning constraint with the tag v1.2.x. This means that Argo CD Image Updater will look for any image tag that matches the v1.2.x pattern. The x in semantic versioning acts as a wildcard, so the updater will accept any patch-level version within the v1.2 series (e.g., v1.2.1, v1.2.5, v1.2.9, etc.).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is part of the helm values file that we are using for the sampleapp which is connected to the annotations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sampleapp:&#xA;&amp;nbsp; appId: sampleapp&#xA;&amp;nbsp; deployment:&#xA;&amp;nbsp; &amp;nbsp; enabled: true&#xA;&amp;nbsp; &amp;nbsp; image:&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; repository: &#34;000000000000.dkr.ecr.eu-west-1.amazonaws.com/sampleapp&#34;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; tag: &#34;v1.2&#34;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; digest: true&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; pullPolicy: &#34;Always&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;latest update strategy:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Argo CD Image Updater can update the image with the most recent build date, even if the tag is arbitrary (like a Git commit SHA or random string). It focuses on the build date, not when the image was tagged or pushed to the registry. If multiple tags share the same build date, the updater sorts the tags in descending lexical order and selects the last one.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Example annotations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: argoproj.io/v1alpha1&#xA;kind: Application&#xA;metadata:&#xA;  name: sampleapp&#xA;  namespace: argocd&#xA;  annotations:&#xA;    argocd-image-updater.argoproj.io/image-list: &#34;sampleapp=0.dkr.ecr.eu-west-1.amazonaws.com/sampleapp&#34;&#xA;    argocd-image-updater.argoproj.io/sampleapp.helm.image-name: &#34;sampleapp.deployment.image.repository&#34;&#xA;    argocd-image-updater.argoproj.io/sampleapp.update-strategy: &#34;latest&#34;&#xA;    argocd-image-updater.argoproj.io/pull-policy: Always&#xA;    argocd-image-updater.argoproj.io/write-back-method: argocd&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this scenario, we don’t have to specify image-tag. But if we want to allow only particular tags for update we can use the argocd-image-updater.argoproj.io/myimage.allow-tags: annotation, for example with latest and master tags:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;argocd-image-updater.argoproj.io/myimage.allow-tags: latest, master&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;or we can ignore them with the ignore-tags annotation:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;argocd-image-updater.argoproj.io/myimage.ignore-tags: latest, master&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is part of the helm values file that we are using for the sampleapp which is connected to the annotations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sampleapp:&#xA;&amp;nbsp; appId: sampleapp&#xA;&amp;nbsp; deployment:&#xA;&amp;nbsp; &amp;nbsp; enabled: true&#xA;&amp;nbsp; &amp;nbsp; image:&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; repository: &#34;000000000000.dkr.ecr.eu-west-1.amazonaws.com/sampleapp&#34;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; tag: &#34;latest&#34; &lt;em&gt;#in this case tag will be ignored&lt;/em&gt;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; digest: true&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; pullPolicy: &#34;Always&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;digest update strategy:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This update strategy monitors a specified tag in the registry for any changes and updates the image when a difference from the previous state is detected using the image SHA digest. The tag must be defined as a version constraint in the image list. It’s ideal for tracking mutable tags like the latest or environment-specific tags (e.g., dev, stage, prod) generated by a CI system.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Example annotations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: argoproj.io/v1alpha1&#xA;kind: Application&#xA;metadata:&#xA;&amp;nbsp; name: sampleapp&#xA;&amp;nbsp; namespace: argocd&#xA;&amp;nbsp; annotations:&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/image-list: &#34;sampleapp=0.dkr.ecr.eu-west-1.amazonaws.com/sampleapp:latest&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/sampleapp.helm.image-name: &#34;sampleapp.deployment.image.repository&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/sampleapp.helm.image-tag: &#34;sampleapp.deployment.image.tag&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/sampleapp.update-strategy: &#34;digest&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/pull-policy: Always&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/write-back-method: argocd&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is part of the helm values file that we are using for the sampleapp which is connected to the annotations – the important thing here is to specify the image tag in the format –&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;tag: “tag_name@sha256” :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sampleapp:&#xA;&amp;nbsp; appId: sampleapp&#xA;&amp;nbsp; deployment:&#xA;&amp;nbsp; &amp;nbsp; enabled: true&#xA;&amp;nbsp; &amp;nbsp; image:&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; repository: &#34;000000000000.dkr.ecr.eu-west-1.amazonaws.com/sampleapp&#34;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; tag: &#34;latest@sha256:ef8049179764ee395542a9895dbc3e326b6526116672aea568cfb0a33c0912af&#34;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; digest: true&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; pullPolicy: &#34;Always&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;name update strategy:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This updated strategy sorts image tags lexically in descending order and selects the last tag for updating. It’s useful for tracking images using calver versioning (e.g., YYYY-MM-DD) or similar tags. By default, all tags in the repository are considered, but you can configure it to limit which tags are eligible for updates.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Example annotations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: argoproj.io/v1alpha1&#xA;kind: Application&#xA;metadata:&#xA;&amp;nbsp; name: sampleapp&#xA;&amp;nbsp; namespace: argocd&#xA;&amp;nbsp; annotations:&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/image-list: &#34;sampleapp=0.dkr.ecr.eu-west-1.amazonaws.com/sampleapp:latest&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/sampleapp.helm.image-name: &#34;sampleapp.deployment.image.repository&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/sampleapp.update-strategy: &#34;name&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/myapp.allow-tags: regexp:^[0-9]{4}-[0-9]{2}-[0-9]{2}-stable$&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/pull-policy: &#34;Always&#34;&#xA;&amp;nbsp; &amp;nbsp; argocd-image-updater.argoproj.io/write-back-method: &#34;argocd&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this case, if we have tags such as: 2024-09-30-stable, 2024-09-30-beta, 2024-10-01-beta, 2024-10-01-stable, master, latest – Argo CD Image Updater will consider only the “-stable” ending tags, sort them lexically and choose the 2024-10-01-stable tag for the update.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is part of the helm values file that we are using for the sampleapp which is connected to the annotations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sampleapp:&#xA;  appId: sampleapp&#xA;  deployment:&#xA;    enabled: true&#xA;    image:&#xA;      repository: &#34;000000000000.dkr.ecr.eu-west-1.amazonaws.com/sampleapp&#34;&#xA;      tag: &#34;2024-09-30-stable&#34; #will be ignored in this case&#xA;      digest: true&#xA;      pullPolicy: &#34;Always&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After we’ve made the needed configurations and selected the most suitable update strategy we can check the Argo CD application’s parameters through the UI:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1249&#34; height=&#34;539&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/11/1000014427.jpg&#34; alt=&#34;image&#34; class=&#34;wp-image-120062&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11/1000014427.jpg 1249w, https://www.cncf.io/wp-content/uploads/2024/11/1000014427-300x129.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/11/1000014427-1024x442.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/11/1000014427-768x331.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/11/1000014427-900x388.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/11/1000014427-463x200.jpg 463w, https://www.cncf.io/wp-content/uploads/2024/11/1000014427-927x400.jpg 927w&#34; sizes=&#34;(max-width: 1249px) 100vw, 1249px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we can see, after the new image version was pushed in ECR, the original value of the image tag was changed by the Argo CD image updater, and the new image was deployed!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In conclusion, the Argo CD Image Updater is a powerful tool that enhances the continuous delivery process in Kubernetes environments. Automating the process of updating container images, not only streamlines deployments but also reduces the risk of human error associated with manual updates.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Moreover, its flexibility allows developers to tailor the update policies to suit their specific workflows, ensuring that only the necessary updates are applied. This ultimately leads to improved application reliability and performance.&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Reference: https://argocd-image-updater.readthedocs.io/en/stable/&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://itgix.com/kubernetes-services/&#34;&gt;ITGix&lt;/a&gt; 的 DevOps 和云工程师 Stanislava Racheva 的成员帖子&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;了解 Argo CD 映像更新程序&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在现代 Kubernetes 环境中，管理容器映像并确保应用程序始终运行最新、最安全的版本可能是一项艰巨的任务。 Argo CD Image Updater 通过自动检查新的容器映像版本并相应地更新您的应用程序来简化此过程。与 Argo CD 无缝集成，可实现 Kubernetes 工作负载的全自动更新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Argo CD Image Updater 的优点在于它的简单性和灵活性。通过使用映像列表注释您的 Argo CD 应用程序资源并定义版本约束，映像更新程序将接管繁重的工作。它会定期从容器注册表中轮询新的映像版本，检查它们是否满足指定的约束，并自动更新您的应用程序。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Argo CD Image Updater 还提供一系列高级功能，例如对基于 Helm 和 Kustomize 的应用程序的支持、各种更新策略（如 semver、latest、name 和digest）以及与私有容器注册表的无缝集成。此外，它允许并行更新并支持使用自定义匹配器过滤标签，使其高度可定制，并且适用于小型和大型 Kubernetes 环境。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;用例和解决的问题&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;自动保持映像最新&lt;/strong&gt;：对于部署频繁更新映像的团队来说，手动跟踪和更新这些映像可能会导致效率低下和停机。 Argo CD Image Updater 通过自动化整个映像更新过程解决了这个问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;版本控制和稳定性&lt;/strong&gt;：有时团队希望坚持特定的版本控制模式（例如 semver）或确保他们只选择稳定的版本。借助 Argo CD Image Updater 的可配置策略，可以轻松执行此类策略并确保应用程序始终在所需版本上运行。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;高效的 GitOps 工作流程&lt;/strong&gt;：通过与 Argo CD 集成，可以将更改写回到 Git，维护 GitOps 核心的声明性模型，并确保应用程序状态和版本控制始终与源同步真理。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;无论您是运行简单的工作负载还是管理跨多个环境的复杂部署，Argo CD Image Updater 都提供了一种简化的方法来自动执行映像更新、减少运营开销并确保您的应用程序始终以最新、最安全的版本运行版本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;配置和设置&lt;br&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在此示例实现中，我们使用官方 argocd-image-updater helm 图表，可从以下位置获取：&lt;a href=&#34;https://github.com/argoproj/argo-helm/tree/main/charts/argocd-image-updater&#34;&gt;https://github.com/argoproj/argo-helm/tree/main/charts/argocd-image-updater&lt;/a&gt;&lt;/ p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;它作为 argocd 应用程序部署在与 Argo CD 相同的集群和命名空间中：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：argoproj.io/v1alpha1&#xA;种类： 应用&#xA;元数据：&#xA;  名称： argocd-image-updater&#xA;  命名空间：argocd&#xA;规格：&#xA;  目的地：&#xA;    命名空间：argocd&#xA;    服务器：https://kubernetes.default.svc&#xA;  项目：“应用程序”&#xA;  来源：&#xA;    舵：&#xA;      值文件：&#xA;      - ../argocd-image-updater/values.yaml&#xA;    路径：helm/argocd-image-updater&#xA;    仓库地址：https://gitlab.org.com/demo.git&#xA;    目标修订：HEAD&#xA;  同步策略：&#xA;    自动化：&#xA;      修剪：真实&#xA;      自我修复：正确&#xA;      允许空：假&#xA;    同步选项：&#xA;  revisionHistoryLimit: 3 &lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们回顾一下值文件，我们将在其中探索一些所需的基本配置选项。这些选项对于确保服务的正常功能和部署至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;注册表&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在这里，我们将配置我们正在使用的容器注册表。 Argo CD Image Updater 支持大多数容器注册表（公共和私有），这些注册表实现了 Docker 注册表 v2 API，并已针对 Docker Hub、Docker 注册表 v2 参考实现（本地）、Red Had Quay、Jfrog Artifactory 等注册表进行了测试、Github 容器注册表、GitHub 包注册表、GitLab 容器注册表和 Google 容器注册表。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在以下示例中，我们将配置两个最广泛使用的容器注册表 - Amazon Elastic ContainerRegistry (ECR) 和 GitHub ContainerRegistry (GHCR)。就我们而言，我们正在与私有注册表合作，以确保容器映像的安全存储和访问控制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Amazon Elastic Container Registry (ECR) 配置：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;注册表：&#xA;  - 名称：ECR&#xA;    api_url：https://000000000000.dkr.ecr.eu-west-1.amazonaws.com&#xA;    前缀：000000000000.dkr.ecr.eu-west-1.amazonaws.com&#xA;    平：是的&#xA;    不安全：假&#xA;    凭据： ext:/scripts/login.sh&#xA;    凭证过期：10h&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于 Amazon Elastic Container Registry，可以通过执行 API 调用的脚本来检索必要的凭证来进行身份验证。在值文件中，我们可以将此脚本包含在 authScripts 部分中：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;authScripts：&#xA;  # -- 是否挂载定义的可用于注册中心认证的脚本，脚本将挂载在 `/scripts`&#xA;  启用：真&#xA;  # -- 键值对映射，其中键由脚本名称组成以及内容的价值&#xA;  脚本：&#xA;    登录.sh: |&#xA;      #!/bin/sh&#xA;      aws ecr --region &#34;eu-west-1&#34; get-authorization-token --output text --query &#39;authorizationData[].authorizationToken&#39; | base64 -d&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该脚本由 pod 执行，负责获取 ECR 授权令牌。我们使用附加到 EKS 节点组的角色，其中包括 AWS 托管策略 AmazonEC2ContainerRegistryReadOnly。此策略允许 GetAuthorizationToken API 调用：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#xA;    &#34;版本&#34;: &#34;2012-10-17&#34;,&#xA;    “陈述”： [&#xA;        {&#xA;            &#34;效果&#34;: &#34;允许&#34;,&#xA;            “行动”： [&#xA;                “ecr：获取授权令牌”，&#xA;                “ecr：批量检查图层可用性”，&#xA;                “ecr：GetDownloadUrlForLayer”，&#xA;                “ecr：获取存储库策略”，&#xA;                “ecr：描述存储库”，&#xA;                “ecr：列表图像”，&#xA;                “ecr：描述图像”，&#xA;                “ecr：批量获取图像”，&#xA;                “ecr：获取生命周期策略”，&#xA;                “ecr：获取生命周期策略预览”，&#xA;                “ecr：ListTagsForResource”，&#xA;                “ecr：描述图像扫描结果”&#xA;            ],&#xA;            “资源”：“*”&#xA;        }&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;GitHub 容器注册表配置：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;注册表：&#xA;  - 名称：GitHub 容器注册表&#xA;    api_url：https://ghcr.io&#xA;    前缀：ghcr.io&#xA;    平：是的&#xA;    凭据：秘密：argocd/ghcr-secret#token&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于注册表身份验证，在凭据部分，我们使用 Kubernetes 密钥。 #token 部分指的是机密内的特定密钥（通常包含个人访问令牌或身份验证令牌）。该令牌必须至少具有 read:packages 权限。以下是必须在 argocd 命名空间中应用的 Kubernetes 秘密的清单：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：v1&#xA;种类：秘密&#xA;元数据：&#xA;  名称：ghcr-secret3&#xA;  命名空间：argocd&#xA;字符串数据：&#xA;  令牌：用户名：access_token&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;启用服务帐户和 RBAC 创建：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;rbac：&#xA;  &lt;em&gt;# -- 启用 RBAC 创建&lt;/em&gt;&#xA;  启用：真&#xA;&#xA;服务帐号：&#xA;  &lt;em&gt;# --指定是否应创建服务帐户&lt;/em&gt;&#xA;  创建：真实&#xA;  &lt;em&gt;# -- 添加到服务帐户的注释&lt;/em&gt;&#xA;  注释：{}&#xA;  &lt;em&gt;# -- 添加到服务帐户的标签&lt;/em&gt;&#xA;  标签：{}&#xA;  &lt;em&gt;# -- 要使用的服务帐户的名称。&lt;/em&gt;&#xA;  &lt;em&gt;# 如果未设置且 create 为 true，则使用全名模板生成名称&lt;/em&gt;&#xA;  名称：“”&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ServiceAccount 为 ArgoCD 映像更新程序提供必要的身份，以进行身份​​验证并与 Kubernetes API 交互，以便对部署清单或 Helm 图表执行更新（例如，更改容器映像标签）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;rbac 确保 ArgoCD Image Updater 仅被授予其所需的权限，从而通过限制其访问并减少攻击面来帮助保护您的集群。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果不启用两者，ArgoCD 映像更新程序将缺乏修改 Kubernetes 资源的权限（无法更新应用程序），或者可能拥有过于广泛的权限，这可能会带来安全风险。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在默认安装场景中，即 Argo CD Image Updater 安装到 argocd 命名空间，Argo CD Image Updater 无需进行进一步配置即可访问 Kubernetes API。如果您的 Argo CD 安装与 argocd 位于不同的命名空间中，则必须调整 RoleBinding 以绑定到正确命名空间中的 ServiceAccount。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;日志级别：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;&lt;em&gt;# -- Argo CD 镜像更新日志级别&lt;/em&gt;&#xA;  日志级别：“调试”&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在某些需要更深入了解系统行为的情况下，将 Argo CD 映像更新程序值文件中的日志级别从“信息”更改为“调试”可能会很有帮助。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Argo CD 映像更新程序二进制文件：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;argocd-image-updater 二进制文件，特别是 test 子命令提供了各种测试选项，包括在 Argo CD 应用程序上配置注释之前测试注册表访问、多架构映像、semver 约束、更新策略和凭据。它可以在 argocd-image-updater pod 中找到，也可以在本地安装。以下是 argocd-image-updater 测试命令选项：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;标志：&#xA;      --allow-tags string             只考虑注册表中满足匹配&lt;strong&gt;函数&lt;/strong&gt;的标签&#xA;      --credentials string            测试的凭证定义（覆盖注册表配置）&#xA;      --disable-kubernetes            是否禁用 Kubernetes 客户端&#xA;      --disable-kubernetes-events 禁用 kubernetes 事件&#xA;  -h, --help                   &amp;nbsp;       帮助&lt;strong&gt;用于&lt;/strong&gt;测试&#xA;      --ignore-tags stringArray       忽略注册表中与给定 glob 模式匹配的标签&#xA;      --kubeconfig string             Kubernetes 客户端配置的路径&#xA;      --loglevel string               使用的日志级别（跟踪、调试、信息、警告、错误之一）（默认“调试”）&#xA;      --platforms strings             将图像限制为给定平台（默认 [linux/amd64]）&#xA;      --rate-limit int                特定注册表速率限制（覆盖registry.conf）（默认 20）&#xA;      --registries-conf-path string 注册表配置的路径&#xA;      --semver-constraint string 只考虑与语义版本约束匹配的标签&#xA;      --update-strategy string        更新要使用的策略，其中之一：semver、latest）（默认“semver”）&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;更新方法&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Argo CD 映像更新程序支持两种回写方法，用于将新映像版本传播到 Argo CD：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;argocd：根据配置，通过 Kubernetes 或 Argo CD API 直接修改 Argo CD 应用程序资源。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;git：使用更新的图像信息在应用程序的存储库中创建 Git 提交。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;回写方法及其配置是根据应用程序设置的，根据所使用的方法，可以使用更多配置选项。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本文中的示例使用argocd更新方法进行应用，该方法是默认的更新方法，不需要进一步配置。对于生产环境，建议使用 git update 方法将 Argo CD Image Updater 所做的更改保存到 git 存储库中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;更新策略&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;更新策略指定 Argo CD Image Updater 如何识别新的映像版本以进行更新。它支持跟踪和更新配置图像的各种策略。每个镜像都可以有自己的更新策略，默认是semver策略。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当前支持的更新策略有：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;    • semver：基于语义版本控制的更新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;    • 最新：更新到注册表中最新构建的映像。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;    • 摘要：使用 SHA 摘要更新到标签的最新版本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;    • name：按字母顺序对标签进行排序并更新到最高版本&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在下面的示例中，我们展示了如何注释我们的 argocd 应用程序，以启用 Argo CD 映像更新程序，设置所有更新策略。我们正在使用伞式 Helm Chart 来部署我们的示例应用程序。对于清单中包含多个镜像的 Helm 应用，或者使用除 image.name 和 image.tag 以外的参数来定义镜像时，您需要在镜像规范中配置 &lt;image_alias&gt;。此别名有助于识别映像并启用 Ago CD 映像更新程序：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;argocd-image-updater.argoproj.io/image-list：“&lt;image_alias&gt;=&lt;some/image&gt;”&lt;/code&gt;&lt;/上一篇&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;semver 更新策略：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是默认的更新策略。通过 semver 策略，Argo CD Image Updater 使用以语义版本控制格式标记的图像进行操作。标签应在 X.Y.Z 结构中包含与 semver 兼容的标识符，其中 X、Y 和 Z 是整数。可以使用可选的前缀“v”（例如，vX.Y.Z），并且两种格式被认为是等效的。在第一个示例中，每个注释都得到了具体解释，因为我们在所有示例中都使用了 semver 更新策略的一些注释。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;注释示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：argoproj.io/v1alpha1&#xA;种类： 应用&#xA;元数据：&#xA;  名称：示例应用程序&#xA;  命名空间：argocd&#xA;  注释：&#xA;    argocd-image-updater.argoproj.io/image-list：“sampleapp=0.dkr.ecr.eu-west-1.amazonaws.com/sampleapp:v1.2.x”&#xA;    argocd-image-updater.argoproj.io/sampleapp.helm.image-name：“sampleapp.deployment.image.repository”&#xA;    argocd-image-updater.argoproj.io/sampleapp.helm.image-tag：“sampleapp.deployment.image.tag”&#xA;    argocd-image-updater.argoproj.io/sampleapp.update-strategy：“semver”&#xA;    argocd-image-updater.argoproj.io/pull-policy：始终&#xA;    argocd-image-updater.argoproj.io/write-back-method：argocd&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;image-list - 正如我们之前所解释的，image-list 注释使 Argo CD Image Updater 能够与应用程序一起操作 - 对于我们使用 exampleapp 作为别名的值，我们指定图像及其标签。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;image-name – 我们通过其 helm 值路径指定图像名称，我们在其中定义图像存储库&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;image-tag – 通过其 helm 值路径定义图像标签&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;更新策略 - 在这里我们声明所需的更新策略&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;pull-policy – 指定pull-policy，在这种情况下我们总是获得最新版本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;回写方法 – 指定 Argo CD 映像更新程序回写方法&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在此场景中，我们使用带有标签 v1.2.x 的语义版本控制约束。这意味着 Argo CD 映像更新程序将查找与 v1.2.x 模式匹配的任何映像标签。语义版本控制中的 x 充当通配符，因此更新程序将接受 v1.2 系列中的任何补丁级别版本（例如 v1.2.1、v1.2.5、v1.2.9 等）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是我们用于示例应用程序的 helm 值文件的一部分，它是 c连接到注释：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;示例应用程序：&#xA;  应用程序 ID：示例应用程序&#xA;  部署：&#xA;    启用：真&#xA;    图像：&#xA;      存储库：“000000000000.dkr.ecr.eu-west-1.amazonaws.com/sampleapp”&#xA;      标签：“v1.2”&#xA;      摘要：真实&#xA;      pullPolicy：“始终”&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最新更新策略：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Argo CD 映像更新程序可以使用最新的构建日期更新映像，即使标记是任意的（例如 Git 提交 SHA 或随机字符串）。它关注的是构建日期，而不是图像被标记或推送到注册表的时间。如果多个标签共享相同的构建日期，则更新程序会按词汇降序对标签进行排序并选择最后一个。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;注释示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：argoproj.io/v1alpha1&#xA;种类： 应用&#xA;元数据：&#xA;  名称：示例应用程序&#xA;  命名空间：argocd&#xA;  注释：&#xA;    argocd-image-updater.argoproj.io/image-list：“sampleapp=0.dkr.ecr.eu-west-1.amazonaws.com/sampleapp”&#xA;    argocd-image-updater.argoproj.io/sampleapp.helm.image-name：“sampleapp.deployment.image.repository”&#xA;    argocd-image-updater.argoproj.io/sampleapp.update-strategy：“最新”&#xA;    argocd-image-updater.argoproj.io/pull-policy：始终&#xA;    argocd-image-updater.argoproj.io/write-back-method：argocd&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在这种情况下，我们不必指定 image-tag。但是，如果我们只想允许特定标签进行更新，我们可以使用 argocd-image-updater.argoproj.io/myimage.allow-tags: 注释，例如使用最新标签和主标签：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;argocd-image-updater.argoproj.io/myimage.allow-tags：最新，主&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;或者我们可以使用ignore-tags注释忽略它们：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;argocd-image-updater.argoproj.io/myimage.ignore-tags：最新，主&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是我们用于连接到注释的示例应用程序的 helm 值文件的一部分：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;示例应用程序：&#xA;  应用程序 ID：示例应用程序&#xA;  部署：&#xA;    启用：真&#xA;    图像：&#xA;      存储库：“000000000000.dkr.ecr.eu-west-1.amazonaws.com/sampleapp”&#xA;      标签：“最新”&lt;em&gt;#在这种情况下标签将被忽略&lt;/em&gt;&#xA;      摘要：真实&#xA;      pullPolicy：“始终”&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;摘要更新策略：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此更新策略监视注册表中指定标记的任何更改，并在使用映像 SHA 摘要检测到与先前状态的差异时更新映像。该标签必须定义为图像列表中的版本约束。它非常适合跟踪 CI 系统生成的可变标签，例如最新的或特定于环境的标签（例如 dev、stage、prod）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;注释示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVers离子：argoproj.io/v1alpha1&#xA;种类： 应用&#xA;元数据：&#xA;  名称：示例应用程序&#xA;  命名空间：argocd&#xA;  注释：&#xA;    argocd-image-updater.argoproj.io/image-list：“sampleapp=0.dkr.ecr.eu-west-1.amazonaws.com/sampleapp:latest”&#xA;    argocd-image-updater.argoproj.io/sampleapp.helm.image-name：“sampleapp.deployment.image.repository”&#xA;    argocd-image-updater.argoproj.io/sampleapp.helm.image-tag：“sampleapp.deployment.image.tag”&#xA;    argocd-image-updater.argoproj.io/sampleapp.update-strategy：“摘要”&#xA;    argocd-image-updater.argoproj.io/pull-policy：始终&#xA;    argocd-image-updater.argoproj.io/write-back-method：argocd&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是我们用于连接到注释的示例应用程序的 helm 值文件的一部分 - 这里重要的是以格式指定图像标签 - &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;标签：“tag_name@sha256”：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;示例应用程序：&#xA;  应用程序 ID：示例应用程序&#xA;  部署：&#xA;    启用：真&#xA;    图像：&#xA;      存储库：“000000000000.dkr.ecr.eu-west-1.amazonaws.com/sampleapp”&#xA;      标签：“最新@sha256：ef8049179764ee395542a9895dbc3e326b6526116672aea568cfb0a33c0912af”&#xA;      摘要：真实&#xA;      pullPolicy：“始终”&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;名称更新策略：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此更新策略按词法降序对图像标签进行排序，并选择最后一个标签进行更新。它对于使用 calver 版本控制（例如，YYYY-MM-DD）或类似标签来跟踪图像非常有用。默认情况下，会考虑存储库中的所有标签，但您可以将其配置为限制哪些标签有资格更新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;注释示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：argoproj.io/v1alpha1&#xA;种类： 应用&#xA;元数据：&#xA;  名称：示例应用程序&#xA;  命名空间：argocd&#xA;  注释：&#xA;    argocd-image-updater.argoproj.io/image-list：“sampleapp=0.dkr.ecr.eu-west-1.amazonaws.com/sampleapp:latest”&#xA;    argocd-image-updater.argoproj.io/sampleapp.helm.image-name：“sampleapp.deployment.image.repository”&#xA;    argocd-image-updater.argoproj.io/sampleapp.update-strategy：“名称”&#xA;    argocd-image-updater.argoproj.io/myapp.allow-tags：正则表达式：^[0-9]{4}-[0-9]{2}-[0-9]{2}-stable$&#xA;    argocd-image-updater.argoproj.io/pull-policy：“始终”&#xA;    argocd-image-updater.argoproj.io/write-back-method: &#34;argocd&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在这种情况下，如果我们有以下标签：2024-09-30-stable、2024-09-30-beta、2024-10-01-beta、2024-10-01-stable、master、latest – Argo CD 映像更新程序将仅考虑“-stable”结束标签，按词法对它们进行排序并选择 2024-10-01-stable 标签用于更新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是我们用于连接到注释的示例应用程序的 helm 值文件的一部分：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;示例应用程序：&#xA;  应用程序ID： 示例应用程序&#xA;  部署：&#xA;    启用：真&#xA;    图像：&#xA;      存储库：“000000000000.dkr.ecr.eu-west-1.amazonaws.com/sampleapp”&#xA;      tag: &#34;2024-09-30-stable&#34; #在这种情况下将被忽略&#xA;      摘要：真实&#xA;      pullPolicy：“始终”&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;完成所需的配置并选择最合适的更新策略后，我们可以通过 UI 检查 Argo CD 应用程序的参数：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1249”高度=“539”src=“https://www.cncf.io/ wp-content/uploads/2024/11/1000014427.jpg&#34; alt=&#34;image&#34; class=&#34;wp-image-120062&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11 /1000014427.jpg 1249w，https://www.cncf.io/wp-content/uploads/2024/11/1000014427-300x129.jpg 300w，https://www.cncf.io/wp-content/uploads/2024 /11/1000014427-1024x442.jpg 1024w，https://www.cncf.io/wp-content/uploads/2024/11/1000014427-768x331.jpg 768w，https://www.cncf.io/wp-content /uploads/2024/11/1000014427-900x388.jpg 900w，https://www.cncf.io/wp-content/uploads/2024/11/1000014427-463x200.jpg 463w，https://www.cncf.io /wp-content/uploads/2024/11/1000014427-927x400.jpg 927w”尺寸=“（最大宽度：1249px）100vw，1249px”referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们可以看到，在ECR中推送新的镜像版本后，Argo CD镜像更新程序更改了镜像标签的原始值，并部署了新镜像！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;总而言之，Argo CD Image Updater 是一个强大的工具，可以增强 Kubernetes 环境中的持续交付流程。自动化更新容器映像的过程不仅可以简化部署，还可以降低与手动更新相关的人为错误风险。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，它的灵活性允许开发人员定制更新策略以适应其特定的工作流程，确保仅应用必要的更新。这最终会提高应用程序的可靠性和性能。   &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;参考：https://argocd-image-updater.readthedocs.io/en/stable/                                     &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 04 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【What Karpenter v1.0.0 means for Kubernetes autoscaling】Karpenter v1.0.0 对 Kubernetes 自动缩放意味着什么</title>
      <link>https://www.cncf.io/blog/2024/11/06/karpenter-v1-0-0-beta/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post by Rajdeep Saha, Principal Solutions Architect, AWS and Praseeda Sathaye, Principal SA, Containers &amp;amp; OSS, AWS&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Introduction&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;&lt;a href=&#34;https://karpenter.sh/&#34;&gt;Karpenter&lt;/a&gt;&amp;nbsp;is an&amp;nbsp;open-source project that provides node lifecycle management to optimize the efficiency and cost of running workloads on Kubernetes clusters. &amp;nbsp;AWS created and open sourced Karpenter in 2021 to help automate how customers select, provision, and scale infrastructure in their clusters and provide more flexibility for Kubernetes users to take full advantage of unique infrastructure offerings across different cloud providers.&amp;nbsp;In 2023, the &lt;a href=&#34;https://aws.amazon.com/blogs/containers/karpenter-graduates-to-beta/&#34;&gt;project graduated to beta&lt;/a&gt;, and AWS &lt;a href=&#34;https://github.com/kubernetes/org/issues/4258&#34;&gt;contributed&lt;/a&gt; the vendor-neutral core of the project to the Cloud Native Computing Foundation (CNCF) through the Kubernetes Autoscaling Special Interest Group&amp;nbsp;(SIG). In 2024, AWS &lt;a href=&#34;https://aws.amazon.com/blogs/containers/announcing-karpenter-1-0/&#34;&gt;released Karpenter version 1.0.0&lt;/a&gt; that marks the final milestone in the project’s maturity. With this release, all Karpenter APIs will remain available in future 1.0 minor versions and will not be modified in ways that results in breaking changes. &lt;a href=&#34;https://github.com/kubernetes-sigs/karpenter&#34;&gt;Karpenter is available as open-source&lt;/a&gt; software (OSS) under an Apache 2.0 license. It separates the generic logic for Kubernetes application-awareness and workload binpacking from the creation and running of API requests to launch or terminate compute resources for a given cloud provider.&amp;nbsp;By developing cloud provider-specific integrations that interact with their respective compute APIs, Karpenter enables individual cloud providers such as AWS, Azure, GCP, and others to leverage its capabilities within their respective environments. In 2023&amp;nbsp;Microsoft released&amp;nbsp;&lt;a href=&#34;https://github.com/Azure/karpenter-provider-azure&#34;&gt;Karpenter Provider&lt;/a&gt; for running Karpenter on Azure Kubernetes Service (AKS).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Today, Karpenter has gained widespread popularity within the Kubernetes community, with a diverse range of organizations and enterprises using its capabilities to help improve application availability, lower operational overhead, and increase cost-efficiency.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;How Karpenter works&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;Karpenter’s job in a Kubernetes cluster is to make application and Kubernetes-aware compute capacity decisions. It is built as a Kubernetes Operator, runs in the Kubernetes cluster, and manages cluster compute infrastructure. There are two kinds of decisions Karpenter makes: to provision new compute and to deprovision that compute when it’s no longer needed.&amp;nbsp;Karpenter works by watching for pods that the Kubernetes scheduler has marked as unschedulable, evaluating scheduling constraints (resource requests, node-selectors, affinities, tolerations, and topology spread constraints) requested by the pods, provisioning nodes that meet the requirements of the pods, and deprovisioning&amp;nbsp;the nodes when the nodes are no longer needed.&amp;nbsp;Karpenter’s workload consolidation feature proactively identifies and reschedules underused workloads onto a more cost-efficient set of instances, either by reusing existing instances within the cluster or by launching new, optimized instances, thereby maximizing resource usage and minimizing operational costs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;844&#34; height=&#34;406&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-1.jpg&#34; alt=&#34;Figure 1: Karpenter provisions node(s) in response to pending unschedulable pods&#34; class=&#34;wp-image-119446&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-1.jpg 844w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-1-300x144.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-1-768x369.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-1-416x200.jpg 416w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-1-832x400.jpg 832w&#34; sizes=&#34;(max-width: 844px) 100vw, 844px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Karpenter provisions node(s) in response to pending unschedulable pods&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter scaling is controlled using Kubernetes native YAMLs, specifically through the use of &lt;a href=&#34;https://karpenter.sh/docs/concepts/nodepools/&#34;&gt;NodePool&lt;/a&gt; and &lt;a href=&#34;https://karpenter.sh/docs/concepts/nodeclasses/&#34;&gt;NodeClass&lt;/a&gt; custom Kubernetes resources.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;NodePools set&amp;nbsp;constraints on the&amp;nbsp;nodes that Karpenter provisions in the Kubernetes cluster. Each NodePool defines requirements such as instance types, availability zones, architectures (for example AMD64 or ARM64), capacity types (spot or on-demand), and other node settings that apply to all the nodes launched in the NodePool. It also allows setting limits on total resources such as CPU, memory, and GPUs that the NodePool can consume. The following is an example of NodePool configuration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: karpenter.sh/v1beta1&lt;br&gt;kind: NodePool&lt;br&gt;metadata:&lt;br&gt;&amp;nbsp;&amp;nbsp;name: default&lt;br&gt;spec:&lt;br&gt;&amp;nbsp;&amp;nbsp;template:&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;spec:&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;requirements:&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;- key: karpenter.k8s.aws/instance-category&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;operator: In&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;values: [&#34;c&#34;,&#34;m&#34;,&#34;r&#34;,&#34;t&#34;]&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;-&amp;nbsp;key:&amp;nbsp;&#34;karpenter.k8s.aws/instance-family&#34;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; operator:&amp;nbsp;In&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;values:&amp;nbsp;[&#34;m5&#34;,&#34;m5d&#34;,&#34;c5&#34;,&#34;c5d&#34;,&#34;c4&#34;,&#34;r4&#34;]&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;- key: karpenter.k8s.aws/instance-size&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;operator: NotIn&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;values: [&#34;nano&#34;,&#34;micro&#34;,&#34;small&#34;,&#34;medium&#34;]&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;- key: topology.kubernetes.io/zone&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;operator: In&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;values: [&#34;us-west-2a&#34;,&#34;us-west-2b&#34;]&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;- key: kubernetes.io/arch&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;operator: In&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;values: [&#34;amd64&#34;,&#34;arm64&#34;]&lt;br&gt;&amp;nbsp;&amp;nbsp;limits:&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;cpu: 100&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://karpenter.sh/docs/concepts/nodepools/&#34;&gt;Karpenter documentation&lt;/a&gt; for the complete list of fields for NodePool requirement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The following is the example of NodePool with taints, user-defined labels and annotations that are added to all the nodes provisioned by Karpenter.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: karpenter.sh/v1beta1&lt;br&gt;kind: NodePool&lt;br&gt;spec:&lt;br&gt;&amp;nbsp;&amp;nbsp;template:&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;metadata:&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;annotations:&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;application/name: &#34;app-a&#34;&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;labels:&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;team: team-a&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;spec:&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;taints:&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;- key: example.com/special-taint&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;value: &#34;true&#34;&lt;br&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;effect: NoSchedule&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: apps/v1&lt;br&gt;kind: Deployment&lt;br&gt;metadata:&lt;br&gt;&amp;nbsp;name:&lt;br&gt;spec: myapp&lt;br&gt;&amp;nbsp;&amp;nbsp; nodeSelector:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; team: team-a&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter supports all standard Kubernetes scheduling constraints,&amp;nbsp;such as node selectors, node affinity, taints/tolerations, and topology spread constraints. This allows applications to use these constraints when scheduling pods on the nodes provisioned by Karpenter.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;NodeClasses in Karpenter allow you to configure&amp;nbsp;cloud provider-specific settings for your nodes in Kubernetes cluster. Each NodePool references a NodeClass that determines the specific configuration of nodes that Karpenter provisions.&amp;nbsp;For example, you can specify settings such as the &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html&#34;&gt;Amazon Machine Image (AMI)&lt;/a&gt; family, subnet and security group selectors, &lt;a href=&#34;https://aws.amazon.com/iam/&#34;&gt;AWS Identity and Access Management (IAM)&lt;/a&gt; role/instance profile, node labels, and various Kubelet configurations in AWS &lt;a href=&#34;https://karpenter.sh/docs/concepts/nodeclasses/&#34;&gt;EC2NodeClass&lt;/a&gt;&amp;nbsp;and similarly for Azure &lt;a href=&#34;https://learn.microsoft.com/en-gb/azure/aks/node-autoprovision?tabs=azure-cli#node-image-updates&#34;&gt;AKSNodeClass&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Beyond scaling&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;Karpenter is more than an efficient cluster autoscaler for Kubernetes. Karpenter optimizes compute costs, helps upgrade and patch data plane worker nodes, and delivers powerful and explorative use cases by pairing with other CNCF tools.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Cost optimization&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;In the previous section, we saw how Karpenter provisions appropriate worker virtual machines (VMs) based on pod resource requests. As the workloads in a Kubernetes cluster change and scale, it can be necessary to launch new instances to make sure they have the compute resources they need. Over time, those instances can become under-used as some workloads scale down or are removed from the cluster. Workload consolidation for Karpenter automatically looks for opportunities to reschedule these workloads onto a set of more cost-efficient instances, whether they are already in the cluster or need to be launched.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;844&#34; height=&#34;410&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-2.jpg&#34; alt=&#34;Figure 2: Worker nodes with varying degree of usage &#34; class=&#34;wp-image-119447&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-2.jpg 844w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-2-300x146.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-2-768x373.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-2-412x200.jpg 412w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-2-823x400.jpg 823w&#34; sizes=&#34;(max-width: 844px) 100vw, 844px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Worker nodes with varying degree of usage &lt;br&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the preceding diagram, the first node is highly used&amp;nbsp;but the others aren’t used as well as they could be.&amp;nbsp;With Karpenter, you can enable the consolidation feature in the NodePool YAML:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: karpenter.sh/v1&lt;br&gt;kind: NodePool&lt;br&gt;metadata:&lt;br&gt;&amp;nbsp; name: default&lt;br&gt;spec:&lt;br&gt;&amp;nbsp; disruption:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; consolidationPolicy: WhenEmptyOrUnderutilized&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter is always evaluating and working to reduce the cluster cost. Karpenter consolidates workloads onto the&amp;nbsp;fewest, lowest-cost instances, while still respecting the pod’s resource and scheduling constraints. With the preceding scenario, Karpenter moves the pods from the last two nodes into the second node, and terminates the resultant empty nodes:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;844&#34; height=&#34;356&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-3.jpg&#34; alt=&#34;Figure 3: Karpenter binpacks pods into existing nodes with consolidation &#34; class=&#34;wp-image-119448&#34; style=&#34;width:901px;height:auto&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-3.jpg 844w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-3-300x127.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-3-768x324.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-3-474x200.jpg 474w&#34; sizes=&#34;(max-width: 844px) 100vw, 844px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Karpenter binpacks pods into existing nodes with consolidation &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter prioritizes nodes to consolidate based on the least number of pods scheduled. For users with workloads that experience sudden spikes in demand or interruptible jobs, frequent pod creation and deletion (pod churn) might be a concern. Karpenter offers a&amp;nbsp;consolidateAfter setting to control how quickly it attempts to consolidate nodes to maintain optimal capacity and minimize node churn. By specifying a value in hours, minutes, or seconds, users can determine the delay before Karpenter initiates consolidation actions in response to pod additions or removals.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt; apiVersion: karpenter.sh/v1&#xA;kind: NodePool&#xA;metadata:&#xA;&amp;nbsp; name: default&#xA;spec:&#xA;&amp;nbsp; disruption:&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp; consolidationPolicy: WhenEmptyOrUnderutilized&#xA;&amp;nbsp;&amp;nbsp;&amp;nbsp; consolidateAfter: 1h &amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;With consolidation, Karpenter also rightsizes the worker nodes. For example, in the following case, if Karpenter consolidates the pod from the third node to the second (m5.xlarge), then there is still underusage. Karpenter instead provisions a smaller node (m5.large) and consolidates the pods, resulting in lower cost.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;844&#34; height=&#34;470&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-4.jpg&#34; alt=&#34;Figure 4: Karpenter rightsizes node with consolidation&#34; class=&#34;wp-image-119449&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-4.jpg 844w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-4-300x167.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-4-768x428.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-4-359x200.jpg 359w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-4-718x400.jpg 718w&#34; sizes=&#34;(max-width: 844px) 100vw, 844px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Karpenter rightsizes node with consolidation&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To know more about consolidation, refer to &lt;a href=&#34;https://karpenter.sh/docs/concepts/disruption/&#34;&gt;this official documentation&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Lifecycle Management of Worker Nodes&lt;br&gt;&lt;br&gt;Karpenter can make sure your worker nodes always run with the latest node image/Amazon Machine Image (AMI).&amp;nbsp;In the NodeClass YAML, you can specify the AMI family and version as follows:&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: karpenter.k8s.aws/v1&lt;br&gt;kind: EC2NodeClass&lt;br&gt;metadata:&lt;br&gt;&amp;nbsp; name: default&lt;br&gt;spec:&lt;br&gt;&amp;nbsp; amiSelectorTerms:&lt;br&gt;&amp;nbsp; - alias: bottlerocket@latest&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;code&gt;amiSelectorTerms&lt;/code&gt; is a necessary field of the NodeClass and a new term, &lt;code&gt;alias&lt;/code&gt;, has been introduced with version 1.0, which consists of an AMI family and a version (family@version). If an alias exists in the NodeClass, then Karpenter selects the AMI supplied by the cloud provider for that family. With this new feature, users can also pin to a specific version of an AMI. For AWS, the following &lt;a href=&#34;https://aws.amazon.com/eks/&#34;&gt;Amazon Elastic Kubernetes Service (Amazon EKS)&lt;/a&gt; optimized AMI families can be configured: al2, al2023, bottlerocket, windows2019, and windows2022&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;All the nodes provisioned by this NodeClass, will have the latest &lt;a href=&#34;https://aws.amazon.com/bottlerocket/&#34;&gt;bottlerocket&lt;/a&gt; AMI. Because this alias uses &lt;code&gt;@latest&lt;/code&gt; version, when the cloud provider releases a new optimized AMI for the Kubernetes version cluster is running with, then Karpenter updates the worker node AMIs automatically, respecting the Kubernetes scheduling constraints. Worker nodes are upgraded in a rolling deployment fashion. If the cluster is upgraded to a newer version, then Karpenter automatically upgrades the worker nodes with the latest AMI for this new version, automatically and without manual intervention. This takes away management overhead and lets you always run with the latest and most secure AMI.&amp;nbsp;This works well in pre-production environments where it’s nice to be auto-upgraded to the latest version for testing, but more control over AMI versions is recommended in production environments.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Alternatively, you can also pin your worker nodes to a specific version of the AMI as follows:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: karpenter.k8s.aws/v1&lt;br&gt;kind: EC2NodeClass&lt;br&gt;metadata:&lt;br&gt;&amp;nbsp; name: default&lt;br&gt;spec:&lt;br&gt;&amp;nbsp; amiSelectorTerms:&lt;br&gt;&amp;nbsp; - alias: bottlerocket@v1.20.3&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this case, if the cloud provider releases new bottlerocket AMI, Karpenter doesn’t drift the worker nodes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter also supports custom AMIs. You can use the existing tags, name, or ID field in amiSelectorTerms to select an AMI. In the following case, the AMI with ID ami-123 is selected to provision the nodes. The amiFamily Bottlerocket injects pre-generated user data into the provisioned node.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: karpenter.k8s.aws/v1&lt;br&gt;kind: EC2NodeClass&lt;br&gt;metadata:&lt;br&gt;&amp;nbsp; name: default&lt;br&gt;spec:&lt;br&gt;...&lt;br&gt;&amp;nbsp; amiFamily: Bottlerocket&lt;br&gt;&amp;nbsp; amiSelectorTerms:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; - id: ami-123&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To upgrade the worker nodes, change the &lt;code&gt;amiSelectorTerms&lt;/code&gt; to select a different AMI, and nodes drift and upgrade to the assigned AMI.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Karpenter Working with Other CNCF projects&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter can be used with other CNCF projects to deliver powerful solutions for common use cases. One prominent example of this is using Kubernetes Event Driven Autoscaling (KEDA) with Karpenter to implement event driven workloads. With KEDA, you can drive the scaling of any container in Kubernetes based on the number of events needing to be processed. One popular implementation is to scale up worker nodes to accommodate pods that process messages coming into a queue:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;844&#34; height=&#34;344&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-5.jpg&#34; alt=&#34;Figure 5: Karpenter provisions node(s) in response to messages in queue with KEDA &#34; class=&#34;wp-image-119450&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-5.jpg 844w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-5-300x122.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-5-768x313.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-5-491x200.jpg 491w&#34; sizes=&#34;(max-width: 844px) 100vw, 844px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Karpenter provisions node(s) in response to messages in queue with KEDA &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Often users want to scale down the number of worker nodes during off hours. KEDA and Karpenter can support this use case:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;844&#34; height=&#34;350&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-6.jpg&#34; alt=&#34;Figure 6: Karpenter provisions node(s) in response to Cron schedule with KEDA &#34; class=&#34;wp-image-119451&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Picture-6.jpg 844w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-6-300x124.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-6-768x318.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-6-482x200.jpg 482w&#34; sizes=&#34;(max-width: 844px) 100vw, 844px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Karpenter provisions node(s) in response to Cron schedule with KEDA &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter can be combined with other CNCF projects such as Prometheus, Argo Workflows, Grafana to achieve diverse use cases. Check out &lt;a href=&#34;https://www.youtube.com/watch?v=rq57liGu0H4&#34;&gt;this previous talk&lt;/a&gt; from Kubecon EU 2024 how Argo Workflows can be combined with Karpenter to migrate from Cluster Autoscaler.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Adopting Karpenter&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;To get started with Karpenter, you can follow the official &lt;a href=&#34;https://karpenter.sh/docs/getting-started/getting-started-with-karpenter/&#34;&gt;Getting Started with Karpenter&lt;/a&gt; guide, which provides a step-by-step procedure for creating an EKS cluster using &lt;a href=&#34;https://eksctl.io/&#34;&gt;eksctl&lt;/a&gt; and adding Karpenter to it. Alternatively, if you prefer using Terraform, then you can use the &lt;a href=&#34;https://aws-ia.github.io/terraform-aws-eks-blueprints/getting-started/&#34;&gt;Amazon EKS Blueprints for Terraform&lt;/a&gt;, which includes a Karpenter module, thus streamlining the process of setting up Karpenter alongside your EKS cluster. Furthermore, there are guides available for setting up Karpenter with other Kubernetes distributions such as &lt;a href=&#34;https://kops.sigs.k8s.io/operations/karpenter/&#34;&gt;kOps&lt;/a&gt; on AWS. And if you want to migrate from Kubernetes Cluster Autoscaler to Karpenter for automatic node provisioning on an existing EKS cluster, then you can refer &lt;a href=&#34;https://karpenter.sh/docs/getting-started/migrating-from-cas/&#34;&gt;this guide&lt;/a&gt; for the detailed steps.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;What’s next&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;Karpenter has evolved far beyond being a tool for autoscaling, showcasing its versatility and deeper integration within the cloud-native ecosystem. Karpenter not only scales worker nodes but also drives cost efficiencies, seamlessly managing diverse workloads such as generative AI, facilitating data plane upgrades with precision, and more.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;Looking ahead, the possibilities for Karpenter are endless, especially as organizations explore groundbreaking use cases. We are only beginning to scratch the surface of what Karpenter can achieve when combined with other CNCF projects. The potential for Karpenter to contribute to next-generation infrastructure is immense, and we can’t wait to observe the inventive and powerful use cases users come up with, making their cloud operations more efficient, scalable, and intelligent.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To shape the future of Karpenter, let us know what features we should work on by upvoting and commenting &lt;a href=&#34;https://github.com/aws/karpenter-provider-aws&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you are attending KubeCon NA 2024, then you can meet with us at the AWS Booth F1, or attend our Karpenter workshop &lt;a href=&#34;https://sched.co/1i7n3&#34;&gt;Tutorial: Kubernetes Smart Scaling: Getting Started with Karpenter&lt;/a&gt;&amp;nbsp;to learn more.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Authors&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Rajdeep Saha, Principal Solutions Architect, AWS&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Raj is the Principal Specialist SA for Containers, and Serverless at AWS. Rajdeep has architected high profile AWS applications serving millions of users. He is a published instructor on Kubernetes, Serverless, DevOps, and System Design, has published blogs, and presented well-received talks at major events, such as AWS Re:Invent, Kubecon, AWS Summits.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;182&#34; height=&#34;176&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/10/headshot-1.png&#34; alt=&#34;Rajdeep&#34; class=&#34;wp-image-119452&#34; style=&#34;width:277px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Praseeda Sathaye, Principal SA, Containers &amp;amp; OSS&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Praseeda Sathaye is a Principal Specialist for App Modernization and Containers at Amazon Web Services, based in the Bay Area in California. She has been focused on helping customers accelerate their cloud-native adoption journey by modernizing their platform infrastructure and internal architecture using microservices strategies, containerization, platform engineering, GitOps, Kubernetes and service mesh. Praseeda is an ardent advocate for leveraging Generative AI (GenAI) on Amazon Elastic Kubernetes Service (EKS) to unlock the full potential of cutting-edge technologies, enabling the development of AI-powered applications.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;421&#34; height=&#34;348&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Headshot-2.jpg&#34; alt=&#34;Praseeda&#34; class=&#34;wp-image-119453&#34; style=&#34;width:282px;height:auto&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/10/Headshot-2.jpg 421w, https://www.cncf.io/wp-content/uploads/2024/10/Headshot-2-300x248.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/10/Headshot-2-242x200.jpg 242w&#34; sizes=&#34;(max-width: 421px) 100vw, 421px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子，作者：AWS 首席解决方案架构师 Rajdeep Saha 和 AWS 容器和 OSS 首席 SA 负责人 Praseeda Sathaye&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;简介&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;&lt;a href=&#34;https://karpenter.sh/&#34;&gt;Karpenter&lt;/a&gt; 是一个开源项目，提供节点生命周期管理，以优化 Kubernetes 集群上运行工作负载的效率和成本。  AWS 于 2021 年创建并开源了 Karpenter，以帮助客户自动化选择、配置和扩展集群中的基础设施，并为 Kubernetes 用户提供更大的灵活性，以充分利用不同云提供商的独特基础设施产品。 2023 年，&lt;a href=&#34;https://aws.amazon.com/blogs/containers/karpenter-graduates-to-beta/&#34;&gt;项目升级为测试版&lt;/a&gt;，AWS &lt;a href=&#34;https ://github.com/kubernetes/org/issues/4258&#34;&gt;通过 Kubernetes 自动扩展特别兴趣小组 (SIG) 向云原生计算基金会 (CNCF) 贡献了&lt;/a&gt;该项目的供应商中立核心。 2024 年，AWS &lt;a href=&#34;https://aws.amazon.com/blogs/containers/announcing-karpenter-1-0/&#34;&gt;发布了 Karpenter 版本 1.0.0&lt;/a&gt;，这标志着该领域的最后一个里程碑项目的成熟度。在此版本中，所有 Karpenter API 将在未来的 1.0 小版本中保持可用，并且不会以导致重大更改的方式进行修改。 &lt;a href=&#34;https://github.com/kubernetes-sigs/karpenter&#34;&gt;Karpenter 在 Apache 2.0 许可证下作为开源&lt;/a&gt;软件 (OSS) 提供。它将 Kubernetes 应用程序感知和工作负载装箱的通用逻辑与 API 请求的创建和运行分开，以启动或终止给定云提供商的计算资源。 通过开发与各自计算 API 交互的特定于云提供商的集成，Karpenter 使 AWS、Azure、GCP 等各个云提供商能够在各自的环境中利用其功能。 2023 年，Microsoft 发布了 &lt;a href=&#34;https://github.com/Azure/karpenter-provider-azure&#34;&gt;Karpenter Provider&lt;/a&gt;，用于在 Azure Kubernetes 服务 (AKS) 上运行 Karpenter。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如今，Karpenter 在 Kubernetes 社区中获得了广泛的欢迎，各种组织和企业都在利用其功能来帮助提高应用程序可用性、降低运营开销并提高成本效率。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Karpenter 的工作原理&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;Karpenter 在 Kubernetes 集群中的工作是制定应用程序和 Kubernetes 感知的计算容量决策。它被构建为 Kubernetes Operator，在 Kubernetes 集群中运行，并管理集群计算基础设施。卡彭特做出两种决策：配置新的计算，以及在不再需要时取消配置该计算。 Karpenter 的工作原理是监视 Kubernetes 调度程序标记为不可调度的 pod，并对其进行评估Pod 请求的调度约束（资源请求、节点选择器、关联性、容忍度和拓扑扩展约束）、配置满足 Pod 要求的节点，以及在不再需要节点时取消配置节点。 Karpenter 的工作负载整合功能可以通过重用集群内的现有实例或启动新的优化实例，主动识别未充分利用的工作负载并将其重新安排到更具成本效益的实例集上，从而最大限度地提高资源利用率并最大限度地降低运营成本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“844”高度=“406”src=“https://www.cncf.io/ wp-content/uploads/2024/10/Picture-1.jpg&#34; alt=&#34;图 1：Karpenter 提供节点以响应待处理的不可调度 pod&#34; class=&#34;wp-image-119446&#34; srcset=&#34;https:/ /www.cncf.io/wp-content/uploads/2024/10/Picture-1.jpg 844w，https://www.cncf.io/wp-content/uploads/2024/10/Picture-1-300x144。 jpg 300w，https://www.cncf.io/wp-content/uploads/2024/10/Picture-1-768x369.jpg 768w，https://www.cncf.io/wp-content/uploads/2024/ 10/Picture-1-416x200.jpg 416w，https://www.cncf.io/wp-content/uploads/2024/10/Picture-1-832x400.jpg 832w“尺寸=”（最大宽度：844px） 100vw, 844px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 1：Karpenter 配置节点以响应待处理的不可调度 Pod&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter 扩展是使用 Kubernetes 本机 YAML 控制的，特别是通过使用 &lt;a href=&#34;https://karpenter.sh/docs/concepts/nodepools/&#34;&gt;NodePool&lt;/a&gt; 和 &lt;a href=&#34;https ://karpenter.sh/docs/concepts/nodeclasses/&#34;&gt;NodeClass&lt;/a&gt; 自定义 Kubernetes 资源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;NodePools 对 Karpenter 在 Kubernetes 集群中配置的节点设置约束。每个 NodePool 定义了一些要求，例如实例类型、可用区、架构（例如 AMD64 或 ARM64）、容量类型（现货或按需）以及适用于 NodePool 中启动的所有节点的其他节点设置。它还允许对 NodePool 可以消耗的总资源（例如 CPU、内存和 GPU）设置限制。以下是NodePool配置示例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：karpenter.sh/v1beta1&lt;br&gt;种类：NodePool&lt;br&gt;元数据：&lt;br&gt;  名称：默认&lt;br&gt;规格：&lt;br &gt;  模板：&lt;br&gt;    规范：&lt;br&gt;      要求：&lt;br&gt;      - 键：karpenter.k8s.aws/instance-category&lt;br&gt;        运算符：In&lt;br&gt;        值：[&#34;c&#34;,&#34;m&#34;,&#34;r &#34;,&#34;t&#34;]&lt;br&gt;      - 键：“karpenter.k8s.aws/instance-family”&lt;br&gt;        运算符：In&lt;br&gt;         值：[&#34;m5&#34;,&#34;m5d&#34;,&#34;c5&#34;,&#34;c5d&#34; ,&#34;c4&#34;,&#34;r4&#34;]&lt;br&gt;      - 键：karpenter.k8s.aws/instance-size&lt;br&gt;       &amp;nbsp;运算符：NotIn&lt;br&gt;        值：[&#34;nano&#34;,&#34;micro&#34;,&#34;small&#34;,&#34;medium&#34;]&lt;br&gt;      - 键：topology.kubernetes.io/zone&lt;br&gt;        运算符：In&lt;br&gt;        值: [&#34;us-west-2a&#34;,&#34;us-west-2b&#34;]&lt;br&gt;      - 键：kubernetes.io/arch&lt;br&gt;        运算符：In&lt;br&gt;        值：[&#34;amd64&#34;,&#34;arm64&#34;]&lt; br&gt;  限制：&lt;br&gt;    CPU：100&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;请参阅 &lt;a href=&#34;https://karpenter.sh/docs/concepts/nodepools/&#34;&gt;Karpenter 文档&lt;/a&gt;，了解 NodePool 要求的完整字段列表。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下是 NodePool 的示例，其中包含添加到 Karpenter 配置的所有节点中的污点、用户定义的标签和注释。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：karpenter.sh/v1beta1&lt;br&gt;种类：NodePool&lt;br&gt;规格：&lt;br&gt;  模板：&lt;br&gt;    元数据：&lt;br&gt;注释：&lt;br&gt;        应用程序/名称：“app-a”&lt;br&gt;      标签：&lt;br&gt;        团队：team-a&lt;br&gt;    规格：&lt;br&gt;      污点：&lt;br&gt;      - key: example.com/special-taint &lt;br&gt;        值：“true”&lt;br&gt;        效果：NoSchedule&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: apps/v1&lt;br&gt;种类：部署&lt;br&gt;元数据：&lt;br&gt; 名称：&lt;br&gt;规范：myapp&lt;br&gt;   nodeSelector :&lt;br&gt;    团队：团队-a&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter 支持所有标准 Kubernetes 调度约束，例如节点选择器、节点关联性、污点/容忍和拓扑传播约束。这允许应用程序在 Karpenter 配置的节点上调度 pod 时使用这些约束。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter 中的 NodeClass 允许您为 Kubernetes 集群中的节点配置特定于云提供商的设置。每个 NodePool 引用一个 NodeClass，该 NodeClass 确定 Karpenter 提供的节点的具体配置。 例如，您可以指定 &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html&#34;&gt;Amazon 系统映像 (AMI)&lt;/a&gt; 系列等设置，子网和安全组选择器、&lt;a href=&#34;https://aws.amazon.com/iam/&#34;&gt;AWS Identity and Access Management (IAM)&lt;/a&gt; 角色/实例配置文件、节点标签以及各种 Kubelet 配置AWS &lt;a href=&#34;https://karpenter.sh/docs/concepts/nodeclasses/&#34;&gt;EC2NodeClass&lt;/a&gt; 以及 Azure &lt;a href=&#34;https://learn.microsoft.com/en-gb/ 类似azure/aks/node-autoprovision?tabs=azure-cli#node-image-updates&#34;&gt;AKSNodeClass&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;超越缩放&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;Karpenter 不仅仅是 Kubernetes 的高效集群自动缩放器。 Karpenter 优化计算成本，帮助升级和修补数据平面工作节点，并删除通过与其他 CNCF 工具配合使用，可以提供强大且具有探索性的用例。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;成本优化&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;在上一节中，我们了解了 Karpenter 如何根据 Pod 资源请求配置适当的工作虚拟机 (VM)。随着 Kubernetes 集群中的工作负载发生变化和扩展，可能有必要启动新实例以确保它们拥有所需的计算资源。随着时间的推移，由于某些工作负载缩小或从集群中删除，这些实例可能会变得利用率不足。 Karpenter 的工作负载整合会自动寻找机会将这些工作负载重新安排到一组更具成本效益的实例上，无论它们已经在集群中还是需要启动。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;imgloading=&#34;lazy&#34;decoding=&#34;async&#34;width=&#34;844&#34;height=&#34;410&#34;src=&#34;https://www.cncf.io/ wp-content/uploads/2024/10/Picture-2.jpg&#34; alt=&#34;图 2：不同使用程度的工作节点 &#34; class=&#34;wp-image-119447&#34; srcset=&#34;https://www.cncf. io/wp-content/uploads/2024/10/Picture-2.jpg 844w，https://www.cncf.io/wp-content/uploads/2024/10/Picture-2-300x146.jpg 300w，https： //www.cncf.io/wp-content/uploads/2024/10/Picture-2-768x373.jpg 768w，https://www.cncf.io/wp-content/uploads/2024/10/Picture-2 -412x200.jpg 412w，https://www.cncf.io/wp-content/uploads/2024/10/Picture-2-823x400.jpg 823w“尺寸=”（最大宽度：844px）100vw，844px“引用政策=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 2：不同使用程度的工作节点 &lt;br&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在上图中，第一个节点的使用率很高，但其他节点的使用率并未达到应有的水平。 使用 Karpenter，您可以在 NodePool YAML 中启用合并功能：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：karpenter.sh/v1&lt;br&gt;种类：NodePool&lt;br&gt;元数据：&lt;br&gt; 名称：默认&lt;br&gt;规格：&lt;br &gt;  中断：&lt;br&gt;    整合策略：WhenEmptyOrUnderutilized&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter 始终在评估并努力降低集群成本。 Karpenter 将工作负载整合到最少、成本最低的实例上，同时仍然尊重 Pod 的资源和调度限制。对于前面的场景，Karpenter 将 Pod 从最后两个节点移动到第二个节点，并终止生成的空节点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;imgloading=&#34;lazy&#34;decoding=&#34;async&#34;width=&#34;844&#34;height=&#34;356&#34;src=&#34;https://www.cncf .io/wp-content/uploads/2024/10/Picture-3.jpg&#34; alt=&#34;图 3：Karpenter 将 pod 打包到现有节点中并进行整合&#34; class=&#34;wp-image-119448&#34; style=&#34;width:901px;高度：自动” srcset =“https://www.cncf.io/wp-content/uploads/2024/10/Picture-3.jpg 844w，https://www.cncf.io/wp-content/uploads/ 2024/10/Picture-3-300x127.jpg 300w，https://www.cncf.io/wp-content/uploads/2024/10/Picture-3-768x324.jpg 768w，https://www.cncf。 io/wp-内容/上传/2024/10/Picture-3-474x200.jpg 474w&#34;sizes=&#34;(max-width: 844px) 100vw, 844px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 3: Karpenter 通过整合将 Pod 打包到现有节点中&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter 根据调度的最少 Pod 数量来确定要整合的节点的优先级。对于工作负载遇到需求突然激增或作业中断的用户来说，频繁创建和删除 Pod（Pod 流失）可能会成为问题。 Karpenter 提供了 consolidateAfter 设置来控制尝试合并节点的速度，以保持最佳容量并最大限度地减少节点流失。通过指定以小时、分钟或秒为单位的值，用户可以确定 Karpenter 启动整合操作以响应 Pod 添加或删除之前的延迟。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt; api版本：karpenter.sh/v1&#xA;种类：节点池&#xA;元数据：&#xA;  名称：默认&#xA;规格：&#xA;  中断：&#xA;    整合策略：当空或未充分利用时&#xA;    巩固后：1小时   &lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; 通过整合，Karpenter 还调整了工作节点的大小。例如，在以下情况下，如果 Karpenter 将 pod 从第三个节点合并到第二个节点 (m5.xlarge)，则仍然存在未充分利用的情况。相反，Karpenter 提供了一个较小的节点 (m5.large) 并整合了 Pod，从而降低了成本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“844”高度=“470”src=“https://www.cncf.io/wp-content” /uploads/2024/10/Picture-4.jpg&#34; alt=&#34;图 4：Karpenter 通过合并调整节点大小&#34; class=&#34;wp-image-119449&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/10/Picture-4.jpg 844w，https://www.cncf.io/wp-content/uploads/2024/10/图片-4-300x167.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-4-768x428.jpg 768w，https://www.cncf.io/wp-content/uploads/2024/10/Picture -4-359x200.jpg 359w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-4-718x400.jpg 718w”尺寸=“（最大宽度：844px）100vw，844px”referrerpolicy=“no-referrer” &gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 4：Karpenter 使用以下命令调整节点大小合并&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要了解有关整合的更多信息，请参阅&lt;a href=&#34;https://karpenter.sh/docs/concepts/disruption/&#34;&gt;此官方文档&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;工作节点的生命周期管理&lt;br&gt;&lt;br&gt;Karpenter 可以确保您的工作节点始终使用最新的节点映像/Amazon 系统映像 (AMI) 运行。 在 NodeClass YAML 中，您可以指定 AMI 系列和版本，如下所示：&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：karpenter.k8s.aws/v1&lt;br&gt;种类：EC2NodeClass&lt;br&gt;元数据：&lt;br&gt; 名称：默认&lt;br&gt;规格： &lt;br&gt;  amiSelectorTerms：&lt;br&gt;  - 别名：bottlerocket@latest&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;code&gt;amiSelectorTerms&lt;/code&gt; 是 NodeClass 的必要字段，并且有一个新术语 &lt;code&gt;alias&lt;/code&gt;1.0 版中引入，由 AMI 系列和版本 (family@version) 组成。如果 NodeClass 中存在别名，则 Karpenter 会选择云提供商为该系列提供的 AMI。借助这一新功能，用户还可以固定到 AMI 的特定版本。对于 AWS，可以配置以下 &lt;a href=&#34;https://aws.amazon.com/eks/&#34;&gt;Amazon Elastic Kubernetes Service (Amazon EKS)&lt;/a&gt; 优化的 AMI 系列：al2、al2023、bottlerocket、windows2019 ，和windows2022&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此 NodeClass 配置的所有节点都将具有最新的 &lt;a href=&#34;https://aws.amazon.com/bottlerocket/&#34;&gt;bottlerocket&lt;/a&gt; AMI。由于此别名使用 &lt;code&gt;@latest&lt;/code&gt; 版本，因此当云提供商为运行的 Kubernetes 版本集群发布新的优化 AMI 时，Karpenter 会自动更新工作节点 AMI，同时遵守 Kubernetes 调度约束。工作节点以滚动部署方式升级。如果集群升级到较新的版本，那么 Karpenter 会自动使用该新版本的最新 AMI 升级工作节点，无需手动干预。这消除了管理开销，让您始终使用最新、最安全的 AMI 运行。 这在预生产环境中效果很好，可以自动升级到最新版本进行测试，但建议在生产环境中对 AMI 版本进行更多控制。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;或者，您也可以将工作线程节点固定到特定版本的 AMI，如下所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：karpenter.k8s.aws/v1&lt;br&gt;种类：EC2NodeClass&lt;br&gt;元数据：&lt;br&gt; 名称：默认&lt;br&gt;规格： &lt;br&gt;  amiSelectorTerms：&lt;br&gt;  - 别名：bottlerocket@v1.20.3&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在这种情况下，如果云提供商发布新的 Bottlerocket AMI，Karpenter 不会漂移工作节点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter 还支持自定义 AMI。您可以使用 amiSelectorTerms 中的现有标签、名称或 ID 字段来选择 AMI。在以下情况下，选择 ID 为 ami-123 的 AMI 来配置节点。 amiFamily Bottlerocket 将预先生成的用户数据注入到配置的节点中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：karpenter.k8s.aws/v1&lt;br&gt;种类：EC2NodeClass&lt;br&gt;元数据：&lt;br&gt; 名称：默认&lt;br&gt;规格： &lt;br&gt;...&lt;br&gt;  amiFamily：Bottlerocket&lt;br&gt;  amiSelectorTerms：&lt;br&gt;    - id：ami-123&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要升级工作线程节点，请更改 &lt;code&gt;amiSelectorTerms&lt;/code&gt; 以选择不同的 AMI，然后节点会漂移并升级到分配的 AMI。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Karpenter 与其他 CNCF 项目合作&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter 可以与其他 CNCF 项目结合使用，为常见用例提供强大的解决方案。一个突出的例子是使用 Kubernetes 事件驱动自动扩展 (KEDA) 和 Karpenter 来实现事件驱动的工作负载。借助 KEDA，您可以推动任何业务的扩展Kubernetes 中的容器基于需要处理的事件数量。一种流行的实现是扩展工作节点以容纳处理进入队列的消息的 pod：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“844”高度=“344”src=“https://www.cncf.io/ wp-content/uploads/2024/10/Picture-5.jpg&#34; alt=&#34;图 5：Karpenter 使用 KEDA 提供节点来响应队列中的消息&#34; class=&#34;wp-image-119450&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/10/Picture-5.jpg 844w，https://www.cncf.io/wp-content/uploads/2024/10/图片-5-300x122.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-5-768x313.jpg 768w，https://www.cncf.io/wp-content/uploads/2024/10/Picture -5-491x200.jpg 491w“尺寸=”（最大宽度：844px）100vw，844px“ referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 5：Karpenter 使用 KEDA 提供节点以响应队列中的消息&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用户通常希望在下班时间减少工作节点的数量。 KEDA 和 Karpenter 可以支持此用例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“844”高度=“350”src=“https://www.cncf.io/ wp-content/uploads/2024/10/Picture-6.jpg&#34; alt=&#34;图 6：Karpenter 使用 KEDA 响应 Cron 计划提供节点&#34; class=&#34;wp-image-119451&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/10/Picture-6.jpg 844w，https://www.cncf.io/wp-content/uploads/2024/10/图片-6-300x124.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/10/Picture-6-768x318.jpg 768w，https://www.cncf.io/wp-content/uploads/2024/10/Picture -6-482x200.jpg 482w“尺寸=”（最大宽度：844px）100vw，844px“ referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 6：Karpenter 使用 KEDA 响应 Cron 计划来配置节点 &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Karpenter 可以与 Prometheus、Argo Workflows、Grafana 等其他 CNCF 项目相结合，以实现多样化的用例。查看 Kubecon EU 2024 的&lt;a href=&#34;https://www.youtube.com/watch?v=rq57liGu0H4&#34;&gt;之前的演讲&lt;/a&gt;如何将 Argo 工作流与 Karpenter 结合起来以从 Cluster Autoscaler 迁移。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;采用卡彭特&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;要开始使用 Karpenter，您可以按照官方 &lt;a href=&#34;https://karpenter.sh/docs/getting-started/getting-started-with-karpenter/&#34;&gt;Karpenter 入门&lt;/a&gt; 指南，它提供了使用 &lt;a href=&#34;https://eksctl.io/&#34;&gt;eksctl&lt;/a&gt; 创建 EKS 集群并向其中添加 Karpenter 的分步过程。或者，如果您更喜欢使用 Terraform，则可以使用 &lt;a href=&#34;https://aws-ia.github.io/terraform-aws-eks-blueprints/getting-started/&#34;&gt;适用于 Terraform 的 Amazon EKS 蓝图&lt; /a&gt;，其中包含 Karpenter 模块，从而简化了在 EKS 集群中设置 Karpenter 的过程。此外，还有可用的指南r 将 Karpenter 与其他 Kubernetes 发行版一起设置，例如 AWS 上的 &lt;a href=&#34;https://kops.sigs.k8s.io/operations/karpenter/&#34;&gt;kOps&lt;/a&gt;。如果您想从 Kubernetes Cluster Autoscaler 迁移到 Karpenter，以便在现有 EKS 集群上自动配置节点，那么您可以参考 &lt;a href=&#34;https://karpenter.sh/docs/getting-started/migration-from-cas /&#34;&gt;本指南&lt;/a&gt;了解详细步骤。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;下一步是什么&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;Karpenter 的发展已经远远超出了自动扩展工具的范畴，展示了其多功能性以及在云原生生态系统中更深入的集成。 Karpenter 不仅可以扩展工作节点，还可以提高成本效率，无缝管理生成式 AI 等各种工作负载，促进精确的数据平面升级等等。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;展望未来，Karpenter 的可能性是无限的，特别是当组织探索突破性的用例时。我们才刚刚开始了解 Karpenter 与其他 CNCF 项目相结合所能实现的目标。 Karpenter 为下一代基础设施做出贡献的潜力是巨大的，我们迫不及待地想观察用户提出的创造性和强大的用例，使他们的云运营更加高效、可扩展和智能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了塑造 Karpenter 的未来，请在&lt;a href=&#34;https://github.com/aws/karpenter-provider-aws&#34;&gt;此处&lt;/a&gt;点赞和评论，让我们了解应该开发哪些功能.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您要参加 KubeCon NA 2024，那么您可以在 AWS F1 展位与我们会面，或参加我们的 Karpenter 研讨会&lt;a href=&#34;https://sched.co/1i7n3&#34;&gt;教程：Kubernetes 智能扩展： Karpenter 入门&lt;/a&gt;了解更多信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;作者&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Rajdeep Saha，AWS 首席解决方案架构师&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Raj 是 AWS 容器和无服务器首席专家 SA。 Rajdeep 构建了备受瞩目的 AWS 应用程序，为数百万用户提供服务。他是 Kubernetes、无服务器、DevOps 和系统设计方面的讲师，发表过博客，并在 AWS Re:Invent、Kubecon、AWS 峰会等重大活动中发表了广受好评的演讲。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;imgloading=&#34;lazy&#34;decoding=&#34;async&#34;width=&#34;182&#34;height=&#34;176&#34;src=&#34;https://www.cncf .io/wp-content/uploads/2024/10/headshot-1.png&#34; alt=&#34;Rajdeep&#34; class=&#34;wp-image-119452&#34; style=&#34;width:277px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Praseeda Sathaye，容器和 OSS 负责人 SA&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Praseeda Sathaye 是 Amazon Web Services 应用现代化和容器方面的首席专家，总部位于加利福尼亚州湾区。她一直专注于通过使用微服务策略实现平台基础设施和内部架构现代化来帮助客户加快云原生采用之旅，续ainerization、平台工程、GitOps、Kubernetes 和服务网格。 Praseeda 热心倡导利用 Amazon Elastic Kubernetes Service (EKS) 上的生成式 AI (GenAI) 来释放尖端技术的全部潜力，从而实现 AI 支持的应用程序的开发。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;imgloading=&#34;lazy&#34;decoding=&#34;async&#34;width=&#34;421&#34;height=&#34;348&#34;src=&#34;https://www.cncf .io/wp-content/uploads/2024/10/Headshot-2.jpg&#34; alt=&#34;Praseeda&#34; class=&#34;wp-image-119453&#34;样式 =“宽度：282px;高度：自动” srcset =“https://www.cncf.io/wp-content/uploads/2024/10/Headshot-2.jpg 421w，https://www.cncf.io /wp-content/uploads/2024/10/Headshot-2-300x248.jpg 300w， https://www.cncf.io/wp-content/uploads/2024/10/Headshot-2-242x200.jpg 242w”尺寸=“（最大宽度：421px）100vw，421px”referrerpolicy=“no-referrer” &gt;&lt;/图&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 05 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kubernetes RBAC: improve the K8s security posture】Kubernetes RBAC：改善 K8s 安全状况</title>
      <link>https://www.cncf.io/blog/2024/11/08/kubernetes-rbac-improve-the-k8s-security-posture/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on the &lt;a href=&#34;https://devtron.ai/blog/kubernetes-rbac-improve-the-k8s-security-posture/&#34;&gt;Devtron blog &lt;/a&gt;by &lt;a href=&#34;https://devtron.ai/blog/author/siddhant-khisty/&#34;&gt;Siddhant Khisty&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;em&gt;TL;DR: Secure your Kubernetes cluster with Role-Based Access Control (RBAC) to define granular permissions for users and applications. This guide explains how to implement RBAC in Kubernetes and introduces Devtron, a dashboard simplifying RBAC management.&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While working with Kubernetes, the cluster has many tiny internal components that all work together to deploy and manage your business applications. Kubernetes itself is a distributed system, consisting of tons of different components that work together to provide the experience that we are all familiar with. To learn about all those different Kubernetes components, please check out our blog on&amp;nbsp;&lt;a href=&#34;https://devtron.ai/blog/kubernetes-architecture-the-ultimate-guide/&#34;&gt;&lt;u&gt;Kubernetes Architecture&lt;/u&gt;&lt;/a&gt;&amp;nbsp;and the different&amp;nbsp;&lt;a href=&#34;https://devtron.ai/blog/what-are-kubernetes-workloads/&#34;&gt;&lt;u&gt;Kubernetes Workloads&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In a traditional monolithic application, your main concerns would be ensuring that your application code is written securely and that the environment where it is deployed is secure and has the necessary firewalls and security permissions set up. When talking about security in Kubernetes, the story gets a lot more distributed. Since many different components work together to create and operate a cluster, you need to ensure that each individual component is secure. You have to set up proper mTLS between all the different Kubernetes components.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When you deploy your business applications, will have to once again ensure that it meets your security standards. You also need to ensure that only authorized users have access to the Kubernetes clusters and that they have the correct level of access to the cluster. Luckily, Kubernetes has a way to authenticate users to the cluster and restrict their level of access to the cluster as required.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Within the blog, you will be learning how you can authenticate users to your Kubernetes clusters, and how to restrict their access to the cluster using Role Based Access Control (RBAC).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;what-is-role-based-access-control-rbac&#34;&gt;What is Role Based Access Control (RBAC)?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Whenever a user has access to any systems, in this case, Kubernetes, you do not want every single user to have super-admin levels of access to the cluster. This can pose a security risk. Imagine handing over super-admin access to the production cluster to someone who does not know all the ins and outs of a Kubernetes cluster. There is a possibility that they may unknowingly perform some action that takes the entire cluster offline.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To avoid the above scenario, you want only one or two super-admin users that have unrestricted access to the Kubernetes cluster. Every other user like the developers, should have limited access to the cluster for only the resources they require. For example, if the development team is working on developing a new microservice called backend-beta, they should have access to the specific namespace and resources that are related to the backend-beta application to avoid accidentally messing up any other workloads running in the cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;An additional benefit of using RBAC is to limit the impact of accidental credential leaks. In the unlikely event that a developer’s credentials are accidentally leaked, the attacker would have very limited access to the information within the cluster. Another step that can be taken to minimize the impact is to implement time-based access. After a certain amount of time, the access would expire and the token which was given to the developer would be rendered useless.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Implementing Role Based Access Control (RBAC) in your Kubernetes systems has multiple benefits such as:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Better security:&lt;/strong&gt;&amp;nbsp;Limiting user access to the cluster, restricting access to only the required resources&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Minimize the impact of leaked credentials:&lt;/strong&gt;&amp;nbsp;Minimizing the impact of leaked cluster credentials as the malicious party would have very limited access to the cluster&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Compliance:&lt;/strong&gt;&amp;nbsp;Enables organizations to follow set security compliance standards which improves a cluster’s overall security posture&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Granular Control:&lt;/strong&gt;&amp;nbsp;Provides the ability to granularly control a user’s access to the cluster and provide only specific permissions that they require&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;levels-of-rbac-permissions-in-kubernetes&#34;&gt;Levels of RBAC Permissions in Kubernetes&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Whenever you want to allow a user to get access to the Kubernetes cluster, you do not want to give them super admin permissions. Doing so may lead to unintended deletions of resources or a change of configurations. You want to ensure that the user has access to only a few specific resources in the cluster. If you have a developer user, they should only be allowed to access the applications that they are developing in their particular namespace.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On the other hand, if you had a node admin or a storage admin, they would require access to every single node or every single storage resource across all namespaces in the cluster. What if you have deployed an application to the Kubernetes cluster that requires some permissions to view a particular cluster resource? The application too would need to be assigned the correct level of permissions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes by default has several objects that help satisfy all of the above use cases. These objects include&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Roles:&lt;/strong&gt;&amp;nbsp;A role defines a set of permissions that are allowed. It is a namespace-scoped resource. For example, creating and deleting a pod&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;RoleBindings:&lt;/strong&gt;&amp;nbsp;A RoleBinding is used to assign the permissions defined in the role to a particular user or application&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;ClusterRole:&amp;nbsp;&lt;/strong&gt;Similar to a Role, with the key difference that it is a cluster-wide resource&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;ClusterRoleBinging:&amp;nbsp;&lt;/strong&gt;Same as RoleBinding, with the difference that the permission is applied to every namespace in the cluster&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;ServiceAccounts:&lt;/strong&gt;&amp;nbsp;When an application needs to be given some permissions, it uses a service account. The actual set of permissions is assigned to the service account object.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We will be looking at all the above Kubernetes objects in detail later in this article. First, let us look at how you can add a user to the cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;adding-a-user-to-the-cluster&#34;&gt;Adding a user to the Cluster&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Before you can go ahead and assign permissions to the cluster, you will first need to authenticate(authN) the user to the Kubernetes cluster. To add the user to the cluster, you must create a Certificate Signing Request (CSR). The cluster signing key will use the user’s public key to authenticate with the cluster.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s say that we want to onboard a new developer named John to the cluster. He has provided us with his public key. Let us create a Certificate Signing Request (CSR) to add John to the cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To create a Certificate Signing Request, you will need to paste John’s public key into the manifest file below under&amp;nbsp;&lt;code&gt;spec.request&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: certificates.k8s.io/v1&#xA;kind: CertificateSigningRequest&#xA;metadata:&#xA; name: john&#xA;spec:&#xA; request: &amp;lt;request&amp;gt;&#xA; signerName: kubernetes.io/kube-apiserver-client&#xA; expirationSeconds: 86400  # one day&#xA; usages:&#xA; - client auth&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once you’ve created the above manifest file, go ahead and apply it using&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl apply -f csr.yaml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Upon applying the manifest, a CSR object will be created. You can check all the CSR’s made to the cluster by running&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl get csr&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You should be able to see that John’s CSR has been created, and is pending approval. Since we already know that John is our developer user, we want to accept this request. To do so, you can run the below command&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl csr approve john&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, the user John is authenticated to the cluster and has access to the cluster. The authorization permissions (authZ) still need to be set up.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you want to add users to the cluster with ease, without creating a CSR, you can use an SSO to easily authenticate your users via their GitHub, Google, or Microsoft accounts.&amp;nbsp;&lt;a href=&#34;https://devtron.ai/blog/sso-and-rbac-a-secure-access-strategy-for-your-kubernetes/&#34;&gt;&lt;u&gt;Please check out this blog to learn more about SSO&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;setting-user-permissions&#34;&gt;Setting User Permissions&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now that you have added a user to the cluster, it’s time to set up the appropriate level of permissions for the user. As we discussed before, you can set permissions at two levels&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Namespace Scopped permissions using Role &amp;amp; RoleBinding&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Cluster Scopped Permissions using ClusterRole &amp;amp; ClusterRoleBinding.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We will take a look at how you can create both types of permissions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;role-rolebinding&#34;&gt;Role &amp;amp; RoleBinding&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After a user has been added to the cluster, we can now go ahead and assign certain permissions to them. To do this, Kubernetes provides two objects called a&amp;nbsp;&lt;code&gt;Role&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;RoleBinding&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As discussed earlier, the role defines the set of permissions, and the&amp;nbsp;&lt;code&gt;role-binding&lt;/code&gt;&amp;nbsp;assigns the role to a particular user.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s say that you have a new developer called John who has joined your organization to work on a sensitive project called Project Gamma. In your existing setup, you have a separate namespace called&amp;nbsp;&lt;code&gt;project-gamma&lt;/code&gt;&amp;nbsp;for all the resources of the project. You want to allow John to create deployments and pods only in the&amp;nbsp;&lt;code&gt;project-gamma&lt;/code&gt;&amp;nbsp;namespace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To enforce these rules, you have to create the proper role and role-binding resources. Let’s take a look at how you can create the two objects and assign the correct permissions to John.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Step 1:&amp;nbsp;&lt;/strong&gt;Create a role called&amp;nbsp;&lt;code&gt;gamma-developer-role&lt;/code&gt;&amp;nbsp;and assign it the proper set of permissions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This can be done imperatively using&amp;nbsp;&lt;code&gt;kubectl&lt;/code&gt;&amp;nbsp;or declaratively by using a YAML file. We will be looking at creating the file declaratively.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The YAML file below can be used to create the role with the required permissions.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: rbac.authorization.k8s.io/v1&#xA;kind: Role&#xA;metadata:&#xA;  namespace: project-gamma&#xA;  name: gamma-developer-role&#xA;rules:&#xA;- apiGroups: [&#34;&#34;]&#xA;  resources: [&#34;pods&#34;]&#xA;  verbs: [&#34;create&#34;, &#34;get&#34;, &#34;list&#34;, &#34;delete&#34;]&#xA;- apiGroups: [&#34;&#34;]&#xA;  resources: [&#34;deployment&#34;]&#xA;  verbs: [&#34;create&#34;, &#34;get&#34;, &#34;list&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s understand some of the important configuration fields that are described in the above manifest&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt;&amp;nbsp;Name of the role&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Namespace:&lt;/strong&gt;&amp;nbsp;The will be created in this namespace and the permissions and will be limited to it.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Rules:&lt;/strong&gt;&amp;nbsp;These are the actual permissions that are defined. We can define multiple permissions as needed&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;API groups:&lt;/strong&gt;&amp;nbsp;The API group used for targeting the specific resource. This is useful when there are multiple custom resources&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&amp;nbsp;The particular type of resource that you wish to assign the permissions on.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Verbs:&lt;/strong&gt;&amp;nbsp;The particular permission that you wish to allow for the defined resources. You can select between the following verbs: get, create, delete, list, patch, update, watch.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Step 2:&amp;nbsp;&lt;/strong&gt;Create a RoleBinding called&amp;nbsp;&lt;code&gt;gamma-developer-binding&lt;/code&gt;&amp;nbsp;and configure it to use the correct role and assign the correct user&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once the role has been created, it also needs to be assigned to a user. Similar to the role, the RoleBinding can also be created imperatively with the&amp;nbsp;&lt;code&gt;kubectl create rolebinding&lt;/code&gt;&amp;nbsp;command. We will look at how to make it declaratively using a YAML file.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The below YAML file will create the RoleBinding and assign the permissions to John.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: rbac.authorization.k8s.io/v1&#xA;kind: RoleBinding&#xA;metadata:&#xA;  name: gamma-developer-binding&#xA;  namespace: project-gamma&#xA;subjects:&#xA;- kind: User&#xA;  name: John&#xA;roleRef:&#xA;  kind: Role &#xA;  name: gamma-developer-role&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the above manifest, some of the important configuration fields are as follows:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt;&amp;nbsp;Name of the RoleBinding&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Namespace:&amp;nbsp;&lt;/strong&gt;The NameSpace where the RoleBinding will be created. The permissions will be limited to that namespace.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Subjects:&amp;nbsp;&lt;/strong&gt;The subjects to which the roles should be applied&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;roleRef:&lt;/strong&gt;&amp;nbsp;The permissions of the specific role that should be applied to the Subject.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Note:- The Role and RoleBinding are Namespace-scoped resources. They will only work in the namespace where they have been created.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Step 3:&amp;nbsp;&lt;/strong&gt;Validate the permissions&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After creating the role and assigning it to the correct user using RoleBinding, it’s time to make sure that the permission works correctly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can use the&amp;nbsp;&lt;code&gt;kubectl auth can-i&lt;/code&gt;&amp;nbsp;command to ensure that the permissions work correctly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The command will show you if the action that you are trying to run will be successful or not. For example, John should be able to get the pods in the&amp;nbsp;&lt;code&gt;project-gamma&lt;/code&gt;&amp;nbsp;namespace. But he should not be able to get the pods in the default namespace. We can verify this by running the below two commands.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl auth can-i get pods -nproject-gamma --as=John&#xA;&#xA;kubectl auth can-i get pods --as=John&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://devtron.ai/blog/content/images/2024/10/1.-k-auth-1.png&#34; alt=&#34;kubectl auth&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;[Fig.1] kubectl auth&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As you can see from the above image, John can get the pods in the project-gamma namespace, but cannot get the pods in the default namespace. This is the exact permissions that we wanted to create.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;clusterrole-clusterrolebinding&#34;&gt;ClusterRole &amp;amp; ClusterRoleBinding&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Similar to the Roles and RoleBindings, ClusterRoles, and ClusterRoleBindings can allow certain permissions for a user. The key difference is that the ClusterRole and ClusterRoleBinding will be applied across the entire cluster i.e it will work in every namespace in the cluster. The Roles and RoleBindings on the other hand are limited to the particular namespace they exist in.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s look at how to create and assign a ClusterRole and ClusterRoleBinding with an example. Imagine that you have an application called DeploymentManager which is responsible for managing all the Deployments in the cluster. For this application to perform its functions, it needs to have admin permissions for all the Deployments in the cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s look at the step-by-step process for how we can assign the right level of permissions for this application&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&amp;nbsp;Create a Service Account&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When we want to assign permissions to a user, we can directly assign it to them. However, when permission has to be applied to an application, it cannot be directly applied to the pod or deployment of the application. Kubernetes has a resource called a Service Account which is a non-human account with a distinct identity. When an application needs certain permissions within the cluster, it is assigned to them via a service account.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let us create a ServiceAccount called&amp;nbsp;&lt;code&gt;deploy-manager-sa&lt;/code&gt;. You can create the service account imperatively using the below command.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl create serviceaccount deploy-manager-sa&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You also want to ensure that the application is using this new ServiceAccount. Edit the application’s manifest and update the&amp;nbsp;&lt;code&gt;serviceAccount&lt;/code&gt;&amp;nbsp;field so that it uses the new service account that has been created.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Step 2:&amp;nbsp;&lt;/strong&gt;Creating the ClusterRole&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As the application is responsible for managing every single deployment in the cluster, it will require permission to perform all actions on the deployments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Similar to what we discussed with Roles, ClusterRoles can be created imperatively as well as declaratively. We saw how to create Roles in a declarative manner. Let us create the ClusterRole named&amp;nbsp;&lt;code&gt;deploy-manager-cr&lt;/code&gt;&amp;nbsp;with the imperative method. You can use the below command to create the ClusterRole with the correct permissions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl create clusterrole deploy-manager-cr --verb=’*’ --resource=deployments&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The above command will allow the Service Account to perform any actions on only the deployment objects. It will not be able to perform any action on any other resource type.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you wish to run the same command using the declarative commands, you can use the following YAML manifest:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: rbac.authorization.k8s.io/v1&#xA;kind: ClusterRole&#xA;metadata:&#xA;  name: deploy-manager-cr&#xA;rules:&#xA;- apiGroups: [&#34;&#34;]&#xA;  resources: [&#34;deployment&#34;]&#xA;  verbs: [&#34;*&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Step 3:&amp;nbsp;&lt;/strong&gt;Create the ClusterRoleBinding&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Finally, we want to create a ClusterRoleBinding to assign the ClusterRole to the Service account that we had created. Let us call this ClusterRoleBinding as&amp;nbsp;&lt;code&gt;deploy-manager-crb&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We will create the ClusterRoleBinding imperatively with&amp;nbsp;&lt;code&gt;kubectl&lt;/code&gt;&amp;nbsp;commands. You can use the below command to create the ClusterRoleBinding such that it will use the permissions defined in the&amp;nbsp;&lt;code&gt;deploy-manager-cr&lt;/code&gt;&amp;nbsp;and assign it to the&amp;nbsp;&lt;code&gt;deploy-manager-sa&lt;/code&gt;&amp;nbsp;service account&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl create clusterrolebinding deploy-manager-crb --clusterrole=deploy-manager-cr --serviceaccount=default:deploy-manager-sa&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The above command ClusterRoeBinding can also be created declaratively. You can use the following YAML manifest to create the same role using the declarative method.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: rbac.authorization.k8s.io/v1&#xA;kind: ClusterRoleBinding&#xA;metadata:&#xA;  name: deploy-manager-crb&#xA;subjects:&#xA;- kind: ServiceAccount&#xA;  name: default:deploy-manager-sa&#xA;roleRef:&#xA;  kind: ClusterRole &#xA;  name: deploy-manager-cr&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt;&amp;nbsp;Validate the permissions&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Similar to how we validated the permissions for the Roles and ClusterRoles, we also want to validate the permissions for the ClusterRole and ClusterRoleBinding using the&amp;nbsp;&lt;code&gt;kubectl auth can-i&lt;/code&gt;&amp;nbsp;commands.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s see if the ServiceAccount can get the deployments, as well as if it can get individual pods or not. You can use the below commands to try it out&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl auth can-i get deployments --as=system:serviceaccount:default:deploy-manager-sa&#xA;&#xA;kubectl auth can-i get pods --as=system:serviceaccount:default:deploy-manager-sa&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://devtron.ai/blog/content/images/2024/10/2.-k-auth-cluster-1.png&#34; alt=&#34;kubectl auth clusterrole&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;[Fig.2] kubectl auth clusterrole&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As you can see, the service account can perform actions on deployments, but cannot perform actions on any other resource such as pods.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;user-accounts-service-accounts&#34;&gt;User Accounts &amp;amp; Service Accounts&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While we were creating the roles and role bindings in the above examples, you may have noticed that when we were assigning the permissions to a user, we directly assigned the permission to the user. However, when we wanted to give some permissions to an application, we had to do it through a service account.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;User Accounts:&amp;nbsp;&lt;/strong&gt;&amp;nbsp;A user account is an account used by a human. They are intended to be a global resource i.e. they must have a unique name across all namespaces in the cluster. A user account belongs to a cluster operator such as a DevOps engineer or Developer.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Service Accounts:&amp;nbsp;&lt;/strong&gt;A service account is an account used by a non-human i.e it is used by an application. It is a namespace-scoped resource i.e. multiple service accounts can have the same name across different namespaces. A service account is used to assign a set of permissions to applications running inside the pod.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this blog, you’ve seen the entire process of adding a user to the Kubernetes cluster and adding fine-grained permissions for them using Roles, RoleBindings, ClusterRoles, and ClusterRoleBindings. Kubernetes provides a robust and flexible way to define the permissions for different users and applications. However, certain limitations and challenges do arise when creating the permissions with just the Kubernetes resources.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Some of the challenges with implementing RBAC in Kubernetes are as follows:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Lack of Visibility:&amp;nbsp;&lt;/strong&gt;To assign permissions to any user, you need to create multiple resources such as Roles and RoleBindings. It becomes very difficult to understand which role is mapped to which RoleBinding which makes it difficult to properly manage the permissions.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Manual role assignment:&lt;/strong&gt;&amp;nbsp;Whenever a new user is onboarded on the Kubernetes cluster, the roles have to be manually created and assigned to the user. You cannot assign the same set of permissions to a group of users such as the developer users.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;No Time-based access:&amp;nbsp;&lt;/strong&gt;If you wish to allow access to the cluster for only a limited time, you need to manually assign the permissions, and remove them after a set period. The access does not automatically expire, and the cluster administrator needs to manually remove the permissions.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Difficult to manage at scale:&lt;/strong&gt;&amp;nbsp;As organizations grow, the number of users that have access to the cluster increases. This in turn increases the number of Roles, RoleBindings, ClusterRoles, and ClusterRoleBindings. It becomes very difficult to manage these resources at scale as there are hundreds of them.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Difficulty in onboarding users:&amp;nbsp;&lt;/strong&gt;When you want to onboard a new user to the cluster, you need to obtain their public keys and create a Certificate Signing Request (CSR). This CSR then needs to be approved by the cluster admin, which becomes a lengthy process. Moreover, the cluster admin needs to ensure that the correct CSR is being approved and no malicious actors get access to the cluster.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Devtron is a robust Kubernetes dashboard that makes it much easier to add users to your Kubernetes cluster by using an SSO service. It also helps you fine-grain the level of access you wish to assign to all your users. Devtron’s permissions groups can help you assign the same permissions to different users, such as all Developer users or Operations users. It also provides the option to set a time-based access to the cluster which ensures that the user has access only for a limited period.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Additional reading on how Devtron helps with Kubernetes RBAC:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://devtron.ai/blog/sso-and-rbac-a-secure-access-strategy-for-your-kubernetes/&#34;&gt;&lt;u&gt;Using SSO for RBAC in Kubernetes&lt;/u&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://devtron.ai/blog/control-and-secure-kubectl-access/&#34;&gt;&lt;u&gt;Securing access to a cluster&lt;/u&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://devtron.ai/blog/kubernetes-access-management-made-easy/&#34;&gt;&lt;u&gt;Kubernetes Access Management made easy with Devtron&lt;/u&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes Security has multiple aspects to it. One of the most important aspects of Kubernetes Security is properly setting up role based access control. Kubernetes RBAC is useful to limit the actions that a user can perform in the Kubernetes cluster. A user is first added to the cluster by creating a CSR request which authenticates(authN) the user with the Kubernetes cluster.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once the authentication is done, the user needs to be assigned the proper authorization(authZ) permissions to ensure that they have access only to the resources they require. To set up the authorization permissions in the cluster, Kubernetes provides users with Roles, RoleBindings, ClusterRoles, and ClusterRoleBindings which are useful for setting authorization permissions either at the namespace level or the cluster level.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Devtron is a Kubernetes Dashboard that takes Kubernetes Security one step further by making it easier to create and assign permissions to different users. It also provides permission groups to assign the same set of permissions to a group of users such as the developers. It also helps provide time-based access to particular resources in the cluster and revokes access once the set period has expired.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you have any queries, don’t hesitate to&amp;nbsp;&lt;a href=&#34;https://rebrand.ly/devtron-demo?ref=blog&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;connect with us&lt;/a&gt;. Join the lively discussions and shared knowledge in our actively growing&amp;nbsp;&lt;a href=&#34;https://rebrand.ly/Devtron-Discord?ref=devtron.ai&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;Discord Community&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初由 &lt;a href=&#34;https://devtron.ai/blog/kubernetes-rbac-improve-the-k8s-security-posture/&#34;&gt;Devtron 博客&lt;/a&gt;发布&lt;a href=&#34;https://devtron.ai/blog/author/siddhant-khisty/&#34;&gt;Siddhant Khisty&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;em&gt;TL;DR：使用基于角色的访问控制 (RBAC) 保护您的 Kubernetes 集群，为用户和应用程序定义精细的权限。本指南介绍了如何在 Kubernetes 中实现 RBAC，并介绍了 Devtron，这是一个简化 RBAC 管理的仪表板。&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在使用 Kubernetes 时，集群具有许多微小的内部组件，它们一起工作来部署和管理您的业务应用程序。 Kubernetes 本身是一个分布式系统，由大量不同的组件组成，这些组件协同工作以提供我们都熟悉的体验。要了解所有这些不同的 Kubernetes 组件，请查看我们的博客：&lt;a href=&#34;https://devtron.ai/blog/kubernetes-architecture-the-ultimate-guide/&#34;&gt;&lt;u&gt;Kubernetes 架构&lt;/u &gt;&lt;/a&gt; 以及不同的&lt;a href=&#34;https://devtron.ai/blog/what-are-kubernetes-workloads/&#34;&gt;&lt;u&gt;Kubernetes 工作负载&lt;/u&gt;&lt;/a&gt;。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在传统的整体应用程序中，您主要关心的是确保应用程序代码的编写安全、部署环境的安全以及设置必要的防火墙和安全权限。当谈论 Kubernetes 中的安全性时，故事变得更加分散。由于许多不同的组件一起工作来创建和操作集群，因此您需要确保每个单独组件的安全。您必须在所有不同的 Kubernetes 组件之间设置正确的 mTLS。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当您部署业务应用程序时，将不得不再次确保它满足您的安全标准。您还需要确保只有授权用户才能访问 Kubernetes 集群，并且他们对集群具有正确的访问级别。幸运的是，Kubernetes 有一种方法可以对集群的用户进行身份验证，并根据需要限制他们对集群的访问级别。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在博客中，您将了解如何对 Kubernetes 集群的用户进行身份验证，以及如何使用基于角色的访问控制 (RBAC) 限制他们对集群的访问。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;what-is-role-based-access-control-rbac&#34;&gt;什么是基于角色的访问控制 (RBAC)？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;每当用户有权访问任何系统（在本例中为 Kubernetes）时，您不希望每个用户都拥有对集群的超级管理员级别的访问权限。这可能会带来安全风险。想象一下，将对生产集群的超级管理员访问权限移交给不了解 Kubernetes 集群所有细节的人。他们有可能在不知不觉中执行某些操作，导致整个集群脱机。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了避免上述情况，您只需要一两个超级可以不受限制地访问 Kubernetes 集群的管理员用户。其他每个用户（例如开发人员）应该对集群具有有限的访问权限，仅获取他们所需的资源。例如，如果开发团队正在开发一个名为 backend-beta 的新微服务，他们应该有权访问与 backend-beta 应用程序相关的特定命名空间和资源，以避免意外搞乱集群中运行的任何其他工作负载.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用 RBAC 的另一个好处是限制意外凭据泄露的影响。万一开发人员的凭据意外泄露，攻击者对集群内信息的访问权限将非常有限。可以采取的最小化影响的另一个步骤是实施基于时间的访问。一段时间后，访问权限将过期，并且提供给开发者的令牌将变得无用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在 Kubernetes 系统中实施基于角色的访问控制 (RBAC) 有多种好处，例如：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;更高的安全性：&lt;/strong&gt;限制用户对集群的访问，仅限制对所需资源的访问&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;最大限度地降低凭据泄露的影响&lt;/strong&gt;：最大限度地降低集群凭据泄露的影响，因为恶意方对集群的访问权限非常有限&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;合规性&lt;/strong&gt;：使组织能够遵循既定的安全合规性标准，从而改善集群的整体安全状况&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;精细控制&lt;/strong&gt;：能够精细控制用户对集群的访问，并仅提供他们所需的特定权限&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;levels-of-rbac-permissions-in-kubernetes&#34;&gt;Kubernetes 中的 RBAC 权限级别&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;每当您想要允许用户访问 Kubernetes 集群时，您都不希望授予他们超级管理员权限。这样做可能会导致意外删除资源或更改配置。您希望确保用户只能访问集群中的少数特定资源。如果您有开发人员用户，则应仅允许他们访问他们在其特定命名空间中开发的应用程序。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;另一方面，如果您有节点管理员或存储管理员，他们将需要访问集群中所有命名空间中的每个节点或每个存储资源。如果您已将应用程序部署到 Kubernetes 集群，并且需要某些权限才能查看特定集群资源，该怎么办？该应用程序也需要被分配正确的权限级别。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 默认有几个对象可以帮助满足上述所有用例。这些对象包括&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;角色&lt;/strong&gt;：角色定义一组角色f 允许的权限。它是命名空间范围的资源。例如创建和删除 Pod&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;RoleBindings&lt;/strong&gt;：RoleBinding 用于将角色中定义的权限分配给特定用户或应用&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;ClusterRole：&lt;/strong&gt;与角色类似，主要区别在于它是集群范围的资源&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;ClusterRoleBinging：&lt;/strong&gt;与 RoleBinding 相同，不同之处在于权限应用于集群中的每个命名空间&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;服务帐户&lt;/strong&gt;：当应用程序需要获得某些权限时，它会使用服务帐户。实际的权限集分配给服务帐户对象。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们将在本文后面详细介绍上述所有 Kubernetes 对象。首先，让我们看看如何将用户添加到集群。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;adding-a-user-to-the-cluster&#34;&gt;将用户添加到集群&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在继续向集群分配权限之前，您首先需要对 Kubernetes 集群的用户进行身份验证 (authN)。要将用户添加到集群，您必须创建证书签名请求 (CSR)。集群签名密钥将使用用户的公钥对集群进行身份验证。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;假设我们想要将一位名为 John 的新开发人员加入集群。他向我们提供了他的公钥。让我们创建一个证书签名请求 (CSR) 以将 John 添加到集群。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要创建证书签名请求，您需要将 John 的公钥粘贴到下面的清单文件中的 &lt;code&gt;spec.request&lt;/code&gt; 下。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：certificates.k8s.io/v1&#xA;种类：证书签名请求&#xA;元数据：&#xA; 姓名：约翰&#xA;规格：&#xA; 请求：&lt;请求&gt;&#xA; 签名者名称：kubernetes.io/kube-apiserver-client&#xA; expirationSeconds: 86400 #一天&#xA; 用途：&#xA; - 客户端授权&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;创建上述清单文件后，请继续使用&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl apply -f csr.yaml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;应用清单后，将创建一个 CSR 对象。您可以通过运行来检查对集群所做的所有 CSR&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl 获取 csr&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您应该能够看到 John 的 CSR 已创建，并且正在等待批准。由于我们已经知道 John 是我们的开发人员用户，因此我们希望接受此请求。为此，您可以运行以下命令&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl csr 批准约翰&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，用户 John 已通过集群身份验证并有权访问集群。授权权限（authZ）仍需要设置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想轻松地将用户添加到集群中，而不需要创建 CSR，您可以使用 SSO 通过用户的 GitHub 轻松验证用户身份，Google 或 Microsoft 帐户。 &lt;a href=&#34;https://devtron.ai/blog/sso-and-rbac-a-secure-access-strategy-for-your-kubernetes/&#34;&gt;&lt;u&gt;请查看此博客以了解有关 SSO 的更多信息&lt;/u&gt;&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;setting-user-permissions&#34;&gt;设置用户权限&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在您已将用户添加到集群中，是时候为该用户设置适当的权限级别了。正如我们之前讨论的，您可以设置两个级别的权限&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;使用 Role 和 RoleBinding 的命名空间范围权限&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用 ClusterRole 和 ClusterRoleBinding 的集群范围权限。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们将了解如何创建这两种类型的权限。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;role-rolebinding&#34;&gt;角色和角色绑定&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将用户添加到集群后，我们现在可以继续为他们分配某些权限。为此，Kubernetes 提供了两个对象，称为 &lt;code&gt;Role&lt;/code&gt; 和 &lt;code&gt;RoleBinding&lt;/code&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如前所述，角色定义权限集，&lt;code&gt;角色绑定&lt;/code&gt;将角色分配给特定用户。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;假设您有一位名叫 John 的新开发人员，他加入了您的组织，负责一个名为 Project Gamma 的敏感项目。在现有设置中，您有一个名为 &lt;code&gt;project-gamma&lt;/code&gt; 的单独命名空间，用于存储项目的所有资源。您希望允许 John 仅在 &lt;code&gt;project-gamma&lt;/code&gt; 命名空间中创建部署和 Pod。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要执行这些规则，您必须创建适当的角色和角色绑定资源。让我们看一下如何创建这两个对象并为 John 分配正确的权限。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;第 1 步：&lt;/strong&gt;创建一个名为 &lt;code&gt;gamma-developer-role&lt;/code&gt; 的角色，并为其分配适当的权限集。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这可以使用 &lt;code&gt;kubectl&lt;/code&gt; 命令式完成，也可以使用 YAML 文件以声明式完成。我们将考虑以声明方式创建文件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下面的 YAML 文件可用于创建具有所需权限的角色。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：rbac.authorization.k8s.io/v1&#xA;种类：角色&#xA;元数据：&#xA;  命名空间：project-gamma&#xA;  名称：gamma-开发人员角色&#xA;规则：&#xA;- api 组：[&#34;&#34;]&#xA;  资源：[“豆荚”]&#xA;  动词：[“创建”、“获取”、“列表”、“删除”]&#xA;- api 组：[&#34;&#34;]&#xA;  资源：[“部署”]&#xA;  动词：[“创建”、“获取”、“列表”]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们了解上面清单中描述的一些重要配置字段&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;名称：&lt;/strong&gt; 角色名称&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;命名空间&lt;/strong&gt;：将在此命名空间中创建，并且权限将受到限制。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;规则&lt;/strong&gt;：这些是定义的实际权限。我们可以根据需要定义多个权限&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;API 组&lt;/strong&gt;：用于定位特定资源的 API 组。当有多个自定义资源时这非常有用&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;资源&lt;/strong&gt;：您希望分配权限的特定资源类型。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;动词&lt;/strong&gt;：您希望为已定义的资源授予的特定权限。您可以在以下动词之间进行选择：获取、创建、删除、列出、修补、更新、监视。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;第 2 步：&lt;/strong&gt;创建一个名为 &lt;code&gt;gamma-developer-binding&lt;/code&gt; 的 RoleBinding，并将其配置为使用正确的角色并分配正确的用户&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;创建角色后，还需要将其分配给用户。与角色类似，RoleBinding 也可以使用 &lt;code&gt;kubectl create RoleBinding&lt;/code&gt; 命令强制创建。我们将了解如何使用 YAML 文件以声明方式实现它。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下面的 YAML 文件将创建 RoleBinding 并将权限分配给 John。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：rbac.authorization.k8s.io/v1&#xA;种类：角色绑定&#xA;元数据：&#xA;  名称： 伽马-开发人员-绑定&#xA;  命名空间：project-gamma&#xA;科目：&#xA;- 种类：用户&#xA;  姓名：约翰&#xA;角色参考：&#xA;  种类：角色 &#xA;  名称：gamma-开发人员角色&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在上面的清单中，一些重要的配置字段如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;名称：&lt;/strong&gt; RoleBinding 的名称&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;命名空间：&lt;/strong&gt;将在其中创建 RoleBinding 的命名空间。权限将仅限于该命名空间。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;主题：&lt;/strong&gt;应应用角色的主题&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;roleRef：&lt;/strong&gt; 应应用于主题的特定角色的权限。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;注意：- Role 和 RoleBinding 是命名空间范围内的资源。它们只能在创建它们的命名空间中工作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;第 3 步：&lt;/strong&gt;验证权限&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;创建角色并使用 RoleBinding 将其分配给正确的用户后，需要确保权限正常工作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以使用&lt;code&gt;kubectl auth can-i&lt;/code&gt;命令确保权限正常工作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该命令将显示您尝试运行的操作是否成功。例如，John 应该能够获取 &lt;code&gt;project-gamma&lt;/code&gt; 命名空间中的 Pod。但他不应该能够获取默认命名空间中的 Pod。我们可以通过运行以下两个命令来验证这一点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl auth can-i get pods -nproject-gamma --as=John&#xA;&#xA;kubectl auth can-i get pods --as=John&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://devtron.ai/blog/content/images/2024/10/1.-k-auth-1.png&#34; alt=&#34;kubectl auth&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;[图1] kubectl auth&lt;/figcaption&gt;&lt; /图&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从上图中可以看到，John 可以获取project-gamma 命名空间中的 pod，但无法获取 default 命名空间中的 pod。这正是我们想要创建的权限。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;clusterrole-clusterrolebinding&#34;&gt;ClusterRole 和 ClusterRoleBinding&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与 Roles 和 RoleBindings 类似，ClusterRoles 和 ClusterRoleBindings 可以为用户授予某些权限。关键区别在于 ClusterRole 和 ClusterRoleBinding 将应用于整个集群，即它将在集群中的每个命名空间中工作。另一方面，角色和角色绑定仅限于它们所在的特定命名空间。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们通过示例了解如何创建和分配 ClusterRole 和 ClusterRoleBinding。想象一下，您有一个名为 DeploymentManager 的应用程序，它负责管理集群中的所有 Deployment。为了使该应用程序执行其功能，它需要拥有集群中所有部署的管理员权限。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们看一下如何为此应用程序分配正确级别的权限的分步过程&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;第 1 步：&lt;/strong&gt;创建服务帐户&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当我们想给某个用户分配权限时，可以直接分配给他们。但是，当权限必须应用于应用程序时，不能直接应用于应用程序的 Pod 或部署。 Kubernetes 有一种称为服务帐户的资源，它是具有独特身份的非人类帐户。当应用程序需要集群内的某些权限时，会通过服务帐户分配给它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们创建一个名为 &lt;code&gt;deploy-manager-sa&lt;/code&gt; 的 ServiceAccount。您可以使用以下命令强制创建服务帐户。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl 创建服务帐户部署管理器-sa&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您还想确保应用程序正在使用这个新的 ServiceAccount。编辑应用程序的清单并更新 &lt;code&gt;serviceAccount&lt;/code&gt; 字段，以便它使用已创建的新服务帐户。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;第 2 步：&lt;/strong&gt;创建 ClusterRole&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;由于应用程序负责管理集群中的每个部署，因此需要权限才能对部署执行所有操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与我们讨论的角色类似，ClusterRoles 可以命令式和声明式创建。我们了解了如何以声明方式创建角色。让我们使用命令式方法创建名为 &lt;code&gt;deploy-manager-cr&lt;/code&gt; 的 ClusterRole。您可以使用以下命令创建具有正确权限的 ClusterRole。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl create clusterrole deploy-manager-cr --verb=&#39;*&#39; --resource=deployments&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;上述命令将允许服务帐户仅对部署对象执行任何操作。它将无法对任何其他资源类型执行任何操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您希望使用声明性命令运行相同的命令，可以使用以下 YAML 清单：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：rbac.authorization.k8s.io/v1&#xA;种类：集群角色&#xA;元数据：&#xA;  名称：部署管理器-cr&#xA;规则：&#xA;- api 组：[&#34;&#34;]&#xA;  资源：[“部署”]&#xA;  动词：[“*”]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;第 3 步：&lt;/strong&gt;创建 ClusterRoleBinding&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，我们要创建一个 ClusterRoleBinding 以将 ClusterRole 分配给我们创建的服务帐户。我们将此 ClusterRoleBinding 称为 &lt;code&gt;deploy-manager-crb&lt;/code&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们将使用 &lt;code&gt;kubectl&lt;/code&gt; 命令强制创建 ClusterRoleBinding。您可以使用以下命令创建 ClusterRoleBinding，以便它将使用 &lt;code&gt;deploy-manager-cr&lt;/code&gt; 中定义的权限并将其分配给 &lt;code&gt;deploy-manager-sa&lt;/code&gt; 服务帐户&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl 创建集群角色绑定部署管理器-crb --clusterrole=deploy-manager-cr --serviceaccount=default:deploy-manager-sa&lt;/code &gt;&lt;/前&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;上述命令 ClusterRoeBinding 也可以以声明方式创建。您可以使用以下 YAML 清单通过声明性方法创建相同的角色。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：rbac.authorization.k8s.io/v1&#xA;种类：ClusterRoleBinding&#xA;元数据：&#xA;  名称：部署管理器-crb&#xA;科目：&#xA;- 种类：服务帐户&#xA;  名称：默认：deploy-manager-sa&#xA;角色参考：&#xA;  种类：集群角色 &#xA;  名称：部署管理器-cr&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;第 4 步：&lt;/strong&gt;验证权限&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与验证 Roles 和 ClusterRoles 权限的方式类似，我们还希望使用 &lt;code&gt;kubectl auth can-i&lt;/code&gt; 命令验证 ClusterRole 和 ClusterRoleBinding 的权限。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们看看 ServiceAccount 是否可以获得部署，以及是否可以获得单独的 Pod。您可以使用以下命令来尝试一下&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl auth 可以获取部署 --as=system:serviceaccount:default:deploy-manager-sa&#xA;&#xA;kubectl auth can-i get pods --as=system:serviceaccount:default:deploy-manager-sa&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://devtron.ai/blog/content/images/2024/10/2.-k-auth-cluster-1 .png&#34; alt=&#34;kubectl auth clusterrole&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;[图2] kubectl auth clusterrole&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如您所见，服务帐户可以对部署执行操作，但无法对任何其他资源（例如 Pod）执行操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;user-accounts-service-accounts&#34;&gt;用户帐户和服务帐户&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当我们在上面的示例中创建角色和角色绑定时，您可能已经注意到，当我们为用户分配权限时，我们直接将权限分配给用户。但是，当我们想要向应用程序授予某些权限时，我们必须通过服务帐户来完成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;用户帐户：&lt;/strong&gt;用户帐户是由人类使用的帐户。它们旨在成为全局资源，即它们必须在集群中的所有命名空间中具有唯一的名称。用户帐户属于集群操作员，例如 DevOps 工程师或开发人员。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;服务帐户：&lt;/strong&gt;服务帐户是非人类使用的帐户，即由应用程序使用的帐户。它是命名空间范围的资源，即多个服务帐户可以在不同的命名空间中具有相同的名称。服务帐户用于向 Pod 内运行的应用程序分配一组权限。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在本博客中，您了解了将用户添加到 Kubernetes 集群并使用 Roles、RoleBindings、ClusterRoles 和 ClusterRoleBindings 为其添加细粒度权限的整个过程。 Kubernetes 提供了一种强大而灵活的方式来定义不同用户和应用程序的权限。但是，仅使用 Kubernetes 资源创建权限时，确实会出现某些限制和挑战。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在 Kubernetes 中实施 RBAC 的一些挑战如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;缺乏可见性&lt;/strong&gt;：要向任何用户分配权限，您需要创建多个资源，例如角色和 RoleBindings。很难理解哪个角色映射到哪个 RoleBinding，这使得正确管理权限变得困难。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;手动角色分配&lt;/strong&gt;：每当新用户加入 Kubernetes 集群时，都必须手动创建角色并将其分配给该用户。您不能将同一组权限分配给一组用户（例如开发人员用户）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;无基于时间的访问：&lt;/strong&gt;如果您希望仅允许在有限的时间内访问集群，则需要手动分配权限，并在设定的时间段后将其删除。访问权限不会自动过期，需要集群管理员手动移除权限。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;难以大规模管理&lt;/strong&gt;：随着组织的发展，有权访问集群的用户数量也会增加。这反过来会增加 Roles、RoleBindings、ClusterRoles 和 ClusterRoleBindings 的数量。由于这些资源有数百个，因此大规模管理这些资源变得非常困难。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;引导用户遇到困难：&lt;/strong&gt;当您想要引导用户时新用户加入集群后，您需要获取其公钥并创建证书签名请求 (CSR)。然后，此 CSR 需要得到集群管理员的批准，这将成为一个漫长的过程。此外，集群管理员需要确保正确的 CSR 得到批准，并且没有恶意行为者可以访问集群。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Devtron 是一个强大的 Kubernetes 仪表板，可以更轻松地使用 SSO 服务将用户添加到 Kubernetes 集群。它还可以帮助您细化希望分配给所有用户的访问级别。 Devtron 的权限组可以帮助您将相同的权限分配给不同的用户，例如所有开发人员用户或操作用户。它还提供了设置基于时间的集群访问权限的选项，确保用户只能在有限的时间内进行访问。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有关 Devtron 如何帮助 Kubernetes RBAC 的其他阅读内容：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://devtron.ai/blog/sso-and-rbac-a-secure-access-strategy-for-your-kubernetes/&#34;&gt;&lt;u&gt;在 Kubernetes 中使用 SSO 进行 RBAC&lt; /u&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://devtron.ai/blog/control-and-secure-kubectl-access/&#34;&gt;&lt;u&gt;保护对集群的访问&lt;/u&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://devtron.ai/blog/kubernetes-access-management-made-easy/&#34;&gt;&lt;u&gt;Devtron 让 Kubernetes 访问管理变得轻松&lt;/u&gt;&lt;/a&gt;&lt;/李&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;conclusion&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 安全性有多个方面。 Kubernetes 安全性最重要的方面之一是正确设置基于角色的访问控制。 Kubernetes RBAC 对于限制用户可以在 Kubernetes 集群中执行的操作非常有用。首先通过创建 CSR 请求将用户添加到集群，该请求使用 Kubernetes 集群对用户进行身份验证 (authN)。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;完成身份验证后，需要为用户分配适当的授权 (authZ) 权限，以确保他们只能访问所需的资源。为了在集群中设置授权权限，Kubernetes 为用户提供了 Roles、RoleBindings、ClusterRoles 和 ClusterRoleBindings，这些对于在命名空间级别或集群级别设置授权权限非常有用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Devtron 是一个 Kubernetes 仪表板，它使 Kubernetes 安全性更进一步，使创建权限并向不同用户分配权限变得更加容易。它还提供权限组，将同一组权限分配给一组用户（例如开发人员）。它还有助于提供对集群中特定资源的基于时间的访问，并在设定的期限到期后撤销访问。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您有任何疑问，请随时&lt;a href=&#34;https://rebrand.ly/devtron-demo?ref=blog&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;与我们联系&lt;/a&gt;。加入我们积极发展的活跃讨论和共享知识&lt;a href=&#34;https://rebrand.ly/Devtron-Discord?ref=devtron.ai&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;Discord 社区&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 07 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing Kyverno release 1.13!】宣布 Kyverno 版本 1.13！</title>
      <link>https://www.cncf.io/blog/2024/11/07/announcing-kyverno-release-1-13/</link>
      <description>【&lt;p&gt;&lt;em&gt;Project post originally published on the &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/&#34;&gt;Kyverno blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 released with Sigstore bundle verification, exceptions for validatingAdmissionPolicies, new assertion trees, generate enhancments, enhanced ValidatingAdmissionPolicy and PolicyException support, and tons more!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Wednesday, October 30, 2024&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 contains&amp;nbsp;&lt;a href=&#34;https://github.com/kyverno/kyverno/compare/release-1.12...v1.13.0-rc.3&#34;&gt;over 700 changes from 39 contributors&lt;/a&gt;! In this blog, we will highlight some of the major changes and enhancements for the release.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/kyverno.png&#34; alt=&#34;kyverno&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;major-features&#34;&gt;Major Features&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#major-features&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;sigstore-bundle-verification&#34;&gt;Sigstore Bundle Verification&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#sigstore-bundle-verification&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 introduces support for verifying container images signatures that use the&amp;nbsp;&lt;a href=&#34;https://github.com/sigstore/protobuf-specs/blob/main/protos/sigstore_bundle.proto&#34;&gt;sigstore bundle format&lt;/a&gt;. This enables seamless support for&amp;nbsp;&lt;a href=&#34;https://docs.github.com/en/actions/security-for-github-actions/using-artifact-attestations&#34;&gt;GitHub Artifact Attestations&lt;/a&gt;&amp;nbsp;to be verified using verification type&amp;nbsp;&lt;code&gt;SigstoreBundle&lt;/code&gt;.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The following example verifies images containing SLSA Provenance created and signed using GitHub Artifact Attestation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is an example policy:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: kyverno.io/v1&lt;br&gt;kind: ClusterPolicy&lt;br&gt;metadata:&lt;br&gt; name: sigstore-image-verification&lt;br&gt;spec:&lt;br&gt; validationFailureAction: Enforce&lt;br&gt; webhookTimeoutSeconds: 30&lt;br&gt; rules:&lt;br&gt; - match:&lt;br&gt;     any:&lt;br&gt;     - resources:&lt;br&gt;         kinds:&lt;br&gt;         - Pod&lt;br&gt;   name: sigstore-image-verification&lt;br&gt;   verifyImages:&lt;br&gt;   - imageReferences:&lt;br&gt;     - &#34;*&#34;&lt;br&gt;     type: SigstoreBundle&lt;br&gt;     attestations:&lt;br&gt;     - type: https://slsa.dev/provenance/v1&lt;br&gt;       attestors:&lt;br&gt;       - entries:&lt;br&gt;         - keyless:&lt;br&gt;             issuer: https://token.actions.githubusercontent.com&lt;br&gt;             subject: https://github.com/nirmata/github-signing-demo/.github/workflows/build-attested-image.yaml@refs/heads/main&lt;br&gt;             rekor:&lt;br&gt;                 url: https://rekor.sigstore.dev&lt;br&gt;             additionalExtensions:&lt;br&gt;               githubWorkflowTrigger: push&lt;br&gt;               githubWorkflowName: build-attested-image&lt;br&gt;               githubWorkflowRepository: nirmata/github-signing-demo&lt;br&gt;       conditions:&lt;br&gt;       - all:&lt;br&gt;         - key: &#34;{{ buildDefinition.buildType }}&#34;&lt;br&gt;           operator: Equals&lt;br&gt;           value: &#34;https://actions.github.io/buildtypes/workflow/v1&#34;&lt;br&gt;         - key: &#34;{{ buildDefinition.externalParameters.workflow.repository }}&#34;&lt;br&gt;           operator: Equals&lt;br&gt;           value: &#34;https://github.com/nirmata/github-signing-demo&#34;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The demo repository is available at:&amp;nbsp;&lt;a href=&#34;https://github.com/nirmata/github-signing-demo&#34;&gt;https://github.com/nirmata/github-signing-demo&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;exceptions-for-validatingadmissionpolicies&#34;&gt;Exceptions for ValidatingAdmissionPolicies&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#exceptions-for-validatingadmissionpolicies&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 introduces the ability to leverage PolicyException declarations while auto-generating Kubernetes ValidatingAdmissionPolicies directly from Kyverno policies that use the&amp;nbsp;&lt;code&gt;validate.cel&lt;/code&gt;&amp;nbsp;subrule.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The resources specified within the PolicyException are then used to populate the&amp;nbsp;&lt;code&gt;matchConstraints.excludeResourceRules&lt;/code&gt;&amp;nbsp;field of the generated ValidatingAdmissionPolicy, effectively creating exclusions for those resources. This functionality is illustrated below with an example of a Kyverno ClusterPolicy and a PolicyException, along with the resulting ValidatingAdmissionPolicy.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno policy:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: kyverno.io/v1&lt;br&gt;kind: ClusterPolicy&lt;br&gt;metadata:&lt;br&gt;  name: disallow-host-path&lt;br&gt;spec:&lt;br&gt;  background: false&lt;br&gt;  rules:&lt;br&gt;    - name: host-path&lt;br&gt;      match:&lt;br&gt;        any:&lt;br&gt;        - resources:&lt;br&gt;            kinds:&lt;br&gt;            - Deployment&lt;br&gt;            - StatefulSet&lt;br&gt;            operations:&lt;br&gt;            - CREATE&lt;br&gt;            - UPDATE&lt;br&gt;            namespaceSelector:&lt;br&gt;              matchExpressions:&lt;br&gt;                - key: type &lt;br&gt;                  operator: In&lt;br&gt;                  values: &lt;br&gt;                  - connector&lt;br&gt;      validate:&lt;br&gt;        failureAction: Audit&lt;br&gt;        cel:&lt;br&gt;          expressions:&lt;br&gt;            - expression: &#34;!has(object.spec.template.spec.volumes) || object.spec.template.spec.volumes.all(volume, !has(volume.hostPath))&#34;&lt;br&gt;              message: &#34;HostPath volumes are forbidden. The field spec.template.spec.volumes[*].hostPath must be unset.&#34;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;PolicyException:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: kyverno.io/v2&#xA;kind: PolicyException&#xA;metadata:&#xA;  name: policy-exception&#xA;spec:&#xA;  exceptions:&#xA;  - policyName: disallow-host-path&#xA;    ruleNames:&#xA;    - host-path&#xA;  match:&#xA;    any:&#xA;    - resources:&#xA;        kinds:&#xA;        - Deployment&#xA;        names:&#xA;        - important-tool&#xA;        operations:&#xA;        - CREATE&#xA;        - UPDATE&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The generated ValidatingAdmissionPolicy and its binding are as follows:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: admissionregistration.k8s.io/v1&#xA;kind: ValidatingAdmissionPolicy&#xA;metadata:&#xA;  labels:&#xA;    app.kubernetes.io/managed-by: kyverno&#xA;  name: disallow-host-path&#xA;  ownerReferences:&#xA;  - apiVersion: kyverno.io/v1&#xA;    kind: ClusterPolicy&#xA;    name: disallow-host-path&#xA;spec:&#xA;  failurePolicy: Fail&#xA;  matchConstraints:&#xA;    resourceRules:&#xA;    - apiGroups:&#xA;      - apps&#xA;      apiVersions:&#xA;      - v1&#xA;      operations:&#xA;      - CREATE&#xA;      - UPDATE&#xA;      resources:&#xA;      - deployments&#xA;      - statefulsets&#xA;    namespaceSelector:&#xA;      matchExpressions:&#xA;      - key: type&#xA;        operator: In&#xA;        values:&#xA;        - connector&#xA;    excludeResourceRules:&#xA;    - apiGroups:&#xA;      - apps&#xA;      apiVersions:&#xA;      - v1&#xA;      operations:&#xA;      - CREATE&#xA;      - UPDATE&#xA;      resourceNames:&#xA;      - important-tool&#xA;      resources:&#xA;      - deployments&#xA;  validations:&#xA;  - expression: &#39;!has(object.spec.template.spec.volumes) || object.spec.template.spec.volumes.all(volume,&#xA;      !has(volume.hostPath))&#39;&#xA;    message: HostPath volumes are forbidden. The field spec.template.spec.volumes[*].hostPath&#xA;      must be unset.&#xA;---&#xA;apiVersion: admissionregistration.k8s.io/v1&#xA;kind: ValidatingAdmissionPolicyBinding&#xA;metadata:&#xA;  labels:&#xA;    app.kubernetes.io/managed-by: kyverno&#xA;  name: disallow-host-path-binding&#xA;  ownerReferences:&#xA;  - apiVersion: kyverno.io/v1&#xA;    kind: ClusterPolicy&#xA;    name: disallow-host-path&#xA;spec:&#xA;  policyName: disallow-host-path&#xA;  validationActions: [Audit, Warn]&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In addition, Kyverno policies targeting resources within a specific namespace will now generate a ValidatingAdmissionPolicy that utilizes the&amp;nbsp;&lt;code&gt;matchConstraints.namespaceSelector&lt;/code&gt;&amp;nbsp;field to scope its enforcement to that namespace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Policy snippet:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;match:&#xA;  any:&#xA;  - resources:&#xA;      kinds:&#xA;      - Deployment&#xA;      operations:&#xA;      - CREATE&#xA;      - UPDATE&#xA;      namespaces:&#xA;      - production&#xA;      - staging&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The generated ValidatingAdmissionPolicy:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;matchConstraints:&lt;br&gt;  namespaceSelector:&lt;br&gt;    matchExpressions:&lt;br&gt;    - key: kubernetes.io/metadata.name&lt;br&gt;      operator: In&lt;br&gt;      values:&lt;br&gt;      - production&lt;br&gt;      - staging&lt;br&gt;  resourceRules:&lt;br&gt;  - apiGroups:&lt;br&gt;    - apps&lt;br&gt;    apiVersions:&lt;br&gt;    - v1&lt;br&gt;    operations:&lt;br&gt;    - CREATE&lt;br&gt;    - UPDATE&lt;br&gt;    resources:&lt;br&gt;    - deployments&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;validation-rules-with-assertion-trees&#34;&gt;Validation Rules with Assertion Trees&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#validation-rules-with-assertion-trees&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno-JSON allows Kyverno policies to be used anywhere, even for non-Kubernetes workloads. It introduces the powerful concept of&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2023/12/13/kyverno-chainsaw-exploring-the-power-of-assertion-trees/&#34;&gt;assertion trees&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Previously the&amp;nbsp;&lt;a href=&#34;https://kyverno.io/docs/kyverno-cli/assertion-trees/&#34;&gt;Kyverno CLI added support for assertion trees&lt;/a&gt;, and now in Release 1.13 assertion trees can also be used in validation rules as a sub-type.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is an example of a policy that uses an assertion tree to deny pods from using the default service account:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: kyverno.io/v1&lt;br&gt;kind: ClusterPolicy&lt;br&gt;metadata:&lt;br&gt; name: disallow-default-sa&lt;br&gt;spec:&lt;br&gt; validationFailureAction: Enforce&lt;br&gt; rules:&lt;br&gt; - match:&lt;br&gt;     any:&lt;br&gt;     - resources:&lt;br&gt;         kinds:&lt;br&gt;         - Pod&lt;br&gt;   name: disallow-default-sa&lt;br&gt;   validate:&lt;br&gt;     message: default ServiceAccount should not be used&lt;br&gt;     assert:&lt;br&gt;       object:&lt;br&gt;         spec:&lt;br&gt;           (serviceAccountName == ‘default’): false&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;other-features-and-enhancements&#34;&gt;Other Features and Enhancements&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#other-features-and-enhancements&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;generate-changes&#34;&gt;Generate Changes&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#generate-changes&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The&amp;nbsp;&lt;code&gt;foreach&lt;/code&gt;&amp;nbsp;declaration allows the generation of multiple target resources of sub-elements in resource declarations. Each&amp;nbsp;&lt;code&gt;foreach&lt;/code&gt;&amp;nbsp;entry must contain a list attribute, written as a JMESPath expression without braces, that defines sub-elements it processes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here is an example of creating networkpolicies for a list of Namespaces, the namespaces are stored in a ConfigMap which can be easily configured dynamically.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: kyverno.io/v1&lt;br&gt;kind: ClusterPolicy&lt;br&gt;metadata:&lt;br&gt; name: foreach-generate-data&lt;br&gt;spec:&lt;br&gt; rules:&lt;br&gt; - match:&lt;br&gt;     any:&lt;br&gt;     - resources:&lt;br&gt;         kinds:&lt;br&gt;         - ConfigMap&lt;br&gt;   name: k-kafka-address&lt;br&gt;   generate:&lt;br&gt;     generateExisting: false&lt;br&gt;     synchronize: true&lt;br&gt;     orphanDownstreamOnPolicyDelete: false&lt;br&gt;     foreach:&lt;br&gt;       - list: request.object.data.namespaces | split(@, ‘,’)&lt;br&gt;         apiVersion: networking.k8s.io/v1&lt;br&gt;         kind: NetworkPolicy&lt;br&gt;         name: my-networkpolicy-{{element}}-{{ elementIndex }}&lt;br&gt;         namespace: ‘{{ element }}’&lt;br&gt;         data:&lt;br&gt;           metadata:&lt;br&gt;             labels:&lt;br&gt;               request.namespace: ‘{{ request.object.metadata.name }}’&lt;br&gt;               element: ‘{{ element }}’&lt;br&gt;               elementIndex: ‘{{ elementIndex }}’&lt;br&gt;           spec:&lt;br&gt;             podSelector: {}&lt;br&gt;             policyTypes:&lt;br&gt;             - Ingress&lt;br&gt;             - Egress&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The triggering ConfigMap is defined as follows, the data contains a namespaces field that defines multiple namespaces.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;kind: ConfigMap&lt;br&gt;apiVersion: v1&lt;br&gt;metadata:&lt;br&gt;  name: default-deny&lt;br&gt;  namespace: default&lt;br&gt;data:&lt;br&gt;  namespaces: foreach-ns-1,foreach-ns-2&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Similarly, below is an example of a clone source type of&amp;nbsp;&lt;code&gt;foreach&lt;/code&gt;&amp;nbsp;declaration that clones the source Secret into a list of matching existing namespaces which is stored in the same ConfigMap as above.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: kyverno.io/v1&lt;br&gt;kind: ClusterPolicy&lt;br&gt;metadata:&lt;br&gt;  name: foreach-clone&lt;br&gt;spec:&lt;br&gt;  rules:&lt;br&gt;  - match:&lt;br&gt;      any:&lt;br&gt;      - resources:&lt;br&gt;          kinds:&lt;br&gt;          - ConfigMap&lt;br&gt;   namespaces:&lt;br&gt;          - default&lt;br&gt;    name: k-kafka-address&lt;br&gt;    generate:&lt;br&gt;      generateExisting: false&lt;br&gt;      synchronize: true&lt;br&gt;      foreach:&lt;br&gt;        - list: request.object.data.namespaces | split(@, &#39;,&#39;)&lt;br&gt;          apiVersion: v1&lt;br&gt;          kind: Secret&lt;br&gt;          name: cloned-secret-{{ elementIndex }}-{{ element }}&lt;br&gt;          namespace: &#39;{{ element }}&#39;&lt;br&gt;          clone:&lt;br&gt;            namespace: default&lt;br&gt;            name: source-secret&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In addition, each&amp;nbsp;&lt;code&gt;foreach&lt;/code&gt;&amp;nbsp;declaration supports the following declarations: Contex and Preconditions. For more information please see&amp;nbsp;&lt;a href=&#34;https://kyverno.io/docs/writing-policies/generate/#foreach&#34;&gt;Kyverno documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This release also allows updates to the generate rule pattern. In addition to deletion, if the triggering resource is altered in a way such that it no longer matches the definition in the rule, that too will cause the removal of the downstream resource.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;api-call-enhancements&#34;&gt;API call enhancements&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#api-call-enhancements&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;default-values&#34;&gt;Default Values&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#default-values&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the case where the API server returns an error,&amp;nbsp;&lt;code&gt;apiCall.default&lt;/code&gt;&amp;nbsp;can be used to provide a fallback value for the API call context entry.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The following example shows how to add default value to context entries:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;    context:&#xA;    - name: currentnamespace&#xA;      apiCall:&#xA;        urlPath: “/api/v1/namespaces/{{ request.namespace }}”&#xA;        jmesPath: metadata.name&#xA;        default: default&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;custom-headers&#34;&gt;Custom Headers&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#custom-headers&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno Service API calls now also support custom headers. This can be useful for authentication or adding other HTTP request headers. Here is an example of adding a token in the HTTP Authorization header:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;     context:&#xA;        - name: result&#xA;          apiCall:&#xA;            method: POST&#xA;            data:&#xA;              - key: foo&#xA;                value: bar&#xA;              - key: namespace&#xA;                value: &#34;{{ `{{ request.namespace }}` }}&#34;&#xA;            service:&#xA;              url: http://my-service.svc.cluster.local/validation&#xA;              headers:&#xA;                - key: &#34;UserAgent&#34;&#xA;                  value: &#34;Kyverno Policy XYZ&#34;&#xA;                - key: &#34;Authorization&#34;&#xA;                  value: &#34;Bearer {{ MY_SECRET }}&#34;&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;policy-report-enhancements&#34;&gt;Policy Report Enhancements&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#policy-report-enhancements&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;reports-for-mutate-and-generate-rules&#34;&gt;Reports for Mutate and Generate rules&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#reports-for-mutate-and-generate-rules&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In addition to validate and verifyImages rules, Kyverno 1.13 supports reporting for generate and mutate, including mutate existing policies, to record policy results. The container flag&amp;nbsp;&lt;code&gt;--enableReporting&lt;/code&gt;&amp;nbsp;can be used to enable or disable reports for specific rule types. It allows the comma-separated values, validate, mutate, mutateExisting, generate, and imageVerify. See details&amp;nbsp;&lt;a href=&#34;https://main.kyverno.io/docs/installation/customization/#container-flags&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A result entry will be audited in the policy report for rule decision:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: wgpolicyk8s.io/v1alpha2&lt;br&gt;kind: PolicyReport&lt;br&gt;metadata:&lt;br&gt;  labels:&lt;br&gt;    app.kubernetes.io/managed-by: kyverno&lt;br&gt;  namespace: default&lt;br&gt;results:&lt;br&gt;- message: mutated Pod/good-pod in namespace default&lt;br&gt;  policy: add-labels&lt;br&gt;  result: pass&lt;br&gt;  rule: add-labels&lt;br&gt;  scored: true&lt;br&gt;  source: kyverno&lt;br&gt;scope:&lt;br&gt;  apiVersion: v1&lt;br&gt;  kind: Pod&lt;br&gt;  name: good-pod&lt;br&gt;  namespace: default&lt;br&gt;...&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Note that the proper permissions need to be granted to the reports controller, a warning message will be returned upon policy admission if no RBAC permission is configured.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;custom-data-in-reports&#34;&gt;Custom Data in Reports&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#custom-data-in-reports&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A new field&amp;nbsp;&lt;code&gt;reportProperties&lt;/code&gt;&amp;nbsp;is introduced to custom data in policy reports. For example, a validate rule below adds two additional entries operation and objName to the policy reports:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: kyverno.io/v1&lt;br&gt;kind: ClusterPolicy&lt;br&gt;metadata:&lt;br&gt;  name: require-owner&lt;br&gt;spec:&lt;br&gt;  background: false&lt;br&gt;  rules:&lt;br&gt;  - match:&lt;br&gt;      any:&lt;br&gt;      - resources:&lt;br&gt;          kinds:&lt;br&gt;          - Namespace&lt;br&gt;    name: check-owner&lt;br&gt;    context:&lt;br&gt;    - name: objName&lt;br&gt;      variable:&lt;br&gt;        jmesPath: request.object.metadata.name&lt;br&gt;    reportProperties:&lt;br&gt;      operation: ‘{{ request.operation }}’&lt;br&gt;      objName: ‘{{ objName }}’&lt;br&gt;    validate:&lt;br&gt;      validationFailureAction: Audit&lt;br&gt;      message: The `owner` label is required for all Namespaces.&lt;br&gt;      pattern:&lt;br&gt;        metadata:&lt;br&gt;          labels:&lt;br&gt;            owner: ?*&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can find the two custom entries added to&amp;nbsp;&lt;code&gt;results.properties&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: wgpolicyk8s.io/v1alpha2&#xA;kind: ClusterPolicyReport&#xA;metadata:&#xA;  ownerReferences:&#xA;  - apiVersion: v1&#xA;    kind: Namespace&#xA;    name: bar&#xA;results:&#xA;- message: validation rule ‘check-owner’ passed.&#xA;  policy: require-owner&#xA;  result: pass&#xA;  rule: check-owner&#xA;  scored: true&#xA;  source: kyverno&#xA;  properties:&#xA;    objName: bar&#xA;    operation: CREATE&#xA;scope:&#xA;  apiVersion: v1&#xA;  kind: Namespace&#xA;  name: bar&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;globalcontextentries-enhancements&#34;&gt;GlobalContextEntries Enhancements&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#globalcontextentries-enhancements&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;api-call-retry&#34;&gt;API Call Retry&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#api-call-retry&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno’s GlobalContextEntry provides a powerful mechanism to fetch external data and use it within policies. When leveraging the apiCall feature to retrieve data from an API, transient network issues can sometimes hinder successful retrieval.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To address this, Kyverno now offers built-in retry logic for API calls within GlobalContextEntry. You can now optionally specify a retryLimit for your API calls:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: kyverno.io/v2alpha1&#xA;kind: GlobalContextEntry&#xA;metadata:&#xA;  name: gctxentry-apicall-correct&#xA;spec:&#xA;  apiCall:&#xA;    urlPath: &#34;/apis/apps/v1/namespaces/test-globalcontext-apicall-correct/deployments&#34;&#xA;    refreshInterval: 1h&#xA;    retryLimit: 3&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The&amp;nbsp;&lt;code&gt;retryLimit&lt;/code&gt;&amp;nbsp;field determines the number of times Kyverno will attempt to make the API call if it initially fails. This field is optional and defaults to 3, ensuring a reasonable level of resilience against temporary network hiccups.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By incorporating this retry mechanism, Kyverno further strengthens its ability to reliably fetch external data, ensuring your policies can function smoothly even in the face of occasional connectivity issues. This enhancement improves the overall robustness and dependability of your Kubernetes policy enforcement framework.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;cli-based-injection-of-global-context-entries&#34;&gt;CLI-based Injection of Global Context Entries&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#cli-based-injection-of-global-context-entries&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno CLI now allows you to dynamically inject global context entries using a Values file. This feature facilitates flexible policy testing and execution by simulating different scenarios without modifying GlobalContextEntry resources in your cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can now define global values and rule-specific values within the Values file, providing greater control over policy evaluation during testing.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: cli.kyverno.io/v1alpha1&#xA;kind: Value&#xA;metadata:&#xA;  name: values&#xA;globalValues:&#xA;  request.operation: CREATE&#xA;policies:&#xA;  - name: gctx&#xA;    rules:&#xA;      - name: main-deployment-exists&#xA;        values:&#xA;          deploymentCount: 1&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this example,&amp;nbsp;&lt;code&gt;request.operation&lt;/code&gt;&amp;nbsp;is set as a global value, and deploymentCount is set for a specific rule in the gctx policy. When using the Kyverno CLI, you can reference this Values file to inject these global context entries into your policy evaluation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;security-hardening&#34;&gt;Security Hardening&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#security-hardening&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Kyverno project strives to be secure and production-ready, while providing ease of use. This release contains important changes to further enhance the security of the project.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;removal-of-wildcard-roles&#34;&gt;Removal of wildcard roles&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#removal-of-wildcard-roles&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Prior versions of Kyverno included wildcard view permissions. These have been removed in 1.13 and replaced with a role binding to the system view role.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This change does not impact policy behaviors during admission controls, but may impact users with mutate and generate policies for custom resources, and may impact reporting of policy results for validation rules on custom resources A Helm option was added to upgrade Kyverno without breaking existing policies, see the upgrade guidance&amp;nbsp;&lt;a href=&#34;https://main.kyverno.io/docs/installation/upgrading/#upgrading-to-kyverno-v113&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;removal-of-insecure-configuration-for-exceptions&#34;&gt;Removal of insecure configuration for exceptions&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#removal-of-insecure-configuration-for-exceptions&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In prior versions, policy exceptions were allowed in all namespaces. This creates a potential security issue, as any user with permission to create a policy exception can bypass policies, even in other namespaces. See&amp;nbsp;&lt;a href=&#34;https://github.com/kyverno/kyverno/security/advisories/GHSA-qjvc-p88j-j9rm&#34;&gt;CVE-2024-48921&lt;/a&gt;&amp;nbsp;for more details.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This release changes the defaults to disable the policy exceptions and only allows exceptions to be created in a specified namespace. To maintain backward compatibility follow the&amp;nbsp;&lt;a href=&#34;https://main.kyverno.io/docs/installation/upgrading/#upgrading-to-kyverno-v113&#34;&gt;upgrade guidance&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;warnings-for-policy-violations-and-mutations&#34;&gt;Warnings for Policy Violations and Mutations&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#warnings-for-policy-violations-and-mutations&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A warning message can now be returned along with admission responses by the policy setting&amp;nbsp;&lt;code&gt;spec.emitWarning&lt;/code&gt;, this can be used to report policy violations as well as mutations upon admission events.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;shallow-evaluation-of-variables&#34;&gt;Shallow evaluation of Variables&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#shallow-evaluation-of-variables&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno performs nested variable substitution by default, this may not be desirable in certain situations. Take the following ConfigMap as an example, it defines a&amp;nbsp;&lt;code&gt;.hcl&lt;/code&gt;&amp;nbsp;string content using the same&amp;nbsp;&lt;code&gt;{{ }}&lt;/code&gt;&amp;nbsp;notation which is used in Kyverno for variable syntax. In this case, Kyverno needs to be instructed to not attempt to resolve variables in the HCL, this can be achieved by&amp;nbsp;&lt;code&gt;{{- ... }}&lt;/code&gt;&amp;nbsp;notation for shallow (one time only) substitution of variables.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: v1&#xA;data:&#xA;  config: |-&#xA;    from_string&#xA;    {{ some hcl tempalte }}    &#xA;kind: ConfigMap&#xA;metadata:&#xA;  annotations:&#xA;  labels:&#xA;    argocd.development.cpl.&amp;lt;removed&amp;gt;.co.at/app: corp-tech-ap-team-ping-ep&#xA;  name: vault-injector-config-http-echo&#xA;  namespace: corp-tech-ap-team-ping-ep&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To only substitute the rule data with the HCL, and not perform nested substitutions, the following policy uses the declaration&amp;nbsp;&lt;code&gt;{{- hcl }}&lt;/code&gt;&amp;nbsp;for shallow substitution.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;apiVersion: cli.kyverno.io/v1alphaapiVersion: kyverno.io/v1&#xA;kind: ClusterPolicy&#xA;metadata:&#xA;  name: vault-auth-backend&#xA;spec:&#xA;  validationFailureAction: Audit&#xA;  background: true&#xA;  mutateExistingOnPolicyUpdate: true&#xA;  rules:&#xA;  - name: vault-injector-config-blue-to-green-auth-backend&#xA;    context:&#xA;    - name: hcl&#xA;      variable:&#xA;        jmesPath: replace_all( ‘{{ request.object.data.config }}’, ‘from_string’,‘to_string’)&#xA;    match:&#xA;      any:&#xA;      - resources:&#xA;          kinds:&#xA;          - ConfigMap&#xA;          names:&#xA;          - test-*&#xA;          namespaces:&#xA;          - corp-tech-ap-team-ping-ep&#xA;    mutate:&#xA;      patchStrategicMerge:&#xA;        data:&#xA;          config: ‘{{- hcl }}’&#xA;      targets:&#xA;      - apiVersion: v1&#xA;        kind: ConfigMap&#xA;        name: ‘{{ request.object.metadata.name }}’&#xA;        namespace: ‘{{ request.object.metadata.namespace }}’&#xA;    name: vault-injector-config-blue-to-green-auth-backend&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;improved-argocd-integration&#34;&gt;Improved ArgoCD Integration&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#improved-argocd-integration&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno-managed webhook configurations are auto-cleaned up upon uninstallation. This behavior could be broken if Kyverno loses RBAC permissions to do so given the random resources deletion order. This release introduces a finalizer-based cleanup solution to ensure webhooks are removed successfully.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This feature is in&amp;nbsp;&lt;a href=&#34;https://main.kyverno.io/docs/installation/uninstallation/#clean-up-webhooks&#34;&gt;beta stage&lt;/a&gt;&amp;nbsp;and will be used as the default cleanup strategy in the future.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;api-version-management&#34;&gt;API Version Management&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#api-version-management&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 introduces new changes in the policy CRDs:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Both Policy Exceptions and Cleanup Policies have graduated to a stable version (v2).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Several policy settings are deprecated:&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;spec.validationFailureAction&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.validationFailureActionOverrides&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.mutateExistingOnPolicyUpdate&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.generateExisting&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;These are replaced by more granular controls within the rule itself:&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;spec.rules[*].validate.failureAction&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.rules[*].validate.failureActionOverrides&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.rules[&lt;em&gt;].verifyImages[&lt;/em&gt;].failureAction&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.rules[*].mutate.mutateExisting&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.rules[*].generate.generateExisting&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Note that the deprecated fields will be removed in a future release, so migration to the new settings is recommended.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;conclusion&#34;&gt;Conclusion&amp;nbsp;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#conclusion&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 promises to be a great release, with many new features, enhancements, and fixes. To get started with Kyverno try the&amp;nbsp;&lt;a href=&#34;https://kyverno.io/docs/introduction/quick-start/&#34;&gt;quick start guides&lt;/a&gt;&amp;nbsp;or head to the&amp;nbsp;&lt;a href=&#34;https://kyverno.io/docs/installation/methods/&#34;&gt;installation&lt;/a&gt;&amp;nbsp;section of the docs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To get the most value out of Kyverno, and check out the&amp;nbsp;&lt;a href=&#34;https://kyverno.io/support/&#34;&gt;available enterprise solutions&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;项目帖子最初发布于 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/&#34;&gt;Kyverno 博客&lt;/a&gt;&lt; /em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 发布，包含 Sigstore 捆绑验证、validateAdmissionPolicies 例外、新断言树、生成增强功能、增强的 ValidatingAdmissionPolicy 和 PolicyException 支持等等！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2024 年 10 月 30 日星期三&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 包含&lt;a href=&#34;https://github.com/kyverno/kyverno/compare/release-1.12...v1.13.0-rc.3&#34;&gt;来自 39 位贡献者的 700 多项更改&lt;/a&gt; ！在本博客中，我们将重点介绍该版本的一些主要更改和增强功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/kyverno.png&#34; alt=&#34;kyverno&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;major-features&#34;&gt;主要功能&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/ #主要功能&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;sigstore-bundle-verification&#34;&gt;Sigstore 捆绑包验证 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release -1.13/#sigstore-bundle-verification&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 引入了对验证使用&lt;a href=&#34;https://github.com/sigstore/protobuf-specs/blob/main/protos/sigstore_bundle.proto&#34;&gt;sigstore 捆绑包格式的容器映像签名的支持&lt;/一个&gt;。这样可以无缝支持 &lt;a href=&#34;https://docs.github.com/en/actions/security-for-github-actions/using-artifact-attestations&#34;&gt;GitHub Artifact Attestations&lt;/a&gt;验证类型&lt;code&gt;SigstoreBundle&lt;/code&gt;。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下示例验证包含使用 GitHub Artifact Attestation 创建和签名的 SLSA Provenance 的图像。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下是政策示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：kyverno.io/v1&lt;br&gt;种类：ClusterPolicy&lt;br&gt;元数据：&lt;br&gt;名称： sigstore-image-verification&lt;br&gt;规范：&lt;br&gt;validationFailureAction：强制&lt;br&gt;webhookTimeoutSeconds：30&lt;br&gt;规则：&lt;br&gt;-匹配：&lt;br&gt;任何：&lt;br&gt;-资源：&lt;br&gt;种类：&lt; br&gt; - Pod&lt;br&gt; 名称：sigstore-image-verification&lt;br&gt; verifyImages：&lt;br&gt; - imageReferences：&lt;br&gt; - &#34;*&#34;&lt;br&gt; 类型：SigstoreBundle&lt;br&gt; 证明：&lt;br&gt; - 类型：https ://slsa.dev/provenance/v1&lt;br&gt; 证明者：&lt;br&gt; - 条目：&lt;br&gt; - 无密钥：&lt;br&gt; 发行者：https://token.actions.githubusercontent.com&lt;br&gt; 主题：https: //github.com/nirmata/github-signing-demo/.github/workflows/build-attested-image.yaml@refs/heads/main&lt;br&gt; rekor:&lt;br&gt; url: https://rekor.sigstore。 dev&lt;br&gt;additionalExtensions:&lt;br&gt;githubWorkflowTrigger:push&lt;br&gt;githubWorkflowName:build-attested-image&lt;br&gt;githubWorkflowRepository:nirmata/github-signing-demo&lt;br&gt; 条件：&lt;br&gt; - 全部：&lt;br&gt; - 键：“{{ buildDefinition.buildType }}”&lt;br&gt; 运算符：等于&lt;br&gt; 值：“https://actions.github.io/buildtypes/workflow /v1&#34;&lt;br&gt; - 键：“{{ buildDefinition.externalParameters.workflow.repository }}”&lt;br&gt; 运算符：等于&lt;br&gt; 值： “https://github.com/nirmata/github-signing-demo”&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno -release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;演示存储库位于：&lt;a href=&#34;https://github.com/nirmata/github-signing-demo&#34;&gt;https://github.com/nirmata/github-signing-demo&lt;/a &gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;exceptions-for-validatingadmissionpolicies&#34;&gt;ValidatingAdmissionPolicies 的例外情况 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release -1.13/#exceptions-for-validatingadmissionpolicies&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 引入了利用 PolicyException 声明的功能，同时直接从使用 &lt;code&gt;validate.cel&lt;/code&gt; 子规则的 Kyverno 策略自动生成 Kubernetes ValidatingAdmissionPolicies。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;然后，使用 PolicyException 中指定的资源填充生成的 ValidatingAdmissionPolicy 的 &lt;code&gt;matchConstraints.excludeResourceRules&lt;/code&gt; 字段，从而有效地为这些资源创建排除项。下面通过 Kyverno ClusterPolicy 和 PolicyException 以及生成的 ValidatingAdmissionPolicy 示例说明了此功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 政策：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：kyverno.io/v1&lt;br&gt;种类：ClusterPolicy&lt;br&gt;元数据：&lt;br&gt;名称： disallow-host-path&lt;br&gt;规范：&lt;br&gt; 背景： false&lt;br&gt; 规则：&lt;br&gt; - 名称：主机路径&lt;br&gt; 匹配：&lt;br&gt; 任何：&lt;br&gt; - 资源：&lt;br&gt; 种类:&lt;br&gt;-部署&lt;br&gt; - StatefulSet&lt;br&gt; 操作：&lt;br&gt; - CREATE&lt;br&gt; - UPDATE&lt;br&gt; 命名空间选择器：&lt;br&gt; matchExpressions：&lt;br&gt; - 键：类型 &lt;br&gt; 运算符：In&lt;br&gt; 值：&lt; br&gt; - 连接器&lt;br&gt; 验证：&lt;br&gt; failureAction：审核&lt;br&gt; cel:&lt;br&gt; 表达式：&lt;br&gt; - 表达式：&#34;!has(object.spec.template.spec.volumes) || object.spec.template.spec.volumes.all(volume, !has(volume.hostPath))&#34;&lt;br&gt; 消息：“禁止使用 HostPath 卷。spec.template.spec.volumes[*].hostPath 字段必须为禁止的。取消设置。”&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;策略异常：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：kyverno.io/v2&#xA;种类：PolicyException元数据：&#xA;  名称：策略例外&#xA;规格：&#xA;  例外情况：&#xA;  - 策略名称：禁止主机路径&#xA;    规则名称：&#xA;    - 主机路径&#xA;  匹配：&#xA;    任何：&#xA;    - 资源：&#xA;        种类：&#xA;        - 部署&#xA;        名称：&#xA;        - 重要工具&#xA;        运营：&#xA;        - 创造&#xA;        - 更新&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog /2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;生成的ValidatingAdmissionPolicy及其绑定如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：admissionregistration.k8s.io/v1&#xA;种类：ValidatingAdmissionPolicy&#xA;元数据：&#xA;  标签：&#xA;    app.kubernetes.io/管理者：kyverno&#xA;  名称：禁止主机路径&#xA;  业主参考资料：&#xA;  - api版本：kyverno.io/v1&#xA;    种类：集群策略&#xA;    名称：禁止主机路径&#xA;规格：&#xA;  失败策略：失败&#xA;  匹配限制：&#xA;    资源规则：&#xA;    - api 组：&#xA;      - 应用程序&#xA;      api版本：&#xA;      - v1&#xA;      运营：&#xA;      - 创造&#xA;      - 更新&#xA;      资源：&#xA;      - 部署&#xA;      - 有状态集&#xA;    命名空间选择器：&#xA;      匹配表达式：&#xA;      - 键：类型&#xA;        运算符：In&#xA;        价值观：&#xA;        - 连接器&#xA;    排除资源规则：&#xA;    - api 组：&#xA;      - 应用程序&#xA;      api版本：&#xA;      - v1&#xA;      运营：&#xA;      - 创造&#xA;      - 更新&#xA;      资源名称：&#xA;      - 重要工具&#xA;      资源：&#xA;      - 部署&#xA;  验证：&#xA;  - 表达式： &#39;!has(object.spec.template.spec.volumes) || object.spec.template.spec.volumes.all(体积，&#xA;      !has(volume.hostPath))&#39;&#xA;    消息：HostPath 卷被禁止。字段spec.template.spec.volumes[*].hostPath&#xA;      必须取消设置。&#xA;---&#xA;api版本：admissionregistration.k8s.io/v1&#xA;种类：ValidatingAdmissionPolicyBinding&#xA;元数据：&#xA;  标签：&#xA;    app.kubernetes.io/管理者：kyverno&#xA;  名称：禁止主机路径绑定&#xA;  业主参考资料：&#xA;  - api版本：kyverno.io/v1&#xA;    种类：集群策略&#xA;    名称：禁止主机路径&#xA;规格：&#xA;  策略名称：禁止主机路径&#xA;  验证操作：[审核、警告]&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog /2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，针对特定命名空间内的资源的 Kyverno 策略现在将生成一个 ValidatingAdmissionPolicy，该策略利用 &lt;code&gt;matchConstraints.namespaceSelector&lt;/code&gt; 字段将其强制执行范围限制在该命名空间内。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;政策片段：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;匹配：&#xA;  任何：&#xA;  - 资源：&#xA;      种类：&#xA;      - 部署&#xA;      运营：&#xA;      - 创造&#xA;      - 更新&#xA;      命名空间：&#xA;      - 生产&#xA;      - 分期&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog /2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;生成的ValidatingAdmissionPo莉西：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;matchConstraints:&lt;br&gt; 命名空间选择器:&lt;br&gt; matchExpressions:&lt;br&gt; - key: kubernetes.io/metadata .name&lt;br&gt; 运算符：In&lt;br&gt; 值：&lt;br&gt; - 生产&lt;br&gt; - 暂存&lt;br&gt; 资源规则：&lt;br&gt; - apiGroups：&lt;br&gt; - 应用程序&lt;br&gt; apiVersions：&lt;br&gt; - v1&lt; br&gt; 操作：&lt;br&gt; - 创建&lt;br&gt; - 更新&lt;br&gt;资源：&lt;br&gt; - 部署&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/ 10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34; &gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;validation-rules-with-assertion-trees&#34;&gt;使用断言树的验证规则&lt;a href=&#34;https://kyverno.io/blog/2024/10/30 /announcing-kyverno-release-1.13/#validation-rules-with-assertion-trees&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno-JSON 允许在任何地方使用 Kyverno 策略，甚至适用于非 Kubernetes 工作负载。它引入了&lt;a href=&#34;https://kyverno.io/blog/2023/12/13/kyverno-chainsaw-exploring-the-power-of-assertion-trees/&#34;&gt;断言树&lt;/a的强大概念&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;之前 &lt;a href=&#34;https://kyverno.io/docs/kyverno-cli/assertion-trees/&#34;&gt;Kyverno CLI 添加了对断言树的支持&lt;/a&gt;，现在在版本 1.13 中断言树可以也可以在验证规则中用作子类型。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下是使用断言树拒绝 Pod 使用默认服务帐户的策略示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：kyverno.io/v1&lt;br&gt;种类：ClusterPolicy&lt;br&gt;元数据：&lt;br&gt;名称： disallow-default-sa&lt;br&gt;规范：&lt;br&gt;validationFailureAction：强制&lt;br&gt;规则：&lt;br&gt; - 匹配：&lt;br&gt; 任何：&lt;br&gt; - 资源：&lt;br&gt; 种类：&lt;br&gt; - Pod&lt;br &gt; 名称：disallow-default-sa&lt;br&gt; 验证：&lt;br&gt; 消息：不应使用默认 ServiceAccount&lt;br&gt; 断言：&lt;br&gt; 对象：&lt;br&gt; 规格：&lt;br&gt; (serviceAccountName == &#39;default&#39;) ：错误&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href =&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;other-features-and-enhancements&#34;&gt;其他功能和增强功能 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing- kyverno-release-1.13/#other-features-and-enhancements&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;generate-changes&#34;&gt;生成更改&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/ #generate-changes&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;code&gt;foreach&lt;/code&gt; 声明允许在资源声明中生成子元素的多个目标资源。每个 &lt;code&gt;foreach&lt;/code&gt; 条目必须包含一个列表属性，以不带大括号的 JMESPath 表达式形式编写，用于定义它处理的子元素。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是为列表创建网络策略的示例命名空间，命名空间存储在 ConfigMap 中，可以轻松动态配置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：kyverno.io/v1&lt;br&gt;种类：ClusterPolicy&lt;br&gt;元数据：&lt;br&gt;名称： foreach-generate-data&lt;br&gt;规范：&lt;br&gt; 规则：&lt;br&gt; - 匹配：&lt;br&gt; 任何：&lt;br&gt; - 资源：&lt;br&gt; 种类：&lt;br&gt; - ConfigMap&lt;br&gt; 名称：k-kafka -address&lt;br&gt; 生成：&lt;br&gt; 生成现有：假&lt;br&gt; 同步：真&lt;br&gt; orphanDownstreamOnPolicyDelete：假&lt;br&gt; foreach：&lt;br&gt; - 列表：request.object.data.namespaces | split(@, &#39;,&#39;)&lt;br&gt; api版本：networking.k8s.io/v1&lt;br&gt; 种类：NetworkPolicy&lt;br&gt; 名称：my-networkpolicy-{{element}}-{{ elementIndex }}&lt;br&gt; 命名空间: &#39;{{ element }}&#39;&lt;br&gt; 数据:&lt;br&gt; 元数据:&lt;br&gt; 标签:&lt;br&gt; request.namespace: &#39;{{ request.object.metadata.name }}&#39;&lt;br&gt; 元素: &#39;{ { element }}&#39;&lt;br&gt; elementIndex: &#39;{{ elementIndex }}&#39;&lt;br&gt; 规格:&lt;br&gt; podSelector: {}&lt;br&gt; 策略类型:&lt;br&gt; - 入口&lt;br&gt; - 出口&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno. io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;触发的ConfigMap定义如下，数据中包含一个namespaces字段，该字段定义了多个命名空间。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;种类：ConfigMap&lt;br&gt;api版本：v1&lt;br&gt;元数据：&lt;br&gt;名称：default-deny&lt; br&gt; 命名空间：默认&lt;br&gt;数据：&lt;br&gt; 命名空间：foreach-ns-1,foreach-ns-2&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/ 2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/ #&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;类似地，下面是 &lt;code&gt;foreach&lt;/code&gt; 声明的克隆源类型的示例，它将源 Secret 克隆到匹配的现有命名空间列表中，该命名空间存储在与上面相同的 ConfigMap 中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：kyverno.io/v1&lt;br&gt;种类：ClusterPolicy&lt;br&gt;元数据：&lt;br&gt;名称： foreach-clone&lt;br&gt;规范：&lt;br&gt; 规则：&lt;br&gt; - 匹配：&lt;br&gt; 任意：&lt;br&gt; - 资源：&lt;br&gt; 种类：&lt;br&gt; - ConfigMap&lt;br&gt; 命名空间：&lt;br&gt; - 默认&lt;br&gt;名称：k-kafka-address&lt;br&gt;生成：&lt;br&gt;generateExisting：false&lt;br&gt;同步：true&lt;br&gt;foreach：&lt;br&gt;-列表：request.object.data.namespaces | split(@, &#39;,&#39;)&lt;br&gt; apiVersion: v1&lt;br&gt; kind: Secret&lt;br&gt; name: cloned-secret-{{ elementIndex }}-{{ element }}&lt;br&gt; 命名空间: &#39;{{ element } }&#39;&lt;br&gt;克隆：&lt;br&gt;命名空间：默认&lt;br&gt;名称：源秘密&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30 /announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，每个 &lt;code&gt;foreach&lt;/code&gt; 声明都支持以下声明：Contex 和 Preconditions。有关更多信息，请参阅&lt;a href=&#34;https://kyverno.io/docs/writing-policies/generate/#foreach&#34;&gt;Kyverno 文档&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此版本还允许更新生成规则模式。除了删除之外，如果触发资源发生更改，使其不再符合规则中的定义，也会导致下游资源被删除。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;api-call-enhancements&#34;&gt;API 调用增强 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release -1.13/#api-call-enhancements&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;default-values&#34;&gt;默认值 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/ #默认值&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果 API 服务器返回错误，&lt;code&gt;apiCall.default&lt;/code&gt; 可用于为 API 调用上下文条目提供后备值。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下示例演示如何向上下文条目添加默认值：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt; 上下文：&#xA;    - 名称：当前命名空间&#xA;      api调用：&#xA;        urlPath: “/api/v1/namespaces/{{ request.namespace }}”&#xA;        jmesPath: 元数据.name&#xA;        默认：默认&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog /2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;custom-headers&#34;&gt;自定义标头 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/ #custom-headers&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 服务 API 调用现在也支持自定义标头。这对于身份验证或添加其他 HTTP 请求标头非常有用。以下是在 HTTP 授权标头中添加令牌的示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt; 上下文：&#xA;        - 名称：结果&#xA;          api调用：&#xA;            方法：POST&#xA;            数据：&#xA;              - 键：foo&#xA;                值： 酒吧&#xA;              - 键：命名空间&#xA;                值：“{{`{{request.namespace}}`}}”&#xA;            服务：&#xA;              网址：http://my-service.svc.cluster.local/validation&#xA;              标题：&#xA;                - 键：“用户代理”&#xA;                  值：“Kyverno 策略 XYZ”&#xA;                - 键：“授权”&#xA;                  值：“承载{{ MY_SECRET }}”&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog /2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;policy-report-enhancements&#34;&gt;政策报告增强功能 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release -1.13/#policy-report-enhancements&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;reports-for-mutate-and-generate-rules&#34;&gt;突变和生成规则的报告&lt;a href=&#34;https://kyverno.io/blog/2024/ 10/30/announcing-kyverno-release-1.13/#reports-for-mutate-and-generate-rules&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了验证和验证图像规则之外，Kyverno 1.13还支持生成和变异报告，包括变异现有策略，以记录策略结果。容器标志&lt;code&gt;--enableReporting&lt;/code&gt;可用于启用或禁用特定规则类型的报告。它允许使用逗号分隔值、validate、mutate、mutateExisting、generate 和 imageVerify。请参阅&lt;a href=&#34;https://main.kyverno.io/docs/installation/customization/#container-flags&#34;&gt;此处&lt;/a&gt;详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;结果条目将在策略报告中进行审核以进行规则决策：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：wgpolicyk8s.io/v1alpha2&lt;br&gt;种类：PolicyReport&lt;br&gt;元数据：&lt;br&gt;标签：&lt;br&gt;app.kubernetes.io /托管者：kyverno&lt;br&gt;命名空间：默认&lt;br&gt;结果：&lt;br&gt;-消息：命名空间默认&lt;br&gt;策略中的变异Pod/good-pod&lt;br&gt;策略：添加标签&lt;br&gt;结果：通过&lt;br&gt;规则：add-labels&lt;br&gt;得分：true&lt;br&gt;来源：kyverno&lt;br&gt;范围：&lt;br&gt;api版本：v1&lt;br&gt;种类：Pod&lt;br&gt;名称：good-pod&lt;br&gt; &gt; 命名空间：默认&lt;br&gt;...&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024 /10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;请注意，需要向报告控制器授予适当的权限，如果未配置 RBAC 权限，则策略准入时将返回警告消息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;custom-data-in-reports&#34;&gt;报告中的自定义数据&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing- kyverno-release-1.13/#custom-data-in-reports&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为政策报告中的自定义数据引入了新字段&lt;code&gt;reportProperties&lt;/code&gt;。例如，下面的验证规则向策略报告中添加了两个附加条目“操作”和“objName”：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：kyverno.io/v1&lt;br&gt;种类：ClusterPolicy&lt;br&gt;元数据：&lt;br&gt;名称： require-owner&lt;br&gt;规范：&lt;br&gt; 背景： false&lt;br&gt; 规则：&lt;br&gt; - 匹配：&lt;br&gt; 任何：&lt;br&gt; - 资源：&lt;br&gt; 种类：&lt;br&gt; - 命名空间&lt;br&gt; 名称: check-owner&lt;br&gt; 上下文：&lt;br&gt; - 名称：objName&lt;br&gt; 变量：&lt;br&gt; jmesPath：request.object.metadata.name&lt;br&gt; reportProperties：&lt;br&gt; 操作：&#39;{{ request.operation }} &#39;&lt;br&gt; objName: &#39;{{ objName }}&#39;&lt;br&gt; validate:&lt;br&gt;validationFailureAction: Audit&lt;br&gt; 消息: 所有命名空间都需要 `owner` 标签。&lt;br&gt;模式：&lt;br&gt;元数据：&lt;br&gt;标签：&lt;br&gt;所有者：？*&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing -kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以找到添加到 &lt;code&gt;results.properties&lt;/code&gt; 中的两个自定义条目：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：wgpolicyk8s.io/v1alpha2&#xA;种类：ClusterPolicyReport&#xA;元数据：&#xA;  业主参考资料：&#xA;  - api版本：v1&#xA;    种类：命名空间&#xA;    名称： 酒吧&#xA;结果：&#xA;- 消息：验证规则“check-owner”已通过。&#xA;  政策：要求所有者&#xA;  结果：通过&#xA;  规则：检查所有者&#xA;  得分：真实&#xA;  资料来源：基维尔诺&#xA;  特性：&#xA;    对象名称： 酒吧&#xA;    操作：创建&#xA;范围：&#xA;  api版本：v1&#xA;  种类：命名空间&#xA;  名称： 酒吧&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog /2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;globalcontextentries-enhancements&#34;&gt;GlobalContextEntries 增强&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/ #globalcontextentries-enhancements&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;api-call-retry&#34;&gt;API 调用重试 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release -1.13/#api-call-retry&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 的 GlobalContextEntry 提供了一种强大的机制来获取外部数据并在策略中使用它。当利用 apiCall 功能从 API 检索数据时，短暂的网络问题有时会阻碍成功检索。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了解决这个问题，Kyverno 现在为 GlobalContextEntry 中的 API 调用提供内置重试逻辑。您现在可以选择为 API 调用指定 retryLimit：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：kyverno.io/v2alpha1&#xA;种类：GlobalContextEntry&#xA;元数据：&#xA;  名称：gctxentry-apicall-正确&#xA;规格：&#xA;  api调用：&#xA;    urlPath: &#34;/apis/apps/v1/namespaces/test-globalcontext-apicall- Correct/deployments&#34;&#xA;    刷新间隔：1h&#xA;    重试次数限制：3&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog /2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;code&gt;retryLimit&lt;/code&gt; 字段确定 Kyverno 在最初失败时尝试进行 API 调用的次数。该字段是可选的，默认为 3，确保针对临时网络故障的合理恢复能力。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过整合此重试机制，Kyverno 进一步增强了其可靠获取外部数据的能力，确保您的策略即使在偶尔出现连接问题的情况下也能顺利运行。此增强功能提高了 Kubernetes 策略执行框架的整体稳健性和可靠性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;cli-based-injection-of-global-context-entries&#34;&gt;基于 CLI 的全局上下文条目注入&lt;a href=&#34;https://kyverno.io/博客/2024/10/30/announcing-kyverno-release-1.13/#cli-based-injection-of-global-上下文条目&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno CLI 现在允许您使用值文件动态注入全局上下文条目。此功能通过模拟不同的场景，无需修改集群中的 GlobalContextEntry 资源，可以促进灵活的策略测试和执行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您现在可以在值文件中定义全局值和特定于规则的值，从而在测试期间更好地控制策略评估。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：cli.kyverno.io/v1alpha1&#xA;种类：价值&#xA;元数据：&#xA;  名称：值&#xA;全球价值观：&#xA;  请求.操作：创建&#xA;政策：&#xA;  - 名称：gctx&#xA;    规则：&#xA;      - 名称：主部署存在&#xA;        价值观：&#xA;          部署数量：1&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog /2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在此示例中，&lt;code&gt;request.operation&lt;/code&gt; 设置为全局值，并为 gctx 政策中的特定规则设置部署计数。使用 Kyverno CLI 时，您可以引用此值文件将这些全局上下文条目注入到您的策略评估中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;security-hardening&#34;&gt;安全强化&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/ #安全强化&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 项目致力于确保安全和生产就绪，同时提供易用性。此版本包含进一步增强项目安全性的重要更改。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;removal-of-wildcard-roles&#34;&gt;移除通配符角色 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing- kyverno-release-1.13/#removal-of-wildcard-roles&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 的早期版本包含通配符查看权限。这些已在 1.13 中删除，并替换为绑定到系统视图角色的角色。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此更改不会影响准入控制期间的策略行为，但可能会影响使用 mutate 的用户并为自定义资源生成策略，并且可能会影响自定义资源验证规则的策略结果的报告 添加了 Helm 选项以升级 Kyverno 而不会破坏现有政策，请参阅&lt;a href=&#34;https://main.kyverno.io/docs/installation/upgrading/#upgrading-to-kyverno-v113&#34;&gt;此处&lt;/a&gt;的升级指南。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;removal-of-insecure-configuration-for-exceptions&#34;&gt;删除异常的不安全配置&lt;a href=&#34;https://kyverno.io/blog/2024/ 10/30/announcing-kyverno-release-1.13/#removal-of-insecure-configuration-for-exceptions&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在之前的版本中，所有命名空间都允许策略例外。这会产生潜在的安全问题，因为任何有权创建策略例外的用户都可以绕过策略，即使在其他命名空间中也是如此。请参阅&lt;a href=&#34;https://github.com/kyverno/kyverno/security/advisories/GHSA-qjvc-p88j-j9rm&#34;&gt;CVE-2024-48921&lt;/a&gt; 了解更多详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此版本更改了默认设置以禁用策略异常，并且仅允许在指定命名空间中创建异常。要保持向后兼容性，请遵循&lt;a href=&#34;https://main.kyverno.io/docs/installation/upgrading/#upgrading-to-kyverno-v113&#34;&gt;升级指南&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;warnings-for-policy-violations-and-mutations&#34;&gt;政策违规和变更警告&lt;a href=&#34;https://kyverno.io/blog/2024/ 10/30/announcing-kyverno-release-1.13/#warnings-for-policy-violations-and-mutations&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在可以通过策略设置 &lt;code&gt;spec.emitWarning&lt;/code&gt; 返回一条警告消息以及准入响应，这可用于报告政策违规行为以及准入事件的突变。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;shallow-evaluation-of-variables&#34;&gt;变量的浅评估&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing- kyverno-release-1.13/#shallow-evaluation-of-variables&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 默认执行嵌套变量替换，这在某些情况下可能并不理想。以下面的 ConfigMap 为例，它使用与 Kyverno 中变量语法相同的 &lt;code&gt;{{ }}&lt;/code&gt; 表示法定义 &lt;code&gt;.hcl&lt;/code&gt; 字符串内容。在这种情况下，需要指示 Kyverno 不要尝试解析 HCL 中的变量，这可以通过变量浅（仅一次）替换的 &lt;code&gt;{{- ... }}&lt;/code&gt; 表示法来实现.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：v1&#xA;数据：&#xA;  配置：|-&#xA;    来自字符串&#xA;    {{ 一些 hcl 模板 }}    &#xA;种类：ConfigMap&#xA;元数据：&#xA;  注释：&#xA;  标签：&#xA;    argocd.development.cpl.&lt;已删除&gt;.co.at/app: corp-tech-ap-team-ping-ep&#xA;  名称：vault-injector-config-http-echo&#xA;  命名空间：corp-tech-ap-team-ping-ep&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog /2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了仅用 HCL 替换规则数据，而不执行嵌套替换，以下策略使用声明 &lt;code&gt;{{- hcl }}&lt;/code&gt; 进行浅替换。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code lang=&#34;yaml&#34; class=&#34;language-yaml&#34;&gt;api版本：cli.kyverno.io/v1alphaapi版本：kyverno.io/v1&#xA;种类：集群策略&#xA;元数据：&#xA;  名称：vault-auth-backend&#xA;规格：&#xA;  validationFailureAction：审核&#xA;  背景：真实&#xA;  mutateExistingOnPolicyUpdate：true&#xA;  规则：&#xA;  - 名称：vault-injector-config-blue-to-green-auth-backend&#xA;    语境：&#xA;    - 名称：hcl&#xA;      多变的：&#xA;        jmesPath：replace_all(&#39;{{ request.object.data.config }}&#39;,&#39;from_string&#39;,&#39;to_string&#39;)&#xA;    匹配：&#xA;      任何：&#xA;      - 资源：&#xA;          种类：&#xA;          - 配置映射&#xA;          名称：&#xA;          - 测试-*&#xA;          命名空间：- corp-tech-ap-team-ping-ep&#xA;    变异：&#xA;      补丁策略合并：&#xA;        数据：&#xA;          配置：&#39;{{- hcl }}&#39;&#xA;      目标：&#xA;      - api版本：v1&#xA;        种类：ConfigMap&#xA;        名称：&#39;{{ request.object.metadata.name }}&#39;&#xA;        命名空间：&#39;{{ request.object.metadata.namespace }}&#39;&#xA;    名称：vault-injector-config-blue-to-green-auth-backend&#xA;&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://kyverno.io/blog /2024/10/30/announcing-kyverno-release-1.13/#&#34;&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;improved-argocd-integration&#34;&gt;改进的 ArgoCD 集成&lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release -1.13/#improved-argocd-integration&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;卸载时，Kyverno 管理的 Webhook 配置会自动清理。如果 Kyverno 在给定随机资源删除顺序的情况下失去 RBAC 权限，则此行为可能会被破坏。此版本引入了基于终结器的清理解决方案，以确保成功删除 Webhook。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此功能处于&lt;a href=&#34;https://main.kyverno.io/docs/installation/uninstallation/#clean-up-webhooks&#34;&gt;测试阶段&lt;/a&gt;，将用作默认清理功能未来的战略。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;api-version-management&#34;&gt;API 版本管理 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release -1.13/#api-版本管理&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 引入了策略 CRD 的新变化：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;政策例外和清理政策均已升级为稳定版本 (v2)。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;多项政策设置已弃用：&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;spec.validationFailureAction&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.validationFailureActionOverrides&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.mutateExistingOnPolicyUpdate&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.generateExisting&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;这些规则已被规则本身内更精细的控制所取代：&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;spec.rules[*].validate.failureAction&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.rules[*].validate.failureActionOverrides&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.rules[&lt;em&gt;].verifyImages[&lt;/em&gt;].failureAction&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.rules[*].mutate.mutateExisting&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;spec.rules[*].generate.generateExisting&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;请注意，已弃用的字段将在未来版本中删除，因此建议迁移到新设置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;conclusion&#34;&gt;结论 &lt;a href=&#34;https://kyverno.io/blog/2024/10/30/announcing-kyverno-release-1.13/#conclusion&#34; &gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kyverno 1.13 有望成为一个出色的版本，包含许多新功能、增强功能和修复。要开始使用 Kyverno，请尝试&lt;a href=&#34;https://kyverno.io/docs/introduction/quick-start/&#34;&gt;快速入门指南&lt;/a&gt;或前往&lt;a href=&#34;https:// kyverno.io/docs/installation/methods/&#34;&gt;文档的安装&lt;/a&gt;部分。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要充分发挥 Kyverno 的价值，请查看e &lt;a href=&#34;https://kyverno.io/support/&#34;&gt;可用的企业解决方案&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 06 Nov 2024 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>