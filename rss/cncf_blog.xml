<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://rsshub.rssforever.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【Kagent: Bringing Agentic AI to Cloud Native】Kagent：将代理AI带到云原生</title>
      <link>https://www.cncf.io/blog/2025/04/15/kagent-bringing-agentic-ai-to-cloud-native/</link>
      <description>【&lt;p&gt;&lt;em&gt;Solving Cloud Native Operation Challenges with AI Agents&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Oh no! Your application is unreachable, buried under multiple connection hops—how do you pinpoint the broken link? How do you generate an alert or bug report from Prometheus when certain conditions are met? You need to roll out a new version of your application—how do you execute a progressive rollout using Argo Rollouts? How do you safely enable zero trust network security when your application scales beyond a single cluster or cloud? With so many projects in the cloud native ecosystem, how do you figure out which ones are right for your needs and layer them together with proper configuration management?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sound familiar? As a leader in cloud networking, security, and reliability, we hear these questions all the time from platform and DevOps engineers working with CNCF projects like Kubernetes, Envoy, Istio, Prometheus, and Argo. Our customer-facing engineers often resolve these issues independently, but sometimes we need to pull in other internal experts or specialists.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we continue to scale out and support many more customers, we asked ourselves: how can we leverage our in-house expertise more efficiently? Could we clone our top experts to assist with these issues? This led to a &lt;strong&gt;lightbulb&lt;/strong&gt; moment—why not build &lt;strong&gt;AI agents&lt;/strong&gt; to tackle common challenges and support our engineers and customers? Why not create a catalog of AI agents for the cloud native ecosystem, enabling everyone to run, build, and share AI-driven solutions?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;What is kagent?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You’ve probably interacted with ChatGPT, an AI chatbot that provides natural language responses. &lt;strong&gt;Agentic AI&lt;/strong&gt;, however, goes beyond simple chat interactions—it uses advanced reasoning and iterative planning to autonomously solve complex, non-deterministic multi-step problems, turning insights into actions that enhance productivity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;What if we applied agentic AI to the day-to-day operational challenges faced by cloud native engineers? That’s where &lt;strong&gt;kagent&lt;/strong&gt; comes in.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kagent is an &lt;strong&gt;open source programming framework&lt;/strong&gt; designed for DevOps and platform engineers to run AI agents in Kubernetes. It helps engineers build powerful internal platforms by tackling cloud native tasks such as configuration, troubleshooting, complex deployment scenarios, observability pipelines and dashboards, and safely enabling network security (like mTLS, authentication/authorization changes, etc). Recognizing that different users have different challenges, we designed kagent to be extensible—allowing DevOps engineers, platform teams, and tool developers to create and share their own AI agents.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Built on Microsoft’s &lt;a href=&#34;https://www.microsoft.com/en-us/research/project/autogen/&#34;&gt;AutoGen&lt;/a&gt; open source framework, kagent provides a powerful foundation for AI-driven solutions in cloud native environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Architecture of kagent&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kagent is built on three key layers: &lt;strong&gt;Tools, Agents, and the Framework&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXciHjrqfKyOvQXgWZnchq4-ux1rH-NxCldtxncnRCMTO--tdZOgejIFi25tvgbvbp9mIORUSZfse6jqzv4uDLfBBRPOPTVUZ1sYmQETOYmtE0Ccs23-u5NZUtCB46y9UDagDeOWjA?key=vrB2mvSltTwhi2yrFk1pKy8A&#34; alt=&#34;Three layers: tools, agents, framework&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Pre-defined functions that AI agents can use, such as sending emails, searching a database, displaying pod logs, or calling external APIs. Users can integrate Model Context Protocol (&lt;a href=&#34;https://modelcontextprotocol.io/introduction&#34;&gt;MCP&lt;/a&gt;) servers as tools or build custom tools.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Agents&lt;/strong&gt;: Autonomous systems capable of planning, executing tasks, analyzing results, and continuously improving outcomes. Agents utilize one or more tools to accomplish objectives.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Framework&lt;/strong&gt;: A simple interface to run agents via UI or declaratively. The framework is fully extensible, allowing users to develop new tools or agents, or extend the framework itself.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Based on our experience, we’ve built tools to interact with &lt;strong&gt;Kubernetes&lt;/strong&gt;, &lt;strong&gt;Prometheus&lt;/strong&gt;, &lt;strong&gt;Istio&lt;/strong&gt;, and &lt;strong&gt;Argo&lt;/strong&gt;, along with AI agents to autonomously solve some of the most common cloud native problems.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Join the kagent Community&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’re a &lt;strong&gt;platform or DevOps engineer&lt;/strong&gt;, and leveraging AI agents to solve cloud native operation challenges excites you, or if you’re a &lt;strong&gt;developer or CNCF project maintainer&lt;/strong&gt; interested in building AI agents to enrich our ecosystem, we’d love to collaborate!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://kagent.io/&#34;&gt;website&lt;/a&gt; and &lt;a href=&#34;https://github.com/kagent-dev/kagent/&#34;&gt;GitHub&lt;strong&gt; &lt;/strong&gt;repository&lt;/a&gt;. Follow our getting started guide to experiment with AI agents in your Kubernetes cluster, and contribute your own agents and tools to extend the cloud native AI ecosystem. Join the discussion in the #kagent channel on &lt;a href=&#34;https://communityinviter.com/apps/cloud-native/cncf&#34;&gt;CNCF Slack&lt;/a&gt;—we’d love to hear from you!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s build the future of AI agents to solve cloud native operation challenges, together.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; &lt;em&gt;用AI代理解决云原生操作挑战&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;哦，不！您的应用程序无法到达，被埋葬在多个连接啤酒花下 - 您如何查明断开的链接？满足某些条件时，如何从普罗米修斯产生警报或错误报告？您需要推出应用程序的新版本 - 您如何使用Argo推出执行渐进的推出？当您的应用程序扩展到一个群集或云时，如何安全地启用零信任网络安全性？在云本机生态系统中有如此多的项目，您如何确定哪些项目适合您的需求并与适当的配置管理一起分层？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;听起来很熟悉吗？作为云网络，安全性和可靠性的领导者，我们一直都从平台和DevOps工程师那里听到这些问题，以及与Kubernetes，Envoy，Istio，Prometheus和Argo等CNCF项目合作的工作。面向客户的工程师经常独立解决这些问题，但有时我们需要吸引其他内部专家或专家。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着我们继续扩展并支持更多客户，我们问自己：我们如何更有效地利用我们的内部专业知识？我们可以克隆我们的顶级专家来协助这些问题吗？这导致了&lt;strong&gt; Lightbulb &lt;/strong&gt;时刻 - 为什么不建立&lt;strong&gt; AI代理&lt;/strong&gt;来应对共同的挑战并支持我们的工程师和客户？为什么不为Cloud Native生态系统创建AI代理的目录，使每个人都可以运行，构建和共享AI驱动的解决方案？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;什么是kagent？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可能已经与Chatgpt进行了互动，Chatgpt是一个提供自然语言响应的AI聊天机器人。但是，&lt;strong&gt;代理AI &lt;/strong&gt;超越了简单的聊天互动 - 它使用先进的推理和迭代计划来自主解决复杂的，非确定性的多步骤问题，将见解转化为提高生产力的行动。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果我们将代理AI应用于云土著工程师面临的日常运营挑战怎么办？那就是&lt;strong&gt; kagent &lt;/strong&gt;进来的地方。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kagent是&lt;strong&gt;开源编程框架&lt;/strong&gt;为DevOps和平台工程师设计的，以在Kubernetes运行AI代理。它通过解决云本机任务（例如配置，故障排除，复杂的部署方案，可观察性管道和仪表板）来帮助工程师构建强大的内部平台，并安全地启用网络安全性（例如MTL，身份验证/授权更改等）。认识到不同用户面临不同的挑战，我们设计了Kagent可以扩展的 - 允许DevOps工程师，平台团队和工具开发人员创建和共享自己的AI代理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;建立在Microsoft的&lt;a href =“ https://www.microsoft.com/en-us/research/project/project/autogen/”&gt; autogen &lt;/a&gt;开源框架中，Kagent为AI驱动的解决方案提供了强大的基础In云本机环境。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; kagent的体系结构&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kagent建立在三个关键层上：&lt;strong&gt;工具，代理和框架&lt;/strong&gt;。&lt;/p&gt;。&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxcihjrqfkyovqxgxgwznchq4-ux1rh-nxcldtxncncnrcmto-tdzogejifi2 5TVGBVBP9MioruszfSe6JQZV4UDLFBBRPOPTVUZ1SYMQETOYMTE0CCS23-U5NZUTCB46Y9UDAGDEOWJA？ alt =“三层：工具，代理，框架” reverrerpolicy =“ no-referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;工具&lt;/strong&gt;：AI代理可以使用的预定义功能，例如发送电子邮件，搜索数据库，显示POD日志或调用外部API。用户可以集成模型上下文协议（&lt;a href =“ https://modelcontextprotocol.io/introduction”&gt; mcp &lt;/a&gt;）服务器作为工具或构建自定义工具。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;代理&lt;/strong&gt;：能够计划，执行任务，分析结果并不断改善结果的自主系统。代理使用一种或多种工具来实现目标。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;框架&lt;/strong&gt;：一个简单的接口通过UI或声明性地运行代理。该框架是完全可扩展的，允许用户开发新的工具或代理，或扩展框架本身。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;根据我们的经验，我们建立了与&lt;strong&gt; kubernetes &lt;/strong&gt;，&lt;strong&gt; prometheus &lt;/strong&gt;，&lt;strong&gt; istio &lt;/strong&gt;和&lt;strong&gt; argo &lt;/strong&gt;的工具，以及AI代理，以自动解决一些最常见的云本土问题。&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;加入Kagent社区&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您是&lt;strong&gt;平台或DevOps Engineer &lt;/strong&gt;，并且利用AI代理来解决云的本地操作会挑战您，或者如果您是&lt;strong&gt;开发人员或CNCF项目维护者&lt;/strong&gt;感兴趣的人&lt;/strong&gt;有兴趣建立AI代理以丰富我们的生态系统，那么我们喜欢协作！&#xA;&#xA;&#xA;&#xA;&lt;p&gt;查看我们的&lt;a href =“ https://kagent.io/”&gt;网站&lt;/a&gt;和&lt;a href =“ https://github.com/kagent-dev/kagent/kagent/”&gt; github &lt;strong&gt; &lt;strong&gt; &lt;/strong&gt; &lt;/strong&gt; reposority &lt;/a&gt;。请遵循我们的入门指南，与您的Kubernetes集群中的AI代理进行实验，并为您自己的代理和工具贡献扩展云本机AI生态系统。在&lt;a a href =“ https://communityinviter.com/apps/cloud-native/cncf”上加入#kagent频道中的讨论。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们建立AI代理的未来，以解决云的本地操作挑战。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 14 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Istio publishes results of ztunnel security audit】ISTIO发布了Ztunnel安全审核的结果</title>
      <link>https://www.cncf.io/blog/2025/04/23/istio-publishes-results-of-ztunnel-security-audit/</link>
      <description>【&lt;p&gt;&lt;em&gt;Passes with flying colors&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Istio’s ambient mode splits the service mesh into two distinct layers: Layer 7 processing (the “&lt;a href=&#34;https://istio.io/latest/docs/ambient/usage/waypoint/&#34;&gt;waypoint proxy&lt;/a&gt;”), which remains powered by the traditional Envoy proxy; and a secure overlay (the “zero-trust tunnel” or “&lt;a href=&#34;https://github.com/istio/ztunnel&#34;&gt;ztunnel&lt;/a&gt;”), which is &lt;a href=&#34;https://istio.io/latest/blog/2023/rust-based-ztunnel/&#34;&gt;a new codebase&lt;/a&gt;, written from the ground up in Rust.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It is our intention that the ztunnel project be safe to install by default in every Kubernetes cluster, and to that end, it needs to be secure and performant.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We comprehensively demonstrated ztunnel’s performance, showing that it is &lt;a href=&#34;https://istio.io/latest/blog/2025/ambient-performance/&#34;&gt;the highest-bandwidth way to achieve a secure zero-trust network in Kubernetes&lt;/a&gt; — providing higher TCP throughput than even in-kernel data planes like IPsec and WireGuard — and that its performance has increased by 75% over the past 4 releases.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Today, we are excited to validate the security of ztunnel, publishing &lt;a href=&#34;https://ostif.org/wp-content/uploads/2025/04/Istio-Ztunnel-Final-Summary-Report-1.pdf&#34;&gt;the results of an audit of the codebase&lt;/a&gt; performed by &lt;a href=&#34;https://www.trailofbits.com/&#34;&gt;Trail of Bits&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We would like to thank the &lt;a href=&#34;https://cncf.io/&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; for funding this work, and &lt;a href=&#34;https://ostif.org/istio-ztunnel-audit-complete/&#34;&gt;OSTIF for its coordination&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Scope and overall findings&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Istio has been assessed in &lt;a href=&#34;https://istio.io/latest/blog/2021/ncc-security-assessment/&#34;&gt;2020&lt;/a&gt; and &lt;a href=&#34;https://istio.io/latest/blog/2023/ada-logics-security-assessment/&#34;&gt;2023&lt;/a&gt;, with the Envoy proxy &lt;a href=&#34;https://github.com/envoyproxy/envoy#security-audit&#34;&gt;receiving independent assessment&lt;/a&gt;. The scope of this review was the new code in Istio’s ambient mode, the ztunnel component: specifically code relating to L4 authorization, inbound request proxying, transport-layer security (TLS), and certificate management.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The auditors stated that “the ztunnel codebase is well-written and structured”, and had no findings relating to vulnerabilities in the code. Their three findings — one of medium severity and two of informational — refer to recommendations regarding external factors, including software supply chain and testing.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Resolution and suggested improvements&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Improving dependency management&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At the time of the audit, the &lt;a href=&#34;https://crates.io/crates/cargo-audit&#34;&gt;cargo audit&lt;/a&gt; report for ztunnel’s dependencies showed three versions with current security advisories. There was no suggestion that any vulnerable code paths in ztunnel dependencies could be reached, and the maintainers would regularly update the dependencies to the latest appropriate versions. To streamline this, we’ve &lt;a href=&#34;https://github.com/istio/ztunnel/pull/1400&#34;&gt;adopted GitHub’s Dependabot&lt;/a&gt; for automated updates.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The auditors pointed out the risk of Rust crates in the dependency chain of ztunnel that either unmaintained or maintained by a single owner. This is a common situation in the Rust ecosystem (and indeed all of open source). We replaced the two crates that were explicitly identified.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Enhancing test coverage&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Trail of Bits team found that most ztunnel functionality is well-tested, but identified some error-handling code paths which were not covered by &lt;a href=&#34;https://mutants.rs/&#34;&gt;mutation testing&lt;/a&gt;.&lt;br&gt;&lt;br&gt;We evaluated the suggestions and found that the gaps in coverage highlighted by these results apply to test code, and to code that does not affect correctness.&lt;br&gt;&lt;br&gt;While mutation testing is useful to identify potential areas to improve, the goal is not to get to a point where a report returns no results. Mutations can trigger no test failures in a number of expected cases, such as behavior with no ‘correct’ result (e.g., log messages), behavior that impacts only performance but not correctness (measured outside of the scope the tooling is aware of), code paths that have multiple ways to achieve the same result, or code used only for testing. Testing and security is a core priority for the Istio team and we are constantly improving our test coverage — using tools like mutation testing and by &lt;a href=&#34;https://blog.howardjohn.info/posts/ztunnel-testing/&#34;&gt;developing novel solutions&lt;/a&gt; to testing proxies.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Hardening HTTP header parsing&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A third-party library was used for parsing the value of the HTTP &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Forwarded&#34;&gt;Forwarded&lt;/a&gt; header, which may be present on connections made to ztunnel. The auditors pointed out that header parsing is a common area of attack, and expressed concern that the library we used was not fuzz tested. Given that we were only using this library for parsing one header, we &lt;a href=&#34;https://github.com/istio/ztunnel/pull/1418&#34;&gt;wrote a custom parser for the Forwarded header&lt;/a&gt;, complete with a fuzzing harness to test it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Get involved&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With strong performance and now validated security, ambient mode continues to advance the state of the art in service mesh design. We encourage you to try it out today.&lt;br&gt;&lt;br&gt;If you would like to get involved with Istio product security, or become a maintainer, we’d love to have you! Join &lt;a href=&#34;https://slack.istio.io/&#34;&gt;our Slack workspace&lt;/a&gt; or &lt;a href=&#34;https://github.com/istio/community/blob/master/WORKING-GROUPS.md&#34;&gt;our public meetings&lt;/a&gt; to raise issues or learn about what we are doing to keep Istio secure.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; &lt;em&gt;与飞行色彩通过&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; istio的环境模式将服务网格分为两个不同的层：第7层处理（“ &lt;a href =” https://istio.io.io.io/latest/docs/bambient/usage/usage/waypoint/“&gt; waypoint Proxy Proxy &lt;/a&gt;”），仍然由传统的传统源发动机驱动； and a secure overlay (the “zero-trust tunnel” or “&lt;a href=&#34;https://github.com/istio/ztunnel&#34;&gt;ztunnel&lt;/a&gt;”), which is &lt;a href=&#34;https://istio.io/latest/blog/2023/rust-based-ztunnel/&#34;&gt;a new codebase&lt;/a&gt;, written from the ground up in生锈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的意图是，默认情况下，Ztunnel项目可以安全地安装在每个Kubernetes群集中，为此，它需要安全且性能。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们全面证明了Ztunnel的表现，表明它是&lt;a href =“ https：//istio.io.io.io/latest/blog/2025/ambient-performance/”&gt;最高的方法是实现kubernetes and the tcp and tht Planse的最高范围，以实现安全的零-trust Network &lt;/a&gt;  - 甚至是ITIP的数据 - 在过去的4个发行版中，其性能增长了75％。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今天，我们很高兴验证Ztunnel的安全性，发布&lt;a href =“ https://ostif.org/wp-content/uploads/2025/2025/04/istio-ztunnel-final-summary-summary-report-report-1.pdf- href =“ https://www.trailofbits.com/”&gt; BITS的踪迹&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们要感谢&lt;a href =“ https://cncf.io/”&gt;云本机计算基金会&lt;/a&gt;为这项工作提供资金，&lt;a href =“ https://ostif.org/istio-ztunnel-audit-complete/&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-neading”&gt;范围和整体发现&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; iStio已在&lt;a href =“ https://istio.io.io.io.io.io/latest/blog/2021/ncc-security-assessment/”&gt; 2020 &lt;/a&gt;和&lt;a href =“代理&lt;a href =“ https://github.com/envoyproxy/envoy#security-audit”&gt;接受独立评估&lt;/a&gt;。此评论的范围是ISTIO环境模式下的新代码，即Ztunnel组件：专门与L4授权，入站请求代理，运输层安全性（TLS）和证书管理有关的代码。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;审计师说：“ Ztunnel代码库是写得很好且结构化的”，并且没有与代码中漏洞有关的发现。他们的三个发现 - 中等严重性和两个信息的发现 - 是指有关外部因素的建议，包括软件供应链和测试。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ WP-block-neading”&gt;分辨率和建议的改进&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt;改善依赖关系管理&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在审核时，&lt;a href =“ https://crates.io/crates/cargo-audit”&gt;货物审核&lt;/a&gt; Ztunnel依赖关系的报告显示了三个具有当前安全咨询的版本。没有建议在ztunnel依赖关系中有任何脆弱的代码路径cou可以联系LD，并且维护人员会定期将依赖项更新为最新的适当版本。要简化此内容，我们&lt;a href =“ https://github.com/istio/ztunnel/pull/1400”&gt;通过GitHub的Dispripabot &lt;/a&gt;用于自动化更新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;审计师指出，在Ztunnel的依赖关系链中，由单个所有者毫不生计或维护的依赖性链条中有生锈的风险。这是锈生态系统（甚至是所有开源）中的普遍情况。我们更换了明确识别的两个板条箱。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ WP-block-neading”&gt;增强测试覆盖范围&#xA;&#xA;&#xA;&#xA;&lt;p&gt;小组的踪迹发现大多数Ztunnel功能都经过了经过测试，但确定了一些错误处理代码路径，这些路径未覆盖，这些路径未涵盖，&lt;a href =“ https：//mutants.rs/”&gt;突变测试&lt;/a&gt;。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;我们评估了这些建议，并发现了这些范围，以适用于覆盖范围，以适用于覆盖范围，以适用于范围，以适用于结果，并在结果上处理了结果。正确性。&lt;br&gt; &lt;br&gt;虽然突变测试对于确定可以改进的潜在领域很有用，但目标不是要达到报告没有返回结果的地步。突变可以触发许多预期案例中没有测试失败，例如没有“正确”结果的行为（例如，日志消息），仅影响性能但不正确的行为（在工具范围之外测量工具所意识到的范围之外），具有多种方法可以实现相同结果或仅用于测试的代码的代码路径。测试和安全性是ISTIO团队的核心优先事项，我们正在不断改进测试覆盖范围 - 使用突变测试和&lt;a href =“ https://blog.howardjohn.info/posts/posts/ztunnel-testing/”&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用第三方库来解析http &lt;a href =“ https://developer.mozilla.org/en-us/us/docs/web/web/http/reference/headers/headers/forwarded”&gt;转发&lt;/a&gt; header to to ztunnel的连接。审计师指出，标题解析是一个常见的攻击领域，并表示对我们使用的库未经过模糊测试表示担忧。 Given that we were only using this library for parsing one header, we &lt;a href=&#34;https://github.com/istio/ztunnel/pull/1418&#34;​​&gt;wrote a custom parser for the Forwarded header&lt;/a&gt;, complete with a fuzzing harness to test it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;参与&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;具有强大的性能并验证了安全性，环境模式继续推进服务网格设计中的最新状态。我们鼓励您今天尝试一下。&lt;br&gt; &lt;br&gt;如果您想参与ISTIO产品安全，或者成为维护者，我们很乐意拥有您！加入&lt;a href =“ https://slack.istio.io/”&gt;我们的松懈工作区&lt;/a&gt;或&lt;a href =“ https://github.com/istio/istio/community/community/community/community/blob/master/master/working-groups.md-.md&gt;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 22 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Building AuthZed with the power of cloud native: A CNCF success story】用云原生的力量授权的建筑：CNCF成功故事</title>
      <link>https://www.cncf.io/blog/2025/04/22/building-authzed-with-the-power-of-cloud-native-a-cncf-success-story/</link>
      <description>【&lt;p&gt;&lt;em&gt;At the Cloud Native Computing Foundation (CNCF), we celebrate organizations that turn cloud native technologies into real-world impact. &lt;a href=&#34;https://authzed.com/&#34;&gt;AuthZed&lt;/a&gt;, a CNCF Silver member, is one such story—a company built from the ground up on open source, community-driven innovation.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;From the start, AuthZed set out to build a global-scale authorization platform entirely on CNCF projects like Kubernetes, OpenTelemetry, and gRPC. The result: a scalable, observable, and high-performance system that works seamlessly across environments.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;In this blog, cofounder Jimmy Zelinskie shares how deep roots in the cloud native ecosystem—from building Quay.io to shaping the Operator Framework—shaped AuthZed’s architecture. Their story is more than a case study—it’s a model for modern infrastructure done right.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At &lt;a href=&#34;https://authzed.com/&#34;&gt;AuthZed&lt;/a&gt;, CNCF technologies are more than just tools—they’re the foundation of everything we’ve built. From the very beginning, our entire product has been architected with CNCF projects at its core. Without this ecosystem, we simply wouldn’t be able to deliver our product effectively to customer environments in a consistent, reliable way.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The founders of AuthZed have been involved in the cloud native community since its early days. We created Quay.io as the first enterprise Docker registry before the term “cloud native” was widely adopted, and have contributed to Kubernetes, have acted as OCI maintainers, and helped shape the Operator Framework we know today. Our team has lived and breathed cloud native principles, so when it came time to build AuthZed, turning to these technologies felt natural.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The challenge: A lack of standards&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Building a performant, reliable, and observable authorization service that functions consistently everywhere is inherently complex. Our background in the evolving cloud native space made it clear: legacy deployment and management methods, which lacked standardized APIs for orchestration, telemetry, and automated upgrades, simply couldn’t meet these demands effectively at scale. How could we ensure a globally-available, low-latency service, trace requests across distributed systems, and manage deployment lifecycles reliably without a common operational toolkit?&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For AuthZed, adopting CNCF projects wasn’t just a “nice to have”- it was a foundational requirement defined by our architecture from the outset, addressing the inherent complexities of delivering highly-available authorization infrastructure at global scale. We are thankful we have always had cloud native technologies available to us since we discovered the &lt;a href=&#34;https://authzed.com/z/google-zanzibar-annotated-paper&#34;&gt;Google Zanzibar paper&lt;/a&gt;, Google’s consistent global authorization system, and were inspired to create AuthZed to help enterprises solve authorization issues at scale.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The CNCF advantage: A cohesive, scalable ecosystem&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The AuthZed core infrastructure relies on these essential CNCF projects.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes provides a cloud-agnostic deployment platform, allowing us to package &lt;a href=&#34;https://authzed.com/spicedb&#34;&gt;SpiceDB&lt;/a&gt; in containers and manage it predictably anywhere. We leverage the Operator pattern, drawing on our team’s early experience developing the first operators, to automate complex deployment and upgrade tasks, simplifying operations for both our SaaS offering and customer-managed instances.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry gives us standard tooling needed to emit tracing, metrics, and logs, ensuring we can deliver meaningful insights and traceability into request flows and performance bottlenecks. Importantly, its vendor-neutral design ensures telemetry integrates easily with customers’ diverse monitoring tools like Prometheus, Jaeger, or DataDog.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;gRPC serves as the high-throughput, low-latency backbone SpiceDB requires in order to handle complex authorization workloads at scale. We use it for internal service traffic and as the primary SpiceDB API, relying on its efficiency and the stable API contracts defined via Protobufs, which support clients across many languages.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Measurable impact: Enabling innovation at scale&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thanks to the CNCF ecosystem, not only were we able to build our product in the first place, but we’ve also been able to scale it to meet the needs of our customers. The broad industry adoption of these technologies has enabled us to deliver solutions that are performant, interoperable, and deeply aligned with our users’ existing infrastructure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;A final insight: Standardization drives success&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One of the most valuable—yet often overlooked—benefits of CNCF technologies is the standardization they bring. Because our customers use the same tools and methodologies we do, diagnosing and resolving issues becomes dramatically easier for our support teams. This shared foundation accelerates troubleshooting, reduces friction, and ultimately leads to better outcomes for everyone involved.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At Authzed, CNCF technologies aren’t just part of our stack—they’re at the heart of our success.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Additional resources:&lt;/strong&gt;&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=FTDMpeqj1B0&#34;&gt;Building a managed database service with Kubernetes Operators&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=cH7z8yzDucM&#34;&gt;Running Low latency Workloads on Kubernetes&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Have your own cloud native story to tell?&lt;/strong&gt;&lt;br&gt;We’re always looking to spotlight innovative use cases, community contributions, and production success stories built on CNCF projects. If your organization is solving real-world problems with cloud native technologies, submit your story here and share your journey with the broader community.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s continue building the future of cloud native—together. &lt;a href=&#34;https://www.surveymonkey.com/r/cncfmemberstory&#34;&gt;Submit your story here.&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-buttons is-layout-flex wp-block-buttons-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-button&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://www.cncf.io/about/join/silver/&#34;&gt;Explore Silver Membership Today&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; &lt;em&gt;在Cloud Native Computing Foundation（CNCF）中，我们庆祝将云本地技术变成现实世界影响的组织。 &lt;a href =“ https://authzed.com/”&gt; authzed &lt;/a&gt;，CNCF银色成员就是这样的故事，这是一家从开放源代码上建立的公司，社区驱动的创新。&lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt;从一开始，就开始构建一个全球规模的授权平台，完全在CNCF项目上，例如Kubernetes，OpentElemetry和GRPC。结果：一个可扩展，可观察和高性能的系统，在环境之间无缝工作。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt;在此博客中，联合创始人吉米·泽林斯基（Jimmy Zelinskie）分享了云本机生态系统中的深层根源 - 从构建quay.io到塑造操作员框架，形成了验证的架构。他们的故事不仅仅是一个案例研究，它是现代基础设施正确的模型。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; at &lt;a href =“ https://authzed.com/”&gt; authzed &lt;/a&gt;，CNCF Technologies不仅仅是工具 - 它们是我们建造的一切的基础。从一开始，我们的整个产品就构建了CNCF项目的核心。没有这个生态系统，我们根本就无法以一致，可靠的方式有效地将产品交付给客户环境。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自早期就开始参与云土著社区的创始人。在广泛采用“云本地”一词之前，我们创建了Quay.io作为第一个企业Docker注册表，并已为Kubernetes做出了贡献，已成为OCI维护者，并帮助塑造了我们今天知道的操作员框架。我们的团队已经生活和呼吸了云原则，因此，当建造拟合时，这些技术就会感到自然。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;挑战：缺乏标准&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;构建一种绩效，可靠且可观察到的授权服务，该服务在任何地方都始终如一地发挥作用。我们在不断发展的云原生空间中的背景明确了：传统部署和管理方法缺乏编排，遥测和自动升级的标准化API，根本无法在大规模上有效地满足这些需求。我们如何确保全球可用，低延迟服务，跨分布式系统的跟踪请求，并在没有常见的操作工具包的情况下可靠地管理部署生命周期？ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于授权，采用CNCF项目不仅是“善于拥有”  - 这是我们从一开始就定义的基本要求，解决了在全球规模上提供高度可用的授权基础架构的固有复杂性。我们很感激我们一直都有云本地技术，因为我们发现&lt;a href =“ https://authzed.com/z/google-zanzibar-antot-paper”&gt; google zanzibar Paper &lt;/a&gt; Google一致的全球授权系统，并受到了启发，并受到了启发，并受到了启发。帮助企业大规模解决授权问题。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;授权的核心基础架构依赖于这些基本CNCF项目。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubernetes提供了一个云 - 不合时宜的部署平台，使我们可以打包&lt;a href =“ https://authzed.com/spedb”&gt; spicdb &lt;/a&gt;在容器中&lt;/a&gt;在任何地方都可以预测。我们利用操作员模式，利用团队的早期经验开发第一个操作员，自动化复杂的部署和升级任务，简化我们的SaaS产品和客户管理的实例的操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; OpentElemetry为发射跟踪，指标和日志所需的标准工具提供了标准的工具，以确保我们可以将有意义的见解和可追溯性传递到请求流和性能瓶颈中。重要的是，其供应商中立的设计可确保遥测可以轻松地与客户的多样化监视工具（如Prometheus，Jaeger或Datadog）集成。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; GRPC用作高通量，低延迟的骨干SPIDEDB需要的，以便按大规模处理复杂的授权工作负载。我们将其用于内部服务流量，并作为主要的SpiedB API，依赖于其效率和通过Protobufs定义的稳定API合同，该合同支持跨多种语言的客户。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;多亏了CNCF生态系统，我们不仅能够首先构建我们的产品，而且我们还能够扩展它以满足客户的需求。这些技术的广泛采用使我们能够提供具有性能，可互操作和与用户现有基础架构深入一致的解决方案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;最终见解：标准化推动成功&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; CNCF技术的最有价值的是最有价值的 - 经常被忽视的是它们带来的标准化。因为我们的客户使用相同的工具和方法，因此对我们的支持团队而言，诊断和解决问题变得更加容易。这个共同的基础可以加速故障排除，减少摩擦，并最终为每个参与的每个人带来更好的结果。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在Authed，CNCF技术不仅是我们堆栈的一部分，它们是我们成功的核心。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;附加资源：&lt;/strong&gt; &lt;br&gt; &lt;a href =“ https://www.youtube.com/watch?v=ftdmpeqj1b0”&gt;使用Kubernetes运营商构建托管数据库服务&lt;/a&gt; href =“ https://www.youtube.com/watch?v=ch7z8yzducm”&gt;在kubernetes上运行低延迟工作负载&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;有您自己的云本地故事要讲吗？&lt;/strong&gt; &lt;br&gt;我们一直在寻求聚焦创新的用例，社区贡献和基于CNCF项目的生产成功案例。如果您的组织正在解决云本地技术的现实世界问题，在这里提交您的故事，并与更广泛的社区分享您的旅程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们继续建立云本地人的未来。 &lt;a href =“ https://www.surveymonkey.com/r/cncfmemberstory”&gt;在这里提交您的故事。&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-buttons是layout-flex wp-block buttons-is-layout-flex”&gt;&#xA;&lt;div class =“ wp-block-button”&gt; &lt;a class =“ wp-block button__link wp-element button” href =“ https://www.cncf.io/about/about/join/join/silver/silver/”&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 21 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【What LLMs can do for SREs in Cloud Native Infrastructure】LLM可以为云本机基础架构中的SRES做什么</title>
      <link>https://www.cncf.io/blog/2025/04/14/what-llms-can-do-for-sres-in-cloud-native-infrastructure/</link>
      <description>【&lt;p&gt;Cloud native infrastructure continues to scale, and with it, so does operational overhead. Kubernetes has become the backbone of modern platforms, but as cluster sizes grow past 100 nodes and thousands of workloads, the operational load can be intense.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At this scale, it’s not unusual for organizations to require at least five dedicated Site Reliability Engineers (SREs) to ensure uptime, manage costs, and handle scaling. SREs are stretched thin managing configurations, remediating failures, tuning resource limits, and staying ahead of performance issues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Infrastructure as Code (IaC) tools and observability platforms have provided much-needed support. However, as systems evolve, we are hitting the ceiling of what human effort alone can maintain. So, the real question emerges: how can we manage modern infrastructure more efficiently and more sustainably?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;The Role of LLMs in SRE Workflows&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Large Language Models (LLMs) are often associated with natural language queries and code generation, but their potential in infrastructure operations goes far deeper.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;LLMs can:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Interpret complex logs and system events&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Summarize root causes based on error patterns&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Assist in decision-making by correlating signals across monitoring systems&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Suggest or automate configuration changes in real time&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This isn’t about replacing SREs. It’s about supporting and enhancing their capabilities. While using LLMs to provision infrastructure, such as generating Terraform or Helm charts, is a popular use case, the more urgent challenge lies in real-time operations. The real question is what happens once your infrastructure is up and running.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Real-Time Ops: Where LLMs Truly Matter&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1354&#34; height=&#34;616&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image.png&#34; alt=&#34;a look at real-time operations&#34; class=&#34;wp-image-129699&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/image.png 1354w, https://www.cncf.io/wp-content/uploads/2025/04/image-300x136.png 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-1024x466.png 1024w, https://www.cncf.io/wp-content/uploads/2025/04/image-768x349.png 768w, https://www.cncf.io/wp-content/uploads/2025/04/image-900x409.png 900w, https://www.cncf.io/wp-content/uploads/2025/04/image-440x200.png 440w, https://www.cncf.io/wp-content/uploads/2025/04/image-879x400.png 879w&#34; sizes=&#34;auto, (max-width: 1354px) 100vw, 1354px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Modern SREs don’t just build systems. They operate them 24/7. This is where fatigue starts to build. Failures, scaling issues, and performance anomalies often arise without warning and require immediate attention. LLMs can serve as intelligent assistants here, helping with:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Failure diagnosis: Parsing pod logs, container events, and alerting noise to pinpoint the actual issue&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Policy recommendations: Adjusting autoscaler thresholds, resource requests, or retry settings based on patterns&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Smart remediation: Applying known fix patterns automatically (or semi-automatically) when specific conditions are met&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The combination of language understanding, pattern recognition, and system context gives LLMs a unique advantage in operational settings.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;AI-Native Kubernetes Automation: What’s Emerging&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes platforms are beginning to integrate AI and large language models (LLMs) directly into their control loops. New solutions are emerging to enable intelligent automation at scale, particularly in large and complex Kubernetes environments where traditional operational approaches are reaching their limits.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;5120&#34; height=&#34;1600&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/visual-section.png&#34; alt=&#34;AI-native Kubernetes&#34; class=&#34;wp-image-129777&#34; style=&#34;width:900px;height:auto&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/visual-section.png 5120w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-300x94.png 300w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1024x320.png 1024w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-768x240.png 768w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-900x281.png 900w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1800x563.png 1800w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-600x188.png 600w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1200x375.png 1200w&#34; sizes=&#34;auto, (max-width: 5120px) 100vw, 5120px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Some examples of AI-native capabilities include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Autopilot: Fully automated horizontal scaling powered by a combination of LLMs and machine learning models, intelligently adjusting replicas based on workload patterns—no manual tuning required.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Smart Sizing: Vertical scaling that uses ML to continuously right-size CPU and memory requests, optimizing performance and cost without guesswork.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pod Recovery AI: LLM-powered analysis of failure events such as crash loops or container restarts, capable of diagnosing issues and suggesting or triggering recovery actions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These features are designed to reduce manual tuning and help SREs focus on higher-leverage tasks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;One Engineer, One Thousand Workloads?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This isn’t just a futuristic idea. It’s quickly becoming reality.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Just as GitOps changed how we manage configurations, LLMs and AI are reshaping how we manage the lifecycle of running infrastructure. We’re moving toward a world where one or two engineers can manage what used to take entire teams, thanks to assistive and autonomous capabilities powered by AI.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It’s not about minimizing headcount. It’s about maximizing impact.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Final Thoughts&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The future of SRE in cloud native environments will be shaped by how effectively we bring intelligence into day-to-day operations. With the rapid advancement of LLMs, we are entering a new phase where scaling infrastructure no longer requires scaling teams at the same rate.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As AI-native platforms continue to evolve, SREs will spend less time firefighting and more time architecting for resilience, performance, and innovation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Looking Ahead&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Simplifying Kubernetes operations is no longer a distant goal. With the rise of intelligent automation, teams now can streamline workflows, improve resource efficiency, and reduce operational overhead.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As the ecosystem continues to evolve, adopting AI-driven approaches could be the key to managing complexity and unlocking the full potential of cloud native infrastructure. Now is the time to explore what’s possible.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;lt; Curious how&lt;a href=&#34;https://waveautoscale.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&amp;nbsp;Wave Autoscale&lt;/a&gt;&amp;nbsp;dynamically scales your cloud resources based on real-time traffic? Book a&amp;nbsp;&lt;a href=&#34;https://waveautoscale.com/contact&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;demo&amp;nbsp;&lt;/a&gt;at your convenience!&amp;gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– Wave Autoscale :&amp;nbsp;&lt;a href=&#34;https://waveautoscale.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://waveautoscale.com/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;– Demo :&amp;nbsp;&lt;a href=&#34;https://waveautoscale.com/contact&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://waveautoscale.com/contact&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;云本机基础架构继续扩展，随着它的运营开销也是如此。 Kubernetes已成为现代平台的骨干，但是随着群集的大小超过100个节点和数千个工作负载，操作负载可能会很强烈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在此规模上，组织至少需要五个专用网站可靠性工程师（SRE）来确保正常运行时间，管理成本和处理规模并不罕见。 SRES是伸展的薄型管理配置，修复失败，调整资源限制并保持在性能问题之前。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;基础架构作为代码（IAC）工具和可观察性平台提供了急需的支持。但是，随着系统的发展，我们正在击中人类努力所能维持的东西的上限。因此，真正的问题出现了：我们如何更有效，更可持续地管理现代基础设施？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; LLM在SRE工作流程中的作用&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;大语言模型（LLM）通常与自然语言查询和代码生成有关，但是它们在基础架构操作中的潜力要深得多。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; llms可以：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;解释复杂日志和系统事件&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;总结基于错误模式的根本原因&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;通过在监视系统中关联信号来协助决策&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;建议或自动化配置在实时更改&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这不是要替换SRE。这是关于支持和增强他们的能力。尽管使用LLMS来提供基础架构，例如生成Terraform或Helm图表，这是一种流行的用例，但更紧迫的挑战在于实时操作。真正的问题是，一旦您的基础架构启动并运行了。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;实时操作：llms真正重要&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 1354” height =“ 616” src =“ https://www.cncf.io/wp-content/wp-content/wp-content/wp--contet/uploads/uploads/uploads/uploads/2025/255/25/04/image.pen a a a。 class =“ wp-image-129699” srcset =“ https://www.cncf.io/wp-content/uploads/2025/04/image.png 1354W， https://www.cncf.io/wp-content/uploads/2025/04/image-300x136.png 300w, https://www.cncf.io/wp-content/uploads/2025/04/image-1024x466.png 1024w, https://www.cncf.io/wp-content/uploads/2025/04/image-768x349.png 768w，https://www.cncf.io/wpf.io/wp-content/wp-content/wp-content/uploads/uploads/uploads/uploads/2025/2025/2025/044/image-cage-90040.pn.pn.p.900 ww， https://www.cncf.io/wp-content/uploads/2025/04/image-440x200.png 440w，https://www.cncf.io/wp-content/wp-content/wp-content/wp-content/uploads/uploads/uploads/2025/2025/2025/2025/044/image-mimage-8779 x479 x479 x479 x479 simess =&#39;&#39; （最大宽度：1354px）100VW，1354px“ reverrerpolicy =“ no-referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现代SRE不仅建立系统。他们24/7全天候操作。这是疲劳开始增加的地方。失败，扩展问题和性能异常通常不会警告而需要立即注意。 LLM可以在这里充当智能助手，帮助以下帮助：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&lt;li&gt;故障诊断：解析吊舱日志，容器事件和警报噪声以查明实际问题&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;策略建议：根据模式调整自动阈值，资源请求或重试设置&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;智能补救：满足特定条件时会自动应用已知的修复模式（或半自动）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;语言理解，模式识别和系统上下文的组合为LLM提供了操作设置的独特优势。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; ai-native kubernetes自动化：什么是新兴&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kubernetes平台开始将AI和大型语言模型（LLM）直接集成到其控制循环中。新的解决方案正在出现，以使智能自动化能够大规模自动化，尤其是在传统运营方法达到其极限的大型和复杂的Kubernetes环境中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 5120”高=“ 1600” src =“ https：///www.cncf.io ot kubernetes“ class =” wp-image-129777“ style =” width：900px; height; height; auto“ srcset =” https：//wwwww.cncf.io/wp-content/wp-content/uploads/2025/2025/04/04/visual-section.png 5120w， https://www.cncf.io/wp-content/uploads/2025/04/visual-section-300x94.png 300w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1024x320.png 1024w, https://www.cncf.io/wp-content/uploads/2025/04/visual-section-768x240.png 768w，https：//www.cncf.io/wp-content/wp-content/wp-content/uploads/uploads/uploads/2025/2025/04/14/14.pn.nyw.94.pn.lwisection-wil of https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1800x563.png 1800W，https://wwwww.cncf.io/wp-content/wp-content/wp-content/wpload/wploads/uploads/uploads/uploads/uploads/2025/2025/2025/204/g04/wgiselectial-ggiselectial-ggiselectial-ggiselectial-gg11888888888888888888888888888888888888888意守https://www.cncf.io/wp-content/uploads/2025/04/visual-section-1200x375.png 1200W“ sizes =” sizes =“ auto，（max-width：5120px）100vw，100vw，5120px“ reverrerpolicy =” notrerpolicy =“ not-refirrricy&gt;”&#xA;&#xA;&#xA;&#xA;&lt;p&gt; AI本地功能的一些示例包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;自动驾驶：由LLM和机器学习模型组合提供的完全自动化的水平缩放，根据工作负载模式智能调整复制品，而无需手动调整。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;智能尺寸：使用ML连续右尺寸的CPU和内存请求，优化性能和成本而无需猜测的垂直缩放。&lt;/li&gt;，优化性能和成本。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; POD恢复AI：llm驱动的故障事件分析，例如崩溃循环或容器重新启动，能够诊断问题并建议或触发恢复动作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些功能旨在减少手动调整，并帮助SRES专注于更高杠杆任务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;一名工程师，一千个工作负载？&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这不仅是一个未来派的想法。 &lt;/p&gt;很快就会成为现实。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就像Gitops改变了我们管理配置一样，LLM和AI正在重塑我们如何管理运行基础结构的生命周期。我们正在走向一个世界在一个或两个工程师可以管理整个团队的情况下，要归功于AI提供支持的辅助和自主功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这不是最小化的员工。这是关于最大化影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;最终想法&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; SRE在云本地环境中的未来将取决于我们将情报带入日常运营的方式。随着LLM的迅速发展，我们进入了一个新阶段，在该阶段，规模基础架构不再需要以相同速率进行缩放团队。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着AI本地平台的不断发展，SRES将花费更少的时间进行消防，而更多的时间进行韧性，性能和创新。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;向前看&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;简化Kubernetes操作不再是一个遥远的目标。随着智能自动化的兴起，团队现在可以简化工作流程，提高资源效率并减少运营开销。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着生态系统继续发展，采用AI驱动方法可能是管理复杂性并解锁云原生基础架构的全部潜力的关键。现在是时候探索可能了。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;好奇&lt;a href =“ https://waveautoscale.com/” target =“ _ blank” rel =“ noreferrer noopener”&gt; wave autoscale &lt;/a&gt;根据实时流量，动态扩展您的云资源？预订a &lt;a href =“ https://waveautoscale.com/contact” target =“ _ blank” rel =“ noreferrer noopener”&gt; demo &lt;/a&gt;在您方便！&gt; &lt;/p&gt;时&#xA;&#xA;&#xA;&#xA;&lt;p&gt;  -  Wave AutoScale：&lt;a href =“ https://waveautoscale.com/” target =“ _ blank” rel =“ noreferrer noopener”&gt; https://waveautoscale.com/ &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;  - 演示：&lt;a href =“ https://waveautoscale.com/contact” target =“ _ blank” rel =“ noreferrer noopener”&gt; https://waveautoscalecom/contact &lt;/a&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 13 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Prepare your application landscape for zero trust with Keycloak 26.2】用KeyCloak 26.2准备零信托的应用程序景观</title>
      <link>https://www.cncf.io/blog/2025/04/24/prepare-your-application-landscape-for-zero-trust-with-keycloak-26-2/</link>
      <description>【&lt;p&gt;Strong identity and access management is a key component of a zero trust architecture for cloud native applications. &lt;a href=&#34;https://www.keycloak.org/&#34;&gt;Keycloak&lt;/a&gt; is well-known for its single-sign-on capabilities based on open standards. It provides you all the building blocks you need to run this in self-hosted environments on-premise and in the cloud. It lets you securely manage your users’ data, credentials and permissions, offers strong authentication, and acts as an integration hub for internal and external identity providers like Entra ID or Okta.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Keycloak release 26.2, released on April 11 2025, comes with the following highlights:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Least-privileged delegated access&lt;/strong&gt; for day-to-day operations without service desk tickets by delegating administrative tasks to application owners.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Enhanced token-exchange&lt;/strong&gt; for accurate and narrowly scoped tokens for zero trust architectures.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Pre-defined Grafana dashboard&lt;/strong&gt; to monitor service level indicators and key metrics of your self-hosted installations.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Simplified update and configuration &lt;/strong&gt;to increase availability, security-by-default and automation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Read on to learn why these new release highlights are important, and how Keycloak delivers them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Least-privileged delegated access for effective management&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.keycloak.org/docs/latest/server_admin/index.html#_fine_grained_permissions&#34;&gt;Fine-Grained Admin Permissions&lt;/a&gt; allow administrations to delegate administrative tasks to groups and individuals while complying with zero trust requirements and least privilege. This helps to reduce administrative costs and keep information up-to-date without service desk tickets, and enables organizations to scale and react faster to changes.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This supports setups like:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Delegating administration of members of a group to an owner of the group.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Delegating administration of a set of one or more clients in a realm to a person or a team that is managing the clients.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In Keycloak 26.2, this is now fully supported and no longer in preview. You can enable it on a per-realm basis. One of the major goals of the release was to improve the user experience as well as build an extensible framework to enable more fine-grained control over realm resources. There is now a dedicated section on the realm to manage permissions, and a form based UI to manage each permission. It also scales better for large setups with a lot of resources that need to be filtered.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;512&#34; height=&#34;403&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/unnamed-2-1.jpg&#34; alt=&#34;create permission image&#34; class=&#34;wp-image-130435&#34; style=&#34;width:567px;height:auto&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/unnamed-2-1.jpg 512w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-2-1-300x236.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-2-1-254x200.jpg 254w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-2-1-508x400.jpg 508w&#34; sizes=&#34;auto, (max-width: 512px) 100vw, 512px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Read more about the permission model, scopes and resource type, see the &lt;a href=&#34;https://www.keycloak.org/docs/latest/server_admin/#_fine_grained_permissions&#34;&gt;Server Administration Guide&lt;/a&gt; for examples on how to set this up.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Token Exchange for accurately constrained tokens&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The authorization to access resources is critical and delicate in a zero trust architecture. Key to the evaluation are tokens that are accurately scoped to both the application’s and the user’s context. In some scenarios, also the user’s consent that an application may access the data needs to be tracked.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The key to accurately scoped tokens is OAuth 2.0 Token Exchange, which has been standardized in the internet standard RFC 8693. Token exchange can be used in all scenarios where one application calls another application and needs to forward a token which is common in modern microservice architectures. To correctly assess the user’s and the calling application’s context, each application needs each token to have an explicit named audience, and neither too many nor too few scopes and permissions connected to it. A too small scope will not allow to satisfy the user’s needs, while a too broad scope would open the door to misuse or exfiltration of data.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.keycloak.org/securing-apps/token-exchange&#34;&gt;Token exchange for applications within your organisation’s realm is now fully supported.&lt;/a&gt; The process of which applications may exchange tokens is governed by Keycloak, including the revocation of tokens and keeping track of user consents.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We also improved the user interface to configure which applications can exchange tokens and for which scopes to better align with how other grant types are configured.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;512&#34; height=&#34;263&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/unnamed-1-1.jpg&#34; alt=&#34;image 2&#34; class=&#34;wp-image-130436&#34; style=&#34;width:552px;height:auto&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/unnamed-1-1.jpg 512w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-1-1-300x154.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-1-1-389x200.jpg 389w&#34; sizes=&#34;auto, (max-width: 512px) 100vw, 512px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Effective management for self-hosted instances with Service Level Indicators&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With Keycloak handling the authentication of users and applications in your application landscape, it is a critical part of your infrastructure. To avoid outages, you want to track its performance using service level indicators (SLIs).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For Keycloak 26.1, &lt;a href=&#34;https://www.keycloak.org/observability/keycloak-service-level-indicators&#34;&gt;we published a guide on how to track the service level indicators availability, latency and error rate for instances of Keycloak&lt;/a&gt;, complete with example queries for Prometheus. They capture the performance of a system as perceived by end users. You can use these indicators to track your system’s performance on a day-to-day basis to identify system degradations, and track them against an internal target value which is then called service level objective (SLO). You can also use them to negotiate target values with your stakeholders which are then called service level agreements (SLA), or which are captured for DevOps scenarios as error budgets for both planned and unplanned maintenance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the latest release 26.2, we also ship a &lt;a href=&#34;https://www.keycloak.org/observability/grafana-dashboards&#34;&gt;ready-to-use Grafana dashboard&lt;/a&gt; to track SLIs and other key metrics. Each key metric comes with extensive documentation on how to spot errors and remedies.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Logs, traces and metrics as the three pillars of observability&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When analyzing incidents, the three observability pillars logs, traces and metrics guide you to the cause and allow you to find a remedy.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Logs contain essential information about application behavior and security events.&lt;/strong&gt;&lt;br&gt;Analyzing the logs helps admins to detect incidents and investigate attacks. While we supported structured logging with JSON and syslog for a long time, the latest version of &lt;a href=&#34;https://www.keycloak.org/server/logging&#34;&gt;Keycloak supports the ECS JSON format for logging&lt;/a&gt;, which will make it simpler to integrate Keycloak in an existing application landscape that relies on a common logging format.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Traces connect a failure seen by a caller to its root cause like a flaky network connection to an external system.&lt;/strong&gt;&lt;br&gt;They are available in the OpenTelemetry tracing format which has become a standard in industry with a wide support for tooling. For Keycloak, &lt;a href=&#34;https://www.keycloak.org/observability/tracing&#34;&gt;it allows you to trace all incoming requests and connect them to the triggered activities&lt;/a&gt; like database access, calls to external identity providers, or internal LDAP access, which speeds up a root-cause-analysis during an incident a lot.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Metrics keep track of service level indicators and allow alerting and auto-scaling.&lt;/strong&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;They track system and user activity, anything from the number of successful and failed logins to the utilization of caches and database connection pools. In Keycloak, they are available using the well-known Prometheus format and in the OpenMetrics format. &lt;a href=&#34;https://www.keycloak.org/observability/metrics-for-troubleshooting&#34;&gt;In Keycloak 26.1, we published a full metrics and trouble shooting guide&lt;/a&gt;. New in 26.2 is the support for &lt;a href=&#34;https://www.keycloak.org/observability/event-metrics&#34;&gt;user event metrics&lt;/a&gt; which were in preview before. We now also support exemplars, which allow you to jump directly from an outlier metric or an error rate to a recorded trace that will guide you to the root cause of an error or an incurred latency.&amp;nbsp;&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Simplified update and configuration&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Keycloak is now even simpler to upgrade and to configure for environments both inside and outside of Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;The &lt;a href=&#34;https://www.keycloak.org/operator/rolling-updates&#34;&gt;Keycloak Operator now supports rolling updates&lt;/a&gt; for theme and provider updates to avoid downtimes. Our work continues to allow rolling updates also in other scenarios. The same functionality is also available &lt;a href=&#34;https://www.keycloak.org/server/update-compatibility&#34;&gt;for deployments not using the Operator&lt;/a&gt;.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Keycloak clusters can now form automatically without the need to configure multicast or UDP, which was hard when deploying to cloud providers. Since Keycloak 26.1, &lt;a href=&#34;https://www.keycloak.org/server/caching&#34;&gt;Keycloak has been using its database to coordinate instances, and communicate between instances using TCP&lt;/a&gt;. New in 26.2 is that the encryption for the cluster communication is done automatically without additional steps required by an administrator.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The Keycloak Operator now configures the &lt;a href=&#34;https://www.keycloak.org/operator/advanced-configuration#_network_policies&#34;&gt;matching Network policies in Kubernetes automatically&lt;/a&gt; to shield internal ports from unwanted traffic. Again one step less to configure for admins, and a better secure-by-default configuration.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Fast-forward to the next releases&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Work for the next feature release, which is scheduled for June 2025, is already underway. Join &lt;a href=&#34;https://www.keycloak.org/community&#34;&gt;our forum and slack channel&lt;/a&gt; to hear the latest news and contribute!&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;强大的身份和访问管理是用于云本机应用程序的零信任体系结构的关键组成部分。 &lt;a href =“ https://www.keycloak.org/”&gt; keycloak &lt;/a&gt;以其基于开放标准的单sign-on功能而闻名。它为您提供了在本地和云中自托环境中运行此操作所需的所有构建块。它使您可以安全地管理用户的数据，凭据和权限，提供强大的身份验证，并充当内部和外部身份提供商（如ENTRA ID或OKTA）的集成中心。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; KeyCloak版本26​​.2，于2025年4月11日发布，带有以下亮点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;最小私人的委派访问&lt;/strong&gt;日常运营，没有服务办公桌票，通过将管理任务委派给应用程序所有者。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;增强了令牌 - 交换&lt;/strong&gt;，以准确且狭窄的令牌用于零信任体系结构。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;预定的Grafana仪表板&lt;/strong&gt;监视您的自托管安装的服务水平指标和关键指标。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;简化的更新和配置&lt;/strong&gt;以增加可用性，安全性和自动化。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;继续阅读以了解为什么这些新版本的亮点很重要，以及KeyCloak如何提供它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://www.keycloak.org/docs/latest/server_admin/index.html#_fine_grained_permissions”&gt;罚款的管理权限&lt;/a&gt;允许管理行政任务允许行政任务委托行政任务并委托个人和Zero的个人信任，并在Zero中进行Zero和Zero的要求，并最少有要求。这有助于降低管理成本，并在没有服务台票的情况下保持信息的最新信息，并使组织能够扩展和更快地对更改的反应。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这支持：&lt;/p&gt;之类的设置&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;将小组成员委派给该小组的所有者。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将一个或多个客户的一组或多个领域的客户委派给管理客户的人或团队。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在KeyCloak 26.2中，现在得到了完全支持，并且不再在预览中。您可以按每次启用。发行版的主要目标之一是改善用户体验，并建立可扩展的框架，以使对领域资源更加细粒度的控制。现在，该领域有一个专门的部分来管理权限，以及一个基于表格的UI来管理每个许可。对于需要过滤的大量资源的大型设置，它也可以更好地缩放。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;512&#34; height=&#34;403&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/unnamed-2-1.jpg&#34; alt=&#34;create permission image&#34;class =“ wp-image-130435” style =“宽度：567px;高度：自动” srcset =“ https://wwwww.cncf.io/wp-content/uploads/2025/2025/04/2025/04/unnamed-2-1.jpg 512w，512w，512w， https://www.cncf.io/wp-content/uploads/2025/04/unnamed-2-1-300x236.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-2-1-254x200.jpg 254w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-c-1-1-508x400.jpg 508w“ sizes =” sizes =“ auto，（max-width：512px）100vw，100vw，512px“ reverrerpolicy =” notrerpolicy =“ not-referrricy&gt;”&#xA;&#xA;&#xA;&#xA;&lt;p&gt;阅读有关权限模型，范围和资源类型的更多信息，请参见&lt;a href =“ https://www.keycloak.org/docs/latest/server_admin/server_admin/#_fine_grained_permissions”&gt;服务器管理指南&lt;/a&gt;有关如何设置此设置的示例。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;代币交换以准确约束令牌&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在零信任体系结构中，访问资源的授权至关重要。评估的关键是代币，这些令牌可准确地范围为应用程序和用户的上下文。在某些情况下，用户同意应用程序可以访问需要跟踪数据的同意。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;准确范围代币的关键是OAuth 2.0代币交换，它已在Internet Standard RFC 8693中进行了标准化。在所有情况下，都可以使用一个应用程序来调用另一个应用程序，并且需要转发一个在现代Microservice Architectures中常见的令牌。要正确评估用户和调用应用程序的上下文，每个应用程序都需要每个令牌才能具有明确的命名受众，并且与之相关的范围和范围太多也不太少。太小的范围将不允许满足用户的需求，而过于广泛的范围将打开滥用或去渗透数据的大门。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://www.keycloak.org/securing-apps/token-exchange”&gt;现在完全支持您组织领域内的申请的代币交换。&lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt;哪些应用程序可能由keycloak进行了交换，包括keycloak，包括keycloak，包括use of user pr &lt;/the use。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们还改进了用户界面，以配置应用程序可以交换令牌，以及哪些范围可以更好地与其他授予类型的配置方式保持一致。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image size-full iS-radized”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 512”高=“ 263” src =“ https：///www.cncf.io ol class =“ wp-image-130436” style =“宽度：552px;高度：自动” srcset =“ https://www.cncf.io/wp-content/wp-content/uploads/2025/2025/04/2025/04/unnamed-1-1-1.jpg 512w，512w，512w， https://www.cncf.io/wp-content/uploads/2025/04/unnamed-1-1-300x154.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/unnamed-1-1-389x200.jpg 389w&#34; sizes =“自动，（最大宽度：512px）100VW，512px” referrerpolicy =“ no-referrer”&gt; &lt;/fige&gt;&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ WP-block-heading”&gt; &lt;strong&gt;有效管理服务级别指标的自托管实例&lt;/strong&gt; &lt;/h3&gt;&lt;p&gt;通过KeyCloak处理您的应用程序景观中用户和应用程序的身份验证，它是基础架构的关键部分。为了避免停电，您想使用服务级别指标（SLIS）跟踪其性能。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于KeyCloak 26.1，&lt;a href =“ https://www.keycloak.org/observiability/keycloak-service-level-indicators”&gt;我们发布了一份指南，有关如何跟踪服务水平指示器的可用性，延迟性和错误率的keycloak &lt;/a&gt;的延迟率和错误率的指南。他们捕获了最终用户所感知的系统的性能。您可以使用这些指标每天跟踪系统的性能以识别系统降解，并根据内部目标值跟踪它们，然后将其称为服务水平目标（SLO）。您还可以使用它们与利益相关者协商目标价值，然后将其称为服务级别协议（SLA），或将DevOps方案捕获为计划和计划外维护的错误预算。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在最新版本26.2中，我们还运送a &lt;a href =“ https://www.ykeycloak.org/observiality/grafana-dashboards”&gt; Ready-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-to-the grafana dashboard &lt;/a&gt;以跟踪SLIS和其他关键计量。每个关键指标都有有关如何发现错误和补救措施的广泛文档。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;日志，痕迹和指标作为可观察性的三个支柱&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;分析事件时，三个可观察性支柱日志，跟踪和指标指标指导您引起原因，并允许您找到一种补救措施。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;日志包含有关应用程序行为和安全事件的基本信息。&lt;/strong&gt; &lt;br&gt;分析日志有助于管理员检测事件并调查攻击。 While we supported structured logging with JSON and syslog for a long time, the latest version of &lt;a href=&#34;https://www.keycloak.org/server/logging&#34;&gt;Keycloak supports the ECS JSON format for logging&lt;/a&gt;, which will make it simpler to integrate Keycloak in an existing application landscape that relies on a common logging format. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;痕迹将呼叫者看到的失败连接到其根本原因，例如片状网络连接到外部系统。&lt;/strong&gt; &lt;br&gt;它们以OpentElemetry跟踪格式可用，该格式已成为行业中的标准，对工具提供了广泛的支持。 For Keycloak, &lt;a href=&#34;https://www.keycloak.org/observability/tracing&#34;&gt;it allows you to trace all incoming requests and connect them to the triggered activities&lt;/a&gt; like database access, calls to external identity providers, or internal LD​​AP access, which speeds up a root-cause-analysis during an incident a lot. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;指标可以跟踪服务水平指标并允许警报和自动缩放。&lt;/strong&gt; &lt;strong&gt; &lt;br&gt; &lt;br&gt; &lt;/strong&gt;他们跟踪系统和用户活动，从成功的登录和失败的登录数量到使用库和数据库连接池的利用。在KeyCloak中，使用众所周知的Prometheus格式和Openmetrics格式使用它们。 &lt;a href =“ https://www.keycloak.org/observability/metrics-for-troubleshooting”&gt;在KeyCloak 26.1中，我们发布了完整的指标和故障射击指南&lt;/a&gt;。 26.2中的新功能是对&lt;a href =“ https://www.keycloak.org/observability/event-metrics”&gt;用户事件指标&lt;/a&gt;的支持。现在，我们还支持示例，这使您可以直接从异常指标或错误率跳到记录的跟踪，这将指导您导致错误或延迟产生的根本原因。  &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;简化更新和配置&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; KeyCloak现在更简单地升级并为Kubernetes内外的环境配置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://www.keycloak.org/operator/rolling-updates”&gt; KeyCloak Operator现在支持滚动更新&lt;/a&gt;主题和提供者更新以避免下降。在其他情况下，我们的工作继续允许滚动更新。也可以使用相同的功能&lt;a href =“ https://www.keycloak.org/server/server/update-compatibility”&gt;用于使用不使用操作员的部署&lt;/a&gt;。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; KeyCloak簇现在可以自动形成，而无需配置多播或UDP，这在部署到云提供商时很难。由于KeyCloak 26.1，&lt;a href =“ https://www.keycloak.org/server/caching”&gt; keyCloak一直使用其数据库来协调实例，并使用TCP之间的实例进行通信&lt;/a&gt;。 26.2中的新事物是，群集通信的加密是自动完成的，而没有管理员要求的其他步骤。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; KEYCLOAK操作员现在配置&lt;a href =“ https://www.keycloak.org/operator/advanced-configuration#_network_policies”&gt;匹配Kubernetes中的网络策略自动&lt;/a&gt;使内部端口自动使内部端口免受不受欢迎的交通。同样，要为管理员配置配置的一步和更好的安全性默认配置。 &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block-heading”&gt; &lt;strong&gt;快速前向下一个版本&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;已计划于2025年6月的下一个功能版本工作。加入&lt;a href =“ https://www.keycloak.org/community”&gt;我们的论坛和Slack Channel &lt;/a&gt;听到最新消息并做出贡献！ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 23 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Deep Dive into the Gateway API Inference Extension】深入深入网关API推断扩展</title>
      <link>https://www.cncf.io/blog/2025/04/21/deep-dive-into-the-gateway-api-inference-extension/</link>
      <description>【&lt;p&gt;Running AI inference workloads on Kubernetes has some unique characteristics and challenges, and the Gateway API Inference Extension project aims to solve some of those challenges. I recently wrote about these new capabilities &lt;a href=&#34;https://kgateway.dev/blog/smarter-ai-reference-kubernetes-gateway-api/&#34;&gt;in the kgateway project&lt;/a&gt;. In this blog we’ll take a deep dive into how it all works.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Most people think of request routing on Kubernetes in terms of the Gateway API, Ingress or Service Mesh (we’ll call it L7 router). All of those implementations work very similarly: you specify some routing rules that evaluate attributes of a request (headers, path, etc) and the L7 router makes a decision about which backend endpoint to send to. This is done with some kind of load balancing algorithm (&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancing&#34;&gt;round robin, least request, ring hash, zone aware, priority,&lt;/a&gt; etc).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1536&#34; height=&#34;1044&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.45.48%E2%80%AFAM.jpg&#34; alt=&#34;load balancing algorithm&#34; class=&#34;wp-image-130177&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.45.48 AM.jpg 1536w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.45.48 AM-300x204.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.45.48 AM-1024x696.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.45.48 AM-768x522.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.45.48 AM-900x612.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.45.48 AM-294x200.jpg 294w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.45.48 AM-589x400.jpg 589w&#34; sizes=&#34;auto, (max-width: 1536px) 100vw, 1536px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Traditional load balancing algorithms may not be well-suited for AI/LLM model backends. Unlike typical stateless web APIs, GPU-backed LLMs operate differently and require a more nuanced approach, which can save a lot of money. What if we could leverage real-time metrics from the models and GPUs to make smarter routing and load-balancing decisions? For instance, if a backend LLM has already loaded specific fine-tuned (LoRA) adapters, requests for those models should be routed there rather than to endpoints that lack the adapter—avoiding unnecessary GPU overhead from loading it on demand. Similarly, if a backend is already overwhelmed with queued prompts, sending more requests would only degrade performance. And in cases where all backend LLMs are heavily loaded, can we implement load shedding (where appropriate) to safeguard system stability?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1550&#34; height=&#34;1020&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.47.31%E2%80%AFAM.jpg&#34; alt=&#34;implementing load shedding&#34; class=&#34;wp-image-130178&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.47.31 AM.jpg 1550w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.47.31 AM-300x197.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.47.31 AM-1024x674.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.47.31 AM-768x505.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.47.31 AM-900x592.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.47.31 AM-304x200.jpg 304w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.47.31 AM-608x400.jpg 608w&#34; sizes=&#34;auto, (max-width: 1550px) 100vw, 1550px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;That’s exactly what the &lt;a href=&#34;https://gateway-api-inference-extension.sigs.k8s.io/&#34;&gt;Gateway API Inference Extension&lt;/a&gt; project does. It introduces two new Kubernetes CRDs, &lt;a href=&#34;https://gateway-api-inference-extension.sigs.k8s.io/concepts/api-overview/&#34;&gt;InferenceModel and InferencePool&lt;/a&gt;, and the concept of an “endpoint picker” that can extend L7 routing. This endpoint picker leverages metrics from the underlying LLM to make smarter routing and load balancing decisions for the L7 routing infrastructure. Projects like &lt;a href=&#34;https://kgateway.dev/&#34;&gt;kgateway&lt;/a&gt; and &lt;a href=&#34;https://istio.io/&#34;&gt;Istio&lt;/a&gt;, for example, can plug this into their implementations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Inference Extension extends Gateway API&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Gateway API Inference Extension introduces two new Custom Resource Definitions (CRDs): InferenceModel and InferencePool. By using these two new resources, along with the endpoint picker, the L7 routing infrastructure becomes an “Inference Gateway” enabling you to self-host GenAI/LLMs with a “model-as-a-service” mindset.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;a href=&#34;https://gateway-api-inference-extension.sigs.k8s.io/api-types/inferencemodel/&#34;&gt;InferenceModel CRD&lt;/a&gt; is designed for AI engineers, allowing them to define logical model inference endpoints. It maps user-facing model names to backend models and provides flexibility for traffic splitting between fine-tuned adapters. For example, maybe you want to expose a model named llama2 to clients, but the backend models may be named vllm-llama2-7b-2024-11-20 or vllm-llama2-7b-2024-12-10.&amp;nbsp; Using an InferenceModel, you can do that and split traffic among those models. Maybe you want to introduce a newer model such as vllm-llama2-7b-2025-03-24.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: inference.networking.x-k8s.io/v1alpha2&#xA;kind: InferenceModel&#xA;metadata:&#xA;  name: inferencemodel-llama2&#xA;spec:&#xA;  modelName: llama2&#xA;  criticality: Critical&#xA;  poolRef:&#xA;    name: vllm-llama2-7b-pool&#xA;  targetModels:&#xA;  - name: vllm-llama2-7b-2024-11-20&#xA;    weight: 75&#xA;  - name: vllm-llama2-7b-2025-03-24&#xA;    weight: 25&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Additionally, it enables workload owners to specify request criticality, ensuring that real-time services receive priority over best-effort batch jobs. Below we’ll see how that plays out depending on LLM metrics.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;a href=&#34;https://gateway-api-inference-extension.sigs.k8s.io/api-types/inferencepool/&#34;&gt;InferencePool CRD&lt;/a&gt;, on the other hand, is intended for platform operators managing model-serving infrastructure. It represents a group of model-serving instances and acts as a specialized backend service for AI workloads. In other words, you can route requests from an HTTPRoute directly to a pool of inference endpoints with the InferencePool CR. The pool manages inference-aware endpoint selection by specifying which endpoint picker to use, making intelligent routing decisions based on real-time metrics such as request queue depth and GPU memory availability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: inference.networking.x-k8s.io/v1alpha2&#xA;kind: InferencePool&#xA;metadata:&#xA;  name: vllm-llama2-7b-pool&#xA;spec:&#xA;  targetPortNumber: 8000&#xA;  selector:&#xA;    app: vllm-llama2-7b&#xA;  extensionRef:&#xA;    name: vllm-llama2-7b-endpoint-picker&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To set up routing so that prompts/requests to the inference gateway get sent to the backend LLMs, we need to first create an HTTPRoute that routes traffic to an InferencePool.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: gateway.networking.k8s.io/v1&#xA;kind: HTTPRoute&#xA;metadata:&#xA;  name: llm-route&#xA;spec:&#xA;  parentRefs:&#xA;  - name: inference-gateway&#xA;  rules:&#xA;  - backendRefs:&#xA;    - group: inference.networking.x-k8s.io&#xA;      kind: InferencePool&#xA;      name: vllm-llama2-7b&#xA;    matches:&#xA;    - path:&#xA;        type: PathPrefix&#xA;        value: /&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now when a request comes to the inference gateway, it will match on whatever is in the HTTPRoute and then send the request to the InferencePool. And here’s where things get interesting. With an Envoy backed L7 router (like kgateway or Istio), normally the routing policy and load balancing will pick the endpoint that the request gets sent to. But with an InferencePool, the request first goes to a specialized extension “endpoint selection extension picker” or ESE.&amp;nbsp; This ESE will have logic to pick the right backend LLM endpoint based on metrics from the LLM themselves. Let’s dig into how that works a little more.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;How the Endpoint Selection Works&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When a request reaches the Endpoint Selection Extension (ESE), it extracts the modelName from the request body. Currently, the ESE expects the request body to follow the &lt;a href=&#34;https://platform.openai.com/docs/api-reference/chat/create&#34;&gt;OpenAI API format&lt;/a&gt;. Once the modelName is identified, the ESE compares it against the modelName field of available InferenceModel objects to determine the corresponding backend model names or LoRA adapters. For example, if the ESE detects a request with the model name llama2, it will locate the matching InferenceModel and route the request to an appropriate endpoint, such as vllm-llama2-7b-2024-11-20 or vllm-llama2-7b-2025-03-24.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The logic for choosing the specific endpoint for a particular model is defined in a series of “filters” in the ESE. The filters evaluate the following criteria to decide what the final endpoint should be:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Criticality of the request (Critical or Sheddable)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Queue wait size of the LLM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;LoRA adapter availability/affinity&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;KV cache usage of the LLM&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1586&#34; height=&#34;756&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.50.46%E2%80%AFAM.jpg&#34; alt=&#34;filters evaluating criteria&#34; class=&#34;wp-image-130179&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.50.46 AM.jpg 1586w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.50.46 AM-300x143.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.50.46 AM-1024x488.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.50.46 AM-768x366.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.50.46 AM-900x429.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.50.46 AM-420x200.jpg 420w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.50.46 AM-839x400.jpg 839w&#34; sizes=&#34;auto, (max-width: 1586px) 100vw, 1586px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The filter flow starts with “is this a critical request”? If the request is a Critical request, it will then check whether there are LLM endpoints with a wait queue lower than 50. If it finds these, then it will check whether those endpoints have the LoRA adapter loaded for the model. If it finds a single endpoint that makes it through these filters, that is the endpoint that is returned. If it does not find an endpoint with the correct LoRA adapter loaded, it finds the next best option which is an endpoint that &lt;em&gt;can&lt;/em&gt; load the requested LoRA adapter.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If the filter sees a request that is &lt;em&gt;Sheddable&lt;/em&gt; then it will find LLMs that have lower than 80% KV cache utilization and fewer than 5 requests waiting in its queue. If it cannot find LLM endpoints that meet that criteria, the &lt;em&gt;Sheddable&lt;/em&gt; request is dropped.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1554&#34; height=&#34;1030&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.52.04%E2%80%AFAM.jpg&#34; alt=&#34;dropping the Sheddable request&#34; class=&#34;wp-image-130180&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.52.04 AM.jpg 1554w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.52.04 AM-300x199.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.52.04 AM-1024x679.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.52.04 AM-768x509.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.52.04 AM-900x597.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.52.04 AM-302x200.jpg 302w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-21-at-8.52.04 AM-603x400.jpg 603w&#34; sizes=&#34;auto, (max-width: 1554px) 100vw, 1554px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s walk through some scenarios:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Example 1: Critical Request with LoRA Adapter&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Given these pods:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Pod A: Queue=10, KV Cache=30%, has LoRA-X loaded&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pod B: Queue=5, KV Cache=70%, doesn’t have LoRA-X&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pod C: Queue=60, KV Cache=20%, has LoRA-X loaded&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For a critical request needing LoRA-X:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Critical Request Check&lt;/strong&gt;: Pass (request is critical)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Low Queuing Filter&lt;/strong&gt;: Pods A and B pass (queue &amp;lt; 50)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;LoRA Affinity Check&lt;/strong&gt;: Only Pod A passes (has LoRA-X)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Least Queuing Filter&lt;/strong&gt;: Pod A passes (only one pod)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Least KV Cache Filter&lt;/strong&gt;: Pod A passes (only one pod)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Final selection&lt;/strong&gt;: Pod A&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Example 2: Non-Critical Request&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Given these pods:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Pod A: Queue=6, KV Cache=85%&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pod B: Queue=4, KV Cache=75%&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pod C: Queue=7, KV Cache=60%&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For a non-critical request:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Critical Request Check&lt;/strong&gt;: Fail (request is not critical)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Has Capacity Filter&lt;/strong&gt;: Only Pod B passes (queue ≤ 5 and KV cache ≤ 80%)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Least Queue + LoRA + KV Cache Filter Chain&lt;/strong&gt;: Pod B continues (only one pod)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Final selection&lt;/strong&gt;: Pod B&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Example 3: Critical Request with High Queue Everywhere&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Given these pods:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Pod A: Queue=70, KV Cache=40%, has LoRA-Y&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pod B: Queue=80, KV Cache=60%, has LoRA-Y&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pod C: Queue=65, KV Cache=70%, doesn’t have LoRA-Y&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For a critical request needing LoRA-Y:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Critical Request Check&lt;/strong&gt;: Pass (request is critical)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Low Queuing Filter&lt;/strong&gt;: Fail (all queues &amp;gt; 50)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Least Queuing Filter&lt;/strong&gt;: Pods A and C pass (in the first segment of the queue range)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Low Cost LoRA Filter&lt;/strong&gt;: Only Pod A passes (has LoRA-Y)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Least KV Cache Filter&lt;/strong&gt;: Pod A passes (only one pod)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Final selection&lt;/strong&gt;: Pod A&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Wrapping up&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Gateway API Inference Extension project introduces some powerful model selection and load-balancing features that aim to improve GPU and LLM utilization when running on Kubernetes. GPUs are in short supply and thus very expensive. The Inference Extension project can significantly improve prompt processing and save organizations a lot of money. You can check out some preliminary numbers now available on &lt;a href=&#34;https://gateway-api-inference-extension.sigs.k8s.io/performance/benchmark/&#34;&gt;the project’s website&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;在Kubernetes上运行AI推理工作负载具有一些独特的特征和挑战，而Gateway API推断扩展项目旨在解决其中一些挑战。我最近写了这些新功能&lt;a href =“ https://kgateway.dev/blog/smarter-ai-reference-reference-kubernetes-gateway-api/”&gt;在Kgateway Project &lt;/a&gt;。在此博客中，我们将深入了解所有功能的工作原理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;大多数人都考虑到网关API，Ingress或Service网格（我们称之为L7路由器）的请求路由。所有这些实现都非常相似：您指定了一些评估请求属性（标题，路径等）的路由规则，而L7路由器则决定要发送到哪个后端端点。这是通过某种负载平衡算法完成的（&lt;a href =“ https://www.envoyproxy.io oio/docs/envoy/envoy/envoy/latest/latest/intro/intro/inarch_overview/upstream/load_baleam/load_balency/load_balancy/load_balancy/load_balance”&gt; round Robin，round Robin，最小要求，rong hash，ring hash hish hish hish，recore pirctity，pirctity，pirtial，pirtial，par &lt;/pp&gt;&#xA;&#xA;&#xA;&#xA;在src =“ https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.45.48％e2%80%80%80%80%Afam.jpg” srcset =“ https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-21-04-21-at-8.45.48.48am.jpg 1536w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.45.45.48AM-300X204.JPG 300W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-21-04-21-AT-8.45.45.45.48AM-1024X696.JPG 1024W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.45.45.45.48AM-768x5222.jpg 768W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-21-AT-8.45.45.45.48AM-900X612.JPG 900W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.45.45.45.48am-294x200.jpg 294w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.45.45.48AM-589x400.jpg 589W 589W 589W“ size =” auto =“ auto =” auto，（max-witth：max-witth：15366px）10036px）10036px，1536 px，1536 px，1536 px，1536 px，1536px，1536px， referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;传统的负载平衡算法可能不适合AI/LLM模型后端。与典型的无状态Web API不同，GPU支持的LLM的操作不同，需要更细微的方法，这可以节省很多钱。如果我们可以利用模型和GPU的实时指标来做出更明智的路由和负载平衡决策怎么办？例如，如果后端LLM已经加载了特定的微调（LORA）适配器，则应将这些型号的请求路由在此处进行路由，而不是用于缺乏适配器的端点 - 避免不必要的GPU开销，以免按需加载。同样，如果后端已经被排队的提示不知所措，则发送更多请求只会降低性能。如果所有后端LLMS都大量加载，我们可以实施（在适当的地方）来保护系统稳定性吗？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figie class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 1550” height =“ 1020” src =“ https://wwwwww.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.47.47.47.47.47.47.47.47.47.47.47.47.47.47.47.47.47.47.47.47 emef脱落“ class =” wp-image-130178“ srcset =” https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-204-21-14-21-AT-8.47.47.47.47.47.47.47.47.47.jpg 1550w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.47.31AM-300X197.JPG 300W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.47.31AM-1024X674.JPG 1024W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.47.31AM-768X505.JPG 768W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.47.31AM-900X592.JPG 900W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-21-04-21-AT-8.47.31AM-304X200.JPG 304W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.47.31AM-608X400.JPG 608W 608W 608W“尺寸referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;br&gt; &lt;br&gt;这正是&lt;a href =“ https://gateway-api-inference-extension-extension.sigs.k8s.io/”&gt; Gateway api推断扩展&lt;/a&gt;项目确实如此。它引入了两个新的kubernetes crds，&lt;a href =“ https://gateway-api-inference-extension.sigs.k8s.io/conpects/conepts/api-overview/”&gt; peasureencemododel and infereceModel and inferecepool &lt;/a&gt;，以及可以扩展L7路由的“端点拾取器”的概念。此端点采摘器利用基础LLM的指标来为L7路由基础架构做出更明智的路由和负载平衡决策。 &lt;a href =“ https://kgateway.dev/”&gt; kgateway &lt;/a&gt;和&lt;a href =“ https://istio.io/”&gt; istio &lt;/a&gt;例如&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;推理扩展扩展网关API &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网关API推断扩展引入了两个新的自定义资源定义（CRD）：推论eNcememodel和inpercepool。通过使用这两个新资源，以及端点选择器，L7路由基础架构成为一种“推理网关”，使您能够以“模型as-a as-a-a-service”心态自助宿主genai/llms。&lt;/p&gt;。&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://gateway-api-inference-extension.sigs.k8s.io/api-types/inferencemodel/”&gt; subleencemodel crd &lt;/a&gt;是为AI工程师而设计的，使它们可以界定逻辑逻辑模型范围界面。它将面向用户的模型名称映射到后端型号，并为微调适配器之间的流量分配提供了灵活性。例如，也许您想将名为Llama2的模型曝光到客户端，但是后端模型可以命名为VLLM-LALAMA2-7B-2024-11-20或VLLM-LALMA-LAMA2-7B-2024-12-10。  您可以使用推论模型，可以在这些型号之间进行分解流量。也许您想介绍一个较新的型号，例如vllm-llama2-7b-2025-03-24。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：therperion.networking.x-k8s.io/v1alpha2&#xA;类型：推论编码&#xA;元数据：&#xA;  姓名：pefleencemodel-llama2&#xA;规格：&#xA;  模型名称：Llama2&#xA;  评论家Lity：批评&#xA;  Poolref：&#xA;    名称：vllm-llama2-7b-pool&#xA;  目标模型：&#xA;   - 名称：vllm-llama2-7b-2024-11-20&#xA;    重量：75&#xA;   - 名称：vllm-llama2-7b-2025-03-24&#xA;    重量：25&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，它使工作负载所有者能够指定请求的关键性，从而确保实时服务优先于最佳批处理作业。在下面，我们将根据LLM指标了解如何进行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://gateway-api-inference-extension.sigs.k8s.io/api-types/inferepes/inferencepool/”&gt; infereperpool crd &lt;/a&gt;另一方面，旨在用于平台操作员管理模型基础架构。它代表了一组模型服务实例，并充当了AI工作负载的专门后端服务。换句话说，您可以将请求从HTTPROUTE直接路由到使用InferencePool CR的推理端点池。池通过指定要使用的端点选择器来管理推理感知端点选择，从而根据请求队列深度和GPU内存可用性做出智能路由决策。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：therperion.networking.x-k8s.io/v1alpha2&#xA;KINT：inferencepool&#xA;元数据：&#xA;  名称：vllm-llama2-7b-pool&#xA;规格：&#xA;  TargetPortnumber：8000&#xA;  选择器：&#xA;    应用：VLLM-LALAMA2-7B&#xA;  ExtensionRef：&#xA;    名称：vllm-llama2-7b-endpoint-picker&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要设置路由，以便将提示/请求发送到推理网关被发送到后端LLMS，我们需要首先创建一个将流量路由到Inpercepool的HTTPROUTE。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; apiversion：gateway.networking.k8s.io/v1&#xA;类型：httproute&#xA;元数据：&#xA;  名称：LLM-Route&#xA;规格：&#xA;  parentrefs：&#xA;   - 名称：推理门路&#xA;  规则：&#xA;   -  Backendrefs：&#xA;     - 组：temperion.networking.x-k8s.io&#xA;      KINT：inferencepool&#xA;      名称：vllm-llama2-7b&#xA;    匹配：&#xA;    - 小路：&#xA;        类型：PathPrefix&#xA;        价值： /&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，当请求进入推理网关时，它将匹配HTTPROUTE中的任何内容，然后将请求发送到inferectionpool。这是事情变得有趣的地方。借助特使支持的L7路由器（例如Kgateway或ISTIO），通常的路由策略和负载平衡将选择请求发送到的端点。但是有了推进池，请求首先转到专门的扩展名“端点选择扩展选择器”或ESE。  此ESE将具有逻辑，可以根据LLM本身的指标选择右后端LLM端点。让我们挖掘它的工作原理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;端点选择如何工作&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当请求到达端点选择扩展名（ESE）时，它将从请求主体中提取模型名称。目前，ESE期望该请求主体遵循&lt;a href =“ https://platform.openai.com/docs/api-reference/chat/create”&gt; OpenAi API格式&lt;/a&gt;。一旦确定了模型名称，ESE就将其与模型名称fie进行了比较可用的推断材料对象的LD确定相应的后端模型名称或LORA适配器。例如，如果ESE检测到具有模型名称Llama2的请求，它将找到匹配的推论emodel并将请求路由到适当的端点，例如VLLM-LALAMA2-7B-2024-11-20或VLLM-LLM-LAMA-LAMA2-7B-7B-2025-03-24。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在ESE中的一系列“过滤器”中定义了选择特定模型的特定端点的逻辑。过滤器评估以​​下标准，以确定最终终点应是什么：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;请求的批判性（批判性或可划分）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; llm的队列等待大小&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;洛拉适配器可用性/亲和力&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; LLM的KV缓存使用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;在src =“ https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.50.46%E2%80%80%80%2%Afam.jpg” srcset =“ https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-21-04-21-AT-8.50.46AM.jpg 1586W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.50.46AM-300X143.JPG 300W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.50.46AM-1024X488.JPG 1024W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.50.46AM-768X366.JPG 768W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.50.46AM-900X429.JPG 900W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.50.46AM-420X200.JPG 420W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.50.46AM-839X400.JPG 839W 839W 839W“ size =” auto =“ auto，（max-witth：max-witth：max-witth：1586px）10086px）100.156px，1586px，1586px” referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;滤波器流以“这是关键请求”开头？如果请求是关键请求，则将检查是否有LLM端点，等待队列低于50。如果找到这些，则将检查这些端点是否已为模型加载了Lora适配器。如果它找到了通过这些过滤器使其通过这些端点的单个端点，那就是返回的端点。如果它找不到加载正确的lora适配器的端点，它将找到下一个最佳选项，即&lt;em&gt; can can can &lt;/em&gt;加载请求的lora适配器。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果过滤器看到一个&lt;em&gt; sheddable &lt;/em&gt;的请求，则它将找到低于80％kV缓存利用率的LLM，并且在其队列中等待的5个请求少于5个请求。如果找不到符合该条件的LLM端点，则删除&lt;em&gt; sheddable &lt;/em&gt;请求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figie class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy” dododing =“ async” width =“ 1554” height =“ 1030” src =“ https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.52.04%E2%E2%80%80%80%2%Afam.jpg”//www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-21-21-at-8.52.04am am.jpg 1554W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.52.04AM-300X199.JPG 300W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.52.04AM-1024X679.JPG 1024W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.52.04AM-768X509.JPG 768W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.52.04AM-900X597.JPG 900W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.52.04AM-302X200.JPG 302W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-21-AT-8.52.04AM-603X400.JPG 603W 603W 603W“ sizes =” size =“ auto =” auto，（max-witth，（max-witth） referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们浏览一些方案：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;给定这些豆荚：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; pod a：queue = 10，kv cache = 30％，已加载lora-x &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; pod b：队列= 5，kv cache = 70％，没有lora-x &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; pod c：队列= 60，kv cache = 20％，已加载lora-x &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于需要Lora-X的关键请求：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;关键请求检查&lt;/strong&gt;：通过（请求是至关重要的）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;低排队过滤器&lt;/strong&gt;：豆荚A和B Pass（队列&lt;50）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; lora亲和力检查&lt;/strong&gt;：只有pod a Passes（具有lora-x）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;最少排队过滤器&lt;/strong&gt;：Pod A Passes（只有一个POD）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;至少KV缓存滤波器&lt;/strong&gt;：Pod A Passes（只有一个POD）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;最终选择&lt;/strong&gt;：pod a &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;strong&gt;示例2：非批评请求&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;给定这些豆荚：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; pod a：queue = 6，kv cache = 85％&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; pod b：队列= 4，kv cache = 75％&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; pod c：队列= 7，kv cache = 60％&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于非关键请求：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;关键请求检查&lt;/strong&gt;：失败（请求不是关键）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;具有容量滤波器&lt;/strong&gt;：只有POD B通过（队列≤5和KV高速缓存≤80％）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;最终选择&lt;/strong&gt;：pod b &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;给定这些豆荚：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; pod a：queue = 70，kv cache = 40％，有lora-y &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; pod b：队列= 80，kv cache = 60％，有lora-y &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; pod c：queue = 65，kv cache = 70％，没有lora-y &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于需要Lora-Y的关键请求：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;关键请求检查&lt;/strong&gt;：通过（请求是至关重要的）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;低排队过滤器&lt;/strong&gt;：失败（所有队列&gt; 50）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;排队过滤器&lt;/strong&gt;：pods a和c Pass（在队列范围的第一部分中）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;低成本的Lora Filter &lt;/strong&gt;：只有Pod A Passes（具有Lora-Y）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;至少KV缓存滤波器&lt;/strong&gt;：Pod A Passes（只有一个POD）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;最终选择&lt;/strong&gt;：pod a &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-heading”&gt;总结&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网关API推断扩展项目引入了一些强大的模型选择和负载平衡功能，旨在在Kubernetes上运行时改善GPU和LLM利用率。 GPU的供应量很短，因此非常昂贵。推断扩展项目可以显着改善及时处理，并为组织节省大量资金。您可以在&lt;a href =“ https://gateway-api-inference-extension-extension.sigs.k8s.io/performance/benchmark/”&gt;该项目的网站&lt;/a&gt;。&lt;/p&gt;上查看一些初步号码。&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 20 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Creating a ClickHouse Cluster on Raspberry Pis】在Raspberry PI上创建Clickhouse群集</title>
      <link>https://www.cncf.io/blog/2025/04/18/creating-a-clickhouse-cluster-on-raspberry-pis/</link>
      <description>【&lt;p&gt;Want a hands-on way to explore Kubernetes and ClickHouse®—without spinning up cloud VMs? In this post, we’ll build a home-lab cluster of Raspberry Pi 5 boards that mimics a high-availability setup. Whether you’re a cloud-native developer looking to broaden your bare-metal and networking skills or simply a tinkerer who loves pushing Pi hardware to its limits, this project offers a fun, cost-effective way to get practical Kubernetes experience in your own home. We’ll cover everything from preparing the Pis and installing K3s to spinning up a replicated ClickHouse cluster managed by the Altinity Operator for ClickHouse.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Why Do This? &lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Besides the inherent nerdiness of it, there are some practical reasons:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;I’m approaching this project with a background as a cloud-native app developer. That means I’ve rarely dealt with bare-metal or on-premises networking. Building this cluster is a great way to learn about concepts I typically don’t see when using cloud services.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;It’s also handy to have a Kubernetes cluster available for experimentation without waiting for new AWS VMs to provision. Tools like vCluster make this even more attractive for tasks such as quickly testing Helm charts.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;The Hardware&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Prepping the Pis&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Installing K3s&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Installing the Control Plane&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Connecting to K3s&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Installing Cilium&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Joining the Worker Nodes&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Installing ClickHouse&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Installing the Altinity Operator&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Creating a ClickHouse Cluster with Helm&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;The Hardware&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For this tutorial, we’re using three Raspberry Pi 5 (8GB) models. You could certainly use any other ARM- or x86-based System-on-Chip (SoC) or mini PC—K3s is widely compatible as a lightweight Kubernetes distribution. We specifically chose Raspberry Pi 5 boards because of the availability of a PCIe port. Combined with a compatible HAT, this lets us use NVMe drives at relatively high speeds—much faster than what’s possible with a MicroSD card.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Bill of Materials:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;3× Raspberry Pi 5 (8GB model)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;3× Geekworm X1001 PCIe-to-M.2 HAT&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;3× Official Raspberry Pi 5 Active Coolers&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;300W USB-C power supply*&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;1× MicroSD card (8GB–32GB)**&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Optional&lt;/strong&gt;: Micro-HDMI to HDMI adapter, monitor, USB keyboard, mouse&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Raspberry Pi 5 runs at a slight variation from the standard USB-C spec. They may complain of undervolting if you use a typical USB-C supply. Even though this cluster will only draw ~30–60W at peak, I used a 300W power supply because it was the only one I found that could deliver more than 15 watts on multiple ports simultaneously. Official Raspberry Pi power supplies are a good choice when reliability is crucial.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;**We’ll just use the MicroSD card to flash the OS onto each NVMe drive. Larger cards will take longer to copy the image, so if you can find an 8GB card, that’s ideal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;A Note on Memory&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re using the 8GB model, but if you have the newer 16GB version, more RAM is always helpful. You may struggle to run a multi-node K3s setup with ClickHouse on 4GB or less, though with some tuning, it can be done.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Step 1: Set Up the Raspberry Pis&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;First, we’ll set up our Raspberry Pi 5 boards so they can boot from their NVMe drives rather than a standard microSD card. This gives us improved performance and reliability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Install Raspbian Lite on an SD card&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Grab the latest Raspbian (Lite) image from the official Raspberry Pi website.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Flash it onto a microSD card using your favorite tool (e.g., balenaEtcher, Raspberry Pi Imager, or dd on Linux).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Using the Raspberry Pi Imager tool is preferred since it allows you to easily create a bootable image preloaded with your username and password and/or SSH public key.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Be sure to also enable SSH under the `Services` tab (if using the Raspberry Pi Imager)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Boot the Pi&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Insert the flashed SD card into the Pi.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Connect the Pi to power and wait for it to boot up.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;If you’re using a monitor and keyboard, you can log in directly. Otherwise, you can SSH in after identifying the Pi’s IP address on your local network (typically you can do this by checking the client list on your router’s control panel).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Copy the disk image to the NVMe&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;We’ll clone the SD card’s filesystem onto the attached NVMe drive using dd.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Be cautious with this command—it’s destructive. Double-check your source (/dev/mmcblk0 or /dev/mmcblk0pX) and destination (/dev/nvme0nX) devices before running. Here’s the basic form:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo dd if=/dev/mmcblk0 of=/dev/nvme0n1 bs=32M&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;This can take a while, depending on the size of your SD card and the performance of your drives. Larger SD cards will take longer, so an ~8GB SD card is best.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Shut down, remove the SD card, and reboot&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Once the dd operation completes, power down the Pi, remove the SD card, and power the Pi back on.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The Pi should now boot from the NVMe drive.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Change the Pi hostname&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Assign each Pi a unique hostname so you can tell them apart. You can do this via sudo raspi-config or by editing /etc/hostname and /etc/hosts.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;For example, name them pi1, pi2, and pi3.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Expand the filesystem&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After cloning from the SD to the NVMe, you will have unused disk space. Use raspi-config to expand the root file system to use all space available on the NVMe:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo raspi-config --expand-rootfs&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Enable cgroups&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes requires certain cgroup settings to be enabled. Edit&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;/boot/firmware/cmdline.txt (or /boot/cmdline.txt depending on your distribution) &#xA;&#xA;cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Make sure it’s on the same line as the other parameters, just separated by spaces.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Update the Pi firmware&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This applies the new cgroup settings:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;sudo rpi-update&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reboot the Pi&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;A quick sudo reboot will apply all the changes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Repeat these steps for each Pi in your cluster (pi1, pi2, pi3).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Step 2: Install K&lt;/strong&gt;3s&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now that our Pis are prepped, we’ll install a minimal Kubernetes distribution: K3s from Rancher [LINK]. We’ll set up one Pi as the control-plane node and the others as worker nodes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Install the control-plane node on &lt;/strong&gt;&lt;strong&gt;pi1&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;SSH into pi1 and run:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=&#34;server&#34; sh -s - --flannel-backend none&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;We’re disabling Flannel here (–flannel-backend none) because we’ll use the Cilium CNI in a later step.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Set up &lt;/strong&gt;&lt;strong&gt;pi2&lt;/strong&gt;&lt;strong&gt; and &lt;/strong&gt;&lt;strong&gt;pi3&lt;/strong&gt;&lt;strong&gt; as worker nodes&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On pi1, retrieve the K3S token from:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;/var/lib/rancher/k3s/server/node-token&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;SSH into pi2 (and similarly pi3) and run:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;curl -sfL https://get.k3s.io | K3S_URL=https://pi1:6443 K3S_TOKEN=[YOUR_TOKEN] sh -s -&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Replace [YOUR_TOKEN] with the actual token you grabbed from pi1. This command tells your worker nodes how to join the pi1 control plane.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Copy the &lt;/strong&gt;&lt;strong&gt;k3s.yaml&lt;/strong&gt;&lt;strong&gt; and set it as your kubeconfig&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On your local machine, do:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;scp user@pi1:/etc/rancher/k3s/k3s.yaml ./k3s.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You will need to edit the file and replace `&lt;a href=&#34;https://127.0.0.1:6443/&#34;&gt;https://127.0.0.1:6443&lt;/a&gt;` with `&lt;a href=&#34;https://pi1:6443/&#34;&gt;https://pi1:6443&lt;/a&gt;`, then set the file as your kubeconfig temporarily (You could also merge this into your default kubeconfig file if you wish):&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;export KUBECONFIG=./k3s.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Now you can manage the cluster from your local machine using kubectl commands.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Install Cilium as your CNI&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re installing&lt;a href=&#34;https://cilium.io/&#34;&gt; Cilium&lt;/a&gt; for networking and load-balancing features. We enable L2 announcements so that later we can create LoadBalancer services that are able to request External IPs from our Router’s DHCP pool:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm upgrade cilium cilium/cilium --version 1.16.5 \&#xA;  --namespace kube-system \&#xA;  --reuse-values \&#xA;  --set l2announcements.enabled=true \&#xA;  --set k8sClientRateLimit.qps=30 \&#xA;  --set k8sClientRateLimit.burst=60 \&#xA;  --set kubeProxyReplacement=true \&#xA;  --set k8sServiceHost=pi1 \&#xA;  --set k8sServicePort=6443&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Make sure you have Helm installed and that your helm CLI is pointed at the correct cluster (KUBECONFIG=./k3s.yaml).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Step 3: Install the Altinity Operator&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With Kubernetes in place, it’s time to install the Altinity Operator for ClickHouse. This operator makes ClickHouse deployments a breeze.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/Altinity/clickhouse-operator/master/deploy/operator/clickhouse-operator-install-bundle.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;That’s it! Once this completes, the operator will be ready to manage ClickHouse instances within your cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Step 4: Create a Replicated ClickHouse Cluster&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’ll now create a simple replicated ClickHouse setup using Altinity’s Helm chart.&lt;strong&gt;Add the Altinity Helm repo and install&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm repo add altinity https://helm.altinity.com&#xA;helm install clickhouse-dev --create-namespace --namespace clickhouse altinity/clickhouse \&#xA;  --set keeper.enabled=true \&#xA;  --set clickhouse.replicasCount=2&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;We’re enabling ClickHouse Keeper (keeper.enabled=true) to handle the coordination tasks that Zookeeper would normally manage.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;We set replicasCount=2 for a small replicated setup. Adjust as you see fit if you want more replicas. By default, the 3 Keeper replicas will each require a unique node. You can force the ClickHouse instances onto unique nodes by setting the value `clickhouse.antiAffinity = true`&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Test Queries&lt;/strong&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;Once the installation completes, you can run a few queries to confirm that your cluster is healthy:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Check Zookeeper state (via Keeper):&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;SELECT * FROM system.zookeeper WHERE path = &#39;/&#39;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Create a replicated table:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;CREATE TABLE IF NOT EXISTS test_rep ON CLUSTER `{cluster}`&#xA;(&#xA;  `number` UInt32,&#xA;  `created_at` DateTime DEFAULT now()&#xA;)&#xA;ENGINE = ReplicatedMergeTree&#xA;ORDER BY number;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Insert some test data:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;INSERT INTO test_rep (number)&#xA;SELECT number&#xA;FROM system.numbers&#xA;LIMIT 10;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Verify replication across nodes:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;SELECT hostName(), *&#xA;FROM clusterAllReplicas(&#39;{cluster}&#39;, default.test_rep)&#xA;ORDER BY 1 ASC, 2 ASC;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;You should see the same data from each replica, along with its hostName.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;That’s it! You now have a functioning Kubernetes home lab running ClickHouse in a replicated setup. Congratulations on making it this far—enjoy all the benefits of a local high-availability environment, plus the added satisfaction of doing it on Raspberry Pi 5s.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;想要一种动手探索Kubernetes和ClickHouse®的动手方法 - 没有旋转云VM？在这篇文章中，我们将构建一个像Raspberry Pi 5板的自制群集，该板模拟高可用性设置。无论您是想要扩大裸露金属和网络技能的云端开发人员，还是只是一个喜欢将PI硬件推向其限制的修补师，该项目都提供了一种有趣，具有成本效益的方式，以在您自己的家庭中获得实用的Kubernetes体验。我们将介绍从准备PI和安装K3到由Altinity操作员管理的复制的Clickhouse群集旋转的所有内容。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;为什么这样做？ &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了固有的固有性外，还有一些实际原因：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;我正在以云本地应用开发人员的背景来接触该项目。这意味着我很少处理裸机或本地网络。构建此集群是学习我通常在使用云服务时看不到的概念的好方法。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;拥有一个可用于实验的kubernetes群集也很方便，而无需等待新的AWS VM提供。诸如VCluster之类的工具使此任务更具吸引力，例如快速测试Helm图表。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;概述&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;硬件&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;准备pis &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;安装K3S&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;安装控制平面&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;连接到K3S &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;安装纤毛&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;加入工人节点&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;安装Clickhouse&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;安装高度操作员&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;用舵机创建一个clickhouse群&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;硬件&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于本教程，我们使用了三种Raspberry Pi 5（8GB）型号。当然，您可以使用任何其他基于ARM或X86的基于芯片的系统或Mini PC-K3S广泛兼容为轻量级的Kubernetes分布。由于PCIE端口的可用性，我们特别选择了Raspberry Pi 5板。结合兼容的帽子，这使我们能够以相对较高的速度使用NVME驱动器，比microSD卡的速度快。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;材料清单：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; 3×Raspberry Pi 5（8GB型号）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; 3×geek X1001 PCIE-TO-M.2 HAT &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; 3×官方Raspberry Pi 5活动冷却器&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; 300W USB-C电源*&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; 1×microSD卡（8GB – 32GB）** &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;可选&lt;/strong&gt;：Micro-HDMI至HDMI适配器，显示器，USB键盘，鼠标&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Raspberry Pi 5与标准USB-C规格略有变化。如果您使用典型的USB-C供应，他们可能会抱怨不明显。即使这个集群在高峰时只能绘制〜30–60W同时在多个端口上的瓦特。官方Raspberry Pi电源是一个不错的选择。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; **我们只使用microSD卡将操作系统刷到每个NVME驱动器上。较大的卡需要更长的时间来复制图像，因此，如果您可以找到8GB卡，那是理想的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;记忆的注释&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们正在使用8GB型号，但是如果您拥有较新的16GB版本，则更多的RAM总是有帮助的。您可能很难在4GB上使用Clickhouse运行多节点K3S设置，尽管可以进行一些调整，但可以完成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;步骤1：设置覆盆子pis &lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;首先，我们将设置Raspberry Pi 5板，以便它们可以从NVME驱动器而不是标准microSD卡启动。这为我们提供了提高的性能和可靠性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;在SD卡上安装Raspbian Lite &lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;从官方Raspberry Pi网站上获取最新的Raspbian（Lite）图像。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用您喜欢的工具（例如Balenagether，Raspberry Pi Imager或Linux上的DD）将其刷新到microSD卡上。&lt;/li&gt;）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;首选使用Raspberry Pi Imager工具，因为它允许您轻松创建使用用户名和密码和/或SSH公共密钥预装的可引导映像。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;请确保在“服务”选项卡（如果使用Raspberry Pi Imager）下启用SSH &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;启动Pi &lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;将闪烁的SD卡插入PI。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将PI连接到电源并等待启动。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;如果您使用的是监视器和键盘，则可以直接登录。否则，您可以在本地网络上识别PI的IP地址后进行SSH（通常可以通过检查路由器的控制面板上的客户端列表来执行此操作）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;将磁盘图像复制到NVME &lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;我们将使用DD。&lt;/li&gt;克隆SD卡的文件系统&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对此命令保持谨慎，这是破坏性的。在运行之前，请仔细检查您的源（/dev/mmcblk0或/dev/mmcblk0px）和目标（/dev/nvme0nx）设备。这是基本形式：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; sudo dd如果=/dev/mmcblk0 of =/dev/dev/nvme0n1 bs = 32m&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;这可能需要一段时间，具体取决于您的SD卡的大小和驱动器的性能。较大的SD卡将需要更长的时间，因此最好的SD卡是最好的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;关闭，删除SD卡并重新启动&lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; DD操作完成后，向PI电源电源，卸下SD卡，然后将PI供电。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; PI现在应该从NVME驱动器启动。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;更改pi主机名&lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&lt;li&gt;为每个PI分配一个唯一的主机名，因此您可以区分它们。您可以通过sudo raspi-config或编辑/etc/hostName和/etc/hosts进行此操作。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;例如，将它们命名为pi1，pi2和pi3。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;展开文件系统&lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从SD克隆到NVME后，您将拥有未使用的磁盘空间。使用raspi-config扩展根文件系统以使用NVME上可用的所有空间：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; sudo raspi-config -expand-rootfs&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;启用cgroups &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubernetes需要启用某些CGroup设置。编辑&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;/boot/stook/comdline.txt（or/boot/cmdline.txt，取决于您的分布） &#xA;&#xA;cgroup_enable = cpuset cgroup_memory = 1 cgroup_enable =内存&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;确保它与其他参数在相同的线上，只是被空间隔开。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;更新PI固件&lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这应用了新的cgroup设置：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; sudo rpi-update &lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;重新启动pi &lt;/strong&gt;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;快速的sudo重新启动将应用所有更改。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在群集中为每个PI重复这些步骤（pi1，pi2，pi3）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt;步骤2：安装k &lt;/strong&gt; 3S &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，我们的PI已经准备好了，我们将安装最小的Kubernetes发行版：Rancher [link]的K3S。我们将把一个PI设置为控制平面节点，而将一个Pi设置为工作节点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;在&lt;/strong&gt; &lt;strong&gt; pi1 &lt;/strong&gt; &lt;/li&gt;上安装控制平面节点&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; ssh进入PI1并运行：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; curl -sfl -sfl https://get.k3s.io | install_k3s_exec =“ server” sh -s-- flannel -backend无&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;我们在此处禁用法兰绒（ -   -  backend none），因为我们将在以后的步骤中使用cilium cni。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;设置&lt;/strong&gt; &lt;strong&gt; pi2 &lt;/strong&gt; &lt;strong&gt;和&lt;/strong&gt; &lt;strong&gt; pi3 &lt;/strong&gt; &lt;strong&gt;作为工人节点&lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在PI1上，从：&lt;/p&gt;中检索K3S令牌&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;/var/lib/rancher/k3s/server/node-token&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; ssh进入PI2（以及类似的PI3）并运行：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; curl -sfl -sfl https://get.k3s.io | k3s_url = https：//pi1：6443 k3s_token = [your_token] sh -s-&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;用您从PI1获取的实际令牌替换[your_token]。此命令告诉您的工人点点如何加入PI1控制平面。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;复制&lt;/strong&gt; &lt;strong&gt; k3s.yaml &lt;/strong&gt; &lt;strong&gt;并将其设置为您的kubeconfig &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在您的本地机器上，做：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; scp user@pi1：/etc/rancher/k3s/k3s.yaml ./k3s.yaml&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您需要编辑文件并替换`&lt;a href =“ https://127.0.0.1:6443/”&gt; https：//127.0.0.0.0.1:6443 &lt;/a&gt; href =“ https：//pi1：6443/”&gt; https：//pi1：6443 &lt;/a&gt;`，然后将文件设置为kubeconfig暂时（您也可以将其合并到默认的kubeconfig文件中，如果需要的话，&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;导出kubeconfig =。/k3s.yaml&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;现在您可以使用kubectl命令从本地计算机管理群集。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;安装cilium作为您的CNI &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们正在安装&lt;a href =“ https://cilium.io/”&gt; Cilium &lt;/a&gt;用于网络和负载 - 平衡功能。我们启用L2公告，以便稍后我们可以创建能够从路由器的DHCP池中请求外部IP的LoadBalancer服务：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; helm升级cilium cilium/cilium  -  version 1.16.5 \&#xA;  -namespace kube-system \&#xA;   -  reuse-values \&#xA;  -set l2announcement.enabled = true \&#xA;  -set k8sclientratelimit.qps = 30 \&#xA;  -set k8sclientratelimit.burst = 60 \&#xA;  -Set kubeproxyplacement = true \&#xA;  -Set K8SServiceHost = PI1 \&#xA;  -Set K8SServicePort = 6443&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;确保您已经安装了掌舵，并且您的舵CLI指向正确的集群（kubeconfig =。/k3s.yaml）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用Kubernetes，是时候为Clickhouse安装Altinity操作员了。该操作员使ClickHouse部署变得轻而易举。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; kubectl apply -f https://raw.githubusercercontent.com/altinity/altinity/clickhouse-operator/master/master/deploy/operator/poperator/clickhouse-clickhouse-operator-poperator-poperator-install-bundle.yaml.yaml&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就是这样！完成此操作后，操作员将准备好管理群集中的Clickhouse实例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，我们将使用Altinity的Helm图表创建一个简单的复制点击设置。&lt;strong&gt;添加Altinity Helm Repo并安装&lt;/strong&gt; &lt;strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; helm repo添加altity https://helm.altinity.com&#xA;Helm install install clickhouse-dev- create-namespace -namespace clickhouse altinity/clickhouse \&#xA;  -set keeper.enabled = true \ true \&#xA;  -set clickhouse.replicascount = 2&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;我们正在启用ClickHouse Keeper（keeper.enabled = true）来处理Zookeeper通常会管理的协调任务。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;我们为一个小复制设置设置了replicast = 2。如果您想要更多的复制品，请根据您看到的适合度进行调整。默认情况下，3 kee每个副本将每个都需要一个唯一的节点。您可以通过设置值`clickhouse.antiaffinity = true` &lt;/li&gt;来将ClickHouse实例强加于唯一节点&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;测试查询&lt;/strong&gt; &lt;strong&gt; &lt;br&gt; &lt;/strong&gt;安装完成后，您可以进行一些查询以确认您的群集健康：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;检查Zookeeper状态（通过守护者）：&lt;/strong&gt; &lt;strong&gt; &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;从system.zookeeper中选择 * path =&#39;/&#39;&lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;创建一个复制表：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;创建表格（如果不存在）cluster上的test_rep`{cluster}&#39;&#xA;（（&#xA;  `number`Uint32，&#xA;  `create_at`DATETIME默认值NOW NOW（）&#xA;）&#xA;引擎= ReplicatedMergetree&#xA;按数字订购；&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;插入一些测试数据：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt;插入test_rep（编号）&#xA;选择号码&#xA;来自System.numbers&#xA;限制10;&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;验证跨节点的复制：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class =“ wp-block-code”&gt; &lt;code class =“”&gt; select hostname（）， *&#xA;来自clusterAllReplicas（&#39;{cluster}&#39;，default.test_rep）&#xA;按1 ASC，2 ASC订购；&#xA;&lt;/code&gt; &lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;您应该从每个副本及其主机名中看到相同的数据。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就是这样！现在，您可以在复制的设置中使用功能运行的Kubernetes家庭实验室运行Clickhouse。恭喜您这么远 - 赋予当地高可用性环境的所有好处，以及在Raspberry Pi 5s上进行的满意。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 17 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The CNCF TOC @ KubeCon + CloudNativeCon Europe 2025】CNCF TOC @ kubecon + Cloudnativecon欧洲2025</title>
      <link>https://www.cncf.io/blog/2025/04/16/the-cncf-toc-kubecon-cloudnativecon-europe-2025/</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://www.cncf.io/people/technical-oversight-committee/&#34;&gt;The Technical Oversight Committee&lt;/a&gt; (TOC) provides technical leadership to the cloud native community. Strong TOC participation at this year’s &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/&#34;&gt;KubeCon + CloudNativeCon Europe&lt;/a&gt; in London enabled in-person discussions and strategic planning for &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt; project technical priorities in the coming years.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Maintainer Summit&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/features-add-ons/maintainer-summit/&#34;&gt;CNCF Maintainer Summit&lt;/a&gt; is an exclusive event for the people behind CNCF projects to gather face-to-face, collaborate, and celebrate the projects that make “Cloud Native.” The Maintainer summit, co-located with KubeCon, took place on March 31st at Excel London.The CNCF TOC was highly visible at the event, notably with TOC Chair Karena Angell co-chairing the summit. The event kicked off with a “Welcome to Your TOC” keynote featuring TOC members on stage, providing the CNCF maintainer community an opportunity for in-person interaction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeh8bN8Hh-YmtRc-J-gpKPgpj9kXRYZL25DUgeVr7R1NIEgC8leIzt4Vb7H2RuURaXqhCFaO7HXM_xu74T7NzJPD0dzzw13Y3La_pkjZozrXUHvaSUhu7parurhIxdGjJFu91LwNQ?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;Maintainer Summit&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOCs led a well attended roundtable discussion around the &lt;a href=&#34;https://tag-security.cncf.io/&#34;&gt;TAG&lt;/a&gt; (Technical Advisory Groups) reboot. We had a wealth of new initiatives put forward and are all looking forward to seeing these develop in the upcoming months.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeNP0cqo1PxKD5UWbAxackBPKi3AvbtHAoEdsQzEuQyiQwV-ZF2KaNjBuDT0b06h9YrGnqyh64lGz8L71V8qn5jjWkyyf0NyLEso_uGF90InuM8dokYtkKTgnCUJ8oAilBqU48F?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;group discussion&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC members also reviewed ideas from all workshop tables to select the winning proposal. The winning table proposed an idea around “Centralized Resource Management and Transparency” to establish a centralized service catalog for resource provisioning, effectively abstracting the complexity of resource management away from individual projects.&lt;br&gt;&lt;br&gt;&lt;strong&gt;The TOC Offsite&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC held an offsite co-located event with KubeCon, where Bob Killen, Senior Technical Program Manager at CNCF, started with a TOC 101 session for the newly elected TOC members. They also did a SWOT analysis to reflect on the previous years’ activities. The priorities for the upcoming year were also discussed —&amp;nbsp; including steering the TAG reboots, ensuring credibility, and emphasizing standardization.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdpZLFsx-TFd9WSTiURWixOPY_EnibYrvgcGrMPRVJTcF4lrbJVhZxug9P6wuQ2xJjPlCLNto6EgtQv7rk0vr2KJXOJcXjefoUsYujiIHHf2xJlFTZEk6WIIAAksmkGyu2iXivzCw?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;TOC offsite&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TOC + TAB Discussion Highlights&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC also met with the TAB in a similar fashion to have a retrospective of the previous year’s activities and discuss the opportunities ahead. The discussion mainly revolved around giving more focus to end user adoption, and how to facilitate it.&lt;br&gt;&lt;br&gt;&lt;strong&gt;TOC + GB Strategy Session&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC next met with the CNCF &lt;a href=&#34;https://www.cncf.io/people/governing-board/&#34;&gt;Governing Board&lt;/a&gt; for a very insightful meeting to discuss the strategies for the upcoming year. The meeting featured diverse discussions, including Brian Douglas, CNCF’s new Director of Ecosystem, leading a discussion on enhancing contributions of reference architectures and case studies. Mirko Boehm, LF Europe, presented on the Cyber Resilience Act (CRA) and its implications for open source projects. Karena Angell, TOC Chair, highlighted the need for better support and incentives for projects to advance maturity levels. Finally, Matt White, PyTorch Executive Director, along with Chris Aniszczyk, CTO of CNCF, and Todd Moore, SVP of Community Operations at the Linux Foundation, addressed the challenges and opportunities of AI innovation in Linux Foundation and CNCF projects.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcTnymMWAjmQI6qanhZd-DbuGYY61u5f4JLbAbzIMvkwi7T5GN0foMKBNd9cDFu8KAYEsgryorGggxxAnwDVDNERhk1FeRG2cGduykC8IBsBKqpWmv3yks1t7I9x2834V8pSVhy?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;Governing Board meeting&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TOC at the Keynotes&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apart from the usual responsibilities, the TOC had an amazing presence at the KubeCon keynote stage as well. Faseela K, Cloud Native Developer, Ericsson was the co-chair for KubeCon EU and hosted the keynotes for all three days. The second day of KubeCon keynotes saw Ricardo Rocha, Computing Engineer, CERN and Katie Gamanji, Senior Field Engineer, Apple on stage sharing the CNCF end user stories from &lt;a href=&#34;https://youtu.be/CEr3HECMgBk?si=7trzfwjYuVwgKIm0&#34;&gt;Apple&lt;/a&gt; and CERN. Katie was also part of the Keynote panel “&lt;a href=&#34;https://youtu.be/3Mucc7AsXN4?si=ik8HaqHroMqAoDHL&#34;&gt;CNCF at 10&lt;/a&gt;”, where she discussed a decade of transformative growth within the CNCF ecosystem along with Joseph Sandoval, Principal Product Manager, Adobe and Liz Rice, Chief Open Source Officer, Isovalent at Cisco.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeFEhkfIbCcwbJGXWAStFa_5DRbAge6wPH6CBUUfgE2DLkBQIGXd4-Wa-Zp8f815-SQlnWYmGpBa8M5EoOA7SCydNDmgsQXF8fAWKRjj8mlIyGXmQ0oKvW4kw9wKoNgsQUts6Olxw?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;TOC at the KubeCon + CloudNativeCon Europe 2025 keynotes&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Day 3 keynotes had Faseela on stage with a panel on “&lt;a href=&#34;https://www.youtube.com/watch?v=qj9q_-S91L8&#34;&gt;Cloud Native Evolution in Telecom&lt;/a&gt;” with representation from end users Orange, Vodafone and Swisscom.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfjo3k8Lw_8OLwk-GOXJx0BqeKcAT_gQIjezcjr_-CBCmQ7wij7puFdv6RqRiS4mZ0tMVOj057tAUmrlX035TxfcNij64o6f2DbTwYrAXni24XD4h_MjAsw7dCTVuip70TwWdmk?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;Day 3 keynotes&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC also had a solid keynote, “&lt;a href=&#34;https://youtu.be/TvhUer_XPFk?si=5EZ_lT0JRNuEUIpI&#34;&gt;221B Cloud Native Street&lt;/a&gt;,” which was led by Katie Gamanji and Ricardo Kocha and summarized all the topics that were under discussion for the previous days. They did a great job in delivering the key messages to the wider audience including project maturity levels, the TAG reboot and the need for more focus on end users. They also discussed the identified gaps that will shape the future of the CNCF ecosystem – multicluster management, cost management and sustainability and tooling around infrastructure provisioning and secret management.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc-U20LUxyPh75EAgqBeGJTGTqCZ1Q8LvgR5YYV4NlkTzLX7ovoL2R9xC1Tk9YgMNxtZZiTQBK8WTrAgCmgn9z9r6kl8KtzvUZGKnKPapg_L38C03was9sEmsAkqN_cP0pkjqsI9A?key=S2xh-zmrFpbWl4w_Z0hqEBkc&#34; alt=&#34;KubeCon + CloudNativeCon Europe 2025 keynotes&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TOC Sessions @KubeCon&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apart from the keynotes, the TOC members had several other talks at the conference, including a TOC panel on the final day:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tx7l/quantum-ready-kubernetes-how-do-we-get-there-nikhita-raghunath-natalie-fisher-broadcom-nigel-jones-ibm-ricardo-rocha-cern-tomas-gustavsson-keyfactor?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Quantum-Ready Kubernetes: How Do We Get There? – Nikhita Raghunath &amp;amp; Natalie Fisher, Broadcom; Nigel Jones, IBM; Ricardo Rocha, CERN; Tomas Gustavsson, Keyfactor&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tgwS/discover-cncf-tag-runtime-advancing-cloud-native-innovation-from-ai-to-edge-ricardo-aravena-snowflake-stephen-rust-akamai-rajas-kokodkar-broadcom-alexander-kanevskiy-intel-danielle-tal-microsoft?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Discover CNCF TAG Runtime: Advancing Cloud-Native Innovation from AI to Edge – Ricardo Aravena, Snowflake; Stephen Rust, Akamai; Rajas Kokodkar, Broadcom; Alexander Kanevskiy, Intel; Danielle Tal, Microsoft&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tcvu/project-lightning-talk-project-copacetic-jeremy-rickard-maintainer?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Project Lightning Talk: Project Copacetic – Jeremy Rickard, Maintainer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1txCV/signed-sealed-delivered-sign-and-verify-all-the-things-jeremy-rickard-microsoft?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Signed, Sealed, Delivered – Sign and Verify All the Things – Jeremy Rickard, Microsoft&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tx7c/balancing-cost-and-efficiency-day2-optimization-of-multi-cluster-ai-infrastructure-kevin-wang-huawei?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Balancing Cost and Efficiency: Day2 Optimization of Multi-Cluster AI Infrastructure – Kevin Wang, Huawei&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1td1B/kubernetes-sig-architecture-intro-and-updates-john-belamaric-google-davanum-srinivas-aws?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Kubernetes SIG Architecture Intro and Updates – John Belamaric, Google &amp;amp; Davanum Srinivas, AWS&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tcxk/cloud-native-storage-and-data-the-cncf-storage-tag-projects-technology-landscape-raffaele-spazzoli-red-hat-alex-chircop-akamai?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Cloud Native Storage and Data: The CNCF Storage TAG Projects, Technology &amp;amp; Landscape – Raffaele Spazzoli, Red Hat; Alex Chircop, Akamai&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1txEs/stateful-superpowers-explore-high-performance-and-scaleable-stateful-workloads-on-k8s-alex-chircop-chris-milsted-alex-reid-akamai-lori-lorusso-percona?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Stateful Superpowers: Explore High Performance and Scaleable Stateful Workloads on K8s – Alex Chircop, Chris Milsted &amp;amp; Alex Reid, Akamai; Lori Lorusso, Percona&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1txFn/izzy-saves-the-birthday-a-story-driven-live-demo-exploring-the-magic-of-service-mesh-lin-sun-soloio-faseela-kundattil-ericsson-software-technology?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;“Izzy Saves the Birthday” – A Story-Driven Live Demo Exploring the Magic of Service Mesh – Lin Sun, Solo.io &amp;amp; Faseela Kundattil, Ericsson Software Technology&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1txEX/journey-at-the-new-york-times-is-sidecar-less-service-mesh-disappearing-into-infrastructure-lin-sun-soloio-ahmed-bebars-the-new-york-times?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Journey at the New York Times: Is Sidecar-Less Service Mesh Disappearing Into Infrastructure? – Lin Sun, Solo.io &amp;amp; Ahmed Bebars, The New York Times&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tczp/istio-the-past-present-and-future-of-the-project-and-community-lin-sun-louis-ryan-soloio-raymond-wong-forbes?iframe=yes&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&#34;&gt;Istio: The Past, Present and Future of the Project and Community – Lin Sun &amp;amp; Louis Ryan, Solo.io; Raymond Wong, Forbes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TOC Panel&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;TOC also had a panel discussion on the final day to clarify any doubts or questions the KubeCon audience had regarding our work, as well as our priorities. There were many questions related to the TAG reboot initiative and concerns if the same will obstruct the project moving levels. Overall, the TAG reboot will serve to guide projects with better technical guidance to move between maturity levels as well as be better prepared for end user adoption.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cncf.io/people/technical-oversight-committee/&#34;&gt;Technical Oversight Committee | CNCF&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://github.com/cncf/toc&#34;&gt;http://github.com/cncf/toc&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://github.com/cncf/tab&#34;&gt;http://github.com/cncf/tab&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cncf/toc/issues/1527&#34;&gt;https://github.com/cncf/toc/issues/1527&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;/h3&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; &lt;a href =“ https://www.cncf.io/people/technical-oversight-committee/”&gt;技术监督委员会&lt;/a&gt;（TOC）为云土著社区提供技术领导力。强大的TOC参与今年的&lt;a href =“ https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/”&gt; kubecon + kubecon + cloudnativecon欧洲href =“ https://www.cncf.io/”&gt; CNCF &lt;/a&gt;未来几年的项目技术优先级。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;维护者峰会&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/features-add-ons/maintainer-summit/&#34;&gt;CNCF Maintainer Summit&lt;/a&gt; is an exclusive event for the people behind CNCF projects to gather face-to-face, collaborate, and celebrate the projects that make “Cloud Native.”与Kubecon共同位置的维护者峰会于3月31日在伦敦Excel伦敦举行。CNCFTOC在活动中非常明显，特别是与TOC主席Karena Angell共同主持峰会。该活动以“欢迎来到您的TOC”为主题演讲开始，在舞台上以TOC成员为特色，为CNCF维护者社区提供了一个面对面互动的机会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxeh8bn8hh-h-mytrc-j-gpkpgpgpgpj9kxryzl25dugevr7r1niegc8leizt4vb 7H2RUURAXQHCFAO7HXM_XU74T7NZJPD0DZZW13Y3LA_PKJZOZRXUHVASUHVASUHUHU7PARURHIXDGJJFU91LWNQ？ alt =“维护者峰会” referrerpolicy =“ no-the Referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOCS围绕着&lt;a href =“ https://tag-security.cncf.io/”&gt; TAG &lt;/a&gt;（技术咨询小组）重新启动重新启动。我们提出了许多新计划，并期待在接下来的几个月中看到这些计划的发展。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxenp0cqo1pxkd5uwbaxackbpki3avbpki3avbthao3avbthaoedsqzeuqyqyiqwv-zf2kanjb UDT0B06H9YRGNQYH64LGZ8L71V8QN5JJJWKYYF0NYLESO_UGF90INUM8DOKYTKKKTGNCUJ8OAILBQU48F？ alt =“组讨论” referrerpolicy =“ no-toferrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOC成员还审查了所有研讨会表的想法，以选择获胜的建议。获奖表提出了一个围绕“集中资源管理和透明度”的想法，以建立用于资源提供资源的集中服务目录，有效地将资源管理与单个项目的复杂性抽象。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOC与Kubecon举行了一次异地共同的活动，CNCF的高级技术计划经理Bob Killen开始为新当选的TOC成员举行的TOC 101会议。他们还进行了SWOT分析以反思前几年的活动。还讨论了来年的优先事项 - 包括指导标签重新启动，确保信誉和强调标准化。/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxdpzlfsx-tfd9wstiurwixopy_enibyrvgcgrmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprmprv4lrrbjvhzxug9 p6wuq2xjjjjjplnto6egtqv7rk0vr2kjxojcxjjefousyujiihhhf2xjlftzek6wiiaak6wiiaaksmkgyu2ixixixixixixixixixixcw？ Alt =“ Toc Offsite” reverrerPolicy =“ no-toferrer”&gt; &lt;/figifer&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; toc + tab讨论亮点&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOC还以类似的方式与标签会面，以回顾上一年的活动并讨论未来的机会。讨论主要围绕着最终用户采用的重点，以及如何促进它。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOC接下来会见了CNCF &lt;a href =“ https://www.cncf.io/people/people/governing-board/”&gt;管理委员会&lt;/a&gt; &lt;/a&gt;举行了一次非常有见地的会议，讨论即将到来的一年的策略。该会议的特色是多样化的讨论，包括CNCF的新生态系统总监Brian Douglas，主持了有关加强参考架构和案例研究贡献的讨论。 LF欧洲的Mirko Boehm介绍了《网络弹性法》（CRA）及其对开源项目的影响。 TOC主席Karena Angell强调了为提高成熟度水平的项目提供更好的支持和激励措施的必要性。最后，Pytorch执行董事Matt White以及CNCF的CTO Chris Aniszczyk和Linux基金会社区运营高级副总裁Todd Moore解决了Linux基金会和CNCF项目中AI创新的挑战和机遇。&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxctnymmwajmqi6qanhzd-dbugyy61u5f4jlbabzimvkwi7t5gn0fomkb ND9CDFU8KAYESGRYORGGGXXANWDVDNERHK1FERGG2CGDUYKC8IBSBKQPWMV3YKS1T7X2834V8PSV8PSV8PSVHY？ alt =“理事委员会会议” reverrerpolicy =“ no-treferrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; toc在Keynotes &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了通常的责任外，TOC在库贝肯主题演讲阶段也有惊人的存在。 Faseela K，Cloud Native Developer，Ericsson是Kubecon EU的联合主席，并主持了三天的主题演讲。 Kubecon Keynotes的第二天看到了Ricardo Rocha，计算机工程师，Cern和Katie Gamanji，Apple高级现场工程师，舞台上的高级现场工程师，分享了CNCF最终用户故事，从&lt;a href =“ https:///y/youtu.be/youtu.be/cer/cer3hecmgbk？si = 7trzfwjjyuvwjyuvwjyuvwwwwwwwwwwwwwwwwwwwwwwwwpkkim and cant and c。凯蒂（Katie）还是主题小组“ &lt;a href =” https://youtu.be/3mucc7asxn4?si = si = ik8haqhromqaodhl“&gt; cncf”&gt; cncf at 10 &lt;/a&gt;”官员，在思科。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxefehkfibccwbjgxwastfa_5drbage6wph6cbuufge2dlkbbqigxd4-wa-zp84-wa-zp815-sqlnwymgPBA8M5EOOA7SCYDNDMGSQXF8FAWKRJJ8MLIYGXMQ0OKVW4KW9WKW9WKONGSQUTSQUTS6OLXW？key = S2XH-ZMRFPBWL4W_ZMRFPBWL4W_Z0HQEBKC referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;第3天的主题演讲在舞台上有Faseela，并在“ &lt;a href =” https://www.youtube.com/watch?v=qj9q_-s91l8&gt;电信中的云本地进化&lt;/a&gt;中，最终用户橙色，Vodafone和Swisscom。&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxfjo3k8k8k8lw_8lw_8olwk-goxjxjxjx0bqekcat_gqijezezcjr_-cbcmqmcmq7wij7wij7wij7pufdv 6RQRIS4MZ0TMVOJ057TAUMRLX035TXFCNIJ64O6F2DBTWYRAXNI24XD4H_MJASW7DCTVUIP70TWWDMK？ alt =“第3天主题”“ referrerpolicy =“ no-treferrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The TOC also had a solid keynote, “&lt;a href=&#34;https://youtu.be/TvhUer_XPFk?si=5EZ_lT0JRNuEUIpI&#34;&gt;221B Cloud Native Street&lt;/a&gt;,” which was led by Katie Gamanji and Ricardo Kocha and summarized all the topics that were under discussion for the previous days.他们在向更广泛的受众传递关键信息方面做得很好，包括项目成熟度，标签重新启动以及更多关注最终用户的需求。他们还讨论了将塑造CNCF生态系统未来的确定差距 - 基础架构提供和秘密管理围绕基础设施的多批量管理，成本管理和可持续性。&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figig class =“ wp-block-image”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxc-u20luxyph75eagqbegqbegjtgtqccz1q8lvgr5yyyv4nlktzlktzlx7 ovol2r9xcr2r9xc 1TK9YGMNXTZZITQBK8WTRAGCMGN9R6KL8KTZVUZGKNKPAPG_L38C03WAS9SEMSAKQN_CP0PKJQSI9A？ alt =“ Kubecon + CloudNativeCon Europe 2025 Keynotes” referrerpolicy =“ no-Referrer”&gt; &lt;/fige&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; toc sessions @kubecon &lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了主题演讲外，TOC成员在会议上还有其他几次演讲，包括最后一天的TOC小组：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href=&#34;https://kccnceu2025.sched.com/event/1tx7l/quantum-ready-kubernetes-how-do-we-get-there-nikhita-raghunath-natalie-fish er-broadcom-nigel-jones-ibm-ricardo-rocha-cern-cern-tomas-gustavsson-keyfactor？iframe = yes＆w = 100％＆sidebar = yes＆bg = no Kubernetes：我们如何到达那里？ -  Nikhita Raghunath＆Natalie Fisher，Broadcom； Nigel Jones，IBM； Ricardo Rocha，Cern； Tomas Gustavsson，KeyFactor &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1tgws/discover-cncf-cncf-tag-tag-runtime-advancing-cloud-native-native-invation-innovation-from-ai-ai-ai-eed-dedge-dedge-ce----------rircardo-aravena-aravena-snow Flake-Stephen-Rust-Akamai-rajas-kokodkar-broadcom-alexander-kanevskiy-intel-intel-danielle-tal-tal-microsoft？ CNCF标签运行时间：从AI到Edge的云原始创新 -  Ricardo Aravena，Snowflake；斯蒂芬·鲁斯特（Stephen Rust），阿卡玛（Akamai）； Rajas Kokodkar，Broadcom；亚历山大·凯恩维斯基（Alexander Kanevskiy），英特尔； Danielle Tal，Microsoft &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ulclass =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1tcvu/project-lightning-lightning-talk-project-project-project-project-copacetic--jeremy-rickard-maintainer?iframe=yes=yes&amp;w=100;维护者&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1txcv/signed-sealed-delivered-sign-sign-sign-and-and-verify-verify-verify-all-the--thind-the---------------- jeRemy-rickard-microsoft？杰里米·里卡德（Jeremy Rickard），微软&lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1tx7c/balancing-cost-and-efficiency-day2-optimization-of-multi-cluster-ai-infrastructure-kevin-wang-huawei?iframe=yes&amp;w=100%&amp;sidebar=yes&amp;bg=no&#34;&gt;Balancing Cost and Efficiency: Day2多批量AI基础架构的优化 - 凯文·王（Kevin Wang），华为&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kccnceu2025.sched.com/event/1td1B/kubernetes-sig-architecture-intro-and-updates-john-belamaric-google-davanum-srinivas-aws?iframe=yes&amp;w=100%&amp;sidebar=yes&amp;bg=no&#34;&gt;Kubernetes SIG建筑介绍和更新 -  John Belamaric，Google和Davanum Srinivas，AWS &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href=&#34;https://kccnceu2025.sched.com/event/1tcxk/cloud-native-storage-and-data-the-cncf-storage-tag-projects-technology-landscape-raffaele-spazzoli-red-hat-alex-chircop-akamai?iframe=yes&amp;w=100%&amp;sidebar=yes&amp;bg=no&#34;&gt;Cloud Native Storage和数据：CNCF存储标签项目，技术和景观 -  Raffaele Spazzoli，Red Hat； Alex Chircop，Akamai &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1txes/stateful-superpowers-ecplore-high-performance-and-scalable-scalable-stateful-workl OADS-ON-K8S-ALEX-CHIRCOP-CHRIS-MILSTED-ALEX-REID-REID-AKAMAI-LORI-LORISSO-PERCONA？IFRAME = YES = YES＆W = 100％＆sidebar = yes＆BG = no超级大国：探索K8S上的高性能和可扩展的状态工作负载 -  Alex Chircop，Chris Milsted＆Alex Reid，Akamai； Lori Lorusso，Percona &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1txfn/izzy-saves-the-birthday-a-story-story-drive-live-demo-demo-exploring-the-magic-o f-Service-mesh-lin-sun-soloio-faseela-kundattil-ericsson-software-technology？iframe = yes＆w = 100％＆sidebar = yes＆bg = no挽救生日”  - 一个故事驱动的现场演示，探索服务网格的魔力 - 林太阳，solo.io＆faseela kundattil，爱立信软件技术&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1txex/journey-at-the-new-york-times-imes-is-sidecar-imes-sidecar-sidecar-sidecar-less-service-mesh-disappea环ininto-Infrastructure-lin-sun-soloio-ahmed-bebars-bebars-the-york-times？iframe = yes＆w = 100％＆sidebar = yes＆bg = no在《纽约时报》中：无助的服务网格是否消失在基础设施中？ - 林太阳，独奏。IO和Ahmed Bebars，《纽约时报》 &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;a href =“ https://kccnceu2025.sched.com/event/1tczp/istio-theistio-the-past-past-present-pres---------------------------------------------------------------------该项目和社区的过去，现在和未来 -  lin Sun＆Louis Ryan，Solo.io；雷蒙德·黄（Raymond Wong），福布斯（Forbes）&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt; TOC面板&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; TOC在最后一天还进行了小组讨论，以阐明库贝肯听众对我们的工作以及我们的优先事项的任何疑问或疑问。与标签重新启动倡议有关的问题有很多问题，并且担心是否会阻碍项目移动水平。总体而言，标签重新启动将有助于指导具有更好技术指导的项目，以在成熟度之间移动，并为最终用户采用做好准备。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;strong&gt;参考：&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://www.cncf.io/people/technical-oversight-committee/”&gt;技术监督委员会| CNCF &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ http://github.com/cncf/toc”&gt; http://github.com/cncf/toc &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ http://github.com/cncf/tab”&gt; http://github.com/cncf/tab &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://github.com/cncf/toc/issues/1527”&gt; https://github.com/cncf/toc/toc/issues/1527 &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt; &lt;/h3&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 15 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Protecting NATS and the integrity of open source: CNCF’s commitment to the community】保护NAT和开源的完整性：CNCF对社区的承诺</title>
      <link>https://www.cncf.io/blog/2025/04/24/protecting-nats-and-the-integrity-of-open-source-cncfs-commitment-to-the-community/</link>
      <description>【&lt;p&gt;When a company contributes a project to the Cloud Native Computing Foundation (CNCF), it’s not just sharing code—it’s making a commitment to the open source community. It’s a pledge to uphold open collaboration, shared community ownership, and neutral governance. The CNCF exists to protect these values and principles—ensuring no single entity can dominate, relicense, or claw back what has been given to the community. This principled stewardship fosters trust, diverse contributions, and long-term sustainability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Those commitments and principles are under threat. Synadia, the original donor of the&lt;a href=&#34;https://nats.io/&#34;&gt; NATS&lt;/a&gt; project, has notified CNCF of its intention to “withdraw” the NATS project from the foundation and relicense the code under the Business Source License (BUSL)—a &lt;strong&gt;non-open source license&lt;/strong&gt; that restricts user freedoms and undermines years of open development.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s be clear: this is not a typical license change or fork. It’s an attempt to “take back” a mature, community-driven open source project and convert it into a proprietary product—after years of growth and collaboration under open governance and CNCF’s stewardship.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Linux Foundation and the CNCF have &lt;a href=&#34;https://www.linuxfoundation.org/blog/how-open-source-foundations-protect-the-licensing-integrity-of-open-source-projects&#34;&gt;protected the licensing integrity of open source projects before&lt;/a&gt;. There are proper ways for companies to fork projects and take another direction based on business needs. For example, the &lt;a href=&#34;https://grafana.com/blog/2022/03/30/qa-with-our-ceo-about-grafana-mimir/&#34;&gt;vendor Grafana forked the CNCF Cortex project under the new name Mimir&lt;/a&gt; while the original Cortex project continues to be maintained by the community within CNCF. Synadia’s actions here are markedly different. Rather than creating a fork of NATS under a new name, Synadia wants to unilaterally seize control of the project’s community-owned assets.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Synadia’s recent actions&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In addition to planning a license change, Synadia has demanded that CNCF hand over control of the &lt;strong&gt;nats.io domain&lt;/strong&gt; and the &lt;strong&gt;nats-io GitHub organization&lt;/strong&gt;—assets that serve as community infrastructure and have been managed by CNCF since the project’s acceptance in 2018. These demands came despite the fact that:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Synadia &lt;strong&gt;committed in writing&lt;/strong&gt; to transfer the NATS trademark to CNCF as part of the original donation;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CNCF provided &lt;strong&gt;substantial financial, marketing, legal, and technical support&lt;/strong&gt; to the NATS project for more than seven years;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The NATS brand has become synonymous with CNCF and its promise of vendor-neutral governance.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF has offered multiple paths that would allow Synadia to pursue its goals while respecting open source principles and community governance. Synadia is free to walk away from contributing to the existing NATS project. They’re also free to fork NATS and build a proprietary offering under a new name. What they &lt;strong&gt;can’t&lt;/strong&gt; do is unilaterally claw back a community project and its infrastructure, assets, and branding.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Synadia has unfortunately declined to work with us on an appropriate option that respects open source principles and CNCF community governance processes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In a further escalation, Synadia’s legal counsel sent a &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Cease%20and%20Demand%20Letter%20from%20Synadia%20Counsel.pdf&#34;&gt;letter challenging the enforceability of CNCF’s project and trademark policies&lt;/a&gt;—policies that all CNCF member companies, including Synadia, agreed to in the membership contract they signed. Synadia claims that CNCF’s governance documents are “too vague” to apply to the NATS project—despite a clear statement in the &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/charter.md#11-ip-policy&#34;&gt;CNCF Charter&lt;/a&gt; that “Any project that is added to the CNCF must have ownership of its trademark and logo assets transferred to the Linux Foundation.”&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Meanwhile, Synadia-affiliated maintainers appear to have held a private vote to “exit CNCF” (see &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/NATS.io%20Maintainer%20Minutes%20-%20March%202025.pdf&#34;&gt;meeting minutes&lt;/a&gt; and &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Proposal%20to%20exit%20NATS%20from%20CNCF.pdf&#34;&gt;exit proposal&lt;/a&gt;) without transparency, without a clear transition plan, and without engaging the broader contributor community that has helped shape NATS.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In short: Synadia is attempting to convert a successful open source project into a closed, commercial product—and take the NATS community’s name, trust, and infrastructure with it. Imagine if Google tried to take back Kubernetes after all these years of it being a neutral open source and community-driven project.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;CNCF IP and Trademarks&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Open source foundations exist in part to protect the ecosystem from unilateral license changes and other vendor-driven rug-pulls. That’s why CNCF, per its charter (&lt;a href=&#34;https://github.com/cncf/foundation/blob/main/charter.md#11-ip-policy&#34;&gt;Section 11a&lt;/a&gt;), requires all contributed projects to transfer trademark and logo ownership to the Linux Foundation. This ensures that no single vendor can later assert control of the project through trademark rights.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Synadia’s CEO, as one of the original members of the CNCF Governing Board, has been aware of this policy from the start.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When NATS was contributed in 2018, Synadia had already filed for trademark registrations on both the NATS name and logo. Synadia’s CEO explicitly committed—in writing—to transfer those trademarks upon the project’s acceptance into CNCF. However, a trademark dispute with Major League Baseball (MLB) over the name “NATS” (related to the Washington Nationals) delayed the transfer.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To resolve the issue, CNCF paid for legal counsel to work with Synadia’s trademark attorneys throughout 2018–2019. When proposed settlement terms threatened to limit community use, CNCF rejected them. CNCF then presented Synadia with two clear paths:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Rename the open source project and retain “NATS” as a commercial brand for Synadia.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Resolve the dispute with MLB and transfer the marks to CNCF post-settlement.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Synadia chose the latter. Once the dispute was resolved, Synadia requested and was paid $10,000 as a reimbursement from CNCF for Synadia’s NATS trademark registration legal expenses. Yet even after the issue was cleared and the payment was made, Synadia did not complete the promised transfer of the trademark registration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Today, Synadia still refuses to follow through on its promise—despite years of commitment, financial support, and active stewardship from CNCF. And despite significant contributions from hundreds of other organizations and individuals.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Not only has Synadia broken its promise; it’s now weaponizing that broken promise against the community and foundation that helped make NATS successful, by asserting that its status as the current holder of record of the NATS trademark registrations entitles it to unilaterally take over project infrastructure and assets that have been community-owned for seven years.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;CNCF support of NATS&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Since NATS joined the CNCF in 2018, the foundation has provided extensive support—financial, technical, legal, and organizational—to help the project grow, mature, and thrive as a trusted part of the cloud native ecosystem. This support has included:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Funding two third-party security audits (over $90,000)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Supporting legal and trademark work&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;KubeCon + CloudNativeCon speaking slots, keynotes, booths, and marketing inclusion&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Ongoing mentorship and contributor growth programs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thanks to this support—and the dedication of the community—NATS has flourished. Downloads, contributors, and integrations with CNCF and third-party projects (like Helm, Kubernetes, Prometheus, ClickHouse, JetStream, and more) have grown significantly. Although Synadia has indeed been a significant contributor, over 700 other organizations have also contributed to the project.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-gallery has-nested-images columns-default is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex&#34;&gt;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1620&#34; height=&#34;654&#34; data-id=&#34;130389&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44%E2%80%AFPM.jpg&#34; alt=&#34;Contributions under CNCF for past 7 years&#34; class=&#34;wp-image-130389&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM.jpg 1620w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-300x121.jpg 300w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-1024x413.jpg 1024w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-768x310.jpg 768w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-900x363.jpg 900w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-495x200.jpg 495w, https://www.cncf.io/wp-content/uploads/2025/04/Screenshot-2025-04-23-at-8.17.44 PM-991x400.jpg 991w&#34; sizes=&#34;auto, (max-width: 1620px) 100vw, 1620px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Image: Contributions under CNCF for past 7 years&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The success and reputation of NATS today is not just due to one company’s efforts—it’s the result of years of community collaboration, CNCF stewardship, and a commitment to open governance. And that’s what we’re committed to defending.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;CNCF’s response and actions to protect NATS&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF will continue to host and support NATS under its Apache-2.0 license for as long as there is community interest. We are committed to ensuring that NATS continues to be governed openly, available freely, and protected from unilateral takeover.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With this in mind, CNCF and the Linux Foundation are taking the following actions in response to Synadia’s legal demands:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Initiating a &lt;a href=&#34;https://github.com/cncf/toc/issues/1632&#34;&gt;CNCF TOC health check issue&lt;/a&gt; to evaluate the health of the project&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Making a call for support and additional maintainers&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Asking the USPTO to cancel the conflicting Synadia trademark registrations (see our &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Petition%20for%20cancellation%20NATS%20stylized%20Reg%20No%206216924%20final.pdf&#34;&gt;cancellation petitions for the NATS logo&lt;/a&gt; and &lt;a href=&#34;https://github.com/cncf/foundation/blob/main/documents/nats/Petition%20for%20cancellation%20NATS%20IO%20Reg%20No%206216925%20final.pdf&#34;&gt;for NATS.IO&lt;/a&gt;)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Continuing to reject Synadia’s demands that the NATS infrastructure and assets be handed over to them&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We will continue to update the CNCF community and ecosystem on our work to protect the project’s open source license and neutral governance. We are sharing this information to foster continued discussion out in the open–within the Technical Oversight Committee (TOC) and the broader community–following CNCF’s standard governance processes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can follow or comment on the &lt;a href=&#34;https://github.com/cncf/toc/issues/1632&#34;&gt;discussion about NATS’s future&lt;/a&gt; in the CNCF TOC repository. If you’re a NATS user, contributor, or stakeholder, we invite you to help us protect the future of this important project. Please consider becoming a NATS maintainer or increasing your contributions to the project.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;当公司向云本地计算基金会（CNCF）贡献项目时，它不仅是共享代码，而且还对开源社区做出了承诺。这是维护公开合作，共享社区所有权和中立治理的承诺。 CNCF的存在是为了保护这些价值观和原则，没有一个实体可以统治，重新统治，或缩减给社区的内容。这种原则的管理促进了信任，多样化的贡献和长期的可持续性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些承诺和原则受到威胁。 Synadia, the original donor of the&lt;a href=&#34;https://nats.io/&#34;&gt; NATS&lt;/a&gt; project, has notified CNCF of its intention to “withdraw” the NATS project from the foundation and relicense the code under the Business Source License (BUSL)—a &lt;strong&gt;non-open source license&lt;/strong&gt; that restricts user freedoms and undermines years of open development.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们清楚：这不是典型的许可证更改或叉子。这是一种试图“收回”一个成熟的，社区驱动的开源项目并将其转换为专有产品 - 在公开治理和CNCF的管理下的增长和协作之后。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Linux基金会和CNCF具有&lt;a href =“ https://www.linuxfoundation.org/blog/blog/how-open-source-foundations-protect-protect-protect-licensing-incensing-integrity-open-source-projects-- protinally-open-source-projects”&gt;在&lt;/a&gt;之前推动了开放式启动项目的许可完整性。公司有适当的方法可以根据业务需求进行项目并采取另一个方向。 For example, the &lt;a href=&#34;https://grafana.com/blog/2022/03/30/qa-with-our-ceo-about-grafana-mimir/&#34;&gt;vendor Grafana forked the CNCF Cortex project under the new name Mimir&lt;/a&gt; while the original Cortex project continues to be maintained by the community within CNCF. Synadia在这里的行动明显不同。 Synadia并没有以新名称创建一小块NAT，而是希望单方面抓住该项目的社区拥有的资产。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt; Synadia的最新动作&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了计划更改许可证外，Synadia还要求CNCF控制&lt;strong&gt; nats.io域&lt;/strong&gt;和&lt;strong&gt; nats.io domain &lt;/strong&gt;和&lt;strong&gt; nats-io github组织&lt;/strong&gt; &lt;/strong&gt;  - 作为社区基础设施的资产，并已被CNCF管理，并且自2018年以来的要求是事实。&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; Synadia &lt;strong&gt;以书面形式致力于&lt;/strong&gt;作为原始捐赠的一部分将NATS商标转移到CNCF； &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; cncf提供了&lt;strong&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; NATS品牌已成为CNCF的代名词及其对供应商中性治理的承诺。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; CNCF提供了多种途径，可以使Synadia在尊重的同时追求其目标开源原则和社区治理。 Synadia可以自由地摆脱为现有NATS项目的贡献。他们还可以自由地叉，并以新名称建立专有产品。他们&lt;strong&gt;不能做的是单方面缩减社区项目及其基础设施，资产和品牌。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不幸的是，Synadia拒绝与我们合作采用尊重开源原则和CNCF社区治理流程的适当选择。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在进一步的升级中，Synadia的法律顾问向A &lt;a href =“ https://github.com/cncf/foundation/blob/main/main/main/documents/nats/nats/cease%20and%20demand%20letter%20letter%20letper%20from%20from%20from%20synadia；政策&lt;/a&gt;  - 包括Synadia在内的所有CNCF成员公司都同意他们签署的会员合同中同意的政策。 Synadia声称，CNCF的治理文件“太模糊”以至于适用于NATS项目，尽管在&lt;a href =“ https：//github.com/cncf/foundation/blob/main/main/parter.md#11-policy.md-policy.md-ip-policy.md-ip-policy.m.md-ippolicy obly operlip &lt;a a href =“ https：//github.com/cncf/foundation y&gt; cncf charter oblosean ast of the Project”徽标资产转移到Linux基金会。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;同时，与Synadia相关的维护者似乎已经举行了私人投票来“退出CNCF”（请参阅​​&lt;a href =“ https：//github.com/cncf/foundation/blob/main/main/main/documents/nats/nats/nats/nats.io； href =“ https://github.com/cncf/foundation/blob/main/documents/nats/nats/proposal%20to 20 exit%20nats%20nats%20from%20cncf.pdf“&gt; exit progosal &lt;/a&gt;）没有透明的态度，没有明确的过渡计划，没有更广泛的贡献，&lt;/ext &lt;/a&gt; &lt;/a&gt;）&#xA;&#xA;&#xA;&#xA;&lt;p&gt;简而言之：Synadia试图将成功的开源项目转换为封闭的商业产品，并使用NATS社区的名称，信任和基础架构。想象一下，如果Google成为一个中立的开源和社区驱动的项目，Google是否试图取回Kubernetes。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block-heading”&gt; &lt;strong&gt; cncf ip和商标&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开源基础部分是为了保护生态系统免受单方面许可变化和其他供应商驱动的地毯扣。这就是为什么CNCF根据其章程（&lt;a href =“ https://github.com/cncf/foundation/blob/main/charter.md#11-ip-policy”&gt;第11aa &lt;/a&gt;第11A &lt;/a&gt;），要求所有有贡献的项目才能将商标和徽标所有权转让给Linux Foundation。这样可以确保没有单个供应商以后可以通过商标权主张对项目的控制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Synadia的首席执行官是CNCF管理委员会的原始成员之一，从一开始就意识到了这一政策。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当NATS于2018年捐款时，Synadia已经对NATS名称和徽标进行了商标注册。 Synadia的首席执行官明确承诺 - 在WRI中TING  - 将这些商标转移到该项目的接受中。但是，与美国职棒大联盟（MLB）的商标争端有关“ Nats”（与华盛顿国民有关）的名称推迟了转会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了解决这个问题，CNCF付款，要求法律顾问在2018  -  2019年间与Synadia的商标律师合作。当拟议的和解条款威胁要限制社区使用时，CNCF拒绝了它们。然后，CNCF向Synadia提供了两个清晰的路径：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class =“ wp-block-list”&gt;&#xA;&lt;li&gt;重命名开源项目并将“ NAT”保留为Synadia的商业品牌。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;解决与MLB的争议，并将标记转移到CNCF后解决后。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Synadia选择了后者。一旦解决争议，请要求Synadia，并获得10,000美元的报销，以偿还CNCF的Synadia NATS商标注册法律费用。然而，即使在清除了该问题并付款后，Synadia也没有完成商标注册的承诺转让。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今天，Synadia仍然拒绝遵守其承诺，尽管有多年的承诺，财政支持和CNCF的积极管理。尽管其他数百个组织和个人做出了重大贡献。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Synadia不仅违反了其诺言；现在，武器将对社区和基金会的承诺破裂，这有助于使NAT成功取得成功，因为它是其作为NATS商标注册记录的现有记录持有人的地位使其有权单方面接管项目基础设施和社区拥有的资产，这些资产已有7年。&lt;/p&gt; &lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt; nats的CNCF支持&lt;/strong&gt; &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自NATS于2018年加入CNCF以来，该基金会提供了广泛的支持（财务，技术，法律和组织），以帮助该项目作为云本地生态系统的值得信赖的部分增长，成熟和成长。此支持包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;资助两个第三方安全审核（超过$ 90,000）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;支持法律和商标工作&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; kubecon + CloudNativeCon讲话老虎机，主题演讲，展位和营销包容&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;持续的指导和贡献者成长计划&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢这种支持以及社区的奉献精神 - 纳特人蓬勃发展。下载，贡献者以及与CNCF和第三方项目的集成（例如Helm，Kubernetes，Prometheus，clickhouse，Jetstream等）已大大增长。尽管Synadia确实是一个重要的贡献者，但其他700多个组织也为该项目做出了贡献。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figue class =“ WP-block-Gallery具有nest-nested-inted-bailts列 - 默认为wp-block-gallery-1 is-layout-layout-flex-flex-block-gallery-is-layout-layout-flex”&gt;&#xA;&lt;figie class =“ wp-block-image size-full”&gt; &lt;img loading =“ lazy” dododing =“ async” width =“ 1620” height =“ 654” data-id =“ 130389” src=“ https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-23-AT-8.17.44%E2%2%80%2%Afpmm.jpgmm.jpgm.jpgm.jpg” alt =“过去7年中CNCF”的贡献srcset =“ https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.44pm.jpg.jpg 1620w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.4444pm-300x121.jpg 300W， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.4444pm-1024x413.jpg 1024w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.4444pm-768x310.jpg 768w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.44.44pm-900x363.jpg 900w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-04-23-04-23-at-8.17.4444pm-495x200.jpg 495w， https://www.cncf.io/wp-content/uploads/2025/04/screenshot-2025-2025-04-23-AT-8.17.44pm-991x400.jpg 991W 991W“ sizes =” sizes =“ auto，（max-witth：max-witth：max-witth：1620px）100vx） referrerpolicy =“ no-the Referrer”&gt; &lt;/figie&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt;图片：CNCF下的贡献过去7年&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当今NAT的成功和声誉不仅是由于一家公司的努力，而且是社区合作，CNCF管理的多年的结果以及对公开治理的承诺。这就是我们致力于捍卫的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; &lt;strong&gt; CNCF的响应和保护NAT的措施&#xA;&#xA;&#xA;&#xA;只要有社区兴趣，CNCF将继续在其Apache-2.0许可下托管和支持NAT。我们致力于确保NAT继续公开，自由使用，并保护NAT，免受单方面的接管。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;考虑到这一点，CNCF和Linux基金会正在采取以下措施，以应对Synadia的法律要求：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;启动a &lt;a href =“ https://github.com/cncf/toc/issues/1632”&gt; cncf toc toc健康检查问题&lt;/a&gt;评估项目的健康&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;呼吁支持和其他维护者&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;要求USPTO取消矛盾的Synadia商标注册（请参阅我们的&lt;a a href =“ https://github.com/cncf/foundation/blob/blob/main/main/main/documents/nats/petition%20for%20for%20cancell%20cancellation; NATS徽标的请愿书&lt;/a&gt;和&lt;a href =“ https://github.com/cncf/foundation/blob/main/main/documents/nats/petition%20for%20cancellation%20cancellation%20nats%20nats%20IO20IO20IO20IO20REG20REG 20NO；&#xA;&#xA;&#xA;&#xA;&lt;li&gt;继续拒绝Synadia要求将NAT的基础设施和资产移交给它们&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们将继续在保护项目的开源许可和中立治理方面的工作中更新CNCF社区和生态系统。我们正在分享此信息，以促进在技术监督委员会（TOC）和更广泛的社区的公开讨论中继续讨论。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;你can遵循或评论&lt;a href =“ https://github.com/cncf/toc/issues/1632”&gt;在CNCF TOC存储库中讨论NATS的未来&lt;/a&gt;。如果您是NATS的用户，贡献者或利益相关者，我们邀请您帮助我们保护这个重要项目的未来。请考虑成为NAT的维护者或增加您对项目的贡献。&lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 23 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【These Kubernetes mistakes will make you an easy target for hackers】这些Kubernetes错误将使您成为黑客的容易目标</title>
      <link>https://www.cncf.io/blog/2025/04/22/these-kubernetes-mistakes-will-make-you-an-easy-target-for-hackers/</link>
      <description>【&lt;p&gt;Kubernetes is exceedingly powerful for orchestrating containerized applications at scale. But without proper monitoring and observability—especially in self-managed infrastructure—it can quickly become a security disaster waiting to happen.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is not due to inherent flaws in Kubernetes itself, but because of rampant, preventable misconfigurations, design miscalculations, and security gaps that create prime entry points for threat actors.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“Kubernetes is a high-velocity open-source technology, and security is an unavoidable subject when something is this pervasive and foundational to modern infrastructure,” says &lt;a href=&#34;https://www.linkedin.com/in/steverodda/&#34;&gt;Steve Rodda&lt;/a&gt;, CEO of &lt;a href=&#34;https://www.getambassador.io/&#34;&gt;Ambassador&lt;/a&gt;, an API development company focused on accelerating API development, testing, and delivery.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“Whether you’re a Kubernetes administrator or an engineer, following industry best practices—riding on the shoulders of giants—is essential to strengthening your cluster’s security posture,” he underscores. “It’s a prerequisite for managing Kubernetes securely.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;From foundational flaws in authentication and access control to often-overlooked runtime vulnerabilities, I’ve interviewed experienced engineering leaders to cut through the complexity and provide concrete, actionable steps for building a strong security posture.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The Open Door to Kubernetes Clusters&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Solid authentication and least-privilege RBAC are the security foundation upon which all other Kubernetes defenses are built. Neglecting them is the most common, and most critical, mistake.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/andrewrynhard/&#34;&gt;Andrew Rynhard&lt;/a&gt;, CTO of&lt;a href=&#34;https://www.siderolabs.com/&#34;&gt; Sidero Labs&lt;/a&gt;, states bluntly, “Kubernetes RBAC and authentication failures are (still) everywhere.” He points to a core underlying problem: “Many teams are stuck in this awkward middle ground trying to bolt Kubernetes security onto traditional operating systems—not a particularly easy retrofit.” And this clash of paradigms, trying to apply traditional OS security models to containerized environments, often leads to fundamental missteps in Kubernetes security.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/sirivarma/&#34;&gt;Siri Varma Vegiraju&lt;/a&gt;, Technical Leader at &lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt; overseeing Azure security, pinpoints the core problem: attackers target the Kubernetes API Server and the Kubelet. The API Server, controlling the entire cluster, and the Kubelet, managing individual nodes, are prime entry points.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If either is compromised, attackers gain immediate leverage. And it’s often due to weak or missing authentication. As Vegiraju stresses, strong authentication at the API Server is non-negotiable. Certificates, Service Accounts, and OpenID Connect are essential methods. And anonymous access, seemingly convenient, must be disabled or severely restricted. “Without both of them,” he warns, referring to strong authentication and authorization, “the cluster can be easily compromised.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Beyond weak authentication, overly permissive RBAC roles compound the risk. Granting broad permissions – like get, create, update, delete on pods – to service accounts or Kubelets creates pathways for attackers to escalate privileges and control resources after initial access. This is not just risky; it’s reckless.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/mitr/&#34;&gt;Mithilesh Ramaswamy&lt;/a&gt;, a Senior Engineering Manager at &lt;a href=&#34;https://www.microsoft.com/en-in&#34;&gt;Microsoft&lt;/a&gt; working on Security and AI, echoes this concern, observing, “One of the biggest mistakes engineers make is granting overly permissive roles to service accounts just to get things working quickly. The ‘just make it work’ mentality often results in broad RBAC policies that give applications way more privileges than they actually need. A common misstep is using the cluster-admin role when it’s not necessary.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rynhard elaborates on these common failures: “I see two major failures constantly: teams running parallel security models (SSH access alongside Kubernetes APIs) and the ‘just make it work’ RBAC approach where everyone gets cluster-admin privileges. I’ve seen organizations where practically every service account had god-mode permissions.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“That’s not security, that’s gambling,” he argues, saying that truly securing authentication and RBAC requires a fundamental shift in perspective. “A no-nonsense approach to fixing both problems starts with ditching the general-purpose OS mindset for Kubernetes. It’s 2025—operating systems designed for desktop computing don’t belong in container environments. The better approach is &lt;a href=&#34;https://www.getambassador.io/blog/api-management-benefits&#34;&gt;API-based management&lt;/a&gt; with a clean, declarative interface that aligns with how Kubernetes actually works,” he reasons.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Mitigation: Secure the Foundation&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Securing authentication and &lt;a href=&#34;https://www.getambassador.io/blog/kubernetes-rbac-role-based-access-control&#34;&gt;Kubernetes RBAC&lt;/a&gt; requires a focused, layered approach. Vegiraju provides clear and actionable recommendations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Kubelet Authorization: &lt;/strong&gt;Use “Node” mode. Limit Kubelet permissions strictly to node-level necessities.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;RBAC: Implement Least Privilege.&lt;/strong&gt; Grant minimal necessary permissions to users and service accounts. Start with a deny-all policy and add permissions incrementally.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;High-Risk Operations: Limit Access.&lt;/strong&gt; Restrict modification of pod definitions, secret access, and workload deletion to a small, trusted group.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And for policy enforcement, Vegiraju advocates for Open Policy Agent (OPA). OPA allows for defining and enforcing granular rules – for example, restricting update/delete operations to cluster admins only. “This can be curated as a policy and applied at the cluster level,” he notes, providing a scalable solution for RBAC management.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But for existing deployments, he cautions, “For brownfield services, a safer approach is gradual testing—apply restrictive roles in a test environment, validate behavior, and roll out changes in stages to minimize disruption.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rynhard underlines the importance of continuous management and validation: “You can also treat RBAC like code—test it, validate it, monitor it continuously. Automate verification of RBAC policies before they hit production. The key isn’t perfect configuration on day one, it’s catching drift before it becomes a problem.” This “RBAC as code” approach, combined with automated verification, allows teams to proactively manage RBAC drift and maintain a consistently secure posture over time – another crucial aspect of building a robust Kubernetes security foundation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Overly Permissive Network Policies&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes default networking is deceptively open. By default, pods freely communicate cluster-wide – a dangerous setup. Overly permissive network policies amplify this risk, creating a flat, easily exploitable attack surface. This isn’t operational flexibility; it’s a security liability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rodda warns against this common misconfiguration: “Allowing all pods to communicate freely within a cluster… if a pod gets compromised, then the attacker can move laterally across the cluster.” This lateral movement, jumping from pod to pod, transforms a single breach into a cluster-wide compromise.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The core mistake is network policy negligence. And teams often fail to implement network policies at all, or they implement policies that are too broad, effectively mirroring the insecure default. This lack of network segmentation is a critical oversight.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Mitigation: Segment and Control Network Traffic&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Securing Kubernetes networking requires a shift to a zero-trust approach. Rodda’s guidance focuses on granular control:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Default Deny Pod Communication.&lt;/strong&gt; Unless absolutely necessary (like for sidecar patterns), block all pod-to-pod communication by default. Explicitly allow only required connections.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Enforce Namespace and Pod-Level Policies.&lt;/strong&gt; Implement network policies at both namespace and pod levels for fine-grained traffic management. Segment your cluster logically and enforce strict communication rules within and between segments.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Operational flexibility is often cited as a reason to avoid restrictive policies. He counters this with a security-conscious perspective: “Operation flexibility should be defined keeping security in mind.” He advocates for controlled flexibility, where changes are permitted but only by authorized personnel and under strict conditions. For networking, this means replacing “allow-all” with carefully defined rules allowing specific IPs or network ranges – perhaps VPNs or corporate traffic.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Furthermore, Just-In-Time (JIT) access extends to networking. Granting temporary, need based permission for network changes, instead of persistent broad access, minimizes risk.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Effective network policies aren’t about hindering operations; they are about strategically controlling traffic flow to contain breaches. Ramaswamy further underscores the need for proactive network security: “By default, Kubernetes allows unrestricted communication between pods unless network policies are explicitly defined, which means an attacker who compromises one pod can laterally move across the cluster. A common mistake is either not defining network policies at all or setting them up too loosely, effectively making them useless.” He provides a practical approach to balancing security and flexibility: “A practical way to balance security with operational flexibility is to start with a default deny-all policy and incrementally allow necessary communication.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rodda says, “Security isn’t a one-time effort—it’s an ongoing process, and we’re all learning how we can improve it daily.” This process must include continuous refinement of network policies to adapt to application changes and emerging threats, ensuring your network security remains a dynamic defense, not a static vulnerability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Neglecting Real-Time Security Monitoring&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Prevention is essential but not foolproof. Attackers evolve, new attack vectors emerge and so the defenses can be bypassed. And this is precisely where runtime security monitoring becomes critical – your eyes and ears inside the cluster, detecting threats that slip through the cracks. Without it, you’re operating blind, vulnerable to breaches you won’t even see coming until it’s too late.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The stark reality of neglected runtime monitoring is illustrated by a breach Vegiraju recalled. “In July 2019, a firewall misconfiguration exposed a financial organization’s K8s clusters to the public internet, resulting in a breach that stole 30GB of credit application data.” It was caused by a simple misconfiguration. The consequence? Massive data theft. This could have been easily prevented by runtime monitoring. He mentioned, “With proper auditing tools like Falco, this could have been easily identified by alerting on traffic from sources that we don’t expect.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The core failure is lack of runtime observability. Teams often focus solely on preventative measures, overlooking the vital need for real-time threat detection and response. This blind spot leaves them exposed to attacks that exploit misconfigurations or zero-day vulnerabilities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Mitigation: Implement Observability&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Effective runtime security is contingent upon proactive monitoring and alerting. Vegiraju provides direct and crucial recommendations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Enable API Control Plane Audit Logs.&lt;/strong&gt; These logs are your primary source of truth, recording every interaction with your Kubernetes cluster. This is not optional; it’s fundamental.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Continuously Monitor and Alert.&lt;/strong&gt; Enabling logs alone isn’t enough. Implement automated monitoring and alerting to detect anomalies and suspicious activity in real-time. Manual log reviews are insufficient and impractical.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And tools like Falco, as Vegiraju pointed out with the Crowdstrike example, are designed for this purpose. They allow you to define rules to detect unexpected behavior – unauthorized access attempts, suspicious network connections, or deviations from established patterns. And immediate alerts enable rapid incident response, minimizing damage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Runtime monitoring isn’t about reacting after a breach; it’s about proactive threat detection and containment. It’s about seeing the threats &lt;em&gt;as they happen&lt;/em&gt;, not just in post-mortem analysis. So by implementing a strong runtime observability, you move from reactive security to proactive defense, catching threats before they escalate into full-blown breaches.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rodda advises, “Staying ahead means continuously improving your security posture, testing configurations, and adapting to new threats,” and runtime monitoring is a critical component of this continuous improvement cycle, enabling you to adapt to threats in real-time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Unnecessary Exposure of Public Services&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Public exposure of internal Kubernetes services is a critical blunder. It’s like broadcasting your sensitive data on a billboard. And the most dangerous service to expose is the Kubernetes API server. Making this control plane component publicly accessible is a catastrophe.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vegiraju cuts to the core of the issue: “One major risk is accidental exposure of services that should remain internal.” He specifically highlights the API server: “The Kubernetes API server is a critical control plane component that should not be exposed to the public internet unless absolutely necessary.” Unless absolutely necessary is the key phrase here – in almost all cases, public exposure of the API server is never necessary or justifiable.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is inherently dangerous because exposure invites a complete takeover. API server compromise hands over complete cluster control to attackers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Mitigation: Default to Private – Isolate and Protect&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The principle is simple: internal services stay internal. For the API server, and other sensitive components, default to private networking. If, and only if, external access is absolutely mandated, implement extreme protective measures. Rodda provides these safeguards:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Firewall or API Gateway:&lt;/strong&gt; Place it behind a firewall or API Gateway (like &lt;a href=&#34;https://www.getambassador.io/products/edge-stack/api-gateway&#34;&gt;Edge Stack&lt;/a&gt;) to restrict access to specific IPs or networks. Use firewalls or API Gateways as gatekeepers, limiting API server access to explicitly whitelisted IPs or networks. Public internet? Default deny.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;VPC Networking:&lt;/strong&gt; Use VPC networking to limit access whenever possible, keep sensitive endpoints private within a controlled network. Leverage Virtual Private Clouds to isolate the API server within a tightly controlled network perimeter, minimizing its attack surface.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Infrastructure-as-Code and Peer Review:&lt;/strong&gt; Make sure all the production configuration is version controlled (IaC) and can be deployed only after proper peer reviewing. Treat API server access configurations as highly sensitive code. Manage them with Infrastructure-as-Code, enforce strict version control, and mandate peer review for every change. No exceptions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rodda recommends, “utilizing a legit security tool such as an API Gateway with Zero trust approach can make a big difference in protecting your APIs and microservices against vulnerabilities and breaches.” API Gateways aren’t just for managing API traffic; they are critical security enforcement points. Employing an API Gateway in front of &lt;em&gt;any&lt;/em&gt; exposed service, including carefully controlled API server access, adds layers of authentication, authorization, and threat protection, mitigating the risks of direct exposure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rodda recommends, “utilizing a legit security tool such as an &lt;a href=&#34;https://securityboulevard.com/2025/02/api-gateway-security-needs-a-stronger-zero-trust-strategy/&#34;&gt;API Gateway with a Zero Trust &lt;/a&gt;approach can make a big difference in protecting your APIs and microservices against vulnerabilities and breaches.” API Gateways aren’t just for managing API traffic; they are critical security enforcement points. Employing an API Gateway in front of any exposed service, including carefully controlled API server access, adds layers of authentication, authorization, and threat protection, mitigating the risks of direct exposure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Exposing internal services, especially the API server, is a high-stakes gamble with potentially devastating consequences. Default to private, rigorously control any essential external access, and leverage security tools like API Gateways to minimize your risk exposure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Version Drift, Outdated Kubernetes and A Patchwork of Vulnerabilities&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Complacency inspires dread in Kubernetes security, and nowhere is this truer than with version updates. Lagging behind on Kubernetes versions isn’t just about missing new features; it’s about accumulating critical security debt. Outdated versions are riddled with known vulnerabilities – open doors for attackers, waiting to be exploited.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rodda says “Staying on the latest Kubernetes version isn’t just about getting new features—it’s a matter of security.” This isn’t a suggestion; it’s a mandate. Each Kubernetes release includes a barrage of security patches and fixes, directly addressing newly discovered threats. Running older versions means deliberately remaining vulnerable to exploits that have already been resolved in current releases.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The core danger is unpatched vulnerabilities. Attackers actively target known weaknesses in outdated software. Kubernetes is no exception. Exploits for older Kubernetes versions are publicly available, effectively providing attackers with ready-made attack blueprints for vulnerable clusters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;However, Rodda acknowledges the upgrade hurdle: “That said, upgrading Kubernetes isn’t always straightforward. New versions can introduce breaking changes that disrupt workloads, so planning and thorough testing are key before rolling out updates in production.” Kubernetes upgrades &lt;em&gt;are&lt;/em&gt; complex. And the fear of disruption often leads to upgrade delays, creating a dangerous window of vulnerability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ramaswamy corroborates the real-world impact of outdated versions: “Outdated clusters often contain known vulnerabilities that attackers can exploit, especially when they involve container runtime vulnerabilities or API server weaknesses. I’ve encountered teams reluctant to update their Kubernetes versions because of the fear of breaking workloads, especially when using deprecated APIs.” He reinforces the need for structured updates: “The best strategy to ensure timely updates is to maintain a well-documented, automated upgrade process with staged rollouts.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Mitigation: Prioritize Updates – Plan, Test, and Deploy&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ignoring upgrades is not an option. Security requires proactive version management. Rodda recommends this approach:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Keep Kubernetes versions up to date. Make version currency a top security priority. Establish a &lt;em&gt;regular&lt;/em&gt; and &lt;em&gt;aggressive&lt;/em&gt; update schedule. “If it ain’t broke, don’t fix it” does &lt;em&gt;not&lt;/em&gt; apply to security updates.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Always review the Kubernetes changelog to understand what’s changing and how it might impact your workloads. Before any upgrade, conduct thorough due diligence. Scrutinize release notes and changelogs for breaking changes and compatibility impacts. Knowledge is your best weapon against upgrade-induced disruptions.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Planning and thorough testing are very important before rolling out updates in production. Treat Kubernetes upgrades as major deployments. And rigorous testing in staging environments is non-negotiable. Identify and resolve issues &lt;em&gt;before&lt;/em&gt; production rollout, minimizing downtime and risk.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Falling behind on Kubernetes versions is a self-inflicted security wound. Proactive version management – prioritizing timely updates, meticulous planning, and rigorous testing – is not just a best practice; it’s a critical security imperative.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Hardening Kubernetes Components – Beyond Defaults&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Default Kubernetes configurations are convenient. But actualizing strong Kubernetes security requires strengthening the core—hardening the essential components and their underlying hosts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rodda reasons,“Beyond updates, securing the core components of your Kubernetes environment is our responsibility. Updates address external vulnerabilities; hardening addresses internal weaknesses and misconfigurations within Kubernetes itself.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The core problem is reliance on insecure defaults. Kubernetes components like the API server, etcd, and kubelet, if left in their default state, often have unnecessary services enabled, weak permission settings, and lack essential security controls. This default posture creates internal vulnerabilities that attackers can exploit even if external defenses hold.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Mitigation: Harden from the Inside Out&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;True Kubernetes resilience requires a proactive hardening approach, strengthening the cluster from its core outward. Rodda provides these steps for component hardening:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;CIS Benchmarks: Lock Down Components.&lt;/strong&gt; Lock down Kubernetes components like API servers, etcd, and kubelets using CIS benchmarks to establish secure defaults. And the Center for Internet Security (CIS) benchmarks offer industry-vetted, prescriptive guidance for secure configuration. Utilize these benchmarks as your hardening blueprint for API servers, etcd, and kubelets.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;RBAC: Enforce Least Privilege (Again).&lt;/strong&gt; Enforce &lt;a href=&#34;https://www.getambassador.io/blog/kubernetes-rbac-role-based-access-control&#34;&gt;Role-Based Access Control (RBAC)&lt;/a&gt; and follow the principle of least privilege—only grant users and service accounts the permissions they absolutely need. But again, for user and service account permissions, RBAC is also an important hardening measure within Kubernetes components themselves. And ensure internal component communication and permissions also adhere to least privilege.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Credential Rotation: Minimize Credential Risk.&lt;/strong&gt; Regularly rotate certificates, keys, and passwords used by Kubernetes components to minimize the risk of credential leaks or unauthorized access. And implement automated, frequent rotation of all credentials used by Kubernetes components—certificates, keys, and passwords. But always assume credentials will be compromised and minimize the impact through rapid rotation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Hardening Kubernetes components is an ongoing discipline. It’s about building security into the very fabric of your Kubernetes environment, not just bolting it on as an afterthought. By indurating these core components, you create a significantly more resilient and defensible Kubernetes infrastructure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Rodda encourages, “Beyond updates, securing the core components of your Kubernetes environment is a must—a must-do for any organization serious about Kubernetes security.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;The Tooling Stack For Augmenting Kubernetes Security&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While meticulous configuration and adherence to best practices are very useful, Kubernetes security is amplified by the right tool stack. Manual configuration alone can be complex and error-prone at scale. But consolidating a &lt;a href=&#34;https://www.getambassador.io/blog/kubernetes-security-tools-risks-best-practices&#34;&gt;Kubernetes security tool stack&lt;/a&gt; helps automate enforcement, enhance visibility, and streamline security operations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Kubernetes security ecosystem offers a range of tools addressing different aspects of cluster protection. These include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Policy Enforcement Tools:&lt;/strong&gt; As mentioned earlier, Open Policy Agent (OPA) exemplifies policy enforcement tools, enabling centralized, code-based policies for access control, compliance, and more.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Runtime Security Monitoring Tools:&lt;/strong&gt; Tools like Falco, also previously discussed, provide real-time threat detection, alerting on anomalous behavior and potential security incidents during runtime.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Vulnerability Scanning Tools:&lt;/strong&gt; These tools automate the process of identifying vulnerabilities in container images, Kubernetes configurations, and running workloads, helping teams proactively address weaknesses.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Image Security Tools:&lt;/strong&gt; Focused on the container image supply chain, these tools help secure images from build to deployment, ensuring images are free of known vulnerabilities and malware.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;API Security Tools – Including API Gateways:&lt;/strong&gt; For organizations exposing APIs and microservices through Kubernetes, API security tools become crucial.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;API Gateways, in particular, offer a powerful layer of security for Kubernetes environments. Because they provide centralized control over API traffic, enabling enforcement of critical security policies such as authentication, authorization, rate limiting, and threat detection.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And by acting as a security front door for APIs and microservices running in Kubernetes, API Gateways significantly reduce the attack surface and provide enhanced protection against API-specific vulnerabilities. Tools like Ambassador Edge Stack are examples of API Gateways designed to integrate seamlessly with Kubernetes environments, offering these enhanced security capabilities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But tooling is not a silver bullet. It’s helpful to remember that security tools are most effective when implemented in conjunction with fundamental security practices. Tools augment and automate these practices; they do not replace them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Final Thoughts: The Kubernetes Security Imperative&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Securing Kubernetes is hard work. There’s no single checklist to follow and be confident it’s unbreakable. The common mistakes we discussed—from foundational authentication weaknesses to runtime blind spots and unhardened components—highlight the persistent and evolving nature of Kubernetes security challenges.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And the important takeaway is that Kubernetes security requires continuous monitoring and disciplined action. It requires a fundamental shift to a security-first mindset, woven into every stage of the application lifecycle—from initial design and deployment to ongoing operations and updates. And this means proactively implementing best practices and augmenting them with the right security tooling to automate, enhance, and streamline your defenses.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ramaswamy offers a crucial strategic insight that encapsulates the essence of Kubernetes security: “Kubernetes security isn’t about perfect hardening—it’s about building layered detections that make attackers’ lives exponentially harder while maintaining and &lt;a href=&#34;https://thenewstack.io/optimize-your-inner-dev-loop-to-increase-developer-velocity/&#34;&gt;increasing developer velocity.&lt;/a&gt;” This highlights the practical, risk-based approach necessary for real-world Kubernetes security—focusing on making attack paths difficult and detectable rather than chasing an unattainable ideal of perfect security, while also being mindful of development speed.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;So, it’d serve us well to remember the advice Rodda shared earlier: “Security isn’t a one-time effort—it’s an ongoing process,” because this is not merely advice; it’s the defining principle of effective Kubernetes security.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Find the author &lt;a href=&#34;https://linkedin.com/in/s-jan&#34;&gt;on LinkedIn&lt;/a&gt;&lt;/em&gt;. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt; Kubernetes对于大规模编排集装箱应用程序非常强大。但是，如果没有适当的监控和可观察性（尤其是在自我管理的基础设施中），它很快就会成为一场安全灾难。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这不是由于Kubernetes本身的固有缺陷，而是由于猖ramp，可预防的错误配置，设计错误估计以及为威胁参与者创建主要入口点的安全差距。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“ Kubernetes是一种高速开源技术，当某事物普遍存在且基础上是现代基础设施的基础时，安全是一个不可避免的主题，” &lt;a href =“ https：//www.linkedin.com/linkedin.com/in&gt; steve rodda &lt;/a&gt; href =“ https://www.getambassador.io/”&gt;大使&lt;/a&gt;，API开发公司致力于加速API开发，测试和交付。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“无论您是Kubernetes管理员还是工程师，都遵循行业最佳实践（在巨人的肩膀上），这对于加强了集群的安全姿势至关重要，”他强调。 “这是安全管理Kubernetes的先决条件。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从身份验证和访问控制的基本缺陷到经常被忽视的运行时漏洞，我采访了经验丰富的工程领导者，以减少复杂性，并为建立强大的安全姿势提供具体，可行的步骤。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt; kubernetes簇的开门&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;可靠的身份验证和最小私人的RBAC是所有其他Kubernetes防御措施的安全基金会。忽视它们是最常见，最关键的错误。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://www.linkedin.com/in/andrewrynhard/”&gt; andrew rynhard &lt;/a&gt;，&lt;a href =“ https：//www.sideolabs.com/”他指出了一个核心的根本问题：“许多团队都陷入了这个尴尬的中间地面，试图将Kubernetes Security绑在传统的操作系统上，这不是特别容易的改造。”这种范式的冲突，试图将传统的OS安全模型应用于容器化环境，通常会导致Kubernetes安全性的根本错误。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://www.linkedin.com/in/sirivarma/”&gt; siri varma vegiraju &lt;/a&gt;，&lt;a href =“ https://azure.microsoft.com/和kubelet。控制整个群集的API服务器和管理单个节点的Kubelet是质量入口点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果两者都妥协，攻击者会立即获得杠杆作用。这通常是由于虚弱或缺失的身份验证所致。正如Vegiraju强调的那样，API服务器上的强验证是不可谈判的。证书，服务帐户和OpenID连接是必不可少的方法。和匿名S访问似乎方便，必须被禁用或严格限制。他警告说：“没有两者，”他指的是强有力的身份验证和授权，“群集很容易受到损害。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;超越弱身份验证，过于允许的RBAC角色使风险更加复杂。授予广泛的权限（例如获取，创建，更新，删除在POD上）或Kubelets为攻击者创建途径，以使攻击者在初次访问后升级特权和控制资源。这不仅是冒险的；鲁ck。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;a href =“ https://www.linkedin.com/in/mitr/”&gt; mithilesh ramaswamy &lt;/a&gt;，&lt;a href =“ https:///www.microsoft.com/en-in-in”&gt; Microsoft &lt;/a&gt; Microsoft &lt;/a&gt;的高级工程经理&lt;/a href =“为了使事情迅速运作，授予过度允许的角色。&#xA;&#xA;&#xA;&#xA;&lt;p&gt; rynhard详细阐述了这些常见的失败：“我不断看到两个重大失败：运行并行安全模型的团队（与Kubernetes API一起访问SSH访问）和“ Just just Inking It Onking” RBAC方法在其中每个人都获得了cluster-Admin overmin offilege。我看到了每个实际上每个组织的组织，实际上每个组织都有神模式的权限。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“那不是安全，那是赌博，”他说，真正确保身份验证和RBAC需要基本转变。 “A no-nonsense approach to fixing both problems starts with ditching the general-purpose OS mindset for Kubernetes. It’s 2025—operating systems designed for desktop computing don’t belong in container environments. The better approach is &lt;a href=&#34;https://www.getambassador.io/blog/api-management-benefits&#34;&gt;API-based management&lt;/a&gt; with a clean, declarative与Kubernetes的实际工作方式保持一致的界面。”他原因。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;确保身份验证并&lt;a href =“ https://www.getambassador.io/blog/kubernetes-rbac----------------- access-control”&gt; kubernetes rbac &lt;/a&gt;需要一种专注的，分层的方法。 Vegiraju提供了清晰可行动的建议：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt; kubelet授权：&lt;/strong&gt;使用“节点”模式。严格将库贝特权限限制为节点级必需品。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; RBAC：实施最小特权。&lt;/strong&gt;授予对用户和服务帐户的最小必要权限。从拒绝所有政策开始，然后逐步添加权限。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;高风险操作：限制访问。&lt;/strong&gt;将POD定义，秘密访问和工作负载删除的修改限制为一个值得信赖的小组。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;和政策执行，vegiraju倡导开放的倡导者政策代理（OPA）。 OPA允许定义和执行颗粒状规则 - 例如，将更新/删除操作限制为仅聚类管理员。他指出：“这可以作为政策策划并在集群级别应用。”&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，对于现有部署，他警告说：“对于布朗菲尔德服务，一种更安全的方法是逐步测试 - 在测试环境中具有限制性的角色，验证行为并进行阶段的变化以最大程度地减少干扰。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; rynhard强调了持续管理和验证的重要性：“您还可以像代码一样对待RBAC  - 测试，对其进行验证，持续监视它。自动验证RBAC在产生生产之前对RBAC策略进行验证。关键不是在第一天的完美配置，在第一天，它会在它成为问题之前捕捉到一个问题。”这种“ RBAC作为代码”方法与自动验证相结合，允许团队积极地管理RBAC漂移并随着时间的推移保持始终如一的安全姿势 - 建立强大的Kubernetes安全基金会的另一个关键方面。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt; kubernetes默认网络是欺骗性打开的。默认情况下，Pods可以自由通信整个集群 - 一种危险的设置。过于允许的网络政策会扩大这种风险，从而产生平坦的，易于利用的攻击表面。这不是操作灵活性；这是安全责任。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Rodda警告说，这种常见的错误配置：“允许所有豆荚在集群中自由通信……如果吊舱受到损害，则攻击者可以横向穿过群集。”这种横向运动从豆荚跳到豆荚，将单个突破转化为范围范围的折衷。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;核心错误是网络策略疏忽。团队通常根本无法实施网络策略，或者他们实施过于广泛的策略，从而有效地反映了不安全的默认值。缺乏网络细分是一个关键的监督。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt;缓解：细分和控制网络流量&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;确保Kubernetes网络需要转移到零信任方法。 Rodda的指导着重于颗粒状控制：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;默认拒绝POD通信。&lt;/strong&gt;，除非绝对必要（例如Sidecar模式），默认情况下，请阻止所有POD-POD-POD通信。明确仅允许所需的连接。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;强制执行命名空间和POD级策略。&lt;/strong&gt;在命名空间和POD级别上实施网络策略，以进行细粒度的流量管理。从逻辑上细分您的群集并在细分之间和之间执行严格的通信规则。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通常将操作灵活性作为避免限制性政策的原因。他以安全意识的角度对此进行了反驳：“应定义操作灵活性KE牢记安全性。”他主张受控的灵活性，允许更改，但仅通过授权人员而在严格的条件下进行。&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，即时（JIT）访问扩展到网络。授予临时，基于需求的网络更改的许可，而不是持续的广泛访问，最大程度地减少风险。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有效的网络政策与阻碍操作有关；他们是关于战略控制交通流以包含违规行为的。 Ramaswamy进一步强调了对积极的网络安全的需求：“除非明确定义网络策略，否则Kubernetes允许在POD之间进行不受限制的通信，这意味着一个攻击者可以妥协一个POD可以横向地跨越群集。一个常见的错误是不常见的网络诉讼，要么使他们在所有方面均不宽松地使他们无效，因此可以使他们变得无效，又使他们有效地建立了一个宽松的东西。他提供了平衡安全性和灵活性的实用方法：“一种平衡安全性与操作灵活性的实用方法是从默认的拒绝策略开始，并逐步允许必要的通信。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;罗达说：“安全不是一次性的努力，这是一个持续的过程，我们都在学习如何每天改善它。”此过程必须包括连续改进网络策略以适应应用程序更改和新兴威胁，确保您的网络安全仍然是动态的防御，而不是静态漏洞。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-neading”&gt;忽略实时安全监控&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;预防是必不可少的，但不是万无一失的。攻击者不断发展，新的攻击向量出现，因此可以绕开防御能力。这正是运行时安全性监视变得至关重要的地方 - 群集内的眼睛和耳朵，检测到穿过裂缝的威胁。没有它，您的行动盲目，容易遭受违规行为，直到为时已晚，您甚至都不会看到。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;遭到违反的Vegiraju召回的忽视运行时监视的鲜明现实。 “ 2019年7月，防火墙错误配置使金融组织的K8S集群暴露于公共互联网，导致违规行为偷走了30GB的信用申请数据。”这是由简单的错误配置引起的。结果？大量数据盗窃。通过运行时监视可以很容易地预防这一点。他提到：“借助Falco等适当的审核工具，可以通过提醒我们不期望的来源的流量来轻松识别。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;核心故障是缺乏运行时可观察性。团队通常只专注于预防措施，忽视对实时威胁检测和响应的至关重要的需求。这个盲点使他们受到攻击的攻击，以利用错误的配置。r零日漏洞。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 class =“ WP-block-neading”&gt;缓解：实现可观察性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有效的运行时安全性取决于主动监视和警报。 Vegiraju提供了直接和关键的建议：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;启用API控制平面审核日志。&lt;/strong&gt;这些日志是您的主要真实来源，记录了与Kubernetes群集的每一次交互。这不是可选的；这是基本的。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;连续监视和警报。&lt;/strong&gt;仅启用日志是不够的。实施自动监视和警报以实时检测异常和可疑活动。手动日志评论不足和不切实际。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;正如Vegiraju所指出的，&lt;p&gt;和Falco之类的工具是为此目的而设计的。它们允许您定义规则来检测意外行为 - 未经授权的访问尝试，可疑网络连接或与已建立模式的偏差。并立即提醒可以快速事件响应，最大程度地减少损害。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;运行时监控不是在违规后做出反应；这是关于主动的威胁检测和遏制。这是关于在企业后分析中看到威胁&lt;em&gt;。因此，通过实施强大的运行时可观察性，您可以从反应性安全到主动的防御，在升级为全面违规之前捕捉威胁。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Rodda建议：“保持领先地位意味着不断改善您的安全姿势，测试配置和适应新的威胁”，并且运行时监视是该连续改进周期的关键组成部分，使您能够实时适应威胁。&lt;/p&gt; &lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H2 class =“ WP-block-neading”&gt;不必要的公共服务曝光&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;公众对内部Kubernetes服务的暴露是严重失误。这就像在广告牌上广播敏感数据一样。暴露最危险的服务是Kubernetes API服务器。使此控制平面组件可公开访问是一场灾难。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Vegiraju削减了问题的核心：“一个主要风险是意外暴露于服务，这应该是内部的。”他特别突出了API服务器：“ Kubernetes API服务器是关键的控制平面组件，除非绝对必要，否则不应将其暴露于公共Internet。”除非绝对必要是这里的关键短语 - 在几乎所有情况下，公众对API服务器的曝光绝不需要或合理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这本质上是危险的，因为暴露会带来完整的接管。 API服务器妥协将完整的集群控件交给攻击者。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;原则很简单：内部服务保持内部。对于API服务器和其他敏感组件，默认为私有NetWOrking。如果并且只有绝对要求外部访问，则执行极端的保护措施。 Rodda提供了这些保障措施：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;防火墙或API网关：&lt;/strong&gt;将其放在防火墙或API网关后面（例如&lt;a href =“ https://www.getambassador.io/products/dege-stack/edge-stack/api-gate/api-gate/api-gate/e-gate-gate-way一下”&gt; edge stack&gt; edge stack &lt;/a&gt;）以限制访问对特定IPS或网络或网络或网络或网络的访问。使用防火墙或API网关作为网务员，限制API服务器访问明确的白色IPS或网络。公共互联网？默认拒绝。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; VPC网络：&lt;/strong&gt;使用VPC网络在可能的情况下限制访问权限，将敏感端点保持在受控网络中。利用虚拟私有云将API服务器隔离在紧密控制的网络周边，从而最大程度地减少其攻击表面。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;基础架构AS-AS-AS-AS-CODE和同行评审：&lt;/strong&gt;确保所有生产配置均为版本受控（IAC），并且只能在适当的同伴审查后才部署。将API服务器访问配置视为高度敏感的代码。使用基础架构 - 代码管理它们，执行严格的版本控制，并为每个更改进行授权同行评审。没有例外。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Rodda建议：“使用合法的安全工具，例如具有零信任方法的API网关，可以在保护您的API和微服务免受漏洞和违规方面具有很大的影响。” API网关不仅用于管理API流量；它们是关键的安全执法点。在&lt;em&gt; &lt;em&gt;的任何&lt;/em&gt;暴露服务的前面使用API​​网关，包括精心控制的API服务器访问，添加身份验证，授权和威胁保护层，以减轻直接暴露的风险。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Rodda建议，“使用合法的安全工具，例如&lt;a href =” https://securityboulevard.com/2025/02/api-gateway-security-security-security-needs-a-a-a-a-stronger--ztronger-zerero-zerero-zerero-trust-in-troust-trust-strategy/-2-2-2.脆弱性和破坏。” API网关不仅用于管理API流量；它们是关键的安全执法点。在任何暴露服务的前面使用API​​网关，包括精心控制的API服务器访问，添加身份验证，授权和威胁保护层，以减轻直接暴露的风险。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;公开内部服务，尤其是API服务器，是一场高风险赌博，可能会带来毁灭性后果。默认为私人，严格控制任何必不可少的外部访问，并利用API网关（例如API网关）来最大程度地减少风险曝光。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自满启发了kubernetes安全性的恐惧，这比版本更新更真实。在Kubernetes版本上落后不只是小姐新功能；这是关于积累关键的安全债务。过时的版本充满了已知漏洞 - 攻击者的开门，等待被利用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Rodda说：“呆在最新的Kubernetes版本上不仅仅是要获得新功能，这是安全问题。”这不是建议；这是一项任务。每个Kubernetes版本都包含一系列安全补丁和修复程序，直接解决了新发现的威胁。运行较旧的版本意味着故意仍然容易受到当前版本已经解决的利用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;核心危险是未解决的漏洞。攻击者在过时的软件中积极针对已知弱点。 Kubernetes也不例外。较旧的kubernetes版本的利用是公开的，有效地为攻击者提供了现成的攻击蓝图。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，罗达（Rodda）承认升级障碍：“也就是说，升级kubernetes并不总是很简单。新版本可以引入破坏工作的变化，破坏工作负载，因此计划和彻底的测试是关键的，然后才能推出生产更新。” kubernetes升级&lt;em&gt;是&lt;/em&gt;复杂的。而且对中断的恐惧通常会导致升级延误，从而造成危险的脆弱窗口。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; ramaswamy证实了过时版本的现实影响：“过时的簇通常包含攻击者可以利用的已知漏洞，尤其是当它们涉及集装箱运行时漏洞或API服务器弱点时。我遇到的团队不愿意更新他们的Kubernetes版本，因为害怕折衷于折磨，尤其是在使用折磨工作时，尤其是在使用折磨的工作。他加强了对结构化更新的需求：“确保及时更新的最佳策略是维护有据可查的自动升级过程，并进行了分期推出。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&#xA;&#xA;&#xA;&lt;p&gt;忽略升级不是一个选择。安全需要主动版本管理。 Rodda建议这种方法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt;保持Kubernetes版本的最新版本。使版本货币成为最高的安全优先级。建立&lt;em&gt;常规&lt;/em&gt;和&lt;em&gt; Aggression &lt;/em&gt;更新时间表。 “如果没有破产，请不要修复它” &lt;em&gt;不是&lt;/em&gt;适用于安全更新。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;始终查看Kubernetes ChangElog，以了解正在发生变化以及如何影响您的工作量的情况。在进行任何升级之前，进行全面的尽职调查。仔细检查发行说明和更改子，以破坏变化和兼容性影响。知识是您针对升级引起的破坏的最佳武器。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在进行生产更新之前，计划和彻底的测试非常重要。将Kubernetes升级为主要部署。在分期环境中进行严格的测试是不可谈判的。识别和解决ISSUes &lt;em&gt; &lt;/em&gt;生产推出之前，最大程度地减少停机时间和风险。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在Kubernetes版本上落后是一个自我施加的安全伤口。主动版本管理 - 优先考虑及时更新，细致的计划和严格的测试 - 不仅是最佳实践；这是至关重要的安全性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class =“ wp-block头”&gt;硬化kubernetes组件 - 超越默认值&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;默认的kubernetes配置很方便。但是实现强大的kubernetes安全需要加强核心 - 掌握基本组成部分及其基本宿主。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Rodda的原因，“除了更新之外，确保Kubernetes环境的核心组成部分是我们的责任。更新解决了外部漏洞；硬化解决了Kubernetes本身内部的内部弱点和错误配置。” &lt;/p&gt;。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;核心问题是依赖不安全的默认值。 kubernetes组件（例如API服务器等）和Kubelet（如果将其留在默认状态下）通常会启用不必要的服务，较弱的许可设置，并且缺乏基本的安全控制。这种默认的姿势会产生内部漏洞，即使外部防御持有，&lt;/p&gt;也可以利用该漏洞。&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;缓解：从内而外变硬&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;真正的kubernetes弹性需要一种主动的硬化方法，从其核心向外加强群集。 Rodda为组件硬化提供了这些步骤：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;顺式基准：锁定组件。&lt;/strong&gt;锁定Kubernetes组件（例如API服务器等）和使用顺式基准测试来建立安全默认值的Kubelets和Kubelets。 Internet安全中心（CIS）基准提供了行业审查的安全配置指南。利用这些基准作为API服务器的硬化蓝图和kubelets。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; rbac：执行最低特权（再次）。但是，对于用户和服务帐户权限，RBAC本身也是Kubernetes组件内的重要硬化措施。并确保内部组件通信和权限也遵守至少特权。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;凭证旋转：最小化凭证风险。&lt;/strong&gt;定期旋转证书，密钥和密码，由Kubernetes组件使用，以最大程度地减少凭证泄漏或未经授权的访问的风险。并实现Kubernetes组件使用的所有凭据的自动旋转，即确定，密钥和密码。但始终假设凭证会受到损害，并通过快速旋转来最大程度地减少影响。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;硬化kubernetes组件是一个ongo纪律。这是关于将安全性建立到您的Kubernetes环境中的结构上，而不仅仅是作为事后想法的螺母。通过指示这些核心组件，您可以创建一个更有弹性和可辩护的Kubernetes基础架构。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Rodda鼓励说：“除了更新之外，确保Kubernetes环境的核心组成部分是必须的 - 对于任何认真对待Kubernetes Security的组织来说，必须做一个必须做的事情。” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ WP-block-heading”&gt;用于增强Kubernetes Security的工具堆栈&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然细致的配置和对最佳实践的遵守非常有用，但kubernetes的安全性得到了正确的工具堆栈的放大。单独的手动配置可能会很复杂且规模容易出错。但是，合并a &lt;a href =“ https://www.getambassador.io/blog/kubernetes-security-tools-tools-tools-wors-------best-best-practices”&gt; kubernetes安全工具堆栈&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Kubernetes安全生态系统提供了一系列针对集群保护的各个方面的工具。这些包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class =“ wp-block-list”&gt;&#xA;&lt;li&gt; &lt;strong&gt;政策执法工具：&lt;/strong&gt;如前所述，开放策略代理（OPA）例证了策略执行工具，实现了集中式的，基于代码的访问权限，以进行访问控制，合规性等。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;运行时安全监控工具：&lt;/strong&gt;诸如Falco之类的工具（也曾讨论过），提供实时威胁检测，警告运行时的异常行为和潜在的安全事件。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;脆弱性扫描工具：&lt;/strong&gt;这些工具自动化了识别容器图像，Kubernetes配置和运行工作负载中漏洞的过程，帮助团队主动解决弱点。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt;图像安全工具：&lt;/strong&gt;专注于容器图像供应链，这些工具有助于将图像从构建到部署，确保图像没有已知漏洞和恶意软件。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;strong&gt; API安全工具 - 包括API网关：&lt;/strong&gt;通过Kubernetes揭示API和微服务的组织，API安全工具变得至关重要。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; API网关，特别是为Kubernetes环境提供了强大的安全层。因为它们提供了对API流量的集中控制，因此可以执行关键的安全政策，例如身份验证，授权，限制和威胁检测。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;并通过充当API和在Kubernetes运行的微服务的安全前门，可大大降低攻击面并为针对API特异性漏洞提供增强的保护。诸如大使边缘堆栈之类的工具是API网关的示例，旨在与Kubernetes环境无缝集成，提供这些增强的安全功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是工具不是银弹。记住这很有帮助与基本安全实践一起实施时，安全工具最有效。工具增加并自动化这些实践；他们不替换它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class =“ wp-block头”&gt;最终想法：kubernetes安全要求&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;确保Kubernetes是艰苦的工作。没有一个清单可以遵循，并且确信它是坚不可摧的。我们讨论的常见错误（从基础身份验证弱点到运行时盲点和尚无牢固的组件）都高明了Kubernetes安全挑战的持续性和不断发展的性质。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;重要的是，Kubernetes安全需要持续监视和纪律处分。它需要从初始设计和部署到正在进行的操作和更新的应用程序生命周期的每个阶段的安全优先思维方式的基本转变。这意味着主动实施最佳实践并使用正确的安全工具来增强它们，以自动化，增强和简化您的防御。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; Ramaswamy提供了一个关键的战略见解，它封装了Kubernetes安全的本质：“ Kubernetes安全与完美的硬化无关 - 它是关于建立分层探测，使攻击者的生活变得更加艰难，同时保持和&lt; href =“ https://thenewstack.io/optimize-yourize-inner-inner-inner-dev-loop-to-increase-developer-velveveler-velocity/”&gt;增加开发人员的速度。注意开发速度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;因此，记住罗达（Rodda）早些时候分享的建议很高兴：“安全不是一次性的努力 - 这是一个持续的过程，”因为这不仅仅是建议；这是有效的Kubernetes安全的定义原则。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;em&gt;找到作者&lt;a href =“ https://linkedin.com/in/s-jan”&gt; linkedin &lt;/a&gt; &lt;/em&gt;。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;在&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;在&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 21 Apr 2025 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>