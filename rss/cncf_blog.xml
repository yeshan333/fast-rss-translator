<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://rsshub.rssforever.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【Join the Keycloak community at KeyConf24 on Sep 19】9 月 19 日在 KeyConf24 上加入 Keycloak 社区</title>
      <link>https://www.cncf.io/blog/2024/09/10/join-the-keycloak-community-at-keyconf24-on-sep-19/</link>
      <description>【&lt;p&gt;&lt;em&gt;Community post by Alexander Schwartz, Keycloak maintainer&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://keyconf.dev/&#34;&gt;KeyConf24&lt;/a&gt;, our 2024 Keycloak Identity Summit, will happen on September 19th, which is just around the corner! This year’s event promises to be even bigger and better, with a program packed full of relevant, cutting-edge topics.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The event is organized by the Keycloak OAuth2 Special Interest Group which contributed to building OpenID FAPI standards into &lt;a href=&#34;https://www.keycloak.org/&#34;&gt;Keycloak&lt;/a&gt; (CNCF Incubating project). There is more standards-related work in progress, and it is a great opportunity to interact with the contributors and be part of such amazing contributions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This year, we’ll meet in Vienna and the whole event will be live streamed for the first time. We would like to invite the Keycloak community to join us and contribute to the discussions remotely, because due to high demand and limited space on-site, in-person tickets are already gone.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;a&gt;&lt;/a&gt;Exciting talks about the future of identity management&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our program committee selected great talks&amp;nbsp;and the program is now online at &lt;a href=&#34;https://keyconf.dev/&#34;&gt;https://keyconf.dev/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can expect talks about:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;European Digital Identity Wallet:&lt;/strong&gt; Deep dives into the European Union’s ambitious initiative and its impact on identity management.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Verifiable Credentials:&lt;/strong&gt; Explore the exciting potential of decentralized identity verification and the role of Keycloak.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Real-world Keycloak integrations:&lt;/strong&gt; Technical sessions on Keycloak’s capabilities and how to leverage them in real world scenarios like the banking industry.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;New and upcoming features in Keycloak:&lt;/strong&gt; Hear about the new organizations and user profile features which are available in the latest releases of Keycloak, as well as the next upcoming features.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;a&gt;&lt;/a&gt;Save the Date and join us in the live stream!&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can register for the live stream at &lt;a href=&#34;https://keyconf.dev/&#34;&gt;https://keyconf.dev/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re excited and are looking forward to meeting you at our event on Sep 19. Let’s continue to shape the future of identity together!&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;Keycloak 维护者 Alexander Schwartz 的社区帖子&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://keyconf.dev/&#34;&gt;KeyConf24&lt;/a&gt;，我们的 2024 年 Keycloak 身份峰会将于 9 月 19 日举行，即将到来！今年的活动有望规模更大、质量更高，活动内容充满相关的前沿主题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该活动由 Keycloak OAuth2 特别兴趣小组组织，该小组致力于将 OpenID FAPI 标准构建到 &lt;a href=&#34;https://www.keycloak.org/&#34;&gt;Keycloak&lt;/a&gt;（CNCF 孵化项目）中。更多与标准相关的工作正在进行中，这是与贡献者互动并参与如此惊人贡献的绝佳机会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今年，我们将在维也纳相聚，并且首次对整个活动进行直播。我们想邀请 Keycloak 社区加入我们并远程参与讨论，因为由于需求量大且现场空间有限，现场门票已经消失。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;a&gt;&lt;/a&gt;关于身份管理未来的精彩讨论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的计划委员会选出了精彩的演讲，该计划现已上线：&lt;a href=&#34;https://keyconf.dev/&#34;&gt;https://keyconf.dev/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以期待以下内容的讨论：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;欧洲数字身份钱包&lt;/strong&gt;：深入探讨欧盟雄心勃勃的举措及其对身份管理的影响。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可验证凭证&lt;/strong&gt;：探索去中心化身份验证的令人兴奋的潜力以及 Keycloak 的作用。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;现实世界的 Keycloak 集成&lt;/strong&gt;：有关 Keycloak 功能以及如何在银行业等现实世界场景中利用它们的技术会议。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Keycloak 中的新功能和即将推出的功能：&lt;/strong&gt;了解最新版本的 Keycloak 中提供的新组织和用户个人资料功能，以及即将推出的新功能。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 class=&#34;wp-block-heading&#34;&gt;&lt;a&gt;&lt;/a&gt;保存日期并加入我们的直播！&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以在&lt;a href=&#34;https://keyconf.dev/&#34;&gt;https://keyconf.dev/&lt;/a&gt;&lt;/p&gt;注册观看直播&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们很高兴并期待在 9 月 19 日的活动中与您见面。让我们继续共同塑造身份的未来！&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 09 Sep 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【KubeCon + CloudNativeCon North America co-located event deep dive: EnvoyCon】KubeCon + CloudNativeCon 北美同地举办活动深入探讨：EnvoyCon</title>
      <link>https://www.cncf.io/blog/2024/09/09/kubecon-cloudnativecon-north-america-co-located-event-deep-dive-envoycon/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;379&#34; height=&#34;120&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/09/EnvoyCon-400x275-Logo-Color.svg&#34; alt=&#34;Envoycon&#34; class=&#34;wp-image-117249&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Chair: Matt Turner&lt;br&gt;November 12, 2024&lt;br&gt;Salt Lake City, Utah&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/co-located-events/envoycon/&#34;&gt;EnvoyCon&lt;/a&gt; is a practitioner-driven event which emphasizes end-user case studies, and technical talks from the Envoy developers. We do not have product pitches, but will hear about solutions which build on top of Envoy. So join us for an exciting day of technical content, knowledge sharing, and engagement with project maintainers! The first EnvoyCon was at KubeCon North America 2018 in Seattle, following Envoy’s donation to the CNCF in September 2017.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Who will get the most out of attending this event?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;EnvoyCon is aimed at everyone using or building Envoy. We have a range of topics and levels so there’s content for everyone in the Envoy ecosystem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What is new and different this year?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This year we’re covering a host of new and exciting topics, as folks continue to push the boundaries of what can be built with Envoy. We’ve got talks on Zero Trust, resilience in production, performance, extension points, and even a tale of Envoy being used as a VPN concentrator!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What will the day look like?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’ve got a lot to pack into a short time! We’re only running for the morning this year, so we’ll have non-stop talks save a short coffee break. There will be traditional talk sessions, followed by a really interesting panel discussion and rounded off with some quick-fire lightning talks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Should I do any homework first?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;No prep is needed to enjoy EnvoyCon and get the most out of it. We’re a single-track event, so you don’t even need to plan your schedule, just turn up and soak it in!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Contributed by Matt Turner who is genuinely interested to hear about all of the things built on top of Envoy.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;Don’t forget to register&lt;/a&gt; for KubeCon + CloudNativeCon North America 2024.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“379”高度=“120”src=“https://www.cncf.io/ wp-content/uploads/2024/09/EnvoyCon-400x275-Logo-Color.svg&#34; alt=&#34;Envoycon&#34; class=&#34;wp-image-117249&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;主席：Matt Turner&lt;br&gt;2024 年 11 月 12 日&lt;br&gt;犹他州盐湖城&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/co- located-events/envoycon/&#34;&gt;EnvoyCon&lt;/a&gt; 是一个由实践者驱动的活动，强调结束- 用户案例研究以及 Envoy 开发人员的技术讲座。我们没有产品推介，但会听到基于 Envoy 的解决方案。因此，加入我们，享受令人兴奋的一天的技术内容、知识共享以及与项目维护人员的互动！继 Envoy 于 2017 年 9 月向 CNCF 捐款后，首届 EnvoyCon 于 2018 年在西雅图举行的 KubeCon North America 举行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;谁将从参加本次活动中获益最多？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;EnvoyCon 面向所有使用或构建 Envoy 的人。我们有一系列主题和级别，因此 Envoy 生态系统中的每个人都有适合的内容。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;今年有什么新的和不同的？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今年，随着人们不断突破 Envoy 的构建界限，我们将涵盖许多令人兴奋的新主题。我们讨论了零信任、生产弹性、性能、扩展点，甚至还有 Envoy 被用作 VPN 集中器的故事！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;这一天会是什么样子？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们需要在短时间内完成很多工作！今年我们只跑早上，所以除了短暂的咖啡休息时间外，我们将进行不间断的会谈。将会有传统的演讲会议，随后是非常有趣的小组讨论，最后是一些快速的闪电演讲。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;我应该先做作业吗？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;无需任何准备即可享受 EnvoyCon 并充分利用它。我们是单场活动，因此您甚至不需要计划日程，只需参加即可！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;由 Matt Turner 贡献，他非常有兴趣了解基于 Envoy 构建的所有内容。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;不要忘记注册&lt;/a&gt;参加 KubeCon + CloudNativeCon North America 2024。&lt;/ p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 08 Sep 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Understanding cloud native maturity: a survey to assess end-user progress】了解云原生成熟度：评估最终用户进展的调查</title>
      <link>https://www.cncf.io/blog/2024/09/13/understanding-cloud-native-maturity-a-survey-to-assess-end-user-progress/</link>
      <description>【&lt;p&gt;&lt;em&gt;Community post by Danielle Cook, Cartografos Working Group&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As organizations continue their journey toward digital transformation, cloud native technologies are increasingly critical for achieving agility, scalability, and resilience. However, the path to cloud native maturity is not uniform across organizations. Some have embraced the model fully, reaping its benefits, while others are still navigating the complexities.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To better understand where companies stand in this journey, the Cartografos Working Group wants to hear from you to evaluate end users against the cloud native maturity model. You can complete the &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSeu8EzZnairSaquVUKtAA1gZ3nzFQ0oPm-PbO4sHRt2zBOIaQ/viewform?usp=sf_link&#34;&gt;Google Form&lt;/a&gt; here. All data is anonymous!&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The Purpose Behind the Survey&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Cloud Native Maturity Model serves as a framework to assess an organization’s progress in adopting cloud native practices. It identifies different levels of maturity, ranging from initial adoption to full-scale, automated operations that align with business goals. While the model provides a clear pathway for organizations, our experience tells us that the reality is often more nuanced. This quick five minute survey aims to validate the levels of maturity outlined in the model and identify where end users need additional support and information.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By understanding the current state of cloud native adoption, we can better serve the community. We want to help organizations bridge the gap between where they are and where they need to be, offering targeted resources and guidance that align with their specific needs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What the Survey Will Measure&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The annoymous &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSeu8EzZnairSaquVUKtAA1gZ3nzFQ0oPm-PbO4sHRt2zBOIaQ/viewform?usp=sf_link&#34;&gt;survey&lt;/a&gt; focuses several key areas that are critical to cloud native maturity:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Cloud Strategy and Alignment&lt;/strong&gt;: Evaluating how integrated and strategic the cloud-native approach is within your organization and its alignment with overall IT strategy.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Business Impact and Success Metrics&lt;/strong&gt;: Assessing the criticality of business drivers like cost savings, agility, and innovation, and how effectively success is measured for cloud-native projects.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Skills, Resources, and Change Management&lt;/strong&gt;: Understanding the organization’s cloud-native skills, resource availability, and the effectiveness of training, change management, and support structures.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Technology and Process Maturity&lt;/strong&gt;: Measuring the maturity and effectiveness of CI/CD pipelines, security practices, observability, and the impact of cloud-native technologies on development and deployment processes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Governance and Culture&lt;/strong&gt;: Reviewing governance, compliance management, and how cloud-native adoption has influenced organizational culture and collaboration between teams.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Why Your Participation Matters&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The insights gained from this annoyoumous &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSeu8EzZnairSaquVUKtAA1gZ3nzFQ0oPm-PbO4sHRt2zBOIaQ/viewform?usp=sf_link&#34;&gt;survey&lt;/a&gt; will be invaluable in shaping the future of the Cloud Native Maturity Model. By participating, you’ll contribute to a better understanding of where the community stands and help identify the areas that require more attention and resources. In return, you’ll be able to read about where the industry is in cloud native maturity and review recommendations in the updated maturity model on how to advance further.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What’s Next?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once the survey is complete, we will analyze the data, publish the results and update the Cloud Native Maturity Model accordingly.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Cartografos Working Group is committed to helping organizations navigate the complexities of cloud native technologies. Please take just five minutes to help support this effort!&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSeu8EzZnairSaquVUKtAA1gZ3nzFQ0oPm-PbO4sHRt2zBOIaQ/viewform?usp=sf_link&#34;&gt;Complete the form&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;Cartografos 工作组 Danielle Cook 的社区帖子&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着组织继续迈向数字化转型，云原生技术对于实现敏捷性、可扩展性和弹性变得越来越重要。然而，云原生成熟之路在各个组织中并不统一。一些人已经完全接受了该模型，并从中获益，而另一些人仍在应对复杂性。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了更好地了解公司在此过程中所处的位置，Cartografos 工作组希望听取您的意见，以根据云原生成熟度模型评估最终用户。您可以在此处填写 &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSeu8EzZnairSaquVUKtAA1gZ3nzFQ0oPm-PbO4sHRt2zBOIaQ/viewform?usp=sf_link&#34;&gt;Google 表单&lt;/a&gt;。所有数据都是匿名的！ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;调查背后的目的&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;云原生成熟度模型作为一个框架来评估组织在采用云原生实践方面的进展。它确定了不同的成熟度级别，从最初采用到符合业务目标的全面自动化运营。虽然该模型为组织提供了清晰的途径，但我们的经验告诉我们，现实往往更加微妙。这项为期五分钟的快速调查旨在验证模型中概述的成熟度级别，并确定最终用户在哪些方面需要额外的支持和信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过了解云原生采用的现状，我们可以更好地服务社区。我们希望帮助组织弥合现状与需求之间的差距，提供符合其特定需求的有针对性的资源和指导。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;调查将衡量什么&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这项令人讨厌的&lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSeu8EzZnairSaquVUKtAA1gZ3nzFQ0oPm-PbO4sHRt2zBOIaQ/viewform?usp=sf_link&#34;&gt;调查&lt;/a&gt;重点关注了对云原生成熟度：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;云战略和一致性&lt;/strong&gt;：评估云原生方法在组织内的集成度和战略性及其与整体 IT 战略的一致性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;业务影响和成功指标&lt;/strong&gt;：评估成本节约、敏捷性和创新等业务驱动因素的重要性，以及如何有效衡量云原生项目的成功。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;技能、资源和变革管理&lt;/strong&gt;：了解组织的云原生技能、资源可用性以及培训、变革管理和支持结构的有效性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;技术和流程成熟度&lt;/strong&gt;：衡量 CI/CD 管道、安全实践、可观察性以及云原生技术对开发和部署流程的影响的成熟度和有效性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;治理和文化&lt;/strong&gt;：审查治理、合规管理以及云原生采用如何影响组织文化和团队之间的协作。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;为什么您的参与很重要&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从这项烦人的&lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSeu8EzZnairSaquVUKtAA1gZ3nzFQ0oPm-PbO4sHRt2zBOIaQ/viewform?usp=sf_link&#34;&gt;调查&lt;/a&gt;中获得的见解对于以下领域来说非常宝贵：塑造云原生成熟度模型的未来。通过参与，您将有助于更好地了解社区的现状，并帮助确定需要更多关注和资源的领域。作为回报，您将能够了解该行业的云原生成熟度，并查看更新的成熟度模型中有关如何进一步推进的建议。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;下一步是什么？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;调查完成后，我们将分析数据、发布结果并相应更新云原生成熟度模型。  &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cartografos 工作组致力于帮助组织应对云原生技术的复杂性。请花五分钟时间来帮助支持这项努力！ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSeu8EzZnairSaquVUKtAA1gZ3nzFQ0oPm-PbO4sHRt2zBOIaQ/viewform?usp=sf_link&#34;&gt;填写表单&lt;/a&gt;。 &lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 12 Sep 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【KubeCon + CloudNativeCon North America 2024 co-located event deep dive: Observability Day】KubeCon + CloudNativeCon North America 2024 同期举办活动深入探讨：可观测性日</title>
      <link>https://www.cncf.io/blog/2024/09/11/kubecon-cloudnativecon-north-america-2024-co-located-event-deep-dive-observability-day/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;385&#34; height=&#34;105&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/09/Observability-Day-NA_2023_Logo_Color.svg&#34; alt=&#34;observability Day&#34; class=&#34;wp-image-117333&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Co-chairs: Eduardo Silva, Chronosphere, Austin Parker, Honeycomb, Anna Kapuscinska, Isovalent at Cisco&lt;br&gt;November 12, 2024&lt;br&gt;Salt Lake City, Utah&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Observability is a journey, and in a diverse ecosystem like ours, it’s easy to get confused or use the wrong tools for specific problems. &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/co-located-events/observability-day/&#34;&gt;Observability Day&lt;/a&gt; is an open space where we can learn together, make valuable connections, and shape the future of observability. And you’ll be surprised by how many new project features are born from the feedback and ideas discussed in the hallways after this event.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The origins of Observability Day were found KubeCon Europe in Valencia 2022 when we hosted &lt;a href=&#34;https://events.linuxfoundation.org/fluentcon-europe/&#34;&gt;FluentCon&lt;/a&gt;, a co-located event dedicated solely to the &lt;a href=&#34;https://fluentd.org/&#34;&gt;Fluentd&lt;/a&gt; and &lt;a href=&#34;https://fluentbit.io/&#34;&gt;Fluent Bit&lt;/a&gt; projects. The event was a success, and after receiving valuable feedback from our community, we realized we could offer even more to observability practitioners at KubeCon. To do this, we decided to broaden our focus, inviting other CNCF projects to join us.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Just a few months later, at KubeCon US 2022, we launched &lt;a href=&#34;https://events.linuxfoundation.org/open-observability-day-north-america&#34;&gt;Open Observability Day&lt;/a&gt;, bringing together maintainers and community members from projects like Jaeger, Fluentd, Thanos, Prometheus and OpenTelemetry. The event was a great success, and it became clear that we needed to formalize it with a more structured approach, working closely with the &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt; and that’s when Observability Day was born.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By 2023 and 2024, the event had grown organically to the point where Observability Day now features two rooms and boasts a high attendance rate.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Who will get the most out of attending this event?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This event is perfect for anyone interested in observability, whether you’re an experienced practitioner or just getting started. If you’re navigating the complexities of monitoring and using various tools, looking for innovative solutions, or simply eager to learn more about observability, this event will be valuable for you.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What is new and different this year?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This year, what’s new and different is the variety and quality of presentations. We were pleasantly surprised by the high number of submissions and the balanced range of topics covered. This marks a significant improvement from previous years, offering attendees an even richer and more diverse learning experience.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What will the day look like?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The event will begin in the main room with a brief welcome from the co-chairs. Following that, maintainers from various CNCF projects will provide updates on their latest developments. Afterward, we’ll dive into the technical sessions, which will run simultaneously in two dedicated rooms. This setup ensures a dynamic and engaging experience, offering a wide range of topics for attendees to choose from.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Should I do any homework first?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;No specific preparation is needed, but we strongly recommend that attendees review the schedule in advance to plan their day and make the most of the sessions, especially when switching between rooms. If you’re interested in connecting with any of the Observability Day speakers, this is a great opportunity! Be sure to reach out to them on Slack or through their preferred channels to start the conversation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Anything else you would like to say about this event?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This event is FOR YOU! Come with an open mindset, ready to exchange ideas and connect with fellow observability practitioners. Whether you’re new to the space or a seasoned veteran, there’s always something new to learn and share. So dive in, engage with others, and make the most of this opportunity! 🙂&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Submitted by the co-chairs who are looking forward to continuing to help build a strong community.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;Don’t forget to register&lt;/a&gt; for KubeCon + CloudNativeCon North America 2024.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“385”高度=“105”src=“https://www.cncf.io/ wp-content/uploads/2024/09/Observability-Day-NA_2023_Logo_Color.svg&#34; alt=&#34;可观察日&#34; class=&#34;wp-image-117333&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;联合主席：Eduardo Silva、Chronosphere、Austin Parker、Honeycomb、Anna Kapuscinska、Isovalent at Cisco&lt;br&gt;2024 年 11 月 12 日&lt;br&gt;犹他州盐湖城&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;可观察性是一个旅程，在像我们这样的多元化生态系统中，很容易感到困惑或针对特定问题使用错误的工具。 &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/co- located-events/observability-day/&#34;&gt;可观察性日&lt;/a&gt;是一个我们可以一起学习的开放空间，建立有价值的联系，塑造可观察性的未来。您会惊讶地发现，活动结束后，走廊里讨论的反馈和想法催生了如此多的新项目功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;可观察性日的起源可以追溯到 2022 年巴伦西亚 KubeCon Europe，当时我们主办了一项同期活动 &lt;a href=&#34;https://events.linuxfoundation.org/fluentcon-europe/&#34;&gt;FluentCon&lt;/a&gt;专门致力于 &lt;a href=&#34;https://fluentd.org/&#34;&gt;Fluentd&lt;/a&gt; 和 &lt;a href=&#34;https://fluentbit.io/&#34;&gt;Fluent Bit&lt;/a&gt; 项目。这次活动取得了成功，在收到社区的宝贵反馈后，我们意识到我们可以为 KubeCon 的可观察性从业者提供更多服务。为此，我们决定扩大我们的关注范围，邀请其他 CNCF 项目加入我们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就在几个月后，在 KubeCon US 2022 上，我们推出了&lt;a href=&#34;https://events.linuxfoundation.org/open-observability-day-north-america&#34;&gt;开放可观测日&lt;/a&gt;，将来自 Jaeger、Fluentd、Thanos、Prometheus 和 OpenTelemetry 等项目的维护者和社区成员聚集在一起。该活动取得了巨大成功，很明显，我们需要通过与 &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt; 和这就是可观察性日诞生的时候。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;到 2023 年和 2024 年，该活动已有机发展到如今可观测日拥有两个房间并拥有很高的出席率。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;谁将从参加本次活动中获益最多？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此活动非常适合任何对可观察性感兴趣的人，无论您是经验丰富的从业者还是新手。如果您正在解决监控和使用各种工具的复杂性、寻找创新解决方案，或者只是渴望了解有关可观察性的更多信息，那么本次活动对您来说非常有价值。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;今年有什么新的和不同的？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今年的新鲜和不同之处在于演示的多样性和质量。我们对提交的大量内容和涵盖的主题范围的均衡感到惊喜。这标志着与往年相比的显着改进，提供了为参与者提供更丰富、更多样化的学习体验。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;这一天会是什么样子？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;活动将在主房间开始，联合主席将进行简短的欢迎。随后，来自各个 CNCF 项目的维护人员将提供其最新进展的更新。之后，我们将深入讨论技术会议，该会议将在两个专用房间同时举行。这种设置可确保提供动态且引人入胜的体验，并提供广泛的主题供与会者选择。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;我应该先做作业吗？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不需要具体准备，但我们强烈建议与会者提前查看日程安排，以计划他们的一天并充分利用会议，特别是在切换会议室时。如果您有兴趣与任何可观测日演讲者联系，这是一个很好的机会！请务必通过 Slack 或通过他们喜欢的渠道与他们联系以开始对话。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;关于本次活动您还有什么想说的吗？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这个活动适合你！保持开放的心态，准备好与其他可观察性从业者交流想法并建立联系。无论您是这个领域的新手还是经验丰富的老手，总有一些新东西需要学习和分享。因此，投入其中，与他人互动，并充分利用这个机会！ 🙂&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;由期待继续帮助建立强大社区的联合主席提交。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/&#34;&gt;不要忘记注册&lt;/a&gt;参加 KubeCon + CloudNativeCon North America 2024。&lt;/ p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 10 Sep 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Things to do in Salt Lake City】盐湖城景点</title>
      <link>https://www.cncf.io/blog/2024/09/11/things-to-do-in-salt-lake-city/</link>
      <description>【&lt;p&gt;With &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/?utm_source=google&amp;amp;utm_medium=paid-search&amp;amp;utm_campaign=kubecon-na-2024&amp;amp;utm_term=events-kubecon-na-2024-cncf&amp;amp;utm_content=kubecon-na_rsa&amp;amp;campaignid=21541954784&amp;amp;adgroupid=166431838780&amp;amp;creative=708046449585&amp;amp;matchtype=p&amp;amp;network=g&amp;amp;device=c&amp;amp;keyword=kubecon%20salt%20lake%20city&amp;amp;utm_term=kubecon%20salt%20lake%20city&amp;amp;utm_campaign=Events+-+KubeCon+NA+2024+-+CNCF&amp;amp;utm_source=google&amp;amp;utm_medium=ppc&amp;amp;hsa_acc=8666746580&amp;amp;hsa_cam=21541954784&amp;amp;hsa_grp=166431838780&amp;amp;hsa_ad=708046449585&amp;amp;hsa_src=g&amp;amp;hsa_tgt=kwd-2334017742870&amp;amp;hsa_kw=kubecon%20salt%20lake%20city&amp;amp;hsa_mt=p&amp;amp;hsa_net=adwords&amp;amp;hsa_ver=3&amp;amp;gad_source=1&amp;amp;gbraid=0AAAAAD2R-lp2bIHwzqtwprVzUNyb055AJ&amp;amp;gclid=Cj0KCQjw0Oq2BhCCARIsAA5hubVNu9Js3JFpBEYHq4v5_4MNq4oir4kMjfwSqOJc8kun7c8sM5tDSmMaApQCEALw_wcB&#34;&gt;KubeCon + CloudNativeCon North America 2024&lt;/a&gt; just a few months away we thought it would be fun to ask our ambassadors and other locals about where to go and what to do while we’re all in Salt Lake City. Time to start planning the before and after conference fun now!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Start with a Utah “thing”&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One of the most “Utah things to do,” according to Ambassador Taylor Thomas, is to visit a soda shop. Recommendations include &lt;a href=&#34;https://www.mysodalicious.com/loc#loc-mc-section&#34;&gt;Sodalicious&lt;/a&gt;, &lt;a href=&#34;https://swigdrinks.com/menu/&#34;&gt;Swig&lt;/a&gt; and &lt;a href=&#34;https://fiizdrinks.com/&#34;&gt;Fiiz&lt;/a&gt; ”for lots of sugar and something unique.” Ambassador Matt Asay seconds this: “Utah is also home to a very peculiar other way of getting caffeine that everyone should try. We have a wide array of “dirty soda” places. Think Coke Zero + half-and-half + raspberry puree. Trust me: sounds strange but tastes great.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Don’t miss the local Joe&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Our ambassadors *love* the local coffee scene and here are some of their favorite choices:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Caffe d’Bolla – Ambassador Matt likens their “siphon coffee” experience to what you might find in San Francisco or Seattle. Allow an hour for the siphon and you do need to &lt;a href=&#34;https://caffedbolla.com/&#34;&gt;book in advance&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.threepinescoffee.com/&#34;&gt;Three Pines Coffee&lt;/a&gt; – coffee, matcha, espresso and more&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://bluecopperslc.com/&#34;&gt;Blue Copper&lt;/a&gt; – offering a curated selection of coffees&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://publikcoffee.com/&#34;&gt;Publik Coffee Roasters&lt;/a&gt; – roasting coffee to order&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Take a day – or half-day – trip&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There’s a lot in Salt Lake City, but there is also much to see around it as well. Ambassador Alan Clark suggests scheduling in time to visit at least one of Utah’s national or state parks because it is what the state is best known for. “&lt;a href=&#34;https://www.nps.gov/arch/index.htm&#34;&gt;Arches&lt;/a&gt;, &lt;a href=&#34;https://www.nps.gov/cany/index.htm&#34;&gt;Canyonlands&lt;/a&gt;, &lt;a href=&#34;https://www.nps.gov/zion/index.htm&#34;&gt;Zions&lt;/a&gt; and &lt;a href=&#34;https://www.nps.gov/brca/index.htm&#34;&gt;Bryce Canyon &lt;/a&gt;can be visited in a very long day trip. Bryce or Arches are the closest – both about a four-hour drive from Salt Lake. Bryce has the highest elevation (8,000 feet -2438 m). And November is also a great time to visit the parks as the crowds are gone, the temperatures are good for hiking, and the colors in the red rocks are more vibrant.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you want to get away but stay closer to Salt Lake, Ambassador Matt suggests &lt;a href=&#34;https://www.visitparkcity.com/&#34;&gt;Park City&lt;/a&gt;. “It’s fun to drive up Big Cottonwood Canyon and over Guardsman Pass into Park City (&amp;lt;30 mins away if you drive directly to PC from SLC, but longer if you take the Big Cottonwood way) and walk Main Street there. Great vibe, great restaurants, and there will be snow on the ground in November. It’s a pretty drive.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Get outside!&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Opportunities to hike and explore abound around Salt Lake, but remember it’s going to be the second week of November so it will likely be cold and potentially snowy in some areas. Always check the weather before heading out.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Hikers will want to explore this guide to &lt;a href=&#34;https://www.visitutah.com/places-to-go/cities-and-towns/salt-lake-city/trails&#34;&gt;local hiking around Salt Lake&lt;/a&gt;, and here’s a look at &lt;a href=&#34;https://www.visitutah.com/articles/where-to-climb-near-salt-lake&#34;&gt;rock climbing options&lt;/a&gt; near the city. Locals let us know this isn’t a bad time perhaps to visit &lt;a href=&#34;https://www.visitutah.com/articles/great-salt-lake-year-round&#34;&gt;Great Salt Lake Park&lt;/a&gt;, and &lt;a href=&#34;https://www.tripadvisor.com/Attraction_Review-g60922-d255182-Reviews-Big_Cottonwood_Canyon-Salt_Lake_City_Utah.html&#34;&gt;Big Cottonwood Canyon&lt;/a&gt; is always popular.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Don’t forget the dinosaurs&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utah is a fossil and dinosaur lover’s dream, so the &lt;a href=&#34;https://nhmu.utah.edu/&#34;&gt;Natural History Museum of Utah&lt;/a&gt; is a must-see. Don’t miss the world’s largest collection of horned dinosaur skulls.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;You’ll be visiting Silicon Slopes&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It may come as a surprise to find that the stretch from Provo, Utah to Salt Lake City is known as the “Silicon Slopes” and it’s considered a high tech haven. In fact, the Wall Street Journal said Salt Lake had the country’s hottest job market in 2023. And research firm FDi Intelligence is predicting Utah is going to have the highest percentage of tech job growth between 2023 and 2033. Learn more about this &lt;a href=&#34;https://www.fdiintelligence.com/content/feature/salt-lake-city-becomes-new-tech-paradise-82783&#34;&gt;new “tech paradise”&lt;/a&gt; you’ll be visiting during KubeCon + CloudNativeCon North America 2024.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;与&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/?utm_source=google&amp;utm_medium=paid-search&amp;utm_campaign=kubecon-na-2024&amp;utm_term=events-kubecon-na-2024- cncf&amp;utm_content=kubecon-na_rsa&amp;campaignid=21541954784&amp;adgroupid=166431838780&amp;creative=708046449585&amp;matchtype=p&amp;network=g&amp;device=c&amp;keyword=kubecon%20salt%20lake%20city&amp;utm_term=kubecon%20salt%20lake%2 0city&amp;utm_campaign=活动+-+KubeCon+NA+2024+-+CNCF&amp;utm_source=google&amp;utm_medium=ppc&amp;hsa_acc =8666746580&amp;hsa_cam=21541954784&amp;hsa_grp=166431838780&amp;hsa_ad=708046449585&amp;hsa_src=g&amp;hsa_tgt=kwd-2334017742870&amp;hsa_kw=kubecon%20salt%20lake%20city&amp; hsa_mt=p&amp;hsa_net=adwords&amp;hsa_ver=3&amp;gad_source=1&amp;gbraid=0AAAAAD2R-lp2bIHwzqtwprVzUNyb055AJ&amp;gclid=Cj0KCQjw0Oq2BhCCARIsAA5hubVNu9Js3JFpBEYHq4v5_4MNq4oir4kMjfwSqOJc8 kun7c8sM5tDSmMaApQCEALw_wcB&#34;&gt;KubeCon + CloudNativeCon 北美 2024&lt;/a&gt; 只是几个月后，我们认为向我们的大使和其他当地人询问我们在盐湖城期间该去哪里以及该做什么会很有趣。现在就开始计划会议前后的乐趣吧！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;从犹他州的“事物”开始&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;根据泰勒·托马斯大使的说法，“犹他州最值得做的事情之一”就是参观汽水店。建议包括 &lt;a href=&#34;https://www.mysodalicious.com/loc#loc-mc-section&#34;&gt;Sodalicious&lt;/a&gt;、&lt;a href=&#34;https://swigdrinks.com/menu/&#34;&gt;Swig &lt;/a&gt; 和 &lt;a href=&#34;https://fiizdrinks.com/&#34;&gt;Fiiz&lt;/a&gt; “为了大量的糖和一些独特的东西。”马特·阿赛大使对此表示赞同：“犹他州还有一种非常奇特的其他获取咖啡因的方式，每个人都应该尝试一下。我们有各种各样的“脏汽水”场所。想想可乐零+半可乐+覆盆子果泥。相信我：听起来很奇怪，但味道很好。”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;不要错过当地的乔&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们的大使*喜欢*当地的咖啡场景，以下是他们最喜欢的一些选择：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Caffe d’Bolla – 马特大使将他们的“虹吸咖啡”体验比作您在旧金山或西雅图可能会遇到的体验。虹吸管需要一个小时，您需要&lt;a href=&#34;https://caffedbolla.com/&#34;&gt;提前预订&lt;/a&gt;。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www. Threepinescoffee.com/&#34;&gt;三松咖啡&lt;/a&gt; - 咖啡、抹茶、浓缩咖啡等&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://bluecopperslc.com/&#34;&gt;Blue Copper&lt;/a&gt; – 提供精选咖啡&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://publikcoffee.com/&#34;&gt;Publik Coffee Roasters&lt;/a&gt; – 按订单烘焙咖啡&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;进行一天或半天的旅行&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;盐湖城有很多东西，但周围也有很多值得一看的地方。艾伦·克拉克大使建议及时安排访问至少一位犹他州国民或统计局公园是因为这是该州最出名的地方。 “&lt;a href=&#34;https://www.nps.gov/arch/index.htm&#34;&gt;拱门&lt;/a&gt;，&lt;a href=&#34;https://www.nps.gov/cany/index.htm&#34; &gt;峡谷地&lt;/a&gt;、&lt;a href=&#34;https://www.nps.gov/zion/index.htm&#34;&gt;锡安&lt;/a&gt;和&lt;a href=&#34;https://www.nps.gov/ brca/index.htm&#34;&gt;布莱斯峡谷&lt;/a&gt;可以通过很长的一日游来参观。布莱斯 (Bryce) 或拱门 (Arches) 是最近的——距离盐湖城均约四小时车程。布莱斯海拔最高（8,000 英尺-2438 米）。十一月也是游览公园的好时机，因为人群散去，温度适合徒步旅行，红色岩石的颜色更加鲜艳。”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想远离盐湖城，但又想住在离盐湖更近的地方，马特大使建议&lt;a href=&#34;https://www.visitparkcity.com/&#34;&gt;帕克城&lt;/a&gt;。 “开车沿着大三叶杨峡谷，越过卫兵通道进入帕克城（如果您从 SLC 直接开车到 PC，只需不到 30 分钟，但如果您走大三叶杨路，则需要更长的时间），然后步行到主街，这很有趣。很棒的氛围，很棒的餐厅，十一月还会下雪。这是一个非常漂亮的驾驶。”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;出去！&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;盐湖城周围有很多徒步和探索的机会，但请记住，这将是 11 月的第二周，因此某些地区可能会很冷，并且可能会下雪。出门前一定要检查天气。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;徒步旅行者会想要探索本指南，&lt;a href=&#34;https://www.visitutah.com/places-to-go/cities-and-towns/salt-lake-city/trails&#34;&gt;当地徒步旅行盐湖城&lt;/a&gt;，以下是附近&lt;a href=&#34;https://www.visitutah.com/articles/where-to-climb-near-salt-lake&#34;&gt;攀岩选项&lt;/a&gt;城市。当地人告诉我们，现在也许是游览&lt;a href=&#34;https://www.visitutah.com/articles/great-salt-lake-year-round&#34;&gt;​​大盐湖公园&lt;/a&gt;的好时机和&lt;a href=&#34;https://www.tripadvisor.com/Attraction_Review-g60922-d255182-Reviews-Big_Cottonwood_Canyon-Salt_Lake_City_Utah.html&#34;&gt;大三叶杨峡谷&lt;/a&gt;总是很受欢迎。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;不要忘记恐龙&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;犹他州是化石和恐龙爱好者的梦想之地，因此&lt;a href=&#34;https://nhmu.utah.edu/&#34;&gt;犹他州自然历史博物馆&lt;/a&gt;是必去之地。不要错过世界上最大的有角恐龙头骨收藏。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;您将参观硅坡&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;令人惊讶的是，从犹他州普罗沃到盐湖城的这段路被称为“硅坡”，被认为是高科技天堂。事实上，《华尔街日报》称盐湖城将在 2023 年拥有全美最热门的就业市场。研究公司 FDi Intelligence 预测，2023 年至 2033 年间，犹他州的科技就业增长百分比将最高。了解更多信息 &lt;a href =&#34;https://www.fdiintelligence.com/content/feature/salt-lake-city-becomes-new-tech-paradise-82783&#34;&gt;新的“科技天堂”&lt;/a&gt;，您将在 2024 年 KubeCon + CloudNativeCon 北美大会期间参观。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 10 Sep 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【What’s new in CRI-O 1.31】CRI-O 1.31 的新增内容</title>
      <link>https://www.cncf.io/blog/2024/09/12/whats-new-in-cri-o-1-31/</link>
      <description>【&lt;p&gt;&lt;em&gt;Project post originally published on &lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/content/en/blog/_posts/2024-09-18-cri-o-1.31.md&#34;&gt;Github &lt;/a&gt;by Sascha Grunert&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The CRI-O maintainers are happy and proud to announce that CRI-O&amp;nbsp;&lt;a href=&#34;https://github.com/cri-o/cri-o/releases/tag/v1.31.0&#34;&gt;v1.31.0&lt;/a&gt;&amp;nbsp;has been released! This brand new version contains a large list of cool new features, bug fixes and smaller enhancements. I would like to take the opportunity to guide you through CRI-O’s latest and greatest enhancements in the field of Kubernetes compliant container runtimes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;New features&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/content/en/blog/_posts/2024-09-18-cri-o-1.31.md#new-features&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The CRI-O community voted to use the OCI runtime&amp;nbsp;&lt;a href=&#34;https://github.com/containers/crun&#34;&gt;crun&lt;/a&gt;&amp;nbsp;as new default in replacement to&amp;nbsp;&lt;a href=&#34;https://github.com/opencontainers/runc&#34;&gt;runc&lt;/a&gt;. That’s actually not too new, because crun has been used as default runtime in the packages and static binary bundles for quite a while. The runtime offers an overall better performance and lower memory footprint than runc. It’s efficiency in terms of faster container start times and lower memory usage makes it a more optimized runtime for modern workloads, for example when it comes to edge use cases as well as running WebAssembly (Wasm) workloads.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CRI-O v1.31 also features support for fine-grained&amp;nbsp;&lt;code&gt;SupplementalGroups&lt;/code&gt;&amp;nbsp;(&lt;a href=&#34;https://kep.k8s.io/3619&#34;&gt;KEP-3619&lt;/a&gt;), which allow to control and track how supplemental groups are applied to a container process. If you like to learn more about the feature itself, then feel free to read through the&amp;nbsp;&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/blog/2024/08/22/fine-grained-supplementalgroups-control&#34;&gt;corresponding Kubernetes v1.31 blog post&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Beside that, the CRI-O maintainers also added support for the Kubernetes image volume source alpha feature (&lt;a href=&#34;https://kep.k8s.io/4639&#34;&gt;KEP-4639&lt;/a&gt;). This feature allows users to utilize OCI images and artifacts as custom volume source and mount them into containerized workloads. There is another&amp;nbsp;&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/blog/2024/08/16/kubernetes-1-31-image-volume-source&#34;&gt;Kubernetes v1.31 blog post available&lt;/a&gt;&amp;nbsp;which covers more details about the functionality and usage of the feature.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CRI-O now supports&amp;nbsp;&lt;a href=&#34;https://www.sigstore.dev/&#34;&gt;sigstore&lt;/a&gt;&amp;nbsp;(&lt;a href=&#34;https://github.com/sigstore/cosign&#34;&gt;cosign&lt;/a&gt;) signature verification for policies corresponding to a certain Kubernetes&amp;nbsp;&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/docs/concepts/overview/working-with-objects/namespaces&#34;&gt;namespace&lt;/a&gt;. This means, that policies in the (default) directory&amp;nbsp;&lt;code&gt;/etc/crio/policies/[NAMESPACE].json&lt;/code&gt;&amp;nbsp;will be validated for each pod of the corresponding&amp;nbsp;&lt;code&gt;NAMESPACE&lt;/code&gt;. This will also happen on container creation, which is a huge step forward in enforcing sigstore policies for a dedicated Kubernetes namespace in comparison to policies which only apply to the whole cluster itself.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Beside the support for bigger Kubernetes features, CRI-O v1.31 ships a bunch of cool smaller enhancements, for example:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Adding a&amp;nbsp;&lt;code&gt;--no-sync-log&lt;/code&gt;/&lt;code&gt;no_sync_log&lt;/code&gt;&amp;nbsp;option to disable&amp;nbsp;&lt;code&gt;fsync&lt;/code&gt;&amp;nbsp;on container log rotation and container exit. This can improve performance at the cost of potential data loss on machine crashes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Respecting the image pull timeout set by the RPC context to potentially abort an ongoing image pull.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Adding&amp;nbsp;&lt;code&gt;/dev/net/tun&lt;/code&gt;&amp;nbsp;to the default allowed devices, which helps users to run&amp;nbsp;&lt;a href=&#34;https://podman.io/&#34;&gt;Podman&lt;/a&gt;&amp;nbsp;inside containers.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Showing the current runtime configuration in the CRI-O logs for maximum transparency with respect to the loaded in-memory configuration.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Updating the type of checks the internal repair feature performs on CRI-O’s start-up following an unclean shutdown. This also features the new&amp;nbsp;&lt;code&gt;crio check&lt;/code&gt;&amp;nbsp;subcommand.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Updating the default pause image to v3.10 to stay up to date with Kubernetes v1.31.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Adding support for&amp;nbsp;&lt;a href=&#34;https://github.com/containers/conmon-rs&#34;&gt;conmon-rs&lt;/a&gt;&amp;nbsp;&amp;gt; v0.6.5, which is a replacement for the required container monitor&amp;nbsp;&lt;a href=&#34;https://github.com/containers/conmon&#34;&gt;conmon&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Moving the tracing profile and endpoint listener to use 127.0.0.1 as the new default to strengthen the security footprint of the project.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CRI-O now removes a container after it fails to start. This helps to prevent copies of it from piling up until it succeeds.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Deprecations and removals&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/content/en/blog/_posts/2024-09-18-cri-o-1.31.md#deprecations-and-removals&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It’s worth to mention some deprecations and removals in CRI-O v1.31 which may affect existing users:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;CRI-O v1.31 removed the&amp;nbsp;&lt;code&gt;registries&lt;/code&gt;&amp;nbsp;config in&amp;nbsp;&lt;code&gt;crio.image&lt;/code&gt;&amp;nbsp;as well as the&amp;nbsp;&lt;code&gt;--registry&lt;/code&gt;&amp;nbsp;CLI argument which have been already deprecated.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The device mapper storage driver is not supported any more.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The&amp;nbsp;&lt;code&gt;crio config --migrate-defaults&lt;/code&gt;&amp;nbsp;subcommand has been removed (deprecated in v1.28).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;And more&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/content/en/blog/_posts/2024-09-18-cri-o-1.31.md#and-more&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Beside features and removals, the CRI-O maintainers fixed bugs and addressed CVE’s to ensure CRI-O’s stability over the past releases. A full list of them can be found in the&amp;nbsp;&lt;a href=&#34;https://github.com/cri-o/cri-o/releases/tag/v1.31.0&#34;&gt;official release notes&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;I would like to take this opportunity to give a huge shoutout to all contributors and maintainers of the CRI-O for this awesome job!&lt;/strong&gt;&amp;nbsp;🙌&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you want to give CRI-O v1.31 a try, then feel free to head over to our official&amp;nbsp;&lt;a href=&#34;https://github.com/cri-o/packaging?tab=readme-ov-file#stable-versions&#34;&gt;packaging repository&lt;/a&gt;, which supports mostly all deb and rpm based distributions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you have any questions or feedback, feel free to reach out using the Kubernetes Slack&amp;nbsp;&lt;a href=&#34;https://kubernetes.slack.com/messages/CAZH62UR1&#34;&gt;#crio channel&lt;/a&gt;&amp;nbsp;or create an issue in the&amp;nbsp;&lt;a href=&#34;https://github.com/cri-o/cri-o/issues&#34;&gt;official repository&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;项目帖子最初发布于&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/content/en/blog/_posts/2024-09-18-cri-o- 1.31.md&#34;&gt;Github &lt;/a&gt;作者：Sascha Grunert&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CRI-O 维护者非常高兴并自豪地宣布 CRI-O &lt;a href=&#34;https://github.com/cri-o/cri-o/releases/tag/v1.31.0&#34;&gt;v1.0 已发布。 31.0&lt;/a&gt; 已发布！这个全新的版本包含大量很酷的新功能、错误修复和较小的增强功能。我想借此机会引导您了解 CRI-O 在 Kubernetes 兼容容器运行时领域的最新、最强大的增强功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;新功能&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/content/en/blog/_posts/2024-09-18-cri -o-1.31.md#new-features&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CRI-O 社区投票决定使用 OCI 运行时 &lt;a href=&#34;https://github.com/containers/crun&#34;&gt;crun&lt;/a&gt; 作为新的默认运行时来替代 &lt;a href=&#34;https: //github.com/opencontainers/runc&#34;&gt;runc&lt;/a&gt;。这实际上并不是什么新鲜事，因为 crun 已经被用作软件包和静态二进制包中的默认运行时相当长一段时间了。与 runc 相比，运行时提供了更好的整体性能和更低的内存占用。它在更快的容器启动时间和更低的内存使用方面的效率使其成为现代工作负载的更优化的运行时，例如，当涉及边缘用例以及运行 WebAssembly (Wasm) 工作负载时。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CRI-O v1.31 还支持细粒度 &lt;code&gt;SupplementalGroups&lt;/code&gt;（&lt;a href=&#34;https://kep.k8s.io/3619&#34;&gt;KEP-3619&lt;/a&gt; ），它允许控制和跟踪补充组如何应用于容器进程。如果您想了解有关该功能本身的更多信息，请随时阅读&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/blog/2024/08/22/fine-grained -supplementalgroups-control&#34;&gt;相应的 Kubernetes v1.31 博客文章&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除此之外，CRI-O 维护者还添加了对 Kubernetes 镜像卷源 alpha 功能 (&lt;a href=&#34;https://kep.k8s.io/4639&#34;&gt;KEP-4639&lt;/a&gt;) 的支持。此功能允许用户利用 OCI 映像和工件作为自定义卷源并将其安装到容器化工作负载中。还有另一个 &lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/blog/2024/08/16/kubernetes-1-31-image-volume-source&#34;&gt;Kubernetes v1.31 博客可用的帖子&lt;/a&gt;涵盖了有关该功能的功能和用法的更多详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CRI-O 现在支持&lt;a href=&#34;https://www.sigstore.dev/&#34;&gt;sigstore&lt;/a&gt;（&lt;a href=&#34;https://github.com/sigstore/cosign&#34;&gt;cosign &lt;/a&gt;) 对某个 Kubernetes 对应的策略进行签名验证 &lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/docs/concepts/overview/working-with-objects/namespaces&#34;&gt;命名空间&lt;/a&gt;。这意味着（默认）目录中的策略 &lt;code&gt;/etc/crio/policies/[NAMESPACE].json&lt;/code &gt; 将为相应 &lt;code&gt;NAMESPACE&lt;/code&gt; 的每个 pod 进行验证 这也会在容器创建时发生，与仅适用于专用 Kubernetes 命名空间的策略相比，这是在执行 sigstore 策略方面向前迈出的一大步。整个集群本身。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了支持更大的 Kubernetes 功能之外，CRI-O v1.31 还提供了一系列很酷的较小增强功能，例如：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;添加 &lt;code&gt;--no-sync-log&lt;/code&gt;/&lt;code&gt;no_sync_log&lt;/code&gt; 选项以在容器日志轮转和容器退出时禁用 &lt;code&gt;fsync&lt;/code&gt;。这可以提高性能，但代价是机器崩溃时可能会丢失数据。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;遵守 RPC 上下文设置的映像拉取超时，可能会中止正在进行的映像拉取。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将 &lt;code&gt;/dev/net/tun&lt;/code&gt; 添加到默认允许的设备，这有助于用户在容器内运行 &lt;a href=&#34;https://podman.io/&#34;&gt;Podman&lt;/a&gt; .&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在 CRI-O 日志中显示当前运行时配置，以实现加载的内存配置的最大透明度。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;更新了内部修复功能在非正常关闭后对 CRI-O 启动执行的检查类型。它还具有新的&lt;code&gt;crio check&lt;/code&gt;子命令。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将默认暂停映像更新至 v3.10，以便与 Kubernetes v1.31 保持同步。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;添加对 &lt;a href=&#34;https://github.com/containers/conmon-rs&#34;&gt;conmon-rs&lt;/a&gt; &gt; v0.6.5 的支持，它是所需容器监视器的替代品&lt;a href =&#34;https://github.com/containers/conmon&#34;&gt;常见&lt;/a&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;移动跟踪配置文件和端点侦听器以使用 127.0.0.1 作为新的默认值，以加强项目的安全足迹。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CRI-O 现在会在容器启动失败后将其删除。这有助于防止其副本堆积起来，直至成功。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;弃用和删除&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/content/en/blog/_posts/2024-09-18-cri-o-1.31.md#deprecations-and-移除&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;值得一提的是 CRI-O v1.31 中的一些弃用和删除，这可能会影响现有用户：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;CRI-O v1.31 删除了 &lt;code&gt;crio.image&lt;/code&gt; 中的 &lt;code&gt;registries&lt;/code&gt; 配置以及已删除的 &lt;code&gt;--registry&lt;/code&gt; CLI 参数已弃用。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;不再支持设备映射器存储驱动程序。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;crio config --migrate-defaults&lt;/code&gt; 子命令已被删除（在 v1.28 中已弃用）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;还有更多&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/saschagrunert/website/blob/83577c3ceafd28bcb82c39b2af07e7af4d3abb68/content/en/blog/_posts/2024-09-18-cri-o-1.31.md#and-more&#34; &gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了功能和删除之外，CRI-O 维护人员还修复了错误并解决了 CVE，以确保 CRI-O 在过去版本中的稳定性。您可以在&lt;a href=&#34;https://github.com/cri-o/cri-o/releases/tag/v1.31.0&#34;&gt;官方发行说明&lt;/a&gt;中找到完整的列表。&lt;/a&gt; p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;我想借此机会向 CRI-O 的所有贡献者和维护者表示衷心感谢，感谢他们所做的出色工作！&lt;/strong&gt; 🙌&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想尝试 CRI-O v1.31，请随时前往我们的官方网站&lt;a href=&#34;https://github.com/cri-o/packaging?tab=readme-ov -file#stable-versions&#34;&gt;打包存储库&lt;/a&gt;，支持几乎所有基于 deb 和 rpm 的发行版。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您有任何问题或反馈，请随时使用 Kubernetes Slack &lt;a href=&#34;https://kubernetes.slack.com/messages/CAZH62UR1&#34;&gt;#crio 频道&lt;/a&gt;与我们联系或创建一个&lt;a href=&#34;https://github.com/cri-o/cri-o/issues&#34;&gt;官方存储库&lt;/a&gt;中的问题。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 11 Sep 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to install plugins in Kubernetes and essential plugins to get started】如何在 Kubernetes 中安装插件以及入门必备插件</title>
      <link>https://www.cncf.io/blog/2024/09/10/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started/</link>
      <description>【&lt;p&gt;&lt;em&gt;Community post originally published on &lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started-355k&#34;&gt;Dev.to&lt;/a&gt; by Syed Asad Raza&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Kubernetes is a powerful container orchestration platform, but its capabilities can be significantly extended with plugins. Plugins provide additional functionality that can enhance the operational capabilities of your Kubernetes clusters, streamline workflows, and add features not available out of the box. In this guide, we’ll explore how to install plugins in Kubernetes and discuss some essential plugins to help you get started.&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started-355k#what-are-kubernetes-plugins&#34;&gt;&lt;/a&gt;What Are Kubernetes Plugins?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes plugins, or “kubectl plugins,” are tools that extend the functionality of the kubectl command-line tool. These plugins can be developed by the community or Kubernetes administrators to add specific features or automate tasks. They are designed to be seamlessly integrated into your existing Kubernetes setup, providing extra capabilities while maintaining the core functionality of Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started-355k#why-use-kubernetes-plugins&#34;&gt;&lt;/a&gt;Why Use Kubernetes Plugins?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Plugins can help you:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Automate repetitive tasks: Speed up your workflows by automating common actions.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Enhance security: Integrate security tools to better manage and monitor your clusters.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Simplify management: Make cluster management easier with tools that provide additional insights or simplify complex commands.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started-355k#installing-plugins-in-kubernetes&#34;&gt;&lt;/a&gt;Installing Plugins in Kubernetes&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To install plugins in Kubernetes, follow these steps:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started-355k#step-1-set-up-your-environment&#34;&gt;&lt;/a&gt;Step 1: Set Up Your Environment&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Ensure you have the following prerequisites:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;kubectl: The command-line tool for Kubernetes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;krew: A package manager for kubectl plugins.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started-355k#step-2-install-krew&#34;&gt;&lt;/a&gt;Step 2: Install Krew&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Krew is a plugin manager for kubectl that makes it easy to discover and install plugins. Follow these steps to install Krew:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Download Krew:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;(&#xA;  set -x; cd &#34;$(mktemp -d)&#34; &amp;amp;&amp;amp;&#xA;  OS=&#34;$(uname | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)&#34; &amp;amp;&amp;amp;&#xA;  ARCH=&#34;$(uname -m | sed &#39;s/x86_64/amd64/;s/arm.*/arm/;s/aarch64$/arm64/&#39;)&#34; &amp;amp;&amp;amp;&#xA;  KREW=&#34;krew-${OS}_${ARCH}&#34; &amp;amp;&amp;amp;&#xA;  curl -fsSLO &#34;https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz&#34; &amp;amp;&amp;amp;&#xA;  tar zxvf &#34;${KREW}.tar.gz&#34; &amp;amp;&amp;amp;&#xA;  ./&#34;${KREW}&#34; install krew&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Add Krew to your PATH:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;export PATH=&#34;${KREW_ROOT:-$HOME/.krew}/bin:$PATH&#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Verify the installation:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You should see a list of Krew commands if the installation was successful.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started-355k#step-3-install-plugins-using-krew&#34;&gt;&lt;/a&gt;Step 3: Install Plugins Using Krew&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With Krew installed, you can now search for and install plugins. Here’s how:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Search for plugins:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew search&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command lists all available plugins.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Install a plugin: For example, to install the kubectl neat plugin, which cleans up Kubernetes manifests to make them more readable, run:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew install neat&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Use the installed plugin: You can now use the plugin by prefixing the command with kubectl. For example:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl neat -f my-pod.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This command will clean up the my-pod.yaml file to make it more readable.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started-355k#essential-kubernetes-plugins-to-get-started&#34;&gt;&lt;/a&gt;Essential Kubernetes Plugins to Get Started&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here are some essential plugins that every Kubernetes user should consider installing:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;kubectl-neat Purpose: Simplifies Kubernetes manifests by removing clutter, such as managed fields and default values, making them easier to read and understand.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Installation:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew install neat&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Usage:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl get pod my-pod -o yaml | kubectl neat&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;kubectl-ctx and kubectl-ns Purpose: Quickly switch between different Kubernetes contexts and namespaces. These plugins help manage multiple clusters and namespaces efficiently.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Installation:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew install ctx&#xA;kubectl krew install ns&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Usage:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl ctx    # List all contexts&#xA;kubectl ctx my-context    # Switch to &#39;my-context&#39;&#xA;kubectl ns my-namespace   # Switch to &#39;my-namespace&#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;kubectl-who-can Purpose: Helps identify which users or service accounts have permission to perform specific actions in the cluster. This is particularly useful for debugging RBAC issues.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Installation:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew install who-can&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Usage:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl who-can create pods&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;kubectl-view-secret Purpose: It makes it easier to view Kubernetes secrets. The plugin decodes base64-encoded secrets in a human-readable format.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Installation:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew install view-secret&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Usage:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl view-secret my-secret&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;kubectl-replace-image Purpose: Allows for easy replacement of container images in a running Kubernetes Deployment. This is useful when you want to quickly change the image of a deployment without editing the manifest file.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Installation:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew install replace-image&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Usage:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl replace-image deployment/my-deployment container-name=new-image:tag&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started-355k#conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Plugins are a powerful way to extend Kubernetes’ functionality and streamline workflows. Using Krew to install and manage plugins, you can easily add new features to your Kubernetes toolkit and improve your cluster management capabilities. Start with the essential plugins mentioned in this guide and explore the extensive list of available plugins to find tools that best suit your needs.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;社区帖子最初发布于 &lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started- 355k&#34;&gt;Dev.to&lt;/a&gt; 作者：Syed Asad Raza&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Kubernetes 是一个强大的容器编排平台，但其功能可以通过插件显着扩展。插件提供了额外的功能，可以增强 Kubernetes 集群的操作能力、简化工作流程并添加开箱即用的功能。在本指南中，我们将探索如何在 Kubernetes 中安装插件，并讨论一些基本插件来帮助您入门。&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started -355k#what-are-kubernetes-plugins&#34;&gt;&lt;/a&gt;什么是 Kubernetes 插件？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 插件或“kubectl 插件”是扩展 kubectl 命令行工具功能的工具。这些插件可以由社区或 Kubernetes 管理员开发，以添加特定功能或自动执行任务。它们旨在无缝集成到您现有的 Kubernetes 设置中，提供额外的功能，同时保留 Kubernetes 的核心功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started -355k#why-use-kubernetes-plugins&#34;&gt;&lt;/a&gt;为什么使用 Kubernetes 插件？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;插件可以帮助您：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;自动执行重复性任务：通过自动执行常见操作来加快工作流程。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;增强安全性：集成安全工具以更好地管理和监控集群。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;简化管理：利用提供额外见解或简化复杂命令的工具，让集群管理变得更加轻松。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started -355k#installing-plugins-in-kubernetes&#34;&gt;&lt;/a&gt;在 Kubernetes 中安装插件&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要在 Kubernetes 中安装插件，请按照以下步骤操作：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started -355k#step-1-set-up-your-environment&#34;&gt;&lt;/a&gt;第 1 步：设置您的环境&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;确保您满足以下先决条件：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;kubectl：Kubernetes 命令行工具。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;krew：kubectl 插件的包管理器。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started -355k#step-2-install-krew&#34;&gt;&lt;/a&gt;第 2 步：安装 Krew&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Krew 是 kubectl 的插件管理器，可以轻松发现和安装插件。请按照以下步骤操作安装克鲁：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;下载克鲁：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;(&#xA;  设置-x； cd &#34;$(mktemp -d)&#34; &amp;&amp;&#xA;  OS =“$（uname | tr&#39;[：上：]&#39;&#39;[：下：]&#39;）”&amp;&amp;&#xA;  ARCH=&#34;$(uname -m | sed &#39;s/x86_64/amd64/;s/arm.*/arm/;s/aarch64$/arm64/&#39;)&#34; &amp;&amp;&#xA;  KREW=&#34;krew-${OS}_${ARCH}&#34; &amp;&amp;&#xA;  卷曲-fsSLO“https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz”&amp;&amp;&#xA;  tar zxvf &#34;${KREW}.tar.gz&#34; &amp;&amp;&#xA;  ./&#34;${KREW}&#34; 安装 krew&#xA;）&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;将 Krew 添加到您的路径：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;导出 PATH=&#34;${KREW_ROOT:-$HOME/.krew}/bin:$PATH&#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;验证安装：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果安装成功，您应该会看到 Krew 命令列表。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started -355k#step-3-install-plugins-using-krew&#34;&gt;&lt;/a&gt;第 3 步：使用 Krew 安装插件&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安装 Krew 后，您现在可以搜索并安装插件。方法如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;搜索插件：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew 搜索&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令列出所有可用的插件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;安装插件：例如，要安装 kubectl clean 插件（该插件可以清理 Kubernetes 清单以使其更具可读性），请运行：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew 安装整齐&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;使用已安装的插件：您现在可以通过在命令前加上 kubectl 前缀来使用该插件。例如：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl clean -f my-pod.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此命令将清理 my-pod.yaml 文件以使其更具可读性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started -355k#essential-kubernetes-plugins-to-get-started&#34;&gt;&lt;/a&gt;入门所需的基本 Kubernetes 插件&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下是每个 Kubernetes 用户都应该考虑安装的一些基本插件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;kubectl-neat 目的：通过消除混乱（例如托管字段和默认值）来简化 Kubernetes 清单，使它们更易于阅读和理解。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安装：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew 安装整齐&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl get pod my-pod -o yaml | kubectl 整洁&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;kubectl-ctx 和 kubectl-ns 用途：在不同的 Kubernetes 上下文和命名空间之间快速切换。这些插件有助于管理多个高效地使用多个集群和命名空间。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安装：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew 安装 ctx&#xA;kubectl krew 安装 ns&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl ctx # 列出所有上下文&#xA;kubectl ctx my-context # 切换到 &#39;my-context&#39;&#xA;kubectl ns my-namespace # 切换到 &#39;my-namespace&#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;kubectl-who-can 用途：帮助识别哪些用户或服务帐户有权在集群中执行特定操作。这对于调试 RBAC 问题特别有用。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安装：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew install who-can&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl 谁可以创建 pod&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;kubectl-view-secret 用途：让查看 Kubernetes 机密变得更加容易。该插件以人类可读的格式解码 Base64 编码的秘密。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安装：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew install view-secret&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl view-secret my-secret&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;kubectl-replace-image 用途：允许在正在运行的 Kubernetes 部署中轻松替换容器映像。当您想要快速更改部署的映像而不编辑清单文件时，这非常有用。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安装：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl krew 安装替换图像&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl 替换镜像部署/my-deployment 容器名称=新镜像：标签&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/how-to-install-plugins-in-kubernetes-and-essential-plugins-to-get-started -355k#conclusion&#34;&gt;&lt;/a&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;插件是扩展 Kubernetes 功能和简化工作流程的强大方式。使用 Krew 安装和管理插件，您可以轻松地向 Kubernetes 工具包添加新功能并提高集群管理能力。从本指南中提到的基本插件开始，探索可用插件的广泛列表，以找到最适合您需求的工具。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 09 Sep 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Deploy your first app on Kubernetes with GitOps】使用 GitOps 在 Kubernetes 上部署您的第一个应用程序</title>
      <link>https://www.cncf.io/blog/2024/09/09/deploy-your-first-app-on-kubernetes-with-gitops/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on the &lt;a href=&#34;https://taikun.cloud/deploy-your-first-app-on-kubernetes-with-gitops/&#34;&gt;Taikun blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Introduction&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the ever-evolving landscape of cloud-native technologies, managing deployments in Kubernetes clusters has become increasingly complex. Enter ArgoCD, a powerful tool that simplifies and automates the deployment process using the GitOps methodology. This blog post will dive deep into ArgoCD, exploring its features, benefits, and how to get started with it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;What is ArgoCD?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://b3662572.smushcdn.com/3662572/wp-content/uploads/2024/08/image-4.png?lossy=2&amp;amp;strip=1&amp;amp;webp=1&#34; alt=&#34;Argo readme docs&#34; class=&#34;wp-image-22850&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;source: Argo readme docs&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ArgoCD is an open-source, declarative, GitOps continuous delivery tool for Kubernetes. It automates the deployment of applications to Kubernetes clusters by monitoring Git repositories and syncing the desired state defined in Git with the actual state in the cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Key Features of ArgoCD:&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;GitOps Workflow&lt;/strong&gt;: ArgoCD follows the GitOps principle, where Git repositories are the single source of truth for defining the desired application state.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Automated Sync&lt;/strong&gt;: It continuously monitors your Git repositories and automatically applies changes to your Kubernetes clusters.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Multi-Cluster Management&lt;/strong&gt;: ArgoCD can manage applications across multiple Kubernetes clusters from a single interface.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Role-Based Access Control (RBAC)&lt;/strong&gt;: It provides fine-grained access controls for managing applications and clusters.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Web UI and CLI&lt;/strong&gt;: ArgoCD offers both a user-friendly web interface and a powerful command-line interface for managing deployments.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;SSO Integration&lt;/strong&gt;: It supports integration with various Single Sign-On (SSO) providers for enhanced security.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Audit Trail&lt;/strong&gt;: ArgoCD maintains a detailed history of all changes and deployments for auditing purposes.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Why Use ArgoCD?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ArgoCD offers several significant advantages for managing Kubernetes deployments:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;GitOps Workflow&lt;/strong&gt;&lt;br&gt;ArgoCD implements the GitOps methodology, using Git repositories as the single source of truth for declarative infrastructure and applications. This approach ensures that the entire system architecture is versioned, traceable, and reproducible.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Automated Synchronization&lt;/strong&gt;&lt;br&gt;ArgoCD continuously monitors configured Git repositories and automatically updates the Kubernetes cluster to match the desired state defined in the repository. This automation reduces manual intervention and potential human errors in the deployment process.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Multi-Cluster Management&lt;/strong&gt;&lt;br&gt;With ArgoCD, you can manage applications across multiple Kubernetes clusters from a single interface. This centralized control simplifies operations for organizations with complex, distributed infrastructures.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Enhanced Security&lt;/strong&gt;&lt;br&gt;ArgoCD provides robust security features, including:&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Role-Based Access Control (RBAC) for fine-grained permissions&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Single Sign-On (SSO) integration for centralized authentication&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Audit trails for comprehensive logging of all actions and changes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Kubernetes-Native Architecture&lt;/strong&gt;&lt;br&gt;Built specifically for Kubernetes, ArgoCD leverages native Kubernetes controllers and CRDs (Custom Resource Definitions). This deep integration ensures optimal performance and compatibility with the Kubernetes ecosystem.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Declarative Application Definitions&lt;/strong&gt;&lt;br&gt;ArgoCD supports multiple config management tools, including Kustomize, Helm, and Jsonnet. This flexibility allows teams to define applications declaratively, promoting consistency and reducing configuration drift.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Visualization and Monitoring&lt;/strong&gt;&lt;br&gt;The ArgoCD web UI provides real-time visibility into application deployments, including:&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Health status of applications and their components&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Sync status between Git repositories and cluster states&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Detailed deployment history and rollback capabilities&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;&lt;br&gt;ArgoCD’s architecture is designed to scale efficiently, supporting deployments ranging from small projects to large enterprise environments with multiple clusters and applications.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Rollback and Disaster Recovery&lt;/strong&gt;&lt;br&gt;ArgoCD maintains a complete history of application deployments, enabling quick rollbacks to previous known-good states in case of issues. This feature significantly reduces downtime and improves overall system reliability.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Customizable Sync Policies&lt;/strong&gt;&lt;br&gt;ArgoCD allows fine-tuning of sync behaviors through customizable sync policies. These policies can automate pruning of resources, self-healing of applications, and controlled propagation of changes across environments.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By leveraging these features, ArgoCD streamlines Kubernetes deployments, enhances collaboration between development and operations teams, and provides a robust foundation for implementing continuous delivery in cloud-native environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Getting Started with ArgoCD&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now that we understand what ArgoCD is and why it’s useful, let’s walk through the process of setting it up and deploying an application using the ArgoCD Helm chart.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Prerequisites&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Before we begin, ensure you have the following:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;A&amp;nbsp;&lt;a href=&#34;http://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;&amp;nbsp;cluster&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;http://helm.0/&#34;&gt;Helm&lt;/a&gt;&amp;nbsp;installed&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;kubectl configured to communicate with your cluster&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Step 1: Install ArgoCD&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’ll use the official ArgoCD Helm chart to install ArgoCD in our Kubernetes cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Add the ArgoCD Helm repository:&lt;br&gt;&lt;code&gt;helm repo add argo https://argoproj.github.io/argo-helm&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Update your Helm repositories:&lt;br&gt;&lt;code&gt;helm repo update&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Create a namespace for ArgoCD:&lt;br&gt;&lt;code&gt;kubectl create namespace argocd&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Install ArgoCD using Helm:&lt;br&gt;&lt;code&gt;helm install argocd argo/argo-cd --namespace argocd&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Step 2: Access the ArgoCD UI&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once ArgoCD is installed, you can access its web interface:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Port-forward the ArgoCD server service:&lt;br&gt;&lt;code&gt;kubectl port-forward svc/argocd-server -n argocd 8080:443&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Open a web browser and navigate to&amp;nbsp;&lt;code&gt;https://localhost:8080&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Log in using the default admin credentials:&lt;ul&gt;&lt;li&gt;Username: admin&lt;/li&gt;&lt;li&gt;Password: (retrieve using the command below)&lt;/li&gt;&lt;/ul&gt;&lt;code&gt;kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=&#34;{.data.password}&#34; | base64 -d&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Step 3: Deploy an Application with ArgoCD&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://b3662572.smushcdn.com/3662572/wp-content/uploads/2024/08/image-5.png?lossy=2&amp;amp;strip=1&amp;amp;webp=1&#34; alt=&#34;let&#39;s get stuff deployed!&#34; class=&#34;wp-image-22852&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now that we have ArgoCD set up, let’s deploy a sample application:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;In the ArgoCD UI, click on “New App”&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://b3662572.smushcdn.com/3662572/wp-content/uploads/2024/08/image-7-1024x327.png?lossy=2&amp;amp;strip=1&amp;amp;webp=1&#34; alt=&#34;Argo UI&#34; class=&#34;wp-image-22854&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Fill in the application details:&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Application Name: sample-app&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Project: default&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Sync Policy: Automatic&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Repository URL:&amp;nbsp;&lt;a href=&#34;https://github.com/argoproj/argocd-example-apps.git&#34;&gt;https://github.com/argoproj/argocd-example-apps.git&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Path: guestbook&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Cluster:&amp;nbsp;&lt;a href=&#34;https://kubernetes.default.svc/&#34;&gt;https://kubernetes.default.svc&lt;/a&gt;&amp;nbsp;(in-cluster)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Namespace: default&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Click “Create” to deploy the application&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ArgoCD will now sync the application from the Git repository to your Kubernetes cluster. You can monitor the deployment progress in the ArgoCD UI.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ArgoCD simplifies Kubernetes deployments by leveraging GitOps principles. It provides a powerful set of tools for managing applications across multiple clusters, ensuring consistency, and improving collaboration among team members. By following the steps outlined in this guide, you can start using ArgoCD to streamline your Kubernetes deployments and embrace the GitOps workflow.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As you become more familiar with ArgoCD, you can explore its advanced features, such as custom health checks, resource hooks, and integration with CI/CD pipelines. With its robust ecosystem and active community, ArgoCD is well-positioned to become an essential tool in your Kubernetes deployment strategy.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初发布于&lt;a href=&#34;https://taikun.cloud/deploy-your-first-app-on-kubernetes-with-gitops/&#34;&gt;Taikun博客&lt;/a&gt;&lt; /em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;简介&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在云原生技术不断发展的格局中，管理 Kubernetes 集群中的部署变得越来越复杂。 ArgoCD 是一款功能强大的工具，可以使用 GitOps 方法简化和自动化部署过程。这篇博文将深入探讨 ArgoCD，探索其功能、优点以及如何开始使用它。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;什么是 ArgoCD？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://b3662572.smushcdn.com/3662572/wp-content/uploads/2024/08/image-4.png? lossy=2&amp;strip=1&amp;webp=1&#34; alt=&#34;Argo 自述文档&#34; class=&#34;wp-image-22850&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;来源：Argo自述文件&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ArgoCD 是一款适用于 Kubernetes 的开源、声明式、GitOps 持续交付工具。它通过监控 Git 存储库并将 Git 中定义的所需状态与集群中的实际状态同步，自动将应用程序部署到 Kubernetes 集群。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;ArgoCD 的主要特点：&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;GitOps 工作流程&lt;/strong&gt;：ArgoCD 遵循 GitOps 原则，其中 Git 存储库是定义所需应用程序状态的唯一事实来源。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;自动同步&lt;/strong&gt;：它持续监控您的 Git 存储库并自动将更改应用到您的 Kubernetes 集群。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;多集群管理&lt;/strong&gt;：ArgoCD 可以通过单一界面跨多个 Kubernetes 集群管理应用程序。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;基于角色的访问控制 (RBAC)&lt;/strong&gt;：它提供细粒度的访问控制来管理应用程序和集群。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Web UI 和 CLI&lt;/strong&gt;：ArgoCD 提供用户友好的 Web 界面和强大的命令行界面来管理部署。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;SSO 集成&lt;/strong&gt;：它支持与各种单点登录 (SSO) 提供商集成以增强安全性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;审核跟踪&lt;/strong&gt;：ArgoCD 维护所有更改和部署的详细历史记录，以用于审核目的。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;为什么使用 ArgoCD？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ArgoCD 为管理 Kubernetes 部署提供了几个显着的优势：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;GitOps 工作流程&lt;/strong&gt;&lt;br&gt;ArgoCD 实现了 GitOps 方法，使用 Git 存储库作为声明性基础设施和应用程序的单一事实来源。这种方法确保了整个系统架构的版本化、可追溯性和可重现性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;自动同步&lt;/strong&gt;&lt;br&gt;ArgoCD 持续监控配置的 Git 存储库并自动更新 Kubernetes 集群以匹配存储库中定义的所需状态。这种自动化减少了部署过程中的人工干预和潜在的人为错误。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;多集群管理&lt;/strong&gt;&lt;br&gt;借助 ArgoCD，您可以从单个界面跨多个 Kubernetes 集群管理应用程序。这种集中控制简化了具有复杂分布式基础设施的组织的运营。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;增强的安全性&lt;/strong&gt;&lt;br&gt;ArgoCD 提供强大的安全功能，包括：&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;基于角色的访问控制 (RBAC)，实现细粒度权限&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;用于集中身份验证的单点登录 (SSO) 集成&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;审核跟踪以全面记录所有操作和更改&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Kubernetes 原生架构&lt;/strong&gt;&lt;br&gt;ArgoCD 专为 Kubernetes 构建，利用原生 Kubernetes 控制器和 CRD（自定义资源定义）。这种深度集成可确保最佳性能以及与 Kubernetes 生态系统的兼容性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;声明式应用程序定义&lt;/strong&gt;&lt;br&gt;ArgoCD 支持多种配置管理工具，包括 Kustomize、Helm 和 Jsonnet。这种灵活性允许团队以声明方式定义应用程序，从而提高一致性并减少配置偏差。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可视化和监控&lt;/strong&gt;&lt;br&gt;ArgoCD Web UI 提供应用程序部署的实时可见性，包括：&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;应用及其组件的运行状况&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Git 存储库和集群状态之间的同步状态&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;详细的部署历史记录和回滚功能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可扩展性&lt;/strong&gt;&lt;br&gt;ArgoCD 的架构旨在高效扩展，支持从小型项目到具有多个集群和应用程序的大型企业环境的部署。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;回滚和灾难恢复&lt;/strong&gt;&lt;br&gt;ArgoCD 维护应用程序部署的完整历史记录，以便在出现问题时快速回滚到之前已知的良好状态。此功能可显着减少停机时间并提高整体系统可靠性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可自定义的同步策略&lt;/strong&gt;&lt;br&gt;ArgoCD 允许通过可自定义的同步策略微调同步行为。这些策略可以自动修剪资源、自我修复应用程序以及控制跨环境的更改传播。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过利用这些功能，ArgoCD 简化了 Kubernetes 部署，增强了开发和运营团队之间的协作，并为在云原生环境中实现持续交付提供了坚实的基础。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;ArgoCD 入门&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在我们了解了 ArgoCD 是什么以及它为何有用，让我们逐步完成设置和部署应用程序的过程使用 ArgoCD Helm 图表。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;先决条件&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在我们开始之前，请确保您具备以下条件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; 集群&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;http://helm.0/&#34;&gt;Helm&lt;/a&gt;已安装&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;kubectl 配置为与您的集群通信&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;第 1 步：安装 ArgoCD&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们将使用官方 ArgoCD Helm 图表在 Kubernetes 集群中安装 ArgoCD。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;添加 ArgoCD Helm 存储库：&lt;br&gt;&lt;code&gt;helm repo add argo https://argoproj.github.io/argo-helm&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;更新您的 Helm 存储库：&lt;br&gt;&lt;code&gt;helm 存储库更新&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;为 ArgoCD 创建命名空间：&lt;br&gt;&lt;code&gt;kubectl create namespace argocd&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用 Helm 安装 ArgoCD：&lt;br&gt;&lt;code&gt;helm install argocd argo/argo-cd --namespace argocd&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;第 2 步：访问 ArgoCD UI&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;安装 ArgoCD 后，您可以访问其 Web 界面：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;端口转发 ArgoCD 服务器服务：&lt;br&gt;&lt;code&gt;kubectl port-forward svc/argocd-server -n argocd 8080:443&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;打开网络浏览器并导航至&lt;code&gt;https://localhost:8080&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用默认管理员凭据登录：&lt;ul&gt;&lt;li&gt;用户名：admin&lt;/li&gt;&lt;li&gt;密码：（使用以下命令检索）&lt;/li&gt;&lt;/ul&gt;&lt;code&gt;kubectl -n argocd 获取秘密 argocd-initial-admin-secret -o jsonpath=&#34;{.data.password}&#34; | base64 -d&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;第 3 步：使用 ArgoCD 部署应用程序&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://b3662572.smushcdn.com/3662572/wp-content/uploads/2024/08/image-5.png? lossy=2&amp;strip=1&amp;webp=1&#34; alt=&#34;让我们部署一些东西！&#34;类=“wp-image-22852”referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在我们已经设置了 ArgoCD，让我们部署一个示例应用程序：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;在 ArgoCD UI 中，点击“新应用程序”&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://b3662572.smushcdn.com/3662572/wp-content/uploads/2024/08/image-7-1024x327。 png?lossy=2&amp;strip=1&amp;webp=1&#34; alt=&#34;Argo UI&#34; class=&#34;wp-image-22854&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;填写申请详细信息：&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;应用程序名称：sample-app&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;项目：默认&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;同步策略：自动&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;存储库网址：&lt;a href=&#34;https://github.com/argoproj/argocd-example-apps.git&#34;&gt;https://github.com/argoproj/argocd-example-apps.git&lt;/a &gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;路径：留言簿&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;集群：&lt;a href=&#34;https://kubernetes.default.svc/&#34;&gt;https://kubernetes.default.svc&lt;/a&gt;（集群内）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;命名空间：默认&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;点击“创建”部署应用程序&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ArgoCD 现在将同步应用程序从 Git 存储库到 Kubernetes 集群。您可以在 ArgoCD UI 中监控部署进度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ArgoCD 利用 GitOps 原则简化 Kubernetes 部署。它提供了一组强大的工具，用于管理跨多个集群的应用程序、确保一致性并改善团队成员之间的协作。通过遵循本指南中概述的步骤，您可以开始使用 ArgoCD 来简化 Kubernetes 部署并采用 GitOps 工作流程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着您对 ArgoCD 越来越熟悉，您可以探索其高级功能，例如自定义运行状况检查、资源挂钩以及与 CI/CD 管道的集成。凭借其强大的生态系统和活跃的社区，ArgoCD 完全有能力成为 Kubernetes 部署策略中的重要工具。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 08 Sep 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kubestronaut in Orbit: Daiki Takasao】在轨道上的 Kubetronaut：高佐大树</title>
      <link>https://www.cncf.io/blog/2024/09/10/kubestronaut-in-orbit-daiki-takasao/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1800&#34; height=&#34;945&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9.jpg&#34; alt=&#34;Daiki Takasao &#34; class=&#34;wp-image-117284&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-300x158.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-1024x538.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-1552x816.jpg 1552w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-900x473.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-381x200.jpg 381w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-590x310.jpg 590w, https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-1180x620.jpg 1180w&#34; sizes=&#34;(max-width: 1800px) 100vw, 1800px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Get to know Daiki&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This week’s Kubestronaut in Orbit, Daiki Takasao, is a Japanese IT infrastructure engineer at NRI. He works with CNCF technologies to build financial IT systems and has been using Kubernetes, Linkerd, and Prometheus since 2021&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’d like to be a Kubestronaut like Daiki, get more details on the &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;CNCF Kubestronaut&lt;/a&gt; page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;When did you get started with Kubernetes–what was your first project?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In 2021, I was assigned to a project to build a microservices infrastructure for a Japanese financial institution using Kubernetes. That was when I started using Kubernetes for the first time. Before that, I had done some research on Kubernetes for our own R&amp;amp;D, but this project was the first time I started using Kubernetes in earnest.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In addition to Kubernetes, this project used many other CNCF technologies such as Linkerd and Prometheus. It was very difficult to learn these technologies and design the architecture, but the system is still running stably and I now have a lot of confidence in the high quality of Kubernetes and CNCF technologies.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What are the primary CNCF projects you work on or use today?&amp;nbsp; What projects have you enjoyed the most in your career?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here are some of the CNCF projects that I have used:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;– &lt;a href=&#34;https://github.com/Kubernetes&#34;&gt;Kubernetes&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;–&lt;a href=&#34;https://github.com/linkerd&#34;&gt; Linkerd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;–&lt;a href=&#34;https://github.com/prometheus&#34;&gt; Prometheus&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;– &lt;a href=&#34;https://github.com/fluent&#34;&gt;Fluentd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;– &lt;a href=&#34;https://github.com/gRPC&#34;&gt;gRPC&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;– &lt;a href=&#34;https://github.com/keycloak&#34;&gt;Keycloak&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;– &lt;a href=&#34;https://github.com/open-policy-agent/gatekeeper&#34;&gt;OPA/Gatekeeper&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The most enjoyable project is Kubernetes. There are so many components that I had a hard time understanding at first, but now that I have a better understanding of it, the scalability of Kubernetes really amazes me.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Prometheus is another project that I have a lot of fondness for. When I learned that I could automatically monitor pods generated by service discovery, I was surprised at how different it was from the static monitoring I had been doing.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I’m also very attached to Linkerd. Linkerd automatically injects itself into application pods without having to prepare a special manifest, and it automatically handles mTLS and gRPC communications. I think it is a good OSS that configures a service mesh without any hassle.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How have the certs helped you in your career?&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Kubernetes certifications, &lt;a href=&#34;https://www.cncf.io/training/certification/cks/&#34;&gt;CKS&lt;/a&gt;, &lt;a href=&#34;https://www.cncf.io/training/certification/cka/&#34;&gt;CKA&lt;/a&gt;, and &lt;a href=&#34;https://www.cncf.io/training/certification/ckad/&#34;&gt;CKAD &lt;/a&gt;are hands-on exams. Therefore, studying for the certification requires not only theoretical study, but also hands-on learning. Through the certification, you will acquire not only the knowledge of Kubernetes, but also the basic skills to build and troubleshoot application environments on Kubernetes by actually doing the work. It was very valuable for me.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The certification is also a way for me to prove my skills in Kubernetes. I believe that the certification was very effective in gaining more trust from my clients.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How has CNCF helped you or influenced your career?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Because Kubernetes and CNCF technologies are not dependent on a specific cloud vendor, I have been able to form a multi-cloud skill set by becoming familiar with these technologies.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Particularly in the Japanese financial industry, I believe that the introduction of Kubernetes and CNCF technology systems is in a transitional state. In this context, I believe that the fact that I was able to develop these skills was very effective in increasing the scarcity value of my skills as an IT infrastructure engineer.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What are some other books/sites/courses you recommend for people who want to work with k8s?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here are some websites and learning courses that have been very helpful to me in learning Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Websites&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/home/)&#34;&gt;Kubernetes official documentation&lt;/a&gt;: The official documentation is very easy to understand, I referred to it almost every day during my certification study period.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Online Learning Courses&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;KodeKloud: Hands-on courses on CKS, CKA, and CKAD were useful for studying for the exam. There are also courses on other CNCF projects such as Prometheus and ArgoCD, and the content is very comprehensive.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Killercoda: This site also has hands-on courses for CKS, CKA, and CKAD. There are several different perspectives on the issues from KodeKloud, so it is recommended to take both for certification.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What do you do in your free time?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I enjoy going out with my family. I especially like to go camping with my family.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We have two daughters, ages 9 and 6, and I am thinking that as they get older, they may not want to go out with their father. Therefore I always want to go on many outings while I can.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What would you tell someone who is just starting their K8s certification journey? Any tips or tricks?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When I first started learning about Kubernetes, I was overwhelmed by the complexity of the many components and API objects that make up Kubernetes and the relationships between them. I believe this is why Kubernetes is often referred to as an OSS with a high learning cost.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;From there, I read the documentation and executed kubectl commands to repeatedly manipulate API objects. I think my understanding of Kubernetes has gradually increased.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In that sense, I think that studying for the Kubernetes certification is a very efficient way to learn Kubernetes skills. This is because the CKS, CKA, and CKAD are hands-on exams and require repeated hands-on Kubernetes operation to achieve certification.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Besides, Kubernetes has a very fast evolutionary speed in addition to the many learning elements. It is important to be prepared to learn Kubernetes in a steady and continuous manner without being in a hurry. Otherwise, you will lose heart and will not be able to enjoy learning.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Today the Cloud native ecosystem is way more than Kubernetes.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Do you plan to get other cloud native certifications from the CNCF?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I am currently interested in the following certifications from CNCF. I have already applied for PCA and am currently studying for the certification. I have also recently become interested in Cilium and would like to focus my studies on acquiring certifications with an eye toward future system implementations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/training/certification/pca/&#34;&gt;Prometheus Certified Associate (PCA&lt;/a&gt;)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/training/certification/capa/&#34;&gt;Certified Argo Project Associate (CAPA)&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/training/certification/cca/&#34;&gt;Cilium Certified Associate(CCA)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How did you get involved with cloud native and Kubernetes in general?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Previously, as an infrastructure engineer, I designed and maintained infrastructure for a number of mission-critical systems. Then I had the opportunity to design and maintain infrastructure using Kubernetes and other cloud-native technologies.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At first, I was very puzzled by the big change in the way of thinking about infrastructure. In the past, infrastructure design usually involved carefully designing and taking care of each server individually. The cloud-native infrastructure is constantly in flux, and the software automatically tracks and repairs these changes. This requires a more holistic approach to management than managing each individual server separately.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I would like to continue to educate Japanese engineers about the fundamental differences in the way of thinking when building cloud-native systems and the great benefits that can be gained from such systems. There are still many Japanese systems with legacy architectures. I would like to contribute to improving the productivity of Japanese companies by promoting the shift to cloud-native systems.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In addition, the progress of CNCF technologies, especially Kubernetes, is very fast, and it is very difficult to keep up with them. However, it is always an interesting task that stimulates my curiosity. I would like to continue to actively introduce these latest technologies to Japanese companies and develop their systems.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Some final thoughts&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As other Kubestronauts have said, Kubernetes is an OSS that honestly takes time to learn. There are many elements that make up a Kubernetes cluster and many API resources that can be created on top of it. In addition, you can create your own API resources with Custom Resource Definitions, and the Kubernetes ecosystem is endless with these resources.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;However, there is a huge benefit to learning these resources in acquiring portable skills that are applicable across multiple clouds, independent of a specific cloud vendor.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are no shortcuts to learning Kubernetes. I believe that by continuing to learn steadily while operating a Kubernetes cluster, you will gradually increase your understanding and develop the skills to design system architectures using Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I really love CNCF technology centered on Kubernetes, and I would like to continue to study it diligently. I hope this article will interest some of you in Kubernetes and CNCF technology. Let’s enjoy our voyage into the Kubernetes ocean together!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1800”高度=“945”src=“https://www.cncf.io/ wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9.jpg&#34; alt=&#34;Daiki Takasao&#34; class=&#34;wp-image-117284&#34; srcset=&#34;https://www.cncf.io/wp-内容/uploads/2024/09/Kubestronaut-in-Orbit-9.jpg 1800w，https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-300x158.jpg 300w，https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-1024x538.jpg 1024w，https://www.cncf.io/wp-content/uploads /2024/09/Kubestronaut-in-Orbit-9-768x403.jpg 768w，https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-194x102.jpg 194w ，https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-388x204.jpg 388w，https://www.cncf.io/wp-content/uploads/ 2024/09/Kubestronaut-in-Orbit-9-776x408.jpg 776w，https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-1552x816.jpg 1552w， https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-900x473.jpg 900w，https://www.cncf.io/wp-content/uploads/2024 /09/Kubestronaut-in-Orbit-9-381x200.jpg 381w，https://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-762x400.jpg 762w，https ://www.cncf.io/wp-content/uploads/2024/09/Kubestronaut-in-Orbit-9-590x310.jpg 590w，https://www.cncf.io/wp-content/uploads/2024/ 09/Kubestronaut-in-Orbit-9-1180x620.jpg 1180w“尺寸=”（最大宽度：1800px）100vw，1800px“referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;了解大辉&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本周 Orbit 的 Kubetronaut Daiki Takasao 是 NRI 的日本 IT 基础设施工程师。他使用 CNCF 技术构建金融 IT 系统，并自 2021 年以来一直使用 Kubernetes、Linkerd 和 Prometheus&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想成为像 Daiki 这样的 Kubetronaut，请在 &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;CNCF Kubestronaut&lt;/a&gt; 页面获取更多详细信息。&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您什么时候开始使用 Kubernetes - 您的第一个项目是什么？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2021 年，我被分配到一个项目，使用 Kubernetes 为一家日本金融机构构建微服务基础设施。那是我第一次开始使用 Kubernetes。在此之前，我为了自己的研发对 Kubernetes 做了一些研究，但这个项目是我第一次真正开始使用 Kubernetes。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了 Kubernetes 之外，这个项目还使用了许多其他 CNCF 技术，例如 Linkerd 和 Prometheus。学习这些技术和设计架构非常困难，但系统仍然稳定运行，我现在对 Kubernetes 和 CNCF 技术的高质量充满信心。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您现在从事或使用的主要 CNCF 项目是什么？  在您的职业生涯中，您最喜欢哪些项目？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下是我使用过的一些 CNCF 项目：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;             &amp;nbsp； – &lt;a href=&#34;https://github.com/Kubernetes&#34;&gt;Kubernetes&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;               –&lt;a href=&#34;https://github.com/linkerd&#34;&gt;Linkerd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;               –&lt;a href=&#34;https://github.com/prometheus&#34;&gt;普罗米修斯&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;               – &lt;a href=&#34;https://github.com/fluent&#34;&gt;Fluentd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;               – &lt;a href=&#34;https://github.com/gRPC&#34;&gt;gRPC&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;               – &lt;a href=&#34;https://github.com/keycloak&#34;&gt;Keycloak&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;               – &lt;a href=&#34;https://github.com/open-policy-agent/gatekeeper&#34;&gt;OPA/Gatekeeper&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最令人愉快的项目是 Kubernetes。组件太多，一开始我很难理解，但现在有了更多的了解，Kubernetes 的可扩展性确实让我惊叹不已。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Prometheus 是另一个我非常喜欢的项目。当我得知我可以自动监控服务发现生成的 Pod 时，我很惊讶它与我一直在做的静态监控有多么不同。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我也非常喜欢 Linkerd。 Linkerd 会自动将自身注入到应用程序 pod 中，而无需准备特殊的清单，并且它会自动处理 mTLS 和 gRPC 通信。我认为这是一个很好的 OSS，可以轻松配置服务网格。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;这些证书对您的职业生涯有何帮助？ &lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 认证，&lt;a href=&#34;https://www.cncf.io/training/certification/cks/&#34;&gt;CKS&lt;/a&gt;，&lt;a href=&#34;https://www.cncf.io /training/certification/cka/&#34;&gt;CKA&lt;/a&gt;和&lt;a href=&#34;https://www.cncf.io/training/certification/ckad/&#34;&gt;CKAD&lt;/a&gt;是实践考试。因此，认证学习不仅需要理论学习，还需要实践学习。通过认证，您不仅能掌握 Kubernetes 的知识，还能通过实际操作掌握在 Kubernetes 上构建应用环境并排查问题的基本技能。这对我来说非常有价值。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该认证也是我证明自己在 Kubernetes 方面技能的一种方式。我相信该认证对于赢得客户的更多信任非常有效。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;CNCF 如何帮助您或影响您的职业生涯？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;由于 Kubernetes 和 CNCF 技术不依赖于特定的云供应商，因此我能够通过熟悉这些技术来形成多云技能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;特别是在日本金融行业，我相信Kuber的引入netes和CNCF技术体系正处于过渡状态。在这种背景下，我相信，我能够发展这些技能，对于提高我作为 IT 基础架构工程师的技能的稀缺价值非常有效。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您为想要使用 k8s 的人推荐了哪些其他书籍/网站/课程？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这里有一些对我学习 Kubernetes 有很大帮助的网站和学习课程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网站&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/home/)&#34;&gt;Kubernetes官方文档&lt;/a&gt;：官方文档非常通俗易懂，我认证的时候几乎每天都会参考它学习期间。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在线学习课程&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;KodeKloud：CKS、CKA 和 CKAD 的实践课程对于学习考试非常有用。还有Prometheus、ArgoCD等其他CNCF项目的课程，内容很全面。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Killercoda：该网站还提供 CKS、CKA 和 CKAD 实践课程。 KodeKloud 对这些问题有多种不同的观点，因此建议同时进行认证。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;你空闲时间做什么？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我喜欢和家人一起出去玩。我特别喜欢和家人一起去露营。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们有两个女儿，分别是 9 岁和 6 岁，我想随着她们年龄的增长，她们可能不想和父亲一起出去。因此，只要有时间，我总是想多出去走走。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您会对刚刚开始 K8s 认证之旅的人说些什么？有什么提示或技巧吗？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当我第一次开始学习 Kubernetes 时，我对构成 Kubernetes 的众多组件和 API 对象以及它们之间的关系的复杂性感到不知所措。我相信这就是为什么Kubernetes经常被称为学习成本较高的OSS。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从那里，我阅读了文档并执行了 kubectl 命令来重复操作 API 对象。我想我对Kubernetes的了解逐渐增加了。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从这个意义上说，我认为学习 Kubernetes 认证是学习 Kubernetes 技能的一种非常有效的方式。这是因为CKS、CKA和CKAD都是实践考试，需要反复实践Kubernetes操作才能获得认证。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，Kubernetes除了有很多学习元素之外，还有非常快的进化速度。做好以稳定、持续的方式学习 Kubernetes 的准备，不要着急，这一点很重要。否则，你就会灰心丧气，无法享受学习的乐趣。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如今，云原生生态系统已不仅仅是 Kubernetes。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您是否计划获得 CNCF 的其他云原生认证？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我目前对 CNCF 的以下认证感兴趣。我有已经申请了 PCA，目前正在学习认证。我最近也对 Cilium 产生了兴趣，并希望将我的研究重点放在获得认证上，着眼于未来的系统实施。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt; &lt;a href=&#34;https://www.cncf.io/training/certification/pca/&#34;&gt;普罗米修斯认证助理 (PCA&lt;/a&gt;)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href=&#34;https://www.cncf.io/training/certification/capa/&#34;&gt;Argo 项目认证助理 (CAPA)&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt; &lt;a href=&#34;https://www.cncf.io/training/certification/cca/&#34;&gt;Cilium 认证助理 (CCA)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;您是如何涉足云原生和 Kubernetes 的？&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;之前，作为一名基础设施工程师，我为许多关键任务系统设计和维护基础设施。然后我有机会使用 Kubernetes 和其他云原生技术来设计和维护基础设施。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;起初，我对基础设施思维方式的巨大变化感到非常困惑。过去，基础设施设计通常涉及仔细设计和单独维护每台服务器。云原生基础设施不断变化，软件会自动跟踪和修复这些变化。这需要比单独管理每个单独的服务器更全面的管理方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我想继续教育日本工程师构建云原生系统时思维方式的根本差异以及从此类系统中可以获得的巨大好处。仍然有许多日本系统具有遗留架构。我希望通过促进向云原生系统的转变，为提高日本公司的生产力做出贡献。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，CNCF技术尤其是Kubernetes的进步非常快，想要跟上他们是非常困难的。然而，这总是一个有趣的任务，激发我的好奇心。我愿意继续积极向日本企业介绍这些最新技术并开发他们的系统。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;一些最后的想法&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;正如其他 Kubetronaut 所说，Kubernetes 是一个确实需要时间学习的 OSS。 Kubernetes 集群由许多元素组成，并且可以在其之上创建许多 API 资源。此外，您还可以使用自定义资源定义创建自己的 API 资源，并且 Kubernetes 生态系统拥有无穷无尽的这些资源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，学习这些资源对于获得适用于多个云、独立于特定云供应商的便携式技能有巨大的好处。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;学习 Kubernetes 没有捷径。相信通过在操作 Kubernetes 集群的过程中不断学习，你会逐渐加深对 Kubernetes 集群的理解，并掌握使用 Kubernetes 设计系统架构的技能。库伯内特斯。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我非常喜欢以 Kubernetes 为核心的 CNCF 技术，并愿意继续努力学习。我希望这篇文章能让你们中的一些人对 Kubernetes 和 CNCF 技术感兴趣。让我们一起畅游 Kubernetes 的海洋吧！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 09 Sep 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Enhancing Kubernetes security and flexibility with the CyberArk Conjur and ESO Integration】通过 Cyber​​Ark Conjur 和 ESO 集成增强 Kubernetes 安全性和灵活性</title>
      <link>https://www.cncf.io/blog/2024/09/12/enhancing-kubernetes-security-and-flexibility-with-the-cyberark-conjur-and-eso-integration/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on &lt;a href=&#34;https://developer.cyberark.com/blog/enhancing-kubernetes-security-and-flexibility-with-the-cyberark-conjur-and-eso-integration/&#34;&gt;CyberArk’s blog&lt;/a&gt; by Shlomo Heigh&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In today’s fast-paced world of DevOps and cloud-native applications, managing secrets securely is critical. CyberArk Conjur, a trusted solution for secrets management, has taken a significant step by integrating seamlessly with the External Secrets Operator (ESO). This collaboration brings together the best of both worlds: Conjur’s robust secret management capabilities and ESO’s flexibility in handling secrets across Kubernetes clusters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At CyberArk, we strive to provide tools that companies can use to keep their most sensitive information secure. We also do our best to ensure information can be accessed when needed and only by an authorized person or process. In some ways, that’s the more challenging part of secrets management, especially when considering all the “places” where processes may be running – in public, private or hybrid clouds; SaaS services; on-prem workloads; and many more. This is why the Conjur team provides several APIs and native integrations to allow applications to seamlessly retrieve the secrets they need just as they need them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With the massive growth of the cloud native ecosystem, particularly Kubernetes and its various flavors, such as OpenShift and Tanzu, one open source project has become a major player in handling this challenge – External Secrets Operator (ESO). ESO is an open source project under the&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cloud Native Computing Foundation (CNCF)&lt;/a&gt;, the same foundation that oversees Kubernetes’ development. ESO is popular because it’s a plug-and-play system that can be added to a Kubernetes cluster to handle the fetching of secrets from many secrets management systems and seamlessly provide them to workloads running in the cluster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;(Side note: There is another way to achieve similar results using the&amp;nbsp;&lt;a href=&#34;https://secrets-store-csi-driver.sigs.k8s.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Kubernetes Secrets Store CSI Driver&lt;/a&gt;, which&amp;nbsp;&lt;a href=&#34;https://github.com/cyberark/conjur-k8s-csi-provider&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Conjur&lt;/a&gt;&amp;nbsp;also supports. The pros and cons of each are out of the scope of this article. Still, the primary differences are that the CSI driver mounts secrets into pods, requires volumes and doesn’t use Kubernetes secrets, while ESO is at the cluster/namespace level and uses Kubernetes secrets.)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’re pleased to announce that we’ve recently worked with the ESO maintainers team to increase the support for fetching secrets from Conjur using ESO. In this post, we’ll walk you through setting up a Kubernetes environment with an application that uses secrets stored in Conjur and provided with ESO.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s jump right in!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Setting the stage&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;&lt;em&gt;: This walkthrough will be quite technical and have plenty of code. It’s intended for those already familiar with Kubernetes and shell scripts.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;A scripted demo is available at&amp;nbsp;&lt;/em&gt;&lt;a href=&#34;https://github.com/conjurdemos/Accelerator-K8s-External-Secrets/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;https://github.com/conjurdemos/Accelerator-K8s-External-Secrets/&lt;/em&gt;&lt;/a&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;&amp;nbsp;simplifying the process of creating a proof of concept without needing to delve into all the intricacies. This post goes into all the details for those who want to understand exactly what’s happening at each step.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this demo, we will use the distribution of Kubernetes included in Docker Desktop. You can enable it in the Settings screen, as seen here:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://developer.cyberark.com/wp-content/uploads/2024/08/docker-desktop.png&#34; alt=&#34;Docker Desktop&#34; class=&#34;wp-image-7787&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To illustrate using Conjur and ESO in a Kubernetes environment, we’ll deploy an application that relies on database connection details to run. We will then have ESO fetch those details from Conjur and inject them into Kubernetes Secrets, where the app can read them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We will use our Pet Store Demo app for the application. You can see the code at&amp;nbsp;&lt;a href=&#34;https://github.com/conjurdemos/pet-store-demo&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://github.com/conjurdemos/pet-store-demo&lt;/a&gt;, and its image is on DockerHub as&amp;nbsp;&lt;a href=&#34;https://hub.docker.com/r/cyberark/demo-app&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;cyberark/demo-app&lt;/a&gt;. This app requires four secrets as environment variables: DB_URL, DB_USERNAME, DB_PASSWORD, and DB_PLATFORM. We want to store these values in a secure location, so we’ll start by setting up Conjur as our secret store.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Setting up a Conjur Instance&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We can easily install an instance of Conjur OSS right in our Kubernetes cluster using the Conjur OSS&amp;nbsp;&lt;a href=&#34;https://github.com/cyberark/conjur-oss-helm-chart/tree/main/conjur-oss&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Helm charts&lt;/a&gt;. If you already have a Conjur instance, you can skip to the next section (&lt;em&gt;Configuring Conjur&lt;/em&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ CONJUR_NAMESPACE=conjur&#xA;$ kubectl create namespace &#34;$CONJUR_NAMESPACE&#34;&#xA;$ DATA_KEY=&#34;$(docker run --rm cyberark/conjur data-key generate)&#34;&#xA;$ helm repo add cyberark https://cyberark.github.io/helm-charts&#xA;$ helm install -n &#34;$CONJUR_NAMESPACE&#34; --set dataKey=&#34;$DATA_KEY&#34; --set authenticators=&#34;authn\,authn-jwt/eso&#34; conjur cyberark/conjur-oss&#xA;$ CONJUR_ACCOUNT=demo&#xA;$ POD_NAME=$(kubectl get pods --namespace &#34;$CONJUR_NAMESPACE&#34; \&#xA;            -l &#34;app=conjur-oss,release=conjur&#34; \&#xA;            -o jsonpath=&#34;{.items[0].metadata.name}&#34;)&#xA;# This will create an account and print the API key. Store this in a safe place.&#xA;$ kubectl exec --namespace $CONJUR_NAMESPACE \&#xA;              $POD_NAME \&#xA;              --container=conjur-oss \&#xA;              -- conjurctl account create $CONJUR_ACCOUNT | tail -1&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You now have an instance of Conjur running in your local Kubernetes cluster. To configure Conjur with the secrets the Pet Store Demo app will need, we must connect to it using the Conjur CLI. Since we’ve installed Conjur in Kubernetes, let’s go ahead and create a pod in the same namespace where we can run the CLI.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Save the following file as cli.yml:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  name: conjur-cli&#xA;  labels:&#xA;    app: conjur-cli&#xA;spec:&#xA;  replicas: 1&#xA;  selector:&#xA;    matchLabels:&#xA;      app: conjur-cli&#xA;  template:&#xA;    metadata:&#xA;      name: conjur-cli&#xA;      labels:&#xA;        app: conjur-cli&#xA;    spec:&#xA;      containers:&#xA;      - name: conjur-cli&#xA;        image: cyberark/conjur-cli:8&#xA;        command: [&#34;sleep&#34;]&#xA;        args: [&#34;infinity&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now run the following command to create the Conjur CLI deployment defined in the file:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl apply -f cli.yml -n $CONJUR_NAMESPACE&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, let’s get the name of the newly created CLI pod and log in to our Conjur instance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ CLI_POD_NAME=$(kubectl get pods --namespace &#34;$CONJUR_NAMESPACE&#34; -l &#34;app=conjur-cli&#34; -o jsonpath=&#34;{.items[0].metadata.name}&#34;)&#xA;$ CONJUR_URL=https://conjur-conjur-oss.$CONJUR_NAMESPACE.svc.cluster.local&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -ti -- conjur init -a $CONJUR_ACCOUNT -u $CONJUR_URL --self-signed&#xA;# Now login. When prompted for a password, paste in the API key returned from when you created the account above&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -ti -- conjur login -i admin&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We now have a pod running with the CLI and are logged into our Conjur instance as the administrator. We’re now ready to start creating policies and variables!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Configuring Conjur&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We need to configure Conjur to:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Store the secrets needed by the demo app.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Allow the External Secrets Operator to authenticate to Conjur.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Allow the External Secrets Operator to fetch the secrets for the demo app.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To avoid storing an API key to access Conjur, another secret to manage, we will use the Kubernetes native Service Account Tokens to allow ESO to authenticate to Conjur. Let’s start by creating a Conjur policy file that defines a JWT authenticator that ESO will use to authenticate. Create the following file and save it as authn-jwt.yml:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;- !policy&#xA;  id: conjur/authn-jwt/eso&#xA;  annotations:&#xA;    description: Configuration for AuthnJWT service&#xA;  body:&#xA;    - !webservice&#xA;&#xA;    # - !variable jwks-uri&#xA;    - !variable public-keys&#xA;    - !variable issuer&#xA;    - !variable token-app-property&#xA;    - !variable identity-path&#xA;    - !variable audience&#xA;&#xA;    # Group of applications that can authenticate using this JWT Authenticator&#xA;    - !group users&#xA;  &#xA;    - !permit&#xA;      role: !group users&#xA;      privilege: [ read, authenticate ]&#xA;      resource: !webservice&#xA;&#xA;    - !webservice status&#xA;   &#xA;    # Group of users who can check the status of the JWT Authenticator&#xA;    - !group operators&#xA;   &#xA;    - !permit&#xA;      role: !group operators&#xA;      privilege: [ read ]&#xA;      resource: !webservice status&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, create another file called authn-jwt-apps.yml. We’re going to use “demo-app” for the namespace name and “demo-app-sa” for the service account name:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;- !policy&#xA;  id: conjur/authn-jwt/eso/apps&#xA;  annotations:&#xA;    description: Identities permitted to authenticate with the AuthnJWT service&#xA;  body:&#xA;    - !group&#xA;&#xA;    - &amp;amp;hosts&#xA;      - !host&#xA;        id: system:serviceaccount:demo-app:demo-app-sa&#xA;        annotations:&#xA;          authn-jwt/eso/sub: system:serviceaccount:demo-app:demo-app-sa&#xA;&#xA;    - !grant&#xA;        role: !group&#xA;        members: *hosts&#xA;&#xA;- !grant&#xA;    role: !group conjur/authn-jwt/eso/users&#xA;    member: !group conjur/authn-jwt/eso/apps&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, create a third and final policy file that will define the secrets the application needs and grant ESO access. Save this one as secrets.yml:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;- !policy&#xA;  id: secrets&#xA;  body:&#xA;    - &amp;amp;variables&#xA;      - !variable db/url&#xA;      - !variable db/username&#xA;      - !variable db/password&#xA;      - !variable db/platform&#xA;&#xA;    - !group users&#xA;&#xA;    - !permit&#xA;      resources: *variables&#xA;      role: !group users&#xA;      privileges: [ read, execute ]&#xA;&#xA;- !grant&#xA;  role: !group secrets/users&#xA;  members:&#xA;    - !host conjur/authn-jwt/eso/apps/system:serviceaccount:demo-app:demo-app-sa&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We must now copy these files to the CLI pod and load them into Conjur. Assuming you’re using the Conjur instance we created in the previous step, the commands would be as follows:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl cp -n $CONJUR_NAMESPACE authn-jwt.yml $CLI_POD_NAME:/&#xA;$ kubectl cp -n $CONJUR_NAMESPACE authn-jwt-apps.yml $CLI_POD_NAME:/&#xA;$ kubectl cp -n $CONJUR_NAMESPACE secrets.yml $CLI_POD_NAME:/&#xA;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur policy load -b root -f authn-jwt.yml&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur policy load -b root -f authn-jwt-apps.yml&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur policy load -b root -f secrets.yml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, let’s populate the values of all those variables we just created. First we’ll do the ones necessary for the JWT authenticator. This will allow Conjur to verify that Kubernetes has issued the JWT presented by ESO.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;# Get the necessary JWT info from the Kubernetes API&#xA;$ ISSUER=&#34;$(kubectl get --raw /.well-known/openid-configuration | jq -r &#39;.issuer&#39;)&#34;&#xA;$ JWKS_URI=&#34;$(kubectl get --raw /.well-known/openid-configuration | jq -r &#39;.jwks_uri&#39;)&#34;&#xA;$ kubectl get --raw &#34;$JWKS_URI&#34; &amp;gt; jwks.json&#xA;$ kubectl cp -n $CONJUR_NAMESPACE jwks.json $CLI_POD_NAME:/&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur variable set -i &#34;conjur/authn-jwt/eso/token-app-property&#34; -v &#34;sub&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur variable set -i &#34;conjur/authn-jwt/eso/issuer&#34; -v &#34;$ISSUER&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur variable set -i &#34;conjur/authn-jwt/eso/public-keys&#34; -v &#34;{\&#34;type\&#34;:\&#34;jwks\&#34;, \&#34;value\&#34;:$(cat jwks.json)}&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur variable set -i &#34;conjur/authn-jwt/eso/identity-path&#34; -v &#34;conjur/authn-jwt/eso/apps&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur variable set -i &#34;conjur/authn-jwt/eso/audience&#34; -v &#34;https://conjur-conjur-oss.$CONJUR_NAMESPACE.svc.cluster.local&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Note: We need to make sure that the JWT authenticator is enabled in the Conjur configuration.&amp;nbsp;&lt;/em&gt;&lt;em&gt;(“Configuring Conjur”), we did this by providing the “authenticators” property in the `helm install` command. If you’re using a different Conjur instance, make sure you enable it by following the steps in “&lt;/em&gt;&lt;em&gt;Step 2:&amp;nbsp;&lt;/em&gt;&lt;em&gt;Allowlist the&amp;nbsp;&lt;/em&gt;&lt;em&gt;authenticators”&lt;/em&gt;&lt;em&gt;&amp;nbsp;section of the&amp;nbsp;&lt;/em&gt;&lt;a href=&#34;https://docs.cyberark.com/conjur-open-source/Latest/en/Content/Operations/Services/authentication-types.htm&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;documentation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;&amp;nbsp;(TL;DR: add “authn-jwt/eso” to the “&lt;/em&gt;&lt;em&gt;CONJUR_AUTHENTICATORS” environment variable on the Conjur container).&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We can now add the values for the demo app’s secrets. Later, we’ll use these same values to configure the database service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur variable set -i &#34;secrets/db/url&#34; -v &#34;postgresql://db.demo-app.svc.cluster.local:5432/demo-app&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur variable set -i &#34;secrets/db/username&#34; -v &#34;db-user&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur variable set -i &#34;secrets/db/password&#34; -v &#34;P0stgre5P@ss%&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur variable set -i &#34;secrets/db/platform&#34; -v &#34;postgres&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Installing ESO&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s install the ESO in our cluster to act as a broker to pull secrets from Conjur. You can use any version since v0.9.17, but by default, this will use the newest release.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ helm repo add external-secrets https://charts.external-secrets.io&#xA;$ helm install external-secrets external-secrets/external-secrets -n external-secrets --create-namespace&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We’ll need a Kubernetes namespace to put all of our demo app-related objects. Let’s create one now. This will allow us to use separate ESO stores if we want to provide secrets to a different app running in a different namespace. Remember, it’s always best to limit the access to secrets to the minimum number of processes. In this case, we only need them in the demo app’s namespace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl create namespace demo-app&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, let’s load some configuration, so ESO knows how to connect to Conjur using a Kubernetes service account token. Copy the following into an editor and save it as service-account.yml:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;---&#xA;apiVersion: v1&#xA;kind: ServiceAccount&#xA;metadata:&#xA;  name: demo-app-sa&#xA;  namespace: demo-app&#xA;---&#xA;apiVersion: v1&#xA;kind: Secret&#xA;type: kubernetes.io/service-account-token&#xA;metadata:&#xA;  name: demo-app-sa-secret&#xA;  namespace: demo-app&#xA;  annotations:&#xA;    kubernetes.io/service-account.name: &#34;demo-app-sa&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now we need to create a SecretStore that will tell ESO how to connect to Conjur using the Service Account Token “demo-app-sa” we created and gave access to the demo app’s secrets. But first, you’ll need to replace the value of the CA bundle with the CA cert used by Conjur since we’re using a self-signed certificate that ESO won’t know to trust. You can get the value by running:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl get secret -n conjur conjur-conjur-ssl-ca-cert -o jsonpath=&#34;{.data[&#39;tls\.crt&#39;]}&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now save the following into a “eso-jwt-provider.yml” file. Note that you’ll need to replace the URLs and other connection details if you’re using different settings.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;---&#xA;apiVersion: external-secrets.io/v1beta1&#xA;kind: SecretStore&#xA;metadata:&#xA;  name: conjur-jwt&#xA;  namespace: demo-app&#xA;spec:&#xA;  provider:&#xA;    conjur:&#xA;      url: https://conjur-conjur-oss.conjur.svc.cluster.local&#xA;      caBundle: # Paste output of the previous command here&#xA;      auth:&#xA;        jwt:&#xA;          account: demo&#xA;          serviceID: eso&#xA;          serviceAccountRef:&#xA;            name: demo-app-sa&#xA;            audiences:&#xA;              - https://conjur-conjur-oss.conjur.svc.cluster.local&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Load these manifest files into Kubernetes:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl apply -f service-account.yml&#xA;$ kubectl apply -f eso-jwt-provider.yml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now that we have the basic configuration for ESO set up let’s install our demo app.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The Demo Application&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Before creating the demo application, let’s create the database service it’ll connect to.&lt;br&gt;We’re using the same credentials that we populated in the Conjur variables for the demo app.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ helm repo add bitnami https://charts.bitnami.com/bitnami&#xA;$ helm install postgresql bitnami/postgresql -n demo-app --set &#34;auth.username=db-user&#34; --set &#34;auth.password=P0stgre5P@ss%&#34; --set &#34;auth.database=demo-app&#34; --set &#34;fullnameOverride=db&#34; --set &#34;tls.enabled=true&#34; --set &#34;tls.autoGenerated=true&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Save the following manifest to a file called “demo-app.yml”:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;---&#xA;apiVersion: v1&#xA;kind: Service&#xA;metadata:&#xA;  name: demo-app&#xA;  namespace: demo-app&#xA;  labels:&#xA;    app: demo-app&#xA;spec:&#xA;  ports:&#xA;  - protocol: TCP&#xA;    port: 8080&#xA;    targetPort: 8080&#xA;  selector:&#xA;    app: demo-app&#xA;  type: NodePort&#xA;---&#xA;apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  labels:&#xA;    app: demo-app&#xA;  name: demo-app&#xA;  namespace: demo-app&#xA;spec:&#xA;  replicas: 1&#xA;  selector:&#xA;    matchLabels:&#xA;      app: demo-app&#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        app: demo-app&#xA;    spec:&#xA;      serviceAccountName: demo-app-sa&#xA;      containers:&#xA;      - name: demo-app&#xA;        image: cyberark/demo-app:latest&#xA;        imagePullPolicy: IfNotPresent&#xA;        ports:&#xA;        - name: http&#xA;          containerPort: 8080&#xA;        readinessProbe:&#xA;          httpGet:&#xA;            path: /pets&#xA;            port: http&#xA;          initialDelaySeconds: 15&#xA;          timeoutSeconds: 5&#xA;        env:&#xA;          - name: DB_URL&#xA;            valueFrom:&#xA;              secretKeyRef:&#xA;                name: db-credentials&#xA;                key: url&#xA;          - name: DB_USERNAME&#xA;            valueFrom:&#xA;              secretKeyRef:&#xA;                name: db-credentials&#xA;                key: username&#xA;          - name: DB_PASSWORD&#xA;            valueFrom:&#xA;              secretKeyRef:&#xA;                name: db-credentials&#xA;                key: password&#xA;          - name: DB_PLATFORM&#xA;            valueFrom:&#xA;              secretKeyRef:&#xA;                name: db-credentials&#xA;                key: platform&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can see that this app will take its environment variables from Kubernetes secrets. But we haven’t created any yet! Let’s add configuration to ESO to instruct it to sync those secrets from Conjur into Kubernetes, where the app can reach them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Save the following as “external-secret.yml”:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;---&#xA;apiVersion: external-secrets.io/v1beta1&#xA;kind: ExternalSecret&#xA;metadata:&#xA;  name: external-secret&#xA;  namespace: demo-app&#xA;spec:&#xA;  # Optional: refresh the secret at an interval&#xA;  # refreshInterval: 10s&#xA;  secretStoreRef:&#xA;    name: conjur-jwt&#xA;    kind: SecretStore&#xA;  target:&#xA;    # The Kubernetes secret that will be created&#xA;    name: db-credentials&#xA;    creationPolicy: Owner&#xA;  data:&#xA;  # The keys in the Kubernetes secret that will be populated,&#xA;  # along with the path of the Conjur secret that will be used&#xA;  - secretKey: url&#xA;    remoteRef:&#xA;      key: secrets/db/url&#xA;  - secretKey: username&#xA;    remoteRef:&#xA;      key: secrets/db/username&#xA;  - secretKey: password&#xA;    remoteRef:&#xA;      key: secrets/db/password&#xA;  - secretKey: platform&#xA;    remoteRef:&#xA;      key: secrets/db/platform&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, for the moment of truth, let’s load these files into Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl apply -f external-secret.yml&#xA;$ kubectl apply -f demo-app.yml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If all goes well, you should be able to see a successful startup message in the demo app’s logs:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ DEMO_POD_NAME=$(kubectl get pods --namespace demo-app -l &#34;app=demo-app&#34; -o jsonpath=&#34;{.items[0].metadata.name}&#34;)&#xA;$ kubectl logs $DEMO_POD_NAME -n demo-app&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://developer.cyberark.com/wp-content/uploads/2024/08/spring-boot.png&#34; alt=&#34;Spring Boot&#34; class=&#34;wp-image-7796&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;This means that the app is successfully connecting to the database using the credentials stored in Conjur.&lt;br&gt;You can even verify that the app is working by deploying a pod containing ‘curl’ and running a test query to the app:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;---&#xA;apiVersion: v1&#xA;kind: Pod&#xA;metadata:&#xA;  name: curl&#xA;  labels:&#xA;    name: curl&#xA;spec:&#xA;  containers:&#xA;  - name: curl&#xA;    image: curlimages/curl:latest&#xA;    imagePullPolicy: Always&#xA;    command: [&#34;sh&#34;, &#34;-c&#34;, &#34;tail -f /dev/null&#34;]&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After applying that, run:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl exec curl -- curl -X POST -H &#39;Content-Type: application/json&#39; --data &#39;{&#34;name&#34;:&#34;Accelerator Alice&#34;}&#39; http://demo-app.demo-app.svc.cluster.local:8080/pet&#xA;$ kubectl exec curl -- curl http://demo-app.demo-app.svc.cluster.local:8080/pets&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It should successfully create a new “pet” in the first request and return it when you run the second. This illustrates that the app can perform database operations using the credentials stored and retrieved from Conjur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And that’s it! There are tons more options – for example, you can adjust your external-secret.yml spec to fetch several Conjur secrets by searching with a regex or matching on annotations, but for that, you’ll need to check out the documentation! Hopefully, this provides a helpful starting point, and you will now have a deep understanding of how the Conjur – ESO integration works.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’ve read to the end, thank you! You’re a champ 💪&lt;br&gt;Now, go secure your software!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-media-text is-stacked-on-mobile has-gray-200-background-color has-background&#34; style=&#34;grid-template-columns:23% auto&#34;&gt;&lt;figure class=&#34;wp-block-media-text__media&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://developer.cyberark.com/wp-content/uploads/2023/01/hs-shlomo-heigh.jpg&#34; alt=&#34;Shlomo headshot&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&lt;div class=&#34;wp-block-media-text__content&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developer.cyberark.com/blog/author/sheigh/&#34;&gt;Shlomo Heigh&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Shlomo is a senior software engineer at CyberArk working on Conjur Secrets Manager. He’s an open source and AppSec enthusiast, a member of the CNCF TAG Security and a contributor to multiple OWASP projects. In his free time, you can find him spending time with his wife and daughter, 3D printing, woodworking or hiking.&lt;/p&gt;&#xA;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初发布于 &lt;a href=&#34;https://developer.cyberark.com/blog/enhancing-kubernetes-security-and-flexibility-with-the-cyberark-conjur-and-eso-集成/&#34;&gt;Cyber​​Ark 博客&lt;/a&gt; 作者：Shlomo Heigh&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在当今快节奏的 DevOps 和云原生应用程序世界中，安全地管理机密至关重要。 Cyber​​Ark Conjur 是一种值得信赖的秘密管理解决方案，通过与外部秘密运营商 (ESO) 无缝集成，迈出了重要的一步。此次合作汇集了两方面的优势：Conjur 强大的秘密管理功能和 ESO 在跨 Kubernetes 集群处理秘密方面的灵活性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在 Cyber​​Ark，我们致力于提供可供公司使用的工具来确保其最敏感信息的安全。我们还尽力确保信息可以在需要时访问，并且只能由授权人员或流程访问。在某些方面，这是秘密管理中更具挑战性的部分，特别是在考虑流程可能运行的所有“位置”时——公共云、私有云或混合云； SaaS 服务；本地工作负载；还有更多。这就是为什么 Conjur 团队提供了多个 API 和本机集成，以允许应用程序在需要时无缝检索所需的机密。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着云原生生态系统的大规模增长，特别是 Kubernetes 及其各种风格（例如 OpenShift 和 Tanzu），一个开源项目已成为应对这一挑战的主要参与者——External Secrets Operator (ESO)。 ESO 是&lt;a href=&#34;https://www.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;云原生计算基金会 (CNCF)&lt;/a&gt; 下的一个开源项目，同样监督 Kubernetes 开发的基金会。 ESO 很受欢迎，因为它是一个即插即用系统，可以添加到 Kubernetes 集群中，以处理从许多秘密管理系统中获取秘密，并将它们无缝地提供给集群中运行的工作负载。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;（旁注：还有另一种方法可以使用 &lt;a href=&#34;https://secrets-store-csi-driver.sigs.k8s.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer 来实现类似的结果noopener&#34;&gt;Kubernetes Secrets Store CSI 驱动程序&lt;/a&gt;，&lt;a href=&#34;https://github.com/cyberark/conjur-k8s-csi-provider&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Conjur &lt;/a&gt; 也支持，但它们的优缺点超出了本文的范围，但主要区别在于 CSI 驱动程序将机密安装到 Pod 中，需要卷并且不使用 Kubernetes 机密。在集群/命名空间级别并使用 Kubernetes 机密。）&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们很高兴地宣布，我们最近与 ESO 维护团队合作，增加了对使用 ESO 从 Conjur 获取机密的支持。在这篇文章中，我们将引导您完成通过使用存储在 Conjur 中并由 ESO 提供的机密的应用程序设置 Kubernetes 环境。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们开始吧！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;搭建舞台&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;&lt;em&gt;注意&lt;/em&gt;&lt;em&gt;：本演练非常技术性，并且包含大量代码。它适用于那些已经熟悉 Kubernetes 和 shell 脚本的人。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;脚本演示位于&lt;/em&gt;&lt;a href=&#34;https://github.com/conjurdemos/Accelerator-K8s-External-Secrets/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener &#34;&gt;&lt;em&gt;https://github.com/conjurdemos/Accelerator-K8s-External-Secrets/&lt;/em&gt;&lt;/a&gt;&lt;em&gt;，&lt;/em&gt;&lt;em&gt; 简化创建证明的过程无需深入研究所有复杂的概念。这篇文章为那些想要准确了解每一步发生的事情的人提供了所有详细信息。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在本演示中，我们将使用 Docker Desktop 中包含的 Kubernetes 发行版。您可以在“设置”屏幕中启用它，如下所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-imagealigncenter&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://developer.cyberark.com/wp-content/uploads/2024/08/docker-desktop.png&#34; alt =&#34;Docker Desktop&#34; class=&#34;wp-image-7787&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了说明在 Kubernetes 环境中使用 Conjur 和 ESO，我们将部署一个依赖数据库连接详细信息来运行的应用程序。然后，我们将让 ESO 从 Conjur 获取这些详细信息，并将它们注入 Kubernetes Secrets，应用程序可以在其中读取它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们将使用我们的 Pet Store 演示应用程序作为该应用程序。您可以在 &lt;a href=&#34;https://github.com/conjurdemos/pet-store-demo&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://github.com/conjurdemos/pet 查看代码-store-demo&lt;/a&gt;，其镜像在 DockerHub 上为 &lt;a href=&#34;https://hub.docker.com/r/cyberark/demo-app&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34; &gt;cyberark/演示应用程序&lt;/a&gt;。此应用程序需要四个密钥作为环境变量：DB_URL、DB_USERNAME、DB_PASSWORD 和 DB_PLATFORM。我们希望将这些值存储在安全的位置，因此我们首先将 Conjur 设置为我们的秘密存储。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;设置 Conjur 实例&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们可以使用 Conjur OSS 在 Kubernetes 集群中轻松安装 Conjur OSS 实例 &lt;a href=&#34;https://github.com/cyberark/conjur-oss-helm-chart/tree/main/conjur- oss&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Helm 图表&lt;/a&gt;。如果您已经有 Conjur 实例，则可以跳到下一部分（&lt;em&gt;配置 Conjur&lt;/em&gt;）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ CONJUR_NAMESPACE=conjur&#xA;$ kubectl 创建命名空间“$CONJUR_NAMESPACE”&#xA;$ DATA_KEY =“$（docker run --rm cyberark / conjur数据密钥生成）”&#xA;$ helm repo 添加 cyberark https://cyberark.github.io/helm-charts&#xA;$ helm install -n &#34;$CONJUR_NAMESPACE&#34; --set dataKey =“$ DATA_KEY”--设置验证器=“authn \，authn-jwt / eso” conjur cyberark / conjur-oss&#xA;$ CONJUR_ACCOUNT=演示&#xA;$ POD_NAME=$(kubectl get pods --namespace &#34;$CONJUR_NAMESPACE&#34; \&#xA;            -l &#34;app=conjur-oss,release=conjur&#34; \&#xA;            -o jsonpath=&#34;{.items[0].metadata.name}&#34;)&#xA;# 这将创建一个帐户并打印 API 密钥。将其存放在安全的地方。&#xA;$ kubectl exec --namespace $CONJUR_NAMESPACE \&#xA;              $POD_NAME \&#xA;              --container=conjur-oss \&#xA;              -- conjurctl 帐户创建 $CONJUR_ACCOUNT |尾部-1&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您现在已经在本地 Kubernetes 集群中运行了一个 Conjur 实例。要使用 Pet Store 演示应用程序所需的机密配置 Conjur，我们必须使用 Conjur CLI 连接到它。由于我们已经在 Kubernetes 中安装了 Conjur，因此我们可以在可以运行 CLI 的同一命名空间中创建一个 pod。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将以下文件保存为 cli.yml：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;api版本：apps/v1&#xA;种类：部署&#xA;元数据：&#xA;  名称： conjur-cli&#xA;  标签：&#xA;    应用程序：conjur-cli&#xA;规格：&#xA;  副本：1&#xA;  选择器：&#xA;    匹配标签：&#xA;      应用程序：conjur-cli&#xA;  模板：&#xA;    元数据：&#xA;      名称： conjur-cli&#xA;      标签：&#xA;        应用程序：conjur-cli&#xA;    规格：&#xA;      容器：&#xA;      - 名称：conjur-cli&#xA;        图片：cyberark/conjur-cli:8&#xA;        命令：[“睡眠”]&#xA;        参数：[“无穷大”]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在运行以下命令来创建文件中定义的 Conjur CLI 部署：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl apply -f cli.yml -n $CONJUR_NAMESPACE&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，让我们获取新创建的 CLI pod 的名称并登录到我们的 Conjur 实例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ CLI_POD_NAME=$(kubectl get pods --namespace &#34;$CONJUR_NAMESPACE&#34; -l &#34;app=conjur-cli&#34; -o jsonpath=&#34;{. items[0].metadata.name}&#34;)&#xA;$ CONJUR_URL=https://conjur-conjur-oss.$CONJUR_NAMESPACE.svc.cluster.local&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -ti -- conjur init -a $CONJUR_ACCOUNT -u $CONJUR_URL --自签名&#xA;# 现在登录。当提示输入密码时，粘贴您在上面创建帐户时返回的 API 密钥&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -ti -- conjur 登录 -i admin&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们现在有一个使用 CLI 运行的 pod，并以管理员身份登录到我们的 Conjur 实例。我们现在准备开始创建策略和变量！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;配置 Conjur&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们需要将 Conjur 配置为：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;存储演示应用所需的机密。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;允许外部机密操作员向 Conjur 进行身份验证。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;允许外部机密操作员获取演示应用的机密。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了避免存储 API 密钥来访问 Conjur（另一个需要管理的秘密），我们将使用 Kubernetes 原生服务帐户令牌来允许 ESO 对 Conjur 进行身份验证。让我们首先创建一个 Conjur 策略文件 that 定义了 ESO 将用来进行身份验证的 JWT 身份验证器。创建以下文件并将其另存为 authn-jwt.yml：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;- !policy&#xA;  id: conjur/authn-jwt/eso&#xA;  注释：&#xA;    描述：AuthnJWT 服务的配置&#xA;  身体：&#xA;    - !网络服务&#xA;&#xA;    # - !变量 jwks-uri&#xA;    - !可变公钥&#xA;    - !变量发行者&#xA;    - !变量令牌应用程序属性&#xA;    - !变量身份路径&#xA;    - !可变的受众&#xA;&#xA;    # 可以使用此 JWT 身份验证器进行身份验证的应用程序组&#xA;    - !组用户&#xA;  &#xA;    - ！允许&#xA;      角色：!组用户&#xA;      权限：[读取、验证]&#xA;      资源：!webservice&#xA;&#xA;    - !网络服务状态&#xA;   &#xA;    # 可以检查 JWT Authenticator 状态的用户组&#xA;    - !组运算符&#xA;   &#xA;    - ！允许&#xA;      角色：!组运算符&#xA;      特权：[阅读]&#xA;      资源：！webservice状态&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，创建另一个名为 authn-jwt-apps.yml 的文件。我们将使用“demo-app”作为命名空间名称，使用“demo-app-sa”作为服务帐户名称：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;- !policy&#xA;  id: conjur/authn-jwt/eso/apps&#xA;  注释：&#xA;    描述：允许使用 AuthnJWT 服务进行身份验证的身份&#xA;  身体：&#xA;    - ！团体&#xA;&#xA;    - 主机&#xA;      - ！主持人&#xA;        id: 系统:serviceaccount:demo-app:demo-app-sa&#xA;        注释：&#xA;          authn-jwt/eso/sub: 系统:serviceaccount:demo-app:demo-app-sa&#xA;&#xA;    - ！授予&#xA;        角色：!组&#xA;        成员：*主持人&#xA;&#xA;- ！授予&#xA;    角色：!group conjur/authn-jwt/eso/users&#xA;    成员：!group conjur/authn-jwt/eso/apps&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，创建第三个也是最后一个策略文件，该文件将定义应用程序所需的机密并授予 ESO 访问权限。将此保存为 Secrets.yml：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;- !policy&#xA;  id: 秘密&#xA;  身体：&#xA;    - &amp;变量&#xA;      - !变量数据库/url&#xA;      - !变量数据库/用户名&#xA;      - !变量数据库/密码&#xA;      - !变量数据库/平台&#xA;&#xA;    - !组用户&#xA;&#xA;    - ！允许&#xA;      资源：*变量&#xA;      角色：!组用户&#xA;      权限：[读取、执行]&#xA;&#xA;- ！授予&#xA;  角色：!组秘密/用户&#xA;  成员：&#xA;    - !host conjur/authn-jwt/eso/apps/system:serviceaccount:demo-app:demo-app-sa&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们现在必须将这些文件复制到 CLI pod 并将它们加载到 Conjur 中。假设您使用我们在上一步中创建的 Conjur 实例，命令如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl cp -n $CONJUR_NAMESPACE authn-jwt.yml $CLI_POD_NAME:/&#xA;$ kubectl cp -n $CONJUR_NAMESPACE authn-jwt-apps.yml $CLI_POD_NAME:/&#xA;$ kubectl cp -n $CONJUR_NAMESPACE Secrets.yml $CLI_POD_NAME:/&#xA;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 策略加载 -b root -f authn-jwt.yml&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 策略加载 -b root -f authn-jwt-apps.yml&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- 构造策略加载 -b root-f 秘密.yml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，让我们填充刚刚创建的所有变量的值。首先，我们将执行 JWT 身份验证器所需的操作。这将允许 Conjur 验证 Kubernetes 是否已颁发 ESO 提供的 JWT。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;# 从 Kubernetes API 获取必要的 JWT 信息&#xA;$ ISSUER =“$（kubectl get --raw /.well-known/openid-configuration | jq -r &#39;.issuer&#39;）”&#xA;$ JWKS_URI =“$（kubectl get --raw /.well-known/openid-configuration | jq -r &#39;.jwks_uri&#39;）”&#xA;$ kubectl get --raw &#34;$JWKS_URI&#34; &gt; jwks.json&#xA;$ kubectl cp -n $CONJUR_NAMESPACE jwks.json $CLI_POD_NAME:/&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 变量集 -i &#34;conjur/authn-jwt/eso/token-app-property&#34; -v &#34;sub&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 变量集 -i &#34;conjur/authn-jwt/eso/issuer&#34; -v &#34;$ISSUER&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 变量集 -i &#34;conjur/authn-jwt/eso/public-keys&#34; -v &#34;{\&#34;type\&#34;:\&#34;jwks\&#34;, \&#34;value\&#34; :$(cat jwks.json)}&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 变量集 -i &#34;conjur/authn-jwt/eso/identity-path&#34; -v &#34;conjur/authn-jwt/eso/apps&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 变量集 -i &#34;conjur/authn-jwt/eso/audience&#34; -v &#34;https://conjur-conjur-oss.$CONJUR_NAMESPACE.svc.cluster.local&#34;&lt; /代码&gt;&lt;/前&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;注意：我们需要确保在 Conjur 配置中启用 JWT 身份验证器。 &lt;/em&gt;&lt;em&gt;（“配置 Conjur”），我们通过在“helm install”命令中提供“authenticators”属性来完成此操作。如果您使用的是其他 Conjur 实例，请确保按照“&lt;/em&gt;&lt;em&gt;第 2 步：&lt;/em&gt;&lt;em&gt;将身份验证器列入白名单”&lt;中的步骤来启用它。 /em&gt;&lt;em&gt; 部分&lt;/em&gt;&lt;a href=&#34;https://docs.cyberark.com/conjur-open-source/Latest/en/Content/Operations/Services/authentication-types.htm&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;文档&lt;/em&gt;&lt;/a&gt;&lt;em&gt;（TL;DR：将“authn-jwt/eso”添加到“&lt;/em&gt;&lt;em&gt; CONJUR_AUTHENTICATORS”Conjur 容器上的环境变量）。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们现在可以添加演示应用程序的机密值。稍后，我们将使用这些相同的值来配置数据库服务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 变量集 -i &#34;secrets/db/url&#34; -v &#34;postgresql://db .demo-app.svc.cluster.local:5432/demo-app&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 变量集 -i &#34;secrets/db/username&#34; -v &#34;db-user&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 变量集 -i &#34;secrets/db/password&#34; -v &#34;P0stgre5P@ss%&#34;&#xA;$ kubectl exec -n $CONJUR_NAMESPACE $CLI_POD_NAME -- conjur 变量集 -i &#34;secrets/db/platform&#34; -v &#34;postgres&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;安装 ESO&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们在集群中安装 ESO，充当代理从 Conjur 获取机密。你可以使用 v0.9.17 以来的任何版本，但默认情况下，这将使用最新版本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ helm 存储库添加外部秘密 https://charts.external-secrets.io&#xA;$ helm install external-secrets external-secrets/external-secrets -n external-secrets --create-namespace&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们需要一个 Kubernetes 命名空间来放置所有与演示应用程序相关的对象。现在让我们创建一个。如果我们想向在不同命名空间中运行的不同应用程序提供机密，这将允许我们使用单独的 ESO 存储。请记住，最好将对机密的访问限制为最少的进程数。在本例中，我们只需要在演示应用程序的命名空间中使用它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl 创建命名空间 demo-app&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，让我们加载一些配置，以便 ESO 知道如何使用 Kubernetes 服务帐户令牌连接到 Conjur。将以下内容复制到编辑器中并将其另存为 service-account.yml：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;---&#xA;api版本：v1&#xA;种类：服务帐户&#xA;元数据：&#xA;  名称：demo-app-sa&#xA;  命名空间：demo-app&#xA;---&#xA;api版本：v1&#xA;种类：秘密&#xA;类型：kubernetes.io/service-account-token&#xA;元数据：&#xA;  名称：demo-app-sa-secret&#xA;  命名空间：demo-app&#xA;  注释：&#xA;    kubernetes.io/service-account.name：“demo-app-sa”&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在我们需要创建一个 SecretStore，它将告诉 ESO 如何使用我们创建的服务帐户令牌“demo-app-sa”连接到 Conjur，并授予对演示应用程序秘密的访问权限。但首先，您需要将 CA 捆绑包的值替换为 Conjur 使用的 CA 证书，因为我们使用的是 ESO 不知道信任的自签名证书。您可以通过运行获取该值：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl 获取秘密 -n conjur conjur-conjur-ssl-ca-cert -o jsonpath=&#34;{.data[&#39;tls\.crt&#39;] }&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在将以下内容保存到“eso-jwt-provider.yml”文件中。请注意，如果您使用不同的设置，则需要替换网址和其他连接详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;---&#xA;api版本：external-secrets.io/v1beta1&#xA;种类：秘密商店&#xA;元数据：&#xA;  名称： conjur-jwt&#xA;  命名空间：demo-app&#xA;规格：&#xA;  提供商：&#xA;    召唤：&#xA;      网址：https://conjur-conjur-oss.conjur.svc.cluster.local&#xA;      caBundle: # 将上一个命令的输出粘贴到此处&#xA;      授权：&#xA;        智威汤逊：&#xA;          账户：模拟账户&#xA;          服务ID：eso&#xA;          服务帐号参考：&#xA;            名称：demo-app-sa&#xA;            观众：&#xA;              - https://conjur-conjur-oss.conjur.svc.cluster.local&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将这些清单文件加载到 Kubernetes 中：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl apply -f service-account.yml&#xA;$ kubectl apply -f eso-jwt-provider.yml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在我们已经设置了 ESO 的基本配置，让我们安装我们的演示应用程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;演示应用程序&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;之前在创建演示应用程序之后，让我们创建它将连接到的数据库服务。&lt;br&gt;我们使用在演示应用程序的 Conjur 变量中填充的相同凭据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ helm 存储库添加 bitnami https://charts.bitnami.com/bitnami&#xA;$ helm install postgresql bitnami/postgresql -n demo-app --set &#34;auth.username=db-user&#34; --set &#34;auth.password=P0stgre5P@ss%&#34; --set &#34;auth.database=demo-app&#34; - -设置“fullnameOverride=db”--设置“tls.enabled=true”--设置“tls.autoGenerate=true”&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将以下清单保存到名为“demo-app.yml”的文件中：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;---&#xA;api版本：v1&#xA;种类： 服务&#xA;元数据：&#xA;  名称：演示应用程序&#xA;  命名空间：demo-app&#xA;  标签：&#xA;    应用程序：演示应用程序&#xA;规格：&#xA;  端口：&#xA;  - 协议：TCP&#xA;    端口：8080&#xA;    目标端口：8080&#xA;  选择器：&#xA;    应用程序：演示应用程序&#xA;  类型：节点端口&#xA;---&#xA;api版本：apps/v1&#xA;种类：部署&#xA;元数据：&#xA;  标签：&#xA;    应用程序：演示应用程序&#xA;  名称：演示应用程序&#xA;  命名空间：demo-app&#xA;规格：&#xA;  副本：1&#xA;  选择器：&#xA;    匹配标签：&#xA;      应用程序：演示应用程序&#xA;  模板：&#xA;    元数据：&#xA;      标签：&#xA;        应用程序：演示应用程序&#xA;    规格：&#xA;      服务帐户名称：demo-app-sa&#xA;      容器：&#xA;      - 名称：演示应用程序&#xA;        图片：cyberark/demo-app：最新&#xA;        imagePullPolicy：IfNotPresent&#xA;        端口：&#xA;        - 名称：http&#xA;          容器端口：8080&#xA;        准备情况探针：&#xA;          http获取：&#xA;            路径：/pets&#xA;            端口：http&#xA;          初始延迟秒数：15&#xA;          超时秒数：5&#xA;        环境：&#xA;          - 名称：DB_URL&#xA;            值来自：&#xA;              秘密密钥参考：&#xA;                名称： db-credentials&#xA;                关键：网址&#xA;          - 名称：DB_USERNAME&#xA;            值来自：&#xA;              秘密密钥参考：&#xA;                名称： db-credentials&#xA;                关键：用户名&#xA;          - 名称：DB_PASSWORD&#xA;            值来自：&#xA;              秘密密钥参考：&#xA;                名称： db-credentials&#xA;                密钥：密码&#xA;          - 名称：DB_PLATFORM&#xA;            值来自：&#xA;              秘密密钥参考：&#xA;                名称： db-credentials&#xA;                关键：平台&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以看到该应用程序将从 Kubernetes 机密中获取其环境变量。但我们还没有创建任何东西！让我们向 ESO 添加配置，指示它将这些机密从 Conjur 同步到 Kubernetes，应用程序可以在其中访问它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将以下内容保存为“external-secret.yml”：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;---&#xA;api版本：external-secrets.io/v1beta1&#xA;种类：外部秘密&#xA;元数据：&#xA;  名称：外部秘密&#xA;  命名空间：demo-app&#xA;规格：&#xA;  # 可选：每隔一段时间刷新一次secret&#xA;  # 刷新间隔：10s&#xA;  秘密商店参考：&#xA;    名称： conjur-jwt&#xA;    种类：秘密商店&#xA;  目标：&#xA;    # 将创建的 Kubernetes 密钥&#xA;    名称： db-credentials&#xA;    创建策略：所有者&#xA;  数据：&#xA;  # 将填充的 Kubernetes 密钥中的密钥，&#xA;  # 以及你将要使用的 Conjur 秘密的路径sed&#xA;  - 秘钥：网址&#xA;    远程参考：&#xA;      密钥：秘密/db/url&#xA;  - 密钥：用户名&#xA;    远程参考：&#xA;      关键：秘密/数据库/用户名&#xA;  - 密钥：密码&#xA;    远程参考：&#xA;      密钥：秘密/数据库/密码&#xA;  - 密钥：平台&#xA;    远程参考：&#xA;      密钥：secrets/db/platform&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，在关键时刻，让我们将这些文件加载​​到 Kubernetes 中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl apply -f external-secret.yml&#xA;$ kubectl apply -f demo-app.yml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果一切顺利，您应该能够在演示应用程序的日志中看到成功启动消息：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ DEMO_POD_NAME=$(kubectl get pods --namespace demo-app -l &#34;app=demo-app&#34; -o jsonpath=&#34;{.items [0].元数据.名称}&#34;)&#xA;$ kubectl 日志 $DEMO_POD_NAME -n demo-app&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-imagealigncenter&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://developer.cyberark.com/wp-content/uploads/2024/08/spring-boot.png&#34; alt =&#34;Spring Boot&#34; class=&#34;wp-image-7796&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;br&gt;这意味着应用程序已使用 Conjur 中存储的凭据成功连接到数据库。&lt;br&gt;您甚至可以通过部署包含“curl”的 pod 并运行测试查询来验证应用程序是否正常工作该应用程序：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;---&#xA;api版本：v1&#xA;种类: 豆荚&#xA;元数据：&#xA;  名称：卷曲&#xA;  标签：&#xA;    名称：卷曲&#xA;规格：&#xA;  容器：&#xA;  - 名称：卷曲&#xA;    图像：curlimages/curl：最​​新&#xA;    imagePullPolicy：始终&#xA;    命令：[“sh”，“-c”，“tail -f /dev/null”]&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;应用后，运行：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;$ kubectl exec curl --curl -X POST -H &#39;内容类型：application/json&#39; --data &#39;{&#34;name&#34;:&#34;加速器爱丽丝”}&#39; http://demo-app.demo-app.svc.cluster.local:8080/pet&#xA;$ kubectl exec curl --curl http://demo-app.demo-app.svc.cluster.local:8080/pets&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;它应该在第一个请求中成功创建一个新的“宠物”，并在运行第二个请求时返回它。这说明应用程序可以使用从 Conjur 存储和检索的凭据执行数据库操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就是这样！还有更多选项 - 例如，您可以调整 external-secret.yml 规范以通过使用正则表达式搜索或匹配注释来获取多个 Conjur 秘密，但为此，您需要查看文档！希望这提供了一个有用的起点，您现在将深入了解 Conjur – ESO 集成的工作原理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您读到最后，谢谢！您是冠军 💪&lt;br&gt;现在，保护您的软件！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-media-text is-stacked-on-mobile has-gray-200-background-color has-background&#34; style=&#34;grid-template-columns:23% auto&#34;&gt;&lt;figure class= “wp-block-media-text__media”&gt;&lt;img 解码 =“异步”src =“https://developer.cyberark.com/wp-content/uploads/2023/01/hs-shlomo-heigh.jpg”alt = “什洛莫头像”referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&lt;div class=&#34;wp-block-media-text__content&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developer.cyberark.com/blog/author/sheigh/&#34;&gt;什洛莫身高&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Shlomo 是 Cyber​​Ark 的高级软件工程师，负责 Conjur Secrets Manager。他是一位开源和 AppSec 爱好者、CNCF TAG Security 成员以及多个 OWASP 项目的贡献者。在空闲时间，您可以发现他与妻子和女儿共度时光、进行 3D 打印、木工或徒步旅行。&lt;/p&gt;&#xA;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 11 Sep 2024 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>