<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://rsshub.rssforever.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【Keycloak completes fuzzing audit】Keycloak完成模糊审计</title>
      <link>https://www.cncf.io/blog/2024/11/19/keycloak-completes-fuzzing-audit/</link>
      <description>【&lt;p&gt;&lt;em&gt;Community post by Adam Korczynski, ADA Logics&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Keycloak has completed its fuzzing audit. The audit was carried out by Ada Logics, a UK-based security firm with deep expertise in fuzz testing, and the audit was funded by the CNCF. The audit is part of the CNCF’s investment in security through security audits, and Keycloak joins a significant list of CNCF projects that have undergone fuzzing audits. See &lt;a href=&#34;https://www.cncf.io/blog/2023/04/18/cncf-fuzzing-open-source-projects-for-security-and-reliability/&#34;&gt;this blog post&lt;/a&gt; to read more about the fuzzing work for CNCF projects.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The audit resulted in Keycloak integrating into &lt;a href=&#34;https://github.com/google/oss-fuzz&#34;&gt;the OSS-Fuzz project&lt;/a&gt; – an open source fuzzing program developed and offered by Google for critical open source projects. Accepted projects can include their fuzz tests in their OSS-Fuzz build, and OSS-Fuzz will run them with high amounts of compute to scale the projects’ chances of finding potential bugs and vulnerabilities before malicious threat actors find them.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The audit also saw the auditing team write an extensive fuzzing suite for the Keycloak project that targets both complex processing routines and code parts that interact with 3rd-party services enabled by mocking of these 3rd-party services in the fuzz tests. In total, the auditing team wrote 24 new harnesses and added them all to Keycloaks OSS-Fuzz integration such that they run continuously on the OSS-Fuzz infrastructure. The auditing team then assessed the feedback from OSS-Fuzz, adjusted the fuzz tests to improve these based on OSS-Fuzz’s feedback and added seed corpora to selected fuzz tests.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The fuzz tests found a crash of low severity during the audit, which the auditing team fixed with an upstream patch. With Keycloaks integration into OSS-Fuzz, its fuzz tests continue to test the Keycloak code after its audit.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The full report from the audit is available &lt;a href=&#34;https://github.com/keycloak/keycloak-community/blob/main/security-audit/2024-11-8_fuzzing_audit.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;ADA Logics Adam Korczynski 的社区帖子&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Keycloak 已完成模糊审计。审计由 Ada Logics 进行，这是一家总部位于英国的安全公司，在模糊测试方面拥有深厚的专业知识，审计由 CNCF 资助。此次审计是 CNCF 通过安全审计进行安全投资的一部分，Keycloak 加入了经过模糊审计的 CNCF 项目的重要名单。请参阅&lt;a href=&#34;https://www.cncf.io/blog/2023/04/18/cncf-fuzzing-open-source-projects-for-security-and-reliability/&#34;&gt;这篇博文&lt;/a &gt; 阅读有关 CNCF 项目模糊测试工作的更多信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;审计结果导致 Keycloak 集成到 &lt;a href=&#34;https://github.com/google/oss-fuzz&#34;&gt;OSS-Fuzz 项目&lt;/a&gt; - 一个由 Google 开发和提供的开源模糊测试程序对于关键的开源项目。接受的项目可以在其 OSS-Fuzz 构建中包含模糊测试，OSS-Fuzz 将使用大量计算来运行它们，以扩大项目在恶意威胁行为者发现潜在错误和漏洞之前发现它们的机会。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;审计还发现审计团队为 Keycloak 项目编写了一个广泛的模糊测试套件，该套件针对复杂的处理例程和与第三方服务交互的代码部分，这些代码部分是通过在模糊测试中模拟这些第三方服务来实现的。审计团队总共编写了 24 个新工具，并将它们全部添加到 Keycloaks OSS-Fuzz 集成中，以便它们在 OSS-Fuzz 基础设施上持续运行。然后，审计团队评估了 OSS-Fuzz 的反馈，根据 OSS-Fuzz 的反馈调整模糊测试以改进这些测试，并将种子语料库添加到选定的模糊测试中。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;模糊测试在审核期间发现了严重程度较低的崩溃，审核团队使用上游补丁修复了该崩溃。随着Keycloaks集成到OSS-Fuzz中，其模糊测试在审计后继续测试Keycloak代码。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;完整的审计报告可在&lt;a href=&#34;https://github.com/keycloak/keycloak-community/blob/main/security-audit/2024-11-8_fuzzing_audit.pdf&#34;&gt;此处&lt;/一个&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 18 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kubestronaut in Orbit: Dmitri Telinov】在轨宇航员：德米特里·泰利诺夫 (Dmitri Telinov)</title>
      <link>https://www.cncf.io/blog/2024/11/19/kubestronaut-in-orbit-dmitri-telinov/</link>
      <description>【&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Get to know Dmitri&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1650&#34; height=&#34;866&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1.jpg&#34; alt=&#34;dmitri Telinov&#34; class=&#34;wp-image-120924&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1.jpg 1650w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-300x157.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-1024x537.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-1552x816.jpg 1552w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-900x472.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-381x200.jpg 381w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-590x310.jpg 590w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-1180x620.jpg 1180w&#34; sizes=&#34;(max-width: 1650px) 100vw, 1650px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This week’s Kubestronaut in Orbit, Dmitri Telinov, a Senior DevOps Engineer in Chișinău, Moldova, is a curious and avid learner and considered himself a complete beginner in Kubernetes only 3 years ago. When he’s not working, he likes to follow tutorials and courses to increase his DevOps knowledge.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’d like to be a Kubestronaut like Dmitri, get more details on the &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;CNCF Kubestronaut&lt;/a&gt; page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;When did you get started with Kubernetes and/or cloud-native? What was your first project?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I first learned about Kubernetes in 2017 and started to use it extensively at work in 2019.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What are the primary CNCF projects you work on or use today?&amp;nbsp; What projects have you enjoyed the most in your career?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/projects/helm/&#34;&gt;Helm&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/projects/argo/&#34;&gt;ArgoCD&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/projects/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/projects/prometheus/&#34;&gt;Prometheus&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;How have the certs or CNCF helped you in your career?&amp;nbsp;&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I learned a lot during preparation for certification exams. This preparation includes also practical experience that helped me to advance in my projects at work&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What are some other books/sites/courses you recommend for people who want to work with k8s?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I mostly used these learning platforms: Kodekloud, &lt;a href=&#34;https://www.oreilly.com/&#34;&gt;O’Reilly&lt;/a&gt; and &lt;a href=&#34;https://www.packtpub.com/&#34;&gt;Packt publishing&lt;/a&gt;&amp;nbsp; where I found some good courses.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What do you do in your free time?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I enjoy freelancing, and learning and sharing knowledge on my daily blog, https://www.qwerty.md/&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What would you tell someone who is just starting their K8s certification journey? Any tips or tricks?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Start with simple and hands-on examples. My biggest mistake was that I started with Kubernetes the Hard Way and it took some time to understand things.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Today the Cloud native ecosystem is way more than Kubernetes. Do you plan to get other cloud native certifications from the CNCF ?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I plan to finish more Linux certifications – for example, I want to get the &lt;a href=&#34;https://training.linuxfoundation.org/certification/linux-foundation-certified-sysadmin-lfcs/&#34;&gt;Linux Foundation Certified System Administrator (LFCS)&lt;/a&gt; and start to learn &lt;a href=&#34;https://nodejs.org/en&#34;&gt;NodeJS&lt;/a&gt; and prepare certification in that as well.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;了解德米特里&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1650”高度=“866”src=“https://www.cncf.io/ wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1.jpg&#34; alt=&#34;dmitri Telinov&#34; class=&#34;wp-image-120924&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1.jpg 1650w，https://www.cncf.io/wp-content/上传/2024/11/Kubestronaut-in-Orbit-10-1-300x157.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-1024x537.jpg 1024w，https://www.cncf.io/wp-content/uploads /2024/11/Kubestronaut-in-Orbit-10-1-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-194x102.jpg 194w，https://www.cncf.io/wp-content/uploads /2024/11/Kubestronaut-in-Orbit-10-1-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-776x408.jpg 776w，https://www.cncf.io/wp-content/uploads /2024/11/Kubestronaut-in-Orbit-10-1-1552x816.jpg 1552w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-900x472.jpg 900w，https://www.cncf.io/wp-content/uploads /2024/11/Kubestronaut-in-Orbit-10-1-381x200.jpg 381w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-762x400.jpg 762w，https://www.cncf.io/wp-content/uploads /2024/11/Kubestronaut-in-Orbit-10-1-590x310.jpg 590w, https://www.cncf.io/wp-content/uploads/2024/11/Kubestronaut-in-Orbit-10-1-1180x620.jpg 1180w“尺寸=”（最大宽度：1650px）100vw，1650px“引用策略=&#34;无引荐&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本周 Orbit 的 Kubetronaut 是摩尔多瓦基希讷乌的高级 DevOps 工程师 Dmitri Telinov，他是一位好奇且热心的学习者，仅在 3 年前就认为自己是 Kubernetes 的完全初学者。当他不工作时，他喜欢学习教程和课程来增加 DevOps 知识。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想成为像 Dmitri 这样的 Kubetronaut，请在 &lt;a href=&#34;https://www.cncf.io/training/kubestronaut/&#34;&gt;CNCF Kubestronaut&lt;/a&gt; 页面获取更多详细信息。&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;您什么时候开始使用 Kubernetes 和/或云原生？您的第一个项目是什么？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我于 2017 年首次了解 Kubernetes，并于 2019 年开始在工作中广泛使用它。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;您目前从事或使用的主要 CNCF 项目是什么？  在您的职业生涯中您最喜欢哪些项目？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/projects/helm/&#34;&gt;头盔&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/projects/argo/&#34;&gt;ArgoCD&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/projects/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/projects/prometheus/&#34;&gt;普罗米修斯&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;证书或 CNCF 对您的职业生涯有何帮助？ &lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在准备认证考试的过程中我学到了很多东西。时间他的准备工作还包括帮助我在工作项目中取得进展的实践经验&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;您为想要使用 k8s 的人推荐了哪些其他书籍/网站/课程？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我主要使用这些学习平台：Kodekloud、&lt;a href=&#34;https://www.oreilly.com/&#34;&gt;O&#39;Reilly&lt;/a&gt; 和 &lt;a href=&#34;https://www.packtpub。 com/&#34;&gt;Packt 发布&lt;/a&gt;，我在那里找到了一些不错的课程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;你空闲时间做什么？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我喜欢自由职业，喜欢在我的每日博客上学习和分享知识，https://www.qwerty.md/&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;您会对刚刚开始 K8s 认证之旅的人说些什么？有什么提示或技巧吗？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从简单且实用的示例开始。我最大的错误是我以艰难的方式开始使用 Kubernetes，并且花了一些时间来理解事情。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;如今，云原生生态系统远远超出了 Kubernetes。您是否计划获得 CNCF 的其他云原生认证？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我计划完成更多 Linux 认证 – 例如，我想获得 &lt;a href=&#34;https://training.linuxfoundation.org/certification/linux-foundation-certified-sysadmin-lfcs/&#34;&gt;Linux Foundation认证系统管理员 (LFCS)&lt;/a&gt; 并开始学习 &lt;a href=&#34;https://nodejs.org/en&#34;&gt;NodeJS&lt;/a&gt; 并准备相关认证。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 18 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Unlock growth and talent: why maintainers should mentor with CNCF】释放成长和人才：为什么维护者应该接受 CNCF 的指导</title>
      <link>https://www.cncf.io/blog/2024/11/21/unlock-growth-and-talent-why-maintainers-should-mentor-with-cncf/</link>
      <description>【&lt;p&gt;&lt;em&gt;By &lt;a href=&#34;https://github.com/nate-double-u/&#34;&gt;Nate Waddington&lt;/a&gt;, Head of Mentorship and Documentation, CNCF &lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Open source projects rely on strong communities. Mentorship programs like LFX Mentorship and Google Summer of Code offer maintainers a chance to bring new contributors into their projects, fostering long-term growth and sustainability.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But mentorship isn’t just about onboarding new talent—it’s also a way to expand your network, demonstrate leadership, and build a stronger foundation for your project’s future.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This post highlights the benefits of mentorship for maintainers, explains what mentees can bring to your project, and shares key details about the upcoming CNCF mentorship opportunities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Mentorship: A Catalyst for Project Growth&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mentorship programs aren’t just for aspiring contributors—they’re a strategic tool for project maintainers. By welcoming mentees, you can:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Expand Your Community&lt;/strong&gt;: Introduce skilled, eager contributors to your project and grow your network.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Develop Future Leaders&lt;/strong&gt;: Identify and mentor contributors who have the potential to become maintainers, helping ensure your project’s continuity.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Deliver Results&lt;/strong&gt;: Whether it’s improving documentation, building new features, or resolving persistent bugs, mentorship delivers tangible outcomes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Why Mentoring Benefits Maintainers&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mentoring is more than an act of generosity—it can be a career-defining opportunity for maintainers:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Showcase Leadership&lt;/strong&gt;: Coaching new contributors enhances your leadership portfolio and demonstrates your ability to guide complex technical work.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Build Your Network&lt;/strong&gt;: Engaging with mentees and fellow mentors connects you with a diverse, global community of professionals.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Advance Your Career&lt;/strong&gt;: Adding mentorship to your professional track record demonstrates your commitment to open-source growth and talent development.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What Can Mentees Do for Your Project?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF mentees are prepared to make meaningful contributions, such as:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Developing features or improving functionality.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Enhancing project documentation.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Tackling backlogs or addressing long-standing issues.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Impact of Mentorship&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mentorship creates a ripple effect, benefiting projects long after the term ends:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Sustained Contributions&lt;/strong&gt;: Between 40-60 percent of CNCF LFX mentees continue contributing to the project they worked with in the year after their term.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfXtJ7-ZOYrBM6hIjfy7LfiWc96YSBZuZOoVXhG-oVMgK0RyYC72eNU_AwHcTOsI0XlJBCWhW9WAt1rkLcSHjPAtBc9QbyWplGCxp9UBYieK7UhAZFKNFFM8LF7kbwY8nqucBhx?key=mwdZhPEihkGqGkzF5BBoIN2N&#34; alt=&#34;% of mentees contributing in the year following their term&#34; title=&#34;Chart&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Future Maintainers&lt;/strong&gt;: Since 2020, 14 CNCF LFX mentees have gone on to become maintainers, showing the program’s value in cultivating leadership.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfGZ_Dv-UV5Uv2B4LAT8S03OWUTJCkKjkB-O_kwf62YlGP0vvejsGNuzN3hJe65rWcfCd_GJGNhSFt1O05QI5dpXBorq5ew36XYJFK-NxbgwPQzJeEkuNyRl0oAHAfCY7j23fxE?key=mwdZhPEihkGqGkzF5BBoIN2N&#34; alt=&#34;mentees who become maintainers graph&#34; title=&#34;Chart&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Stronger Foundations&lt;/strong&gt;: Mentees familiar with your project’s ecosystem grow into indispensable contributors, tackling increasingly complex challenges over time.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Key Dates for the Next Term of CNCF LFX 2025 Mentorship&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Get ready to make an impact; the call for&lt;a href=&#34;https://github.com/cncf/mentoring/tree/main/programs/lfx-mentorship/2025/01-Mar-May&#34;&gt; 2025 CNCF LFX Mentorship Term 1&lt;/a&gt; project proposals opens soon:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Project Proposals Open&lt;/strong&gt;: January 8 – February 4, 2025&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Mentee Applications Open&lt;/strong&gt;: February 5 – February 18, 2025&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Program Begins&lt;/strong&gt;: March 3, 2025&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cncf/mentoring/tree/main/programs/lfx-mentorship/2025/01-Mar-May&#34;&gt;https://github.com/cncf/mentoring/tree/main/programs/lfx-mentorship/2025/01-Mar-May&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Join the CNCF Mentorship Working Group&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Be part of the team shaping the future of cloud native. The Mentorship Working Group is a collaborative space for maintainers to share insights, develop strategies, and support mentorship efforts.&lt;a href=&#34;https://github.com/cncf/mentoring/tree/main/mentoring-wg#meeting-details&#34;&gt; Meetings are held on the third Thursday of each month&lt;/a&gt;, and new members are always welcome.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;The Next Step in Project and Career Growth&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF’s mentorship programs are a win-win for maintainers and contributors; only 73 of our 205+ projects have participated, so there is room to grow–and in particular, I’d like to invite sandbox projects to participate. By mentoring, you’ll not only grow your project but also gain recognition, leadership experience, and a stronger community. Have any questions? Here are helpful links, and if you still want to chat, reach out to &lt;a href=&#34;mailto:natew@cncf.io&#34;&gt;natew@cncf.io&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://mentoring.cncf.io/&#34;&gt;mentoring.cncf.io&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cncf/mentoring/tree/main/programs/lfx-mentorship/2025/01-Mar-May&#34;&gt;LFX 2025 01 Mar-May CFP&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cncf/mentoring/tree/main/mentoring-wg#meeting-details&#34;&gt;Mentoring WG Meetings&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;作者：CNCF 指导和文档主管 &lt;a href=&#34;https://github.com/nate-double-u/&#34;&gt;Nate Waddington&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开源项目依赖于强大的社区。 LFX Mentorship 和 Google Summer of Code 等导师计划为维护者提供了将新贡献者引入其项目的机会，从而促进长期增长和可持续性。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，导师制不仅仅是培养新人才，它还是一种扩展人际网络、展示领导力并为项目的未来奠定更坚实基础的方式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这篇文章强调了维护人员指导的好处，解释了受指导者可以为您的项目带来什么，并分享有关即将到来的 CNCF 指导机会的关键细节。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;指导：项目发展的催化剂&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;指导计划不仅仅适用于有抱负的贡献者，它们还是项目维护者的战略工具。通过欢迎学员，您可以：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;扩大您的社区&lt;/strong&gt;：为您的项目引入技术精湛、热心的贡献者并拓展您的网络。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;培养未来领导者&lt;/strong&gt;：识别并指导有潜力成为维护者的贡献者，帮助确保项目的连续性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;交付成果&lt;/strong&gt;：无论是改进文档、构建新功能还是解决持续存在的错误，指导都能带来切实的成果。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;为什么指导福利维护者&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;指导不仅仅是一种慷慨行为——它可以成为维护者的职业定义机会：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;展示领导力&lt;/strong&gt;：指导新贡献者可以增强您的领导能力，并展示您指导复杂技术工作的能力。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;建立您的人际网络&lt;/strong&gt;：与受训者和导师同事互动，让您与多元化的全球专业人士社区建立联系。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;推进您的职业生涯&lt;/strong&gt;：在您的职业记录中添加指导可以体现您对开源发展和人才发展的承诺。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;学员能为您的项目做什么？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF 学员已准备好做出有意义的贡献，例如：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;开发功能或改进功能。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;增强项目文档。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;处理积压的工作或解决长期存在的问题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;指导的影响&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;指导会产生连锁反应，使项目在任期结束后很长时间内受益：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;持续贡献&lt;/strong&gt;：40-60% 的 CNCF LFX 学员在任期结束后的一年内继续为他们参与的项目做出贡献。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=“异步” src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXfXtJ7-ZOYrBM6hIjfy7LfiWc96YSBZuZOoVXhG-oVMgK0RyYC72eNU_ AwHcTOsI0XlJBCWhW9WAt1rkLcSHjPAtBc9QbyWplGCxp9UBYieK7UhAZFKNFFM8LF7kbwY8nqucBhx?key=mwdZhPEihkGqGkzF5BBoIN2N&#34; alt=&#34;在任期结束后一年内做出贡献的受训者百分比&#34; title=&#34;Chart&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;未来的维护者&lt;/strong&gt;：自 2020 年以来，已有 14 名 CNCF LFX 学员成为维护者，展示了该计划在培养领导力方面的价值。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXfGZ_Dv-UV5Uv2B4LAT8S03OWUTJCkKjkB-O_kwf62YlGP0vvejsGNuz N3hJe65rWcfCd_GJGNhSFt1O05QI5dpXBorq5ew36XYJFK-NxbgwPQzJeEkuNyRl0oAHAfCY7j23fxE?key=mwdZhPEihkGqGkzF5BBoIN2N&#34; alt=&#34;成为维护者的学员图表&#34; title=&#34;图表&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;更强大的基础&lt;/strong&gt;：熟悉项目生态系统的学员将成长为不可或缺的贡献者，随着时间的推移应对日益复杂的挑战。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;CNCF LFX 2025 下一期指导的关键日期&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;准备好产生影响；征集&lt;a href=&#34;https://github.com/cncf/mentoring/tree/main/programs/lfx-mentorship/2025/01-Mar-May&#34;&gt;2025 CNCF LFX 指导学期 1&lt;/a&gt; 项目提案即将开放：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;项目提案开放&lt;/strong&gt;：2025 年 1 月 8 日至 2 月 4 日&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;学员申请开放&lt;/strong&gt;：2025 年 2 月 5 日至 2 月 18 日&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;计划开始&lt;/strong&gt;：2025 年 3 月 3 日&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cncf/mentoring/tree/main/programs/lfx-mentorship/2025/01-Mar-May&#34;&gt;https://github.com/cncf/mentoring /tree/main/programs/lfx-mentorship/2025/01-Mar-May&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;加入 CNCF 指导工作组&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;成为塑造云原生未来的团队的一员。指导工作组是维护人员分享见解、制定策略和支持指导工作的协作空间。&lt;a href=&#34;https://github.com/cncf/mentoring/tree/main/mentoring-wg#meeting-details &#34;&gt;每月第三个星期四举行会议&lt;/a&gt;，随时欢迎新成员。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;项目和职业发展的下一步&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF 的导师计划对于维护者和贡献者来说是双赢的；我们 205 个以上的项目中只有 73 个参与了，所以还有成长的空间——特别是，我想邀请沙盒项目参与。通过指导，您不仅可以发展您的项目，还可以获得认可、领导经验和更强大的社区。有任何疑问吗？以下是有用的链接，如果您仍想聊天，请联系 &lt;a href=&#34;mailto:natew@cncf.io&#34;&gt;natew@cncf.io&lt;/a&gt;：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://mentoring.cncf.io/&#34;&gt;mentoring.cncf.io&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cncf/mentoring/tree/main/programs/lfx-mentorship/2025/01-Mar-May&#34;&gt;LFX 2025 01 三月至五月 CFP&lt;/a&gt; &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cncf/mentoring/tree/main/mentoring-wg#meeting-details&#34;&gt;指导工作组会议&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 20 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Konveyor AI: supporting application modernization】Konveyor AI：支持应用程序现代化</title>
      <link>https://www.cncf.io/blog/2024/11/22/konveyor-ai-supporting-application-modernization/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post by &lt;a href=&#34;https://www.linkedin.com/in/johnwmatthews/&#34;&gt;John Matthews&lt;/a&gt;, and &lt;a href=&#34;https://www.linkedin.com/in/savitharaghunathan/&#34;&gt;Savitha Raghunathan&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;Red Hat&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Migrating legacy software to modern platforms has long been a challenging endeavor for businesses. Companies often need to move decades-old systems to newer technologies without causing disruptions. &lt;a href=&#34;https://www.konveyor.io/&#34;&gt;Konveyor&lt;/a&gt; is an open source project aimed at supporting enterprises with the modernization of their applications, especially in cloud-native environments. It provides a suite of tools and services that enable organizations to migrate and adapt their workloads to Kubernetes and cloud-native platforms. Now, with Konveyor AI (Kai), the focus expands to using AI-driven solutions to make the modernization journey even smoother and more efficient, and that is what we will explore in this blog post.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;What Kai is and How It Works&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/konveyor/kai&#34;&gt;&lt;strong&gt;Konveyor AI&lt;/strong&gt;&lt;/a&gt;, or “&lt;strong&gt;Kai&lt;/strong&gt;,” is aimed at assisting with these migrations. By applying Generative AI methods, Kai helps organizations seamlessly transition legacy codebases to modern platforms through tailored code suggestions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai uses the &lt;a href=&#34;https://www.promptingguide.ai/techniques/rag&#34;&gt;Retrieval Augmented Generation (RAG) approach&lt;/a&gt;, combining two sources of intelligence: static code analysis and past migration examples within an organization. This enables Kai to offer highly relevant code suggestions based on how similar migration challenges have been tackled before, avoiding the need for extensive AI retraining.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Static Code Analysis&lt;/strong&gt;: This data is provided by &lt;a href=&#34;https://github.com/konveyor/analyzer-lsp&#34;&gt;&lt;strong&gt;analyzer-lsp&lt;/strong&gt;&lt;/a&gt;, which performs a detailed analysis of a codebase to identify parts of the code that need updating.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Solved Examples&lt;/strong&gt;: These are prior solutions to similar migration issues that have already been encountered and resolved by the organization. Kai incorporates these examples to provide context for its code suggestions.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Model Agnostic&lt;/strong&gt;: Kai follows the “Bring Your Own Model” approach. It allows organizations to use their preferred LLMs, ensuring flexibility and adaptability.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By combining these data sources, Kai can generate context-aware suggestions that help developers modernize their applications while staying consistent with how their organization typically solves problems.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;The Workflow: Step-by-Step&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai’s workflow integrates seamlessly into the development process:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Static Code Analysis&lt;/strong&gt;: The tool starts by running &lt;strong&gt;analyzer-lsp&lt;/strong&gt; on the codebase, identifying specific migration issues based on predefined or custom rulesets.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Locate Solved Examples&lt;/strong&gt;: Kai searches through the organization’s codebase to find prior instances where similar issues have already been solved.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Generate Code Suggestions&lt;/strong&gt;: Using the static analysis data and the relevant solved examples, the LLM creates suggestions for how to resolve the migration issues.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Display in IDE&lt;/strong&gt;: The generated code suggestions are surfaced in the developer’s &lt;strong&gt;IDE&lt;/strong&gt; (Integrated Development Environment), allowing them to implement the changes directly.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This process allows developers to efficiently address migration issues without having to manually comb through old projects or reinvent solutions from scratch.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;914&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/11/migrator1.jpg&#34; alt=&#34;migrator grid&#34; class=&#34;wp-image-121242&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/11/migrator1.jpg 1600w, https://www.cncf.io/wp-content/uploads/2024/11/migrator1-300x171.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/11/migrator1-1024x585.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/11/migrator1-768x439.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/11/migrator1-900x514.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/11/migrator1-350x200.jpg 350w, https://www.cncf.io/wp-content/uploads/2024/11/migrator1-700x400.jpg 700w&#34; sizes=&#34;(max-width: 1600px) 100vw, 1600px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To better understand how Kai works, we put together &lt;a href=&#34;https://github.com/konveyor/kai/blob/main/docs/scenarios/demo.md&#34;&gt;a Kai demo&lt;/a&gt;, where we showcase its capabilities in facilitating the modernization of application source code to a new target. We focus on how Kai can handle various levels of migration complexity, ranging from simple import swaps to more involved changes such as modifying scope from CDI bean requirements. Additionally, we look into migration scenarios that involve EJB Remote and Message Driven Bean(MBD) changes. We also concentrate on migrating a partially migrated JavaEE Coolstore application to Quarkus, a task that involves not only technical translation but also considerations for deployment to Kubernetes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Addressing Key LLM Challenges with Kai&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai is designed to address several key challenges that are common in large-scale modernization projects leveraging generative AI.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;1. Handling Limited Context in LLMs&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;LLMs can only process a limited amount of data at a time, referred to as their context size. Since most legacy codebases are too large to be processed in a single request, Kai uses the results from &lt;strong&gt;static code analysis&lt;/strong&gt; to narrow down the problem to specific areas of the code that need attention. This helps to avoid overwhelming the LLM and ensures that it remains focused on solving manageable, well-defined issues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;2. Cascading Changes Across a Repository&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One of the challenges in application modernization is dealing with changes that affect multiple files across a repository. For example, changing a method’s signature may require updates in other files that call that method. While Kai currently focuses on file-specific changes, future iterations will tackle repository-wide changes, drawing inspiration from Microsoft’s CodePlan research which will allow Kai to propagate changes automatically across related files.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;3. Customize code suggestions to an organization’s past behavior&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Many organizations use custom frameworks and technologies that are not widely known or supported by existing AI models. Kai addresses this by incorporating examples of how an organization has handled similar migration problems in the past. This &lt;a href=&#34;https://www.promptingguide.ai/techniques/fewshot&#34;&gt;&lt;strong&gt;few-shot prompting&lt;/strong&gt;&lt;/a&gt; technique provides the LLM with additional context to help it generate relevant code suggestions, even when dealing with proprietary or unfamiliar frameworks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;4. Adapting to Rapidly Changing LLM Capabilities&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai is designed to be &lt;strong&gt;model agnostic&lt;/strong&gt;. As LLMs continue to evolve, Kai remains adaptable, allowing organizations to switch between different models as needed, whether using public, private, or local AI services.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;5. Iterating on Code Suggestions&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai includes an &lt;strong&gt;agent&lt;/strong&gt; that iteratively refines code suggestions by checking the validity of the initial output and providing feedback to the LLM. This iterative process helps improve the quality of the final code solution, ensuring that it addresses the problem effectively.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Next Steps for Kai&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Maintainers of Kai are actively working on development, with a heavy focus on addressing cascading changes across large codebases and improving the IDE experience. We regularly produce early &lt;a href=&#34;https://github.com/konveyor/kai/blob/main/docs/evaluation_builds.md&#34;&gt;evaluation builds&lt;/a&gt;&amp;nbsp; that adopters can test and use.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;How to Get Involved&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For those interested in contributing to Kai or learning more about its development, there are several ways you can get involved:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Join the&lt;a href=&#34;https://github.com/konveyor/community&#34;&gt; Konveyor community&lt;/a&gt;’s monthly calls to stay updated on the project’s progress.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Contribute to the &lt;strong&gt;Kai&lt;/strong&gt; GitHub repository:&lt;a href=&#34;https://github.com/konveyor/kai&#34;&gt; https://github.com/konveyor/kai&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Engage with the developers and community members via &lt;a href=&#34;https://communityinviter.com/apps/kubernetes/community&#34;&gt;&lt;strong&gt;Kubernetes Slack&lt;/strong&gt;&lt;/a&gt; workspace in the &lt;a href=&#34;https://kubernetes.slack.com/archives/CR85S82A2&#34;&gt;#konveyor&lt;/a&gt; channel.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Konveyor AI&lt;/strong&gt; aims to provide practical, efficient support for application modernization. By leveraging &lt;strong&gt;static code analysis&lt;/strong&gt; and prior &lt;strong&gt;solved examples&lt;/strong&gt;, it offers code suggestions that can help organizations migrate their legacy codebases without having to rebuild solutions from the ground up. With a flexible and adaptable design, Kai is poised to assist companies in meeting their modernization goals, regardless of the technology stack or the size of the codebase.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;会员帖子，作者：&lt;a href=&#34;https://www.linkedin.com/in/johnwmatthews/&#34;&gt;John Matthews&lt;/a&gt; 和 &lt;a href=&#34;https://www.linkedin .com/in/savitharaghunathan/&#34;&gt;Savitha Raghunathan&lt;/a&gt;&lt;/em&gt;，&lt;em&gt;红帽&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将遗留软件迁移到现代平台对于企业来说长期以来一直是一项具有挑战性的工作。公司通常需要将几十年前的系统迁移到更新的技术而不造成中断。 &lt;a href=&#34;https://www.konveyor.io/&#34;&gt;Konveyor&lt;/a&gt; 是一个开源项目，旨在支持企业实现应用程序现代化，特别是在云原生环境中。它提供了一套工具和服务，使组织能够将其工作负载迁移并调整到 Kubernetes 和云原生平台。现在，借助 Konveyor AI (Kai)，重点扩展到使用人工智能驱动的解决方案，使现代化之旅更加顺畅和高效，这就是我们将在本博文中探讨的内容。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Kai 是什么以及它是如何工作的&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/konveyor/kai&#34;&gt;&lt;strong&gt;Konveyor AI&lt;/strong&gt;&lt;/a&gt;，或“&lt;strong&gt;Kai&lt;/strong&gt;”，旨在协助这些迁移。通过应用生成式人工智能方法，Kai 通过量身定制的代码建议，帮助组织将遗留代码库无缝过渡到现代平台。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai 使用&lt;a href=&#34;https://www.promptingguide.ai/techniques/rag&#34;&gt;检索增强生成 (RAG) 方法&lt;/a&gt;，结合了两种情报来源：静态代码分析和过去的迁移组织内的示例。这使得 Kai 能够根据之前解决类似迁移挑战的方式提供高度相关的代码建议，从而避免了广泛的人工智能再培训。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;静态代码分析&lt;/strong&gt;：此数据由&lt;a href=&#34;https://github.com/konveyor/analyzer-lsp&#34;&gt;&lt;strong&gt;analyzer-lsp&lt;/strong&gt;提供&lt; /a&gt;，它对代码库进行详细分析，以确定需要更新的代码部分。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;已解决的示例&lt;/strong&gt;：这些是组织已经遇到并解决的类似迁移问题的先前解决方案。 Kai 合并了这些示例，为其代码建议提供上下文。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;模型不可知论&lt;/strong&gt;：Kai 遵循“自带模型”方法。它允许组织使用他们喜欢的法学硕士，确保灵活性和适应性。 &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过组合这些数据源，Kai 可以生成上下文感知建议，帮助开发人员实现应用程序现代化，同时与组织通常解决问题的方式保持一致。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;工作流程：分步&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai 的工作流程无缝集成到开发过程中：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;静态代码分析&lt;/strong&gt;：该工具通过运行&lt;strong&gt;analyzer-lsp&lt;/s启动trong&gt; 在代码库上，根据预定义或自定义规则集识别特定的迁移问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;查找已解决的示例&lt;/strong&gt;：Kai 搜索组织的代码库，以查找已解决类似问题的先前实例。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;生成代码建议&lt;/strong&gt;：法学硕士使用静态分析数据和相关已解决的示例，提出如何解决迁移问题的建议。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;在 IDE 中显示&lt;/strong&gt;：生成的代码建议显示在开发人员的&lt;strong&gt;IDE&lt;/strong&gt;（集成开发环境）中，使他们能够直接实施更改。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此流程使开发人员能够有效解决迁移问题，而无需手动梳理旧项目或从头开始重新发明解决方案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1600”高度=“914”src=“https://www.cncf.io/ wp-content/uploads/2024/11/migrator1.jpg&#34; alt=&#34;迁移器网格&#34; class=&#34;wp-image-121242&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/11/migrator1.jpg 1600w，https://www.cncf.io/wp-content/uploads/2024/11/migrator1- 300x171.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/11/migrator1-1024x585.jpg 1024w，https://www.cncf.io/wp-content/uploads/2024/11/migrator1-768x439 .jpg 768w, https://www.cncf.io/wp-content/uploads/2024/11/migrator1-900x514.jpg 900w，https://www.cncf.io/wp-content/uploads/2024/11/migrator1-350x200 .jpg 350w, https://www.cncf.io/wp-content/uploads/2024/11/migrator1-700x400.jpg 700w”尺寸=“（最大宽度：1600px）100vw，1600px”referrerpolicy=“no-referrer”&gt;&lt; /图&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了更好地了解 Kai 的工作原理，我们整理了&lt;a href=&#34;https://github.com/konveyor/kai/blob/main/docs/scenarios/demo.md&#34;&gt;Kai 演示&lt;/a&gt; ，我们展示了它在促进应用程序源代码现代化以实现新目标方面的能力。我们重点关注 Kai 如何处理各种级别的迁移复杂性，从简单的导入交换到更复杂的更改（例如修改 CDI bean 要求的范围）。此外，我们还研究了涉及 EJB Remote 和 Message Driven Bean (MBD) 更改的迁移场景。我们还专注于将部分迁移的 JavaEE Coolstore 应用程序迁移到 Quarkus，这项任务不仅涉及技术翻译，还涉及部署到 Kubernetes 的注意事项。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;与 Kai 一起解决法学硕士的主要挑战&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai 旨在解决利用生成式人工智能的大规模现代化项目中常见的几个关键挑战。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;1.处理法学硕士中的有限背景&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;LLM 一次只能处理有限数量的数据，称为上下文大小。由于大多数遗留代码库太大而无法在单个请求中处理，Kai 使用静态代码分析的结果分析将问题范围缩小到需要注意的代码特定区域。这有助于避免法学硕士不堪重负，并确保其始终专注于解决可管理的、明确定义的问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;2.跨存储库级联更改&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;应用程序现代化的挑战之一是处理影响存储库中多个文件的更改。例如，更改方法的签名可能需要更新调用该方法的其他文件。虽然 Kai 目前专注于特定于文件的更改，但未来的迭代将解决存储库范围的更改，从 Microsoft 的 CodePlan 研究中汲取灵感，这将使 Kai 能够在相关文件之间自动传播更改。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;3.根据组织过去的行为定制代码建议&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;许多组织使用的自定义框架和技术尚未广为人知，也不受现有人工智能模型的支持。 Kai 通过结合组织过去如何处理类似迁移问题的示例来解决这个问题。这种&lt;a href=&#34;https://www.promptingguide.ai/techniques/fewshot&#34;&gt;&lt;strong&gt;few-shot提示&lt;/strong&gt;&lt;/a&gt;技术为LLM提供了额外的上下文，以帮助其生成相关的代码建议，即使在处理专有或不熟悉的框架时也是如此。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;4.适应快速变化的法学硕士能力&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai 的设计是&lt;strong&gt;模型不可知&lt;/strong&gt;。随着法学硕士的不断发展，Kai 仍然具有适应性，允许组织根据需要在不同模型之间切换，无论是使用公共、私人还是本地人工智能服务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;5。迭代代码建议&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai 包含一个&lt;strong&gt;代理&lt;/strong&gt;，它通过检查初始输出的有效性并向 LLM 提供反馈来迭代地完善代码建议。这个迭代过程有助于提高最终代码解决方案的质量，确保其有效解决问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Kai 的后续步骤&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kai 的维护人员正在积极致力于开发，重点关注解决大型代码库中的级联更改并改善 IDE 体验。我们定期生成早期的&lt;a href=&#34;https://github.com/konveyor/kai/blob/main/docs/evaluation_builds.md&#34;&gt;评估版本&lt;/a&gt;，供采用者测试和使用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;如何参与&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于那些有兴趣为 Kai 做出贡献或了解更多有关其开发的信息的人，可以通过多种方式参与：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;加入 &lt;a href=&#34;https://github.com/konveyor/community&#34;&gt;Konveyor 社区&lt;/a&gt;的每月电话会议，了解项目的最新进展。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;为 &lt;strong&gt;Kai 做出贡献&lt;/strong&gt; GitHub 存储库：&lt;a href=&#34;https://github.com/konveyor/kai&#34;&gt; https://github.com/konveyor/kai&lt;/a&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;通过 &lt;a href=&#34;https://communityinviter.com/apps/kubernetes/community&#34;&gt;&lt;strong&gt;Kubernetes Slack&lt;/strong&gt;&lt;/a&gt; 工作区与开发者和社区成员互动=&#34;https://kubernetes.slack.com/archives/CR85S82A2&#34;&gt;#konveyor&lt;/a&gt;频道。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Konveyor AI&lt;/strong&gt;旨在为应用现代化提供实用、高效的支持。通过利用&lt;strong&gt;静态代码分析&lt;/strong&gt;和之前&lt;strong&gt;已解决的示例&lt;/strong&gt;，它提供了代码建议，可以帮助组织迁移其遗留代码库，而无需从头开始重建解决方案。凭借灵活且适应性强的设计，Kai 准备帮助公司实现其现代化目标，无论技术堆栈或代码库的大小如何。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 21 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How Fastly used Kubernetes to scale our platform engineering practice】如何快速使用 Kubernetes 来扩展我们的平台工程实践</title>
      <link>https://www.cncf.io/blog/2024/11/21/how-fastly-used-kubernetes-to-scale-our-platform-engineering-practice/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on &lt;a href=&#34;https://www.fastly.com/blog/how-fastly-used-kubernetes-to-scale-our-platform-engineering-practice&#34;&gt;Fastly’s blog&lt;/a&gt; by Hannah Aubry&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;About five years ago, Fastly had a problem with scale. No, not our network. Fastly’s network continues to scale effortlessly, including recently breezing past a 353 Tbps* (terabits per second) capacity threshold we’ve been tracking internally. No, our problem was scaling how our dev teams worked together and the shared resources they used. That’s a common problem for any company with a vital and growing engineering function like Fastly, but for us, it came with a unique twist — because Fastly is one of the few companies on which the entire internet relies, and because our whole thing is instant digital experiences, our solution to internal scale had to not only be reliable and resilient but also very, very fast.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Enter Fastly’s Cloud and Container Services team. In 2020, the Platform Engineering team—now Foundation Engineering—was exploring ways to make Fastly’s engineering teams more effective and efficient. Around that time, a new engineering paradigm was gaining steam.&amp;nbsp;Platform engineering is the&amp;nbsp;&lt;a href=&#34;https://platformengineering.org/blog/what-is-platform-engineering&#34;&gt;&lt;u&gt;practice&lt;/u&gt;&lt;/a&gt;&amp;nbsp;of “designing and building toolchains and workflows that enable self-service capabilities for software engineering organizations in the cloud-native era.” One of the key tools used in a platform-engineering-focused organization is an&amp;nbsp;&lt;a href=&#34;https://internaldeveloperplatform.org/&#34;&gt;&lt;u&gt;Internal Development Platform&lt;/u&gt;&lt;/a&gt;&amp;nbsp;(IDP). IDPs greatly benefit individual engineers and the organizations they work for because they centralize control for cloud resources, security policies, user management, and more. In other words, they keep engineers focused on productivity and make it easy for organizations to allocate resources, onboard new hires, and more.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Today, we call the IDP our Foundation Engineering team built Elevation. To understand how Fastly’s Elevation platform works, I chatted with Danny Kulchinksy, one of the original members of Fastly’s Cloud and Container Services team.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;here-s-how-fastly-s-elevation-platform-works&#34;&gt;Here’s how Fastly’s Elevation platform works&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A platform like Elevation aims to provide a standardized interface and user experience for all of Fastly’s developers. Specifically, its current role in Fastly’s architecture is to provide common and centrally-owned infrastructure for the development teams building applications that control crucial aspects of our network like&amp;nbsp;&lt;a href=&#34;https://www.fastly.com/blog/turning-a-fast-network-into-a-smart-network-with-autopilot/&#34;&gt;&lt;u&gt;AutoPilot&lt;/u&gt;&lt;/a&gt;, which automagically load balances traffic between our&lt;a href=&#34;https://www.fastly.com/network-map/&#34;&gt;&lt;u&gt;&amp;nbsp;Points of Presence (POPs)&lt;/u&gt;&lt;/a&gt;&amp;nbsp;to improve performance, or Neptune, which runs Fastly’s TLS features. Previously, Fastly used custom&amp;nbsp;&lt;a href=&#34;https://www.chef.io/&#34;&gt;&lt;u&gt;Chef&lt;/u&gt;&lt;/a&gt;&amp;nbsp;cookbooks per application to run these kinds of applications, which led to a lot of maintenance for each engineering team: not only writing cookbooks but also figuring out how to deploy the application, patching the servers, fixing downtime as it happens—which doesn’t always happen—the list goes on.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At its core, Elevation is&amp;nbsp;&lt;a href=&#34;https://kubernetes.io/&#34;&gt;&lt;u&gt;Kubernetes&lt;/u&gt;&lt;/a&gt;&amp;nbsp;(and many other tools from the Kubernetes ecosystem). Rather than individually managing their infrastructure, teams produce container images with standardized deployment patterns, enabling them to simply define where and how they want to deploy their application. From there, our Foundation Engineering team utilized controllers to perform all the necessary initialization, secrets management, and auto-scaling processes. What’s more, Elevation uses custom controllers to ensure that our workloads are always in policy over the long term too.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“So what we’ve done is built a controller that sits on each of the Elevation clusters. Once it detects that a new namespace is created, it automatically talks to&amp;nbsp;&lt;a href=&#34;https://www.vaultproject.io/&#34;&gt;&lt;u&gt;Vault&lt;/u&gt;&lt;/a&gt;—an open source secrets storage system—and creates the secret namespace, the relevant policies, roles, and all the necessary machinery for the users to get started. If we need to change the policy over time, that gets rolled out automatically by the controller, too,” said Danny.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;driving-adoption-and-the-future-of-elevation&#34;&gt;Driving adoption and the future of Elevation&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Elevation’s success is largely due to the Cloud &amp;amp; Container Services team’s thoughtful planning, execution, and internal advocacy. The success and positive reviews from migrated teams haven’t hurt either, as Elevation has grown to serve 200+ services and 40+ teams and projects across Fastly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“First and foremost, we knew Elevation needed to be very reliable and resilient but also simple. Because it is an adjustment for the engineering teams, and if it’s too hard or the benefits aren’t clear, they won’t adopt it. And it took quite a while to get the confidence of the various engineering teams because, at the beginning, nobody wanted to use Kubernetes. It was very new, there were a lot of jokes around it, and it took quite a bit of effort on our part to prove and demonstrate that this is a reliable and worthwhile platform to use. But since we started, not a single team that has made the switch so far has regretted it. They’ve all felt that they were better off than they were before.”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When asked how the team wants to grow the platform next, Danny said their main focus is always ensuring that our development teams continue to have a good experience using Elevation, even as its user base and complexity grow. He has to say “no” or “next year” to more proposed features than he did in Elevation’s early days, but the team’s aim remains the same: ensuring our users have the freedom to operate independently while ensuring they don’t break someone else’s service by mistake.&amp;nbsp;&lt;a href=&#34;https://prometheus.io/&#34;&gt;&lt;u&gt;Prometheus&lt;/u&gt;&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://thanos.io/&#34;&gt;&lt;u&gt;Thanos&lt;/u&gt;&lt;/a&gt;&amp;nbsp;for monitoring, with&amp;nbsp;&lt;a href=&#34;https://www.fluentd.org/&#34;&gt;&lt;u&gt;FluentD&lt;/u&gt;&lt;/a&gt;&amp;nbsp;for automated metrics and log collection. But perhaps the most versatile tool from the Kubernetes ecosystem for Fastly is&amp;nbsp;&lt;a href=&#34;https://kyverno.io/&#34;&gt;&lt;u&gt;Kyverno&lt;/u&gt;&lt;/a&gt;, the policy engine. Its ability to mutate, validate, and generate resources upon creation or when they’re updated makes it especially powerful for Fastly. For example, if a developer tries to do something with Fastly’s infrastructure that is an insecure practice or out of policy—running an application as root, for example—Kyverno processes the deployment manifest against our validation policies and blocks the app from running.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;breaking-glass&#34;&gt;Breaking glass&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Abstracting infrastructure is a great expedient for the software development lifecycle, but what about during emergency scenarios, like an incident, when dev teams may need extended permissions to fix an issue? The Platform Engineering team thought of that. The Fastly development teams using Elevation have access to a unique automation called Break Glass—built using Kyverno—which extends their permissions on our production clusters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“So essentially, service owners have a specific set of permissions for what they can do in a production environment. Generally, we don’t allow certain actions because they’re considered risky from a security perspective or we have some compliance requirements where we cannot just apply changes directly, we need to go through an approval process. But if there’s an emergency, if there’s an incident and the engineer has to go in and do something to fix it, they can Break Glass. Once they do so, two things happen. One is they get elevated permissions that are time-scoped, starting at two hours, but they can extend if needed. The second is that comprehensive audit tracing initiates at the same time. We know who did the Break Glass and what they did, so we can go back post-event and understand what happened. This feature has helped us reduce lag time in responding to incidents since it’s completely self-serve while ensuring that we are always compliant,” said Danny.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Learn how Fastly can help you scale your internal development platform to success. Sign up for a&amp;nbsp;&lt;a href=&#34;https://www.fastly.com/signup/&#34;&gt;free account&lt;/a&gt;&amp;nbsp;or join the conversation in our&amp;nbsp;&lt;a href=&#34;https://community.fastly.com/&#34;&gt;forum&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;* 353 Tbps of connected global capacity as of June 30, 2024&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初发布于 &lt;a href=&#34;https://www.fastly.com/blog/how-fastly-used-kubernetes-to-scale-our-platform-engineering-practice&#34;&gt;Fastly 的博客&lt;/a&gt;作者：Hannah Aubry&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;大约五年前，Fastly 遇到了规模问题。不，不是我们的网络。 Fastly 的网络继续轻松扩展，包括最近轻松突破了我们内部跟踪的 353 Tbps*（太比特每秒）容量阈值。不，我们的问题是扩展我们的开发团队的合作方式以及他们使用的共享资源。对于像 Fastly 这样拥有重要且不断增长的工程功能的公司来说，这是一个常见问题，但对我们来说，它有一个独特的变化 - 因为 Fastly 是整个互联网依赖的少数公司之一，而且因为我们的整个事情都是即时的数字体验，我们的内部规模解决方案不仅必须可靠且有弹性，而且必须非常非常快。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;加入 Fastly 的云和容器服务团队。 2020 年，平台工程团队（现为基础工程团队）正在探索如何使 Fastly 的工程团队更加有效和高效。大约在那个时候，一种新的工程范式正在兴起。 平台工程是“设计和构建工具链和工作流程，使云原生时代软件工程组织的自助服务能力。”以平台工程为重点的组织使用的关键工具之一是&lt;a href=&#34;https://internaldeveloperplatform.org/&#34;&gt;&lt;u&gt;内部开发平台&lt;/u&gt;&lt;/a&gt; (IDP)。 IDP 使工程师个人及其工作的组织受益匪浅，因为它们集中控制云资源、安全策略、用户管理等。换句话说，它们让工程师专注于生产力，并使组织能够轻松分配资源、培训新员工等。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今天，我们将我们的基础工程团队建造的 IDP 称为“高程”。为了了解 Fastly 的 Elevation 平台的工作原理，我与 Fastly 云和容器服务团队的原始成员之一 Danny Kulchinksy 进行了交谈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;here-s-how-fastly-s-elevation-platform-works&#34;&gt;以下是 Fastly 的 Elevation 平台的工作原理&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;像 Elevation 这样的平台旨在为 Fastly 的所有开发人员提供标准化的界面和用户体验。具体来说，它当前在 Fastly 架构中的作用是为开发团队提供公共且集中拥有的基础设施，以构建控制我们网络关键方面的应用程序，例如 &lt;a href=&#34;https://www.fastly.com/blog/turning- a-fast-network-into-a-smart-network-with-autopilot/&#34;&gt;&lt;u&gt;AutoPilot&lt;/u&gt;&lt;/a&gt;，它会自动对我们的&lt;a之间的流量进行负载平衡href=&#34;https://www.fastly.com/network-map/&#34;&gt;&lt;u&gt; Pres 积分ence (POP)&lt;/u&gt;&lt;/a&gt; 以提高性能，或运行 Fastly 的 TLS 功能的 Neptune。以前，Fastly 使用每个应用程序的自定义 &lt;a href=&#34;https://www.chef.io/&#34;&gt;&lt;u&gt;Chef&lt;/u&gt;&lt;/a&gt; 食谱来运行此类应用程序，这导致了很多每个工程团队的维护：不仅要编写说明书，还要弄清楚如何部署应用程序、修补服务器、修复发生的停机时间（这种情况并不总是发生），这样的例子不胜枚举。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Elevation 的核心是 &lt;a href=&#34;https://kubernetes.io/&#34;&gt;&lt;u&gt;Kubernetes&lt;/u&gt;&lt;/a&gt;（以及 Kubernetes 生态系统中的许多其他工具）。团队不是单独管理其基础设施，而是使用标准化部署模式生成容器映像，使他们能够简单地定义要在何处以及如何部署应用程序。从那里，我们的基础工程团队利用控制器来执行所有必要的初始化、秘密管理和自动扩展过程。此外，Elevation 使用自定义控制器来确保我们的工作负载始终符合长期政策。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“因此，我们所做的就是构建一个位于每个 Elevation 集群上的控制器。一旦检测到创建了新的命名空间，它就会自动与&lt;a href=&#34;https://www.vaultproject.io/&#34;&gt;&lt;u&gt;Vault&lt;/u&gt;&lt;/a&gt;（一个开源机密存储系统）进行通信——并创建秘密命名空间、相关策略、角色以及用户入门所需的所有机制。如果我们需要随着时间的推移改变政策，控制器也会自动推出，”丹尼说。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;driven-adoption-and-the-future-of-elevation&#34;&gt;推动 Elevation 的采用和未来&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Elevation 的成功很大程度上归功于云和容器服务团队深思熟虑的规划、执行和内部宣传。迁移团队的成功和积极评价也没有带来任何影响，因为 Elevation 已发展到为 Fastly 的 200 多个服务以及 40 多个团队和项目提供服务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“首先，我们知道 Elevation 需要非常可靠、有弹性，但又要简单。因为这是对工程团队的调整，如果太难或者好处不明确，他们就不会采用。我们花了很长时间才获得各个工程团队的信任，因为一开始没有人愿意使用 Kubernetes。它非常新，有很多笑话，我们花了相当多的努力来证明和证明这是一个可靠且值得使用的平台。但自从我们开始以来，到目前为止，没有任何一个做出这种转变的团队感到后悔。他们都觉得自己比以前过得更好了。”&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当被问及团队接下来希望如何​​发展平台时，Danny 表示他们的主要重点始终是确保我们的开发团队继续拥有良好的经验尽管用户群和复杂性不断增长，但我还是继续使用 Elevation。与 Elevation 早期相比，他不得不对更多提议的功能说“不”或“明年”，但团队的目标保持不变：确保我们的用户有独立操作的自由，同时确保他们不会破坏其他人的功能。错误的服务。 &lt;a href=&#34;https://prometheus.io/&#34;&gt;&lt;u&gt;普罗米修斯&lt;/u&gt;&lt;/a&gt;和&lt;a href=&#34;https://thanos.io/&#34;&gt;&lt;u&gt;灭霸&lt;/u &gt;&lt;/a&gt; 用于监控，&lt;a href=&#34;https://www.fluentd.org/&#34;&gt;&lt;u&gt;FluentD&lt;/u&gt;&lt;/a&gt; 用于自动指标和日志收集。但 Fastly Kubernetes 生态系统中最通用的工具可能是策略引擎 &lt;a href=&#34;https://kyverno.io/&#34;&gt;&lt;u&gt;Kyverno&lt;/u&gt;&lt;/a&gt;。它能够在创建或更新资源时进行变异、验证和生成资源，这使得它对于 Fastly 来说尤其强大。例如，如果开发人员尝试使用 Fastly 的基础设施执行不安全做法或不符合策略的操作（例如，以 root 身份运行应用程序），Kyverno 会根据我们的验证策略处理部署清单并阻止应用程序运行。&lt;/ p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;writing-glass&#34;&gt;打碎玻璃&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;抽象基础设施对于软件开发生命周期来说是一个很好的权宜之计，但是在紧急情况下（例如事故），当开发团队可能需要扩展权限来解决问题时呢？平台工程团队想到了这一点。使用 Elevation 的 Fastly 开发团队可以使用名为 Break Glass 的独特自动化功能（使用 Kyverno 构建），从而扩展了他们对我们生产集群的权限。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;“因此，从本质上讲，服务所有者对于他们在生产环境中可以执行的操作拥有一组特定的权限。一般来说，我们不允许某些操作，因为从安全角度来看它们被认为是有风险的，或者我们有一些合规性要求，我们不能直接应用更改，我们需要经过审批流程。但如果出现紧急情况，如果发生事故，工程师必须进去解决问题，他们可以打破玻璃。一旦他们这样做，就会发生两件事。一是他们获得了有时间范围的提升权限，从两小时开始，但如果需要的话可以延长。二是全面审计追溯同时启动。我们知道谁打碎玻璃以及他们做了什么，因此我们可以在事件发生后返回并了解发生了什么。这一功能帮助我们减少了响应事件的滞后时间，因为它完全是自助服务，同时确保我们始终合规。”Danny 说道。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;了解 Fastly 如何帮助您扩展内部开发平台并取得成功。注册&lt;a href=&#34;https://www.fastly.com/signup/&#34;&gt;免费帐户&lt;/a&gt;或加入我们的&lt;a href=&#34;https://community.fastly.com/中的对话&#34;&gt;论坛&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;* 353 Tbps 连接的 glo截至 2024 年 6 月 30 日的全球产能&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 20 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The technical complexities of externalized authorization】外部化授权的技术复杂性</title>
      <link>https://www.cncf.io/blog/2024/11/18/the-technical-complexities-of-externalized-authorization/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published in the &lt;a href=&#34;https://www.cerbos.dev/blog/the-technical-complexities-of-externalized-authorization&#34;&gt;Cerbos blog&lt;/a&gt; by James Walker&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you want to make your authorization more scalable, easier to maintain, and simpler to integrate with your components – externalized authorization is the way to go. However, these benefits are difficult to realize if you don’t consciously plan for them within your authorization implementation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In reality, externalized authorization can add new technical challenges that aren’t always apparent at the start of a project. In this article, we explore some of the problems with externalized authorization. We’ll also go through several useful strategies to avoid these pitfalls, so you can implement authorization in the right way.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Authorization 101&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Before getting into the concept of externalized authorization, let’s first start with the basics – bear with me.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The backbone of any secure application is authorization. It determines what actions a user can perform within an application. Authorization ensures users only access what they are allowed to. As applications scale, authorization often becomes more complex, especially when dealing with microservices or distributed systems.&amp;nbsp;&lt;em&gt;Spoiler alert – stay tuned for the upcoming release of our ebook on transitioning from monolith to microservices.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is where externalized authorization comes in. But how exactly does it work, and what should you watch out for?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Externalized authorization – why and what?&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/decoupled-authorization&#34;&gt;Externalized authorization&lt;/a&gt;&amp;nbsp;refers to separating your service’s authorization routines from your main application code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In monolithic applications, authorization is handled by functions and classes that live inside your single codebase. Externalized authorization refers to repositioning these components as a standalone service that your main code interfaces with. The interface normally consists of network calls to an API that the authorization component provides.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Externalized authorization is often used together&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/ecosystem#:~:text=Bring%20your%20own%20identity&#34;&gt;with external identity providers.&lt;/a&gt;&amp;nbsp;You can delegate user account storage and role management to an authentication platform that’s purpose-built for the task. Then your application can pass this context onto the authorization layer to check whether the roles assigned to a user authorize an action or not with all the added context of the application.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This model keeps authorization logic separate from your application, making it more&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/testable-authorization&#34;&gt;testable&lt;/a&gt;&amp;nbsp;and easier to iterate upon in isolation. It also centralizes the implementation of authorization policies, ensuring all your services apply the same restrictions. Any new services you develop can reuse the externalized authorization component without duplicating its logic. This isn’t possible when authorization is tightly coupled to specific codebases. If you want to learn why companies are turning to externalized (decoupled) authorization more and more,&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/blog/why-organizations-are-turning-to-decoupled-authorization-solutions&#34;&gt;check out this blog.&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Complexities when implementing externalized authorization&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Authorization logic that’s written directly into application components is inflexible, and externalized authorization has clear advantages over it. Externalizing authorization into its own service can increase overall complexity, though. You have to develop and maintain two services while ensuring they remain compatible with each other. Here are five specific kinds of technical complexity you’ll face.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Integration with the main app or service&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Plugging the externalized authorization layer back into your main application can be harder than you think. Whereas authorization has historically been a synchronous process without side effects, externalizing introduces the potential for system failures when the authorization service can’t be reached or an unknown response is received.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The externalized authorization component must be carefully integrated to ensure the implementation is reliable. The application will need to retry calls to the authorization layer that fail due to a flaky network, for example. When no response can be obtained, perhaps because the authorization component has failed, the app should deny the user’s request to prevent authorization being inadvertently granted.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Each app you develop will need to integrate the authorization layer before it can be consumed. These integrations should be backed by tests that verify the app correctly handles different authorization outcomes, such as grant, deny, and failure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Management of user accounts and permissions&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Externalizing authorization from application code doesn’t mean you can forget about user accounts and permissions. These still need to be managed by your authentication layer, either directly within your account management component or with an external identity provider.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The service you use should be flexible enough to store all the user data you require. All but the simplest systems will require a granular permissions model with support for roles and groups. You’ll need a mechanism for setting up and maintaining user attributes and role assignments, either via scriptable APIs for automated provisioning or an accessible web UI for human use.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Externalizing authorization without planning how you’ll manage user accounts can cause problems as you reintegrate your components into your application. Apps need a dependable mechanism for establishing the user’s identity, retrieving relevant attributes such as their team and project, and checking which permissions have been assigned. All this info has to be centralized across your services to preserve consistency.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Handling data filtering and pagination&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Services that filter data and display results over multiple pages need to be adjusted so users are only shown the items they can interact with. For example, an API request for the first ten invoices in a system could expose a different set of items depending on the user: department leaders might only see invoices approved by their department, while accounting staff have unfiltered access.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To achieve this, you’ll need to run your authorization policies against each item included in resource lists fetched by your application. The policies should verify that the items can be used in the current authorization context defined by the characteristics of the resource and the requesting user.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Unfortunately, performing authorization checks for lists of hundreds or thousands of records is often an inefficient process. It also has knock-on impacts on your pagination routines. When an item gets discarded because authorization is denied, a replacement must be loaded from the database to fill up the correct page size.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To properly address this complexity, plan how you’ll integrate your data queries with your externalized authorization policies. Select an authorization provider that includes features such as&amp;nbsp;&lt;a href=&#34;https://cerbos.dev/blog/filtering-data-using-authorization-logic&#34;&gt;query plans&lt;/a&gt;&amp;nbsp;to preemptively retrieve the list of resources that a given user can interact with. Use the plan to filter database queries at the point they’re made, instead of individually running authorization policies against each item in your result sets.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Maintaining security and privacy&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Security weaknesses and privacy concerns can be caused by externalized authorization. Any new service increases your threat perimeter and creates an additional target for attackers. Splitting authorization out of your application converts it into a standalone component that might be easier for bad actors to manipulate.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Traditional authorization models are invisible from outside your application. Authorization checks occur within the code, providing no opportunities for attackers to investigate their logic. Externalized authorization can be more visible if your service isn’t properly protected. Network activity logs reveal the requests being made and the results obtained in response.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Insecure authorization APIs can leak data too. It’s vital to ensure your authorization service only responds to requests from known application services via a trusted service-to-service call. Otherwise, a rogue user or attacker could exfiltrate sensitive details by making direct calls to the authorization API.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Ensuring scalability and reliability&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Authorization is a critical application component. It’s involved in almost every user interaction, demanding exceptional scalability and reliability. Poorly optimized authorization is a bottleneck that compromises your whole system’s performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Splitting authorization into its own service can increase latency as your apps have to wait for authorization checks to complete. Too many pending calls will increase congestion and lead to resource contention. If your authorization layer can’t scale with user activity, people will be left waiting at times of heavy usage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Failure resilience is equally important. If authorization goes down, users won’t be able to log in or access functions that require permission checks. Authorization services should be deployed as multiple replicated instances to produce a fault tolerant architecture that can withstand individual instance crashes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Implement externalized authorization the right way&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Externalized authorization doesn’t have to be burdensome. You can mitigate complexity by sticking to proven strategies that promote an effective implementation. Building upon standard microservices patterns is a good starting point, but the following techniques offer specific best practices for splitting authorization from application code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Use industry-standard protocols and frameworks&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Whilst authentication is a known problem and standards such as OAuth2 and OpenID Connect have made these solution plugins and play, authorization is still in its early phases or standardization.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are common best practices and approaches for RBAC, ABAC, and PBAC making use of the PDP/PIP/PEP model, and now there is an effort underway to define a standard for how all the components involved in the authorization ceremony interact.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Use RBAC when it’s necessary to assign permissions based on various roles.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use ABAC when access needs to be granted depending on particular attributes of both the user and resource.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use PBAC when access in intricate environments needs to be dynamically managed through a policy engine and a policy definition language, to define and enforce rules.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The OpenID AuthZEN Working Group – of which Cerbos is a key member – is defining the specification to ensure adding fine-grained authorization is just as simple and interoperable.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Favor prebuilt authorization platforms and services&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://stylish-appliance-1c1cc1c30d.media.strapiapp.com/cerbos_comic_strip_555a0b1bd0.jpg&#34; alt=&#34;cerbos_comic_strip.jpg&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Much like building your own IdP, starting an authorization platform from scratch is a daunting task. You’re responsible for checking your authorization logic and maintaining security standards. Selecting a dedicated platform such as&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/&#34;&gt;Cerbos&lt;/a&gt;&amp;nbsp;gives you all the benefits of externalized authorization without the complexity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These systems sit outside your stack and are integrated using their public APIs. You can register user accounts, handle logins, and set up authorization policies using&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/rbac&#34;&gt;RBAC&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/abac&#34;&gt;ABAC&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/pbac&#34;&gt;PBAC&lt;/a&gt;. They remove the complexity of inventing your own mechanisms for storing, evaluating, and querying authorization logic.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Seek specialized expertise and resources when building your own solutions&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Some systems demand their own authorization layers either because of their sensitivity or due to legacy compatibility requirements. Developing your own authorization solution can be the only option in these circumstances, but you don’t have to do it on your own.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Minimizing features and keeping code paths lean is a good way to lessen security dangers and remove complexity. After distilling your solution to its essential requirements, you can more readily compare it to reference architectures or invite an external review. Seeking an audit and penetration test from a specialized authorization security team can provide confidence that your system’s protected, allowing you to get back to building your business functionality.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Start developing your own solution by clearly listing the vital features it requires. Next, plan out how you’ll deploy your authorization service, protect it from unauthorized access, and scale it to achieve sustained performance. You can then start working on the technical implementation. Try referring to open source authorization platforms if you need more guidance as many of the challenges you’ll face will have already been encountered by others.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Externalizing authorization from the code of individual applications is a best practice that enforces consistent authorization logic across services, simplifies testing, and is more scalable when implemented correctly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nonetheless, too many software teams struggle to effectively utilize externalized authorization because of the extra technical complexity it creates. Poorly planned implementations can be unreliable and difficult to maintain.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Proactively developing strategies to identify and address this complexity&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/blog/decoupled-authorization-navigating-technical-challenges-and-best-practices&#34;&gt;will let you build and scale a externalized authz system&lt;/a&gt;&amp;nbsp;for your next project. Involve project managers, developers, and service operators to canvass opinion on potential drawbacks of the approach. Once you’ve identified any problems, you can add relevant mitigations to your development plan.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The measures you choose can be specific technical changes, such as implementing rate limiting to improve&amp;nbsp;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/security-standards&#34;&gt;security&lt;/a&gt;, or more general steps that support your solution’s success. Extensive test suites, adoption of standardized protocols, and the use of expert guidance when needed all strip away the complexity of externalized authz.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Want more details on getting started with authorization?&amp;nbsp;&lt;a href=&#34;https://meetings.hubspot.com/aandreasyan/decoupledauthz?uuid=995a3380-4ca2-46be-8b52-10baeff2b80f&amp;amp;__hstc=67209934.f022f555d6ee30426b98cd158bc3a6b6.1731923257347.1731923257347.1731923257347.1&amp;amp;__hssc=67209934.1.1731923257347&amp;amp;__hsfp=2110343318&#34;&gt;Set up a call with a Cerbos Engineer and ask us anything.&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初由 James 在 &lt;a href=&#34;https://www.cerbos.dev/blog/the-technical-complexities-of-externalized-authorization&#34;&gt;Cerbos 博客&lt;/a&gt;中发布沃克&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想让您的授权更具可扩展性、更易于维护并且更易于与组件集成 - 外部化授权是您的最佳选择。但是，如果您在授权实施中没有有意识地规划这些好处，则很难实现这些好处。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;实际上，外部化授权可能会带来新的技术挑战，而这些挑战在项目开始时并不总是显而易见。在本文中，我们探讨了外部化授权的一些​​问题。我们还将介绍几种有用的策略来避免这些陷阱，以便您可以以正确的方式实施授权。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;授权101&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在讨论外部化授权的概念之前，让我们首先从基础知识开始 - 请耐心等待。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;任何安全应用程序的支柱都是授权。它决定用户可以在应用程序中执行哪些操作。授权确保用户只能访问他们被允许的内容。随着应用程序的扩展，授权通常变得更加复杂，尤其是在处理微服务或分布式系统时。 &lt;em&gt;剧透警告 - 请继续关注我们即将发布的有关从单体架构过渡到微服务的电子书。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这就是外部化授权的用武之地。但是它到底是如何工作的，您应该注意什么？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;外部授权 – 为什么以及什么？&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/de Coupled-authorization&#34;&gt;外部授权&lt;/a&gt;是指将服务的授权例程与主应用程序分开代码。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在单体应用程序中，授权由位于单个代码库内的函数和类处理。外部化授权是指将这些组件重新定位为与主代码交互的独立服务。该接口通常由对授权组件提供的 API 的网络调用组成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;外部授权通常一起使用&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/ecosystem#:~:text=Bring%20your%20own%20identity&#34;&gt;与外部身份提供商。&lt;/a&gt;您可以将用户帐户存储和角色管理委托给专门为此任务构建的身份验证平台。然后，您的应用程序可以将此上下文传递到授权层，以检查分配给用户的角色是否授权应用程序的所有添加上下文的操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此模型将授权逻辑与您的应用程序分开，使其更加&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/testable-authoriza”可测试&lt;/a&gt;并且更易于单独迭代。它还集中了授权策略的实施，确保您的所有服务都应用相同的限制。您开发的任何新服务都可以重用外部化授权组件，而无需重复其逻辑。当授权与特定代码库紧密耦合时，这是不可能的。如果您想了解为什么公司越来越多地转向外部化（解耦）授权，&lt;a。 href=&#34;https://www.cerbos.dev/blog/why-organizations-are-turning-to-de Coupled-authorization-solutions&#34;&gt;查看此博客。&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;实现外部化授权时的复杂性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;直接写入应用程序组件的授权逻辑不灵活，而外部化授权比它有明显的优势。不过，将授权外部化到其自己的服务中可能会增加整体复杂性。您必须开发和维护两项服务，同时确保它们相互兼容。以下是您将面临的五种具体的技术复杂性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;与主应用或服务集成&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将外部化授权层重新插入主应用程序可能比您想象的要困难。虽然授权历来是一个没有副作用的同步过程，但当无法访问授权服务或收到未知响应时，外部化可能会导致系统故障。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;必须仔细集成外部化的授权组件，以确保实现的可靠性。例如，应用程序需要重试由于网络不稳定等原因而失败的授权层调用。当无法获得响应时，可能是因为授权组件失败，应用程序应该拒绝用户的请求，以防止无意中授予授权。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您开发的每个应用程序都需要集成授权层才能使用。这些集成应该得到测试的支持，以验证应用程序是否正确处理不同的授权结果，例如授权、拒绝和失败。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;用户帐户和权限的管理&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从应用程序代码外部化授权并不意味着您可以忘记用户帐户和权限。这些仍然需要由您的身份验证层直接在您的帐户管理组件内或通过外部身份提供商进行管理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您使用的服务应该足够灵活，能够存储您需要的所有用户数据。除了最简单的系统之外，所有系统都需要一个支持角色和组的精细权限模型。您需要一种机制来设置和维护用户属性和角色分配，可以通过用于自动配置的可编写脚本的 API，也可以通过供人类使用的可访问的 Web UI。&lt;/p&gt;&lt;p&gt;在没有规划如何管理用户帐户的情况下外部化授权可能会在将组件重新集成到应用程序中时导致问题。应用程序需要可靠的机制来建立用户身份、检索相关属性（例如其团队和项目）以及检查已分配的权限。所有这些信息都必须集中在您的服务中以保持一致性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;处理数据过滤和分页&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;需要调整过滤数据并在多个页面上显示结果的服务，以便用户仅看到他们可以交互的项目。例如，针对系统中前十张发票的 API 请求可能会根据用户公开一组不同的项目：部门领导可能只能看到其部门批准的发票，而会计人员则拥有未经过滤的访问权限。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要实现此目标，您需要针对应用程序获取的资源列表中包含的每个项目运行授权策略。策略应验证这些项目是否可以在由资源和请求用户的特征定义的当前授权上下文中使用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不幸的是，对数百或数千条记录的列表执行授权检查通常是一个低效的过程。它还会对您的分页例程产生连锁影响。当某个项目因授权被拒绝而被丢弃时，必须从数据库加载替换项以填充正确的页面大小。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了正确解决这种复杂性，请规划如何将数据查询与外部化授权策略集成。选择包含&lt;a href=&#34;https://cerbos.dev/blog/filtering-data-using-authorization-logic&#34;&gt;查询计划&lt;/a&gt;等功能的授权提供商，以抢先检索给定的用户可以与之交互。使用该计划在进行数据库查询时对其进行过滤，而不是针对结果集中的每个项目单独运行授权策略。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;维护安全和隐私&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;外部化授权可能会导致安全漏洞和隐私问题。任何新服务都会增加您的威胁范围，并为攻击者创造额外的目标。将授权从您的应用程序中分离出来，将其转换为一个独立的组件，这可能更容易被不良行为者操纵。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;传统的授权模型从应用程序外部是不可见的。授权检查发生在代码内，使攻击者没有机会调查其逻辑。如果您的服务没有得到适当的保护，外部化授权可能会更加明显。网络活动日志显示正在发出的请求以及响应中获得的结果。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不安全的授权 API 也会泄露数据。确保您的授权服务至关重要仅通过可信的服务到服务调用响应来自已知应用程序服务的请求。否则，恶意用户或攻击者可能会通过直接调用授权 API 来泄露敏感详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;确保可扩展性和可靠性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;授权是一个关键的应用程序组件。它几乎涉及所有用户交互，需要卓越的可扩展性和可靠性。授权优化不佳是影响整个系统性能的瓶颈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;将授权拆分到自己的服务中可能会增加延迟，因为您的应用必须等待授权检查完成。过多的待处理调用会增加拥塞并导致资源争用。如果您的授权层无法随着用户活动而扩展，那么人们在大量使用时将不得不等待。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;故障恢复能力同样重要。如果授权中断，用户将无法登录或访问需要权限检查的功能。授权服务应部署为多个复制实例，以生成能够承受单个实例崩溃的容错架构。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;以正确的方式实现外部化授权&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;外部授权不一定是繁重的。您可以通过坚持促进有效实施的行之有效的策略来降低复杂性。基于标准微服务模式构建是一个很好的起点，但以下技术提供了从应用程序代码中分离授权的具体最佳实践。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;使用行业标准协议和框架&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然身份验证是一个已知问题，并且 OAuth2 和 OpenID Connect 等标准已经使这些解决方案成为插件并发挥作用，但授权仍处于早期阶段或标准化阶段。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用 PDP/PIP/PEP 模型的 RBAC、ABAC 和 PBAC 有常见的最佳实践和方法，现在正在努力定义授权仪式中涉及的所有组件如何交互的标准.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;当需要根据不同角色分配权限时，请使用 RBAC。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;当需要根据用户和资源的特定属性授予访问权限时，请使用 ABAC。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;当需要通过策略引擎和策略定义语言动态管理复杂环境中的访问以定义和执行规则时，请使用 PBAC。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenID AuthZEN 工作组（Cerbos 是其中的关键成员）正在定义规范，以确保添加细粒度授权同样简单且可互操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;青睐预构建的授权平台和服务&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://stylish-appliance-1c1cc1c30d.media.strapiapp.com/cerbos_comic_strip_555a0b1bd0.jpg&#34; alt=&#34;cerbos_comic_strip.jpg&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;就像构建自己的 IdP 一样，从头开始启动授权平台是一项艰巨的任务。您负责检查授权逻辑并维护安全标准。选择 &lt;a href=&#34;https://www.cerbos.dev/&#34;&gt;Cerbos&lt;/a&gt; 等专用平台可为您提供外部化授权的所有优势，而且不会带来任何复杂性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些系统位于您的堆栈之外，并使用其公共 API 进行集成。您可以使用 &lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/rbac&#34;&gt;RBAC&lt;/a&gt; 注册用户帐户、处理登录并设置授权策略，&lt; a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/abac&#34;&gt;ABAC&lt;/a&gt; 和 &lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/pbac&#34;&gt;PBAC&lt;/a&gt;。它们消除了发明自己的存储、评估和查询授权逻辑机制的复杂性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;在构建自己的解决方案时寻求专业知识和资源&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一些系统需要自己的授权层，要么是因为它们的敏感性，要么是因为遗留的兼容性要求。在这些情况下，开发您自己的授权解决方案可能是唯一的选择，但您不必自己这样做。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最小化功能并保持代码路径精简是减少安全危险和消除复杂性的好方法。在根据基本要求提炼您的解决方案后，您可以更轻松地将其与参考架构进行比较或邀请外部审查。寻求专业授权安全团队的审核和渗透测试可以让您确信您的系统受到保护，从而使您能够重新构建业务功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过清楚地列出所需的重要功能来开始开发您自己的解决方案。接下来，规划如何部署授权服务，防止未经授权的访问，并扩展它以实现持续的性能。然后您可以开始进行技术实施。如果您需要更多指导，请尝试参考开源授权平台，因为您将面临的许多挑战其他人已经遇到过。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从各个应用程序的代码中外部化授权是一种最佳实践，它可以在服务之间强制执行一致的授权逻辑，简化测试，并且在正确实施时更具可扩展性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;尽管如此，太多的软件团队都在努力有效地利用外部化授权，因为它会带来额外的技术复杂性。计划不周的实施可能不可靠且难以维护。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;积极制定策略来识别和解决这种复杂性&lt;a href=&#34;https://www.cerbos.dev/blog/de Coupled-authorization-navigating-technical-challenges-and-best-practices&#34;&gt;将让您为您的下一个项目构建和扩展外部化授权系统&lt;/a&gt;项目。让项目经理、开发人员和服务运营商参与进来，就该方法的潜在缺点征求意见。一旦发现任何问题，您就可以将相关的缓解措施添加到您的开发计划中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您选择的措施可以是具体的技术变更，例如实施速率限制以改进&lt;a href=&#34;https://www.cerbos.dev/features-benefits-and-use-cases/security-standards&#34;&gt;安全性&lt;/a&gt;，或更一般的支持您的解决方案成功的步骤。广泛的测试套件、标准化协议的采用以及在需要时使用专家指导都消除了外部化授权的复杂性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;想要了解有关授权入门的更多详细信息吗？ &lt;一href=&#34;https://meetings.hubspot.com/aandreasyan/de Coupledauthz?uuid=995a3380-4ca2-46be-8b52-10baeff2b80f&amp;__hstc=67209934.f022f 555d6ee30426b98cd158bc3a6b6.1731923257347.1731923257347.1731923 257347.1&amp;__hssc=67209934.1.1731923257347&amp;__hsfp=2110343318&#34;&gt;设置与 Cerbos 工程师通话并询问我们任何问题。&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 17 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【APIOps and an API gateway: Get your development groove back】APIOps 和 API 网关：恢复您的开发状态</title>
      <link>https://www.cncf.io/blog/2024/11/20/apiops-and-an-api-gateway-get-your-development-groove-back/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on the &lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway&#34;&gt;ngrok blog&lt;/a&gt; by Joel Hans&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Developers love a groove.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;No, I don’t mean a touch of jazz to class up your workday, but the specific patterns you rely on for building great applications. Think of the grooves in the vinyl you might play for said jazz. Grooves that work, like development environments, version control, declarative configurations, code review with your peers, CI/CD pipelines for your test suites…&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By settling into that groove, you get shifted-left security without breaking your brain, more transparency into what everyone is building together, and higher quality. That’s the undeniable advantage of working with these proven traditions. The developer experience for building applications stays relatively strong through production. In the cases where it gets operationally messy, you still have plenty of exciting&amp;nbsp;&lt;em&gt;software delivery&lt;/em&gt;&amp;nbsp;and&amp;nbsp;&lt;em&gt;DevSecOps&lt;/em&gt;&amp;nbsp;platforms to pick from that will help you get over the finish line.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Taking APIs to production in the same groove is another entirely different matter.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;&lt;em&gt;Tip: Too eager to peek at the real infrastructure behind an APIOps workflow with ngrok? Skip down to the&amp;nbsp;&lt;/em&gt;&lt;strong&gt;&lt;em&gt;Building with ngrok’s production-grade API gateway and unified ingress&amp;nbsp;&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;section.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Most of the entrenched API gateway providers—both those deployed on-premises and in the cloud—leave you hanging right before you deploy to production. When you try to enable must-have policies like JWT-based authentication, you have to trudge your way through the gateway’s awkward web console, where you get the joy of working with languages like CSharpScript. Adding rate limits isn’t much better, with a sequence of&amp;nbsp;&lt;code&gt;curl&lt;/code&gt;&amp;nbsp;requests to the admin API.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Even if they do offer a more developer-friendly configuration process, it’s usually an afterthought they’ve tacked on to keep up with the competition. Using it requires a painful rip-and-replace process to get yourself back to feature parity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These outcomes might be fine if you have a dedicated DevOps or platform engineering team who handles all operational worries on your behalf. Doesn’t that sound nice? The reality is that most developers can’t afford—in time, cognitive load, and risk to quality—to jump grooves at the last possible moment. Abandoning a Git-driven development lifecycle when you need good developer experience can’t be a viable long-term solution.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;How much would you benefit from defining API gateway configuration in code, version-controlled traffic policies, and repeatable deployments in any environment?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-origins-and-applications-of-apiops&#34;&gt;The origins and applications of APIOps&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway#the-origins-and-applications-of-apiops&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you haven’t heard of APIOps, here’s the TL;DR: APIOps aims to integrate the beneficial processes (more grooves) of DevOps and GitOps into API development.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;APIOps borrows the automation and integration fundamentals from DevOps to improve your collaboration across the entire API lifecycle, speeding up your release cycle while minimizing bugs. It also folds in what makes GitOps great for automating how you provision infrastructure, like relying on Infrastructure as Code (IaC) and formal change mechanisms, for more manageable and higher-quality production deployments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Because your Git repository is the canonical source of truth, dictating not just what the upstream service is but how it’s made available in production, you can start to answer that last question:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Set configurations in code?&lt;/strong&gt;&amp;nbsp;When you declare how your API gateway should operate using IaC fundamentals, you don’t have to worry about documenting the exact&amp;nbsp;&lt;code&gt;curl&lt;/code&gt;&amp;nbsp;commands you used against the gateway provider’s API.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Version-control your policies?&amp;nbsp;&lt;/strong&gt;With Git, you collaborate with peers from a canonical source of truth. Your API—its application code and gateway configurations—&lt;em&gt;is&lt;/em&gt;&amp;nbsp;your Git repository and nothing else.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Deploy in any environment with the same process?&lt;/strong&gt;&amp;nbsp;Because GitOps (and thus APIOps) configurations define the&amp;nbsp;&lt;em&gt;desired state&lt;/em&gt;&amp;nbsp;of your deployment, they repeat the same infrastructure every time you deploy. That could be on your local development environment or your production server.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;GitOps and APIOps also gives you access to some other benefits:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Transparency into the architecture and operation of your deployment, as everything&amp;nbsp;&lt;em&gt;must&lt;/em&gt;&amp;nbsp;reside within the same repository.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A built-in audit log of API configuration and policy changes—just look at your commit history!&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Easier rollbacks via&amp;nbsp;&lt;code&gt;git revert&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Repeatable deployments, which you can transfer to any region or cloud provider, that become the first step in your new disaster recovery plan.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Consistent application of essential traffic policies—again, you&amp;nbsp;&lt;em&gt;must&lt;/em&gt;&amp;nbsp;implement them in Git, not in your gateway provider’s web console or admin API.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Your line of questioning then becomes: Does your API gateway even let you do APIOps? If&amp;nbsp;&lt;em&gt;yes&lt;/em&gt;, the conversation quickly devolves into: How do you actually get the process right? Even with the right groove right in front of you, it’s easy to lead your team astray.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;case-no-1-pure-developer-freedom&#34;&gt;Case No. 1: Pure developer freedom&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway#case-no-1-pure-developer-freedom&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The younger the company, the more likely you are to have picked up an API gateway provider that allows for some degree of APIOps, and the more likely you are to let everyone create, configure, and deploy APIs with abandon. You need to drive toward that MVP or pivot before you burn through your cash, so it doesn’t matter that every API is unique.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Different providers. Different authentication policies. Different repositories. Different branch protections. Different disaster plans. Different ideas of what “quality,” “security,” and “availability” mean.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can move fast, but it sure is chaotic.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;case-no2-centralized-devopsplatform-management&#34;&gt;Case No.2: Centralized DevOps/platform management&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway#case-no2-centralized-devopsplatform-management&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Larger and older companies are more likely to have dedicated teams who “own” the APIOps process. They maintain the quality of the production environment by establishing guardrails that dictate how developers should design and deploy APIs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You’re grateful for their high standards and not having to worry so much about the operational end of the API lifecycle, but you also feel the pain of pushing all your hard work through them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Your APIs might be perfectly stable, but the congestion slows you down.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;find-the-common-problem&#34;&gt;Find the common problem!&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway#find-the-common-problem&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You might think APIOps, as a methodology, is somehow flawed. If it can’t help developers get back into their groove, what’s the point? The failure mode here isn’t APIOps, but rather how most API gateways handle ingress and the global delivery of your APIs. In other words: They don’t.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Deployed API gateways operate from a single point of failure and require sophisticated Ops handiwork, and cloud API gateways lock you into specific cloud providers and don’t offer nearly as much deep customization. In either case, the networking and operational task of connecting multiple API gateways to your infrastructure and a global delivery network is far from your core competency. You’re still on the hook for high availability and failover processes. You’re still waiting on the NetOps team to give you the green light on an API you wrapped up two weeks ago.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;APIOps makes the early phases of the lifecycle developer-friendly, but you still need developer-friendly ingress at the very end of the line.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;building-with-ngroks-production-grade-api-gateway-and-unified-ingress&#34;&gt;Building with ngrok’s production-grade API gateway and unified ingress&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway#building-with-ngroks-production-grade-api-gateway-and-unified-ingress&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We built&amp;nbsp;&lt;a href=&#34;https://ngrok.com/use-cases/api-gateway&#34;&gt;ngrok’s API gateway&lt;/a&gt;&amp;nbsp;to be both flexible and developer-defined, which means it’s ready for APIOps workflows that work in the same groove you already know and love. Adopting APIOps gets quite straightforward once you have unified ingress from ngrok.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For example, you start by developing a new API in a single Git repository for your backend service, a&amp;nbsp;&lt;code&gt;Dockerfile&lt;/code&gt;&amp;nbsp;to containerize said service, and a few IaC files in the form of Kubernetes manifests in YML.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Git-based foundation? ✅&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Next, you provision a Kubernetes cluster—could be a&amp;nbsp;&lt;code&gt;minikube&lt;/code&gt;&amp;nbsp;cluster on your local workstation for a proof of concept, or its production-grade counterpart in GKE. Use Helm to install&lt;a href=&#34;https://github.com/ngrok/kubernetes-ingress-controller&#34;&gt;&amp;nbsp;ngrok Kubernetes Operator&lt;/a&gt;&amp;nbsp;to take care of secure and flexible ingress, followed by a GitOps tool like&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/&#34;&gt;&amp;nbsp;Argo CD&lt;/a&gt;&amp;nbsp;to tackle all the work around continuous deployment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Automated and repeatable GitOps deployments using Git as your source of truth? ✅&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Next, you add API gateway&amp;nbsp;&lt;a href=&#34;https://ngrok.com/docs/http/traffic-policy/?cty=k8s&#34;&gt;Traffic Policies&lt;/a&gt;&amp;nbsp;to your existing IaC by layering new CRDs and referencing them throughout your HTTPRoutes, which the Kubernetes Operator uses to direct incoming traffic to your containerized backend API service. Traffic Policies execute on both inbound requests and outbound traffic, allowing you to quickly layer in&amp;nbsp;&lt;a href=&#34;https://ngrok.com/blog-post/new-feature-jwt-validation&#34;&gt;JWT authentication&lt;/a&gt;, rate limiting, and plenty of&amp;nbsp;&lt;a href=&#34;https://ngrok.com/blog-post/api-gateway-policy-management-examples&#34;&gt;other custom rules&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;API gateway policies defined by YAML and version-controlled with Git? ✅&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Finally, you can enable Argo CD’s auto syncing feature to automatically deploy every merged commit, whether that’s a bugfix on your backend service or a new authentication method to protect your public API from abuse.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Full-on APIOps? ✅&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://cdn.prod.website-files.com/63ed707844acb1ccf1ccb700/66b286c1b60b98a287f0f729_66b285af1441b55a40167776_blog-APIOps_diagram.png&#34; alt=&#34;Image&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ngrok helps you avoid the problematic cases mentioned above through unified ingress. No more worrying about networking infrastructure or TLS certificate generation. No more pondering over a global delivery network, high availability, or geo-aware failover. Developers work efficiently on the convenience API gateway interface, and operators—when they are indeed in the picture—to green-light new deployments faster than before.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;No chaos. No congestion. Just one smooth groove.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Check out our&amp;nbsp;&lt;a href=&#34;https://ngrok.com/docs/integrations/argocd/apiops&#34;&gt;how-to guide&lt;/a&gt;&amp;nbsp;for a full walkthrough of the technical setup to bring APIOps to your next API project with ngrok.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the end, your APIOps workflow on ngrok comes with some extra benefits, too:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Environmental independence&lt;/strong&gt;, so that a single Git repository deploys the exact same on your local machine, in a staging environment spun up by your CI/CD process, or in production.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Global acceleration and load balancing&lt;/strong&gt;&amp;nbsp;to minimize latency no matter where your API consumers are requesting from and enable automatic recoveries from failures to keep your APIs online.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;More developer autonomy&lt;/strong&gt;&amp;nbsp;to control API policies like rate limiting and request/response manipulation, plus deeper governance guardrails, without relying entirely on operational peers.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Built-in DDoS protection&amp;nbsp;&lt;/strong&gt;that blocks both malicious attacks and misconfigurations from overloading your upstream deployment.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Observability features&lt;/strong&gt;&amp;nbsp;like the&amp;nbsp;&lt;a href=&#34;https://ngrok.com/blog-post/network-traffic-inspector-ga&#34;&gt;Traffic Inspector&lt;/a&gt;&amp;nbsp;to capture and even replay specific requests directly through your ngrok dashboard.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;whats-next&#34;&gt;What’s next?&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway#whats-next&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Your new API development groove now includes ngrok—if you haven’t yet,&amp;nbsp;&lt;a href=&#34;https://dashboard.ngrok.com/signup&#34;&gt;sign up now&lt;/a&gt;&amp;nbsp;to start defining your API gateway through Git and IaC, not obscure admin API calls.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once you have an account, check out not just the how-to guide, but all our other resources on how ngrok’s developer-defined API gateway works alongside Kubernetes APIOps-ready deployments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;How-to guide:&amp;nbsp;&lt;a href=&#34;https://ngrok.com/docs/integrations/argocd/apiops&#34;&gt;Deploy a production API and gateway with APIOps using Argo CD and ngrok&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;ngrok blog:&amp;nbsp;&lt;a href=&#34;https://ngrok.com/blog-post/policy-support-in-gateway-api&#34;&gt;Traffic Policy support for the Kubernetes Gateway API&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Docs:&amp;nbsp;&lt;a href=&#34;https://ngrok.com/docs/k8s/user-guide/#gateway-composition&#34;&gt;Kubernetes Operator user guide — Traffic Policy gateway composition&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once you’ve tried our how-to guide or bravely implemented the core APIOps concepts in your own infrastructure, we’d love to hear from you in our new&amp;nbsp;&lt;a href=&#34;https://github.com/ngrok/ngrok&#34;&gt;ngrok Community Repo&lt;/a&gt;, the best place for all discussions around ngrok, including bug reports and product feedback.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://cdn.prod.website-files.com/63ed707844acb1ccf1ccb700/66c7811361684ecb53af703d_jhans.jpg&#34; alt=&#34;Joel Hans &#34; style=&#34;width:139px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway&#34;&gt;Joel Hans&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Joel Hans is a Senior Developer Educator at ngrok. He has plenty of strong thoughts about documentation, developer education, developer marketing, and more.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初由 Joel Hans 发布在 &lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway&#34;&gt;ngrok 博客&lt;/a&gt;上&lt;/em &gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开发人员喜欢一种节奏。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不，我的意思不是用爵士乐来提升你的工作日，而是你构建优秀应用程序所依赖的特定模式。想想您可能为上述爵士乐演奏的黑胶唱片中的凹槽。有效的常规，例如开发环境、版本控制、声明性配置、与同行一起进行代码审查、测试套件的 CI/CD 管道……&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过适应这种模式，您可以在不费脑子的情况下获得左移的安全性，对每个人共同构建的内容更加透明，并且质量更高。这是与这些经过验证的传统合作的不可否认的优势。开发人员构建应用程序的经验在生产过程中保持相对较强。在操作变得混乱的情况下，您仍然有大量令人兴奋的&lt;em&gt;软件交付&lt;/em&gt;和&lt;em&gt;DevSecOps&lt;/em&gt;平台可供选择，这将帮助您冲过终点线。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以同样的方式将 API 投入生产是另一回事。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;&lt;em&gt;提示：太渴望使用 ngrok 查看 APIOps 工作流程背后的真实基础设施？跳到&lt;/em&gt;&lt;strong&gt;&lt;em&gt;使用 ngrok 的生产级 API 网关和统一入口进行构建&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;部分。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;大多数根深蒂固的 API 网关提供商（无论是在本地部署还是在云中部署）都让您在部署到生产环境之前犹豫不决。当您尝试启用基于 JWT 的身份验证等必备策略时，您必须艰难地通过网关笨拙的 Web 控制台，在这里您可以享受使用 CSharpScript 等语言的乐趣。通过向管理 API 发出一系列 &lt;code&gt;curl&lt;/code&gt; 请求，添加速率限制也好不了多少。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;即使他们确实提供了对开发人员更加友好的配置流程，但这通常是他们为了跟上竞争而添加的事后想法。使用它需要一个痛苦的推倒重来的过程才能让自己恢复到功能平等。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您有专门的 DevOps 或平台工程团队来代表您处理所有运营问题，那么这些结果可能会很好。听起来不是很好吗？现实情况是，大多数开发人员无法承担在时间、认知负荷和质量风险方面在最后一刻跳槽的后果。当您需要良好的开发人员体验时，放弃 Git 驱动的开发生命周期并不是一个可行的长期解决方案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在代码中定义 API 网关配置、版本控制的流量策略以及在任何环境中的可重复部署会给您带来多少好处？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-origins-and-applications-of-apiops&#34;&gt;APIOps的起源和应用&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway#the-origins-and-applications-of-apiops &#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您还没有听说过 APIOps，这里是 TL;DR：APIOps 旨在将 DevOps 和 GitOps 的有益流程（更多常规）集成到 API 开发中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;APIOps 借用 DevOps 的自动化和集成基础知识来改善整个 API 生命周期中的协作，加快发布周期，同时最大限度地减少错误。它还融合了 GitOps 非常适合自动化配置基础设施的优势，例如依赖基础设施即代码 (IaC) 和正式的变更机制，以实现更易于管理和更高质量的生产部署。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;因为您的 Git 存储库是事实的规范来源，不仅规定了上游服务是什么，还规定了它如何在生产中可用，因此您可以开始回答最后一个问题：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;在代码中设置配置？&lt;/strong&gt;当您使用 IaC 基础声明 API 网关应如何运行时，您无需担心记录您使用的具体 &lt;code&gt;curl&lt;/code&gt; 命令针对网关提供商的 API。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;对您的策略进行版本控制？ &lt;/strong&gt;使用 Git，您可以与来自规范事实来源的同行进行协作。您的 API（其应用程序代码和网关配置）就是您的 Git 存储库，仅此而已。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;使用相同流程在任何环境中进行部署？&lt;/strong&gt;因为 GitOps（以及 APIOps）配置定义了部署的&lt;em&gt;所需状态&lt;/em&gt;，因此每次您部署时，它们都会重复相同的基础架构部署。这可能位于您的本地开发环境或生产服务器上。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;GitOps 和 APIOps 还可以让您获得一些其他好处：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;部署架构和操作的透明度，因为所有内容都必须驻留在同一个存储库中。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;API 配置和政策更改的内置审核日志 - 只需查看您的提交历史记录即可！&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;通过 &lt;code&gt;git revert&lt;/code&gt; 更轻松地回滚。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;可重复部署，您可以将其转移到任何区域或云提供商，这将成为新灾难恢复计划的第一步。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;一致地应用基本流量策略 - 同样，您&lt;em&gt;必须&lt;/em&gt;在 Git 中实现这些策略，而不是在网关提供商的 Web 控制台或管理 API 中。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您的问题就变成了：您的 API 网关是否允许您执行 APIOps？如果&lt;em&gt;是&lt;/em&gt;，对话很快就会转变为：你如何真正让流程正确？即使你面前有正确的节奏，也很容易让你的团队误入歧途。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;case-no-1-pure-developer-freedom&#34;&gt;案例 1：纯粹的开发者自由&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway#case-no-1-pure-developer-freedom&#34;&gt;&lt; /a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;公司越年轻，您就越有可能选择允许一定程度的 APIOps 的 API 网关提供商，并且您就越有可能让每个人随意创建、配置和部署 API。在耗尽现金之前，您需要努力实现 MVP 或转型，因此每个 API 都是独一无二的并不重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;不同的提供商。不同的认证策略。不同的存储库。不同的分支保护。不同的灾难计划。对于“质量”、“安全”和“可用性”的含义有不同的看法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;你可以快速移动，但肯定会很混乱。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;case-no2-centralized-devopsplatform-management&#34;&gt;案例 2：集中式 DevOps/平台管理&lt;a href=&#34;https://ngrok.com/blog-帖子/apiops-and-api-gateway#case-no2-centralized-devopsplatform-management&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;规模较大、历史较悠久的公司更有可能拥有“拥有”APIOps 流程的专门团队。他们通过建立规定开发人员应如何设计和部署 API 的护栏来维护生产环境的质量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您很感激他们的高标准，并且不必太担心 API 生命周期的操作结束，但您也感受到通过它们推动所有辛勤工作的痛苦。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您的 API 可能非常稳定，但拥塞会减慢您的速度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;find-the-common-problem&#34;&gt;找到常见问题！&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api -gateway#find-the-common-problem&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可能认为 APIOps 作为一种方法论存在某种缺陷。如果它不能帮助开发人员回到最佳状态，那还有什么意义呢？这里的失败模式不是 APIOps，而是大多数 API 网关如何处理 API 的入口和全局交付。换句话说：他们没有。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;部署的 API 网关会出现单点故障，需要复杂的运维工作，而云 API 网关将您锁定在特定的云提供商中，并且不提供几乎同样多的深度定制。无论哪种情况，将多个 API 网关连接到您的基础设施和全球交付网络的网络和运营任务都远远不是您的核心能力。您仍然需要高可用性和故障转移流程。您仍在等待 NetOps 团队为您两周前完成的 API 开绿灯。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;APIOps 使生命周期的早期阶段对开发人员友好，但您仍然需要在最后阶段对开发人员友好。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;building-with-ngroks-product-grade-api-gateway-and-unified-ingress&#34;&gt;使用 ngrok 的生产级 API 网关和统一入口进行构建&lt;a href= “https://ngrok.com/blog-post/apiops-and-api-gateway#building-with-ngroks-product-grade-api-gateway-and-unified-ingress&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们构建的&lt;a href=&#34;https://ngrok.com/use-cases/api-gateway&#34;&gt;ngrok 的 API 网关&lt;/a&gt;既灵活又由开发人员定义，这意味着它已为 APIOps 工作流程做好了准备其工作方式与您已经了解和喜爱的相同。一旦您拥有来自 ngrok 的统一入口，采用 APIOps 就会变得非常简单。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;例如，您首先在单个 Git 存储库中为后端服务开发一个新 API、一个用于容器化所述服务的 Dockerfile 以及一些采用 YML 中 Kubernetes 清单形式的 IaC 文件.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;基于 Git 的基础？ ✅&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;接下来，您配置一个 Kubernetes 集群 - 可以是本地工作站上的 &lt;code&gt;minikube&lt;/code&gt; 集群，用于概念验证，也可以是 GKE 中的生产级对应集群。使用 Helm 安装&lt;a href=&#34;https://github.com/ngrok/kubernetes-ingress-controller&#34;&gt;ngrok Kubernetes Operator&lt;/a&gt;来负责安全灵活的入口，然后安装 GitOps 工具，例如&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/&#34;&gt;Argo CD&lt;/a&gt; 用于解决有关持续部署的所有工作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用 Git 作为事实来源进行自动化且可重复的 GitOps 部署？ ✅&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;接下来，您可以通过分层新的 CRD 将 API 网关&lt;a href=&#34;https://ngrok.com/docs/http/traffic-policy/?cty=k8s&#34;&gt;流量策略&lt;/a&gt;添加到现有 IaC并在整个 HTTPRoutes 中引用它们，Kubernetes Operator 使用 HTTPRoutes 将传入流量定向到容器化后端 API 服务。流量策略对入站请求和出站流量执行，让您可以快速分层&lt;a href=&#34;https://ngrok.com/blog-post/new-feature-jwt-validation&#34;&gt;JWT 身份验证&lt;/a&gt;，速率限制以及大量&lt;a href=&#34;https://ngrok.com/blog-post/api-gateway-policy-management-examples&#34;&gt;其他自定义规则&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;API 网关策略由 YAML 定义并由 Git 进行版本控制？ ✅&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，您可以启用 Argo CD 的自动同步功能来自动部署每个合并的提交，无论是后端服务上的错误修复还是保护公共 API 免遭滥用的新身份验证方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;全面的 APIOps？ ✅&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://cdn.prod.website-files.com/63ed707844acb1ccf1ccb700/66b286c1b60b98a287f0f729_66b285af1441b55a40167776_blog-APIOps_diagram.png&#34; alt=&#34;图片&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;ngrok通过统一入口帮助您避免上述问题情况。不再担心网络基础设施或 TLS 证书生成。无需再考虑全球交付网络、高可用性或地理感知故障转移。开发人员可以在便捷的 API 网关接口上高效工作，而运营商（当他们确实参与其中时）会开绿灯新部署速度比以前更快。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;没有混乱。没有拥堵。只有一个光滑的凹槽。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;查看我们的&lt;a href=&#34;https://ngrok.com/docs/integrations/argocd/apiops&#34;&gt;操作指南&lt;/a&gt;，了解将 APIOps 引入您的下一个技术设置的完整演练使用 ngrok 的 API 项目。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，ngrok 上的 APIOps 工作流程还带来了一些额外的好处：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;环境独立&lt;/strong&gt;，以便单个 Git 存储库在您的本地计算机、由 CI/CD 流程启动的暂存环境或生产环境中部署完全相同的内容。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;全局加速和负载平衡&lt;/strong&gt;，无论您的 API 使用者从何处请求，都可以最大限度地减少延迟，并实现故障自动恢复，以保持 API 在线。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;开发者拥有更多自主权&lt;/strong&gt;来控制速率限制和请求/响应操作等 API 政策，以及更深入的治理护栏，而无需完全依赖运营同行。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;内置 DDoS 防护&lt;/strong&gt;可阻止恶意攻击和错误配置，以免导致上游部署过载。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可观察性功能&lt;/strong&gt;，例如&lt;a href=&#34;https://ngrok.com/blog-post/network-traffic-inspector-ga&#34;&gt;流量检查器&lt;/a&gt;，用于捕获甚至直接通过您的 ngrok 仪表板重播特定请求。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;whats-next&#34;&gt;下一步是什么？&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway#whats-next &#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您的新 API 开发模式现在包含 ngrok - 如果您还没有，请&lt;a href=&#34;https://dashboard.ngrok.com/signup&#34;&gt;立即注册&lt;/a&gt;以开始定义您的 API 网关通过 Git 和 IaC，而不是晦涩的管理 API 调用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;拥有帐户后，不仅要查看操作指南，还要查看我们的所有其他资源，了解 ngrok 的开发人员定义的 API 网关如何与 Kubernetes APIOps 就绪部署一起工作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;操作指南：&lt;a href=&#34;https://ngrok.com/docs/integrations/argocd/apiops&#34;&gt;使用 Argo CD 和 ngrok 通过 APIOps 部署生产 API 和网关&lt;/a&gt;&lt;/li &gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;ngrok 博客：&lt;a href=&#34;https://ngrok.com/blog-post/policy-support-in-gateway-api&#34;&gt;Kubernetes Gateway API 的流量策略支持&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;文档：&lt;a href=&#34;https://ngrok.com/docs/k8s/user-guide/#gateway-composition&#34;&gt;Kubernetes Operator 用户指南 - 流量策略网关组合&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一旦您尝试了我们的操作指南或在自己的基础设施中勇敢地实施了核心 APIOps 概念，我们很乐意在我们的新 &lt;a href=&#34;https://github.com/ngrok 中听取您的意见/ngrok&#34;&gt;ngrok 社区存储库&lt;/a&gt;，有关 ngrok 的所有讨论的最佳场所，包括错误报告和产品反馈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://cdn.prod.website-files.com/63ed707844acb1ccf1ccb700/66c7811361684ecb53af703d_jhans.jpg&#34; alt=&#34;乔尔汉斯&#34; style=&#34;width:139px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://ngrok.com/blog-post/apiops-and-api-gateway&#34;&gt;乔尔·汉斯&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Joel Hans 是 ngrok 的高级开发教育者。他对文档、开发者教育、开发者营销等有很多强烈的想法。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 19 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Emerging trends in the cloud native ecosystem】云原生生态系统的新兴趋势</title>
      <link>https://www.cncf.io/blog/2024/11/19/emerging-trends-in-the-cloud-native-ecosystem/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post by Jatinder Singh Purba, Principal, Infosys; Krishnakumar V, Principal, Infosys; Prabhat Kumar, Senior Industry Principal, Infosys; and Shreshta Shyamsundar, Distinguished Technologist, Infosys&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Emerging Trends in the Cloud-native Ecosystem&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the last quarter of 2024, the cloud-native ecosystem continues to be strong as end users reap the benefits of over 10 years of modernization initiatives. This article covers a list of trends observed that will steer investment and end-user interest into cloud-native ecosystems in the year 2025. Most of these trends are driven by foundations such as the Cloud Native Computing Foundation (CNCF), The FinOps Foundation, Open Source Security Foundation (OpenSSF), and LF AI &amp;amp; Data Foundation, under The Linux Foundation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Cloud Cost Control Gets Cool: FinOps is the New Black&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeAHcCxZuzk-ppPi0XwhXD6Z21pg7ElKAbsOwBDRSf8b0xMbqeDtsFlI3IF3s6P-k3Ra71XkBqG-5ukxqYc02IcXFpBo28hQNPAhWGvfublKMuih4vUKqs3KzeMSRfoji-PAFUVUPEKFnSy1KAT2HhBduhdCtK0gBbzS2-F_C3bb63deX1MeGA?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;A close-up of a logoDescription automatically generated&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cloud-native architecture today is the default choice for greenfield projects. The large adoption of cloud-native architecture by enterprise customers is accompanied by an increasing focus on costs over the past few years [1]. Cloud-native architecture is more complex and layered compared to a typical monolith. Automation with infrastructure-as-code (IaC) allows teams to create and destroy infrastructure at scale, creating a highly dynamic environment to meter and manage costs. As a larger number of organizations modernize to cloud and cloud-native architecture, measuring and controlling costs will become crucial.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While FinOps does have a separate foundation, CNCF projects like OpenCost are driving this area forward [2, 3]. OpenCost is a tool that provides visibility into Kubernetes spend and resource allocation. It helps accurately measure and proportion cost. Further, customers are also looking for the right tools and best practices that reduce overall spend without sacrificing performance. The cloud-native ecosystem is fast evolving to meet this need.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This trend is closely associated with the ability to observe and measure resource consumption and other parameters of IT estates. As such, associated projects such as OpenTelemetry, Jaeger, Prometheus, and OpenSearch (part of the Open Search Foundation) also help with this goal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Organizations can apply this trend in practice by piloting FinOps projects such as OpenCost and trying to obtain a clear picture of where their IT dollars are being spent.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Are Your Devs Drowning in Tools? IDPs Are the Life Raft!&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdnvjy_tWRNpHUPs-wPuUlLzluUA1ayTmJC3M5x7tgAYTo_dSzkR55vM1Tgljh_FDAZYjnEQ5Tj7_5b_mWgyf6D-Tw3z-hVR9nRqx3C0UmBCplreZDMHqhWhOcWsWszrxHabBSGHPh1cOA0fvWWdnFo-IMjkCUgLtBqzPlSpBs6-2lw6J9I-1w?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;A black text on a white backgroundDescription automatically generated&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It is no secret that additional tools introduced by cloud-native approaches increase developer friction. While concepts such as containers have revolutionized operations, they have also led to additional concepts that developers must master in addition to the application codebase and tooling. Consequently, the year 2023 saw the rapid rise of internal developer portals (IDPs) and platform engineering to address this.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Backstage is an open framework to develop IDPs [4]. It clocked the highest number of end-user contributions in the 2023 CNCF annual report and the 4&lt;sup&gt;th&lt;/sup&gt; highest velocity across the landscape [5]. This is a testament to the interest that end users have in IDPs. Backstage, in particular, is fast becoming the de-facto standard for building IDPs and accelerating cloud native productivity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;An IDP is necessary to ensure developer productivity and is a sizeable part of the larger topic of platform engineering. In addition to developer portals, clients are looking at platform engineering capabilities to build developer and operations-friendly abstractions on top of the Kubernetes core.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A recent Backstage implementation by Infosys for a leading US insurance company has shown promising results [6]. The solution reduced onboarding time for new developers by about 40% and increased code deployment frequency by 35%. It has greatly optimized the lead time from generating requirements to moving to production, leading to a commensurate increase in customer satisfaction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;End users can benefit by performing an analysis of internal developer portals in the industry and piloting these within their organizations. Implementing Backstage is a promising first step as it is a CNCF project with a great deal of momentum and an increasing number of adopters.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cloud Native Powers AI&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcycb6C8RXqQ4Sw86krAz-xZoCChw5kGdjc8pJX06iyWO2UPZ4W1-QeFdm4tvy0wGrQ4RkAP7MKkg8yyc0k-FsnkBNkl-u_RW83-xQ08zkMTgXpd6wr4w452eL3pjbtAUADpXiDpBKbTVK_yG95GbTRBeqQXyaootOA5Wry5VrhcYkD9-Thumk?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;A pink text on a white backgroundDescription automatically generated&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Since 2016, OpenAI, a pioneer in the industry, has been running its training and inference workloads on Kubernetes [7]. It has pushed the limits of platform technology by running clusters with up to 2500 nodes. All the advantages of cloud-native technologies and platforms such as scalability and dynamic nature transfer directly to artificial intelligence (AI) workloads. This is especially true for large language models (LLMs), a fast-moving area of AI technology that is transforming every industry it touches. The trend within the cloud-native landscape to cater to AI training and services is spread across the LF AI &amp;amp; Data and the CNCF foundations [8]. CNCF has also developed and published a cloud-native AI landscape along with a white paper earlier this year [9, 10].&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;LF AI &amp;amp; Data and CNCF house open-source projects that are critical building blocks for the AI revolution. These include projects such as:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;OPEA, a collection of cloud-native patterns for GenAI workloads [11]&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Milvus, a high-performance vector database [12]&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kubeflow, a project to deploy machine-learning workflows on Kubernetes [13]&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;KServe, a toolset for serving predictive and generative machine-learning models [14]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Apart from projects, there are also foundational improvements and changes being made to Kubernetes such as the elastic indexed job to better handle the demands of AI workloads [15]. Considerable thought leadership in this space is being driven by the members of the cloud-native AI working group under the Technical Advisory Group for Runtime (TAG-Runtime) of CNCF [16].&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Companies experimenting with AI typically start with a proprietary SaaS or cloud offering. They can further expand their reach into cloud-native AI by setting up and running open-source projects such as KServe to experiment with open-source LLMs. The ability to curate and self-host LLMs is the first step to addressing privacy, security, and regulatory concerns with proprietary offerings and developing in-house capabilities in this area.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Beyond Silos: Open Standards Unify Observability&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfIL6DEKeOkQVaPGYdYN4F0_a9l0TxkFYQa6uteg82SPs_xvPVgA5hOyUMMJOA7z5wnT-tJfk330YmNAdVwtZDaseCC0plXqSr4FyC6pGC_9fWbGRIHiVSnChiWmmetNTSpS_s1O17TMePzckLJlkeuU1kh51wHK5bf2rcE75IVrQZaW5ddlW4?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;A blue bird with black textDescription automatically generated&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Observability is critical to the success of cloud-native programs as their architectures are complex and dynamic. In addition, with the rise of hybrid and multi-cloud environments, it becomes critical to have a comprehensive observability solution. Cloud-native observability must go beyond legacy metrics such as CPU, memory, storage, and network throughput. Further, the volume of metrics and the metadata associated with cloud-native observability are orders of magnitude higher as compared to legacy environments.&amp;nbsp; All of this creates technical and operational challenges in enabling effective observability for cloud-native architectures.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Over the last decade, this area of cloud-native technology has been driven by large, closed-source commercial vendors. Though open-source projects such as Prometheus (a monitoring system with time series database [17]) and Fluentd (a unified logging layer [18]) are well-adopted, end users typically turn to commercial vendors such as Dynatrace, AppDynamics, and Splunk with more fully-featured suites. However, this has led to cost and portability concerns.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Two key CNCF projects are driving change in this area through initiatives such as ‘observability query language specification’ [19]. These projects are OpenTelemetry – a set of tools, APIs and SDKs to create telemetry pipelines for metrics, logs, and traces [20], and the Technical Advisory Group for Observability (TAG-Observability) [21, 22]. This move towards open-source standards is driving healthy changes in the area of observability and offers immense opportunity for both end-users and service providers to get involved.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Piloting CNCF projects such as OpenTelemetry and Fluentd can improve observability pipelines, minimize vendor lock-in, and reduce cost.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Cloud-native Security: A New High-stakes Game&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeFfRmDyK7-erQMQniJeP08RhjXBA8u9CZp6C7jYAkA7I8GaZxQSPv38tME62qf3GwP5jKxr7io6v3UU2Xj-0WsfGFeL7hv1OvVFO13-4G1xuvK_eif7Y2uDUKWsBeqg5c0jxTZCpGYcaFbK7Y0JK5XPb_l7UjUxb4LbNfnM2NstGaKIsHA5FI?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;A logo with a colorful circleDescription automatically generated with medium confidence&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Modern architectures require new and innovative security methods. Concepts such as zero trust and secure supply chain are receiving attention at both end-user organizations and nation-state levels [23]. As the number of applications adopting microservices architecture increase, along with the growing sophistication of organized bad actors (e.g., Lockbit 2.0, Conti), security is on top of the priority list for CNCF [24].&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The recently graduated project, Falco (a runtime tool to detect security threats), is a great step in this direction [25]. In addition, cloud-native architectures rely on both CNCF as well as associated landscapes and foundations such as OpenSSF [26] that drive innovation in secure supply chains. TAG-Security is a key part of CNCF [27]. Beyond ensuring security for CNCF projects, it also publishes white papers that offer direction to the industry on the topic of security [28]. The area of policy as code, which is a critical part of security, is being driven by projects such as Open Policy Agent (OPA) and Kyverno [29, 30]. Both provide functionalities to define security policies as code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While there are cutting-edge open-source projects covering certain parts of the security landscape, this trend is dominated by product suites offered by established security vendors. In addition, each cloud vendor offers a suite of security products native to their implementations such as AWS Inspector and Microsoft Defender for Cloud. This trend of partnerships between open-source and established vendors to offer comprehensive security solutions is likely to continue into the foreseeable future.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;End users can work with both vendors and open-source projects to implement security guardrails across all layers of their infrastructure and applications. Organizations can uplift the capability of security teams by educating them on the new challenges created by cloud-native and microservices architecture.&amp;nbsp;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;The Future is Green: Why Sustainable IT is No Longer Optional&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdTXY3qPYT0aEFIIv1AEfx5Hw_dl1KHeE4kExzU7hfPtw8m-KWu5jL8AckeCt2ybJMD0cIMAsi7J9ps_Zd4LZ6fGVH2qOqZdYv8hmK5_0qsBcL6ynCAgvEv5CfaCLeXJnOdNQHgP6jev-a0beYAldWdKYXyUTQtcrbffua1HbBArBO__E-1gA?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;A logo of a piggy bankDescription automatically generated&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;GreenIT, GreenOps, and sustainability are popular topics today. There are some CNCF projects that service this need by measuring the carbon consumption of applications on the Kubernetes platform. Some examples of these projects include Kepler [31], an operator that collects and exports metrics using Extended Berkely Packet Filter (eBPF) to estimate energy consumption by pods, and OpenCost [32], a tool that provides visibility into Kubernetes spend and resource allocation. Observability into carbon consumption is a key first step to reduce carbon emissions and increase sustainability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sustainable IT operations are being driven increasingly by legislation such as the EU sustainability reporting rules and regulations in 2024 [33]. Corporations are currently harvesting low-hanging fruit through programs such as green datacenters, reducing end-user devices, etc. However, in the coming years, they will need to drill down to identify the most sustainable choices for application development.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While tooling for this area is still in its infancy, multiple open-source projects and standards are being developed. End users leading the charge are working to integrate green principles into their tools and applications to reduce their carbon footprint.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;As a first step, organizations can pilot Kepler or OpenCost for their container workloads.&amp;nbsp;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;For other layers of their installed IT landscape, companies may need to identify and shortlist tools from their cloud provider or third-party vendors to measure carbon cost and sustainability impact.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This list would not be complete without an overarching trend that has been driving cloud-native over the last decade, the adoption of Kubernetes as the cloud-native orchestrator-of-choice for modern technology platforms.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;From Niche to Norm: Kubernetes is Now an Essential Enterprise Tool&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe5uNZIU9YUgP9yqFDT0nFsNGjo0bx6QQxNiX17ej1KZD7bIOzQyjyXyXUTIq9gbUHrAofHdctrGg69dsjomk-5zo3zMyuDlURhHORkscvXqUL7kJuzy1HMrZJXPBS5IVzvLYo8cwuwcCw7gNGfmfA048p5qFXePkRB6b0AQ5w1MdEZnlxhGl8?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;A black text on a white backgroundDescription automatically generated&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Google first open-sourced Kubernetes as an open implementation of its internal orchestrator Borg in 2014 [34]. It was the first project of CNCF and the first project to graduate. It has become the de-facto platform for modernization projects. Kubernetes continues with a cadence of three releases per year but a majority of the features being worked on at this stage of its maturity are around reliability, scaling, and security. This is beneficial as it enhances the production readiness of Kubernetes, which is likely to remain the platform-of-choice for both modernization and greenfield developments for the foreseeable future.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;End users are preparing for the future of cloud-native implementations by standardizing best practices and creating stable blueprints for the implementation of effective platforms around Kubernetes. This trend is also illustrated by the rise and acceptance of platform engineering, which now focuses on the tooling around Kubernetes required to create an effective platform [35].&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Platform engineering is the practice of designing, building, and operating reusable software platforms that provide a foundation for multiple applications to operate. It enables faster delivery, improved quality, and increased scalability. In addition to Kubernetes, the core engine for most platforms today, platform engineering focuses on building blocks such as observability, policy as code, internal developer portals, security, continuous integration/continuous development (CI/CD), and storage. The end result is to provide a set of business capabilities such as reliability, performance, scalability, and availability for any application hosted on the platform and a declarative, self-service approach for users to access these capabilities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;End-user organizations need to build strong platform engineering capabilities. This will have a major impact on how Kubernetes is used to create effective container platforms. A good place to start is to map critical use cases within their organizations that can be standardized and automated through a platform engineering approach.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;References:&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[1] &lt;a href=&#34;https://www.cloudkeeper.com/insights/blog/2024-state-finops-report-key-trends-cloud-finops&#34;&gt;https://www.cloudkeeper.com/insights/blog/2024-state-finops-report-key-trends-cloud-finops&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[2] &lt;a href=&#34;https://www.finops.org/introduction/what-is-finops/&#34;&gt;https://www.finops.org/introduction/what-is-finops/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[3] &lt;a href=&#34;https://www.opencost.io/&#34;&gt;https://www.opencost.io/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[4] &lt;a href=&#34;https://backstage.io/&#34;&gt;https://backstage.io&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[5] &lt;a href=&#34;https://www.cncf.io/reports/cncf-annual-report-2023/&#34;&gt;https://www.cncf.io/reports/cncf-annual-report-2023/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[6] &lt;a href=&#34;https://www.cncf.io/case-studies/infosysinsurancecustomer/&#34;&gt;https://www.cncf.io/case-studies/infosysinsurancecustomer/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[7] &lt;a href=&#34;https://kubernetes.io/case-studies/openai/&#34;&gt;https://kubernetes.io/case-studies/openai/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[8] &lt;a href=&#34;https://lfaidata.foundation/&#34;&gt;https://lfaidata.foundation/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[9] &lt;a href=&#34;https://landscape.cncf.io/?group=cnai&#34;&gt;https://landscape.cncf.io/?group=cnai&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[10] &lt;a href=&#34;https://www.cncf.io/reports/cloud-native-artificial-intelligence-whitepaper/&#34;&gt;https://www.cncf.io/reports/cloud-native-artificial-intelligence-whitepaper/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[11] &lt;a href=&#34;https://opea.dev/&#34;&gt;https://opea.dev/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[12] &lt;a href=&#34;https://milvus.io/&#34;&gt;https://milvus.io/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[13] &lt;a href=&#34;https://kserve.github.io/website/latest/&#34;&gt;https://kserve.github.io/website/latest/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[14] &lt;a href=&#34;https://www.kubeflow.org/&#34;&gt;https://www.kubeflow.org/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[15] &lt;a href=&#34;https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/3715-elastic-indexed-job#summary&#34;&gt;https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/3715-elastic-indexed-job#summary&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[16] &lt;a href=&#34;https://tag-runtime.cncf.io/wgs/cnaiwg/&#34;&gt;https://tag-runtime.cncf.io/wgs/cnaiwg/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[17] &lt;a href=&#34;https://prometheus.io/&#34;&gt;https://prometheus.io/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[18] &lt;a href=&#34;https://www.fluentd.org/&#34;&gt;https://www.fluentd.org/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[19] &lt;a href=&#34;https://github.com/cncf/tag-observability/blob/main/working-groups/query-standardization.md&#34;&gt;https://github.com/cncf/tag-observability/blob/main/working-groups/query-standardization.md&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[20] &lt;a href=&#34;https://opentelemetry.io/&#34;&gt;https://opentelemetry.io/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[21] &lt;a href=&#34;https://github.com/cncf/tag-observability&#34;&gt;https://github.com/cncf/tag-observability&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[22] &lt;a href=&#34;https://github.com/cncf/tag-observability/blob/whitepaper-v1.0.0/whitepaper.md&#34;&gt;https://github.com/cncf/tag-observability/blob/whitepaper-v1.0.0/whitepaper.md&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[23] &lt;a href=&#34;https://www.whitehouse.gov/wp-content/uploads/2022/01/M-22-09.pdf&#34;&gt;https://www.whitehouse.gov/wp-content/uploads/2022/01/M-22-09.pdf&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[24] &lt;a href=&#34;https://community.cncf.io/events/details/cncf-cncf-online-programs-presents-cncf-on-demand-webinar-understanding-the-open-source-cloud-native-security-landscape/&#34;&gt;https://community.cncf.io/events/details/cncf-cncf-online-programs-presents-cncf-on-demand-webinar-understanding-the-open-source-cloud-native-security-landscape/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[25] &lt;a href=&#34;https://falco.org/&#34;&gt;https://falco.org/&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[26] &lt;a href=&#34;https://openssf.org/community/sigstore/&#34;&gt;https://openssf.org/community/sigstore/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[27] &lt;a href=&#34;https://github.com/cncf/tag-security&#34;&gt;https://github.com/cncf/tag-security&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[28] &lt;a href=&#34;https://tag-security.cncf.io/publications/&#34;&gt;https://tag-security.cncf.io/publications/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[29] &lt;a href=&#34;https://www.openpolicyagent.org/&#34;&gt;https://www.openpolicyagent.org/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[30] &lt;a href=&#34;https://kyverno.io/&#34;&gt;https://kyverno.io/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[31] &lt;a href=&#34;https://sustainable-computing.io/&#34;&gt;https://sustainable-computing.io/&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[32] &lt;a href=&#34;https://www.opencost.io/&#34;&gt;https://www.opencost.io/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[33] &lt;a href=&#34;https://finance.ec.europa.eu/capital-markets-union-and-financial-markets/company-reporting-and-auditing/company-reporting/corporate-sustainability-reporting_en&#34;&gt;https://finance.ec.europa.eu/capital-markets-union-and-financial-markets/company-reporting-and-auditing/company-reporting/corporate-sustainability-reporting_en&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[34] &lt;a href=&#34;https://www.sdxcentral.com/articles/news/how-kubernetes-1-29-improves-open-source-cloud-native-production-readiness/2023/12/&#34;&gt;https://www.sdxcentral.com/articles/news/how-kubernetes-1-29-improves-open-source-cloud-native-production-readiness/2023/12/&lt;/a&gt;&amp;nbsp;[35] &lt;a href=&#34;https://www.gartner.com/en/articles/what-is-platform-engineering&#34;&gt;https://www.gartner.com/en/articles/what-is-platform-engineering&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子，作者：Infosys 负责人 Jatinder Singh Purba； Krishnakumar V，印孚瑟斯公司负责人； Prabhat Kumar，Infosys 高级行业负责人；和 Infosys 杰出技术专家 Shreshta Shyamsundar&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;云原生生态系统的新兴趋势&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2024 年最后一个季度，随着最终用户从 10 多年的现代化举措中获益，云原生生态系统将继续保持强劲。本文涵盖了观察到的一系列趋势，这些趋势将在 2025 年引导投资和最终用户对云原生生态系统的兴趣。这些趋势大部分是由云原生计算基金会 (CNCF)、FinOps 基金会、 Linux 基金会旗下的开源安全基金会 (OpenSSF) 和 LF AI &amp; Data Foundation。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;云成本控制变得很酷：FinOps 是新的黑色&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXeAHcCxZuzk-ppPi0XwhXD6Z21pg7ElKAbsOwBDRSf8b0xMbqeDtsFlI3IF3s6P-k3Ra71XkBqG-5uk xqYc02IcXFpBo28hQNPAhWGvfublKMuih4vUKqs3KzeMSRfoji-PAFUVUPEKFnSy1KAT2HhBduhdCtK0gBbzS2-F_C3bb63deX1MeGA?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;自动生成的徽标描述的特写&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如今，云原生架构是新建项目的默认选择。过去几年，企业客户大量采用云原生架构，同时也越来越关注成本[1]。与典型的单体架构相比，云原生架构更加复杂且分层。基础设施即代码 (IaC) 的自动化允许团队大规模创建和销毁基础设施，从而创建一个高度动态的环境来计量和管理成本。随着越来越多的组织向云和云原生架构现代化，衡量和控制成本将变得至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然 FinOps 确实有一个单独的基础，但 OpenCost 等 CNCF 项目正在推动该领域向前发展 [2, 3]。 OpenCost 是一个提供 Kubernetes 支出和资源分配可见性的工具。它有助于准确衡量和分配成本。此外，客户还在寻找合适的工具和最佳实践，以在不牺牲性能的情况下减少总体支出。云原生生态系统正在快速发展以满足这一需求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种趋势与观察和衡量资源消耗以及 IT 资产其他参数的能力密切相关。因此，OpenTelemetry、Jaeger、Prometheus 和 OpenSearch（开放搜索基金会的一部分）等相关项目也有助于实现这一目标。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;组织可以通过试点 OpenCost 等 FinOps 项目并尝试清楚地了解其 IT 资金的用途，在实践中应用这一趋势。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;你的开发人员溺水了吗在工具中？国内流离失所者是救生筏！&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdnvjy_tWRNpHUPs-wPuUlLzluUA1ayTmJC3M5x7tgAYTo_dSzkR55vM1Tgljh_FDAZYjnEQ5Tj7_5b _mWgyf6D-Tw3z-hVR9nRqx3C0UmBCplreZDMHqhWhOcWsWszrxHabBSGHPh1coOA0fvWWdnFo-IMjkCUgLtBqzPlSpBs6-2lw6J9I-1w?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;白底黑字自动生成描述&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;众所周知，云原生方法引入的额外工具会增加开发人员的摩擦。虽然容器等概念彻底改变了操作，但除了应用程序代码库和工具之外，它们还带来了开发人员必须掌握的其他概念。因此，到 2023 年，为了解决这个问题，内部开发者门户 (IDP) 和平台工程迅速崛起。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Backstage 是一个开发 IDP 的开放框架 [4]。它在 2023 年 CNCF 年度报告中获得了最高的最终用户贡献数量，并且在整个领域排名第四[5]。这证明了最终用户对国内流离失所者的兴趣。尤其是后台，正在迅速成为构建 IDP 和加速云原生生产力的事实标准。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;IDP 对于确保开发人员的工作效率是必要的，并且是平台工程这一更大主题的重要组成部分。除了开发人员门户之外，客户还寻求平台工程功能，以在 Kubernetes 核心之上构建开发人员和操作友好的抽象。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Infosys 最近为一家领先的美国保险公司实施的 Backstage 已显示出可喜的结果 [6]。该解决方案将新开发人员的入职时间缩短了约 40%，并将代码部署频率提高了 35%。它极大地优化了从生成需求到转向生产的交付时间，从而相应提高了客户满意度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;最终用户可以通过对行业内部开发人员门户进行分析并在其组织内进行试点来受益。实施 Backstage 是一个充满希望的第一步，因为它是一个 CNCF 项目，势头强劲，采用者数量不断增加。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;云原生为人工智能提供支持&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXcycb6C8RXqQ4Sw86krAz-xZoCChw5kGdjc8pJX06iyWO2UPZ4W1-QeFdm4tvy0wGrQ4RkAP7MKkg8y yc0k-FsnkBNkl-u_RW83-xQ08zkMTgXpd6wr4w452eL3pjbtAUADpXiDpBKbTVK_yG95GbTRBeqQXyaootOA5Wry5VrhcYkD9-Thumk?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;白色背景上的粉色文字描述自动生成&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自 2016 年以来，行业先驱 OpenAI 一直在 Kubernetes 上运行其训练和推理工作负载 [7]。它通过运行多达 250 个集群来突破平台技术的极限0 个节点。云原生技术和平台的所有优势（例如可扩展性和动态性）都直接转移到人工智能（AI）工作负载。对于大型语言模型 (LLM) 来说尤其如此，这是一个快速发展的人工智能技术领域，正在改变它所涉及的每个行业。云原生领域迎合 AI 培训和服务的趋势遍布 LF AI &amp; Data 和 CNCF 基金会 [8]。 CNCF 还在今年早些时候开发并发布了云原生 AI 前景以及白皮书 [9, 10]。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;LF AI &amp; Data 和 CNCF 拥有开源项目，这些项目是人工智能革命的关键构建模块。其中包括以下项目：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;OPEA，GenAI 工作负载的云原生模式集合 [11]&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Milvus，高性能矢量数据库 [12]&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kubeflow，一个在 Kubernetes 上部署机器学习工作流程的项目 [13]&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;KServe，一个用于提供预测和生成机器学习模型的工具集 [14]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了项目之外，Kubernetes 还进行了基础性改进和更改，例如弹性索引作业，以更好地处理 AI 工作负载的需求 [15]。 CNCF 运行时技术咨询小组 (TAG-Runtime) 下的云原生 AI 工作组的成员正在推动这一领域的相当大的思想领导力 [16]。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;尝试人工智能的公司通常从专有的 SaaS 或云产品开始。他们可以通过设置和运行 KServe 等开源项目来试验开源法学硕士，进一步扩大其在云原生人工智能领域的影响力。策划和自行托管法学硕士的能力是解决专有产品的隐私、安全和监管问题以及开发该领域内部能力的第一步。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;超越孤岛：开放标准统一可观察性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfIL6DEKeOkQVaPGYdYN4F0_a9l0TxkFYQa6uteg82SPs_xvPVgA5hOyUMMJOA7z5wnT-tJfk330YmN AdVwtZDaseCC0plXqSr4FyC6pGC_9fWbGRIHiVSnChiWmmetNTSpS_s1O17TMePzckLJlkeuU1kh51wHK5bf2rcE75IVrQZaW5ddlW4?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;自动生成黑色文字描述的蓝鸟&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;可观察性对于云原生程序的成功至关重要，因为它们的架构复杂且动态。此外，随着混合和多云环境的兴起，拥有全面的可观测性解决方案变得至关重要。云原生可观察性必须超越 CPU、内存、存储和网络吞吐量等传统指标。此外，与传统环境相比，与云原生可观测性相关的指标和元数据的数量要高出几个数量级。  所有这一切在实现云原生架构的有效可观察性方面带来了技术和运营挑战。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在过去的十年中，这一云原生技术领域一直由大型闭源商业供应商推动。尽管 Prometheus（带有时间序列数据库的监控系统 [17]）和 Fluentd（统一日志记录层 [18]）等开源项目已被广泛采用，但最终用户通常会转向商业供应商，例如 Dynatrace、AppDynamics 和Splunk 提供功能更齐全的套件。然而，这导致了成本和可移植性问题。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;两个关键的 CNCF 项目正在通过“可观测性查询语言规范”[19] 等举措推动该领域的变革。这些项目是 OpenTelemetry – 一组工具、API 和 SDK，用于为指标、日志和跟踪创建遥测管道 [20]，以及可观测性技术咨询组 (TAG-Observability) [21, 22]。这种向开源标准的转变正在推动可观测性领域的健康变化，并为最终用户和服务提供商提供了巨大的参与机会。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;试点 CNCF 项目（例如 OpenTelemetry 和 Fluentd）可以改进可观测性管道、最大限度地减少供应商锁定并降低成本。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;云原生安全：一场新的高风险游戏&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeFfRmDyK7-erQMQniJeP08RhjXBA8u9CZp6C7jYAkA7I8GaZxQSPv38tME62qf3GwP5jKxr7io6v3U U2Xj-0WsfGFeL7hv1OvVFO13-4G1xuvK_eif7Y2uDUKWsBeqg5c0jxTZCpGYcaFbK7Y0JK5XPb_l7UjUxb4LbNfnM2NstGaKIsHA5FI?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;带有彩色圆圈的徽标自动生成中等置信度描述&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现代架构需要新的创新安全方法。零信任和安全供应链等概念正在受到最终用户组织和民族国家层面的关注[23]。随着采用微服务架构的应用程序数量的增加，以及有组织的不良行为者（例如 Lockbit 2.0、Conti）的日益复杂，安全性成为 CNCF 的首要任务[24]。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最近毕业的项目 Falco（一种检测安全威胁的运行时工具）是朝这个方向迈出的一大步 [25]。此外，云原生架构依赖于 CNCF 以及相关的环境和基础，例如推动安全供应链创新的 OpenSSF [26]。 TAG-Security 是 CNCF [27] 的关键部分。除了确保 CNCF 项目的安全之外，它还发布了白皮书，为行业提供有关安全主题的方向 [28]。策略即代码领域是安全性的关键部分，由开放策略代理 (OPA) 和 Kyverno [29, 30] 等项目推动。两者都提供将安全策略定义为代码的功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当那里是涵盖安全领域某些部分的尖端开源项目，这一趋势由成熟的安全供应商提供的产品套件主导。此外，每个云供应商都提供了一套与其实施相关的原生安全产品，例如 AWS Inspector 和 Microsoft Defender for Cloud。在可预见的未来，开源与成熟供应商之间合作提供全面安全解决方案的这种趋势可能会持续下去。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;最终用户可以与供应商和开源项目合作，在其基础设施和应用程序的所有层上实施安全防护。组织可以通过教育安全团队应对云原生和微服务架构带来的新挑战来提高安全团队的能力。 &lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;绿色未来：为什么可持续 IT 不再是可选的&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXdTXY3qPYT0aEFIIv1AEfx5Hw_dl1KHeE4kExzU7hfPtw8m-KWu5jL8AckeCt2ybJMD0cIMAsi7J9ps _Zd4LZ6fGVH2qOqZdYv8hmK5_0qsBcL6ynCAgvEv5CfaCLeXJnOdNQHgP6jev-a0beYAldWdKYXyUTQtcrbffua1HbBArBO__E-1gA?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;自动生成的存钱罐标志描述&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;绿色IT、绿色运营和可持续发展是当今的热门话题。有一些 CNCF 项目通过测量 Kubernetes 平台上应用程序的碳消耗来满足这一需求。这些项目的一些示例包括 Kepler [31]（一个使用扩展伯克利数据包过滤器 (eBPF) 收集和导出指标以估计 Pod 能耗的操作符）和 OpenCost [32]（一个提供 Kubernetes 支出和资源分配可见性的工具） 。碳消耗的可观测性是减少碳排放和提高可持续性的关键第一步。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;可持续 IT 运营越来越多地受到立法的推动，例如 2024 年欧盟可持续发展报告规则和法规 [33]。目前，企业正在通过绿色数据中心、减少最终用户设备等计划来收获唾手可得的成果。然而，在未来几年，他们将需要深入研究，以确定最可持续的应用程序开发选择。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然该领域的工具仍处于起步阶段，但多个开源项目和标准正在开发中。引领潮流的最终用户正在努力将绿色原则融入他们的工具和应用程序中，以减少碳足迹。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;首先，组织可以针对其容器工作负载试用 Kepler 或 OpenCost。 &lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;对于已安装 IT 环境的其他层面，公司可能需要从云提供商或第三方供应商那里识别并筛选工具，以衡量碳成本和可持续发展影响。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此列表将如果没有过去十年来推动云原生的总体趋势，即采用 Kubernetes 作为现代技术平台的云原生编排器，那么这一切都是不完整的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;从利基市场到规范：Kubernetes 现在是必不可少的企业工具&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe5uNZIU9YUgP9yqFDT0nFsNGjo0bx6QQxNiX17ej1KZD7bIOzQyjyXyXUTIq9gbUHrAofHdctrGg69 dsjomk-5zo3zMyuDlURhHORkscvXqUL7kJuzy1HMrZJXPBS5IVzvLYo8cwuwcCw7gNGfmfA048p5qFXePkRB6b0AQ5w1MdEZnlxhGl8?key=XYaJuL5yOqeZvEZwbhCpXkFi&#34; alt=&#34;白底黑字自动生成描述&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Google 于 2014 年首次开源 Kubernetes，作为其内部编排器 Borg 的开放实现 [34]。这是CNCF的第一个项目，也是第一个毕业的项目。它已成为现代化项目事实上的平台。 Kubernetes 继续以每年发布三个版本的节奏，但在其成熟的这个阶段正在开发的大部分功能都围绕着可靠性、可扩展性和安全性。这是有益的，因为它增强了 Kubernetes 的生产就绪性，在可预见的未来，Kubernetes 可能仍然是现代化和绿地开发的首选平台。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最终用户正在通过标准化最佳实践并为围绕 Kubernetes 实施有效平台创建稳定的蓝图，为云原生实施的未来做好准备。平台工程的兴起和接受也说明了这一趋势，平台工程现在专注于创建有效平台所需的围绕 Kubernetes 的工具[35]。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;平台工程是设计、构建和操作可重用软件平台的实践，为多个应用程序的运行提供基础。它可以加快交付速度、提高质量并提高可扩展性。除了当今大多数平台的核心引擎 Kubernetes 之外，平台工程还重点关注可观察性、策略即代码、内部开发人员门户、安全性、持续集成/持续开发 (CI/CD) 和存储等构建块。最终结果是为平台上托管的任何应用程序提供一组业务功能，例如可靠性、性能、可扩展性和可用性，并为用户提供访问这些功能的声明式自助服务方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;最终用户组织需要建立强大的平台工程能力。这将对如何使用 Kubernetes 创建有效的容器平台产生重大影响。一个好的起点是在组织内映射关键用例，这些用例可以通过平台工程方法进行标准化和自动化。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;参考文献：&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[1] &lt;a href=&#34;https://www.cloudkeeper.com/insights/blog/2024-state-finops-report-key-trends-cloud-finops&#34;&gt;https://www.cloudkeeper.com/insights/blog/2024-state-finops-report-key-trends-cloud-finops&lt; /a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[2] &lt;a href=&#34;https://www.finops.org/introduction/what-is-finops/&#34;&gt;https://www.finops.org/introduction/what-is-finops/&lt; /a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[3] &lt;a href=&#34;https://www.opencost.io/&#34;&gt;https://www.opencost.io/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[4] &lt;a href=&#34;https://backstage.io/&#34;&gt;https://backstage.io&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[5] &lt;a href=&#34;https://www.cncf.io/reports/cncf-annual-report-2023/&#34;&gt;https://www.cncf.io/reports/cncf-annual-report -2023/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[6] &lt;a href=&#34;https://www.cncf.io/case-studies/infosysinsurancecustomer/&#34;&gt;https://www.cncf.io/case-studies/infosysinsurancecustomer/&lt;/a&gt; &lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[7] &lt;a href=&#34;https://kubernetes.io/case-studies/openai/&#34;&gt;https://kubernetes.io/case-studies/openai/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[8] &lt;a href=&#34;https://lfaidata.foundation/&#34;&gt;https://lfaidata.foundation/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[9] &lt;a href=&#34;https://landscape.cncf.io/?group=cnai&#34;&gt;https://landscape.cncf.io/?group=cnai&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[10] &lt;a href=&#34;https://www.cncf.io/reports/cloud-native-artificial-intelligence-whitepaper/&#34;&gt;https://www.cncf.io/reports/cloud-native -人工智能白皮书/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[11] &lt;a href=&#34;https://opea.dev/&#34;&gt;https://opea.dev/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[12] &lt;a href=&#34;https://milvus.io/&#34;&gt;https://milvus.io/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[13] &lt;a href=&#34;https://kserve.github.io/website/latest/&#34;&gt;https://kserve.github.io/website/latest/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[14] &lt;a href=&#34;https://www.kubeflow.org/&#34;&gt;https://www.kubeflow.org/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[15] &lt;a href=&#34;https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/3715-elastic-indexed-job#summary&#34;&gt;https://github。 com/kubernetes/enhancements/tree/master/keps/sig-apps/3715-elastic-indexed-job#summary&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[16] &lt;a href=&#34;https://tag-runtime.cncf.io/wgs/cnaiwg/&#34;&gt;https://tag-runtime.cncf.io/wgs/cnaiwg/&lt;/a&gt; &lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[17] &lt;a href=&#34;https://prometheus.io/&#34;&gt;https://prometheus.io/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[18] &lt;a href=&#34;https://www. Fluentd.org/&#34;&gt;https://www. Fluentd.org/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[19] &lt;a href=&#34;https://github.com/cncf/tag-observability/blob/main/working-groups/query-standardization.md&#34;&gt;https://github.com/cncf/标签可观察性/blob/main/working-groups/query-standardization.md&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[20] &lt;a href=&#34;https://opentelemetry.io/&#34;&gt;https://opentelemetry.io/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[21] &lt;a href=&#34;https://github.com/cncf/tag-observability&#34;&gt;https://github.com/cncf/tag-observability&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[22] &lt;a href=&#34;https://github.com/cncf/tag-observability/blob/whitepaper-v1.0.0/whitepaper.md&#34;&gt;https://github.com/cncf/tag-可观察性/blob/whitepaper-v1.0.0/whitepaper.md&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[23] &lt;a href=&#34;https://www.whitehouse.gov/wp-content/uploads/2022/01/M-22-09.pdf&#34;&gt;https://www.whitehouse.gov/ wp-content/uploads/2022/01/M-22-09.pdf&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[24] &lt;a href=&#34;https://community.cncf.io/events/details/cncf-cncf-online-programs-presents-cncf-on-demand-webinar-understanding-the-open-source-cloud-native-security-landscape/&#34;&gt;https://community.cncf.io/events/details/cncf-cncf-online-programs-presents-cncf-on-需求网络研讨会理解开源云原生安全景观/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[25] &lt;a href=&#34;https://falco.org/&#34;&gt;https://falco.org/&lt;/a&gt;   &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[26] &lt;a href=&#34;https://openssf.org/community/sigstore/&#34;&gt;https://openssf.org/community/sigstore/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[27] &lt;a href=&#34;https://github.com/cncf/tag-security&#34;&gt;https://github.com/cncf/tag-security&lt;/a&gt;  &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[28] &lt;a href=&#34;https://tag-security.cncf.io/publications/&#34;&gt;https://tag-security.cncf.io/publications/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[29] &lt;a href=&#34;https://www.openpolicyagent.org/&#34;&gt;https://www.openpolicyagent.org/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[30] &lt;a href=&#34;https://kyverno.io/&#34;&gt;https://kyverno.io/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[31] &lt;a href=&#34;https://sustainable-computing.io/&#34;&gt;https://sustainable-computing.io/&lt;/a&gt;   &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[32] &lt;a href=&#34;https://www.opencost.io/&#34;&gt;https://www.opencost.io/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[33] &lt;a href=&#34;https://finance.ec.europa.eu/capital-markets-union-and-financial-markets/company-reporting-and-auditing/company-reporting/corporate-sustainability-reporting_en&#34;&gt;h ttps://finance.ec.europa.eu/capital-markets-union-and-financial-markets/company-reporting-and-auditing/company-reporting/corporate-sustainability-reporting_en&lt;/a&gt;   &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;[34] &lt;a href=&#34;https://www.sdxcentral.com/articles/news/how-kubernetes-1-29-improves-open-source-cloud-native-product-readiness/2023/12/&#34;&gt; https://www.sdxcentral.com/articles/news/how-kubernetes-1-29-improves-open-source-cloud-native-product-readiness/2023/12/&lt;/a&gt; [35] &lt;a href=&#34;https://www.gartner.com/en/articles/what-is-platform-engineering&#34;&gt;https://www.gartner.com/en/articles/what-is-platform-engineering&lt; /a&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 18 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Open source spirit: elevating team collaboration and innovation】开源精神：提升团队协作和创新</title>
      <link>https://www.cncf.io/blog/2024/11/22/open-source-spirit-elevating-team-collaboration-and-innovation/</link>
      <description>【&lt;p&gt;&lt;em&gt;Ambassador post by &lt;a href=&#34;https://www.linkedin.com/in/leonardpahlke/?originalSubdomain=de&#34;&gt;Leo Pahlke&lt;/a&gt;, CNCF Ambassador and CNCF TAG Environmental Sustainability Chair&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd3b_n8-xA8e8xk9AsC_t8-OuINlgazlQvPLmTxo_9deKGqrLCJGGxRYno4VmIW1dRzrNSdFZsVjwkwLtCfcSlvCAy-uwQQuLkY7ltLXfVxmUJshkpANgJPfjuotWj3zO7EHfG6sA?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;Image&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Open source is a fascinating space, where you are surrounded by emerging technologies and where you can directly engage with and have an impact on their future. “Engineering on the shoulders of giants.” All of this in a collaborative, open environment where you learn and contribute at the same time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I’ve been thinking more about the space lately, which led to writing this article. In times when we think about sustainability, not just in terms of the environment and climate, but also in terms of social and economic sustainability, how we like to work together, how we can drive further innovation and build new technologies, open source is an interesting contrast. I hope and believe that we can learn from it and adapt practices not only between open source communities, but also within companies.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This article explores concepts of how open source software is done based on my experience. What are the driving forces? Why are innovative projects often open source projects? How are companies adopting open source in their business? What might be the next steps for the field? Are there any lessons we can learn from open source? There are plenty of questions that point to different matters. Hopefully, there are bits and pieces that help you understand the space better and give you fuel to build on your companies open source strategy. Okay, let’s talk about my latest open source snapshot.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;1 – Tinkering&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Open source began as a movement decades ago and has continued to evolve. It involves collaborating on software projects and other matters, such as data or standards. In this article, we will focus on open source software. Open source approaches vary depending on cultural contexts, perspectives, preferences, and your goals and interests. Open source software is driven by its contributors and maintainers and not companies. Engineers who spend time freely pushing a project forward and sharing their work with others. Engineers not only set the entire picture, adopters (companies, institutions) and open source foundations are also part of it, but it all stands on engineers building software and sharing their work.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One of the core reasons open source is possible lies in the nature of software—it can be shared with little to no cost, as software is a form of information. This may sound strange and irrelevant, but this opens up a lot. Software teams can spend years developing a product, but once it’s finished, it can be copied and shared across networks almost instantly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Engineers generally like to tinker, experiment, and learn new technologies, and, like everyone else, show and share with others our work. Unlike some other engineering fields, software engineering makes tinkering and experimenting easy. No costly manufacturing, supply chains, or expensive equipment are required, meaning you don’t need company or university backing. This leads to some interesting effects, one of which is the potential to democratize software innovation. With some basic computing power and curiosity about software, you are set up to journey through tech. In this regard, the barriers to shaping the digital world are low.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Together, these two factors explain why open source emerged and became a widespread movement. Beyond those, there are other practical reasons why openness and collaboration can benefit your company goals, as explored a bit later.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXez5bQJaG4j4XGu9bllenQDTyb1qB6kkPDgG8PzlCyj4s10owXG1dl6kRiLqo2WVl0oXwtt-YMElK80R-nrmUYo9AjiYuIja8n9rWzp0w5f4fHC2KAvz-GgYeNo1l-vsTbWMDy9?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;Wonder leads to innovation and open source gives the freedom to wonder&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Wonder leads to innovation and open source gives the freedom to wonder&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Wonder and curiosity sparks exploration and experimentation, which can lead to the creation of new projects. If we share our work, this leads eventually to an ocean of projects, with a few that stand out and gain further traction. This creates a self-reinforcing cycle, where successful projects attract more attention and contributions. Since these projects are open, engineers can learn and experiment and build on top of the project as a base. Over time, this creates a network of interconnected projects, where each one influences the others. Influential projects can build over time an ecosystem that is defined by APIs, culture, and mindsets.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe_q9bf2xavaJksNC2SAClKAwotYiKvCrbHhzc9HCpOTj-GeYGP4HhYS6un5Nn-wUzOVE2FxN2EVGTq9rvnuFyj8zMbGawwFEosZ9yw_kLuMcEFKH75GGguNVAwrjpvm85sBdZu?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;Connecting the dots&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Connecting the dots&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you have experience collaborating in open source communities, and put it in contrast to a company you worked for, processes are vastly different. Both generate value. In the open source space, it is possible to experience that, if conditions are a bit different, the entire motion of how software is developed can become a different twist. Open source is chaotic, and maintainers put simple guidelines to make it work. Which ideas can we take from open source and bring to our engineering teams at our company? Think about it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;And of course, this is slightly more complex. In the context of open source projects, social structures emerge, encompassing communities that collaborate, organize meetings, establish contribution platforms, establish communication channels, and so forth. It is not only about innovation and building new technologies, but also about community, learning, and other things. »Linux Kernel people have their approach to building open source than the React or the Hyperledger community«.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With time, I think there are multiple reasons that emerged why folks end up contributing to open source. Tinkering and experimentation being at the core of it. Purpose, change, fellowship in communities, reputation, experience, freedom to build, and passion are some more.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc8gYxKQBfh4EBGvFl_btgw-6tq8eexuedrNYIcahcMbulaHC7ovnwsV0c3OoB0m8hku0IWbbofEuRTRPrsdNcVM8txiRMM2di-XBzUO1Hwt1ST2vE715bL_9EiqdnElJwaw5tT?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;Motivations for engineers to contribute to open source projects&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Motivations for engineers to contribute to open source projects&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;From my experience, it’s usually a mix of all of these topics that people get into open source because of. It’s not always a rational choice, but rather a path that presents itself, and you take a look.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;2 – Movement in IT&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With new open source projects coming up, the IT landscape shifts over time. The IT landscape has been influenced by open source for decades. It’s nothing new. Companies like Google have been founded with open source in their DNA, embracing free and open services and releasing new open source projects. Others, like Red Hat or SUSE, are building their business model on top of it, expanding on open source software to offer enterprise versions and support services to companies. Others, such as Microsoft, have further advanced their company strategy by partially abandoning proprietary software in favour of a hybrid approach that encompasses open source. Everyone mentioned uses open source software, but they have their ideas, plans, and priorities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Adopting Open Source&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The companies’ engagement in open source is not triggered by wonder and the freedom to create, as in the previous chapter defined for engineers, but rather simply by creating business value. Can open source be used to generate more business value. Yes, it can!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If your company is concerned with software, it becomes clear that software engineering is a complex endeavour. To manage complexity, we capsule logic and divide and conquer. That’s important to deal with complexity but also opens up the possibility to share your projects with others effectively. Components can come from open source or be developed internally; ultimately, it doesn’t really matter: you use interfaces. The result matters. Results generate business value. Open source helps you to achieve your goals faster, to focus on your business value. Therefore, open source is about efficiency. It’s also about reducing engineering complexity you need to deal with. Since the project is capsuled, all the business logic (should be) safe and secure with you, and you do not lose your competitive edge.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;However, there is a crucial prerequisite for open source to be effective: you must separate your project’s core business logic from the more general components that can be shared and reused. Open source thrives when it focuses on extracting general ideas, approaches, and algorithms that are applicable across various contexts. From my experience, open source is about creating generic solutions that serve as foundational building blocks. In a way, it shares similarities with fundamental research: just as research seeks to uncover universal truths about the world, open source seeks to define and share fundamental technologies that can be built upon and adapted in many settings.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are more reasons for companies to engage with open source, as shown in the diagram and table after.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf6ZFy6OoV-C66ub5Qf9eOUIpGk-rizfv7s_SkrvtA59G4n3Z1dQPUd_fFJqfFjo4XHcQxC-tbuYE4sIi9xj3P1thtj3ah03EJXvQfPgYKSIC8zHNtTx1pigbyjFxAhAMtf-JMU?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;Company motivations for open source&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Company motivations for open source&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Category&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Reason&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Operational &amp;amp; Engineering&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Increase software engineering efficiency&lt;/td&gt;&lt;td&gt;reduce overhead — “Do not reinvent the wheel”&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Reduce software engineering complexity&lt;/td&gt;&lt;td&gt;Focus on your business value and expertise&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Agility and innovation&lt;/td&gt;&lt;td&gt;Ability to change your systems, react to new requirements and innovate products and services&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Strategic &amp;amp; Business Impact&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Digital sovereignty&lt;/td&gt;&lt;td&gt;Independence from proprietary software and foreign vendors&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Collaborate and influence standards&lt;/td&gt;&lt;td&gt;Shaping the direction of industry standards&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Customer and partner relationship&lt;/td&gt;&lt;td&gt;Stronger ties with external stakeholders&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Sales and monetisation&lt;/td&gt;&lt;td&gt;Opportunities for business models&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Public image and prestige&lt;/td&gt;&lt;td&gt;Enhancing brand value by being an active open source citizen&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Attract engineering talent&lt;/td&gt;&lt;td&gt;Using emerging software to appeal to talented engineers&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Developer ecosystem&lt;/td&gt;&lt;td&gt;Leveraging open source communities to engage with developers&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Transparency&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Build trust through transparency&lt;/td&gt;&lt;td&gt;Building trust by setting the source public&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Data privacy and security&lt;/td&gt;&lt;td&gt;Independent auditing&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Ethical reasons&lt;/td&gt;&lt;td&gt;Values of openness, fairness, and inclusion&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Legal and Compliance&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Legislation to publicise internal algorithms, et al.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At the same time, there are several risks to consider when adopting open source as a strategic goal. The nature and impact of these risks will vary on a case-by-case basis. One of the primary risks is the commitment to taking ownership of your software stack. Contributing to and maintaining open source projects requires investments in engineering excellence—not just in writing code, but in ensuring long-term sustainability, quality, and security. Additionally, software engineering is in some ways a creative process that can be difficult to manage, and this may require a shift in mindset. It’s not just about the tools; it’s about fostering a culture where engineers take ownership of the entire project, not just their individual contributions. This shift places added pressure on talent acquisition and retention, as companies must attract engineers with the skills and mindset to thrive in such an environment. Finally, the total cost of ownership with open-source solutions can be less transparent than with proprietary alternatives. While open source can reduce licensing fees, the costs associated with maintaining, integrating, and securing these tools can accumulate. However, if a company aims to be a leader in the digital space, these risks are likely ones that will need to be addressed anyway.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Open Source Commitment: A Nuanced View&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Open source plays a role for every company that does software engineering; however, the engagement is vastly different. There is quite a discrepancy between using open source because software engineering is nowadays not possible otherwise and being an open source citizen. To invest in open source requires driving factors, which we explored in the previous section. These could be transparency-related, for example, or expanding the monetization model. This driver needs to be picked up and integrated into the business strategy. If that’s the case, more active engagement and leadership can be achieved.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc-pNOH4Jzp_1rSJtroMukDV6HrNcBVPKhrDRfsw1NoJ-26rgwzcxbjx7_2lgygImAeA0Kqd5b_WUcHU3mwYKWhv1uS9Z_Hd_n64EdLv5TyP83mlFU_xKqwwhfkjbo9OwPkmpqyTQ?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;Company path to open source engagement&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Company path to open source engagement&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Investing in open source and becoming an active open source citizen may still be a goal for the future, but not something to realize soon. Organizations are still in the midst of their digital transformation, working to reach a level of maturity that would enable them to play a more active role in the open source community. Open source itself exists on a spectrum, ranging from exclusive reliance on proprietary software to fully embracing the open source spirit. A balanced middle ground may be a practical approach during the digital transformation. Engagement with open source can be gradual, allowing companies to build capabilities and expertise over time while transitioning towards more active involvement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXenzybBNW4GekWVxw3vISmUXw25b912TIrcAlCzP8jzELz08Q0ElFvGQl1h1ZEtVxbXrp4GnBdDuxeGEy17ZDow6q74aJb12BzMofl1B1gB_r_F1lu4zn1TZS7-4S41khtfEZXv?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;Example visual evaluation based on coloring to assess your open source adoption&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Example visual evaluation based on coloring to assess your open source adoption&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Strategies for companies to adapt open source varies. To figure out how to manage your open-source engagement within the company, you can take a look at the resources by the &lt;a href=&#34;https://todogroup.org/&#34;&gt;TODO Group&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;3 — Empowering Contribution&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Alexis de Tocqueville suggested that change arises when there is pressure from both the top and the bottom. This can be interpreted in several ways: there needs to be a clear vision, guidance, and direction from the top, while commitment, energy, and passion from the bottom drive progress. A vision alone won’t create change, and simply putting in the work doesn’t guarantee it either. This dynamic can be understood in both large and small contexts. For example, on one hand, maintainers at the “top” create and release software; on the other, companies, and developers at the “bottom” provide the energy and motivation to adopt, modify, and advance it and their products or service. Change happens. Guiding and empowering this process is key to facilitating meaningful change and encouraging ongoing contribution.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Open source foundations play a vital role in building communities, setting guidelines, and fostering collaboration. They sit in the middle as a “neutral body” since, open source thrives on collaboration rather than confrontation. This is where open source foundations come in—they help negotiate between the interests of maintainers and adopters and empower contribution. While some open source projects thrive without the backing of a formal foundation, a neutral body is often essential for nurturing a strong community and ensuring the long-term success of both the project and its technology stack. Without such an entity, it can be much more difficult to build and sustain a community, which in turn hampers the future development of the project.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdeaF58jY4UXDFhOhgpTtqdW22Z9tClhGOt4HxJlu2l73QSeEa7piRbNaf8l3DYF3ez6uerOGeqgqr62LP9PXheVH9NLds6OEDnUcKdPUZ77SpeuPtQCzYcn6y9mymF45sX-oWm?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;Open source foundation empower contribution by managing collaboration between maintainers and adopters&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Open source foundation empower contribution by managing collaboration between maintainers and adopters&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One example of how this is done can be observed by looking at the structure of the CNCF, where you have different structures bringing expertise and representing the interests of maintainers and end users. Together, we decide on governance and collaboration guidelines.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXexL_-9AaGBcIcIEppLC9rvVWXDnHJc4rYTg1qVtXKXq_wWUJxA-GhATQ5-hX_UotIHjlUqzhi7BOsKLctcq15JLMezcSsbIcyJUYttfTuSSQD_upWf6uAG8GyRzgT8j4rB5uiHEg?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;Cloud Native Computing Foundation (CNCF) governance structures to empower contribution&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;CNCF governance structures to empower contribution&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;4 — Elevate Collaboration and Innovation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;My journey through open source projects and communities so far showed me an interesting contrast to regular software engineering practices. Open source complements companies software engineering capabilities every day. Playing a more active role in open source comes with some risks due to the chaotic nature of the space. Still, I believe that to be a leader in technology, it’s important to take these risks intentionally and benefit from shaping technology not just for your customers but also for everyone else. As explored, there are plenty of motivations for it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A question remains when more traditional companies that rely on software now and in the future to stay competitive will reach digital maturity to contribute to open source like digital natives. For some companies, they reached this stage. In this light, it’s to be seen how the space evolves going forward. It is difficult to create a collaborative and innovative environment in a company. Open source can inspire to imagine a more collaborative and democratic process in software engineering going forward.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;CNCF 大使兼 CNCF TAG 环境可持续发展主席 &lt;a href=&#34;https://www.linkedin.com/in/leonardpahlke/?originalSubdomain=de&#34;&gt;Leo Pahlke&lt;/a&gt; 发表大使帖子&lt; /em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd3b_n8-xA8e8xk9AsC_t8-OuINlgazlQvPLmTxo_9deKGqrLCJGGxRYn o4VMIW1dRzrNSdFZsVjwkwLtCfcSlvCAy-uwQQuLkY7ltLXfVxmUJshkpANgJPfjuotWj3zO7EHfG6sA?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;图片&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开源是一个令人着迷的空间，在这里您被新兴技术所包围，您可以直接参与并影响它们的未来。 “站在巨人肩膀上的工程。”所有这一切都在一个协作、开放的环境中进行，您可以在其中同时学习和贡献。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我最近对这个空间有了更多的思考，这促使我写了这篇文章。当我们思考可持续性时，不仅考虑环境和气候，还考虑社会和经济的可持续性、我们如何合作、如何推动进一步创新和构建新技术，开源是一个有趣的对比。我希望并相信我们可以从中学习并调整实践，不仅在开源社区之间，而且在公司内部。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本文根据我的经验探讨了如何完成开源软件的概念。驱动力是什么？为什么创新项目往往都是开源项目？公司如何在其业务中采用开源？该领域的下一步可能是什么？我们可以从开源中学到什么教训吗？有很多问题指向不同的问题。希望其中的一些细节可以帮助您更好地了解这个领域，并为您建立公司的开源战略提供动力。好吧，我们来谈谈我最新的开源快照。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;1 – 修补&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开源始于几十年前的一场运动，并不断发展。它涉及软件项目和其他事务（例如数据或标准）的协作。在本文中，我们将重点关注开源软件。开源方法因文化背景、观点、偏好以及您的目标和兴趣而异。开源软件是由其贡献者和维护者而不是公司驱动的。工程师花时间自由地推动项目前进并与他人分享他们的工作。工程师不仅决定了整个图景，采用者（公司、机构）和开源基金会也是其中的一部分，但这一切都取决于工程师构建软件和分享他们的工作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开源成为可能的核心原因之一在于软件的本质——它可以以很少甚至免费的成本共享，因为软件是信息的一种形式。这听起来可能很奇怪而且无关紧要，但这却能带来很多启发。软件团队可以花费数年时间进行开发私奔一个产品，但一旦完成，它几乎可以立即在网络上复制和共享。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;工程师通常喜欢修补、实验和学习新技术，并且像其他人一样，向他人展示和分享我们的工作。与其他一些工程领域不同，软件工程使修补和实验变得容易。不需要昂贵的制造、供应链或昂贵的设备，这意味着您不需要公司或大学的支持。这会带来一些有趣的影响，其中之一就是软件创新民主化的潜力。凭借一些基本的计算能力和对软件的好奇心，您就可以开始科技之旅了。从这方面来说，塑造数字世界的壁垒很低。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这两个因素共同解释了为什么开源会出现并成为一场广泛的运动。除此之外，开放和协作还有其他实际原因可以使您的公司目标受益，稍后将对此进行探讨。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXez5bQJaG4j4XGu9bllenQDTyb1qB6kkPDgG8PzlCyj4s10owXG1dl6k RiLqo2WVl0oXwtt-YMElK80R-nrmUYo9AjiYuIja8n9rWzp0w5f4fHC2KAvz-GgYeNo1l-vsTbWMDy9?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;奇迹带来创新，开源赋予奇迹的自由&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;奇迹带来创新，开源赋予奇迹的自由想知道&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;好奇心和好奇心会激发探索和实验，从而催生新项目。如果我们分享我们的工作，这最终会导致大量的项目，其中一些项目脱颖而出并获得进一步的关注。这创造了一个自我强化的循环，成功的项目会吸引更多的关注和贡献。由于这些项目是开放的，工程师可以在该项目的基础上进行学习、实验和构建。随着时间的推移，这会创建一个相互关联的项目网络，其中每个项目都会影响其他项目。有影响力的项目可以随着时间的推移构建一个由 API、文化和思维方式定义的生态系统。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXe_q9bf2xavaJksNC2SAClKAwotYiKvCrbHhzc9HCpOTj-GeYGP4HhYS 6un5Nn-wUzOVE2FxN2EVGTq9rvnuFyj8zMbGawwFEosZ9yw_kLuMcEFKH75GGguNVAwrjpvm85sBdZu?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;连接点&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;连接点&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您有在开源社区中合作的经验，并将其与您工作的公司进行对比，流程就会有很大不同。两者都产生价值。在开源领域，我们可以体验到，如果条件稍有不同，软件开发的整个过程就会发生不同的变化。开源是混乱的，维护者把使其发挥作用的简单指南。我们可以从开源中获取哪些想法并带给我们公司的工程团队？想一想。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当然，这稍微复杂一些。在开源项目的背景下，出现了社会结构，包括协作、组织会议、建立贡献平台、建立沟通渠道等的社区。它不仅涉及创新和构建新技术，还涉及社区、学习和其他事物。 »与 React 或 Hyperledger 社区相比，Linux 内核人员有自己的构建开源代码的方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着时间的推移，我认为人们最终为开源做出贡献的原因有多种。修补和实验是其核心。目标、变革、社区友谊、声誉、经验、构建自由和热情等等。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc8gYxKQBfh4EBGvFl_btgw-6tq8eexuedrNYIcahcMbulaHC7ovnwsV 0c3OoB0m8hku0IWbbofEuRTRPrsdNcVM8txiRMM2di-XBzUO1Hwt1ST2vE715bL_9EiqdnElJwaw5tT?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;工程师为开源项目做出贡献的动机&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;工程师为开源项目做出贡献的动机&lt;/em&gt;&lt; /图标题&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;根据我的经验，人们进入开源领域通常是所有这些主题的混合。它并不总是一个理性的选择，而是一条自然出现的路径，你看看。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;2 – IT 运动&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着新的开源项目的出现，IT 格局会随着时间的推移而发生变化。数十年来，IT 领域一直受到开源的影响。这不是什么新鲜事。像谷歌这样的公司在成立时就带有开源基因，拥抱免费和开放的服务并发布新的开源项目。其他公司，如红帽或 SUSE，正在其基础上构建自己的商业模式，扩展开源软件，为公司提供企业版本和支持服务。其他公司（例如微软）则进一步推进了他们的公司战略，部分放弃了专有软件，转而采用包含开源的混合方法。提到的每个人都使用开源软件，但他们有自己的想法、计划和优先事项。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;采用开源&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;公司对开源的参与并不是由奇迹和创造自由引发的，就像上一章为工程师定义的那样，而只是为了创造商业价值。能否利用开源产生更多的商业价值？是的，可以！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您的公司关注软件，那么很明显软件工程是一项复杂的工作。为了管理复杂性，我们封装逻辑并分而治之。这就是进口不仅能够处理复杂性，而且还提供了与他人有效共享项目的可能性。组件可以来自开源或内部开发；最终，这并不重要：你使用接口。结果很重要。结果产生商业价值。开源可帮助您更快地实现目标，专注于您的业务价值。因此，开源讲的是效率。它还可以降低您需要处理的工程复杂性。由于该项目是封装的，因此所有业务逻辑（应该）对您来说都是安全可靠的，并且您不会失去竞争优势。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，开源要想发挥作用，有一个至关重要的先决条件：您必须将项目的核心业务逻辑与可以共享和重用的更通用的组件分开。当开源专注于提取适用于各种环境的通用思想、方法和算法时，它就会蓬勃发展。根据我的经验，开源是关于创建作为基础构建块的通用解决方案。在某种程度上，它与基础研究有相似之处：正如研究寻求揭示世界的普遍真理一样，开源寻求定义和共享可以在许多环境中构建和适应的基础技术。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;公司参与开源的理由有更多，如下图和表格所示。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXf6ZFy6OoV-C66ub5Qf9eOUIpGk-rizfv7s_SkrvtA59G4n3Z1dQPUd_ fFJqfFjo4XHcQxC-tbuYE4sIi9xj3P1thtj3ah03EJXvQfPgYKSIC8zHNtTx1pigbyjFxAhAMtf-JMU?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;公司开源动机&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;公司开源动机&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;类别&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong &gt;原因&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;运营与工程&lt;/strong&gt;&lt;/td&gt;&lt; td&gt;增加软件工程效率&lt;/td&gt;&lt;td&gt;减少开销——“不要重新发明轮子”&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;降低软件工程复杂性&lt;/td&gt;&lt;td&gt;专注于您的业务价值和专业知识&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;敏捷性和创新&lt;/td&gt;&lt;td&gt;能够更改系统、对新要求做出反应并进行创新产品和服务&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;战略和业务影响&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;数字主权&lt;/td&gt;&lt;td&gt;独立于专有软件和外国供应商&lt; /td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;协作并影响标准&lt;/td&gt;&lt;td&gt;塑造行业方向标准&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;客户和合作伙伴关系&lt;/td&gt;&lt;td&gt;与外部利益相关者建立更牢固的联系&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt; td&gt;&lt;/td&gt;&lt;td&gt;销售和货币化&lt;/td&gt;&lt;td&gt;商业模式的机会&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;公共形象和威望&lt;/td&gt;&lt;td&gt;通过成为积极的开源公民来提升品牌价值&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;吸引工程人才&lt;/td&gt;&lt;td&gt;使用新兴软件吸引才华横溢的工程师&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;开发者生态系统&lt;/td&gt;&lt;td&gt;利用开源社区与开发者互动&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;透明度&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;通过透明度建立信任&lt;/td&gt;&lt;td&gt;通过以下方式建立信任设置来源公开&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;数据隐私和安全&lt;/td&gt;&lt;td&gt;独立审计&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;道德原因&lt;/td&gt;&lt;td&gt;公开、公平和包容的价值观&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt;&lt;strong&gt;法律与合规&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;公开内部算法等的立法&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/表&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;同时，采用开源作为战略目标时还需要考虑一些风险。这些风险的性质和影响将根据具体情况而有所不同。主要风险之一是承诺拥有软件堆栈的所有权。贡献和维护开源项目需要对卓越工程进行投资——不仅仅是编写代码，还要确保长期可持续性、质量和安全性。此外，从某些方面来说，软件工程是一个难以管理的创造性过程，这可能需要转变思维方式。这不仅仅是工具的问题；这是为了培养一种文化，让工程师对整个项目负责，而不仅仅是他们个人的贡献。这种转变给人才获取和保留带来了更大的压力，因为公司必须吸引具有在这种环境中蓬勃发展的技能和心态的工程师。最后，开源解决方案的总拥有成本可能不如专有解决方案那么透明。虽然开源可以降低许可费用，但与维护、集成和保护这些工具相关的成本可能会累积。然而，如果一家公司的目标是成为数字领域的领导者，那么这些风险可能无论如何都需要解决。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;开源承诺：细致入微的观点&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开源对于每家从事软件工程的公司都发挥着重要作用；然而，参与度却截然不同。使用开源软件与成为开源公民之间存在很大差异，因为软件工程现在不可能以其他方式进行。投资开源需要驱动因素，我们在上一节中对此进行了探讨。例如，这些可能与透明度相关，或者扩展货币化模型。需要选择这一驱动因素并将其整合到业务战略中。如果是这样，就可以实现更积极的参与和领导。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc-pNOH4Jzp_1rSJtroMukDV6HrNcBVPKhrDRfsw1NoJ-26rgwzcxbjx7_2lgygImAeA0Kqd5b_WUcHU3mwYKWhv1uS9Z_Hd_n64EdLv5TyP83mlFU_xKqwwhfkjbo9OwPkmpqyTQ?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;公司参与开源的路径&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;公司参与开源的路径&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;投资开源并成为一名积极的开源公民可能仍然是未来的目标，但不会很快实现。组织仍处于数字化转型之中，努力达到一定的成熟度，使他们能够在开源社区中发挥更积极的作用。开源本身存在一个范围，从完全依赖专有软件到完全拥抱开源精神。平衡的中间立场可能是数字化转型过程中的一种实用方法。与开源的接触可以是渐进的，允许公司随着时间的推移建立能力和专业知识，同时转向更积极的参与。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXenzybBNW4GekWVxw3vISmUXw25b912TIrcAlCzP8jzELz08Q0ElFvGQ l1h1ZEtVxbXrp4GnBdDuxeGEy17ZDow6q74aJb12BzMofl1B1gB_r_F1lu4zn1TZS7-4S41khtfEZXv?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;基于颜色的示例视觉评估，用于评估您的开源采用情况&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;基于颜色的示例视觉评估，用于评估您的开源采用&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;公司适应开源的策略各不相同。要了解如何管理公司内部的开源参与，您可以查看 &lt;a href=&#34;https://todogroup.org/&#34;&gt;TODO Group&lt;/a&gt; 提供的资源。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;3 — 赋权贡献&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;亚历克西斯·德·托克维尔（Alexis de Tocqueville）认为，当来自上层和下层的压力都存在时，变革就会产生。这可以从几个方面来解释：高层需要有清晰的愿景、指导和方向，而底层的承诺、能量和热情则推动进步。仅仅有愿景并不能带来改变，仅仅投入工作也不能保证改变。这种动态可以在大环境和小环境中理解。例如，一方面，“顶层”的维护人员创建和发布软件；另一方面，“顶层”的维护人员则负责创建和发布软件。另一方面，处于“底层”的公司和开发人员提供了采用、修改和推进它及其产品或服务的能量和动力。改变发生了。指导和授权这一过程是促进有意义的变革和鼓励持续贡献的关键。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;开源基金会在建设社区、制定指导方针和促进协作方面发挥着至关重要的作用。他们作为“中立机构”处于中间，因为开源依靠合作而不是对抗而蓬勃发展。这就是开源基金会发挥作用的地方——它们帮助否定在维护者和采用者的利益之间进行协商并赋予贡献权。虽然一些开源项目在没有正式基金会支持的情况下蓬勃发展，但中立机构对于培育强大的社区并确保项目及其技术堆栈的长期成功通常至关重要。如果没有这样的实体，社区的建立和维持就会变得更加困难，进而阻碍项目未来的发展。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXdeaF58jY4UXDFhOhgpTtqdW22Z9tClhGOt4HxJlu2l73QSeEa7piRbN af8l3DYF3ez6uerOGeqgqr62LP9PXheVH9NLds6OEDnUcKdPUZ77SpeuPtQCzYcn6y9mymF45sX-oWm?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;开源基金会通过管理维护者和采用者之间的协作来增强贡献&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;开源基金会通过管理维护者和采用者之间的协作来增强贡献采用者&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;可以通过查看 CNCF 的结构来观察如何完成此操作的一个示例，其中有不同的结构带来专业知识并代表维护人员和最终用户的利益。我们共同决定治理和协作准则。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXexL_-9AaGBcIcIEppLC9rvVWXDnHJc4rYTg1qVtXKXq_wWUJxA-GhATQ 5-hX_UotIHjlUqzhi7BOsKLctcq15JLMezcSsbIcyJUYttfTuSSQD_upWf6uAG8GyRzgT8j4rB5uiHEg?key=mAozl6rSoPk1OE0hLM2U09mN&#34; alt=&#34;云原生计算基金会 (CNCF) 授权贡献的治理结构&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;授权贡献的 CNCF 治理结构&lt;/em&gt;&lt; /图标题&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;4 — 提升协作和创新&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;到目前为止，我的开源项目和社区之旅向我展示了与常规软件工程实践的有趣对比。开源每天都在补充公司的软件工程能力。由于该领域的混乱性质，在开源领域发挥更积极的作用会带来一些风险。尽管如此，我相信，要成为技术领域的领导者，有意识地承担这些风险并从塑造技术中受益非常重要，不仅为您的客户而且为其他所有人。据探索，这样做有很多动机。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;仍然存在一个问题，即现在和未来依赖软件来保持竞争力的更多传统公司何时会达到数字成熟度，以便像数字原住民一样为开源做出贡献。对于一些公司来说，他们已经达到了这个阶段。从这个角度来看，这个空间未来将如何演变还有待观察。在公司中创建协作和创新的环境是很困难的。开源可以激发人们想象软件战争中更加协作和民主的过程未来的工程。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 21 Nov 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Cloud Neutral Postgres Databases with Kubernetes and CloudNativePG】使用 Kubernetes 和 CloudNativePG 的云中立 Postgres 数据库</title>
      <link>https://www.cncf.io/blog/2024/11/20/cloud-neutral-postgres-databases-with-kubernetes-and-cloudnativepg/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post by Gabriele Bartolini, VP Chief Architect of Kubernetes at EDB&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Abstract&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;This article delves into the concept of cloud neutrality— a term I prefer over agnosticism— in PostgreSQL deployments. It highlights the transformative impact of Kubernetes as a cloud-neutral platform, enabling organizations to deploy and manage PostgreSQL across diverse environments, including on-premises, hybrid, and multi-cloud setups. Key organizational considerations, such as vendor lock-in, cost predictability, and development velocity, are examined alongside various deployment models, from traditional on-premises Linux to modern Kubernetes-based solutions. The discussion emphasizes the importance of involving database administrators (DBAs) in transitioning to cloud-native architectures and presents CloudNativePG as a robust solution for building a scalable, flexible, and cloud-neutral PostgreSQL ecosystem.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Introduction&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The demand for databases continues to grow at a rapid pace. Gartner reports that the global database market grew by 13.4% in 2023, with nearly 80% of databases being relational systems like &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;. This surge is further propelled by the expanding presence of hyperscalers—Amazon, Google, and Microsoft—offering robust Database-as-a-Service (DBaaS) solutions. PostgreSQL has solidified its position as the &lt;a href=&#34;https://survey.stackoverflow.co/2024/technology#1-databases&#34;&gt;most popular database&lt;/a&gt;, with increasing adoption not only for its technical strengths but also as a way to reduce vendor lock-in.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While public cloud services continue to dominate the market, many organizations that rely on PostgreSQL are increasingly adopting &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; as a central part of their infrastructure strategy. This shift is motivated by the pursuit of &lt;strong&gt;cloud neutrality&lt;/strong&gt;, enabling businesses to avoid vendor lock-in at the provider level and gain greater flexibility while consciously taking on more operational responsibilities. By embracing Kubernetes, organizations also unlock the potential to deliver multi-cloud and hybrid-cloud solutions, providing more versatile services to customers worldwide. Let’s explore how and why this transition is redefining the future of PostgreSQL deployments through the &lt;a href=&#34;https://cloudnative-pg.io/&#34;&gt;CloudNativePG&lt;/a&gt; stack.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfdfTuMmNbmTlEmEARAELKsoAWbev0P0pG2dxKIm1Egwp4cchMIZmIhpbMLet_easl7sPs1v3f5BRk2cnHriGazQJWPVwrqGqyRmOtaId6eW2k8-JBnFRlB0IoWQdgjZ49iCJh44Fk995TvyuiRsD_0djdG?key=kyvUORQo6ThNYsIn4EBwrw&#34; alt=&#34;Image&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;On-Premises PostgreSQL&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When I started using PostgreSQL in production in the early 2000s, I ran it on a bare metal Linux operating system with a hardware RAID controller and multiple locally attached disks. To optimize costs and resource utilization, I ran several PostgreSQL instances on the same machine, each assigned to different TCP ports. This was a common approach to consolidating database infrastructure at the time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As technology advanced, the rise of virtualization and configuration management tools significantly improved on-premises database management. These innovations have fueled PostgreSQL’s global adoption, making on-prem deployments a solid option for organizations that require complete control and ownership of their infrastructure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Today, on-premises deployments are often favored by organizations with a strong understanding of their workloads, who must manage their systems’ security, performance, business continuity, and compliance. Industry-specific regulations, government mandates, and data sovereignty requirements make this approach indispensable in certain sectors.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Postgres in the Cloud: Infrastructure as a Service (IaaS)&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The late 2000s saw a significant shift with the rise of infrastructure-as-a-service (IaaS), driven by the rapid growth of cloud computing. By the early 2010s, Postgres databases were transitioning from traditional on-prem data centers to cloud-based solutions, allowing users to rent virtual servers and storage on demand while paying for actual resource usage.&lt;br&gt;&lt;br&gt;With tools like Terraform and automation platforms like Ansible, the provisioning, deployment, and configuration of PostgreSQL databases has become far more efficient, particularly for Day 1 operations. However, despite the advantages in speed and flexibility, Day 2 operations—such as availability, maintenance, scaling, and optimization—still require substantial involvement from database administrators (DBAs) and often remain confined to the database domain, disconnected from the broader infrastructure and applications.&lt;br&gt;&lt;br&gt;While IaaS solutions reduce lead times for provisioning compute and storage, they also bring challenges such as vendor lock-in and unpredictable costs, despite the promise of pay-as-you-go savings. Hybrid and multi-cloud strategies aim to reduce vendor dependency, but their implementation is often complex and resource-intensive.&lt;br&gt;&lt;br&gt;&lt;em&gt;Interestingly, IaaS also played a pivotal role in accelerating the rise of platform-as-a-service (PaaS) and software-as-a-service (SaaS). A prime example is Heroku, a pioneering PaaS that gained popularity among Ruby developers and significantly contributed to the growing adoption of PostgreSQL around 2010.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Postgres in the Cloud: Database as a Service (DBaaS)&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Building on the IaaS model, Database-as-a-Service (DBaaS) for PostgreSQL has become increasingly popular since 2013, particularly for organizations seeking to outsource most Day 2 operations. With DBaaS, service providers manage the underlying infrastructure, operating system, and PostgreSQL server, allowing customers to focus on application development and business needs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Today, DBaaS is synonymous with cloud databases. Major cloud providers offer DBaaS solutions like &lt;a href=&#34;https://aws.amazon.com/rds/postgresql/&#34;&gt;Amazon RDS for PostgreSQL&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/sql/docs/postgres&#34;&gt;Google Cloud SQL for PostgreSQL&lt;/a&gt;, and &lt;a href=&#34;https://azure.microsoft.com/en-us/products/postgresql&#34;&gt;Azure Database for PostgreSQL&lt;/a&gt;, alongside specialized solutions such as &lt;a href=&#34;https://www.enterprisedb.com/products/edb-postgres-ai-cloud-service&#34;&gt;EDB Postgres AI Cloud Service&lt;/a&gt; from my company. These services simplify database management by providing high availability, disaster recovery, and observability, with geographical redundancy across multiple cloud regions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While DBaaS significantly reduces infrastructure complexity and operational overhead, it limits direct control over the PostgreSQL backend, restricting access to a PostgreSQL connection, CLI, or web-based dashboard. This trade-off can accelerate development velocity, but it also introduces concerns like vendor lock-in, unpredictable costs, and data portability. The recent &lt;a href=&#34;https://digital-strategy.ec.europa.eu/en/policies/data-act&#34;&gt;European Union Data Act&lt;/a&gt; highlights the importance of data portability (i.e. switching between cloud providers, implementing multi/hybrid solutions, and migrating data without downtime), urging organizations to consider these factors carefully when adopting DBaaS. Unless the DBaaS is designed with a multi-cloud approach and specifically optimized for PostgreSQL (as with EDB’s solution), migrating data away from the cloud service provider can be challenging.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Cloud-Neutral PostgreSQL&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Managing PostgreSQL across on-premises, IaaS, and hybrid/multi-cloud environments exposes significant complexity and operational trade-offs. Each scenario brings its own challenges, making it difficult to maintain consistency and flexibility.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A cloud-neutral approach offers a solution by enabling highly portable infrastructure that facilitates seamless transitions between cloud and on-premise environments. This model supports Day 1 tasks (provisioning, setup) and Day 2 tasks (scaling, monitoring, backups), without sacrificing performance or manageability. By using open-source technologies and standardized APIs, organizations can avoid vendor lock-in, reduce operational overhead, and retain the flexibility to choose the best infrastructure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The cloud-neutral PostgreSQL solution we propose is based on the CloudNativePG open-source stack, composed of Kubernetes, PostgreSQL, and CloudNativePG. This stack already empowers organizations worldwide to build highly portable infrastructures, deployable on-premises (including bare metal) or hybrid configurations. By leveraging Kubernetes-as-a-service (KaaS) solutions from hyperscalers like &lt;a href=&#34;https://aws.amazon.com/eks/&#34;&gt;Amazon EKS&lt;/a&gt;, &lt;a href=&#34;https://azure.microsoft.com/en-us/products/kubernetes-service&#34;&gt;Azure AKS&lt;/a&gt;, and &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/&#34;&gt;Google GKE&lt;/a&gt;, or container platforms like &lt;a href=&#34;https://www.redhat.com/en/technologies/cloud-computing/openshift&#34;&gt;Red Hat OpenShift&lt;/a&gt;, or even the standard Kubernetes distribution, businesses can embrace cloud neutrality.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Cloud Neutrality with Kubernetes&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes is an open-source platform that provides a standard abstraction layer for managing infrastructure and applications within Linux containers. Its modular design, extensibility, fault tolerance, self-healing, and compliance with &lt;a href=&#34;https://dora.dev/capabilities/flexible-infrastructure/&#34;&gt;Infrastructure as Code (IaC)&lt;/a&gt; principles make it ideal for organizations looking for highly portable, cloud-neutral infrastructures.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes is the most popular &lt;a href=&#34;https://www.cncf.io/&#34;&gt;Cloud Native Computing Foundation (CNCF)&lt;/a&gt; project and can be deployed anywhere—from bare metal servers to virtual machines. Organizations can choose between self-managed Kubernetes or managed KaaS solutions depending on their expertise. Additionally, enterprise platforms based on Kubernetes, like Red Hat OpenShift, Suse Rancher, or VMware Tanzu, extend cloud neutrality to enterprise environments, facilitating seamless movement between on-premise, private, and public cloud infrastructures.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe15JjRHWtJkjP5Dg_AjjZdB5zrPr8m5zDx53Sl16gIXeOn2e0RBG0Esdc6geFh_cZd5VIeXiK9UBGt4Pl0uyqx82S1HxumEwgv_0-b0uVxhfGAua-PSCyu2e3IxK3H9-SqfaLnnhCmtnjhz8o-OWxVi3LR?key=kyvUORQo6ThNYsIn4EBwrw&#34; alt=&#34;Image&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes unlocks a truly cloud-neutral infrastructure, allowing organizations to deploy workloads in private, public, or hybrid clouds with minimal changes to code or configuration. Thanks to &lt;a href=&#34;https://dora.dev/capabilities/flexible-infrastructure/&#34;&gt;GitOps and the integration of IaC&lt;/a&gt;, Kubernetes is a key enabler for cloud-neutral PostgreSQL, providing the flexibility needed for future-proof database deployments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Cloud-Neutrality for PostgreSQL with CloudNativePG&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes facilitates cloud neutrality for infrastructure and containerized workloads, but managing PostgreSQL databases in this environment presents unique challenges. While Kubernetes treats PostgreSQL as just another application, relying on standard resources like &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&#34;&gt;`Deployments`&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/&#34;&gt;`StatefulSets`&lt;/a&gt; is &lt;a href=&#34;https://www.gabrielebartolini.it/articles/2024/06/kubernetes-just-turned-ten-where-does-postgresql-stand/#the-operator-pattern-essential-for-databases&#34;&gt;insufficient due to the database’s inherent complexity&lt;/a&gt;. Though we often strive to move away from treating databases as “&lt;em&gt;pets&lt;/em&gt;” and adopt the “&lt;em&gt;cattle&lt;/em&gt;” model, it’s important to remember that PostgreSQL’s mascot is an &lt;em&gt;elephant&lt;/em&gt;—symbolizing strength and requiring careful management (instead of “cattle,” perhaps “&lt;em&gt;herd&lt;/em&gt;” is the more fitting analogy).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is where a PostgreSQL Operator comes into play. The operator pattern extends Kubernetes’ capabilities through custom resources, controllers, and declarative configurations, allowing the orchestration of complex applications like PostgreSQL in a cloud-native way.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A well-designed PostgreSQL operator provides the essential custom resources and controllers that enable Kubernetes to manage the database efficiently. This ensures PostgreSQL meets core cloud-native requirements such as high availability, self-healing, scalability, and security, while also leveraging its powerful business continuity features. These include native replication mechanisms like Hot Standby, synchronous replication, cascading replication, along with support for hot backups, continuous backup, and Point-in-Time Recovery (PITR). Together, these capabilities form a solid foundation for data integrity, resilience, and operational excellence in a cloud-native world.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are several PostgreSQL operators available, but &lt;a href=&#34;https://cloudnative-pg.io/&#34;&gt;CloudNativePG&lt;/a&gt; is the one on which I will be focusing, for a few key reasons:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;I am one of the founders and maintainers of the project.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;It’s &lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg/blob/main/LICENSE&#34;&gt;open-source&lt;/a&gt;, licensed under Apache License 2.0.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;It is the only PostgreSQL operator &lt;a href=&#34;https://github.com/cloudnative-pg/governance/blob/main/GOVERNANCE.md&#34;&gt;governed by a vendor-neutral community&lt;/a&gt;. While EDB, the original creator and major contributing organization, &lt;a href=&#34;https://www.enterprisedb.com/blog/introducing-cloudnativepg-new-open-source-kubernetes-operator-postgres&#34;&gt;donated the intellectual property to the CloudNativePG community in May 2022&lt;/a&gt;, the community now openly manages the project.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;It is the only PostgreSQL operator &lt;a href=&#34;https://github.com/cncf/sandbox/issues/128&#34;&gt;submitted to the CNCF Sandbox&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;It’s the &lt;a href=&#34;https://star-history.com/#cloudnative-pg/cloudnative-pg&amp;amp;zalando/postgres-operator&amp;amp;CrunchyData/postgres-operator&amp;amp;ongres/stackgres&amp;amp;percona/percona-postgresql-operator&amp;amp;reactive-tech/kubegres&amp;amp;cybertec-postgresql/CYBERTEC-pg-operator&amp;amp;Date&#34;&gt;most popular PostgreSQL operator on GitHub with over 4.5k stars&lt;/a&gt;, &lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg/pkgs/container/cloudnative-pg&#34;&gt;58M downloads&lt;/a&gt;, the fastest-growing adoption rate, and the highest level of &lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg/graphs/community?period=last_year&#34;&gt;community engagement&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloudnative-pg.io/documentation/current/&#34;&gt;The documentation&lt;/a&gt; is very comprehensive.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/Nsu5Em8Ig88?si=1dyTjy0l5EKgPrXi&amp;amp;t=1059&#34;&gt;CloudNativePG is Kubernetes-native&lt;/a&gt;, fully leveraging and extending the Kubernetes API. It is entirely declarative, secure by default, and integrates seamlessly with cloud-native standard tools for observability.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CloudNativePG collaborates with the Kubernetes storage project to address the unique demands of large database workloads, particularly in the areas of volume snapshot for backup/recovery and local storage for performance and data durability.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By defining a CloudNativePG `Cluster` resource, users can ensure their PostgreSQL database, with a primary node and any number of read-only replicas, operates in business continuity scenarios with minimal Recovery Time Objectives (RTO) and Recovery Point Objectives (RPO), with 99.99% uptime realistically attainable over a year. The same resource can be deployed, unchanged, across any cloud environment or multiple Kubernetes clusters for hybrid and multi-cloud scenarios, handling most Day 2 operations automatically. Users retain full control over their data with no vendor lock-in, ensuring complete data portability as required by the European Union’s Data Act (PostgreSQL’s native streaming replication—logical or physical—supports this flexibility).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is how the CloudNativePG stack, built on Kubernetes and PostgreSQL, delivers true cloud neutrality.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Additionally, Kubernetes’ scheduling capabilities allow users to &lt;a href=&#34;https://cloudnative-pg.io/documentation/current/architecture/#reserving-nodes-for-postgresql-workloads&#34;&gt;allocate specific machines for PostgreSQL workloads&lt;/a&gt;. By applying &lt;a href=&#34;https://cloudnative-pg.io/documentation/current/scheduling/#isolating-postgresql-workloads&#34;&gt;labels and taints to nodes and defining affinity rules and tolerations on CloudNativePG `Cluster` resources&lt;/a&gt;, PostgreSQL can run in complete isolation from other applications at the physical layer, while seamlessly integrating at the logical layer. This approach mirrors a &lt;a href=&#34;https://www.gabrielebartolini.it/articles/2024/02/maximizing-microservice-databases-with-kubernetes-postgres-and-cloudnativepg/&#34;&gt;microservice database architecture&lt;/a&gt;, where the application and its backend coexist within the same Kubernetes namespace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Cloud-Neutrality for PostgreSQL DBaaS with CloudNativePG&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Moreover, the CloudNativePG stack is an excellent choice for isolating applications and backend databases at the logical layer while providing a cloud-neutral database-as-a-service (DBaaS) solution. Relying on standard resources, such as &lt;a href=&#34;https://www.gabrielebartolini.it/articles/2024/08/cnpg-recipe-12-exposing-postgres-outside-kubernetes-with-service-templates/&#34;&gt;load balancer services&lt;/a&gt;, safely exposes PostgreSQL outside Kubernetes. This setup effectively serves both internal customers within your organization and external clients, as demonstrated by &lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg/blob/main/ADOPTERS.md&#34;&gt;IBM’s Cloud Pak, EDB’s Postgres AI Cloud Service, and Tembo&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;The Return of Bare Metal PostgreSQL&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One of the most common misconceptions about Kubernetes is that it can only run on virtual machines. In reality, Kubernetes operates just as effectively—if not more efficiently—on bare metal infrastructure without the need for a hypervisor. The diagram below offers a simplified view of the key layers in bare metal and virtual machine Kubernetes nodes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfgrjMsxCdIAI6E5hb5nw0Qmnq-2w9nSiULFae2ZFPA2mxx8FmsXxoLgK3onb5gNv2nKGNuEfyCxRzzLXOlD6Y74t36yzS5wcOhqZUq144ZwH0VC7gie3jC3QElP5Y6L8LsgZTvwnMso7mylir6RCGPewKg?key=kyvUORQo6ThNYsIn4EBwrw&#34; alt=&#34;Image&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By running directly on the host, containers can fully exploit the underlying hardware, eliminating the overhead of virtualization and even &lt;a href=&#34;https://thenewstack.io/does-kubernetes-really-perform-better-on-bare-metal-vs-vms/&#34;&gt;doubling the efficiency and performance compared to VMs&lt;/a&gt;. This is especially important for stateful workloads, such as databases, which can be deployed on dedicated bare metal Kubernetes nodes and benefit from locally attached storage. This setup creates a unique opportunity for database professionals to implement highly performant, robust, shared-nothing architectures for PostgreSQL clusters, all managed seamlessly through declarative configuration. &lt;em&gt;(After all, the very existence of CloudNativePG stems from the first fail-fast experiment my team conducted in late 2019, when we launched our Postgres initiative. The goal was to&lt;/em&gt;&lt;a href=&#34;https://www.enterprisedb.com/blog/local-persistent-volumes-and-postgresql-usage-kubernetes&#34;&gt;&lt;em&gt; measure the performance of Kubernetes&lt;/em&gt;&lt;/a&gt;&lt;em&gt; on bare metal—and, as you might have guessed, the results spoke for themselves.)&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thanks to the CloudNativePG stack, PostgreSQL DBAs can now run PostgreSQL on-premises in Kubernetes, on bare metal, and replicate it across private or public Kubernetes clusters using symmetric architectures. This offers a highly portable and standardized approach to hybrid cloud environments—a truly cloud-neutral PostgreSQL solution that can help reverse or slow the migration of databases to public clouds, enabling a shift back to hybrid or fully on-premises deployments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The opportunity for PostgreSQL DBAs&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As I have previously written, &lt;a href=&#34;https://www.gabrielebartolini.it/articles/2024/08/the-urge-of-t-shaped-profiles-to-smooth-the-challenges-of-running-postgres-in-kubernetes/&#34;&gt;PostgreSQL DBAs are at a critical career crossroads&lt;/a&gt; when approaching Kubernetes: should they adopt, avoid, or deny it?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Having dedicated the past five years of my Cloud Native initiative to making it easier to run PostgreSQL on Kubernetes, I’m now shifting to the next phase—helping PostgreSQL experts transition smoothly into the Kubernetes ecosystem. While spinning up a PostgreSQL cluster in Kubernetes has now become remarkably straightforward, there is an expansive and largely uncharted realm of opportunities that only seasoned PostgreSQL experts can fully explore and master. This transition will undoubtedly require effort and adaptation from DBAs, who must develop sufficient Kubernetes knowledge (a T-shaped profile) to collaborate effectively with Kubernetes experts regarding the PostgreSQL database from day 0 (planning). However, the rewards are clear, as confirmed by PostgreSQL DBAs who have successfully navigated this journey. In many ways, this transition mirrors the shift DBAs experienced over the past two decades when moving from bare metal to virtual machines.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Based on my experience, PostgreSQL DBAs deeply appreciate open-source software and are well-versed in running Linux commands. Kubernetes, alongside Linux and PostgreSQL, is one of the most fascinating and transformative open-source projects and communities in history. While Kubernetes is vast and complex, it is also modular, meaning DBAs don’t need to master every aspect of it. Instead, they can focus on the essentials for managing CloudNativePG PostgreSQL clusters: understanding pods and containers, networking (service resources), storage (storage classes, persistent volume claims, and persistent volumes), and having enough familiarity to collaborate effectively with infrastructure administrators on areas like IaC, GitOps, TLS certificates, monitoring (using Prometheus for metrics and alerts), and logging (as logs aren’t stored on disk). Investing a month or two of study into this skill set can unlock a decade of new opportunities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;The Decision-Making Process Behind Cloud Databases&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Achieving true cloud neutrality at the infrastructure level requires your organization to develop or acquire Kubernetes expertise through internal teams or external partnerships. This expertise varies depending on the platform choice—whether using upstream Kubernetes (which demands the most skills), Kubernetes-as-a-Service (KaaS), or enterprise-grade container platforms like Red Hat OpenShift and SUSE Rancher.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The diagram below outlines the decision-making process for adopting the CloudNativePG stack based on my experience and analysis of customer journeys and conversations over the past five years. While simplified, it accurately reflects the broader trends in the industry, even if some details may differ in specific contexts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXccEabX5ABngolOpoaq1JnjFhXpKVupsTcYGhWvynFrDzV1Oe0pkm3R8cKma5q1AbAx30Jpon_R58X58E3cTpB0by3L000eH3iSlkVeGa6DowA8yPjoIXdMWdoAqrquZxFUBjJ3HWQoLmtL7z5ZLn3WuK6c?key=kyvUORQo6ThNYsIn4EBwrw&#34; alt=&#34;Image&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For organizations aiming to extend cloud neutrality to PostgreSQL and fully leverage the CloudNativePG stack, it’s essential for PostgreSQL DBAs to be engaged from the start. If your team lacks Kubernetes knowledge or your DBAs are reluctant to embrace this transition, it may be prudent to stick with more familiar options like running PostgreSQL on bare metal, virtual machines, or Infrastructure-as-a-Service (IaaS). Although not explicitly represented in the diagram for simplicity, in these cases, DBAs may also rely on Database-as-a-Service (DBaaS) solutions, especially when other stakeholders like developers drive the decision.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For organizations without dedicated DBAs or Kubernetes expertise, DBaaS remains a popular and pragmatic option.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;However, a growing trend is emerging among organizations that have strategically adopted Kubernetes but don’t have dedicated DBAs. These companies are using the CloudNativePG stack to provide Database-as-a-Service to their internal customers—primarily developers and engineers from other departments. This approach offers a balanced solution between traditional infrastructure management and a fully managed cloud DBaaS. While I can’t disclose specific company names, this use case is increasingly common among larger enterprises in sectors like manufacturing, banking, finance, payments, automotive, and IT services. The trend is especially pronounced in Europe, where on-premise infrastructure is often preferred. The CloudNativePG stack’s ability to provide declarative isolation of workloads, both logically and physically, enables PostgreSQL consolidation on bare metal Kubernetes nodes, creating a win-win scenario for both infrastructure administrators and DBAs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As a final note, it’s important to emphasize that EDB, the original creator and founder of CloudNativePG, is well-positioned to assist enterprises globally in migrating their Postgres databases to Kubernetes. EDB is at the forefront of PostgreSQL on Kubernetes technology, serving as a Silver Member of the CNCF and the only Kubernetes Certified Service Provider actively involved in PostgreSQL development. EDB offers a long-term supported version of CloudNativePG called EDB Postgres for Kubernetes (PG4K), which also provides access to EDB Postgres Advanced Server (EPAS), simplifying Oracle migrations, as well as EDB Postgres Distributed for Kubernetes (PGD4K) for active-active workloads.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Conclusions&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To conclude, the rise of Kubernetes as a cloud-neutral platform is revolutionizing how PostgreSQL is deployed and managed across diverse environments. While blueprints and best practices can offer valuable guidance, the right deployment choice ultimately hinges on your organization’s specific needs and the expertise of its teams.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The table below summarizes key &lt;strong&gt;organizational considerations&lt;/strong&gt;—such as vendor lock-in, cost predictability, and development velocity—across the major PostgreSQL deployment models available today, from traditional on-premises Linux setups to modern Kubernetes-based solutions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;On-Premises PostgreSQL&lt;/td&gt;&lt;td&gt;PostgreSQL in the Cloud (IaaS)&lt;/td&gt;&lt;td&gt;PostgreSQL in the Cloud (DBaaS)&lt;/td&gt;&lt;td&gt;Cloud Neutral PostgreSQL (KaaS)&lt;/td&gt;&lt;td&gt;Cloud Neutral PostgreSQL (Self-Managed)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Deployment model&lt;/td&gt;&lt;td&gt;Purchase /&lt;br&gt;Consumption-based&lt;/td&gt;&lt;td&gt;Consumption-based&lt;/td&gt;&lt;td&gt;Consumption-based&lt;/td&gt;&lt;td&gt;Consumption-based&lt;/td&gt;&lt;td&gt;Purchase /&lt;br&gt;Consumption-based&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Cost predictability&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;td&gt;Low/Medium&lt;/td&gt;&lt;td&gt;Low&lt;/td&gt;&lt;td&gt;Medium&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Time to Market for DB Applications&lt;/td&gt;&lt;td&gt;Slow&lt;/td&gt;&lt;td&gt;Medium&lt;/td&gt;&lt;td&gt;Fast&lt;/td&gt;&lt;td&gt;Fast&lt;/td&gt;&lt;td&gt;Fast&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Vendor Lock-In Risk&lt;/td&gt;&lt;td&gt;Low/None&lt;/td&gt;&lt;td&gt;High, typically&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;td&gt;Low&lt;/td&gt;&lt;td&gt;Low/None&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;DBaaS Use&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Yes, internal &amp;amp; external&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;Yes, external only&lt;/td&gt;&lt;td&gt;Yes, internal &amp;amp; external&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After addressing these organizational factors, we can dive deeper into the&lt;strong&gt; infrastructural and operating system layers&lt;/strong&gt; to explore the key technical differences among the deployment options discussed in this article:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;On-Premises PostgreSQL&lt;/td&gt;&lt;td&gt;PostgreSQL in the Cloud (IaaS)&lt;/td&gt;&lt;td&gt;PostgreSQL in the Cloud (DBaaS)&lt;/td&gt;&lt;td&gt;Cloud Neutral PostgreSQL (KaaS)&lt;/td&gt;&lt;td&gt;Cloud Neutral PostgreSQL (Self-Managed)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Hardware costs&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;td&gt;None&lt;/td&gt;&lt;td&gt;None&lt;/td&gt;&lt;td&gt;None&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Installation method&lt;/td&gt;&lt;td&gt;Packages on OS&lt;/td&gt;&lt;td&gt;Packages on OS&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;Immutable containers&lt;/td&gt;&lt;td&gt;Immutable containers&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Bare Metal Support with Local Storage&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;No, typically&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;No, typically&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Control Over System Configuration&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;td&gt;None&lt;/td&gt;&lt;td&gt;None&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Private Cloud Capability&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Public Cloud Availability&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Yes, potentially&lt;br&gt;via IaaS&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Hybrid Cloud Support&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Multi-Cloud Support&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Yes, but hard&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Yes, potentially&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;At this point, all major organizational and architectural considerations have been addressed, and your decision on which cloud model to adopt is likely clear. However, it’s equally important to evaluate aspects related to the Postgres &lt;strong&gt;database&lt;/strong&gt; itself and the &lt;strong&gt;data&lt;/strong&gt; it manages. These factors, summarized in the table below, can have a significant impact on your final deployment choice:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;On-Premises PostgreSQL&lt;/th&gt;&lt;th&gt;PostgreSQL in the Cloud (IaaS)&lt;/th&gt;&lt;th&gt;PostgreSQL in the Cloud (DBaaS)&lt;/th&gt;&lt;th&gt;Cloud Neutral PostgreSQL (KaaS)&lt;/th&gt;&lt;th&gt;Cloud Neutral PostgreSQL (Self-Managed)&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Business Continuity &amp;amp; Compliance&lt;/th&gt;&lt;th&gt;Yes, full responsibility&lt;/th&gt;&lt;th&gt;Yes, OS and up&lt;/th&gt;&lt;th&gt;No, database content only&lt;/th&gt;&lt;th&gt;Yes, database&lt;/th&gt;&lt;th&gt;Yes, full responsibility&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Day 2 Operations (Maintenance)&lt;/th&gt;&lt;th&gt;Manual&lt;/th&gt;&lt;th&gt;Manual&lt;/th&gt;&lt;th&gt;Automated&lt;/th&gt;&lt;th&gt;Automated&lt;/th&gt;&lt;th&gt;Automated&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Data portability (EU Data Act)&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Control Over PostgreSQL Configuration&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;td&gt;Limited&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Database performance&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;td&gt;Medium&lt;/td&gt;&lt;td&gt;Medium&lt;/td&gt;&lt;td&gt;Medium&lt;/td&gt;&lt;td&gt;High&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Postgres Extensions Support&lt;/td&gt;&lt;td&gt;Full control&lt;/td&gt;&lt;td&gt;Full Control&lt;/td&gt;&lt;td&gt;Controlled by the provider&lt;/td&gt;&lt;td&gt;Full control&amp;nbsp;&lt;/td&gt;&lt;td&gt;Full control&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Postgres PKI Support (mTLS)&lt;/td&gt;&lt;td&gt;Yes, complex&lt;/td&gt;&lt;td&gt;Yes, complex&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With CloudNativePG, organizations can embrace a robust, high-performance, and standardized approach to running PostgreSQL clusters across bare metal, hybrid, or multi-cloud environments, all driven by declarative configuration. This empowers DBAs to implement cloud-neutral, shared-nothing architectures that avoid vendor lock-in while retaining full control over data and performance. As businesses increasingly move away from cloud-dependent models, CloudNativePG offers a scalable, future-proof solution for managing PostgreSQL in diverse and complex environments, including a return to on-premises deployments.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;EDB Kubernetes 副总裁首席架构师 Gabriele Bartolini 发表的会员帖子&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;摘要&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;em&gt;本文深入探讨了 PostgreSQL 部署中的云中立性概念（相对于不可知论，我更喜欢这个术语）。它强调了 Kubernetes 作为云中立平台的变革性影响，使组织能够跨不同环境（包括本地、混合和多云设置）部署和管理 PostgreSQL。关键的组织考虑因素（例如供应商锁定、成本可预测性和开发速度）与各种部署模型（从传统的本地 Linux 到现代基于 Kubernetes 的解决方案）一起进行了检查。讨论强调了数据库管理员 (DBA) 参与过渡到云原生架构的重要性，并提出 CloudNativePG 作为构建可扩展、灵活和云中立的 PostgreSQL 生态系统的强大解决方案。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;简介&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对数据库的需求持续快速增长。 Gartner 报告称，2023 年全球数据库市场增长 13.4%，其中近 80% 的数据库是 &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; 等关系系统。亚马逊、谷歌和微软等提供强大数据库即服务 (DBaaS) 解决方案的超大规模提供商的不断扩张进一步推动了这一激增。 PostgreSQL 已经巩固了其作为&lt;a href=&#34;https://survey.stackoverflow.co/2024/technology#1-databases&#34;&gt;最受欢迎的数据库&lt;/a&gt;的地位，其采用率的不断提高不仅是因为其技术优势，还因为作为减少供应商锁定的一种方式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然公共云服务继续主导市场，但许多依赖 PostgreSQL 的组织越来越多地采用 &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; 作为其基础设施战略的核心部分。这一转变的动机是追求&lt;strong&gt;云中立性&lt;/strong&gt;，使企业能够避免供应商级别的供应商锁定，并获得更大的灵活性，同时有意识地承担更多的运营责任。通过采用 Kubernetes，组织还释放了提供多云和混合云解决方案的潜力，为全球客户提供更多样化的服务。让我们探讨一下这种转变如何以及为何通过 &lt;a href=&#34;https://cloudnative-pg.io/&#34;&gt;CloudNativePG&lt;/a&gt; 堆栈重新定义 PostgreSQL 部署的未来。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXfdfTuMmNbmTlEmEARAELKsoAWbev0P0pG2dxKIm1Egwp4cchMIZmIhpbMLet_eas l7sPs1v3f5BRk2cnHriGazQJWPVwrqGqyRmOtaId6eW2k8-JBnFRlB0IoWQdgjZ49iCJh44Fk995TvyuiRsD_0djdG?key=kyvUORQo6ThNYsIn4EBwrw&#34; alt=&#34;图片&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;本地 PostgreSQL&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当我在 2000 年代初开始在生产中使用 PostgreSQL 时，我发现它位于带有硬件 RAID 控制器和多个本地连接磁盘的裸机 Linux 操作系统上。为了优化成本和资源利用率，我在同一台计算机上运行了多个 PostgreSQL 实例，每个实例分配给不同的 TCP 端口。这是当时整合数据库基础设施的常见方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着技术的进步，虚拟化和配置管理工具的兴起显着改善了本地数据库管理。这些创新推动了 PostgreSQL 在全球的采用，使本地部署成为需要完全控制和拥有其基础设施的组织的可靠选择。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如今，本地部署通常受到对其工作负载有深入了解的组织的青睐，这些组织必须管理其系统的安全性、性能、业务连续性和合规性。特定行业的法规、政府指令和数据主权要求使得这种方法在某些行业中不可或缺。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;云中的 Postgres：基础设施即服务 (IaaS)&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2000 年代末，在云计算快速增长的推动下，基础设施即服务 (IaaS) 兴起，出现了重大转变。到 2010 年代初，Postgres 数据库从传统的本地数据中心过渡到基于云的解决方案，允许用户按需租用虚拟服务器和存储，同时为实际资源使用付费。&lt;br&gt;&lt;br&gt;使用 Terraform 和在 Ansible 等自动化平台上，PostgreSQL 数据库的供应、部署和配置变得更加高效，尤其是对于第一天的操作。然而，尽管在速度和灵活性方面具有优势，但 Day 2 操作（例如可用性、维护、扩展和优化）仍然需要数据库管理员 (DBA) 的大量参与，并且通常仍局限于数据库域，与更广泛的基础设施和服务脱节。 &lt;br&gt;&lt;br&gt;虽然 IaaS 解决方案缩短了配置计算和存储的交付时间，但它们也带来了供应商锁定和不可预测的成本等挑战，尽管它们承诺按需付费节省成本。混合云和多云策略旨在减少供应商依赖性，但其实施往往非常复杂且占用资源。&lt;br&gt;&lt;br&gt;&lt;em&gt;有趣的是，IaaS 在加速平台即服务的崛起方面也发挥了关键作用。 - 服务 (PaaS) 和软件即服务 (SaaS)。一个典型的例子是 Heroku，这是一种开创性的 PaaS，在 Ruby 开发人员中广受欢迎，并在 2010 年左右为 PostgreSQL 的日益普及做出了重大贡献。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;云中的 Postgres：数据库即服务 (DBaaS)&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自 2013 年以来，基于 IaaS 模型的 PostgreSQL 数据库即服务 (DBaaS) 变得越来越受欢迎，特别是对于寻求外包大部分 Day 2 运营的组织而言。与DBaaS、服务提供商管理底层基础设施、操作系统和PostgreSQL服务器，让客户专注于应用程序开发和业务需求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如今，DBaaS 已成为云数据库的代名词。主要云提供商提供 DBaaS 解决方案，例如 &lt;a href=&#34;https://aws.amazon.com/rds/postgresql/&#34;&gt;Amazon RDS for PostgreSQL&lt;/a&gt;、&lt;a href=&#34;https://cloud.google. com/sql/docs/postgres&#34;&gt;Google Cloud SQL for PostgreSQL&lt;/a&gt; 和 &lt;a href=&#34;https://azure.microsoft.com/en-us/products/postgresql&#34;&gt;Azure Database for PostgreSQL&lt;/a&gt; a&gt;，以及诸如 &lt;a href=&#34;https://www.enterprisedb.com/products/edb-postgres-ai-cloud-service&#34;&gt;我公司的 EDB Postgres AI 云服务&lt;/a&gt;。这些服务通过提供高可用性、灾难恢复和可观察性以及跨多个云区域的地理冗余来简化数据库管理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然 DBaaS 显着降低了基础设施复杂性和运营开销，但它限制了对 PostgreSQL 后端的直接控制，限制了对 PostgreSQL 连接、CLI 或基于 Web 的仪表板的访问。这种权衡可以加快开发速度，但也会带来供应商锁定、不可预测的成本和数据可移植性等问题。最近的&lt;a href=&#34;https://digital-strategy.ec.europa.eu/en/policies/data-act&#34;&gt;欧盟数据法案&lt;/a&gt;强调了数据可移植性的重要性（即在云提供商之间切换） 、实施多重/混合解决方案以及在不停机的情况下迁移数据），敦促组织在采用 DBaaS 时仔细考虑这些因素。除非 DBaaS 采用多云方法设计并专门针对 PostgreSQL 进行优化（与 EDB 的解决方案一样），否则将数据从云服务提供商迁移出去可能会具有挑战性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;云中立 PostgreSQL&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;跨本地、IaaS 和混合/多云环境管理 PostgreSQL 会带来巨大的复杂性和运营权衡。每个场景都有自己的挑战，因此很难保持一致性和灵活性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;云中立方法通过启用高度可移植的基础架构来提供解决方案，从而促进云和本地环境之间的无缝转换。该模型支持第 1 天任务（配置、设置）和第 2 天任务（扩展、监控、备份），而不会牺牲性能或可管理性。通过使用开源技术和标准化 API，组织可以避免供应商锁定、减少运营开销并保留选择最佳基础设施的灵活性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们提出的云中立 PostgreSQL 解决方案基于 CloudNativePG 开源堆栈，由 Kubernetes、PostgreSQL 和 CloudNativePG 组成。该堆栈已经使世界各地的组织能够构建高度可移植的基础设施、可部署的本地（包括裸机）或混合配置。通过利用库伯来自超大规模提供商的 netes-as-a-service (KaaS) 解决方案，例如 &lt;a href=&#34;https://aws.amazon.com/eks/&#34;&gt;Amazon EKS&lt;/a&gt;、&lt;a href=&#34;https://azure .microsoft.com/en-us/products/kubernetes-service&#34;&gt;Azure AKS&lt;/a&gt; 和 &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/&#34;&gt;Google GKE&lt;/a&gt; &gt;，或像 &lt;a 这样的容器平台href=&#34;https://www.redhat.com/en/technologies/cloud-computing/openshift&#34;&gt;Red Hat OpenShift&lt;/a&gt;，甚至是标准的 Kubernetes 发行版，企业可以拥抱云中立性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Kubernetes 的云中立性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 是一个开源平台，为管理 Linux 容器内的基础设施和应用程序提供了标准抽象层。其模块化设计、可扩展性、容错性、自我修复性以及遵守&lt;a href=&#34;https://dora.dev/capability/flexible-infrastruct/&#34;&gt;基础设施即代码 (IaC)&lt;/a&gt; 原则使其成为非常适合寻求高度便携、云中立基础设施的组织。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 是最受欢迎的&lt;a href=&#34;https://www.cncf.io/&#34;&gt;云原生计算基金会 (CNCF)&lt;/a&gt; 项目，可以部署在从裸机服务器到虚拟机的任何地方。组织可以根据自己的专业知识在自我管理的 Kubernetes 或托管 KaaS 解决方案之间进行选择。此外，基于 Kubernetes 的企业平台（例如 Red Hat OpenShift、Suse Rancher 或 VMware Tanzu）将云中立性扩展到企业环境，促进本地、私有和公共云基础设施之间的无缝移动。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXe15JjRHWtJkjP5Dg_AjjZdB5zrPr8m5zDx53Sl16gIXeOn2e0RBG0Esdc6geFh_c Zd5VIeXiK9UBGt4Pl0uyqx82S1HxumEwgv_0-b0uVxhfGAua-PSCyu2e3IxK3H9-SqfaLnnhCmtnjhz8o-OWxVi3LR?key=kyvUORQo6ThNYsIn4EBwrw&#34; alt=&#34;图片&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 解锁了真正的云中立基础设施，允许组织在私有云、公共云或混合云中部署工作负载，只需对代码或配置进行最少的更改。得益于 &lt;a href=&#34;https://dora.dev/capability/flexible-infrastruct/&#34;&gt;GitOps 和 IaC 的集成&lt;/a&gt;，Kubernetes 成为云中立 PostgreSQL 的关键推动者，提供了所需的灵活性面向未来的数据库部署。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;使用 CloudNativePG 实现 PostgreSQL 的云中立性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Kubernetes 促进了基础设施和容器化工作负载的云中立性，但在此环境中管理 PostgreSQL 数据库面临着独特的挑战。虽然 Kubernetes 将 PostgreSQL 视为另一个应用程序，但依赖于 &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&#34;&gt;`Deployments`&lt;/a&gt; 和 &lt;a href =&#34;https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/&#34;&gt;`StatefulSets`&lt;/a&gt; 是 &lt;a href=&#34;https://www.gabrielebartolini.it/articles/2024/06/kubernetes-just-turned-ten-where-does-postgresql-stand/#the-operator-pattern-essential-for-databases&#34;&gt;由于数据库固有的复杂性而不够充分&lt;/a&gt;。尽管我们经常努力摆脱对数据库的处理作为“&lt;em&gt;宠物&lt;/em&gt;”并采用“&lt;em&gt;牛&lt;/em&gt;”模型，重要的是要记住 PostgreSQL 的吉祥物是&lt;em&gt;大象&lt;/em&gt;——象征着力量，需要精心管理（也许“&lt;em&gt;牛群&lt;/em&gt;”比“牛”更合适）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这就是 PostgreSQL Operator 发挥作用的地方。运算符模式通过自定义资源、控制器和声明性配置扩展了 Kubernetes 的功能，允许以云原生方式编排 PostgreSQL 等复杂应用程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;精心设计的 PostgreSQL Operator 提供了必要的自定义资源和控制器，使 Kubernetes 能够有效地管理数据库。这确保 PostgreSQL 满足核心云原生要求，例如高可用性、自我修复、可扩展性和安全性，同时还利用其强大的业务连续性功能。其中包括热备、同步复制、级联复制等本机复制机制，以及对热备份、连续备份和时间点恢复 (PITR) 的支持。这些功能共同构成了云原生世界中数据完整性、弹性和卓越运营的坚实基础。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有多个可用的 PostgreSQL 运算符，但由于以下几个关键原因，&lt;a href=&#34;https://cloudnative-pg.io/&#34;&gt;CloudNativePG&lt;/a&gt; 是我将重点关注的一个：&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;我是该项目的创始人和维护者之一。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;它是&lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg/blob/main/LICENSE&#34;&gt;开源&lt;/a&gt;，根据 Apache License 2.0 获得许可。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;它是唯一&lt;a href=&#34;https://github.com/cloudnative-pg/governance/blob/main/GOVERNANCE.md&#34;&gt;由供应商中立社区监管&lt;/a&gt;的 PostgreSQL 运营商。而 EDB 作为原始创建者和主要贡献组织，&lt;a href=&#34;https://www.enterprisedb.com/blog/introducing-cloudnativepg-new-open-source-kubernetes-operator-postgres&#34;&gt;将知识产权捐赠给于 2022 年 5 月加入 CloudNativePG 社区&lt;/a&gt;，该社区现在公开管理该项目。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;它是唯一&lt;a href=&#34;https://github.com/cncf/sandbox/issues/128&#34;&gt;提交到 CNCF 沙盒&lt;/a&gt;的 PostgreSQL 算子。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;这是&lt;a href=&#34;https://star-history.com/#cloudnative-pg/cloudnative-pg&amp;zalando/postgres-operator&amp;CrunchyData/postgres-operator&amp;ongres/stackgres&amp;percona/percona-postgresql-operator&amp;reactive-tech/kubegres&amp;cybertec-postgresql /CYBERTEC-pg-operator&amp;Date&#34;&gt;GitHub 上最流行的 PostgreSQL 运算符超过 4.5k 星&lt;/a&gt;，&lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg/pkgs/container/cloudnative-pg&#34;&gt;5800 万次下载&lt;/a&gt;，速度最快wing 采用率以及最高水平的&lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg/graphs/community?period=last_year&#34;&gt;社区参与度&lt;/a&gt;。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloudnative-pg.io/documentation/current/&#34;&gt;文档&lt;/a&gt;非常全面。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/Nsu5Em8Ig88?si=1dyTjy0l5EKgPrXi&amp;t=1059&#34;&gt;CloudNativePG 是 Kubernetes 原生&lt;/a&gt;，充分利用和扩展 Kubernetes API。它完全是声明性的，默认情况下是安全的，并且与云原生标准工具无缝集成以实现可观察性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;CloudNativePG 与 Kubernetes 存储项目合作，满足大型数据库工作负载的独特需求，特别是在用于备份/恢复的卷快照以及用于提高性能和数据持久性的本地存储领域。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过定义 CloudNativePG“集群”资源，用户可以确保其 PostgreSQL 数据库（具有主节点和任意数量的只读副本）在业务连续性场景中运行，恢复时间目标 (RTO) 和恢复点目标 (RTO) 最小RPO），一年内可实际实现 99.99% 的正常运行时间。可以在任何云环境或混合和多云场景的多个 Kubernetes 集群中部署相同的资源，无需更改，自动处理大多数第 2 天操作。用户保留对其数据的完全控制权，不受供应商锁定，确保按照欧盟数据法案的要求实现完整的数据可移植性（PostgreSQL 的本机流复制（逻辑或物理）支持这种灵活性）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这就是基于 Kubernetes 和 PostgreSQL 构建的 CloudNativePG 堆栈如何提供真正的云中立性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，Kubernetes 的调度功能允许用户&lt;a href=&#34;https://cloudnative-pg.io/documentation/current/architecture/#reserving-nodes-for-postgresql-workloads&#34;&gt;为 PostgreSQL 分配特定的机器工作负载&lt;/a&gt;。通过&lt;a href=&#34;https://cloudnative-pg.io/documentation/current/scheduling/#isolated-postgresql-workloads&#34;&gt;向节点应用标签和污点，并在 CloudNativePG `Cluster` 资源上定义亲和性规则和容忍&lt;/ a&gt;、PostgreSQL可以在物理层与其他应用程序完全隔离运行，同时在逻辑层无缝集成。这种方法反映了&lt;a href=&#34;https://www.gabrielebartolini.it/articles/2024/02/maximizing-microservice-databases-with-kubernetes-postgres-and-cloudnativepg/&#34;&gt;微服务数据库架构&lt;/a&gt; ，应用程序及其后端共存于同一 Kubernetes 命名空间中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;使用 CloudNativePG 实现 PostgreSQL DBaaS 的云中立性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，CloudNativePG 堆栈是在逻辑层隔离应用程序和后端数据库的绝佳选择，同时提供云中立的数据库即服务 (DBaaS) 解决方案。依赖标准资源，例如 &lt;a href=&#34;https://www.gabrielebartolini.it/articles/2024/08/cnpg-recipe-12-exusing-postgres-outside-kubernetes-with-service-templates/&#34;&gt;负载均衡器服务&lt;/a&gt;，安全地将 PostgreSQL 暴露在 Kubernetes 之外。此设置有效地服务组织内的内部客户和外部客户，如&lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg/blob/main/ADOPTERS.md&#34;&gt;IBM 的 Cloud Pak、EDB 的 Postgres AI 云服务和 Tembo&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;裸机 PostgreSQL 的回归&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;关于 Kubernetes 最常见的误解之一是它只能在虚拟机上运行。事实上，Kubernetes 在裸机基础设施上运行同样有效（甚至更高效），无需虚拟机管理程序。下图提供了裸机和虚拟机 Kubernetes 节点中关键层的简化视图。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfgrjMsxCdIAI6E5hb5nw0Qmnq-2w9nSiULFae2ZFPA2mxx8FmsXxoLgK3onb5gNv 2nKGNuEfyCxRzzLXOlD6Y74t36yzS5wcOhqZUq144ZwH0VC7gie3jC3QElP5Y6L8LsgZTvwnMso7mylir6RCGPewKg?key=kyvUORQo6ThNYsIn4EBwrw&#34; alt=&#34;图片&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过直接在主机上运行，​​容器可以充分利用底层硬件，消除虚拟化的开销，甚至&lt;a href=&#34;https://thenewstack.io/does-kubernetes-really-perform-b​​etter-on- bare-metal-vs-vms/&#34;&gt;与 VM 相比，效率和性能提高了一倍&lt;/a&gt;。这对于有状态工作负载（例如数据库）尤其重要，这些工作负载可以部署在专用的裸机 Kubernetes 节点上并受益于本地连接的存储。此设置为数据库专业人员创造了一个独特的机会，可以为 PostgreSQL 集群实现高性能、健壮、无共享的架构，所有这些都通过声明性配置进行无缝管理。 &lt;em&gt;（毕竟，CloudNativePG 的存在源于我的团队在 2019 年底进行的第一个快速失败实验，当时我们启动了 Postgres 计划。目标是&lt;/em&gt;&lt;a href=&#34;https:// /www.enterprisedb.com/blog/local-persistent-volumes-and-postgresql-usage-kubernetes&#34;&gt;&lt;em&gt;测量 Kubernetes 在裸机上的性能&lt;/em&gt;&lt;/a&gt;&lt;em&gt;，并且，你可能会已经猜到了，结果不言而喻。）&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;得益于 CloudNativePG 堆栈，PostgreSQL DBA 现在可以在 Kubernetes 中的裸机上本地运行 PostgreSQL，并使用对称架构跨私有或公共 Kubernetes 集群进行复制。这为混合云环境提供了一种高度可移植和标准化的方法，这是一种真正的云中立的 PostgreSQL 解决方案，可以帮助逆转或减缓数据库向公共云的迁移，从而实现回到混合或完全本地部署的转变。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;PostgreSQL DBA 的机会&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;正如我之前所写，&lt;a href=&#34;https://www.gabrielebartolini.it/articles/2024/08/the-urge-of-t-shape-profiles-to-smooth-the-challenges-of-running-postgres-in-kubernetes/&#34;&gt;PostgreSQL DBA 正处于职业生涯的关键十字路口&lt;/a&gt; 在接触 Kubernetes 时：他们应该采用、避免还是拒绝？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在过去的五年里，我一直致力于云原生计划，让 PostgreSQL 在 Kubernetes 上运行变得更加容易，现在我正在进入下一阶段——帮助 PostgreSQL 专家顺利过渡到 Kubernetes 生态系统。虽然在 Kubernetes 中构建 PostgreSQL 集群现在变得非常简单，但仍有一个广阔且基本上未知的机会领域，只有经验丰富的 PostgreSQL 专家才能充分探索和掌握。这种转变无疑需要 DBA 的努力和适应，他们必须掌握足够的 Kubernetes 知识（T 形配置文件），以便从第 0 天（计划）开始与 Kubernetes 专家就 PostgreSQL 数据库进行有效协作。然而，正如成功完成这一旅程的 PostgreSQL DBA 所证实的那样，回报是显而易见的。在很多方面，这种转变反映了 DBA 在过去二十年中从裸机迁移到虚拟机时所经历的转变。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;根据我的经验，PostgreSQL DBA 非常欣赏开源软件，并且精通运行 Linux 命令。 Kubernetes 与 Linux 和 PostgreSQL 一样，是历史上最迷人、最具变革性的开源项目和社区之一。虽然 Kubernetes 庞大且复杂，但它也是模块化的，这意味着 DBA 不需要掌握它的每个方面。相反，他们可以专注于管理 CloudNativePG PostgreSQL 集群的要点：了解 Pod 和容器、网络（服务资源）、存储（存储类、持久卷声明和持久卷），并有足够的熟悉度与基础设施管理员在以下方面进行有效协作： IaC、GitOps、TLS 证书、监控（使用 Prometheus 进行指标和警报）和日志记录（因为日志不存储在磁盘上）等领域。投入一两个月的时间学习该技能可以开启十年的新机会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;云数据库背后的决策过程&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要在基础设施级别实现真正的云中立性，您的组织需要通过内部团队或外部合作伙伴开发或获取 Kubernetes 专业知识。这种专业知识因平台选择而异，无论是使用上游 Kubernetes（需要最多技能）、Kubernetes 即服务 (KaaS)，还是红帽 OpenShift 和 SUSE Rancher 等企业级容器平台。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下图根据我过去五年的经验以及对客户旅程和对话的分析，概述了采用 CloudNativePG 堆栈的决策过程。虽然进行了简化，但它准确地反映了行业的更广泛趋势，即使某些细节可能会有所不同。y 在特定上下文中有所不同。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXccEabX5ABngolOpoaq1JnjFhXpKVupsTcYGhWvynFrDzV1Oe0pkm3R8cKma5q1Ab Ax30Jpon_R58X58E3cTpB0by3L000eH3iSlkVeGa6DowA8yPjoIXdMWdoAqrquZxFUBjJ3HWQoLmtL7z5ZLn3WuK6c?key=kyvUORQo6ThNYsIn4EBwrw&#34; alt=&#34;图片&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于旨在将云中立性扩展到 PostgreSQL 并充分利用 CloudNativePG 堆栈的组织来说，PostgreSQL DBA 从一开始就参与其中至关重要。如果您的团队缺乏 Kubernetes 知识，或者您的 DBA 不愿意接受这种转变，那么谨慎的做法可能是坚持使用更熟悉的选项，例如在裸机、虚拟机或基础设施即服务 (IaaS) 上运行 PostgreSQL。尽管为了简单起见没有在图中明确表示，但在这些情况下，DBA 也可能依赖数据库即服务 (DBaaS) 解决方案，特别是当开发人员等其他利益相关者推动决策时。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于没有专门的 DBA 或 Kubernetes 专业知识的组织来说，DBaaS 仍然是一个流行且务实的选择。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，在战略性采用 Kubernetes 但没有专门的 DBA 的组织中正在出现一种日益增长的趋势。这些公司正在使用 CloudNativePG 堆栈为其内部客户（主要是其他部门的开发人员和工程师）提供数据库即服务。这种方法在传统基础设施管理和完全托管的云 DBaaS 之间提供了平衡的解决方案。虽然我无法透露具体的公司名称，但这种用例在制造、银行、金融、支付、汽车和 IT 服务等行业的大型企业中越来越常见。这一趋势在欧洲尤其明显，那里通常首选本地基础设施。 CloudNativePG 堆栈能够在逻辑和物理上提供工作负载的声明式隔离，从而使 PostgreSQL 能够在裸机 Kubernetes 节点上进行整合，从而为基础设施管理员和 DBA 创造双赢的场景。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，需要强调的是，EDB 作为 CloudNativePG 的原始创建者和创始人，有能力帮助全球企业将 Postgres 数据库迁移到 Kubernetes。 EDB 在 Kubernetes 技术方面处于 PostgreSQL 的前沿，是 CNCF 的银牌会员，也是唯一积极参与 PostgreSQL 开发的 Kubernetes 认证服务提供商。 EDB 提供了 CloudNativePG 的长期支持版本，称为 EDB Postgres for Kubernetes (PG4K)，它还提供对 EDB Postgres Advanced Server (EPAS) 的访问，简化了 Oracle 迁移，以及 EDB Postgres Distributed for Kubernetes (PGD4K)，以实现主动-活动工作负载。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;总而言之，Kubernetes 作为云中立平台的崛起正在彻底改变 PostgreSQL 的方式跨不同环境进行部署和管理。虽然蓝图和最佳实践可以提供有价值的指导，但正确的部署选择最终取决于组织的具体需求及其团队的专业知识。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下表总结了当今可用的主要 PostgreSQL 部署模型（从传统的本地 Linux 设置到现代）的关键&lt;strong&gt;组织考虑因素&lt;/strong&gt;，例如供应商锁定、成本可预测性和开发速度基于 Kubernetes 的解决方案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;本地 PostgreSQL&lt;/td&gt;&lt;td &gt;云中的 PostgreSQL (IaaS)&lt;/td&gt;&lt;td&gt;云中的 PostgreSQL (DBaaS)&lt;/td&gt;&lt;td&gt;云中立 PostgreSQL (KaaS)&lt;/td&gt;&lt;td&gt;云中立PostgreSQL（自我管理）&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;部署模型&lt;/td&gt;&lt;td&gt;购买/&lt;br&gt;基于消费&lt;/td&gt;&lt;td&gt;基于消费&lt;/td &gt;&lt;td&gt;基于消费&lt;/td&gt;&lt;td&gt;基于消费&lt;/td&gt;&lt;td&gt;购买/&lt;br&gt;基于消费&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;成本可预测性&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;低/中&lt;/td&gt;&lt;td&gt;低&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;/tr &gt;&lt;tr&gt;&lt;td&gt;数据库的上市时间应用程序&lt;/td&gt;&lt;td&gt;慢&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;快&lt;/td&gt;&lt;td&gt;快&lt;/td&gt;&lt;td&gt;快&lt;/td&gt;&lt;/tr&gt;&lt; tr&gt;&lt;td&gt;供应商锁定风险&lt;/td&gt;&lt;td&gt;低/无&lt;/td&gt;&lt;td&gt;高，通常&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;低&lt;/td&gt;&lt;td&gt;低/无&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;DBaaS使用&lt;/td&gt;&lt;td&gt;否&lt;/td&gt;&lt;td&gt;是，内部和外部&lt;/td&gt;&lt;td&gt;不适用&lt;/td&gt;&lt;td&gt;是，仅限外部&lt;/td&gt;&lt;td&gt;是，内部和外部外部&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;解决这些组织因素后，我们可以更深入地了解&lt;strong&gt;基础设施和操作系统层&lt;/strong&gt;，以探讨本文讨论的部署选项之间的关键技术差异：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;本地 PostgreSQL&lt;/td&gt;&lt;td &gt;云中的 PostgreSQL (IaaS)&lt;/td&gt;&lt;td&gt;云中的 PostgreSQL (DBaaS)&lt;/td&gt;&lt;td&gt;云中立 PostgreSQL (KaaS)&lt;/td&gt;&lt;td&gt;云中立PostgreSQL（自我管理）&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;硬件成本&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;td&gt;无&lt;/td&gt; &lt;td&gt;无&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;安装方法&lt;/td&gt;&lt;td&gt;操作系统上的软件包&lt;/td&gt;&lt;td&gt;操作系统上的软件包操作系统&lt;/td&gt;&lt;td&gt;不适用&lt;/td&gt;&lt;td&gt;不可变容器&lt;/td&gt;&lt;td&gt;不可变容器&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;具有本地存储的裸机支持&lt; /td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;否，通常&lt;/td&gt;&lt;td&gt;否&lt;/td&gt;&lt;td&gt;否，通常&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;控制系统配置&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;私有云能力&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;否&lt;/td&gt;&lt;td&gt;否&lt;/td&gt;&lt;td&gt;否&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;/tr&gt;&lt; tr&gt;&lt;td&gt;公有云可用性&lt;/td&gt;&lt;td&gt;否&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;是，可能&lt;br&gt;通过 IaaS&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;混合云支持&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;否&lt;/td &gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;多云支持&lt;/td&gt;&lt;td&gt;否&lt;/td&gt;&lt;td&gt;是，但是硬&lt;/td&gt;&lt;td&gt;否&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;是，可能&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;至此，所有主要的组织和架构考虑因素都已得到解决，您对采用哪种云模型的决定可能已经很明确了。然而，评估与 Postgres 数据库本身及其管理的数据相关的方面也同样重要。下表总结了这些因素，它们可能会对您的最终部署选择产生重大影响：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;本地 PostgreSQL&lt;/th&gt;&lt;th &gt;云中的 PostgreSQL (IaaS)&lt;/th&gt;&lt;th&gt;云中的 PostgreSQL (DBaaS)&lt;/th&gt;&lt;th&gt;云中立 PostgreSQL (KaaS)&lt;/th&gt;&lt;th&gt;云中立 PostgreSQL （自我管理）&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;业务连续性与合规性&lt;/th&gt;&lt;th&gt;是，全责&lt;/th&gt;&lt;th&gt;是，操作系统及更高版本&lt;/th&gt; &lt;th&gt;不，仅数据库内容&lt;/th&gt;&lt;th&gt;是，数据库&lt;/th&gt;&lt;th&gt;是，全责&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;第 2 天运营（维护）&lt;/th&gt;&lt;th&gt;手动&lt;/th&gt;&lt;th&gt;手动&lt;/th&gt;&lt;th&gt;自动&lt;/th&gt;&lt;th&gt;自动&lt;/th&gt;&lt;th&gt;自动&lt;/th&gt;&lt;/tr &gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;数据可移植性（欧盟数据行动）&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;否&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;控制 PostgreSQL配置&lt;/td&gt;&lt;td&gt;最高价&lt;/td&gt;&lt;td&gt;最高价&lt;/td&gt;&lt;td&gt;有限&lt;/td&gt;&lt;td&gt;最高价&lt;/td&gt;&lt;td&gt;最高价&lt;/td&gt;&lt;/tr&gt;&lt; tr&gt;&lt;td&gt;数据库性能&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;/tr&gt;&lt; tr&gt;&lt;td&gt;Postgres 扩展支持&lt;/td&gt;&lt;td&gt;完全控制&lt;/td&gt;&lt;td&gt;完全控制&lt;/td&gt;&lt;td&gt;由提供商控制&lt;/td&gt;&lt;td&gt;完全控制&lt;/td&gt;&lt;td&gt;完全控制&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Postgres PKI 支持 (mTLS)&lt;/td&gt;&lt;td&gt;是的，复杂&lt;/td&gt;&lt;td&gt;是的，复杂&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;td&gt;是&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;借助 CloudNativePG，组织可以采用强大、高性能且标准化的方法来跨裸机、混合或多云环境运行 PostgreSQL 集群，所有这些都由声明性配置驱动。这使 DBA 能够实施云中立、无共享的架构，避免供应商锁定，同时保留对数据和性能的完全控制。随着企业越来越多地摆脱依赖于云的模型，CloudNativePG 提供了一个可扩展、面向未来的解决方案，用于在多样化和复杂的环境中管理 PostgreSQL，包括返回本地部署。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 19 Nov 2024 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>