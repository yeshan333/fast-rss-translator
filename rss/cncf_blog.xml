<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CNCF - Blog</title>
    <link>http://rsshub.rssforever.com/cncf</link>
    <description>CNCF - Blog - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【Cilium releases 2024 annual report】Cilium发布2024年年度报告</title>
      <link>https://www.cncf.io/blog/2024/12/30/cilium-releases-2024-annual-report/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1200&#34; height=&#34;630&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2.jpg&#34; alt=&#34;annual report&#34; class=&#34;wp-image-122812&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2.jpg 1200w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-300x158.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-1024x538.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-900x473.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-381x200.jpg 381w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-590x310.jpg 590w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-1180x620.jpg 1180w&#34; sizes=&#34;auto, (max-width: 1200px) 100vw, 1200px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Following a year of significant milestones in &lt;a href=&#34;https://www.cncf.io/blog/2023/12/21/ciliums-2023-annual-report/&#34;&gt;2023&lt;/a&gt;, 2024 for Cilium was pivotal in that organizations are now leveraging the project to manage their entire Kubernetes networking stack. We are pleased to share the &lt;a href=&#34;https://github.com/cilium/cilium.io/blob/main/Annual-Reports/Cilium_Annual_Report_2024.pdf&#34;&gt;2024 Cilium Annual Report&lt;/a&gt;, which highlights the many successes experienced by the project over the last 12 months.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;What once began as a solution for pod-to-pod connectivity has expanded into a project that unifies the critical domains of networking, observability, and security under a single eBPF-powered umbrella.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we move into 2025, the Cilium community has never been stronger. The project continues to add contributors and end users across a variety of industries. We invite you to take a look at the &lt;a href=&#34;https://github.com/cilium/cilium.io/blob/main/Annual-Reports/Cilium_Annual_Report_2024.pdf&#34;&gt;2024 Annual Report&lt;/a&gt; to share in the achievements over the year. For any questions or feedback, don’t hesitate to reach out to &lt;a href=&#34;mailto:contribute@cilium.io&#34;&gt;contribute@cilium.io&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1200”高度=“630”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Copy-of-Single-Card-2.jpg&#34; alt=&#34;年度报告&#34; class=&#34;wp-image-122812&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2.jpg 1200w，https://www.cncf.io/wp-content/ uploads/2024/12/Copy-of-Single-Card-2-300x158.jpg 300w， https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-1024x538.jpg 1024w，https://www.cncf.io/wp-content/uploads /2024/12/单卡副本2-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-194x102.jpg 194w，https://www.cncf.io/wp-content/uploads /2024/12/单卡副本2-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-776x408.jpg 776w，https://www.cncf.io/wp-content/uploads /2024/12/单卡副本2-900x473.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-381x200.jpg 381w，https://www.cncf.io/wp-content/uploads /2024/12/单卡副本2-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/12/Copy-of-Single-Card-2-590x310.jpg 590w，https://www.cncf.io/wp-content/uploads /2024/12/Copy-of-Single-Card-2-1180x620.jpg 1180w&#34; 尺寸 = &#34;自动, （最大宽度：1200px）100vw，1200px“referrerpolicy =“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;继 &lt;a href=&#34;https://www.cncf.io/blog/2023/12/21/ciliums-2023-annual-report/&#34;&gt;2023 年&lt;/a&gt;取得重大里程碑之后，2024 年对于 Cilium 来说至关重要，因为组织现在正在利用该项目来管理整个 Kubernetes 网络堆栈。我们很高兴分享 &lt;a href=&#34;https://github.com/cilium/cilium.io/blob/main/Annual-Reports/Cilium_Annual_Report_2024.pdf&#34;&gt;2024 年 Cilium 年度报告&lt;/a&gt;，其中重点介绍了该项目在过去 12 个月中取得了许多成功。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最初作为 Pod 到 Pod 连接的解决方案，现已扩展为一个项目，将网络、可观察性和安全性的关键领域统一在一个由 eBPF 驱动的框架下。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着我们进入 2025 年，Cilium 社区变得前所未有的强大。该项目不断增加各行业的贡献者和最终用户。我们邀请您查看&lt;a href=&#34;https://github.com/cilium/cilium.io/blob/main/Annual-Reports/Cilium_Annual_Report_2024.pdf&#34;&gt;2024 年年度报告&lt;/a&gt;来分享在一年来取得的成绩中。如有任何问题或反馈，请随时联系 &lt;a href=&#34;mailto:contribute@cilium.io&#34;&gt;contribute@cilium.io&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 29 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【OpenTelemetry Collector completes fuzzing audit】OpenTelemetry Collector 完成模糊审计</title>
      <link>https://www.cncf.io/blog/2024/12/30/opentelemetry-collector-completes-fuzzing-audit/</link>
      <description>【&lt;p&gt;&lt;em&gt;Cross-posted from the &lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/&#34;&gt;OpenTelemetry blog&lt;/a&gt; by Adam Korczynski&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry is happy to announce the completion of the Collector’s fuzzing audit sponsored by&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;the CNCF&lt;/a&gt;&amp;nbsp;and carried out by&amp;nbsp;&lt;a href=&#34;https://adalogics.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ada Logics&lt;/a&gt;. The audit marks a significant step in the OpenTelemetry project, ensuring the security and reliability of the Collector for its users.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;what-is-fuzzing&#34;&gt;What is fuzzing?&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#what-is-fuzzing&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fuzzing is a testing technique that executes an API with a high amount of pseudo-random inputs and observes the API’s behavior. The technique has increased in popularity due to its empirical success in finding security vulnerabilities and reliability issues. Fuzzing initially developed with a focus on testing software implemented in memory-unsafe languages, where it has been most productive. However, in recent years, fuzzing has expanded to memory-safe languages as well.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Over several years, the CNCF has invested in fuzzing for its ecosystem. This testing has found numerous security vulnerabilities in widely used projects such as Helm (CVE-2022-36055, CVE-2022-23524, CVE-2022-23526, CVE-2022-23525), the Notary project (CVE-2023-25656), containerd (CVE-2023-25153), Crossplane (CVE-2023-28494, CVE-2023-27483) and Flux (CVE-2022-36049).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;oss-fuzz&#34;&gt;OSS-Fuzz&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#oss-fuzz&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To initiate the audit, Ada Logics auditors integrated the OpenTelemetry Collector into&amp;nbsp;&lt;a href=&#34;https://github.com/google/oss-fuzz&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSS-Fuzz&lt;/a&gt;. OSS-Fuzz is a service offered by Google to critical open source projects, free of charge. The service runs a project’s fuzzers with excess resources multiple times per week. If OSS-Fuzz finds a crash, it notifies the project. It then checks if the project has fixed the crash upstream and if so, marks the issue(s) as fixed. The whole workflow happens continuously on Google’s fuzzing infrastructure, supported by thousands of CPU cores. These testing resources outperform what developers or malicious threat actors can muster.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-tests&#34;&gt;The tests&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#the-tests&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After the Ada Logics team integrated OpenTelemetry into OSS-Fuzz, the next step was to write a series of fuzz tests for the OpenTelemetry Collector. The auditors wrote 49 fuzz tests for core components of the Collector, as well as several receivers and processors in the&amp;nbsp;&lt;code&gt;opentelemetry-collector-contrib&lt;/code&gt;&amp;nbsp;repository.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The fuzz tests were left to run while the audit team observed their health in production. At the completion of the fuzzing audit, the 49 fuzz tests on the OSS-Fuzz platform were healthy.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To ensure continued reliability, the fuzz testing continues on the Collector even though the audit is complete.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-results-so-far&#34;&gt;The results so far&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#the-results-so-far&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fuzz testing for the Collector is ongoing, allowing for changes to the project to be tested as well. As of the date of this post, no crashes have been detected.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;But the work is not done! The Ada Logics team created the Collector’s fuzzing setup as a reference implementation that other OpenTelemetry subprojects can rely on to create their own fuzz testing, ensuring greater stability for the project as a whole.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For more insight into the audit process, see the&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/community/blob/main/reports/ADA_Logics-collector-fuzzing-audit-2024.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;published summary&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;交叉发布自 Adam Korczynski 的 &lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/&#34;&gt;OpenTelemetry 博客&lt;/a&gt;&lt;/em&gt;&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry 很高兴地宣布由 &lt;a href=&#34;https://www.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CNCF&lt;/a 赞助的收集器模糊测试审核已完成&gt; 由 &lt;a href=&#34;https://adalogics.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ada Logics&lt;/a&gt; 执行。此次审核标志着 OpenTelemetry 项目迈出了重要一步，确保了 Collector 的用户安全性和可靠性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;what-is-fuzzing&#34;&gt;什么是模糊测试？&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#what -is-模糊测试&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;模糊测试是一种测试技术，它使用大量伪随机输入执行 API 并观察 API 的行为。由于其在发现安全漏洞和可靠性问题方面的经验成功，该技术越来越受欢迎。模糊测试最初开发的重点是测试以内存不安全语言实现的软件，在这种语言中它的效率最高。然而，近年来，模糊测试也扩展到了内存安全语言。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;多年来，CNCF 对其生态系统进行了模糊测试投资。此次测试在广泛使用的项目中发现了许多安全漏洞，例如 Helm（CVE-2022-36055、CVE-2022-23524、CVE-2022-23526、CVE-2022-23525）、Notary 项目（CVE-2023-25656） 、containerd (CVE-2023-25153)、Crossplane （CVE-2023-28494、CVE-2023-27483）和 Flux（CVE-2022-36049）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;oss-fuzz&#34;&gt;OSS-Fuzz&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#oss-fuzz&#34; &gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了启动审核，Ada Logics 审核员将 OpenTelemetry Collector 集成到 &lt;a href=&#34;https://github.com/google/oss-fuzz&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSS-Fuzz &lt;/a&gt;。 OSS-Fuzz 是 Google 向关键开源项目免费提供的一项服务。该服务每周多次使用多余的资源运行项目的模糊器。如果 OSS-Fuzz 发现崩溃，它会通知项目。然后，它检查项目是否已修复上游崩溃，如果是，则将问题标记为已修复。整个工作流程在 Google 的模糊测试基础设施上连续发生，并由数千个 CPU 核心支持。这些测试资源的性能优于开发人员或恶意威胁行为者所能聚集的资源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-tests&#34;&gt;测试&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/#the-tests&#34;&gt; &lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ada Logics 团队将 OpenTelemetry 集成到 OSS-Fuzz 中后，下一步是为 OpenTelemetry Collector 编写一系列模糊测试。审核员为 Collector 的核心组件以及 &lt;code&gt;opentelemetry-collector-contrib&lt;/code&gt; 存储库中的多个接收器和处理器编写了 49 个模糊测试。&lt;/p&gt;&lt;p&gt;模糊测试继续运行，而审计团队则观察其在生产中的健康状况。模糊审计完成后，OSS-Fuzz平台上的49个模糊测试都是健康的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了确保持续的可靠性，即使审核已完成，模糊测试也会在收集器上继续进行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-results-so-far&#34;&gt;到目前为止的结果&lt;a href=&#34;https://opentelemetry.io/blog/2024/fuzzing-audit-results/ #the-results-so-far&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;收集器的模糊测试正在进行中，也允许对要测试的项目进行更改。截至本文发布之日，尚未检测到任何崩溃。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是工作还没有完成！ Ada Logics 团队创建了 Collector 的模糊测试设置作为参考实现，其他 OpenTelemetry 子项目可以依赖它来创建自己的模糊测试，从而确保整个项目具有更高的稳定性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有关审核流程的更多信息，请参阅&lt;a href=&#34;https://github.com/open-telemetry/community/blob/main/reports/ADA_Logics-collector-fuzzing-audit-2024.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;已发布摘要&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 29 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Unlocking cloud native security with Cilium and eBPF】使用 Cilium 和 eBPF 解锁云原生安全</title>
      <link>https://www.cncf.io/blog/2025/01/02/unlocking-cloud-native-security-with-cilium-and-ebpf/</link>
      <description>【&lt;p&gt;Ambassador post originally published on &lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an&#34;&gt;Dev.to&lt;/a&gt; by Syed Asad Raza&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Introduction 🌐🔒🚀&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As cloud-native applications scale, securing workloads while maintaining performance becomes critical. This is where Cilium, an open-source networking, observability, and security tool, shines. Backed by the power of eBPF (Extended Berkeley Packet Filter), Cilium provides secure, high-performance communication between microservices in Kubernetes environments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#what-is-cilium&#34;&gt;&lt;/a&gt;What is Cilium? 🔍💻🔧&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium is a cloud-native networking solution that secures and monitors service-to-service communication. It leverages eBPF to operate within the Linux kernel, enabling dynamic programmability and reducing the performance overhead associated with traditional firewalls.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#key-features-of-cilium&#34;&gt;&lt;/a&gt;Key Features of Cilium&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Network Security:&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Identity-aware security policies based on Kubernetes labels.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Transparent encryption for secure data transport.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Observability:&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Fine-grained visibility into network traffic using Hubble, Cilium’s observability platform.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Real-time service dependency maps and network flow monitoring.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Scalability and Performance:&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Kernel-level packet processing with eBPF for low latency.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Scales seamlessly in large Kubernetes clusters.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Service Mesh Integration:&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Service mesh capabilities like traffic management, load balancing, and security.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Works alongside existing tools like Istio and Envoy.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#how-cilium-works&#34;&gt;&lt;/a&gt;How Cilium Works ⚙️📡📈&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium uses eBPF programs attached to various points in the Linux kernel, such as network interfaces and system calls. This allows it to inspect, modify, and route network packets in real-time. Kubernetes network policies are automatically translated into eBPF code, ensuring secure communication.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#deploying-cilium&#34;&gt;&lt;/a&gt;Deploying Cilium 🚀📦🔧&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Prepare Your Environment:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Ensure you have a running Kubernetes cluster.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Install kubectl and helm if not already installed.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Add the Cilium Helm Repository:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm repo add cilium https://helm.cilium.io/&#xA;helm repo update&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Deploy Cilium Using Helm:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm install cilium cilium/cilium --version &amp;lt;latest-version&amp;gt; \&#xA;  --namespace kube-system \&#xA;  --set kubeProxyReplacement=strict \&#xA;  --set k8sServiceHost=&amp;lt;your-k8s-api-server&amp;gt; \&#xA;  --set k8sServicePort=&amp;lt;your-k8s-api-port&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Verify Deployment:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl get pods -n kube-system&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ensure that all Cilium-related pods are running.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Enable Hubble (Optional for Observability):&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm upgrade cilium cilium/cilium --namespace kube-system \&#xA;  --set hubble.enabled=true \&#xA;  --set hubble.relay.enabled=true \&#xA;  --set hubble.ui.enabled=true&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#getting-started-with-cilium&#34;&gt;&lt;/a&gt;Getting Started with Cilium 🛡️👨‍💻📊&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Define Policies:&lt;/strong&gt;&amp;nbsp;Create Kubernetes NetworkPolicies or Cilium-specific policies.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Monitor Traffic:&lt;/strong&gt;&amp;nbsp;Use Hubble UI or CLI for observability.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#why-choose-cilium&#34;&gt;&lt;/a&gt;Why Choose Cilium? ⚡🔐👀&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Performance:&lt;/strong&gt;&amp;nbsp;Kernel-level processing ensures minimal performance impact.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt;&amp;nbsp;Built-in encryption and identity-aware access controls.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Visibility:&lt;/strong&gt;&amp;nbsp;Deep observability into cloud-native workloads.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#realworld-use-cases&#34;&gt;&lt;/a&gt;Real-World Use Cases 🌍🏦🛒&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;–&amp;nbsp;&lt;strong&gt;Financial Services:&lt;/strong&gt;&amp;nbsp;Enforcing strict network security for sensitive workloads.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;–&amp;nbsp;&lt;strong&gt;E-commerce:&lt;/strong&gt;&amp;nbsp;Scaling secure and reliable microservices.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;–&amp;nbsp;&lt;strong&gt;Healthcare:&lt;/strong&gt;&amp;nbsp;Ensuring data compliance and observability.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#conclusion&#34;&gt;&lt;/a&gt;Conclusion 🎯✅📈&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium is redefining cloud-native security and observability with eBPF. Its seamless integration with Kubernetes, superior performance, and deep visibility make it a go-to solution for modern cloud-native architectures. Whether securing a microservices-based application or building a scalable Kubernetes platform, Cilium offers the best of both worlds: powerful security and unmatched performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#call-to-action&#34;&gt;&lt;/a&gt;Call to Action: 📢📚✨&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ready to enhance your Kubernetes security? Explore the official Cilium documentation and start your journey toward a more secure and observable cloud-native environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;THANK’S FOR READING&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;大使帖子最初由 &lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an&#34;&gt;Dev.to&lt;/a&gt; 发布赛义德·阿萨德·拉扎&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;简介🌐🔒🚀&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;随着云原生应用程序的扩展，在保持性能的同时保护工作负载变得至关重要。这就是 Cilium（一款开源网络、可观察性和安全工具）的闪光点。在 eBPF（扩展伯克利数据包过滤器）的支持下，Cilium 在 Kubernetes 环境中的微服务之间提供安全、高性能的通信。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#what-is-cilium &#34;&gt;&lt;/a&gt;什么是纤毛？ 🔍💻🔧&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium 是一种云原生网络解决方案，可保护和监控服务间通信。它利用 eBPF 在 Linux 内核中运行，从而实现动态可编程性并降低与传统防火墙相关的性能开销。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#key-features-of -cilium&#34;&gt;&lt;/a&gt;Cilium 的主要特点&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;网络安全：&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;基于 Kubernetes 标签的身份感知安全策略。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;透明加密，确保数据安全传输。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可观察性：&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用 Cilium 的可观测平台 Hubble 对网络流量进行细粒度可见性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;实时服务依赖关系图和网络流量监控。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可扩展性和性能：&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用 eBPF 进行内核级数据包处理，以实现低延迟。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;在大型 Kubernetes 集群中无缝扩展。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;服务网格集成：&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;流量管理、负载平衡和安全性等服务网格功能。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;与 Istio 和 Envoy 等现有工具配合使用。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#how-cilium-works &#34;&gt;&lt;/a&gt;Cilium 的工作原理⚙️📡📈&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium 使用附加到 Linux 内核中各个点的 eBPF 程序，例如网络接口和系统调用。这使得它能够实时检查、修改和路由网络数据包。 Kubernetes网络策略自动转换为eBPF代码，确保安全通信。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#deploying-cilium&#34;&gt; &lt;/a&gt;部署 Cilium 🚀📦🔧&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;准备您的环境：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;确保您有一个正在运行的 Kubernetes 集群。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;如果尚未安装 kubectl 和 helm，请安装已安装。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;添加 Cilium Helm 存储库：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm 仓库添加 cilium https://helm.cilium.io/&#xA;舵回购更新&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;使用 Helm 部署 Cilium：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm install cilium cilium/cilium --version &lt;最新版本&gt; \&#xA;  --命名空间 kube-system \&#xA;  --set kubeProxyReplacement=严格 \&#xA;  --set k8sServiceHost=&lt;your-k8s-api-server&gt; \&#xA;  --set k8sServicePort=&lt;您的 k8s-api-端口&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;验证部署：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;kubectl 获取 pods -n kube-system&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;确保所有与 Cilium 相关的 pod 都在运行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;启用 Hubble（可观测性可选）：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;helm 升级 cilium cilium/cilium --namespace kube-system \&#xA;  --set hubble.enabled=true \&#xA;  --set hubble.relay.enabled=true \&#xA;  --set hubble.ui.enabled=true&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#getting-started-with -cilium&#34;&gt;&lt;/a&gt;开始使用 Cilium 🛡️👨‍💻📊&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;定义策略&lt;/strong&gt;：创建 Kubernetes NetworkPolicies 或 Cilium 特定策略。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;监控流量&lt;/strong&gt;：使用 Hubble UI 或 CLI 进行观察。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#why-choose-cilium &#34;&gt;&lt;/a&gt;为什么选择Cilium？ ⚡🔐👀&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;性能&lt;/strong&gt;：内核级处理可确保对性能的影响降至最低。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;安全性&lt;/strong&gt;：内置加密和身份识别访问控制。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;可见性&lt;/strong&gt;：可深入观察云原生工作负载。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#realworld-use-cases &#34;&gt;&lt;/a&gt;现实世界用例🌍🏦🛒&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;– &lt;strong&gt;金融服务&lt;/strong&gt;：对敏感工作负载实施严格的网络安全。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;– &lt;strong&gt;电子商务&lt;/strong&gt;：扩展安全可靠的微服务。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;–&lt;strong&gt;医疗保健&lt;/strong&gt;：确保数据合规性和可观察性。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#conclusion&#34;&gt;&lt;/ a&gt;结论🎯✅📈&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cilium 正在通过 eBPF 重新定义云原生安全性和可观察性。它与 Kubernetes 的无缝集成、卓越的性能和深入的可见性使其成为首选现代云原生架构的解决方案。无论是保护基于微服务的应用程序还是构建可扩展的 Kubernetes 平台，Cilium 都能提供两全其美的功能：强大的安全性和无与伦比的性能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;a href=&#34;https://dev.to/syedasadrazadevops/unlocking-cloud-native-security-with-cilium-and-ebpf-40an#call-to-action &#34;&gt;&lt;/a&gt;号召性用语：📢📚✨&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;准备好增强您的 Kubernetes 安全性了吗？探索 Cilium 官方文档，开始迈向更安全、更可观察的云原生环境的旅程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢您的阅读&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Wed, 01 Jan 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kubestronaut in Orbit: Sofonias Mengistu】在轨道上的 Kubetronaut：索福尼亚斯·门格斯图</title>
      <link>https://www.cncf.io/blog/2024/12/31/kubestronaut-in-orbit-sofonias-mengistu/</link>
      <description>【&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1650&#34; height=&#34;866&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1.jpg&#34; alt=&#34;Kubestronaut in Orbit: Sofonias Mengistu&#34; class=&#34;wp-image-122824&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1.jpg 1650w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-300x157.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-1024x537.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-768x403.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-1552x816.jpg 1552w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-900x472.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-381x200.jpg 381w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-590x310.jpg 590w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-1180x620.jpg 1180w&#34; sizes=&#34;auto, (max-width: 1650px) 100vw, 1650px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Get to know Sofonias&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This week’s Kubestronaut in Orbit is Sofonias Mengistu, a DevOps Engineer at Gebeya.INC based in Addis Ababa, Ethiopia. With 14 years of IT experience—five of those dedicated to cloud-native technologies—Sofonias has led numerous projects focused on implementing, managing, and securing Kubernetes environments. He got his start in networking, but his passion for DevOps inspired a career transition, allowing him to dive deeper into the cloud-native ecosystem. Sofonias is also an active contributor to the CNCF community, frequently participating in project meetups and webinars to share knowledge and collaborate with peers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you’d like to be a Kubestronaut like Sofonias, get more details on the CNCF Kubestronaut page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;When did you get started with Kubernetes and/or cloud-native? What was your first project?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I began my journey with cloud and cloud-native technologies in 2018, using AWS as my first platform in a lab environment, primarily for study purposes. My early focus was on deploying static applications, and soon after, I delved into containerization with Docker and version control using GitHub. In 2021, after a friend recommended Kubernetes, I took on my first project, setting up an infrastructure and deploying a voting app on EKS using eksctl, which was a valuable hands-on learning experience. Since then, I have completed the KodeKloud Engineer program, up to the DevOps Architect level, where I’ve gained expertise through real-world DevOps tasks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What are the primary CNCF projects you work on or use today?&amp;nbsp; What projects have you enjoyed the most in your career?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I’ve had the opportunity to work with several key CNCF projects, starting with Kubernetes. Some of the others I’ve utilized include ArgoCD, Flux, Prometheus, CRI-O, CoreDNS, Istio, OpenTelemetry, PostgreSQL, and Kyverno. This is just a snapshot of my experience; I’ve explored various CNCF projects throughout my career.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;How have the certs or CNCF helped you in your career?&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF certifications have been instrumental in my career growth. They’ve validated my skills, opened doors to new opportunities, and helped me stand out in the competitive job market. In a short period, I’ve been able to secure senior positions and contribute significantly to projects thanks to my certifications.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What are some other books/sites/courses you recommend for people who want to work with k8s?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For beginners, &lt;a href=&#34;https://www.youtube.com/c/techworldwithnana&#34;&gt;Tech with Nana on YouTube&lt;/a&gt; is an excellent resource, and you should quickly move on to Mumshad Mannambeth’s 8-minute video (he also has &lt;a href=&#34;https://www.udemy.com/user/mumshad-mannambeth/&#34;&gt;CNCF endorsed content on Udemy&lt;/a&gt;). For the &lt;a href=&#34;https://www.cncf.io/training/certification/kcna/&#34;&gt;Kubernetes and Cloud Native Associate (KCNA)&lt;/a&gt; certification, KodeKloud is the best platform to start with. Back when I started, there wasn’t a KCNA certificate, so I began with CKA on KodeKloud, but now students should first gain basic Kubernetes knowledge with KCNA. KodeKloud or Udemy courses (check out the &lt;a href=&#34;https://business.udemy.com/cncf-endorsed-content/&#34;&gt;CNCF endorsed content&lt;/a&gt;), especially “Kubernetes from Scratch” by Mohamed, along with KodeKloud’s PDFs, are highly recommended.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For intermediate learners, focus on the &lt;a href=&#34;https://www.cncf.io/training/certification/cka/&#34;&gt;Certified Kubernetes Administrator (CKA)&lt;/a&gt; certification with KodeKloud and complete all tasks. After that, practice on &lt;a href=&#34;http://killer.sh/&#34;&gt;Killer.sh&lt;/a&gt;, and study books related to Kubernetes. You should also check out Tech with Nana’s 3.5-hour course on YouTube for further insights. Ensure you achieve at least 85 on Killer.sh to be well-prepared for the exam. After CKA, move on to &lt;a href=&#34;https://www.cncf.io/training/certification/ckad/&#34;&gt;Certified Kubernetes Application Developer (CKAD&lt;/a&gt;), using KodeKloud and Killer.sh for practice. Additionally, explore content on GitHub and work on DevOps projects from YouTube to gain practical experience. Feel free to reach out to me on LinkedIn for project recommendations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For advanced learners, &lt;a href=&#34;https://www.cncf.io/training/certification/cks/&#34;&gt;Certified Kubernetes Security Specialist (CKS)&lt;/a&gt; is the next step, and you can use free resources like Killer.sh on YouTube, KodeKloud, and GVR videos by Venkata Ramana Gali. These are excellent materials for advanced CKS preparation. The CKS requires more in-depth knowledge, which is why it’s considered advanced.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Finally, aim for the &lt;a href=&#34;https://www.cncf.io/training/certification/kcsa/&#34;&gt;Kubernetes and Cloud Security Associate (KCSA)&lt;/a&gt; certification, which can be completed in two weeks using the same materials you used for CKS.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What do you do in your free time?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I mainly study various tools in my free time, focusing on deploying lab-based applications on Azure, AWS, or GCP platforms. In addition to tech, I enjoy staying active through sports—biking, boxing, and swimming are my favorite activities that I regularly engage in.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;What would you tell someone who is just starting their K8s certification journey? Any tips or tricks?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Honestly, I don’t have any secret tricks. I mainly use LinkedIn for networking and professional development. I often connect with people who have passed the certifications I’m interested in, and I ask them various questions beyond the exam content. My goal is not just to gather information, but also to explore potential job opportunities or collaborations. Remember, there’s no shortcut to success in Kubernetes. It requires dedication, hard work, and using reliable resources.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Today the Cloud native ecosystem is way more than Kubernetes. Do you plan to get other cloud native certifications from the CNCF ?&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Yes! I’m interested in both the &lt;a href=&#34;https://www.cncf.io/training/certification/pca/&#34;&gt;Prometheus Certified Associate (PCA)&lt;/a&gt;, as well as the &lt;a href=&#34;https://training.linuxfoundation.org/certification/linux-foundation-certified-sysadmin-lfcs/&#34;&gt;Linux Foundation Certified System Administrator (LFCS)&lt;/a&gt; and &lt;a href=&#34;https://www.cncf.io/training/certification/cgoa/&#34;&gt;GitOps Certified Associate (CGOA)&lt;/a&gt; certs, and last but not least, a &lt;a href=&#34;https://training.linuxfoundation.org/?s=finops&#34;&gt;FinOps Certification&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1650”高度=“866”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1.jpg&#34; alt=&#34;轨道上的 Kubestronaut：索福尼亚斯·门吉斯图&#34;类=“wp-image-122824”srcset=“https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1.jpg 1650w， https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-300x157.jpg 300w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-1024x537.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-768x403.jpg 768w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-388x204.jpg 388w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-776x408.jpg 776w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-1552x816.jpg 1552w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-900x472.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-381x200.jpg 381w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-762x400.jpg 762w, https://www.cncf.io/wp-content/uploads/2024/12/Kubestronaut-in-Orbit-13-1-590x310.jpg 590w，https://www.cncf.io/wp-content/uploads /2024/12/Kubestronaut-in-Orbit-13-1-1180x620.jpg 1180w&#34;尺寸=“自动，（最大宽度：1650px）100vw，1650px”referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;了解 Sofonias&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本周的 Orbit Kubestronaut 是位于埃塞俄比亚亚的斯亚贝巴的 Gebeya.INC 的开发运营工程师 Sofonias Mengustu。 Sofonias 拥有 14 年的 IT 经验（其中 5 年致力于云原生技术），领导了众多专注于实施、管理和保护 Kubernetes 环境的项目。他的职业生涯始于网络，但他对 DevOps 的热情激发了他的职业转变，使他能够更深入地研究云原生生态系统。 Sofonias 也是 CNCF 社区的积极贡献者，经常参加项目聚会和网络研讨会，与同行分享知识和协作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您想成为像 Sofonias 一样的 Kubetronaut，请在 CNCF Kubetronaut 页面上获取更多详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;您什么时候开始使用 Kubernetes 和/或云原生？您的第一个项目是什么？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我于 2018 年开始了云和云原生技术之旅，使用 AWS 作为我在实验室环境中的第一个平台，主要用于研究目的。我早期的重点是部署静态应用程序，不久之后，我深入研究了 Docker 容器化和使用 GitHub 的版本控制。 2021 年，在朋友推荐 Kubernetes 后，我开始了我的第一个项目，使用 eksctl 在 EKS 上建立基础设施并部署投票应用程序，这是一次宝贵的实践学习经验。罪从那时起，我已经完成了 KodeKloud 工程师计划，直至 DevOps 架构师级别，我通过实际的 DevOps 任务获得了专业知识。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;您目前从事或使用的主要 CNCF 项目是什么？  在您的职业生涯中您最喜欢哪些项目？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我有机会参与几个关键的 CNCF 项目，从 Kubernetes 开始。我使用过的其他一些工具包括 ArgoCD、Flux、Prometheus、CRI-O、CoreDNS、Istio、OpenTelemetry、PostgreSQL 和 Kyverno。这只是我的经历的一个缩影；在我的职业生涯中，我探索了各种 CNCF 项目。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;证书或 CNCF 对您的职业生涯有何帮助？ &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;CNCF 认证对我的职业发展发挥了重要作用。他们验证了我的技能，为我打开了新机会的大门，并帮助我在竞争激烈的就业市场中脱颖而出。在很短的时间内，由于我的认证，我已经能够获得高级职位并为项目做出重大贡献。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;您为想要使用 k8s 的人推荐了哪些其他书籍/网站/课程？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于初学者来说，&lt;a href=&#34;https://www.youtube.com/c/techworldwithnana&#34;&gt;YouTube 上的 Tech with Nana&lt;/a&gt; 是一个极好的资源，您应该快速转向 Mumshad Mannambeth 的 8分钟的视频（他还在 Udemy 上发布了 &lt;a href=&#34;https://www.udemy.com/user/mumshad-mannambeth/&#34;&gt;CNCF 认可的内容&lt;/a&gt;）。对于 &lt;a href=&#34;https://www.cncf.io/training/certification/kcna/&#34;&gt;Kubernetes 和 Cloud Native Associate (KCNA)&lt;/a&gt; 认证，KodeKloud 是最好的入门平台。刚开始的时候，没有 KCNA 证书，所以我从 KodeKloud 上的 CKA 开始，但现在学生应该首先通过 KCNA 获得基本的 Kubernetes 知识。 KodeKloud 或 Udemy 课程（查看 &lt;a href=&#34;https://business.udemy.com/cncf-endorsed-content/&#34;&gt;CNCF 认可的内容&lt;/a&gt;），尤其是 Mohamed 的“Kubernetes from Scratch”，以及强烈推荐使用 KodeKloud 的 PDF。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于中级学习者，重点关注 KodeKloud 的&lt;a href=&#34;https://www.cncf.io/training/certification/cka/&#34;&gt;认证 Kubernetes 管理员 (CKA)&lt;/a&gt; 认证并完成所有任务。之后在&lt;a href=&#34;http://killer.sh/&#34;&gt;Killer.sh&lt;/a&gt;上进行练习，并学习Kubernetes相关书籍。您还应该在 YouTube 上查看 Tech with Nana 的 3.5 小时课程，以获取更多见解。确保您在 Killer.sh 上取得至少 85 分，以便为考试做好充分准备。 CKA 之后，继续进行&lt;a href=&#34;https://www.cncf.io/training/certification/ckad/&#34;&gt;认证 Kubernetes 应用程序开发人员 (CKAD&lt;/a&gt;)，使用 KodeKloud 和 Killer.sh 进行练习。此外，探索 GitHub 上的内容并参与 YouTube 上的 DevOps 项目以获得实践经验。请随时在 LinkedIn 上与我联系以获取项目推荐。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;对于高级学习者，&lt;a href=&#34;https://www.cncf.io/training/certification/cks/&#34;&gt;下一步是认证 Kubernetes 安全专家 (CKS)&lt;/a&gt;，您可以使用免费资源，例如 YouTube 上的 Killer.sh、KodeKloud 和 Venkata Ramana Gali 的 GVR 视频这些是高级 CKS 准备的极好材料。CKS 需要更深入的知识，这就是它被认为是高级的原因。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，争取获得 &lt;a href=&#34;https://www.cncf.io/training/certification/kcsa/&#34;&gt;Kubernetes 和云安全助理 (KCSA)&lt;/a&gt; 认证，该认证可在使用与 CKS 相同的材料两周。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;你空闲时间做什么？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我主要在空闲时间研究各种工具，重点是在 Azure、AWS 或 GCP 平台上部署基于实验室的应用程序。除了科技之外，我还喜欢通过运动保持活跃——骑自行车、拳击和游泳是我最喜欢经常参加的活动。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;您会对刚刚开始 K8s 认证之旅的人说些什么？有什么提示或技巧吗？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;老实说，我没有什么秘诀。我主要使用 LinkedIn 进行社交和职业发展。我经常与通过了我感兴趣的认证的人联系，并向他们询问考试内容之外的各种问题。我的目标不仅仅是收集信息，还探索潜在的工作机会或合作。请记住，Kubernetes 的成功没有捷径。它需要奉献精神、辛勤工作和使用可靠的资源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;如今，云原生生态系统远不止 Kubernetes。您是否计划获得 CNCF 的其他云原生认证？&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;是的！我对 &lt;a href=&#34;https://www.cncf.io/training/certification/pca/&#34;&gt;Prometheus Certified Associate (PCA)&lt;/a&gt; 以及 &lt;a href=&#34; https://training.linuxfoundation.org/certification/linux-foundation-certified-sysadmin-lfcs/&#34;&gt;Linux 基金会认证系统管理员 (LFCS)&lt;/a&gt; 和 &lt;a href=&#34;https://www.cncf.io/training/certification/cgoa/&#34;&gt;GitOps 认证助理 (CGOA)&lt;/a&gt; 证书，最后但并非最不重要的一点是 &lt;a href=&#34;https://training .linuxfoundation.org/?s=finops&#34;&gt;FinOps 认证&lt;/a&gt;&lt;em&gt;。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 30 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Docsy 2024 review: adoptions and enhancements】Docsy 2024 回顾：采用和增强</title>
      <link>https://www.cncf.io/blog/2025/01/07/docsy-2024-review-adoptions-and-enhancements/</link>
      <description>【&lt;p&gt;&lt;em&gt;By&amp;nbsp;&lt;a href=&#34;https://github.com/chalin&#34;&gt;Patrice Chalin&lt;/a&gt;&amp;nbsp;(&lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt;), for the&amp;nbsp;&lt;a href=&#34;https://www.docsy.dev/blog/2022/hello/#introducing-the-psc&#34;&gt;Docsy Steering Committee&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we reflect on 2024, it’s exciting to see steady progress toward the goals outlined in our&amp;nbsp;&lt;a href=&#34;https://www.docsy.dev/blog/2023/priorities-for-2024/&#34;&gt;2024 priorities&lt;/a&gt;. This year, we focused on enhancing stability, improving internationalization, and delivering long-anticipated features like dark mode and continuous integration (CI) testing.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote has-gray-400-background-color has-background is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;&amp;nbsp;Docsy’s use&amp;nbsp;&lt;strong&gt;increased by 57%&lt;/strong&gt;&amp;nbsp;in 2024, from 1.4K to 2.2K projects!&amp;nbsp;&lt;sup&gt;&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s dive into the development highlights from 2024 and take a peek at what lies ahead.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;release-highlights&#34;&gt;Release highlights&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#release-highlights&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We published three releases this year, each focusing on stability while introducing at least one major feature enhancement. Highlights include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.docsy.dev/blog/2024/0.9.0/&#34;&gt;0.9.0&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;added&amp;nbsp;&lt;em&gt;long-awaited&lt;/em&gt;:&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;CI testing&lt;/strong&gt;&amp;nbsp;via GitHub Actions to ensure quality and reliability across Linux and Windows.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Footer customization&lt;/strong&gt;&amp;nbsp;— Docsy’s&amp;nbsp;&lt;a href=&#34;https://github.com/google/docsy/issues/2&#34;&gt;longest-standing issue (#2)&lt;/a&gt;! — as well as improved repository links, and enhanced accessibility and look-and-feel.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.docsy.dev/blog/2024/0.10.0/&#34;&gt;0.10.0&lt;/a&gt;:&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Enabled&amp;nbsp;&lt;a href=&#34;https://www.docsy.dev/blog/2024/0.10.0/#color-themes-and-dark-mode-support&#34;&gt;color themes and&amp;nbsp;&lt;strong&gt;dark mode&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;via Bootstrap 5.3 upgrade, marking the completion of the&amp;nbsp;&lt;a href=&#34;https://github.com/google/docsy/issues/470&#34;&gt;Bootstrap 5 migration&lt;/a&gt;&amp;nbsp;started in 2021. Also made adjustments to shortcodes and styles for dark-mode compatibility.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Addressed breaking changes resulting from the major core upgrade to Hugo 0.123.0.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/google/docsy/releases/tag/v0.11.0&#34;&gt;0.11.0&lt;/a&gt;:&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Enhanced internationalization by reintroducing&amp;nbsp;&lt;strong&gt;Right-To-Left (RTL) language support&lt;/strong&gt;&amp;nbsp;using Bootstrap’s RTL capabilities.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;enhancements&#34;&gt;Major feature enhancements&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#enhancements&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In addition to CI testing, a key development feature contributing to Docsy’s stability, here are the major user-facing enhancements introduced in 2024.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;dark-mode-support&#34;&gt;Dark mode support&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#dark-mode-support&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.docsy.dev/blog/2024/0.10.0/#color-themes-and-dark-mode-support&#34;&gt;Dark mode&lt;/a&gt;&amp;nbsp;support was the&amp;nbsp;&lt;strong&gt;&lt;em&gt;most upvoted&lt;/em&gt;&amp;nbsp;Docsy enhancement&lt;/strong&gt;&amp;nbsp;prior to its debut in v0.10.0. Powered by Bootstrap 5.3 color themes, this Docsy feature includes a built-in light/dark mode menu selector for easy implementation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;We plan on&amp;nbsp;&lt;a href=&#34;https://github.com/google/docsy-example/issues/285&#34;&gt;enabling dark mode&lt;/a&gt;&amp;nbsp;in the&amp;nbsp;&lt;a href=&#34;https://github.com/google/docsy-example&#34;&gt;Docsy example&lt;/a&gt;, for even easier adoption. Dark mode has already been adopted in notable projects like OpenTelemetry (&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/issues/4023&#34;&gt;opentelemetry.io#4023&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;right-to-left-rtl-language-support&#34;&gt;Right-To-Left (RTL) language support&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#right-to-left-rtl-language-support&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/docsy/pull/1933&#34;&gt;RTL language support (#1933)&lt;/a&gt;, reintroduced through Bootstrap’s use of the mature and well-vetted&amp;nbsp;&lt;a href=&#34;https://rtlcss.com/&#34;&gt;RTLCSS&lt;/a&gt;&amp;nbsp;framework, replaced Docsy’s deprecated custom RTL solution from 2023.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This enhancement meets longstanding multilingual documentation needs. Notably, RTL support has been requested by major Docsy-based sites, including the two 2024&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/blog/2024/07/11/as-we-reach-mid-year-2024-a-look-at-cncf-linux-foundation-and-top-30-open-source-project-velocity/&#34;&gt;top-velocity projects&lt;/a&gt;&amp;nbsp;of the&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;:&amp;nbsp;&lt;a href=&#34;https://github.com/kubernetes/website/issues/22730&#34;&gt;right-to-left language support #22730&lt;/a&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/website/issues/22726&#34;&gt;Localize website into Arabic (ar) #22726&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/website/issues/22727&#34;&gt;Localize website into Persian (fa) #22727&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/&#34;&gt;OpenTelemetry&lt;/a&gt;:&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/issues/4990&#34;&gt;Add Persian version of website pages #4990&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;adoptions-and-the-docsy-starter&#34;&gt;Adoptions and the Docsy Starter&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#adoptions-and-the-docsy-starter&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;One of the most exciting developments in 2024 has been Docsy’s growing adoption. GitHub analytics show a&amp;nbsp;&lt;strong&gt;57% increase in usage&lt;/strong&gt;, reaching&amp;nbsp;&lt;strong&gt;2.2K projects&lt;/strong&gt;&amp;nbsp;as of this writing.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Adoption among CNCF projects has also grown since our&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/blog/2023/01/19/fast-and-effective-tools-for-cncf-and-open-source-project-websites/&#34;&gt;2023 report&lt;/a&gt;. This year,&amp;nbsp;&lt;a href=&#34;https://www.cncf.io/blog/2024/09/27/congratulations-to-45-cncf-term-1-2024-lfx-program-mentees/&#34;&gt;Linux Foundation mentees&lt;/a&gt;&amp;nbsp;&lt;a href=&#34;https://mentorship.lfx.linuxfoundation.org/project/e35f28f9-f333-47a8-a76a-119567cf10ca&#34;&gt;Sandra Dindi&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://mentorship.lfx.linuxfoundation.org/project/34314eb1-0fc3-4802-ab04-2265418c2e48&#34;&gt;Dariksha Ansari&lt;/a&gt;&amp;nbsp;used the&amp;nbsp;&lt;a href=&#34;https://github.com/chalin/docsy-starter&#34;&gt;CNCF Docsy starter&lt;/a&gt;&amp;nbsp;to migrate the following sites to Docsy:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://theupdateframework.io/&#34;&gt;The Update Framework&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;(&lt;a href=&#34;https://github.com/theupdateframework/theupdateframework.io/pull/105&#34;&gt;theupdateframework.io#105&lt;/a&gt;)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://in-toto.io/&#34;&gt;in-toto&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;(&lt;a href=&#34;https://github.com/in-toto/in-toto.io/issues/76&#34;&gt;in-toto.io#76&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Additionally, the&amp;nbsp;&lt;a href=&#34;https://github.com/kubernetes/website&#34;&gt;Kubernetes website&lt;/a&gt;&amp;nbsp;is undergoing a significant Docsy upgrade from v0.2, to align with the latest version and reduce technical debt:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/website/issues/41171&#34;&gt;Align with upstream Docsy kubernetes.io#41171&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/website/issues/44002&#34;&gt;Update Docsy step by step to the latest Docsy kubernetes.io#44002&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The upgrade is progressing well, as shown in the ongoing efforts documented in the&amp;nbsp;&lt;a href=&#34;https://github.com/kubernetes/website/pull/48721&#34;&gt;0.3.x upgrade&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://github.com/kubernetes/website/issues/48807&#34;&gt;0.5.x upgrade&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;whats-ahead&#34;&gt;What’s ahead?&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#whats-ahead&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Looking ahead, we’re excited to continue supporting the Docsy upgrade and adoption efforts by projects such as&amp;nbsp;&lt;a href=&#34;https://github.com/grpc/grpc.io/issues/1389&#34;&gt;gRPC (grpc.io#1389)&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://github.com/jaegertracing/documentation/issues/746&#34;&gt;Jaeger (jaegertracing#746)&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For features tentatively planned for the first release of 2025, see&amp;nbsp;&lt;a href=&#34;https://github.com/google/docsy/issues/2108&#34;&gt;Release 0.12.0 preparation #2108&lt;/a&gt;. The most upvoted enhancement requests are currently:&amp;nbsp;&lt;sup&gt;&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/google/docsy/issues/349&#34;&gt;Navigation indication on the right TOC #349&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/google/docsy/issues/1841&#34;&gt;Repository / page-meta link fixes and improvements #1841&lt;/a&gt;, particularly for&amp;nbsp;&lt;a href=&#34;https://github.com/google/docsy/issues/375&#34;&gt;GitLab&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/google/docsy/issues/1436&#34;&gt;Drop jQuery #1436&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Thank you to all contributors and users who made 2024 a meaningful year for Docsy. Wishing you a fantastic end to 2024 and a great start to 2025! Let’s continue creating exceptional documentation together.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Based on GitHub analytics&amp;nbsp;&lt;a href=&#34;https://github.com/google/docsy/network/dependents&#34;&gt;Docsy dependents&lt;/a&gt;&amp;nbsp;as of the time of writing.&amp;nbsp;&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#fnref:1&#34;&gt;↩︎&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Remember to&amp;nbsp;&lt;a href=&#34;https://github.com/google/docsy/issues&#34;&gt;vote for your most-desired feature&lt;/a&gt;.&amp;nbsp;&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#fnref:2&#34;&gt;↩︎&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;作者：&lt;a href=&#34;https://github.com/chalin&#34;&gt;Patrice Chalin&lt;/a&gt;（&lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/ a&gt;），&lt;a href=&#34;https://www.docsy.dev/blog/2022/hello/#introducing-the-psc&#34;&gt;Docsy 指导委员会&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当我们回顾 2024 年时，我们很高兴看到在实现&lt;a href=&#34;https://www.docsy.dev/blog/2023/priorities-for-2024/&#34;&gt;2024 年优先事项中概述的目标方面取得稳步进展&lt;/a&gt;。今年，我们的重点是增强稳定性、提高国际化，并提供暗模式和持续集成 (CI) 测试等期待已久的功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-style-smaller-quote has-gray-400-background-color has-background is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt; Docsy 的使用率到 2024 年&lt;strong&gt;增加了 57%&lt;/strong&gt;，从 1,400 个项目增加到 2,200 个项目！ &lt;sup&gt;&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们深入探讨 2024 年的发展亮点并展望未来。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;release-highlights&#34;&gt;发布亮点&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#release-highlights &#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们今年发布了三个版本，每个版本都注重稳定性，同时至少引入了一项主要功能增强。亮点包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.docsy.dev/blog/2024/0.9.0/&#34;&gt;0.9.0&lt;/a&gt;&lt;/strong&gt; 添加了期待已久的&lt; /em&gt;：&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;通过 GitHub Actions 进行&lt;strong&gt;CI 测试&lt;/strong&gt;，以确保 Linux 和 Windows 上的质量和可靠性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;页脚自定义&lt;/strong&gt; - Docsy 的&lt;a href=&#34;https://github.com/google/docsy/issues/2&#34;&gt;最长的问题 (#2)&lt;/a&gt;！ - 以及改进的存储库链接，以及增强的可访问性和外观。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.docsy.dev/blog/2024/0.10.0/&#34;&gt;0.10.0&lt;/a&gt;：&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;已启用&lt;a href=&#34;https://www.docsy.dev/blog/2024/0.10.0/#color-themes-and-dark-mode-support&#34;&gt;颜色主题和&lt;strong&gt;深色模式&lt; /strong&gt;&lt;/a&gt; 通过 Bootstrap 5.3 升级，标志着 &lt;a href=&#34;https://github.com/google/docsy/issues/470&#34;&gt;Bootstrap 5 迁移&lt;/a&gt;的完成已开始2021 年。还对短代码和样式进行了调整，以实现暗模式兼容性。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;解决了 Hugo 0.123.0 主要核心升级导致的重大更改。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/google/docsy/releases/tag/v0.11.0&#34;&gt;0.11.0&lt;/a&gt;：&lt;/strong&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;使用 Bootstrap 的 RTL 功能重新引入&lt;strong&gt;从右到左 (RTL) 语言支持&lt;/strong&gt;，从而增强国际化。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;enhancements&#34;&gt;主要功能增强&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#enhan水泥&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;除了 CI 测试这一有助于 Docsy 稳定性的关键开发功能外，以下是 2024 年推出的面向用户的主要增强功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;dark-mode-support&#34;&gt;深色模式支持&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#暗模式支持&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.docsy.dev/blog/2024/0.10.0/#color-themes-and-dark-mode-support&#34;&gt;深色模式&lt;/a&gt; 支持是&lt;在 v0.10.0 中首次亮相之前，&lt;em&gt;获得最多支持的&lt;/em&gt; Docsy 增强功能&lt;/strong&gt;。此 Docsy 功能由 Bootstrap 5.3 颜色主题提供支持，包括一个内置的浅色/深色模式菜单选择器，可轻松实现。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我们计划在&lt;a href=&#34;https://github.com/google/docsy-example/issues/285&#34;&gt;启用深色模式&lt;/a&gt;。 com/google/docsy-example&#34;&gt;Docsy 示例&lt;/a&gt;，更容易采用。深色模式已在 OpenTelemetry (&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/issues/4023&#34;&gt;opentelemetry.io#4023&lt;/a&gt;) 等著名项目中采用。&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;right-to-left-rtl-language-support&#34;&gt;从右到左 (RTL) 语言支持&lt;a href=&#34;https://www.docsy. dev/blog/2024/year-in-review/#right-to-left-rtl-language-support&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/docsy/pull/1933&#34;&gt;RTL 语言支持 (#1933)&lt;/a&gt;，通过 Bootstrap 使用成熟且经过严格审查的 &lt;a href=&#34;https://rtlcss.com/&#34;&gt;RTLCSS&lt;/a&gt; 框架，取代了 Docsy 自 2023 年起已弃用的自定义 RTL 解决方案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此增强功能满足了长期存在的多语言文档需求。值得注意的是，基于 Docsy 的主要网站已请求 RTL 支持，包括两个 2024 &lt;a href=&#34;https://www.cncf.io/blog/2024/07/11/as-we-reach-mid-year -2024-a-look-at-cncf-linux-foundation-and-top-30-open-source-project-velocity/&#34;&gt;顶级速度项目&lt;/a&gt; &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt;：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;：&lt;a href=&#34;https://github.com/kubernetes/website/issues/22730&#34;&gt;从右到-左侧语言支持#22730&lt;/a&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/website/issues/22726&#34;&gt;将网站本地化为阿拉伯语 (ar) #22726&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/website/issues/22727&#34;&gt;将网站本地化为波斯语 (fa) #22727&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://opentelemetry.io/&#34;&gt;OpenTelemetry&lt;/a&gt;：&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry.io/issues/4990&#34;&gt;添加波斯语版本的网站页面 #4990&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;adoptions-and-the-docsy-starter&#34;&gt;采用和 Docsy Starter&lt;a href=&#34;https://www.docsy.dev/blog/2024/year -in-review/#adoptions-and-the-docsy-starter&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;2024 年最令人兴奋的发展之一是 Docsy 的日益普及。吉tHub 分析显示，截至撰写本文时，使用量增加了&lt;strong&gt;57%&lt;/strong&gt;，达到&lt;strong&gt;2.20 个项目&lt;/strong&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;自从我们推出&lt;a href=&#34;https://www.cncf.io/blog/2023/01/19/fast-and- effective-tools-for-cncf-and-open以来，CNCF项目的采用率也有所增长-source-project-websites/&#34;&gt;2023 年报告&lt;/a&gt;。今年，&lt;a href=&#34;https://www.cncf.io/blog/2024/09/27/congratulations-to-45-cncf-term-1-2024-lfx-program-mentees/&#34;&gt;Linux 基金会学员&lt;/a&gt; &lt;a href=&#34;https://mentorship.lfx.linuxfoundation.org/project/e35f28f9-f333-47a8-a76a-119567cf10ca&#34;&gt;桑德拉·丁迪&lt;/a&gt; 和 &lt;a href=&#34;https://mentorship.lfx.linuxfoundation.org/project/34314eb1-0fc3-4802-ab04-2265418c2e48&#34;&gt;Dariksha Ansari&lt;/a&gt; 使用了&lt;a href=&#34;https://github.com/chalin /docsy-starter&#34;&gt;CNCF Docsy 入门&lt;/a&gt;，用于将以下网站迁移到 Docsy：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://theupdateframework.io/&#34;&gt;更新框架&lt;/a&gt;&lt;/strong&gt;（&lt;a href=&#34;https://github.com/theupdateframework/theupdateframework. io/pull/105&#34;&gt;theupdateframework.io#105&lt;/a&gt;)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://in-toto.io/&#34;&gt;in-toto&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&#34;https://github.com/in- toto/in-toto.io/issues/76&#34;&gt;in-toto.io#76&lt;/a&gt;）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，&lt;a href=&#34;https://github.com/kubernetes/website&#34;&gt;Kubernetes 网站&lt;/a&gt;正在对 v0.2 进行重大 Docsy 升级，以与最新版本保持一致并减少技术成本债务：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/website/issues/41171&#34;&gt;与上游 Docsy kubernetes.io#41171 保持一致&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/website/issues/44002&#34;&gt;逐步将 Docsy 更新到最新的 Docsy kubernetes.io#44002&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;升级进展顺利，如&lt;a href=&#34;https://github.com/kubernetes/website/pull/48721&#34;&gt;0.3.x 升级&lt;/a&gt;和&lt;中记录的持续努力所示a href=&#34;https://github.com/kubernetes/website/issues/48807&#34;&gt;0.5.x 升级&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;whats-ahead&#34;&gt;接下来会发生什么？&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#whats-前进&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;展望未来，我们很高兴能够继续支持 &lt;a href=&#34;https://github.com/grpc/grpc.io/issues/1389&#34;&gt;gRPC (grpc) 等项目的 Docsy 升级和采用工作.io#1389)&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/jaegertracing/documentation/issues/746&#34;&gt;Jaeger （jaegertracing#746）&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有关暂定计划在 2025 年第一个版本中提供的功能，请参阅&lt;a href=&#34;https://github.com/google/docsy/issues/2108&#34;&gt;Release 0.12.0 Preparation #2108&lt;/a&gt;。目前获得最多支持的增强请求是：&lt;sup&gt;&lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup &gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/google/docsy/issues/349&#34;&gt;右侧 TOC #349 上的导航指示&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;一小时f=&#34;https://github.com/google/docsy/issues/1841&#34;&gt;存储库/页面元链接修复和改进#1841&lt;/a&gt;，特别是&lt;a href=&#34;https://github.com /google/docsy/issues/375&#34;&gt;GitLab&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/google/docsy/issues/1436&#34;&gt;删除 jQuery #1436&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;感谢所有贡献者和用户，是你们让 2024 年对 Docsy 来说是有意义的一年。祝您 2024 年有一个美好的结束，2025 年有一个美好的开始！让我们继续一起创建出色的文档。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;基于截至撰写本文时的 GitHub 分析&lt;a href=&#34;https://github.com/google/docsy/network/dependents&#34;&gt;Docsy 依赖项&lt;/a&gt;。 &lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#fnref:1&#34;&gt;↩︎&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;请记得&lt;a href=&#34;https://github.com/google/docsy/issues&#34;&gt;为您最想要的功能投票&lt;/a&gt;。 &lt;a href=&#34;https://www.docsy.dev/blog/2024/year-in-review/#fnref:2&#34;&gt;↩︎&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 06 Jan 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【My journey as a speaker in Cloud Native Ayacucho: a young community embracing cloud native technologies】我作为云原生阿亚库乔演讲者的旅程：拥抱云原生技术的年轻社区</title>
      <link>https://www.cncf.io/blog/2025/01/08/my-journey-as-a-speaker-in-cloud-native-ayacucho-a-young-community-embracing-cloud-native-technologies/</link>
      <description>【&lt;p&gt;&lt;em&gt;Community post by Daniel Israel García Bustinza, Ayacucho, Perú&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I am &lt;a href=&#34;https://www.linkedin.com/in/daniel-garcia-bustinza/&#34;&gt;Daniel Israel García Bustinza&lt;/a&gt;, writing from &lt;a href=&#34;https://en.wikipedia.org/wiki/Huanta&#34;&gt;Huanta&lt;/a&gt;, Ayacucho, Perú. I am a cloud solutions architect and database specialist, and I help organizations migrate to the cloud, optimize databases, and design high-availability architectures on platforms like AWS, Azure, and Kubernetes. As a member of the &lt;a href=&#34;https://community.cncf.io/cloud-native-ayacucho/&#34;&gt;Cloud Native Ayacucho community&lt;/a&gt;, I have the privilege of sharing knowledge with a young and passionate community driving technological innovation in Peru.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXelyH9yMKX-x8vqLNnrrXEgqtw-Vv3GmE-10uVkUXNi7C5FgtlZEbMpW0YiUsBh7_it8VkF9D-V238T7pqHcLgZb_D_ltD--eYcGIa8qeZu9mySytsPJPVR8NrUyguE7AQQcSHz5Q?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;Foto: Huanta, Ayacucho, Peru&#34; style=&#34;width:900px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Foto: Huanta, Ayacucho, Peru&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This journey wouldn’t be possible without the support of the &lt;strong&gt;Cloud Native Computing Foundation (CNCF), &lt;/strong&gt;which&lt;strong&gt; &lt;/strong&gt;is helping us create communities like this one – not just around the world but also in places like Ayacucho, Peru, where starting a tech community once felt like a big challenge. In this article, I share my experience as a speaker in this vibrant and inspiring community!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc7qP0cttN8WyvHIU5vOWuPl1irm0KWfXku9pdNmuKshZVGDi92PHWCQrwt6sj69U60C7zB_3KHmYqnm-L98SYVq0WJ0mMoKagv-Sdiezd2I2hpLJGorwasfzHpmjsdlSDkrbpo?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;Cloud Native Ayacucho, Peru, November meetup&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Cloud Native Ayacucho, Peru, November meetup&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Last month, I had the chance to share my experiences with a fantastic group of passionate people from the new Cloud Native Ayacucho community, supported by the &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt;. I gave two sessions during the event: one on basic concepts and another for those who wanted to learn more advanced topics. Both sessions went really well, and the participants were very engaged. The positive feedback I received made me feel so happy!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;During the sessions, we talked about how understanding the basics and overcoming challenges step by step is key to building strong and reliable systems. We focused on topics that are essential for modern software, making sure everyone could take something useful away to apply in their own projects.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;In the first session, we talked about Observability and how to create strategies to build systems that are reliable and strong. These days, applications grow more complex, distributed, and demanding. It’s more important than ever to have a clear view of how systems are performing. Observability helps with this by letting us understand what’s going on inside a system by looking at things like logs, metrics, and traces. And I’m sure you’ve asked yourself this at some point: What’s happening? Why is it happening? And how can I fix it quickly?&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;In the second session, &lt;strong&gt;“High Availability: Beyond On-Premise,”&lt;/strong&gt; I shared how we’ve moved toward achieving high availability in the cloud. So, how did we get here? In the past, high availability depended on expensive, heavy-duty hardware. This meant using duplicate systems, clustering, and data replication to keep things running. Back then, recovering from issues often took hours or even days.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Then, the cloud came along and changed everything. It introduced elasticity, redundancy, and resilience with managed services, making high availability more accessible. Thanks to distributed architectures and modern tools, ensuring systems stay online has become easier and faster. Today, high availability isn’t just a luxury for big companies – it’s a must-have for everyone, from small startups to large enterprises, made possible by the cloud.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcIuKYsQ3t0dvCp7EU_UUgwSV-twHZUm2bRRYVcLSimgOosm-3J_n7vji-rlZt5KaGMdSyit1LxGVUG7Z1IardJ6vNSSGN4b-6frvBdUZRZEYPAEWMZQ5cC5RP-R9GRrNvMY6NZ?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;meetup photo&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Hearing this gained a lot of interest from those who couldn’t attend the session in person. I received kind messages from people who couldn’t attend because of the distance but were very interested in the topics. They even suggested making the sessions available online or as recordings. This feedback made me realize the great opportunity the &lt;a href=&#34;https://community.cncf.io/cloud-native-ayacucho/&#34;&gt;Cloud Native Ayacucho community&lt;/a&gt;, supported by the &lt;strong&gt;CNCF&lt;/strong&gt;, offers to connect with even more people. Knowing that this content can help and inspire others motivates me so much. To everyone who reached out – thank you from the bottom of my heart! Your support encourages me to keep sharing knowledge and creating spaces where more people can access these helpful tools.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Another highlight of the event was &lt;a href=&#34;https://www.linkedin.com/in/sergio-canales-espinoza&#34;&gt;Sergio Canales&lt;/a&gt; inspiring talk titled “&lt;strong&gt;Taking the First Step in a Community Can Be a Game-Changer for Your Personal and Professional Development&lt;/strong&gt;“. Sergio emphasized how joining a tech community not only connects you with passionate individuals but also opens doors for collaboration, learning, and contributing to the future of technology. During his presentation, he shared practical tips for building meaningful relationships and growing within these incredible ecosystems. His enthusiasm for sharing and learning with the attendees made his talk truly motivating, leaving everyone eager to take that first step toward new opportunities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeEDXFvxk6nfcCzhSPPUaNxNg5xW2ja1xf5hwFHt6rSGaHEd3xTYqQeJRGt1qlhvtwGRMI_lM-ninVlw7C_anO60MNEBMRSYgUmBSXyilw9Pq6922U75EYu4uwoIs2zXhqak3UXjw?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;photo of slides and someone giving a presentation&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;It was an incredibly enriching experience that left me deeply grateful for the commitment and passion of each participant. Witnessing the community’s enthusiasm inspires me to continue sharing knowledge and strengthening spaces like this.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Despite the young age of many attendees, their curiosity and interest were impressive. Most stayed until the very end, showing genuine enthusiasm for learning and active participation (though I must admit—the pizza also helped keep energy levels high!). To make the event even more engaging, we rewarded participants with t-shirts for correctly answering questions about the topics discussed. This added an element of fun and motivation to the event.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf6a6vVNEIrykP39U84ZbJB_SpRKM4B-_WiFkx-ZQWrjOGcHbruEV61F2Dp-AZ9pN34fucjEVtEwZQHsu637bjHG9afB4KDVDiUAatg3q5RrCvZIVyTWpEfP3brhVgrbUhwH8M8zA?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;Eating pizza at a cloud native meetup&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I would like to extend my sincerest gratitude to &lt;a href=&#34;https://www.linkedin.com/in/edithpuclla?lipi=urn%3Ali%3Apage%3Ad_flagship3_profile_view_base_contact_details%3B4PbNi6IoRZqC9FYwsc%2BeRA%3D%3D&#34;&gt;Edith Puclla&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/glissejorge&#34;&gt;Glisse Lisbeth Jorge Malca&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/kenesparta&#34;&gt;Ken Esparta&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/richard-zapata-casaverde-77735351&#34;&gt;Richard Zapata&lt;/a&gt;, and &lt;a href=&#34;https://www.linkedin.com/in/jorgeyucra&#34;&gt;Jorge Yucra&lt;/a&gt;, who are part of the organizing team and volunteers of Cloud Native Ayacucho, Peru. Thank you for your dedication to this growing community that continues to make a difference!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;I look forward to repeating this vibrant experience soon. If you are not yet part of our community, I invite you to join &lt;a href=&#34;https://community.cncf.io/cloud-native-ayacucho/&#34;&gt;Cloud Native Ayacucho community&lt;/a&gt;, a welcoming space supported by the Cloud Native Computing Foundation, where we share knowledge, grow together, and explore the most innovative technologies. If you want to be a speaker, you’re also welcome to reach out to us on LinkedIn!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Also, don´t miss the opportunity to be&lt;a href=&#34;https://www.linkedin.com/company/cloudnativelima/posts?lipi=urn%3Ali%3Apage%3Ad_flagship3_search_srp_all%3BMt%2F5STKfSnG6P413wtPs3Q%3D%3D&#34;&gt; Cloud Native Lima&lt;/a&gt; and the annual event of&lt;a href=&#34;https://www.linkedin.com/company/kcdlimaperu/?viewAsMember=true&#34;&gt; Kubernetes Community Days Lima Perú&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Feel free to find me, &lt;a href=&#34;https://www.linkedin.com/in/daniel-garcia-bustinza/&#34;&gt;Daniel Garcia&lt;/a&gt;&lt;strong&gt; ,&lt;/strong&gt; on LinkedIn and keep an eye out for our upcoming in-person events – they’re a wonderful chance to learn, meet new people, and become part of this amazing community!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcPC71bcbutFeGBOEjO1_9KFvd0v5maWYP3AeiCxN1XK3nXlrtE9Vvn9uzJa0Zu6tuJwf3Rnk_nfzwto4kU5Sl09II4A1xGuR_u6XEguGwmLOxmKM-JPnDsEQk3njwfmJkIwvwF?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;Giving a presentation&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;秘鲁阿亚库乔 Daniel Israel García Bustinza 的社区帖子&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我是 &lt;a href=&#34;https://www.linkedin.com/in/daniel-garcia-bustinza/&#34;&gt;Daniel Israel García Bustinza&lt;/a&gt;，来自 &lt;a href=&#34;https:// en.wikipedia.org/wiki/Huanta&#34;&gt;万塔&lt;/a&gt;，阿亚库乔，秘鲁。我是一名云解决方案架构师和数据库专家，帮助组织迁移到云、优化数据库并在 AWS、Azure 和 Kubernetes 等平台上设计高可用性架构。作为&lt;a href=&#34;https://community.cncf.io/cloud-native-ayacucho/&#34;&gt;云原生 Ayacucho 社区&lt;/a&gt;的成员，我有幸与年轻而充满激情的社区分享知识推动秘鲁的技术创新。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXelyH9yMKX-x8vqLNnrrXEgqtw-Vv3GmE-10uVkUXNi7C5FgtlZEbMpW0 YiUsBh7_it8VkF9D-V238T7pqHcLgZb_D_ltD--eYcGIa8qeZu9mySytsPJPVR8NrUyguE7AQQcSHz5Q?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;照片：秘鲁阿亚库乔万塔&#34; style=&#34;width:900px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;照片：秘鲁阿亚库乔万塔&lt; /图标题&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果没有&lt;strong&gt;云原生计算基金会 (CNCF) 的支持，这一旅程就不可能实现，该基金会&lt;strong&gt; &lt;/strong&gt;正在帮助我们创建这样的社区，而不仅仅是围绕在世界各地，在秘鲁阿亚库乔这样的地方，建立一个科技社区曾经被认为是一个巨大的挑战。在这篇文章中，我分享了我作为这个充满活力和鼓舞人心的社区中的演讲者的经验！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXc7qP0cttN8WyvHIU5vOWuPl1irm0KWfXku9pdNmuKshZVGDi92PHWCQ rwt6sj69U60C7zB_3KHmYqnm-L98SYVq0WJ0mMoKagv-Sdiezd2I2hpLJGorwasfzHpmjsdlSDkrbpo?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;秘鲁云原生阿亚库乔，11 月聚会&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;秘鲁云原生阿亚库乔，11 月聚会&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;上个月，我有机会与来自新云原生 Ayacucho 社区的一群充满热情的人分享了我的经验，该社区由 &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF 支持&lt;/a&gt;。我在活动期间举办了两场会议：一场关于基本概念，另一场针对那些想要学习更高级主题的人。两次会议都进行得非常顺利，参与者也非常投入。我收到的积极反馈让我感到非常高兴！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在会议期间，我们讨论了理解基础知识并逐步克服挑战如何成为构建强大而可靠的系统的关键。我们专注于现代软件必不可少的主题，确保每个人都可以学到有用的东西应用于自己的项目中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;在第一场会议中，我们讨论了可观察性以及如何制定策略来构建d 可靠且强大的系统。如今，应用程序变得更加复杂、分散且要求更高。清晰地了解系统的运行情况比以往任何时候都更加重要。可观察性有助于我们通过查看日志、指标和跟踪等内容来了解​​系统内部发生的情况。我相信您在某个时候问过自己：发生了什么事？为什么会发生这种情况？我怎样才能快速修复它？ &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;在第二场会议&lt;strong&gt;“高可用性：超越本地部署”&lt;/strong&gt;中，我分享了我们如何在云中实现高可用性。那么，我们是怎么到这里的呢？过去，高可用性依赖于昂贵的重型硬件。这意味着使用重复系统、集群和数据复制来保持运行。当时，从问题中恢复通常需要数小时甚至数天的时间。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;然后，云的出现改变了一切。它通过托管服务引入了弹性、冗余和恢复力，使高可用性变得更加容易。得益于分布式架构和现代工具，确保系统保持在线变得更加容易和快捷。如今，高可用性不仅是大公司的奢侈品，而且是每个人（从小型初创公司到大型企业）的必备条件，而云使之成为可能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXcIuKYsQ3t0dvCp7EU_UUgwSV-twHZUm2bRRYVcLSimgOosm-3J_n7vj i-rlZt5KaGMdSyit1LxGVUG7Z1IardJ6vNSSGN4b-6frvBdUZRZEYPAEWMZQ5cC5RP-R9GRrNvMY6NZ?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;会议照片&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;听到这个消息引起了那些无法亲自参加会议的人的极大兴趣。我收到了一些人的善意留言，他们因为距离原因无法参加，但对这些话题非常感兴趣。他们甚至建议将会议内容在线提供或以录音形式提供。这个反馈让我意识到由 &lt;strong&gt;CNCF&lt;/ 支持的&lt;a href=&#34;https://community.cncf.io/cloud-native-ayacucho/&#34;&gt;云原生 Ayacucho 社区&lt;/a&gt; 的绝佳机会strong&gt;，提供与更多人联系的机会。知道这些内容可以帮助和激励他人，这让我动力十足。对于所有伸出援手的人——我发自内心地感谢你们！您的支持鼓励我继续分享知识并创造空间，让更多的人可以使用这些有用的工具。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该活动的另一个亮点是 &lt;a href=&#34;https://www.linkedin.com/in/sergio-canales-espinoza&#34;&gt;Sergio Canales&lt;/a&gt; 题为“&lt;strong&gt;迈出第一步”的鼓舞人心的演讲社区中的成员可以改变您的个人和职业发展&lt;/strong&gt;”。 Sergio 强调加入技术社区不仅可以让您与充满热情的人建立联系，还可以打开协作、学习和为未来做出贡献的大门e 技术。在演讲中，他分享了在这些令人难以置信的生态系统中建立有意义的关系和成长的实用技巧。他与与会者分享和学习的热情使他的演讲真正具有激励性，让每个人都渴望迈出迈向新机遇的第一步。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXeEDXFvxk6nfcCzhSPPUaNxNg5xW2ja1xf5hwFHt6rSGaHEd3xTYqQeJR GT1qlhvtwGRMI_lM-ninVlw7C_anO60MNEBMRSYgUmBSXyilw9Pq6922U75EYu4uwoIs2zXhqak3UXjw?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;幻灯片照片和演示者的照片&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这是一次极其丰富的经历，让我对每位参与者的承诺和热情深表感激。见证社区的热情激励我继续分享知识并加强这样的空间。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;尽管许多与会者年龄较小，但他们的好奇心和兴趣令人印象深刻。大多数人都坚持到了最后，表现出了对学习和积极参与的真正热情（尽管我必须承认——披萨也有助于保持高能量水平！）。为了让活动更具吸引力，我们为正确回答有关所讨论主题的问题的参与者颁发了 T 恤奖励。这为活动增添了乐趣和动力。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXf6a6vVNEIrykP39U84ZbJB_SpRKM4B-_WiFkx-ZQWrjOGcHbruEV61F2 Dp-AZ9pN34fucjEVtEwZQHsu637bjHG9afB4KDVDiUAatg3q5RrCvZIVyTWpEfP3brhVgrbUhwH8M8zA?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;在云原生聚会上吃披萨&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我谨向&lt;a href=&#34;https://www.linkedin.com/in/edithpuclla?lipi=urn%3Ali%3Apage%3Ad_flagship3_profile_view_base_contact_details%3B4PbNi6IoRZqC9FYwsc%2BeRA%3D%3D&#34;&gt;表示最诚挚的谢意伊迪丝·普克拉&lt;/a&gt;，&lt;a href=&#34;https://www.linkedin.com/in/glissejorge&#34;&gt;Glisse Lisbeth Jorge Malca&lt;/a&gt;，&lt;a href=&#34;https://www.linkedin.com/in/kenesparta&#34;&gt;肯·埃斯帕塔&lt; /a&gt;、&lt;a href=&#34;https://www.linkedin.com/in/richard-zapata-casaverde-77735351&#34;&gt;理查德·萨帕塔&lt;/a&gt;和&lt;a href=&#34;https://www.linkedin.com/in/jorgeyucra&#34;&gt;Jorge Yucra&lt;/a&gt;，他是秘鲁云原生阿亚库乔组织团队的成员和志愿者。感谢您对这个不断发展的社区的奉献，该社区将继续发挥作用！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;我期待很快能再次体验这种充满活力的体验。如果您还不是我们社区的一员，我邀请您加入&lt;a href=&#34;https://community.cncf.io/cloud-native-ayacucho/&#34;&gt;云原生 Ayacucho 社区&lt;/a&gt;，这是一个温馨的空间由云原生计算基金会支持，我们在这里分享知识、共同成长并探索最具创新性的技术。如果您想成为演讲者，也欢迎您在 LinkedIn 上与我们联系！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;另外，不要错过成为&lt;a hre的机会f=&#34;https://www.linkedin.com/company/cloudnativelima/posts?lipi=urn%3Ali%3Apage%3Ad_flagship3_search_srp_all%3BMt%2F5STKfSnG6P413wtPs3Q%3D%3D&#34;&gt;云原生利马&lt;/a&gt;和年度活动&lt;一href=&#34;https://www.linkedin.com/company/kcdlimaperu/?viewAsMember=true&#34;&gt;秘鲁利马 Kubernetes 社区日&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;欢迎在 LinkedIn 上找到我，&lt;a href=&#34;https://www.linkedin.com/in/daniel-garcia-bustinza/&#34;&gt;Daniel Garcia&lt;/a&gt;&lt;strong&gt;，&lt;/strong&gt;并关注我们即将举行的现场活动 - 它们是学习、结识新朋友并成为这个令人惊叹的社区的一部分的绝佳机会！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcPC71bcbutFeGBOEjO1_9KFvd0v5maWYP3AeiCxN1XK3nXlrtE9Vvn9 uzJa0Zu6tuJwf3Rnk_nfzwto4kU5Sl09II4A1xGuR_u6XEguGwmLOxmKM-JPnDsEQk3njwfmJkIwvwF?key=5UkLmh4xT4x4LGuOjr_rHwr7&#34; alt=&#34;进行演示&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Tue, 07 Jan 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Optimising prompt engineering for better AI outputs】优化即时工程以获得更好的 AI 输出</title>
      <link>https://www.cncf.io/blog/2025/01/03/optimising-prompt-engineering-for-better-ai-outputs/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on the &lt;a href=&#34;https://www.yld.io/blog/optimising-prompt-engineering-for-better-ai-outputs&#34;&gt;yld blog&lt;/a&gt; by Afonso Ramos&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Remember when searching for information online involved typing in a few keywords and sifting through pages of results? Thankfully, those days are long gone.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Today’s search engines have transformed the way we find information online. From simple keyword matching to advanced technologies like semantic search and natural language processing, search engines have come a long way. But, have you ever stopped to consider the UX design choices that make these search experiences possible?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;An effective UX/ search experience design involves a deep understanding of how humans interact with machines and the ability to adapt to that relationship. It’s not an innate skill, but rather something that can be developed over time, much like the act of googling is a skill that many of us have honed through years of practice. Similarly, interacting with Generative AI models requires a certain level of skill and knowledge which involves Prompt Engineering.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This article aims to provide a comprehensive guide to Prompt Engineering, helping you understand its importance, techniques, and best practices. You’ll be equipped to create effective prompts that maximise the potential of AI models and enhance user experiences.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Why is Prompt Engineering important?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Well-crafted prompts are essential for maximising the potential of AI models, particularly LLMs. They enhance AI performance by providing clear instructions and context, leading to more accurate and relevant responses.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Prompt Engineering improves user experience by making interactions more intuitive and reducing ambiguity, minimising the risk of misinterpretation. It enables AI models to handle complex tasks, adapt to different use cases, and ensure consistency in outputs, which is vital for integrated systems.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Precision in Prompt Engineering&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Prompt Engineering is a discipline that involves developing and optimising prompts to efficiently use language models for a wide variety of applications and research topics. This discipline is particularly useful for developers, researchers, and anyone looking to leverage AI models for various applications and research topics. It encompasses various skills and techniques essential for interacting with and developing LLMs. Mastering this discipline enables you to optimise these interactions, achieving more accurate and relevant outcomes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A prompt refers to a statement or question that is employed to trigger a response from a language model or other AI system. Prompts are generally crafted to offer context or instructions to the AI model, directing it to produce a specific type of output or carry out a particular task. A prompt can be provided to the language model by the user or by the system itself, serving as a means to define its default behaviour.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Creating effective prompts requires a deep understanding of both the AI model (various models respond uniquely to different types of prompts) and the user’s intent. Just as search engines use algorithms to understand the user’s query and return relevant results, Prompt Engineering involves designing prompts to communicate the user’s intent to the AI model.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Experimenting with different formats, testing various instructions and contexts, and refining the prompt based on the AI model’s responses are key to creating prompts that produce the desired response from the AI model while minimising the risk of misinterpretation or ambiguity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The images below demonstrate how slight prompt variations can lead to very different results. However, consistency is crucial in integrated systems. A good prompt aims to produce repeatable outputs with minimal variation, ensuring reliable and predictable AI performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://cdn.prod.website-files.com/65a7bc80c6af99bbabad9d9b/6747249fe464d08e42fed17a_674723e280e45afc0fd523a0_Screenshot%25202024-11-27%2520at%252013.51.21.png&#34; alt=&#34;Screenshot of the first prompt: “What is spaghetti made of?”&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Screenshot of the first prompt: “What is spaghetti made of?”&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;‍&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://cdn.prod.website-files.com/65a7bc80c6af99bbabad9d9b/6747249fe464d08e42fed17d_6747240eca23a2bec9c3fad1_Screenshot%25202024-11-27%2520at%252013.52.06.png&#34; alt=&#34;Screenshot of the second prompt with a slight variation: ”What is spaghetti?”&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Screenshot of the second prompt with a slight variation: ”What is spaghetti?”&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;‍&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When it comes to the daily interaction with an LLM, a varied yet similar result would be acceptable. But, when it comes to using an LLM as part of an integrated system, consistency is an important factor. What makes a prompt “good” is about producing a somewhat repeatable output with minimal variation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Are all prompts equal?&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;No. Not all prompts are created equally because different types of prompts serve different purposes and can significantly impact the quality and relevance of the AI model’s responses. Understanding the various types of prompts and their applications is key to effective Prompt Engineering.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As a way to scientifically define methods of communication with LLMs, many have tried to create both techniques and frameworks that systematically define how to write these prompts.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here are some common types of AI prompts that serve unique purposes:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;One-Shot and Few-Shot prompts:&amp;nbsp;&lt;/strong&gt;If you want to follow a structure for a JIRA ticket, providing a well-structured template will help the AI generate similar ones. Few-shot or One-Shot prompts both help the AI adapt quickly to new tasks by providing a small set of examples, enhancing its ability to generate relevant and accurate responses. These prompting techniques involve providing the AI with examples of the desired task or output before asking it to complete a similar task. By showing the model what is expected through one or a few examples, the AI learns the context and format needed and applies it to new inputs.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Zero-Shot prompts:&amp;nbsp;&lt;/strong&gt;A practical use case is asking the AI to translate a sentence from English to French without providing any examples; the AI must rely on its pre-training to understand and perform the task. This approach is particularly useful for assessing how well the AI can handle novel or unexpected queries, demonstrating its ability to apply learned patterns to new contexts. Unlike few-shot prompts, zero-shot prompts require the AI to perform tasks without prior examples, relying solely on its pre-training. This approach is valuable for evaluating the AI’s adaptability and versatility.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Chain-of-Thought prompts:&lt;/strong&gt;&amp;nbsp;These prompts guide the AI to follow a logical progression or reasoning pathway to reach a conclusion or solve a problem. The prompt encourages the AI to detail its thought process step-by-step, which is helpful for complex decision-making or problem-solving tasks where understanding the rationale is as important as the answer itself, which is useful for reaching conclusions in maths problems, for example. Sometimes adding a simple prompt saying,&amp;nbsp;&lt;em&gt;“Justify your reasoning, step by step”&lt;/em&gt;&amp;nbsp;will suffice if the whole context can fit in a single prompt.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Meta-prompts:&amp;nbsp;&lt;/strong&gt;These are higher-level prompts that ask the AI to consider its capabilities or reflect on its reasoning. For example, you might ask the AI,&amp;nbsp;&lt;em&gt;“What steps would you take to solve this problem more efficiently”&lt;/em&gt;&amp;nbsp;or&amp;nbsp;&lt;em&gt;“Can you explain the reasoning behind your previous response”&lt;/em&gt;. This can be used to adjust its approach or to develop new strategies for answering questions or solving problems. Meta-prompts are useful for enhancing the AI’s self-awareness and adaptability, helping it to improve its performance over time.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Hybrid prompts:&lt;/strong&gt;&amp;nbsp;Combining multiple techniques, hybrid prompts might integrate direct instructions with creative challenges or conditional elements with exploratory questions to guide the AI more effectively according to complex needs. For example, you might provide the AI with a Few-Shot prompt to understand the structure of a report, then add a Chain-of-Thought prompt to ensure it details its reasoning, and finally include a Meta-prompt to ask the AI to reflect on its approach. Hybrid prompts are versatile and can be tailored to meet the specific requirements of various tasks, making them particularly useful for complex and multi-faceted projects.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Each of these Prompt Engineering techniques can be adapted and combined depending on the specific requirements of the task at hand and the capabilities of the AI model being used.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Effective Prompt Engineering involves a deep understanding of these techniques and the ability to apply them creatively. By leveraging the right prompt type, you can significantly enhance the AI model’s performance and the overall user experience. If you want to read more about the several types of prompts, check out&amp;nbsp;&lt;a href=&#34;https://www.promptingguide.ai/techniques&#34;&gt;Prompting Guide’s techniques page&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Writing your best prompt&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Crafting the perfect prompt is like giving directions to a slightly distracted, incredibly smart friend – you need to be clear, concise, and maybe even a little clever.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Start with a basic prompt and refine it iteratively based on the responses you receive, fine-tuning the AI’s outputs to your specific requirements. Incorporate relevant keywords and specific details to guide the AI more effectively towards the desired output.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Moreover, don’t use jargon or assume knowledge. Be aware of the model’s limitations to craft prompts within its capabilities, avoiding overly complex requests that lead to poor responses. Utilise feedback to continuously improve your prompts, as insights from users or the outputs themselves can guide adjustments for better results.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mind the length of your prompts to prevent confusion and higher token consumption, which can increase costs.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Although the model may be equipped to handle specific challenges like trick questions about prime numbers, this doesn’t guarantee it can manage every query type. Even after conjuring the best prompt, the model can still confidently reply with false information. In some cases, it might only succeed because similar examples were included in its training data, as shown in the examples in the screenshot below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://cdn.prod.website-files.com/65a7bc80c6af99bbabad9d9b/6747249fe464d08e42fed16b_6747244864346b08395ae091_Screenshot%25202024-11-27%2520at%252013.53.04.png&#34; alt=&#34;Screenshot showing an interaction with an AI model, where the prompt contains trick questions, making it unlikely to provide a factual answer.&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Screenshot showing an interaction with an AI model, where the prompt contains trick questions, making it unlikely to provide a factual answer.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;‍&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://cdn.prod.website-files.com/65a7bc80c6af99bbabad9d9b/6747249fe464d08e42fed165_67472481fa8552aded8f5e9a_Screenshot%25202024-11-27%2520at%252013.53.59.png&#34; alt=&#34;Screenshot of prompting the AI model to provide unbiased, factual mathematical answers about the possibility of prime numbers ending in 42.&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Screenshot of prompting the AI model to provide unbiased, factual mathematical answers about the possibility of prime numbers ending in 42.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;‍&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;‍&lt;strong&gt;Closing thoughts&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you find yourself facing a complex problem and need assistance in crafting effective prompts, don’t hesitate to ask AI for help. Leveraging the AI’s capabilities can provide valuable insights and suggestions to refine your prompts, ensuring you get the best possible outcomes. If you feel confident in your prompting capabilities, put yourself to the test against&amp;nbsp;&lt;a href=&#34;https://gandalf.lakera.ai/&#34;&gt;Gandalf&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Finally, different types of prompts complement each other, and combining them can lead to more effective and nuanced interactions with AI models. Whether you’re using One-Shot prompts for quick adaptation, Zero-Shot prompts for versatility, or hybrid prompts for complex tasks, understanding how to leverage these techniques together can significantly enhance the AI’s performance and the overall user experience.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If you need help with GenAI, data engineering, MLOps, data analysis, or data science,&amp;nbsp;&lt;a href=&#34;https://www.yld.io/contact-us/form&#34;&gt;contact us&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;会员帖子最初发布于 &lt;a href=&#34;https://www.yld.io/blog/optimising-prompt-engineering-for-better-ai-outputs&#34;&gt;yld 博客&lt;/a&gt;作者：阿方索·拉莫斯&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;还记得在线搜索信息时需要输入几个关键字并筛选结果页面吗？值得庆幸的是，那些日子已经一去不复返了。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;今天的搜索引擎已经改变了我们在线查找信息的方式。从简单的关键词匹配到语义搜索和自然语言处理等先进技术，搜索引擎已经取得了长足的进步。但是，您是否曾经停下来考虑过使这些搜索体验成为可能的用户体验设计选择？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有效的用户体验/搜索体验设计需要深入了解人类如何与机器交互以及适应这种关系的能力。这不是一种与生俱来的技能，而是可以随着时间的推移而发展的技能，就像谷歌搜索是我们许多人通过多年练习磨练出来的技能一样。同样，与生成式人工智能模型交互需要一定水平的技能和知识，其中涉及即时工程。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本文旨在提供即时工程的全面指南，帮助您了解其重要性、技术和最佳实践。您将有能力创建有效的提示，最大限度地发挥人工智能模型的潜力并增强用户体验。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;为什么即时工程很重要？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;精心设计的提示对于最大限度地发挥人工智能模型（尤其是法学硕士）的潜力至关重要。它们通过提供清晰的指令和上下文来增强人工智能性能，从而产生更准确和相关的响应。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;提示工程通过使交互更加直观、减少歧义、最大限度地降低误解风险来改善用户体验。它使人工智能模型能够处理复杂的任务，适应不同的用例，并确保输出的一致性，这对于集成系统至关重要。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;精确的快速工程&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;提示工程是一门涉及开发和优化提示的学科，以有效地将语言模型用于各种应用和研究主题。该学科对于开发人员、研究人员以及任何希望将人工智能模型用于各种应用和研究主题的人特别有用。它包含与法学硕士互动和发展法学硕士所必需的各种技能和技术。掌握这门学科使您能够优化这些交互，实现更准确和相关的结果。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;提示是指用于触发语言模型或其他人工智能系统响应的陈述或问题。提示通常是为了向人工智能模型提供上下文或指令，指导其产生特定类型的输出或执行特定的操作。拉任务。用户或系统本身可以向语言模型提供提示，作为定义其默认行为的方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;创建有效的提示需要深入了解 AI 模型（各种模型对不同类型的提示做出独特的响应）和用户的意图。正如搜索引擎使用算法来理解用户的查询并返回相关结果一样，提示工程涉及设计提示以将用户的意图传达给人工智能模型。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;尝试不同的格式、测试各种指令和上下文，并根据 AI 模型的响应完善提示，是创建提示的关键，这些提示可以从 AI 模型中产生所需的响应，同时最大限度地减少误解或歧义的风险。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下图展示了轻微的提示变化如何导致截然不同的结果。然而，一致性在集成系统中至关重要。良好的提示旨在以最小的变化产生可重复的输出，确保可靠且可预测的 AI 性能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://cdn.prod.website-files.com/65a7bc80c6af99bbabad9d9b/6747249fe464d08e4 2fed17a_674723e280e45afc0fd523a0_Screenshot%25202024-11-27%2520at%252013.51.21.png&#34; alt=&#34;第一个提示的屏幕截图：“意大利面条是由什么制成的？”&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;第一个提示的屏幕截图：“什么是意大利面条是用什么做的？”&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://cdn.prod.website-files.com/65a7bc80c6af99bbabad9d9b/6747249fe464d08e4 2fed17d_6747240eca23a2bec9c3fad1_Screenshot%25202024-11-27%2520at%252013.52.06.png&#34; alt=&#34;第二个提示的屏幕截图，略有不同：“什么是意大利面条？”&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;第二个提示的屏幕截图，其中略有不同：“什么是意大利面条？”&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当涉及到与法学硕士的日常互动时，不同但相似的结果是可以接受的。但是，当将法学硕士用作集成系统的一部分时，一致性是一个重要因素。提示“好”的关键是产生具有最小变化的可重复输出。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;所有提示都一样吗？&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;没有。并非所有提示都是平等创建的，因为不同类型的提示有不同的目的，并且会显着影响人工智能模型响应的质量和相关性。了解各种类型的提示及其应用是有效提示工程的关键。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;作为科学地定义与法学硕士沟通的方法，许多人尝试创建技术和框架来系统地定义如何编写这些提示。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这里有一些通讯关于服务于独特目的的人工智能提示类型：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;一次性和少量提示：&lt;/strong&gt;如果您想遵循 JIRA 工单的结构，提供结构良好的模板将有助于 AI 生成类似的模板。少量提示或一次性提示都可以通过提供一小组示例来帮助人工智能快速适应新任务，从而增强其生成相关且准确的响应的能力。这些提示技术包括在要求人工智能完成类似任务之前向人工智能提供所需任务或输出的示例。通过通过一个或几个示例向模型展示预期内容，人工智能可以学习所需的上下文和格式，并将其应用于新的输入。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;零射击提示：&lt;/strong&gt;一个实际用例是要求人工智能将一个句子从英语翻译成法语，而无需提供任何示例；人工智能必须依靠其预训练来理解和执行任务。这种方法对于评估人工智能处理新奇或意外查询的能力特别有用，展示其将学习模式应用到新环境的能力。与少样本提示不同，零样本提示要求人工智能在没有先前示例的情况下仅依靠其预训练来执行任务。这种方法对于评估人工智能的适应性和多功能性很有价值。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;思维链提示&lt;/strong&gt;：这些提示引导 AI 遵循逻辑进程或推理路径来得出结论或解决问题。该提示鼓励人工智能逐步详细说明其思维过程，这对于复杂的决策或解决问题的任务很有帮助，在这些任务中，理解基本原理与答案本身一样重要，这对于得出数学问题的结论很有用， 例如。有时，如果整个上下文可以容纳在一个提示中，那么添加一个简单的提示“逐步证明你的推理是正确的”就足够了。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;元提示：&lt;/strong&gt;这些是更高级别的提示，要求 AI 考虑其能力或反思其推理。例如，您可能会问人工智能“您会采取哪些步骤来更有效地解决这个问题”或“您能解释一下您之前的回答背后的原因吗”。这可以用来调整其方法或制定回答问题或解决问题的新策略。元提示对于增强人工智能的自我意识和适应能力很有用，帮助它随着时间的推移提高性能。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;混合提示&lt;/strong&gt;：混合提示结合多种技术，可以将直接指令与创造性挑战相结合，或将条件元素与探索性问题相结合，从而根据复杂的需求更有效地指导人工智能。例如，您可以向 AI 提供 Few-Shot 提示，以了解报告的结构，然后添加思想链提示确保其详细说明其推理，最后包括一个元提示，要求人工智能反思其方法。混合提示用途广泛，可以根据各种任务的具体要求进行定制，这使得它们对于复杂且多方面的项目特别有用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些即时工程技术中的每一种都可以根据手头任务的具体要求和所使用的人工智能模型的功能进行调整和组合。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有效的即时工程涉及对这些技术的深刻理解以及创造性地应用它们的能力。通过利用正确的提示类型，您可以显着增强 AI 模型的性能和整体用户体验。如果您想了解有关几种提示类型的更多信息，请查看&lt;a href=&#34;https://www.promptingguide.ai/techniques&#34;&gt;提示指南的技术页面&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;写下你最好的提示&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;制作完美的提示就像给一个有点心烦意乱、非常聪明的朋友指路——你需要清晰、简洁，甚至可能有点聪明。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从基本提示开始，根据您收到的响应迭代地完善它，根据您的具体要求微调 AI 的输出。纳入相关关键词和具体细节，以引导人工智能更有效地实现所需的输出。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此外，不要使用行话或假设知识。请注意模型在其能力范围内制作提示的局限性，避免过于复杂的请求导致响应不佳。利用反馈不断改进您的提示，因为用户的见解或输出本身可以指导调整以获得更好的结果。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;注意提示的长度，以防止混乱和更高的令牌消耗，这会增加成本。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然该模型可能能够处理特定的挑战，例如有关素数的技巧问题，但这并不能保证它可以管理每种查询类型。即使在想出最佳提示后，模型仍然可以自信地回复虚假信息。在某些情况下，它可能只会成功，因为其训练数据中包含类似的示例，如下面屏幕截图中的示例所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://cdn.prod.website-files.com/65a7bc80c6af99bbabad9d9b/6747249fe464d08e4 2fed16b_6747244864346b08395ae091_Screenshot%25202024-11-27%2520at%252013.53.04.png&#34; alt=&#34;显示与 AI 模型交互的屏幕截图，其中提示包含技巧性问题，使其不太可能提供事实答案。&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;显示与 AI 模型交互的屏幕截图，其中提示包含技巧性问题，使其不太可能提供事实答案。&lt;/ em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://cdn.prod.website-files.com/65a7bc80c6af99bbabad9d9b/6747249fe464d08e4 2fed165_67472481fa8552aded8f5e9a_Screenshot%25202024-11-27%2520at%252013.53.59.png&#34; alt=&#34;提示 AI 模型针对以 42 结尾的素数的可能性提供公正、真实的数学答案的屏幕截图。&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;提示 AI 模型针对以 42 结尾的素数的可能性提供公正、真实的数学答案的屏幕截图。&lt;/em&gt; &lt;/图标题&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;‍&lt;strong&gt;结束语&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您发现自己面临复杂的问题并且需要帮助来制定有效的提示，请毫不犹豫地向 AI 寻求帮助。利用人工智能的功能可以提供宝贵的见解和建议来完善您的提示，确保您获得最佳结果。如果您对自己的提示能力充满信心，请与&lt;a href=&#34;https://gandalf.lakera.ai/&#34;&gt;甘道夫&lt;/a&gt;一起测试自己。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;最后，不同类型的提示相辅相成，将它们组合起来可以与 AI 模型进行更有效、更细致的交互。无论您是使用单次提示来实现快速适应、零次提示来实现多功能性，还是使用混合提示来完成复杂任务，了解如何结合使用这些技术都可以显着提高人工智能的性能和整体用户体验。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果您需要 GenAI、数据工程、MLOps、数据分析或数据科学方面的帮助，请&lt;a href=&#34;https://www.yld.io/contact-us/form&#34;&gt;联系我们&lt;/a&gt; .&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Thu, 02 Jan 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Parsing 101 with Fluent Bit】使用 Fluent Bit 解析 101</title>
      <link>https://www.cncf.io/blog/2025/01/06/parsing-101-with-fluent-bit/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on &lt;a href=&#34;https://chronosphere.io/learn/parsing-fluent-bit/&#34;&gt;Chronosphere’s blog&lt;/a&gt; by Sharad Regoti&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Introduction&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.fluentbit.io/manual&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Fluent Bit&lt;/a&gt;&amp;nbsp;is a super fast, lightweight, and scalable telemetry data agent and processor for logs, metrics, and traces. With over 15 billion Docker pulls, Fluent Bit has established itself as a preferred choice for log processing, collecting, and shipping.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In this post, we’ll discuss common logging challenges and then explore how Fluent Bit’s parsing capabilities can effectively address them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A Fluent Bit community member has created a video on this topic, If you prefer video format, you can watch it&lt;a href=&#34;https://www.youtube.com/watch?v=PZaL70vaCrg&amp;amp;t=3119s&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&amp;nbsp;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;How Fluent Bit Parsing Provides Clarity&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In software development logs are invaluable. The primary objective of collecting logs is to enable data analysis that drives both technical and business decisions. Logs provide insights into system behavior, user interactions, and potential issues. However, the path from raw log data to actionable insights comes with challenges. Let’s explore these challenges and understand why parsing is a critical step in the logging pipeline.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://chronosphere.io/wp-content/uploads/2024/10/Unstructured-Data-1024x344.png&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://chronosphere.io/wp-content/uploads/2024/10/Unstructured-Data-1024x344.png&#34; alt=&#34;Challenge 1: Unstructured Data&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Challenge 1: Unstructured Data&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Raw log data is often unstructured and difficult for humans and machines to interpret efficiently. Consider this Apache HTTP Server log entry:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;66.249.65.129 -- [12/Sep/2024/:19:10:38 +0600] &#34;GET /news/index.html HTTP/1.1&#34; 200 177 &#34;-&#34; &#34;Mozilla/5.0&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While an engineer might decipher this, it’s not helpful for end-users or automated analysis tools. Ideally, we want to transform this into a structured format like JSON:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#xA;    &#34;ip_address&#34;: &#34;66.249.65.129&#34;,&#xA;    &#34;request_time&#34;: &#34;12/Sep/2024/:19:10:38 +0600&#34;,&#xA;    &#34;http_method&#34;: &#34;GET&#34;,&#xA;    &#34;request_uri&#34;: &#34;/news/index.html&#34;,&#xA;    &#34;http_version&#34;: 1.1,&#xA;    &#34;http_code&#34;: 200,&#xA;    &#34;content_size&#34;: 177,&#xA;    &#34;user_agent&#34;: &#34;Mozilla/5.0&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This structured format makes it easier to search, analyze, and visualize the data.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://chronosphere.io/wp-content/uploads/2024/10/Multiple-Data-Sources-1024x570.png&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://chronosphere.io/wp-content/uploads/2024/10/Multiple-Data-Sources-1024x570.png&#34; alt=&#34;Challenge 2: Multiple Data Sources&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Challenge 2: Multiple Data Sources&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Modern IT environments are complex, with logs coming from various sources, including:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Application logs&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Web server logs (e.g., Apache, Nginx)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;System logs (e.g., syslog)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Operating system logs (Linux, Windows)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Container logs&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Cloud service logs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Each of these sources might log data in different locations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;File systems (e.g.,&amp;nbsp;/var/log*,&amp;nbsp;/dev/kmsg)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Local API services (e.g.,&amp;nbsp;libsystemd, Windows Event Logs API)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Network endpoints (e.g., Syslog receiver TCP/TLS, HTTP receiver)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;582&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1.webp&#34; alt=&#34;Challenge 3: Diverse Log Formats&#34; class=&#34;wp-image-122850&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1.webp 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1-300x171.webp 300w, https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1-768x437.webp 768w, https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1-900x512.webp 900w, https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1-352x200.webp 352w, https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1-704x400.webp 704w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Challenge 3: Diverse Log Formats&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With multiple data sources comes the challenge of dealing with diverse log formats. Some common formats include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Apache Common Log Format&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Nginx access logs&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;JSON logs&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Syslog&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Custom application-specific formats&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To extract value from these logs, we need to standardize and parse it into a consistent format.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://chronosphere.io/wp-content/uploads/2024/10/Volume-and-Cost-1024x477.png&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://chronosphere.io/wp-content/uploads/2024/10/Volume-and-Cost-1024x477.png&#34; alt=&#34;Challenge 4: Volume and Cost&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Challenge 4: Volume and Cost&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Given the sheer volume of log data generated in modern systems, it’s tempting to push everything directly into a centralized database for processing. However, this approach has drawbacks:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Scalability Issues&lt;/strong&gt;: Processing vast amounts of raw log data at the destination can overwhelm your systems.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Cost Concerns&lt;/strong&gt;: Many log management vendors charge based on data ingestion and storage. Sending unprocessed logs can significantly increase costs.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Noise Reduction&lt;/strong&gt;: Not all log data is equally valuable. Processing logs at the source allows you to filter out unnecessary information.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;The Solution: Parsing with Fluent Bit&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is where Fluent Bit’s parsing capabilities come into play. Parsing transforms unstructured log lines into structured data formats like JSON. By implementing parsing as part of your log collection process, you can:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Standardize logs from diverse sources&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Extract only the relevant information&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Reduce data volume and associated costs&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Prepare data for efficient analysis and visualization&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In the following sections, we’ll dive deeper into how Fluent Bit helps you overcome these challenges through its parsing capabilities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Getting Started with the Fluent Bit Parser&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Built In Parsers&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent Bit has&lt;a href=&#34;https://github.com/fluent/fluent-bit/blob/master/conf/parsers.conf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&amp;nbsp;many built-in parsers&lt;/a&gt;&amp;nbsp;for common log formats like Apache, Nginx, Docker and Syslog. These parsers are pre-configured and ready to use, making it easier to get started with log processing. To use a built-in parser:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Configure an input source (e.g. tail plugin to read log files)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Add the parser to your Fluent Bit config&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Apply the parser to your input&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s an example of parsing Apache logs:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;pipeline:&#xA;  inputs:&#xA;    - name: tail&#xA;      path: /input/input.log&#xA;      refresh_interval: 1&#xA;      parser: apache&#xA;      read_from_head: true&#xA;      &#xA;  outputs:&#xA;    - name: stdout&#xA;      match: &#39;*&#39;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This configuration will parse Apache log lines into structured fields. For instance the below Apache logs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;192.168.2.20 - - [29/Jul/2015:10:27:10 -0300] &#34;GET /cgi-bin/try/ HTTP/1.0&#34; 200 3395&#xA;192.168.2.20 - - [29/Jul/2015:10:27:10 -0300] &#34;GET /cgi-bin/try/ HTTP/1.0&#34; 200 3395&#xA;192.168.2.20 - - [29/Jul/2015:10:27:10 -0300] &#34;GET /cgi-bin/try/ HTTP/1.0&#34; 200 3395&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent bit will generate the below output.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[0] tail.0: [[1438176430.000000000, {}], {&#34;host&#34;=&amp;gt;&#34;192.168.2.20&#34;, &#34;user&#34;=&amp;gt;&#34;-&#34;, &#34;method&#34;=&amp;gt;&#34;GET&#34;, &#34;path&#34;=&amp;gt;&#34;/cgi-bin/try/&#34;, &#34;code&#34;=&amp;gt;&#34;200&#34;, &#34;size&#34;=&amp;gt;&#34;3395&#34;}]&#xA;[1] tail.0: [[1438176430.000000000, {}], {&#34;host&#34;=&amp;gt;&#34;192.168.2.20&#34;, &#34;user&#34;=&amp;gt;&#34;-&#34;, &#34;method&#34;=&amp;gt;&#34;GET&#34;, &#34;path&#34;=&amp;gt;&#34;/cgi-bin/try/&#34;, &#34;code&#34;=&amp;gt;&#34;200&#34;, &#34;size&#34;=&amp;gt;&#34;3395&#34;}]&#xA;[2] tail.0: [[1438176430.000000000, {}], {&#34;host&#34;=&amp;gt;&#34;192.168.2.20&#34;, &#34;user&#34;=&amp;gt;&#34;-&#34;, &#34;method&#34;=&amp;gt;&#34;GET&#34;, &#34;path&#34;=&amp;gt;&#34;/cgi-bin/try/&#34;, &#34;code&#34;=&amp;gt;&#34;200&#34;, &#34;size&#34;=&amp;gt;&#34;3395&#34;}]&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To test it out, save the input in a file called&amp;nbsp;input.log&amp;nbsp;and the Fluent Bit configuration in a file called&amp;nbsp;fluent-bit.yaml&amp;nbsp;and run the below docker command&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;docker run \\&#xA;-v $(pwd)/input.log:/input/input.log \\&#xA;-v $(pwd)/fluent-bit.yaml:/fluent-bit/etc/fluent-bit.yaml \\&#xA;-ti cr.fluentbit.io/fluent/fluent-bit:3.1 \\&#xA;/fluent-bit/bin/fluent-bit -c /fluent-bit/etc/fluent-bit.yaml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Fluent Bit Multiline Parser&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Logs that span multiple lines, such as stack traces, are challenging to handle with simple line-based parsers. Fluent Bit’s multiline parsers are designed to address this issue by allowing the grouping of related log lines into a single event. This is particularly useful for handling logs from applications like Java or Python, where errors and stack traces can span several lines.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Built In Multiline Parsers&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent Bit has&lt;a href=&#34;https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/multiline-parsing&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&amp;nbsp;many built-in multiline parsers&lt;/a&gt;&amp;nbsp;for common log formats like Docker, CRI, Go, Python and Java.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Here’s an example of using a built-in multiline parser for Java logs:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;pipeline:&#xA;  inputs:&#xA;    - name: tail&#xA;      path: /input/input.log&#xA;      refresh_interval: 1&#xA;      multiline.parser: java&#xA;      read_from_head: true&#xA;      &#xA;  outputs:&#xA;    - name: stdout&#xA;      match: &#39;*&#39;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This configuration will group related multiline log events together, such as Java exceptions with their stack traces. For example the below Java logs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;single line...&#xA;Dec 14 06:41:08 Exception in thread &#34;main&#34; java.lang.RuntimeException: Something has gone wrong, aborting!&#xA;    at com.myproject.module.MyProject.badMethod(MyProject.java:22)&#xA;    at com.myproject.module.MyProject.oneMoreMethod(MyProject.java:18)&#xA;    at com.myproject.module.MyProject.anotherMethod(MyProject.java:14)&#xA;    at com.myproject.module.MyProject.someMethod(MyProject.java:10)&#xA;    at com.myproject.module.MyProject.main(MyProject.java:6)&#xA;another line...&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent bit will generate the below output.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[0] tail.0: [[1724826442.826437982, {}], {&#34;log&#34;=&amp;gt;&#34;single line...&#xA;&#34;}]&#xA;[1] tail.0: [[1724826442.826444682, {}], {&#34;log&#34;=&amp;gt;&#34;Dec 14 06:41:08 Exception in thread &#34;main&#34; java.lang.RuntimeException: Something has gone wrong, aborting!&#xA;    at com.myproject.module.MyProject.badMethod(MyProject.java:22)&#xA;    at com.myproject.module.MyProject.oneMoreMethod(MyProject.java:18)&#xA;    at com.myproject.module.MyProject.anotherMethod(MyProject.java:14)&#xA;    at com.myproject.module.MyProject.someMethod(MyProject.java:10)&#xA;    at com.myproject.module.MyProject.main(MyProject.java:6)&#xA;&#34;}]&#xA;[2] tail.0: [[1724826442.826444682, {}], {&#34;log&#34;=&amp;gt;&#34;another line...&#xA;&#34;}]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To test it out, save the input in a file called&amp;nbsp;input.log&amp;nbsp;and the fluent configuration in a file called&amp;nbsp;fluent-bit.yaml&amp;nbsp;and run the below docker command&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;docker run \\&#xA;-v $(pwd)/input.log:/input/input.log \\&#xA;-v $(pwd)/fluent-bit.yaml:/fluent-bit/etc/fluent-bit.yaml \\&#xA;-ti cr.fluentbit.io/fluent/fluent-bit:3.1 \\&#xA;/fluent-bit/bin/fluent-bit -c /fluent-bit/etc/fluent-bit.yaml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Custom Fluent Bit Parsers&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Why Custom Parsers are Required&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When working with unique or uncommon log formats, the built-in parsers may not be sufficient. Fluent Bit allows you to define custom parsers using regular expressions (Regex). Custom parsers provide the flexibility to handle any log format that the built-in options may not cover.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Use Case: Handling a Custom Log Format&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Consider the following log entry, which uses semicolons (;) to separate key-value pairs:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;key1=some_text;key2=42;key3=3.14;time=2024-08-28T13:22:04 +0000&#xA;key1=some_text;key2=42;key3=3.14;time=2024-08-28T13:22:04 +0000&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This log line contains several fields, including a text field (key1), an integer field (key2), a float field (key3), and a timestamp (time).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Why Built-In Parsers Won’t Work&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent Bit’s built-in parsers, such as JSON or Logfmt, are not suitable for this log format because:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;The log uses semicolons (;) as delimiters instead of commas or spaces.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;It contains a combination of data types (strings, integers, floats, and timestamps).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;None of the default parsers expect the&amp;nbsp;key=value;key=value&amp;nbsp;format structure.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is where custom parsers come in, allowing us to define how Fluent Bit should interpret this log format.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Step 1: Create the Custom Parser Configuration&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To handle the custom log format, we will define a parser using a regular expression in a&amp;nbsp;parsers.conf&amp;nbsp;file.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[PARSER]&#xA;    Name        custom_kv_parser&#xA;    Format      regex&#xA;    Regex       ^key1=(?&amp;lt;key1&amp;gt;[^\\\\;]+);key2=(?&amp;lt;key2&amp;gt;[^\\\\;]+);key3=(?&amp;lt;key3&amp;gt;[^\\\\;]+);time=(?&amp;lt;time&amp;gt;[^;]+)$&#xA;    Time_Key    time&#xA;    Time_Format %Y-%m-%dT%H:%M:%S %z&#xA;    Types       key1:string key2:integer key3:float&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;: We name the parser&amp;nbsp;custom_kv_parser&amp;nbsp;for identification.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Format&lt;/strong&gt;: Since the log format is non-standard, we use&amp;nbsp;regex&amp;nbsp;to create a custom parser.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Regex&lt;/strong&gt;: The regular expression&amp;nbsp;^key1=(?&lt;key1&gt;[^\\\\;]+);key2=(?&lt;key2&gt;[^\\\\;]+);key3=(?&lt;key3&gt;[^\\\\;]+);time=(?&lt;time&gt;[^;]+)$&amp;nbsp;matches the custom log line and captures the relevant fields.&lt;/time&gt;&lt;/key3&gt;&lt;/key2&gt;&lt;/key1&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;The expression uses named capture groups (e.g.,&amp;nbsp;(?&amp;lt;key1&amp;gt;…)) to assign values to specific fields.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Time_Key&lt;/strong&gt;&amp;nbsp;and&amp;nbsp;&lt;strong&gt;Time_Format&lt;/strong&gt;: Specifies the key and format of the timestamp to ensure correct time handling.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Types&lt;/strong&gt;: Assigns data types to the extracted fields to ensure they are processed correctly (e.g.,&amp;nbsp;key2&amp;nbsp;as an integer and&amp;nbsp;key3&amp;nbsp;as a float).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Step 2: Configure Fluent Bit to Use the Custom Parser&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now, we configure Fluent Bit to use this custom parser to process logs. In the main Fluent Bit configuration file (fluent-bit.yaml), we specify the input source and link it to our custom parser.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;pipeline:&#xA;  inputs:&#xA;    - name: tail&#xA;      path: /input/input.log&#xA;      refresh_interval: 1&#xA;      parser: custom_kv_parser&#xA;      read_from_head: true&#xA;      &#xA;  outputs:&#xA;    - name: stdout&#xA;      match: &#39;*&#39;&#xA;&#xA;service:  &#xA;  parsers_file: /custom/parser.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;INPUT&lt;/strong&gt;: Specifies the&amp;nbsp;tail&amp;nbsp;input plugin to read log files from&amp;nbsp;/var/log/custom_logs.log.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Parser&lt;/strong&gt;: Links the&amp;nbsp;custom_kv_parser&amp;nbsp;to the log source to parse the logs.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;OUTPUT&lt;/strong&gt;: Directs the parsed log entries to the standard output in JSON format.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Step 3: Running Fluent Bit&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once the configuration files are ready (fluent-bit.conf&amp;nbsp;and&amp;nbsp;parsers.conf), you can run Fluent Bit to start processing the logs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;docker run \\&#xA;-v $(pwd)/custom_parsers.conf:/custom/parser.conf \\&#xA;-v $(pwd)/input.log:/input/input.log \\&#xA;-v $(pwd)/fluent-bit.yaml:/fluent-bit/etc/fluent-bit.yaml \\&#xA;-ti cr.fluentbit.io/fluent/fluent-bit:3.1 \\&#xA;/fluent-bit/bin/fluent-bit -c /fluent-bit/etc/fluent-bit.yaml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Step 4: Check the Output&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent Bit will process the logs according to the custom parser and output structured JSON data. Here’s the expected result:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Output&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[0] tail.0: [[1724851324.000000000, {}], {&#34;key1&#34;=&amp;gt;&#34;some_text&#34;, &#34;key2&#34;=&amp;gt;42, &#34;key3&#34;=&amp;gt;3.140000}]&#xA;[1] tail.0: [[1724851324.000000000, {}], {&#34;key1&#34;=&amp;gt;&#34;some_text&#34;, &#34;key2&#34;=&amp;gt;42, &#34;key3&#34;=&amp;gt;3.140000}]&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The output shows that Fluent Bit successfully parsed the log line and structured it into a JSON object with the correct field types. This custom parser approach ensures that even non-standard log formats can be processed and forwarded.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Understanding Different Parser Formats&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Logs are simple strings, with their structure defined by the format used. Fluent Bit supports four formats for parsing logs. When configuring a custom parser, you must choose one of these formats:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.fluentbit.io/manual/pipeline/parsers/json&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/a&gt;: Ideal for logs formatted as JSON strings. Use this format if your application outputs logs in JSON.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[PARSER]&#xA;    Name        docker&#xA;    Format      json&#xA;    Time_Key    time&#xA;    Time_Format %Y-%m-%dT%H:%M:%S %z&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Sample Log Entry:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#34;key1&#34;: 12345, &#34;key2&#34;: &#34;abc&#34;, &#34;time&#34;: &#34;2006-07-28T13:22:04Z&#34;}&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Internal Representation After Processing:&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[1154103724, {&#34;key1&#34;=&amp;gt;12345, &#34;key2&#34;=&amp;gt;&#34;abc&#34;}]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.fluentbit.io/manual/pipeline/parsers/regular-expression&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;Regex&lt;/strong&gt;&lt;/a&gt;: Uses regular expressions for pattern matching and extracting complex log data. This format provides flexibility to interpret and transform log strings according to custom patterns. This format is used by most of our in-built and custom parsers.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.fluentbit.io/manual/pipeline/parsers/logfmt&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;Logfmt&lt;/strong&gt;&lt;/a&gt;: This format represents logs as key-value pairs, making it a simple and efficient choice for structured logging.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[PARSER]&#xA;    Name        logfmt&#xA;    Format      logfmt&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Sample Log Entry:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;key1=val1 key2=val2 key3&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Internal Representation After Processing:&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[1540936693, {&#34;key1&#34;=&amp;gt;&#34;val1&#34;, &#34;key2&#34;=&amp;gt;&#34;val2&#34;, &#34;key3&#34;=&amp;gt;true}]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.fluentbit.io/manual/pipeline/parsers/ltsv&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;LTSV (Labeled Tab-Separated Values)&lt;/strong&gt;&lt;/a&gt;: Similar to&amp;nbsp;Logfmt&amp;nbsp;but uses tab characters to separate fields. This format is particularly useful for logs with many fields.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Configuration Example for Apache Access Logs:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[PARSER]&#xA;    Name        access_log_ltsv&#xA;    Format      ltsv&#xA;    Time_Key    time&#xA;    Time_Format [%d/%b/%Y:%H:%M:%S %z]&#xA;    Types       status:integer size:integer&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Sample Log Entry:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;host:127.0.0.1  ident:- user:-  time:[10/Jul/2018:13:27:05 +0200] req:GET / HTTP/1.1 status:200 size:16218 referer:&amp;lt;http://127.0.0.1/&amp;gt; ua:Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Internal Representation After Processing:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[1531222025.000000000, {&#34;host&#34;=&amp;gt;&#34;127.0.0.1&#34;, &#34;ident&#34;=&amp;gt;&#34;-&#34;, &#34;user&#34;=&amp;gt;&#34;-&#34;, &#34;req&#34;=&amp;gt;&#34;GET / HTTP/1.1&#34;, &#34;status&#34;=&amp;gt;200, &#34;size&#34;=&amp;gt;16218, &#34;referer&#34;=&amp;gt;&#34;&amp;lt;http://127.0.0.1/&amp;gt;&#34;, &#34;ua&#34;=&amp;gt;&#34;Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0&#34;}]&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Fluent Bit Parsing &amp;amp; Filtering&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;What Comes First: Filtering or Parsing?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In Fluent Bit, parsing typically occurs before filtering. This is because filters often rely on the structured data produced by the parser to make decisions about what to include, modify, or exclude from the log stream.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;After parsing, filters can be applied to refine the logs further:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Remove unnecessary fields&lt;/strong&gt;: Drop fields that are not needed for further analysis.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Drop certain log levels&lt;/strong&gt;: Focus on logs of specific severity levels, such as ERROR or WARN.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Enrich logs with additional metadata&lt;/strong&gt;: Add context to logs by including fields like environment, hostname, or region.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For example, you can use a&amp;nbsp;grep&amp;nbsp;filter to keep only logs with specific log levels and a&amp;nbsp;record_modifier&amp;nbsp;filter to add an “env” field:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;filters:&#xA;  - name: grep&#xA;    match: &#39;*&#39;&#xA;    regex:&#xA;      level: ^(ERROR|WARN|INFO)$&#xA;&#xA;  - name: record_modifier&#xA;    match: &#39;*&#39;&#xA;    records:&#xA;      - env: production&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This refines the logs to include only the specified levels and adds a contextual “env” field, making the logs more useful for downstream analysis.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Best Practices&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Start by examining your raw log data&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use built-in parsers when possible&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Test custom regex patterns thoroughly&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use tools like (&lt;a href=&#34;http://rubular.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;rubular.com&lt;/a&gt;&amp;nbsp;/ AI) wherever required&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Apply filters to reduce noise and enrich data&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With Fluent Bit’s parsing capabilities, you can transform logs into actionable insights to drive your technical and business decisions. By leveraging its built-in and customizable parsers, you can standardize diverse log formats, reduce data volume, and optimize your observability pipeline. Implementing these strategies will help you overcome common logging challenges and enable more effective monitoring and analysis.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初由 Sharad Regoti 发布于&lt;a href=&#34;https://chronosphere.io/learn/parsing-fluence-bit/&#34;&gt;Chronosphere 的博客&lt;/a&gt;&lt;/em&gt;&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;简介&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.fluentbit.io/manual&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Fluent Bit&lt;/a&gt; 是一款超快速、轻量级且可扩展的遥测数据代理以及日志、指标和跟踪的处理器。 Fluent Bit 拥有超过 150 亿次 Docker 拉取，已成为日志处理、收集和传输的首选。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在这篇文章中，我们将讨论常见的日志记录挑战，然后探讨 Fluent Bit 的解析功能如何有效解决这些挑战。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent Bit 社区成员就此主题制作了一个视频，如果您喜欢视频格式，可以观看&lt;a href=&#34;https://www.youtube.com/watch?v=PZaL70vaCrg&amp;t=3119s&#34; target =&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt; 此处&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;流畅的位解析如何提供清晰度&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在软件开发中，日志是无价的。收集日志的主要目的是进行数据分析，以推动技术和业务决策。日志提供对系统行为、用户交互和潜在问题的洞察。然而，从原始日志数据到可操作的见解的路径充满了挑战。让我们探讨这些挑战并了解为什么解析是日志记录管道中的关键步骤。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://chronosphere.io/wp-content/uploads/2024/10/Unstructed-Data-1024x344.png&#34;&gt;&lt;img解码=&#34;async “ src =“https://chronosphere.io/wp-content/uploads/2024/10/Unstructed-Data-1024x344.png” alt=&#34;挑战 1：非结构化数据&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;挑战 1：非结构化数据&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;原始日志数据通常是非结构化的，人类和机器很难有效地解释。考虑以下 Apache HTTP Server 日志条目：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;66.249.65.129 -- [12/Sep/2024/:19:10:38 +0600] &#34;GET /news/index.html HTTP/ 1.1&#34; 200 177 &#34;-&#34; &#34;Mozilla/5.0&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然工程师可能会破译这一点，但这对最终用户或自动分析工具没有帮助。理想情况下，我们希望将其转换为 JSON 等结构化格式：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#xA;    &#34;ip_address&#34;: &#34;66.249.65.129&#34;,&#xA;    &#34;request_time&#34;: &#34;2024 年 9 月 12 日/:19:10:38 +0600&#34;,&#xA;    &#34;http_method&#34;: &#34;获取&#34;,&#xA;    &#34;request_uri&#34;: &#34;/news/index.html&#34;,&#xA;    “http_版本”：1.1，&#xA;    “http_code”：200，&#xA;    “内容大小”：177，&#xA;    &#34;user_agent&#34;: &#34;Mozilla/5.0&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种结构化格式使搜索、分析和可视化数据变得更加容易。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://chronosphere.io/wp-content/uploads/2024/10/Multiple-Data-Sources-1024x570.png&#34;&gt;&lt;img 解码= “异步”src =“https://chronosphere.io/wp-content/uploads/2024/10/Multiple-Data-Sources-1024x570.png&#34; alt=&#34;挑战 2：多个数据源&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;挑战 2：多个数据源&lt;/图标题&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现代 IT 环境非常复杂，日志来自各种来源，包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;应用程序日志&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;网络服务器日志（例如 Apache、Nginx）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;系统日志（例如 syslog）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;操作系统日志（Linux、Windows）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;容器日志&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;云服务日志&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些来源中的每一个都可能在不同位置记录数据：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;文件系统（例如 /var/log*、/dev/kmsg）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;本地 API 服务（例如 libsystemd、Windows 事件日志 API）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;网络端点（例如 Syslog 接收器 TCP/TLS、HTTP 接收器）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1024”高度=“582”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1.webp&#34; alt=&#34;挑战 3：多样化的日志格式&#34;类=“wp-image-122850”srcset=“https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1.webp 1024w， https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1-300x171.webp 300w，https://www.cncf.io/wp-content/uploads /2024/12/多样化日志格式-1024x582-1-768x437.webp 768w，https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1-900x512.webp 900w， https://www.cncf.io/wp-content/uploads/2024/12/Diverse-Log-Formats-1024x582-1-352x200.webp 352w，https://www.cncf.io/wp-content/uploads /2024/12/多样化日志格式-1024x582-1-704x400.webp 704w&#34;sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;挑战 3：多样化的日志格式&lt;/figcaption&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;多个数据源带来了处理不同日志格式的挑战。一些常见的格式包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Apache 通用日志格式&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Nginx 访问日志&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;JSON 日志&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;系统日志&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;自定义特定于应用的格式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了从这些日志中提取价值，我们需要将其标准化并解析为一致的格式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;a href=&#34;https://chronosphere.io/wp-content/uploads/2024/10/Volume-and-Cost-1024x477.png&#34;&gt;&lt;img 解码= “异步”src =“https://chronosphere.io/wp-content/uploads/2024/10/Volume-and-Cost-1024x477.png” alt=&#34;挑战 4：数量和成本&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;挑战 4：数量和成本&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;考虑到现代系统中生成的日志数据量巨大，人们很容易将所有内容直接推送到集中式数据库中进行处理。然而，这种方法有缺点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;&lt;strong&gt;可扩展性问题&lt;/strong&gt;：处理大量数据目的地的原始日志数据可能会让您的系统不堪重负。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;成本问题&lt;/strong&gt;：许多日志管理供应商根据数据提取和存储收费。发送未处理的日志会显着增加成本。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;降噪&lt;/strong&gt;：并非所有日志数据都同样有价值。从源头处理日志可以过滤掉不必要的信息。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;解决方案：使用 Fluent Bit 进行解析&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这就是 Fluent Bit 的解析功能发挥作用的地方。解析将非结构化日志行转换为结构化数据格式，例如 JSON。通过将解析作为日志收集过程的一部分实施，您可以：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;标准化不同来源的日志&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;仅提取相关信息&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;减少数据量和相关成本&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;准备数据以进行高效分析和可视化&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在以下部分中，我们将深入探讨 Fluent Bit 如何通过其解析功能帮助您克服这些挑战。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Fluent 位解析器入门&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;内置解析器&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent Bit 具有&lt;a href=&#34;https://github.com/fluent/ Fluent-bit/blob/master/conf/parsers.conf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt; 许多内置 -在解析器中用于常见日志格式，例如 Apache、Nginx、Docker 和 Syslog。这些解析器已预先配置并可供使用，从而可以更轻松地开始日志处理。要使用内置解析器：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol类=“wp-block-list”&gt;&#xA;&lt;li&gt;配置输入源（例如用于读取日志文件的 tail 插件）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将解析器添加到您的 Fluent Bit 配置中&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;将解析器应用于您的输入&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下面是解析 Apache 日志的示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;管道：&#xA;  输入：&#xA;    - 名称：尾巴&#xA;      路径：/input/input.log&#xA;      刷新间隔：1&#xA;      解析器：阿帕奇&#xA;      从头读取：true&#xA;      &#xA;  输出：&#xA;    - 名称：标准输出&#xA;      匹配：&#39;*&#39;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此配置会将 Apache 日志行解析为结构化字段。例如下面的 Apache 日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;192.168.2.20 - - [29/Jul/2015:10:27:10 -0300] &#34;GET /cgi-bin/try/ HTTP/ 1.0&#34; 200 3395&#xA;192.168.2.20 - - [29/7/2015:10:27:10 -0300]“获取/cgi-bin/try/HTTP/1.0”200 3395&#xA;192.168.2.20 - - [29/Jul/2015:10:27:10 -0300]“GET /cgi-bin/try/HTTP/1.0”200 3395&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent bit 将生成以下输出。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[0] tail.0: [[1438176430.000000000, {}], {&#34;host&#34;=&gt;&#34;192.168.2.20&#34;, &#34;user&#34;= &gt;“-”，“方法”=&gt;“GET”，“路径”=&gt;“/cgi-bin/try/”，“代码”=&gt;“200”， “大小”=&gt;“3395”}]&#xA;[1] tail.0: [[1438176430.000000000, {}], {&#34;主机&#34;=&gt;&#34;192.168.2.20&#34;,&#34;用户&#34;=&gt;&#34;-&#34;,&#34;方法&#34;=&gt;&#34;GET&#34;,&#34;路径&#34;=&gt; “/cgi-bin/try/”，“代码”=&gt;“200”，“大小”=&gt;“3395”}][2] tail.0: [[1438176430.000000000, {}], {&#34;主机&#34;=&gt;&#34;192.168.2.20&#34;,&#34;用户&#34;=&gt;&#34;-&#34;,&#34;方法&#34;=&gt;&#34;GET&#34;,&#34;路径&#34;=&gt; “/cgi-bin/try/”，“代码”=&gt;“200”， “大小”=&gt;“3395”}]&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要对其进行测试，请将输入保存在名为 input.log 的文件中，并将 Fluent Bit 配置保存在名为 Fluent-bit.yaml 的文件中，然后运行以下 docker 命令&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;docker 运行 \\&#xA;-v $(pwd)/input.log:/input/input.log \\&#xA;-v $(pwd)/ Fluent-bit.yaml:/ Fluent-bit/etc/ Fluent-bit.yaml \\&#xA;-ti cr. Fluentbit.io/ Fluent/Fluent-bit:3.1 \\&#xA;/ Fluent-bit/bin/ Fluent-bit -c / Fluent-bit/etc/ Fluent-bit.yaml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Fluent 位多行解析器&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;跨多行的日志（例如堆栈跟踪）很难使用简单的基于行的解析器来处理。 Fluent Bit 的多行解析器旨在通过允许将相关日志行分组到单个事件中来解决此问题。这对于处理来自 Java 或 Python 等应用程序的日志特别有用，其中错误和堆栈跟踪可能跨越多行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;内置多行解析器&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent Bit 具有&lt;a href=&#34;https://docs.fluentbit.io/manual/administration/configuring-fluence-bit/multiline-parsing&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt; 许多内置功能在多行解析器中&lt;/a&gt;，适用于 Docker、CRI、Go、Python 和 Java 等常见日志格式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下是使用内置多行解析器处理 Java 日志的示例：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;管道：&#xA;  输入：&#xA;    - 名称：尾巴&#xA;      路径：/input/input.log&#xA;      刷新间隔：1&#xA;      多行解析器：java&#xA;      从头读取：true&#xA;      &#xA;  输出：&#xA;    - 名称：标准输出&#xA;      匹配：&#39;*&#39;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;此配置会将相关的多行日志事件分组在一起，例如 Java 异常及其堆栈跟踪。例如下面的 Java 日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;单行...&#xA;12 月 14 日 06:41:08 线程“main”中出现异常 java.lang.RuntimeException：出现问题，正在中止！&#xA;    在 com.myproject.module.MyProject.badMethod(MyProject.java:22)&#xA;    在 com.myproject.module.MyProject.oneMoreMethod(MyProject.java:18)&#xA;    在 com.myproject.module.MyProject.anotherMethod(MyProject.java:14)&#xA;    在 com.myproject.module.MyProject.someMethod(MyProject.java:10)&#xA;    在 com.myproject.module.MyProject.main(MyProject.java:6)&#xA;另一行...&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent bit 将生成以下输出。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[0] tail.0: [[1724826442.826437982, {}], {&#34;log&#34;=&gt;&#34;单行...&#xA;“}]&#xA;[1] tail.0: [[1724826442.826444682, {}], {&#34;log&#34;=&gt;&#34;Dec 14 06:41:08 线程“main”中出现异常 java.lang.RuntimeException: 出了问题，正在中止！&#xA;    在 com.myproject.module.MyProject.badMethod(MyProject.java:22)&#xA;    在 com.myproject.module.MyProject.oneMoreMethod(MyProject.java:18)&#xA;    在 com.myproject.module.MyProject.anotherM方法(MyProject.java:14)&#xA;    在 com.myproject.module.MyProject.someMethod(MyProject.java:10)&#xA;    在 com.myproject.module.MyProject.main(MyProject.java:6)&#xA;“}]&#xA;[2] tail.0: [[1724826442.826444682, {}], {&#34;log&#34;=&gt;&#34;另一行...&#xA;“}]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要对其进行测试，请将输入保存在名为 input.log 的文件中，并将 flutter 配置保存在名为 Fluent-bit.yaml 的文件中，然后运行以下 docker 命令&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;docker 运行 \\&#xA;-v $(pwd)/input.log:/input/input.log \\&#xA;-v $(pwd)/ Fluent-bit.yaml:/ Fluent-bit/etc/ Fluent-bit.yaml \\&#xA;-ti cr. Fluentbit.io/ Fluent/Fluent-bit:3.1 \\&#xA;/ Fluent-bit/bin/ Fluent-bit -c / Fluent-bit/etc/ Fluent-bit.yaml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;自定义 Fluent 位解析器&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;为什么需要自定义解析器&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当使用独特或不常见的日志格式时，内置解析器可能不够。 Fluent Bit 允许您使用正则表达式 (Regex) 定义自定义解析器。自定义解析器可以灵活地处理内置选项可能无法覆盖的任何日志格式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;用例：处理自定义日志格式&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;考虑以下日志条目，它使用分号 (;) 分隔键值对：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;key1=some_text;key2=42;key3=3.14;time=2024-08-28T13:22:04 +0000&#xA;key1=some_text;key2=42;key3=3.14;时间=2024-08-28T13:22:04 +0000&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;该日志行包含多个字段，包括文本字段（key1）、整数字段（key2）、浮点字段（key3）和时间戳（时间）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;为什么内置解析器不起作用&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent Bit 的内置解析器，例如 JSON 或 Logfmt，不适合这种日志格式，因为：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;日志使用分号 (;) 作为分隔符，而不是逗号或空格。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;它包含数据类型的组合（字符串、整数、浮点数和时间戳）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;默认解析器都不需要 key=value;key=value 格式结构。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这就是自定义解析器的用武之地，它允许我们定义 Fluent Bit 应如何解释此日志格式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;第 1 步：创建自定义解析器配置&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;为了处理自定义日志格式，我们将使用 parsers.conf 文件中的正则表达式定义解析器。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[解析器]&#xA;    名称 custom_kv_parser&#xA;    格式化正则表达式&#xA;    正则表达式 ^key1=(?&lt;key1&gt;[^\\\\;]+);key2=(?&lt;key2&gt;[^\\\\;]+);key3=(?&lt;key3&gt;[^\\\\ \;]+);时间=(?&lt;时间&gt;[^;]+)$&#xA;    时间_关键时间&#xA;    时间_格式 %Y-%m-%dT%H:%M:%S %z&#xA;    类型 key1:string key2:integer key3:float&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;名称&lt;/strong&gt;：我们将解析器命名为“custom_kv_parser”以供识别。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;格式&lt;/strong&gt;：罪恶由于日志格式不标准，我们使用正则表达式创建自定义解析器。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;正则表达式&lt;/strong&gt;：正则表达式 ^key1=(?&lt;key1&gt;[^\\\\;]+);key2=(?&lt;key2&gt;[^\\\\;]+ );key3=(?&lt;key3&gt;[^\\\\;]+);time=(?&lt;time&gt;[^;]+)$ 匹配自定义日志行并捕获相关字段。&lt;/time&gt;&lt; /key3&gt;&lt;/key2&gt;&lt;/key1&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;表达式使用命名捕获组（例如，(?&lt;key1&gt;…)）为特定字段分配值。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Time_Key&lt;/strong&gt; 和 &lt;strong&gt;Time_Format&lt;/strong&gt;：指定时间戳的键和格式，以确保正确的时间处理。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;类型&lt;/strong&gt;：为提取的字段分配数据类型，以确保它们得到正确处理（例如，key2 作为整数，key3 作为浮点数）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;第 2 步：配置 Fluent Bit 以使用自定义解析器&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在，我们配置 Fluent Bit 以使用此自定义解析器来处理日志。在主 Fluent Bit 配置文件 (fluent-bit.yaml) 中，我们指定输入源并将其链接到我们的自定义解析器。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;管道：&#xA;  输入：&#xA;    - 名称：尾巴&#xA;      路径：/input/input.log&#xA;      刷新间隔：1&#xA;      解析器：custom_kv_parser&#xA;      从头读取：true&#xA;      &#xA;  输出：&#xA;    - 名称：标准输出&#xA;      匹配： &#39;*&#39;&#xA;&#xA;服务：  &#xA;  parsers_file：/custom/parser.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;INPUT&lt;/strong&gt;：指定 tail 输入插件从 /var/log/custom_logs.log 读取日志文件。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;解析器&lt;/strong&gt;：将 custom_kv_parser 链接到日志源以解析日志。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;OUTPUT&lt;/strong&gt;：将解析后的日志条目以 JSON 格式定向到标准输出。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;第 3 步：运行 Fluent Bit&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;配置文件准备就绪（fluent-bit.conf 和 parsers.conf）后，您可以运行 Fluent Bit 来开始处理日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;docker 运行 \\&#xA;-v $(pwd)/custom_parsers.conf:/custom/parser.conf \\&#xA;-v $(pwd)/input.log:/input/input.log \\&#xA;-v $(pwd)/ Fluent-bit.yaml:/ Fluent-bit/etc/ Fluent-bit.yaml \\&#xA;-ti cr. Fluentbit.io/ Fluent/Fluent-bit:3.1 \\&#xA;/ Fluent-bit/bin/ Fluent-bit -c / Fluent-bit/etc/ Fluent-bit.yaml&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;第 4 步：检查输出&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Fluent Bit 将根据自定义解析器处理日志并输出结构化 JSON 数据。这是预期的结果：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;输出&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[0] tail.0: [[1724851324.000000000, {}], {&#34;key1&#34;=&gt;&#34;some_text&#34;, &#34;key2&#34;=&gt;42 , &#34;key3&#34;=&gt;3.140000}]&#xA;[1] tail.0: [[1724851324.000000000, {}], {&#34;key1&#34;=&gt;&#34;some_text&#34;, &#34;key2&#34;=&gt;42, &#34;key3&#34;=&gt;3.140000}]&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;输出显示 Fluent Bit 成功解析了日志行并将其结构化为 JSON 对象 wi正确的字段类型。这种自定义解析器方法确保甚至可以处理和转发非标准日志格式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;了解不同的解析器格式&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;日志是简单的字符串，其结构由所使用的格式定义。 Fluent Bit 支持四种解析日志格式。配置自定义解析器时，您必须选择以下格式之一：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs. Fluentbit.io/manual/pipeline/parsers/json&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/a&gt; ：非常适合格式化为 JSON 字符串的日志。如果您的应用程序以 JSON 格式输出日志，请使用此格式。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;配置示例：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[解析器]&#xA;    命名泊坞窗&#xA;    格式化json&#xA;    时间_关键时间&#xA;    Time_Format %Y-%m-%dT%H:%M:%S %z&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;示例日志条目：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;{&#34;key1&#34;: 12345, &#34;key2&#34;: &#34;abc&#34;, &#34;time&#34;: &#34;2006-07-28T13:22:04Z&#34;} &lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;处理后的内部表示：&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[1154103724，{“key1”=&gt;12345，“key2”=&gt;“abc”}]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs. Fluentbit.io/manual/pipeline/parsers/regular-expression&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;正则表达式&lt;/strong&gt;&lt;/ a&gt;：使用正则表达式进行模式匹配并提取复杂的日志数据。这种格式提供了根据自定义模式解释和转换日志字符串的灵活性。我们的大多数内置和自定义解析器都使用这种格式。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs. Fluentbit.io/manual/pipeline/parsers/logfmt&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;Logfmt&lt;/strong&gt;&lt;/a&gt; ：此格式将日志表示为键值对，使其成为结构化日志记录的简单而高效的选择。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;配置示例：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[解析器]&#xA;    名称 logfmt&#xA;    格式 logfmt&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;示例日志条目：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;key1=val1 key2=val2 key3&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;处理后的内部表示：&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[1540936693, {&#34;key1&#34;=&gt;&#34;val1&#34;, &#34;key2&#34;=&gt;&#34;val2&#34;, &#34;key3&#34;=&gt;true}]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs. Fluentbit.io/manual/pipeline/parsers/ltsv&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;LTSV（带标签的制表符分隔值）&lt; /strong&gt;&lt;/a&gt;：与 Logfmt 类似，但使用制表符分隔字段。此格式对于包含多个字段的日志特别有用。&lt;br&gt;&lt;br&gt;&lt;strong&gt;Apache 访问日志的配置示例：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[解析器]&#xA;    名称 access_log_ltsv&#xA;    格式 ltsv&#xA;    时间_关键时间Time_Format [%d/%b/%Y:%H:%M:%S %z]&#xA;    类型状态：整数大小：整数&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;示例日志条目：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;主机：127.0.0.1 身份：- 用户：- 时间：[10/Jul/2018:13:27:05 +0200] 请求：GET / HTTP/1.1 状态:200 大小:16218 引用:&lt;http://127.0.0.1/&gt; ua:Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;处理后的内部表示：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;[1531222025.000000000, {&#34;host&#34;=&gt;&#34;127.0.0.1&#34;, &#34;ident&#34;=&gt;&#34;-&#34;, &#34;user&#34;=&gt;&#34;- ”，“请求”=&gt;“GET / HTTP/1.1”，“状态”=&gt;200，“大小”=&gt;16218， &#34;referer&#34;=&gt;&#34;&lt;http://127.0.0.1/&gt;&#34;, &#34;ua&#34;=&gt;&#34;Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0&#34;}]&lt;/代码&gt;&lt;/前&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;流畅的位解析和过滤&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;先做什么：过滤还是解析？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;在 Fluent Bit 中，解析通常发生在过滤之前。这是因为过滤器通常依赖于解析器生成的结构化数据来决定从日志流中包含、修改或排除哪些内容。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;解析后，可以应用过滤器进一步细化日志：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;删除不必要的字段&lt;/strong&gt;：删除进一步分析不需要的字段。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;删除某些日志级别&lt;/strong&gt;：重点关注特定严重级别的日志，例如 ERROR 或 WARN。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;使用其他元数据丰富日志&lt;/strong&gt;：通过包含环境、主机名或区域等字段向日志添加上下文。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;例如，您可以使用 grep 过滤器仅保留具有特定日志级别的日志，并使用 record_modifier 过滤器添加“env”字段：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;过滤器：&#xA;  - 名称：grep&#xA;    匹配： &#39;*&#39;&#xA;    正则表达式：&#xA;      级别：^(错误|警告|信息)$&#xA;&#xA;  - 名称：记录修饰符&#xA;    匹配： &#39;*&#39;&#xA;    记录：&#xA;      - 环境：生产&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这会优化日志以仅包含指定的级别，并添加上下文“env”字段，使日志对于下游分析更有用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;最佳实践&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;首先检查您的原始日志数据&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;尽可能使用内置解析器&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;彻底测试自定义正则表达式模式&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;根据需要使用 (&lt;a href=&#34;http://rubular.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;rubular.com&lt;/a&gt; / AI) 等工具&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;应用过滤器来减少噪音并丰富数据&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;借助 Fluent Bit 的解析功能，您可以将日志转换为可操作的见解，以推动您的技术和业务决策。通过利用其内置和可定制的解析器，您可以标准化不同的日志格式，减少数据量并优化可观察性管道。实施g 这些策略将帮助您克服常见的日志记录挑战并实现更有效的监控和分析。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 05 Jan 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Solving Android app issues with OpenTelemetry: Beyond local profiling】使用 OpenTelemetry 解决 Android 应用程序问题：超越本地分析</title>
      <link>https://www.cncf.io/blog/2024/12/30/solving-android-app-issues-with-opentelemetry-beyond-local-profiling/</link>
      <description>【&lt;p&gt;&lt;em&gt;Member post originally published on the &lt;a href=&#34;https://embrace.io/blog/solving-android-app-issues-with-opentelemetry/&#34;&gt;Embrace blog&lt;/a&gt; by Francisco Prieto Cardelle&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;em&gt;OpenTelemetry is a powerful observability framework that can help engineers monitor and resolve common Android performance issues. We’ll dive into a few of these issues, with instrumentation samples, below.&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As an Android developer, my first instinct for solving a bug, measuring performance, or improving the overall experience of an app is to test it and profile it locally. Tools like the Android Studio Profiler provide powerful capabilities to detect and address all kinds of performance issues, such as UI thread blocking, memory leaks, or excessive CPU usage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While these local tools are indispensable, they do have limitations. Certain problems don’t show up in controlled environments, with consistent network connectivity, predictable user behavior, and a limited range of testing devices. In the real world, users interact with apps in unexpected ways, with diverse hardware, and varying conditions, exposing issues that are difficult to replicate locally.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is where OpenTelemetry comes in.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1200&#34; height=&#34;628&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1.png&#34; alt=&#34;image with OTel and Android logos&#34; class=&#34;wp-image-122772&#34; title=&#34;Android_OTel_blogImage (1)&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1.png 1200w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-300x157.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-1024x536.png 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-768x402.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-194x102.png 194w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-388x204.png 388w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-900x471.png 900w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-382x200.png 382w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-764x400.png 764w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-590x310.png 590w&#34; sizes=&#34;auto, (max-width: 1200px) 100vw, 1200px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry is a framework for collecting, processing, and exporting data about application performance. While relatively new to mobile, it’s become a fast-growing standard for backend performance management.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The benefits to using this framework for mobile are significant. OpenTelemetry enables developers to collect observability data from production environments, providing a window into the app’s real-world behavior.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Local profiling and production observability&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Local Profiling has its uses&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Local profiling is invaluable for identifying issues that are reproducible in a controlled environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;2048&#34; height=&#34;602&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1.webp&#34; alt=&#34;image of dashboard&#34; class=&#34;wp-image-122773&#34; title=&#34;Android blog image 1&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1.webp 2048w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-300x88.webp 300w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-1024x301.webp 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-768x226.webp 768w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-900x265.webp 900w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-1800x529.webp 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-600x176.webp 600w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-1200x353.webp 1200w&#34; sizes=&#34;auto, (max-width: 2048px) 100vw, 2048px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are many common issues that can be detected and solved locally:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Main thread blockage:&lt;/strong&gt;&amp;nbsp;tasks that block the main thread can cause app freezes or ANRs, as that thread is responsible for handling user interactions and rendering the UI.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Memory leaks:&lt;/strong&gt;&amp;nbsp;memory leaks happen when objects that are no longer needed are not released correctly. This leads to excessive memory usage, which could cause Out Of Memory (OOM) errors.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Capacity-related jank:&lt;/strong&gt;&amp;nbsp;when some resources like the CPU or the GPU become overburdened, the UI might not be rendered correctly within a given timeslice.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;These issues are quite straightforward to reproduce during testing, and local profiling tools are great for detecting and fixing them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;When production observability is needed&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;While local profiling covers a wide array of issues, not all problems are evident in a local setup. Observability in production is essential for diagnosing:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Unexpected user behavior:&lt;/strong&gt;&amp;nbsp;Users may upload massive files, perform rapid actions, or navigate the app in unplanned ways, exposing edge cases.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Device-specific crashes:&lt;/strong&gt;&amp;nbsp;Android’s diversity means issues can arise on specific devices or OS versions, often undetectable during local testing.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Low network connectivity:&lt;/strong&gt;&amp;nbsp;Real-world users often face slow or unreliable internet, causing timeouts or prolonged loading, which can be hard to emulate.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Production-ready observability tools like OpenTelemetry are essential for uncovering and resolving these challenges.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;OpenTelemetry in Android&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt;&amp;nbsp;is a powerful observability framework that helps developers collect, process, and export telemetry data like&amp;nbsp;&lt;strong&gt;traces&lt;/strong&gt;,&amp;nbsp;&lt;strong&gt;metrics&lt;/strong&gt;, and&amp;nbsp;&lt;strong&gt;logs&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;There are many advantages to using OpenTelemetry for performance monitoring vs. proprietary tools. SDKs built on OpenTelemetry are very flexible, allowing engineers to easily extend their instrumentation to 3rd-party libraries. As an open source, widely-adopted framework, OpenTelemetry also lets organizations avoid vendor lock-in and have more control over their own data.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By integrating OpenTelemetry into your Android app, you can track the performance of individual operations, identify bottlenecks, and gain insights into how your app performs under various real-world conditions. Let’s walk through how to do this.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Initial integration and set-up&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;To add the OpenTelemetry SDK to your app, you can include the OTel bill of materials along with some necessary dependencies, like this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// libs.versions.toml&#xA;[versions]&#xA;opentelemetry-bom = &#34;1.44.1&#34;&#xA;opentelemetry-semconv = &#34;1.28.0-alpha&#34;[libraries]&#xA;opentelemetry-bom = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-bom&#34;, version.ref = &#34;opentelemetry-bom&#34; }&#xA;opentelemetry-api = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-api&#34; }&#xA;opentelemetry-context = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-context&#34; }&#xA;opentelemetry-exporter-otlp = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-exporter-otlp&#34; }&#xA;opentelemetry-exporter-logging = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-exporter-logging&#34; }&#xA;opentelemetry-extension-kotlin = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-extension-kotlin&#34; }&#xA;opentelemetry-sdk = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-sdk&#34; }&#xA;opentelemetry-semconv = { group = &#34;io.opentelemetry.semconv&#34;, name = &#34;opentelemetry-semconv&#34;, version.ref = &#34;opentelemetry-semconv&#34; }&#xA;opentelemetry-semconv-incubating = { group = &#34;io.opentelemetry.semconv&#34;, name = &#34;opentelemetry-semconv-incubating&#34;, version.ref = &#34;opentelemetry-semconv&#34; }// build.gradle.kts&#xA;implementation(platform(libs.opentelemetry.bom))&#xA;implementation(libs.opentelemetry.api)&#xA;implementation(libs.opentelemetry.context)&#xA;implementation(libs.opentelemetry.exporter.otlp)&#xA;implementation(libs.opentelemetry.exporter.logging)&#xA;implementation(libs.opentelemetry.extension.kotlin)&#xA;implementation(libs.opentelemetry.sdk)&#xA;implementation(libs.opentelemetry.semconv)&#xA;implementation(libs.opentelemetry.semconv.incubating)&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Then, we can create an OpenTelemetry instance that acts as a central configuration point, managing the tracer provider, resources, and exporters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A tracer provider creates and manages tracers, which in turn generate spans. A resource contains metadata about the app and is attached to every span, helping to contextualize telemetry data. An exporter defines where the telemetry data will be sent, such as a backend observability platform or a local file for inspection.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// Resources that will be attached to telemetry to provide better context.&#xA;// This is a good place to add information about the app, device, and OS.&#xA;val resource = Resource.getDefault().toBuilder()&#xA;    .put(ServiceAttributes.SERVICE_NAME, &#34;[app name]&#34;)&#xA;    .put(DeviceIncubatingAttributes.DEVICE_MODEL_NAME, Build.DEVICE)&#xA;    .put(OsIncubatingAttributes.OS_VERSION, Build.VERSION.RELEASE)&#xA;    .build()// The tracer provider will create spans and export them to the configured span processors.&#xA;// For now, we will use a simple span processor that logs the spans to the console.&#xA;val sdkTracerProvider = SdkTracerProvider.builder()&#xA;    .addSpanProcessor(SimpleSpanProcessor.create(LoggingSpanExporter.create()))&#xA;    .setResource(resource)&#xA;    .build()&#xA;    &#xA;// The OpenTelemetry SDK is the entry point to the OpenTelemetry API. It is used to create spans, metrics, and other telemetry data.&#xA;// Create it and register it as the global instance.&#xA;val openTelemetry = OpenTelemetrySdk.builder()&#xA;    .setTracerProvider(sdkTracerProvider)&#xA;    .buildAndRegisterGlobal()&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once everything is initialized, we can get a tracer and create spans, using&amp;nbsp;&lt;code&gt;openTelemetry.sdkTracerProvider.get()&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A&amp;nbsp;&lt;strong&gt;trace&lt;/strong&gt;&amp;nbsp;represents a single operation or workflow within a distributed system. For Android apps, it could capture the entire journey of a user request or an action through the app. Within this journey, a&amp;nbsp;&lt;strong&gt;span&lt;/strong&gt;&amp;nbsp;represents an individual unit of work, such as a network request, database query, or UI rendering task, providing detailed information about its duration and context. Here’s how it looks in code:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;val tracer = openTelemetry.sdkTracerProvider.get(&#34;testAppTracer&#34;)&#xA;val span = tracer.spanBuilder(&#34;someUserAction&#34;).startSpan&#xA;&#xA;&#xA;try {&#xA;someAction()&#xA;} catch (e: Exception) {&#xA;span.recordException(e)&#xA;span.setStatus(StatusCode.ERROR)&#xA;} finally {&#xA;span.end()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Solving problems with OpenTelemetry&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Now that we understand how to set up an OpenTelemetry instance in our Android app, let’s look at some common types of issues and how this framework actually helps us track them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Network latency issues&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Network performance is one of the most unpredictable factors in a production environment. While local testing occurs under stable, high-speed conditions, real-world users face diverse scenarios. They might encounter intermittent mobile connections, unreliable public Wi-Fi, or backend delays during periods of heavy traffic. These challenges can lead to long request times, failed operations, or even app abandonment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With OpenTelemetry, you can instrument network requests to measure their durations and identify bottlenecks. By tagging spans with metadata like endpoint URLs, request sizes, or response statuses, you can analyze trends such as:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Endpoints causing the longest delays:&lt;/strong&gt;&amp;nbsp;Identify APIs that consistently perform poorly and prioritize their optimization.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Impact of network conditions on user experience:&lt;/strong&gt;&amp;nbsp;Correlate high-latency spans with user drop-offs to measure the effect of slow responses.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Response time variability by region:&lt;/strong&gt;&amp;nbsp;Understand how performance differs geographically and tailor improvements for the most affected areas.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s take a look at an example.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Suppose we have an endpoint where users upload images to a server. Network performance might vary based on the image size, user location, or connectivity type. By instrumenting the network request using OpenTelemetry, we can capture relevant metadata and analyze trends, such as whether larger images or specific regions are associated with longer upload times. Here’s how we can instrument this scenario:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt; &#xA;fun uploadImage(image: ByteArray, networkType: String, region: String) {&#xA;    val span = tracer.spanBuilder(&#34;imageUpload&#34;)&#xA;        .setAttribute(HttpIncubatingAttributes.HTTP_REQUEST_SIZE, image.size.toLong())&#xA;        .setAttribute(NetworkIncubatingAttributes.NETWORK_CONNECTION_TYPE, networkType)&#xA;        .setAttribute(&#34;region&#34;, region)&#xA;        .startSpan()&#xA;    try {&#xA;        doNetworkRequest()&#xA;    } catch (e: Exception) {&#xA;        span.recordException(e)&#xA;        span.setStatus(StatusCode.ERROR)&#xA;    } finally {&#xA;        span.end()&#xA;    }&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;OS version or device-specific issues&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Android’s ecosystem is vast, with apps running on a wide variety of devices, OS versions, and hardware configurations. This diversity makes it challenging to ensure a consistent user experience across all devices. Certain crashes or bugs may surface only on specific devices or under particular conditions, making them hard to find in a controlled testing environment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;With OpenTelemetry, you can capture device-specific metadata in a centralized way, and add it to the resource configuration during the OpenTelemetry setup. This ensures that important contextual information is automatically attached to spans, logs, and metrics. This approach ensures consistency across telemetry data.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By analyzing this metadata, you can uncover trends like:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Frequent crashes on certain device models:&lt;/strong&gt;&amp;nbsp;users on older or budget devices can encounter crashes due to insufficient resources, and detecting this pattern might allow optimizing memory usage or offering a lighter version of the app.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Behavioral changes across Android versions:&lt;/strong&gt;&amp;nbsp;certain crashes may occur only on specific OS versions due to changes in Android APIs, stricter permission requirements, or bugs introduced in updates. With this data, you can prioritize compatibility fixes or update your app’s dependencies to avoid deprecated API usage.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Hardware-specific rendering issues:&lt;/strong&gt;&amp;nbsp;Some devices may have unique graphics drivers or hardware quirks that cause rendering issues like visual glitches or artifacts in the UI. For example, a custom animation might behave unexpectedly on devices with non-standard screen resolutions or refresh rates. Metadata about screen specs or GPU details can help pinpoint and address these inconsistencies.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s see how to set this up:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// Add some useful attributes to the Resource object.&#xA;val resource = Resource.getDefault().toBuilder()&#xA;    .put(&#34;device.model&#34;, Build.MODEL)&#xA;    .put(&#34;device.manufacturer&#34;, Build.MANUFACTURER)&#xA;    .put(&#34;os.version&#34;, Build.VERSION.SDK_INT.toString())&#xA;    .put(&#34;screen.resolution&#34;, getResolution())&#xA;    .build()// Use the resource object to build the tracer, logs and other telemetry providers&#xA;val sdkTracerProvider = SdkTracerProvider.builder()&#xA;    .setResource(resource)&#xA;    .build()&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Unexpected user behavior&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Real users often interact with apps in unexpected ways. This unpredictability can lead to performance issues, crashes, or unoptimized user experiences that aren’t caught in local testing.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;For example, users might upload files much larger than anticipated, causing memory or performance bottlenecks. Others might repeatedly perform actions in rapid succession, like submitting forms or refreshing pages, leading to race conditions or server overload. Some users might navigate through the app in untested sequences, triggering unexpected states or errors.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By leveraging OpenTelemetry to instrument user interactions, you can capture and analyze spans that detail how users actually use your app. This data provides invaluable insights into unexpected patterns, allowing you to:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Detect resource-intensive actions:&lt;/strong&gt;&amp;nbsp;Track spans representing operations like image uploads, database queries, or API calls to identify scenarios where excessive usage impacts performance.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Uncover uncommon navigation paths:&lt;/strong&gt;&amp;nbsp;By monitoring user navigation flows, you can discover sequences that frequently result in errors or crashes, helping you prioritize fixes for real-world issues.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Identify high-demand features:&lt;/strong&gt;&amp;nbsp;Analyze spans to see which actions or features are used most often, even if they weren’t part of your initial test cases. This can guide both optimization efforts and feature prioritization.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Let’s consider a scenario where users frequently navigate back and forth between two screens (e.g., a product listing and a product details page) in rapid succession. While this behavior may seem harmless, it could inadvertently cause resource leaks or worsen the rendering performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By tagging spans with navigation metadata like the screen name, a timestamp, and some other user interactions, you can analyze patterns in navigation behaviors:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Users may be toggling between screens at an unexpectedly high frequency, highlighting a need for caching or lazy loading mechanisms to reduce resource strain.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A particular screen might consistently produce errors, revealing edge cases or bottlenecks in its rendering logic.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Insights into navigation sequences can help refine user experience flows, making the app more intuitive for common behaviors while handling edge cases more gracefully.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This ability to uncover and address unexpected user behavior ensures your app remains reliable and performant, even under unconventional usage scenarios.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Next steps: forward your data where you want to analyze it&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we’ve discussed, instrumenting your Android app with OpenTelemetry is incredibly helpful for monitoring and understanding common performance issues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Once you’ve started collecting data, however, you’ll need to set up a place for it to go. One of the great things about OpenTelemetry as a framework is that there are many, many observability tools that support ingesting this type of data. You may choose to forward it to a vendor-specific backend or to any number of open source tools, like Jaeger for spans or Loki for logs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Forwarding OpenTelemetry data from an SDK requires adding one or multiple exporters to give a destination for your data once that data is actually generated.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The exporter is a component that will connect the SDK you are using, which will capture the data, with an external OpenTelemetry collector that will receive the data. Exporters are designed with the OpenTelemetry data model in mind, emitting OpenTelemetry data without any loss of information. Many&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/ecosystem/registry/?component=exporter&amp;amp;language=&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;language-specific exporters&lt;/a&gt;&amp;nbsp;are available.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The&amp;nbsp;&lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry collector&lt;/a&gt;&amp;nbsp;is a vendor-agnostic way to receive, process and export telemetry data. It is not always necessary to use, as you can send data directly to your backend of choice via the exporter. However, having a collector is good practice if you’re managing multiple sources of data ingest and sending to multiple observability backends. It allows your service to offload data quickly, and the collector can take care of additional handling like retries, batching, encryption, or even sensitive data filtering.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Embrace has a&amp;nbsp;&lt;a href=&#34;https://embrace.io/blog/android-opentelemetry-exporter-walkthrough/&#34;&gt;tutorial walk-through&lt;/a&gt;&amp;nbsp;on how to set up an OpenTelemetry exporter for Android, if using our SDK. You can also use the basic&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-android&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry Android SDK&lt;/a&gt;, which is built on top of the Java SDK, and which has its own&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-java/tree/main/exporters&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;exporter resources&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Final takeaways&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;In a world where apps run on countless devices, in varied environments, and are used by diverse users, achieving optimal performance and reliability requires more than just local testing. While tools like Android Studio Profiler excel at addressing issues reproducible in controlled environments, production observability fills the gap for uncovering real-world problems that only surface under specific conditions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry provides a robust framework for collecting and analyzing telemetry data, giving developers the insights they need to understand and optimize their apps in production. By instrumenting spans and attaching meaningful metadata, you can pinpoint bottlenecks, diagnose device- or OS-specific issues, and uncover unexpected user behaviors that impact the app’s performance or user experience.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Interested in getting started for yourself? Check out the&amp;nbsp;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-android&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry SDK for Android&lt;/a&gt;. Or, for more advanced monitoring, you can use Embrace’s&amp;nbsp;&lt;a href=&#34;https://github.com/embrace-io/embrace-android-sdk&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;open source Android SDK&lt;/a&gt;. It’s built on OpenTelemetry and uses the same data conventions, but has added functionality for tracking complex Android issues, like ANRs, in a way that is OpenTelemetry-compliant.&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;&lt;em&gt;成员帖子最初由 Francisco Prieto 在&lt;a href=&#34;https://embrace.io/blog/solving-android-app-issues-with-opentelemetry/&#34;&gt;拥抱博客&lt;/a&gt;上发布卡德尔&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;&lt;em&gt;OpenTelemetry 是一个强大的可观察性框架，可以帮助工程师监控和解决常见的 Android 性能问题。我们将通过下面的仪器示例深入探讨其中的一些问题。&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;作为一名 Android 开发人员，我解决错误、衡量性能或改善应用整体体验的第一直觉是在本地对其进行测试和分析。 Android Studio Profiler 等工具提供了强大的功能来检测和解决各种性能问题，例如 UI 线程阻塞、内存泄漏或 CPU 使用率过高。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然这些本地工具不可或缺，但它们也有局限性。某些问题不会出现在受控环境中，具有一致的网络连接、可预测的用户行为和有限的测试设备。在现实世界中，用户以意想不到的方式与应用程序交互，使用不同的硬件和不同的条件，暴露出难以在本地复制的问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这就是 OpenTelemetry 的用武之地。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1200”高度=“628”src=“https://www.cncf.io/wp-content” /uploads/2024/12/Android_OTel_blogImage-1.png&#34; alt=&#34;带有 OTel 和 Android 徽标的图像&#34; class=&#34;wp-image-122772&#34; title=&#34;Android_OTel_blogImage (1)&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1.png 1200w，https://www.cncf.io/wp-content/uploads/ 2024/12/Android_OTel_blogImage-1-300x157.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-1024x536.png 1024w，https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage -1-768x402.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-194x102.png 194w，https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage -1-388x204.png 388w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-900x471.png 900w，https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage -1-382x200.png 382w, https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage-1-764x400.png 764w，https://www.cncf.io/wp-content/uploads/2024/12/Android_OTel_blogImage -1-590x310.png 590w“尺寸=”自动，（最大宽度：1200px） 100vw，1200px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry 是一个用于收集、处理和导出有关应用程序性能的数据的框架。虽然对于移动设备来说相对较新，但它已成为快速增长的后端性能管理标准。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;使用此移动框架的好处是显着的。 OpenTelemetry 使开发人员能够从生产环境中收集可观测性数据，从而提供了解应用程序真实行为的窗口。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2类=“wp-block-heading&#34;&gt;本地分析和生产可观察性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;本地分析有其用途&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;本地分析对于识别在受控环境中可重现的问题非常有价值。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“2048”高度=“602”src=“https://www.cncf.io/wp-content” /uploads/2024/12/Android-blog-image-1.webp&#34; alt=&#34;仪表板图像&#34; class=&#34;wp-image-122773&#34; title=&#34;Android 博客图像 1&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1.webp 2048w，https://www.cncf.io/wp-content/uploads/ 2024/12/Android-blog-image-1-300x88.webp 300w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-1024x301.webp 1024w，https://www.cncf.io/wp-content/uploads/2024 /12/Android-blog-image-1-768x226.webp 768w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-900x265.webp 900w，https://www.cncf.io/wp-content/uploads/2024 /12/Android-blog-image-1-1800x529.webp 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Android-blog-image-1-600x176.webp 600w，https://www.cncf.io/wp-content/uploads/2024 /12/Android-blog-image-1-1200x353.webp 1200w&#34; 尺寸 = &#34;自动, (最大宽度: 2048px) 100vw，2048px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有许多常见问题可以在本地检测和解决：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;主线程阻塞&lt;/strong&gt;：阻塞主线程的任务可能会导致应用冻结或出现 ANR，因为该线程负责处理用户交互和呈现 UI。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;内存泄漏&lt;/strong&gt;：当不再需要的对象未正确释放时，就会发生内存泄漏。这会导致内存使用过多，从而可能导致内存不足 (OOM) 错误。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;与容量相关的卡顿&lt;/strong&gt;：当 CPU 或 GPU 等某些资源负担过重时，用户界面可能无法在给定时间片内正确呈现。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这些问题在测试过程中很容易重现，本地分析工具非常适合检测和修复它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;何时需要生产可观察性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;虽然本地分析涵盖了广泛的问题，但并非所有问题在本地设置中都很明显。生产中的可观察性对于诊断至关重要：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;意外的用户行为&lt;/strong&gt;：用户可能会上传大量文件、执行快速操作或以计划外的方式导航应用，从而暴露边缘情况。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;特定于设备的崩溃&lt;/strong&gt;：Android 的多样性意味着特定设备或操作系统版本上可能会出现问题，而这些问题通常在本地测试期间无法检测到。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;网络连接速度低&lt;/strong&gt;：现实世界中的用户经常面临网速缓慢或不可靠的情况，导致超时或加载时间过长，这可能很难模拟。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;生产就绪的OB像 OpenTelemetry 这样的可服务性工具对于发现和解决这些挑战至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Android 中的 OpenTelemetry&lt;/h2​​&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt; 是一个强大的可观察性框架，可帮助开发者收集、处理和导出&lt;strong&gt;跟踪&lt;/strong&gt;、&lt;strong&gt;指标&lt;/strong&gt;和&lt;strong&gt;等遥测数据日志&lt;/strong&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;与专有工具相比，使用 OpenTelemetry 进行性能监控有很多优势。基于 OpenTelemetry 构建的 SDK 非常灵活，允许工程师轻松地将其仪器扩展到第 3 方库。作为一个广泛采用的开源框架，OpenTelemetry 还可以让组织避免供应商锁定并更好地控制自己的数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过将 OpenTelemetry 集成到您的 Android 应用中，您可以跟踪各个操作的性能、识别瓶颈并深入了解您的应用在各种实际条件下的性能。让我们来看看如何执行此操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;初始集成和设置&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;要将 OpenTelemetry SDK 添加到您的应用中，您可以包含 OTel 物料清单以及一些必要的依赖项，如下所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// libs.versions.toml&#xA;[版本]&#xA;opentelemetry-bom =“1.44.1”&#xA;opentelemetry-semconv =“1.28.0-alpha”[库]&#xA;opentelemetry-bom = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-bom&#34;, version.ref = &#34;opentelemetry-bom&#34; }&#xA;opentelemetry-api = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-api&#34; }&#xA;opentelemetry-context = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-context&#34; }&#xA;opentelemetry-exporter-otlp = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-exporter-otlp&#34; }&#xA;opentelemetry-exporter-logging = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-exporter-logging&#34; }&#xA;opentelemetry-extension-kotlin = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-extension-kotlin&#34; }&#xA;opentelemetry-sdk = { group = &#34;io.opentelemetry&#34;, name = &#34;opentelemetry-sdk&#34; }&#xA;opentelemetry-semconv = { group = &#34;io.opentelemetry.semconv&#34;, name = &#34;opentelemetry-semconv&#34;, version.ref = &#34;opentelemetry-semconv&#34; }&#xA;opentelemetry-semconv-incubating = { group = &#34;io.opentelemetry.semconv&#34;, name = &#34;opentelemetry-semconv-incubating&#34;, version.ref = &#34;opentelemetry-semconv&#34; }// build.gradle.kts&#xA;实现（平台（libs.opentelemetry.bom））&#xA;实现（libs.opentelemetry.api）&#xA;实现（libs.opentelemetry.context）&#xA;实现（libs.opentelemetry.exporter.otlp）&#xA;实现（libs.opentelemetry.exporter.logging）&#xA;实现（libs.opentelemetry.extension.kotlin）&#xA;实现（libs.opentelemetry.sdk）&#xA;实现（libs.opentelemetry.semconv）&#xA;实现（libs.opentelemetry.semconv.incubating）&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;然后，我们可以创建一个 OpenTelemetry 实例，充当中央配置点，管理跟踪器提供程序、资源和导出程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一个跟踪器提供程序创建并管理跟踪器，跟踪器又生成跨度。资源包含有关应用程序的元数据，并附加到每个跨度，有助于将遥测数据置于上下文中。导出器定义遥测数据将发送到何处，例如后端可观测平台或用于检查的本地文件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// 将附加到遥测以提供更好上下文的资源。&#xA;// 这是添加有关应用程序、设备和操作系统信息的好地方。&#xA;val 资源 = Resource.getDefault().toBuilder()&#xA;    .put(ServiceAttributes.SERVICE_NAME, &#34;[应用程序名称]&#34;)&#xA;    .put（DeviceIncubatingAttributes.DEVICE_MODEL_NAME，Build.DEVICE）&#xA;    .put(OsIncubatingAttributes.OS_VERSION, Build.VERSION.RELEASE)&#xA;    .build()//跟踪器提供程序将创建跨度并将它们导出到配置的跨度处理器。&#xA;// 现在，我们将使用一个简单的跨度处理器将跨度记录到控制台。&#xA;val sdkTracerProvider = SdkTracerProvider.builder()&#xA;    .addSpanProcessor(SimpleSpanProcessor.create(LoggingSpanExporter.create()))&#xA;    .setResource(资源)&#xA;    。建造（）&#xA;    &#xA;// OpenTelemetry SDK 是 OpenTelemetry API 的入口点。它用于创建跨度、指标和其他遥测数据。&#xA;// 创建它并将其注册为全局实例。&#xA;val openTelemetry = OpenTelemetrySdk.builder()&#xA;    .setTracerProvider(sdkTracerProvider)&#xA;    .buildAndRegisterGlobal()&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;一旦一切都初始化完毕，我们就可以使用&lt;code&gt;openTelemetry.sdkTracerProvider.get()&lt;/code&gt;获取跟踪器并创建跨度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;跟踪&lt;/strong&gt;代表分布式系统中的单个操作或工作流程。对于 Android 应用程序，它可以捕获用户请求或通过应用程序执行操作的整个过程。在此旅程中，&lt;strong&gt;跨度&lt;/strong&gt;代表一个单独的工作单元，例如网络请求、数据库查询或 UI 渲染任务，提供有关其持续时间和上下文的详细信息。代码如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;val tracer = openTelemetry.sdkTracerProvider.get(&#34;testAppTracer&#34;)&#xA;val span = tracer.spanBuilder(&#34;someUserAction&#34;).startSpan&#xA;&#xA;&#xA;尝试 {&#xA;一些动作()&#xA;} catch (e: 异常) {&#xA;span.recordException(e)&#xA;span.setStatus(StatusCode.ERROR)&#xA;} 最后 {&#xA;跨度.end()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;使用 OpenTelemetry 解决问题&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;现在我们了解了如何在 Android 应用中设置 OpenTelemetry 实例，让我们看看一些常见的问题类型以及该框架如何实际帮助我们跟踪它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;网络延迟问题&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;网络性能是生产环境中最不可预测的因素之一。虽然本地测试是在稳定、高速的条件下进行的，但现实世界的用户面临着不同的场景。他们可能会遇到间歇性的移动连接、不可靠的公共 Wi-Fi 或后端延迟。交通繁忙。这些挑战可能会导致请求时间过长、操作失败，甚至应用被放弃。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;借助 OpenTelemetry，您可以检测网络请求以测量其持续时间并识别瓶颈。通过使用端点 URL、请求大小或响应状态等元数据标记跨度，您可以分析以下趋势：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;导致最长延迟的端点&lt;/strong&gt;：识别始终表现不佳的 API，并优先考虑其优化。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;网络状况对用户体验的影响&lt;/strong&gt;：将高延迟时间与用户流失相关联，以衡量缓慢响应的影响。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;不同地区的响应时间差异&lt;/strong&gt;：了解性能在不同地理位置上的差异，并针对受影响最严重的地区制定改进措施。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们看一个例子。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;假设我们有一个端点，用户可以将图像上传到服务器。网络性能可能会因图像大小、用户位置或连接类型而异。通过使用 OpenTelemetry 检测网络请求，我们可以捕获相关元数据并分析趋势，例如较大的图像或特定区域是否与较长的上传时间相关。以下是我们如何检测这种情况：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt; &#xA;有趣的 uploadImage(图像: ByteArray, 网络类型: 字符串, 区域: 字符串) {&#xA;    val span = tracer.spanBuilder(&#34;imageUpload&#34;)&#xA;        .setAttribute(HttpIncubatingAttributes.HTTP_REQUEST_SIZE, image.size.toLong())&#xA;        .setAttribute(NetworkIncubatingAttributes.NETWORK_CONNECTION_TYPE, 网络类型)&#xA;        .setAttribute(&#34;区域&#34;, 区域)&#xA;        .startSpan()&#xA;    尝试 {&#xA;        doNetworkRequest()&#xA;    } catch (e: 异常) {&#xA;        span.recordException(e)&#xA;        span.setStatus(StatusCode.ERROR)&#xA;    } 最后 {&#xA;        跨度.end()&#xA;    }&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;操作系统版本或设备特定问题&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Android 的生态系统非常庞大，应用程序可以在各种设备、操作系统版本和硬件配置上运行。这种多样性使得确保所有设备上一致的用户体验变得具有挑战性。某些崩溃或错误可能仅在特定设备或特定条件下出现，因此很难在受控测试环境中发现它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;借助 OpenTelemetry，您可以集中方式捕获设备特定的元数据，并在 OpenTelemetry 设置期间将其添加到资源配置中。这可确保重要的上下文信息自动附加到跨度、日志和指标。这种方法可确保遥测数据的一致性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过分析此元数据，您可以发现以下趋势：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;某些设备型号上频繁崩溃&lt;/strong&gt;：使用较旧设备或廉价设备的用户可能会因资源不足而遇到崩溃，并检测采用这种模式可能会优化内存使用或提供应用程序的更轻版本。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Android 版本之间的行为变化&lt;/strong&gt;：由于 Android API 的更改、更严格的权限要求或更新中引入的错误，某些崩溃可能仅在特定操作系统版本上发生。利用这些数据，您可以优先考虑兼容性修复或更新应用的依赖项，以避免使用已弃用的 API。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;特定于硬件的渲染问题&lt;/strong&gt;：某些设备可能具有独特的图形驱动程序或硬件怪癖，从而导致渲染问题，例如用户界面中的视觉故障或伪影。例如，自定义动画在具有非标准屏幕分辨率或刷新率的设备上可能会出现意外行为。有关屏幕规格或 GPU 详细信息的元数据可以帮助查明并解决这些不一致问题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们看看如何设置：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code class=&#34;&#34;&gt;// 给Resource对象添加一些有用的属性。&#xA;val 资源 = Resource.getDefault().toBuilder()&#xA;    .put(&#34;设备.model&#34;, Build.MODEL)&#xA;    .put(&#34;设备.制造商&#34;, Build.MANUFACTURER)&#xA;    .put(&#34;os.version&#34;, Build.VERSION.SDK_INT.toString())&#xA;    .put(&#34;屏幕.分辨率&#34;, getResolution())&#xA;    .build()// 使用资源对象构建跟踪器、日志和其他遥测提供程序&#xA;val sdkTracerProvider = SdkTracerProvider.builder()&#xA;    .setResource(资源)&#xA;    .build()&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;意外的用户行为&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;真实用户经常以意想不到的方式与应用进行交互。这种不可预测性可能会导致本地测试中未发现的性能问题、崩溃或未优化的用户体验。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;例如，用户可能上传比预期大得多的文件，从而导致内存或性能瓶颈。其他人可能会快速连续地重复执行操作，例如提交表单或刷新页面，从而导致竞争条件或服务器过载。某些用户可能会以未经测试的顺序浏览应用程序，从而触发意外状态或错误。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过利用 OpenTelemetry 来检测用户交互，您可以捕获和分析详细说明用户如何实际使用您的应用的跨度。这些数据提供了对意外模式的宝贵见解，使您能够：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;检测资源密集型操作&lt;/strong&gt;：跟踪代表图像上传、数据库查询或 API 调用等操作的范围，以识别过度使用影响性能的场景。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;发现不常见的导航路径&lt;/strong&gt;：通过监控用户导航流，您可以发现经常导致错误或崩溃的序列，帮助您优先修复实际问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;识别高需求功能&lt;/strong&gt;：分析跨度以了解哪些操作或功能最常使用，即使它们不是您初始测试用例的一部分会话。这可以指导优化工作和功能优先级。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;让我们考虑这样一个场景：用户频繁地在两个屏幕（例如产品列表和产品详细信息页面）之间快速连续地来回导航。虽然这种行为看似无害，但可能会无意中导致资源泄漏或渲染性能恶化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过使用屏幕名称、时间戳和其他一些用户交互等导航元数据标记范围，您可以分析导航行为的模式：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;用户可能会以意想不到的高频率在屏幕之间切换，这突出表明需要缓存或延迟加载机制来减少资源紧张。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;特定屏幕可能会持续产生错误，从而暴露其渲染逻辑中的边缘情况或瓶颈。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;深入了解导航序列有助于优化用户体验流程，使应用对于常见行为更加直观，同时更加优雅地处理边缘情况。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;这种发现和解决意外用户行为的能力可确保您的应用即使在非常规使用场景下也能保持可靠和高性能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;后续步骤：将数据转发到您想要分析的位置&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;正如我们所讨论的，使用 OpenTelemetry 检测您的 Android 应用对于监控和了解常见性能问题非常有帮助。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;但是，一旦开始收集数据，您就需要为其设置一个存放位置。 OpenTelemetry 作为框架的一大优点是，有很多很多可观察性工具支持提取此类数据。您可以选择将其转发到特定于供应商的后端或任意数量的开源工具，例如用于跨度的 Jaeger 或用于日志的 Loki。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;从 SDK 转发 OpenTelemetry 数据需要添加一个或多个导出器，以便在实际生成数据后为数据提供目的地。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;导出器是一个组件，它将连接您正在使用的 SDK（将捕获数据）与将接收数据的外部 OpenTelemetry 收集器。导出器在设计时考虑了 OpenTelemetry 数据模型，可在不丢失任何信息的情况下发出 OpenTelemetry 数据。许多&lt;a href=&#34;https://opentelemetry.io/ecosystem/registry/?component=exporter&amp;language=&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;特定于语言的导出器&lt;/a&gt;都可用。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry 收集器&lt;/a&gt;是一种与供应商无关的接收、处理方式并导出遥测数据。并不总是需要使用，因为您可以通过导出器将数据直接发送到您选择的后端。但是，如果您要管理多个数据源并将其发送到多个可观察点，那么拥有收集器是一种很好的做法ty 后端。它允许您的服务快速卸载数据，并且收集器可以负责其他处理，例如重试、批处理、加密，甚至敏感数据过滤。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Embrace 有一个&lt;a href=&#34;https://embrace.io/blog/android-opentelemetry-exporter-walkthrough/&#34;&gt;教程演练&lt;/a&gt;，介绍如何设置适用于 Android 的 OpenTelemetry 导出器，如果使用我们的 SDK。您还可以使用基本的&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-android&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry Android SDK&lt;/a&gt;，它是由在 Java SDK 之上，它有自己的 &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-java/tree/main/exporters&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;出口商资源&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;最终要点&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当今世界，应用程序在无数设备上、不同环境中运行，并由不同用户使用，要实现最佳性能和可靠性，需要的不仅仅是本地测试。虽然 Android Studio Profiler 等工具擅长解决受控环境中可重现的问题，但生产可观察性填补了发现仅在特定条件下出现的现实问题的空白。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;OpenTelemetry 提供了一个用于收集和分析遥测数据的强大框架，为开发人员提供了理解和优化生产中的应用程序所需的见解。通过检测跨度并附加有意义的元数据，您可以查明瓶颈、诊断特定于设备或操作系统的问题，并发现影响应用性能或用户体验的意外用户行为。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;有兴趣自己开始吗？请查看&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-android&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;适用于 Android 的 OpenTelemetry SDK&lt;/a&gt;。或者，要进行更高级的监控，您可以使用 Embrace 的&lt;a href=&#34;https://github.com/embrace-io/embrace-android-sdk&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;开源 Android SDK &lt;/a&gt;。它基于 OpenTelemetry 构建并使用相同的数据约定，但添加了以符合 OpenTelemetry 的方式跟踪复杂 Android 问题（例如 ANR）的功能。&lt;/p&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Sun, 29 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Dragonfly v2.2.0 has been released】蜻蜓 v2.2.0 已发布</title>
      <link>https://www.cncf.io/blog/2025/01/07/dragonfly-v2-2-0-has-been-released/</link>
      <description>【&lt;p&gt;Dragonfly v2.2.0 is released! 🎉🎉🎉 Thanks the &lt;a href=&#34;https://github.com/dragonflyoss/dragonfly/graphs/contributors&#34;&gt;contributors&lt;/a&gt; who made this release happend and welcome you to visit &lt;a href=&#34;https://d7y.io/&#34;&gt;d7y.io&lt;/a&gt; website.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Client written in Rust&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The client is written in Rust, offering advantages such as ensuring memory safety, improving performance, etc. The client is a submodule of Dragonfly, refer to &lt;a href=&#34;https://github.com/dragonflyoss/client&#34;&gt;dragonflyoss/client&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1848&#34; height=&#34;952&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22.png&#34; alt=&#34;scheduler schema&#34; class=&#34;wp-image-122830&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22.png 1848w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-300x155.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-1024x528.png 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-768x396.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-900x464.png 900w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-1800x927.png 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-388x200.png 388w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-776x400.png 776w&#34; sizes=&#34;auto, (max-width: 1848px) 100vw, 1848px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1892&#34; height=&#34;988&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11.jpg&#34; alt=&#34;second scheduler schema&#34; class=&#34;wp-image-122831&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11.jpg 1892w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-300x157.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-1024x535.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-768x401.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-194x102.jpg 194w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-388x204.jpg 388w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-900x470.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-1800x940.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-383x200.jpg 383w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-766x400.jpg 766w&#34; sizes=&#34;auto, (max-width: 1892px) 100vw, 1892px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Client supports bandwidth rate limiting for prefetching&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Client now supports rate limiting for prefetch requests, which can prevent network overload and reduce competition with other active download tasks, thereby enhancing overall system performance. Refer to the &lt;a href=&#34;https://d7y.io/docs/next/reference/configuration/client/dfdaemon/&#34;&gt;documentation&lt;/a&gt; to configure the proxy.prefetchRateLimit option.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd_JKeiIvckyUpfVnZxu1FID0Wx5OvRwjtwyPrujwEAZbwQz_Fsx0Y68xJAwWW1GfAhX5Ucmo4MWMr11YXi2RyeL-cLcLsiGRpslppU5WixIua3U3wMgYjE3b2_aSAKNXwR52CJ5IKzMzQ4WMV-HNw?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;code&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The following diagram illustrates the usage of download rate limit, upload rate limir, and prefetct rate limit for the client.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1600&#34; height=&#34;507&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1.png&#34; alt=&#34;rate limit&#34; class=&#34;wp-image-122828&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1.png 1600w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1-300x95.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1-1024x324.png 1024w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1-768x243.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1-900x285.png 900w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1-600x190.png 600w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1-1200x380.png 1200w&#34; sizes=&#34;auto, (max-width: 1600px) 100vw, 1600px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Client supports leeching&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;If the user configures the client to disable sharing, it will become a leech.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdgF2CEn44vJsYdjvSfY-TrJiub66qGikQ14Np5NUXHBj6Jv8UG8EQ1CSiqsDc9kc8xJJjU6rQWV9_tHKhjJB6U7-pw7QnMOm4NO7cefufbx-1KOEcLNwzsuOLI4kQUDEbtTeoTIPANKEC0lq0s2kY?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;code&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Optimize client’s performance for handling a large number of small I/Os by Nydus&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Add the X-Dragonfly-Prefetch HTTP header. If X-Dragonfly-Prefetch is set to true and it is a range request, the client will prefetch the entire task. This feature allows Nydus to control which requests need prefetching.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;The client’s HTTP proxy adds an independent cache to reduce requests to the gRPC server, thereby reducing request latency.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Increase the memory cache size in RocksDB and enable prefix search for quickly searching piece metadata.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use the CRC-32-Castagnoli algorithm with hardware acceleration to reduce the hash calculation cost for piece content.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Reuse the gRPC connections for downloading and optimize the download logic.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Defines the V2 of the P2P transfer protocol&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Define the V2 of the P2P transfer protocol to make it more standard, clearer, and better performing, refer to &lt;a href=&#34;https://github.com/dragonflyoss/api&#34;&gt;dragonflyoss/api&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Enhanced Harbor Integration with P2P Preheating&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dragonfly improves its integration with Harbor v2.13 for preheating images, includes the following enhancements:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Support for preheating multi architecture images.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;User can select the preheat scope for multi-granularity preheating. (Single Seed Peer, All Seed Peers, All Peers)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;User can specify the scheduler cluster ids for preheating images to the desired Dragonfly clusters.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://d7y.io/docs/next/advanced-guides/preheat/&#34;&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXewA_JXER16bnL16cxMfF5SsbVqQKXJe-x1UlWgGkio4grGXWXzPmiJP-ThiBeyY-DmMR5rQ37nNYXJpjAZSxQoRXaJVJu3dWNHkNdTdcTPDKx8-5SUibKfPX3vaAu-oRkoimlxvJiUbk_nMo8VqA?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;create P2P Provider policy&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Task Manager&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;User can search all peers of cached task by task ID or download URL, and delete the cache on the selected peers, refer to the &lt;a href=&#34;https://d7y.io/docs/next/advanced-guides/task-manager/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1000&#34; height=&#34;625&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-2.png&#34; alt=&#34;dragonfly dashboard&#34; class=&#34;wp-image-122829&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-2.png 1000w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-2-300x188.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-2-768x480.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-2-900x563.png 900w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-2-320x200.png 320w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-2-640x400.png 640w&#34; sizes=&#34;auto, (max-width: 1000px) 100vw, 1000px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Peer Manager&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Manager will regularly synchronize peers’ information and also allows for manual refreshes. Additionally, it will display peers’ information on the Manager Console.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1000&#34; height=&#34;625&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3.png&#34; alt=&#34;dragonfly dashboard&#34; class=&#34;wp-image-122835&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3.png 1000w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3-300x188.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3-768x480.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3-900x563.png 900w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3-320x200.png 320w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3-640x400.png 640w&#34; sizes=&#34;auto, (max-width: 1000px) 100vw, 1000px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Add hostname regexes and CIDRs to cluster scopes for matching clients.&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;When the client starts, it reports its hostname and IP to the Manager. The Manager then returns the best matching cluster (including schedulers and seed peers) to the client based on the cluster scopes configuration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeassw2tBI-EuCqqrxetTDYUim7S8ykPH8rN36KZG45VImOEeN80NtySU3L4o4cZs18M6nECRug0pUvznOjdV-IBgRqdWamsVQ7XNDYARGwum5uX_FqaKl4-esB_OTs1Czmf0JXTVHC3qNNcJh3b84?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;Creating a cluster on the Dragonfly dashboard&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Supports distributed rate limiting for creating jobs across different clusters&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;User can configure rate limiting for job creation across different clusters in the Manager Console.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf4xgjEQT6xXC6bIOXE6IkZOo3Mpg7Oz09-x9gF4VBAUvmTcc3di-qYPb-KApPm1NtbX8TC79zICyuK1QeDpKSAOuO7ry7V8Gg15Mh2GMirpvhLOEFsbzyGGcSgYPIDPVCLmni9hUONCYmcW_MgZPM?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;creating a cluster on the dragonfly dashboard&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Support preheating images using self-signed certificates&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Preheating requires calling the container registry to parse the image manifest and construct the URL for downloading blobs. If the container registry uses a self-signed certificate, user can configure the self-signed certificate in the Manager’s config for calling to the container registry.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfELHDQL9aEEUY6fzvqpFCxNBLupzm3OrLBEpR6N0uavcDU1oSQ1JLDhanlq5WoWuXxjQ5zsby9T1QA6dnTLgbp56LJEENgNkpg3z3dCa0GQvEjJhzhb_gck-V1HTnSRpi-Dq8fK2XiQI_rY6K-7vk?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;code&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Support mTLS for gRPC calls between services&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;By setting self-signed certificates in the configurations of the Manager, Scheduler, Seed Peer, and Peer, gRPC calls between services will use mTLS.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Observability&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dragonfly is recommending to use prometheus for monitoring. Prometheus and grafana configurations are maintained in the &lt;a href=&#34;https://github.com/dragonflyoss/monitoring/&#34;&gt;dragonflyoss/monitoring&lt;/a&gt; repository.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Grafana dashboards are listed below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;ID&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Link&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dragonfly Manager&lt;/td&gt;&lt;td&gt;15945&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/15945&#34;&gt;https://grafana.com/grafana/dashboards/15945&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Grafana dashboard for dragonfly manager.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dragonfly Scheduler&lt;/td&gt;&lt;td&gt;15944&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/15944&#34;&gt;https://grafana.com/grafana/dashboards/15944&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Granafa dashboard for dragonfly scheduler.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dragonfly Client&lt;/td&gt;&lt;td&gt;21053&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/21053&#34;&gt;https://grafana.com/grafana/dashboards/21053&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Grafana dashboard for dragonfly client and dragonfly seed client.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dragonfly Seed Client&lt;/td&gt;&lt;td&gt;21054&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/21054&#34;&gt;https://grafana.com/grafana/dashboards/21054&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Grafana dashboard for dragonfly seed client.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdjuL8S1ZIPteu3suC7_iLrczTWsXwNFuvVF7Cl09aBYKfh6avbKYRy-R7LPbW60oiDUHLchTEJdZ75sos7dklsO8GAlSxSYTxSX7IofJC5pmTAx_uzTUIfhZ_1Uiwx0lZi1qqjku_3c8ti8Xw8DnQ?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;dashboard&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe2tR6QKSzIT2WJ0yPshOQcLT5Lf55e1crcTBKJVcy_9CaQOlYGM620UBTq7-RUDjeGZkTvRmIkeIS75HuDZzuRhTQALWfyLt9Y7kt8_KfmiChLRsoDYEA-njV__aYxKJMQO2pW6mwf1iMYRrX1Eq8?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;Dashboard&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Nydus&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nydus v2.3.0 is released, refer to &lt;a href=&#34;https://github.com/dragonflyoss/nydus/releases/tag/v2.3.0&#34;&gt;Nydus Image Service v2.3.0&lt;/a&gt; for more details.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;builder: support –parent-bootstrap for merge.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;builder/nydusd: support batch chunks mergence.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;nydusify/nydus-snapshotter: support OCI reference types.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;nydusify: support export/import for remote images.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;nydusify: support –push-chunk-size for large size image.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;nydusd/nydus-snapshotter: support basic failover and hot upgrade.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;nydusd: support overlay writable mount for fusedev.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Console&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Console v0.2.0 is released, featuring a redesigned UI and an improved interaction flow. Additionally, more functional pages have been added, such as preheating, task manager, PATs(Personal Access Tokens) manager, etc. Refer to the &lt;a href=&#34;https://d7y.io/docs/next/advanced-guides/web-console/&#34;&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeL2R4ixPm1lq42AAycdeyD0DkvK5QeffEwURKmAaAxRN9KL5Oa4L_puSAlGPzFy-JVp2NDTmU65EWz4qWo5XJqG-OMeeNqnlwkIlfEJ6f9TLuP8LMueLayMv7CnqQkjw4nl3TnQmOSqpJwjKpHCR4?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;cluster overvoew&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfuKv4SXl2LlU7oNdjYy8Z_s9dtEQIQt1M70EgViECkoxiPGFq1IkTThuOsvXjseBXMQkC5lyJNXG04Awx84GV9T-fox9LN8doFJf1tVKDojrAljG3qHEjmxtk9fqLBvZ_zyA-NyVXQI6dP_G6JZb4?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;deeper dive image into cluster-1 on dashboard&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Document&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Refactor the website documentation to make Dragonfly simpler and more practical for users, refer to &lt;a href=&#34;https://d7y.io/&#34;&gt;d7y.io&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcKIeUzMXFvQNqXs-G2jhe3HSoaxEDHbG1l1d9USNFif78H3H-VFjbGqM06OY9gQiAcQ4O9Gmgwp8ODhM5Upwka71OGG6m76PqLOWrlC64rxDc4JeXHjUUeNB4C2X8FQWAeoX5UzUHvNl9IDiLszY4?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;dragonfly website&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Significant bug fixes&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The following content only highlights the significant bug fixes in this release.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Fix the thread safety issue that occurs when constructing the DAG(Directed Acyclic Graph) during scheduling.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Fix the memory leak caused by the OpenTelemetry library.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Avoid hot reload when dynconfig refresh data from Manager.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Prevent concurrent download requests from causing failures in state machine transitions.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Use context.Background() to avoid stream cancel by dfdaemon.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Fix the database performance issue caused by clearing expired jobs when there are too many job records.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Reuse the gRPC connection pool to prevent redundant request construction.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;AI Infrastructure&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Model Spec&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The Dragonfly community is collaboratively defining the OCI Model Specification. OCI Model Specification aims to provide a standard way to package, distribute and run AI models in a cloud native environment. The goal of this specification is to package models in an OCI artifact to take advantage of OCI distribution and ensure efficient model deployment, refer to &lt;a href=&#34;https://github.com/CloudNativeAI/model-spec&#34;&gt;CloudNativeAI/model-spec&lt;/a&gt; for more details.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1872&#34; height=&#34;602&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54.jpg&#34; alt=&#34;OCI Model Specification image&#34; class=&#34;wp-image-122832&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54.jpg 1872w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-300x96.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-1024x329.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-768x247.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-900x289.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-1800x579.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-600x193.jpg 600w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-1200x386.jpg 1200w&#34; sizes=&#34;auto, (max-width: 1872px) 100vw, 1872px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1898&#34; height=&#34;1140&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33.jpg&#34; alt=&#34;node&#34; class=&#34;wp-image-122833&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33.jpg 1898w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-300x180.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-1024x615.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-768x461.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-900x541.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-1800x1081.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-333x200.jpg 333w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-666x400.jpg 666w&#34; sizes=&#34;auto, (max-width: 1898px) 100vw, 1898px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Support accelerated distribution of AI models in Hugging Face Hub(Git LFS)&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Distribute large files downloaded via the Git LFS protocol through Dragonfly P2P, refer to the &lt;a href=&#34;https://d7y.io/docs/next/operations/integrations/hugging-face/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1884&#34; height=&#34;882&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27.jpg&#34; alt=&#34;hugging face hub clusters&#34; class=&#34;wp-image-122834&#34; srcset=&#34;https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27.jpg 1884w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-300x140.jpg 300w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-1024x479.jpg 1024w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-768x360.jpg 768w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-900x421.jpg 900w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-1800x843.jpg 1800w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-427x200.jpg 427w, https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-854x400.jpg 854w&#34; sizes=&#34;auto, (max-width: 1884px) 100vw, 1884px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Maintainers&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The community has added four new Maintainers, hoping to help more contributors participate in the community.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/CormickKneey&#34;&gt;Han Jiang&lt;/a&gt;: He works for Kuaishou and will focus on the engineering work for Dragonfly.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yyzai384&#34;&gt;Yuan Yang&lt;/a&gt;: He works for Alibaba Group and will focus on the engineering work for Dragonfly.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Other&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;You can see &lt;a href=&#34;https://github.com/dragonflyoss/dragonfly/blob/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more details.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Links&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Dragonfly Website: &lt;a href=&#34;https://d7y.io/&#34;&gt;https://d7y.io/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Dragonfly Repository: &lt;a href=&#34;https://github.com/dragonflyoss/dragonfly&#34;&gt;https://github.com/dragonflyoss/dragonfly&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Dragonfly Client Repository: &lt;a href=&#34;https://github.com/dragonflyoss/client&#34;&gt;https://github.com/dragonflyoss/client&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Dragonfly Console Repository: &lt;a href=&#34;https://github.com/dragonflyoss/console&#34;&gt;https://github.com/dragonflyoss/console&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Dragonfly Charts Repository: &lt;a href=&#34;https://github.com/dragonflyoss/helm-charts&#34;&gt;https://github.com/dragonflyoss/helm-charts&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Dragonfly Monitor Repository: &lt;a href=&#34;https://github.com/dragonflyoss/monitoring&#34;&gt;https://github.com/dragonflyoss/monitoring&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;Dragonfly Github&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXczAcyjd5Qu6nerc3AXngCgi0AfzkqMdOA6wzgZdUz1c2GDgSng_Wy91-NIGQRJ_bOWYAjJZFkk3BFHaf-d9uPqX920mucQ88pqn-ZjlsdnEhjp1zYNqKoBkN5-uZPFp1qb5CNguyisB3AlKgQ-qTg?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;undefined&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;】&lt;p&gt;蜻蜓v2.2.0发布了！ 🎉🎉🎉 感谢发布此版本的&lt;a href=&#34;https://github.com/dragonflyoss/dragonfly/graphs/contributors&#34;&gt;贡献者&lt;/a&gt;，并欢迎您访问&lt;a href=&#34;https:/ /d7y.io/&#34;&gt;d7y.io&lt;/a&gt; 网站。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;用 Rust 编写的客户端&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;客户端采用Rust编写，具有保证内存安全、提高性能等优点。客户端是Dragonfly的子模块，参考&lt;a href=&#34;https://github.com/dragonflyoss/client&#34; &gt;dragonflyoss/客户端&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1848”高度=“952”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22.png&#34; alt=&#34;调度程序架构&#34;类=“wp-image-122830”srcset=“https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22.png 1848w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-300x155.png 300w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-1024x528.png 1024w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-768x396.png 768w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-900x464.png 900w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-1800x927.png 1800w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-388x200.png 388w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.51.22-776x400.png 776w“尺寸=”自动，（最大宽度：1848px ) 100vw, 1848px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1892”高度=“988”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11.jpg&#34; alt=&#34;第二个调度程序架构&#34;类=“wp-image-122831”srcset=“https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11.jpg 1892w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-300x157.jpg 300w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-1024x535.jpg 1024w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-768x401.jpg 768w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-194x102.jpg 194w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-388x204.jpg 388w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-900x470.jpg 900w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-1800x940.jpg 1800w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-383x200.jpg 383w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.52.11-766x400.jpg 766w“尺寸=”自动，（最大宽度：1892px）100vw，1892px“referrerpolicy=“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;客户端支持预取带宽速率限制&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;客户端现在支持预取请求的速率限制，这可以防止网络过载并减少与其他活动下载任务的竞争，从而提高整体系统性能。请参阅&lt;a href=&#34;https://d7y.io/docs/next/reference/configuration/client/dfdaemon/&#34;&gt;文档&lt;/a&gt;来配置 proxy.prefetchRateLimit 选项。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd_JKeiIvckyUpfVnZxu1FID0Wx5OvRwjtwyPrujwEAZbwQz_Fsx0Y68xJAwWW1 GfAhX5Ucmo4MWMr11YXi2RyeL-cLcLsiGRpslppU5WixIua3U3wMgYjE3b2_aSAKNXwR52CJ5IKzMzQ4WMV-HNw?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;code&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下图说明了客户端下载速率限制、上传速率限制和 prefectt 速率限制的用法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1600”高度=“507”src=“https://www.cncf.io/ wp-content/uploads/2024/12/dragonfly-1.png&#34; alt=&#34;速率限制&#34; class=&#34;wp-image-122828&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1.png 1600w，https://www.cncf.io/wp-content/uploads/2024/12/蜻蜓-1-300x95.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1-1024x324.png 1024w，https://www.cncf.io/wp-content/uploads/2024/12/dragonfly -1-768x243.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1-900x285.png 900w，https://www.cncf.io/wp-content/uploads/2024/12/dragonfly -1-600x190.png 600w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-1-1200x380.png 1200w“尺寸=”自动，（最大宽度：1600px）100vw，1600px“referrerpolicy=”无-推荐人&#34;&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;客户端支持盗取&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;如果用户将客户端配置为禁用共享，则会成为水蛭。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXdgF2CEn44vJsYdjvSfY-TrJiub66qGikQ14Np5NUXHBj6Jv8UG8EQ1CSiqsDc9 kc8xJJjU6rQWV9_tHKhjJB6U7-pw7QnMOm4NO7cefufbx-1KOEcLNwzsuOLI4kQUDEbtTeoTIPANKEC0lq0s2kY?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;code&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;优化 Nydus 处理大量小型 I/O 的客户端性能&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;添加 X-Dragonfly-Prefetch HTTP 标头。如果 X-Dragonfly-Prefetch 设置为 true 并且是范围请求，则客户端将预取整个任务。此功能允许 Nydus 控制哪些请求需要预取。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;客户端的 HTTP 代理添加独立的缓存，以减少对 gRPC 服务器的请求，从而降低请求延迟。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;增加RocksDB中的内存缓存大小并启用前缀搜索快速搜索片段元数据。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用具有硬件加速功能的 CRC-32-Castagnoli 算法，降低片段内容的哈希计算成本。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;复用 gRPC 连接进行下载并优化下载逻辑。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;定义P2P传输协议V2&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;定义P2P传输协议V2，使其更标准、更清晰、性能更好，参考&lt;a href=&#34;https://github.com/dragonflyoss/api&#34;&gt;dragonflyoss/api&lt;/a&gt; .&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;通过 P2P 预热增强港口集成&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dragonfly 改进了与 Harbor v2.13 的集成以预热图像，包括以下增强功能：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;支持预热多架构图像。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;用户可以选择预热范围进行多粒度预热。 （单个种子节点、所有种子节点、所有节点）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;用户可以指定调度程序集群 ID，用于将图像预热到所需的 Dragonfly 集群。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;请参阅&lt;a href=&#34;https://d7y.io/docs/next/advanced-guides/preheat/&#34;&gt;文档&lt;/a&gt;了解更多详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXewA_JXER16bnL16cxMfF5SsbVqQKXJe-x1UlWgGkio4grGXWXzPmiJP-ThiBey Y-DmMR5rQ37nNYXJpjAZSxQoRXaJVJu3dWNHkNdTdcTPDKx8-5SUibKfPX3vaAu-oRkoimlxvJiUbk_nMo8VqA?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;创建 P2P 提供商策略&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;任务管理器&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用户可以通过任务ID或下载URL搜索缓存任务的所有peer，并删除所选peer上的缓存，请参阅&lt;a href=&#34;https://d7y.io/docs/next/advanced-guides /任务管理器/&#34;&gt;文档&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1000”高度=“625”src=“https://www.cncf.io/ wp-content/uploads/2024/12/dragonfly-2.png&#34; alt=&#34;dragonfly 仪表板&#34; class=&#34;wp-image-122829&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-2.png 1000w，https://www.cncf.io/wp-content/uploads/2024/12/蜻蜓-2-300x188.png 300w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-2-768x480.png 768w，https://www.cncf.io/wp-content/uploads/2024/12/dragonfly -2-900x563.png 900w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-2-320x200.png 320w，https://www.cncf.io/wp-content/uploads/2024/12/dragonfly -2-640x400.png 640w&#34; 尺寸 = &#34;自动, (最大宽度: 1000px) 100vw，1000px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;同行经理&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;管理器将定期同步同行信息，并允许手动刷新。此外，它还会在管理控制台上显示同行的信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1000”嘿ght=&#34;625&#34; src=&#34;https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3.png&#34; alt=&#34;dragonfly 仪表板&#34; class=&#34;wp-image-122835&#34; srcset =“https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3.png 1000w， https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3-300x188.png 300w，https://www.cncf.io/wp-content/uploads/2024/12/dragonfly -3-768x480.png 768w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3-900x563.png 900w，https://www.cncf.io/wp-content/uploads/2024/12/dragonfly -3-320x200.png 320w, https://www.cncf.io/wp-content/uploads/2024/12/dragonfly-3-640x400.png 640w“尺寸=”自动，（最大宽度：1000px）100vw，1000px“referrerpolicy=”无-推荐人&#34;&gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;将主机名正则表达式和 CIDR 添加到集群范围以匹配客户端。&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;当客户端启动时，它会向 Manager 报告其主机名和 IP。然后，管理器根据集群范围配置将最匹配的集群（包括调度程序和种子节点）返回给客户端。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXeassw2tBI-EuCqqrxetTDYUim7S8ykPH8rN36KZG45VImOEeN80NtySU3L4o4c Zs18M6nECRug0pUvznOjdV-IBgRqdWamsVQ7XNDYARGwum5uX_FqaKl4-esB_OTs1Czmf0JXTVHC3qNNcJh3b84?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;在 Dragonfly 仪表板上创建集群&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;支持跨不同集群创建作业的分布式速率限制&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;用户可以在管理器控制台中配置跨不同集群的作业创建速率限制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf4xgjEQT6xXC6bIOXE6IkZOo3Mpg7Oz09-x9gF4VBAUvmTcc3di-qYPb-KapPm 1NtbX8TC79zICyuK1QeDpKSAOuO7ry7V8Gg15Mh2GMirpvhLOEFsbzyGGcSgYPIDPVCLmni9hUONCYmcW_MgZPM?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;在蜻蜓仪表板上创建集群&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;支持使用自签名证书预热镜像&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;预热需要调用容器注册表来解析映像清单并构建用于下载 Blob 的 URL。如果容器注册表使用自签名证书，用户可以在 Manager 的配置中配置自签名证书以调用容器注册表。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfELHDQL9aEEUY6fzvqpFCxNBLupzm3OrLBEpR6N0uavcDU1oSQ1JLDhanlq5Wo WuXxjQ5zsby9T1QA6dnTLgbp56LJEENgNkpg3z3dCa0GQvEjJhzhb_gck-V1HTnSRpi-Dq8fK2XiQI_rY6K-7vk?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;code&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;支持服务之间的 gRPC 调用 mTLS&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过在管理器、调度程序、种子对等点和对等点的配置中设置自签名证书，服务之间的 gRPC 调用将使用 mTLS。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;可观察性&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dragonfly推荐使用prometheus进行监控。 Prometheus 和 grafana 配置在 &lt;a href=&#34;https://github.com/dragonflyoss/monitoring/&#34;&gt;dragonflyoss/monitoring&lt;/a&gt; 存储库中维护。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;下面列出了 Grafana 仪表板：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong &gt;ID&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;链接&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;蜻蜓经理&lt;/td&gt;&lt;td&gt;15945&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/15945&#34;&gt;https://grafana.com/grafana/dashboards/15945&lt; /a&gt;&lt;/td&gt;&lt;td&gt;蜻蜓管理器的 Grafana 仪表板。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;蜻蜓调度程序&lt;/td&gt;&lt;td&gt;15944&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/15944&#34;&gt;https://grafana.com/grafana/dashboards/15944&lt; /a&gt;&lt;/td&gt;&lt;td&gt;用于 Dragonfly 调度程序的 Granafa 仪表板。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dragonfly客户端&lt;/td&gt;&lt;td&gt;21053&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/21053&#34;&gt;https://grafana.com/grafana/dashboards/21053&lt; /a&gt;&lt;/td&gt;&lt;td&gt;用于蜻蜓客户端和蜻蜓种子客户端的 Grafana 仪表板。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;蜻蜓种子客户端&lt;/td&gt;&lt;td&gt;21054&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/21054&#34;&gt;https://grafana.com/grafana/dashboards/21054 &lt;/a&gt;&lt;/td&gt;&lt;td&gt;蜻蜓种子客户端的 Grafana 仪表板。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdjuL8S1ZIPteu3suC7_iLrczTWsXwNFuvVF7Cl09aBYKfh6avbKYRy-R7LPbW6 0oiDUHLchTEJdZ75sos7dklsO8GAlSxSYTxSX7IofJC5pmTAx_uzTUIfhZ_1Uiwx0lZi1qqjku_3c8ti8Xw8DnQ?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;仪表板&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe2tR6QKSzIT2WJ0yPshOQcLT5Lf55e1crcTBKJVcy_9CaQOlYGM620UBTq7-RU DjeGZkTvRmIkeIS75HuDZzuRhTQALWfyLt9Y7kt8_KfmiChLRsoDYEA-njV__aYxKJMQO2pW6mwf1iMYRrX1Eq8?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;仪表板&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;坑道&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nydus v2.3.0 发布，更多信息请参考&lt;a href=&#34;https://github.com/dragonflyoss/nydus/releases/tag/v2.3.0&#34;&gt;Nydus 镜像服务 v2.3.0&lt;/a&gt;详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;构建器：支持 –parent-bootstrap 进行合并。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;builder/nydusd：支持批量块合并。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;nydusify/nydus-snapshotter：支持 OCI 引用类型。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;nydusify：支持远程图像导出/导入。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;nydusify：支持 –push-chunk-size 大尺寸图像。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;nydusd/nydus-snapshotter：支持基本故障转移和热升级。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;nydusd：支持fusedev的覆盖可写挂载。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;控制台&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;控制台 v0.2.0 发布，具有重新设计的 UI 和改进的交互流程。此外，还添加了更多功能页面，例如预热、任务管理器、PATs（个人访问令牌）管理器等。参考&lt;a href=&#34;https://d7y.io/docs/next/advanced-guides/ web-console/&#34;&gt;文档&lt;/a&gt;了解更多详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXeL2R4ixPm1lq42AAycdeyD0DkvK5QeffEwURKmAaAxRN9KL5Oa4L_puSAlGPzF y-JVp2NDTmU65EWz4qWo5XJqG-OMeeNqnlwkIlfEJ6f9TLuP8LMueLayMv7CnqQkjw4nl3TnQmOSqpJwjKpHCR4?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;cluster overvoew&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfuKv4SXl2LlU7oNdjYy8Z_s9dtEQIQt1M70EgViECkoxiPGFq1IkTThuOsvXjs eBXMQkC5lyJNXG04Awx84GV9T-fox9LN8doFJf1tVKDojrAljG3qHEjmxtk9fqLBvZ_zyA-NyVXQI6dP_G6JZb4?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;在仪表板上深入了解 cluster-1&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;文档&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;重构网站文档，让 Dragonfly 对用户来说更加简单实用，参考&lt;a href=&#34;https://d7y.io/&#34;&gt;d7y.io&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcKIeUzMXFvQNqXs-G2jhe3HSoaxEDHbG1l1d9USNFif78H3H-VFjbGqM06OY9g QiAcQ4O9Gmgwp8ODhM5Upwka71OGG6m76PqLOWrlC64rxDc4JeXHjUUeNB4C2X8FQWAeoX5UzUHvNl9IDiLszY4?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt=&#34;蜻蜓网站&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;重大错误修复&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;以下内容仅重点介绍此版本中的重大错误修复。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;修复调度时构建DAG（有向无环图）时出现的线程安全问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;修复 OpenTelemetry 库导致的内存泄漏。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;当 dynconfig 从 Manager 刷新数据时避免热重载。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;防止并发下载请求导致状态机转换失败。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;使用 context.Background() 避免 dfdaemon 取消流。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;修复作业记录过多时清除过期作业导致的数据库性能问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;重用 gRPC 连接池，防止冗余请求构造。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;人工智能基础设施&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;型号规格&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dragonfly 社区正在协作定义 OCI 模型规范。 OCI 模型规范旨在提供一种在云原生环境中打包、分发和运行 AI 模型的标准方法。该规范的目标是将模型打包在 OCI 工件中，以利用 OCI 分发并确保高效的模型部署，请参阅 &lt;a href=&#34;https://github.com/CloudNativeAI/model-spec&#34;&gt;CloudNativeAI/model-spec&lt;/a&gt; 了解更多详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1872”高度=“602”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54.jpg&#34; alt=&#34;OCI 模型规范图像&#34;类=“wp-image-122832”srcset=“https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54.jpg 1872w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-300x96.jpg 300w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-1024x329.jpg 1024w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-768x247.jpg 768w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-900x289.jpg 900w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-1800x579.jpg 1800w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-600x193.jpg 600w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.53.54-1200x386.jpg 1200w“尺寸=”自动，（最大宽度：1872px ) 100vw, 1872px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1898”高度=“1140”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33.jpg&#34; alt=&#34;节点&#34;类=“wp-image-122833”srcset=“https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33.jpg 1898w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-300x180.jpg 300w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-1024x615.jpg 1024w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-768x461.jpg 768w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-900x541.jpg 900w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-1800x1081.jpg 1800w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-333x200.jpg 333w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.54.33-666x400.jpg 666w“尺寸=”自动，（最大宽度：1898px ) 100vw, 1898px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;支持Hugging Face Hub(Git LFS)中AI模型的加速分发&lt;/strong&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;通过 Dragonfly P2P 分发通过 Git LFS 协议下载的大文件，参考&lt;a href=&#34;https://d7y.io/docs/next/operations/integrations/hugging-face/&#34;&gt;文档&lt;/a &gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class =“wp-block-image size-full”&gt;&lt;img加载=“lazy”解码=“异步”宽度=“1884”高度=“882”src=“https://www.cncf.io/ wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27.jpg&#34; alt=&#34;拥抱面部中心集群&#34;类=“wp-image-122834”srcset=“https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27.jpg 1884w，https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-300x140.jpg 300w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-1024x479.jpg 1024w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-768x360.jpg 768w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-900x421.jpg 900w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-1800x843.jpg 1800w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-427x200.jpg 427w， https://www.cncf.io/wp-content/uploads/2024/12/Screenshot-2024-12-28-at-10.55.27-854x400.jpg 854w“尺寸=”自动，（最大宽度：1884px ) 100vw, 1884px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;维护者&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;社区新增四位维护者，希望帮助更多贡献者参与社区。&lt;/​​p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/CormickKneey&#34;&gt;韩江&lt;/a&gt;：在快手工作，将专注于 Dragonfly 的工程工作。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yyzai384&#34;&gt;Yuan Yang&lt;/a&gt;：供职于阿里巴巴集团，将专注于 Dragonfly 的工程工作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;您可以查看&lt;a href=&#34;https://github.com/dragonflyoss/dragonfly/blob/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;了解更多详细信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;链接&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;蜻蜓网站：&lt;a href=&#34;https://d7y.io/&#34;&gt;https://d7y.io/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Dragonfly 存储库：&lt;a href=&#34;https://github.com/dragonflyoss/dragonfly&#34;&gt;https://github.com/dragonflyoss/dragonfly&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Dragonfly 客户端存储库：&lt;a href=&#34;https://github.com/dragonflyoss/client&#34;&gt;https://github.com/dragonflyoss/client&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Dragonfly 控制台存储库：&lt;a href=&#34;https://github.com/dragonflyoss/console&#34;&gt;https://github.com/dragonflyoss/console&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Dragonfly 图表存储库：&lt;a href=&#34;https://github.com/dragonflyoss/helm-charts&#34;&gt;https://github.com/dragonflyoss/helm-charts&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Dragonfly 监控存储库：&lt;a href=&#34;https://github.com/dragonflyoss/monitoring&#34;&gt;https://github.com/dragonflyoss/monitoring&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;&lt;strong&gt;蜻蜓 Github&lt;/strong&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXczAcyjd5Qu6nerc3AXngCgi0AfzkqMdOA6wzgZdUz1c2GDgSng_Wy91-NIGQRJ _bOWYAjJZFkk3BFHaf-d9uPqX920mucQ88pqn-ZjlsdnEhjp1zYNqKoBkN5-uZPFp1qb5CNguyisB3AlKgQ-qTg?key=UynhpGrncyj7b1n4GoP9ebHd&#34; alt =“未定义”referrerpolicy =“no-referrer”&gt;&lt;/figure&gt;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;height:80px&#34; aria-hidden=&#34;true&#34; class=&#34;wp-block-spacer is-style-80-120&#34;&gt;&#xA;&lt;/div&gt;</description>
      <pubDate>Mon, 06 Jan 2025 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>