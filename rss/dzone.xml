<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Effective Methods to Diagnose and Troubleshoot CPU Spikes in Java Applications】Java 应用程序中 CPU 峰值诊断和故障排除的有效方法</title>
      <link>https://dzone.com/articles/methods-to-diagnose-and-troubleshoot-cpu-spikes</link>
      <description>【&lt;p&gt;CPU spikes are one of the most common performance challenges faced by Java applications. While traditional APM (Application Performance Management) tools provide high-level insights into overall CPU usage, they often fall short of identifying the root cause of the spike. APM tools usually can’t pinpoint the exact code paths causing the issue. This is where &lt;strong&gt;non-intrusive&lt;/strong&gt;, thread-level analysis proves to be much more effective. In this post, I’ll share a few practical methods to help you diagnose and resolve CPU spikes without making changes in your production environment.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Intrusive vs Non-Intrusive Approach: What Is the Difference?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3&gt;&lt;strong&gt;Intrusive Approach&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Intrusive approaches involve making changes to the application’s code or configuration, such as enabling detailed profiling, adding extra logging, or attaching performance monitoring agents. These methods can provide in-depth data, but they come with the risk of affecting the application’s performance and may not be suitable for production environments due to the added overhead.&lt;/p&gt;】&lt;p&gt;CPU 峰值是 Java 应用程序面临的最常见的性能挑战之一。虽然传统的 APM（应用程序性能管理）工具可以提供对总体 CPU 使用情况的高级洞察，但它们通常无法识别峰值的根本原因。 APM 工具通常无法查明导致问题的确切代码路径。这就是&lt;strong&gt;非侵入式&lt;/strong&gt;、线程级分析被证明更为有效的地方。在这篇文章中，我将分享一些实用方法来帮助您诊断和解决 CPU 峰值，而无需更改生产环境。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;侵入式与非侵入式方法：有什么区别？&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3&gt;&lt;strong&gt;侵入式方法&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;侵入式方法涉及对应用程序的代码或配置进行更改，例如启用详细的分析、添加额外的日志记录或附加性能监控代理。这些方法可以提供深入的数据，但存在影响应用程序性能的风险，并且由于增加的开销而可能不适合生产环境。&lt;/p&gt;</description>
      <pubDate>Tue, 05 Nov 2024 14:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Storybook: A Developer’s Secret Weapon】故事书：开发人员的秘密武器</title>
      <link>https://dzone.com/articles/storybook-a-developers-secret-weapon</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In my experience, Storybook has been a game-changer as a front-end developer who has mainly relied on &lt;a href=&#34;https://dzone.com/articles/jest-tutorial-for-selenium-javascript-testing-with&#34;&gt;Jest&lt;/a&gt;, Mocha, and Chai to get the basic testing working for the components I&#39;ve built — learning about Storybook has been an eye-opener. It&#39;s one of those tools that once you&#39;ve used you wonder how you managed without it. The ability to visualize components in isolation has streamlined our development process, making collaboration between devs and designers seamless.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;That said, I’ve seen some developers shy away from Storybook, citing the extra setup and maintenance as a downside. But here’s why I disagree: once you get past the initial integration, the time saved outweighs the setup cost in the long run. In this article, I would like to shed some light on the integration process and showcase some features that are most beneficial when using Storybook.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;根据我的经验，对于主要依赖 &lt;a href=&#34;https://dzone.com/articles/jest-tutorial-for 的前端开发人员来说，Storybook 已经改变了游戏规则-selenium-javascript-testing-with&#34;&gt;Jest&lt;/a&gt;、Mocha 和 Chai 对我构建的组件进行基本测试 - 了解 Storybook 让人大开眼界。它是一种工具，一旦您使用过，您就会想知道如果没有它，您将如何管理。独立可视化组件的能力简化了我们的开发流程，使开发人员和设计人员之间的协作变得无缝。 &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;也就是说，我看到一些开发人员回避 Storybook，认为额外的设置和维护是一个缺点。但我不同意的原因是：一旦完成了最初的集成，从长远来看，节省的时间超过了设置成本。在本文中，我想阐明集成过程并展示使用 Storybook 时最有用的一些功能。&lt;/p&gt;</description>
      <pubDate>Tue, 05 Nov 2024 20:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Licenses With Daily Time Fencing】每日时间围栏许可证</title>
      <link>https://dzone.com/articles/licenses-with-daily-time-fencing</link>
      <description>【&lt;p&gt;Despite useful features offered by software, sometimes software pricing and packaging repel consumers and demotivate them to even take the first step of evaluation. Rarely, we have seen software/hardware used for the full 24 hours of a day but still, as a consumer, I am paying for the 24 hours of the day. At the same time, as a cloud software vendor, I know my customer is not using cloud applications for 24 hours but still, I am paying the infrastructure provider for 24 hours.&lt;/p&gt;&#xA;&lt;p&gt;On the 23rd of July, 2024, we brainstormed about the problem and identified a solution. License with daily time fencing can help consumers by offering them a cheaper license and can also help ISV in infrastructure demand forecasting and implementing eco-design.&lt;/p&gt;】&lt;p&gt;尽管软件提供了有用的功能，但有时软件的定价和包装会令消费者望而却步，甚至阻碍他们迈出评估的第一步。我们很少看到软件/硬件全天 24 小时都在使用，但作为消费者，我仍然为全天 24 小时付费。同时，作为云软件供应商，我知道我的客户不是 24 小时使用云应用程序，但我仍然向基础设施提供商支付 24 小时费用。&lt;/p&gt;&#xA;&lt;p&gt;2024 年 7 月 23 日，我们针对该问题进行了集思广益并确定了解决方案。具有每日时间限制的许可证可以通过为消费者提供更便宜的许可证来帮助他们，还可以帮助 ISV 进行基础设施需求预测和实施生态设计。&lt;/p&gt;</description>
      <pubDate>Tue, 05 Nov 2024 17:00:06 +0000</pubDate>
    </item>
    <item>
      <title>【Cost Optimization Strategies for Managing Large-Scale Open-Source Databases】管理大规模开源数据库的成本优化策略</title>
      <link>https://dzone.com/articles/cost-optimization-large-scale-open-source-dbs</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In today’s world where data drives everything, managing large-scale databases and their security is both a necessity and a challenge. A few factors that organizations consider when choosing databases are primary are its cost, flexibility, and support from hosting providers. An &lt;a href=&#34;https://dzone.com/articles/the-future-trends-driving-open-source-database-pro&#34;&gt;open-source database&lt;/a&gt; is your best bet for many reasons. As organizations are looking for more and more open-source products to run their enterprise business, this gives them greater flexibility and cost-effectiveness. Achieving lower costs while maintaining high-performance databases is critical. Most organizations are now adopting open-source databases for some projects.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;There are multiple factors that one should consider when picking an open-source database. Below are some options that can be adapted to achieve effective management of large-scale open-source databases while keeping the costs in control.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;在数据驱动一切的当今世界，管理大型数据库及其安全既是必要的，也是挑战。组织在选择数据库时考虑的几个主要因素是其成本、灵活性和托管提供商的支持。出于多种原因，&lt;a href=&#34;https://dzone.com/articles/the-future-trends-driven-open-source-database-pro&#34;&gt;开源数据库&lt;/a&gt;是您的最佳选择。随着组织正在寻找越来越多的开源产品来运行其企业业务，这为他们提供了更大的灵活性和成本效益。在维持高性能数据库的同时降低成本至关重要。大多数组织现在都在某些项目中采用开源数据库。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;选择开源数据库时应考虑多种因素。以下是一些可用于实现大规模开源数据库的有效管理，同时控制成本的选项。&lt;/p&gt;</description>
      <pubDate>Tue, 05 Nov 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>【Build Retrieval-Augmented Generation (RAG) With Milvus】使用 Milvus 构建检索增强生成 (RAG)</title>
      <link>https://dzone.com/articles/build-rag-with-milvus</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;It&#39;s no secret that traditional &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-large-language-models&#34;&gt;large language models (LLMs)&lt;/a&gt; often hallucinate — generate incorrect or nonsensical information — when asked knowledge-intensive questions requiring up-to-date information, business, or domain knowledge. This limitation is primarily because most LLMs are trained on publicly available information, not your organization&#39;s internal knowledge base or proprietary custom data. This is where &lt;a href=&#34;https://dzone.com/articles/optimizing-generative-ai-with-retrieval-augmented&#34;&gt;retrieval-augmented generation (RAG)&lt;/a&gt;, a model introduced by&lt;a href=&#34;https://arxiv.org/abs/2005.11401&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&amp;nbsp;Meta AI researchers&lt;/a&gt;, comes in.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;RAG addresses an LLM&#39;s limitation of over-relying on pre-trained data for output generation by combining parametric memory with non-parametric memory through vector-based information retrieval techniques. Depending on the scale, this vector-based information retrieval technique often works with vector databases to enable fast, personalized, and accurate similarity searches. In this guide, you&#39;ll learn how to build a retrieval-augmented generation (RAG) with Milvus.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;传统的&lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-large-language-models&#34;&gt;大型语言模型 (LLM)&lt;/a 已不是什么秘密&gt; 当被问到需要最新信息、业务或领域知识的知识密集型问题时，经常产生幻觉——生成不正确或无意义的信息。这种限制主要是因为大多数法学硕士接受的是公开信息的培训，而不是您组织的内部知识库或专有的自定义数据。这就是&lt;a href=&#34;https://dzone.com/articles/optimizing-generative-ai-with-retrieval-augmented&#34;&gt;检索增强生成(RAG)&lt;/a&gt;，这是&lt;a href引入的模型=&#34;https://arxiv.org/abs/2005.11401&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;元人工智能研究人员&lt;/a&gt;进来了。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;RAG 通过基于向量的信息检索技术将参数内存与非参数内存相结合，解决了法学硕士过度依赖预训练数据来生成输出的限制。根据规模的不同，这种基于矢量的信息检索技术通常与矢量数据库配合使用，以实现快速、个性化和准确的相似性搜索。在本指南中，您将学习如何使用 Milvus 构建检索增强生成 (RAG)。&lt;/p&gt;</description>
      <pubDate>Tue, 05 Nov 2024 19:00:06 +0000</pubDate>
    </item>
    <item>
      <title>【Organizing Logging Between the Three IBM App Connect Form Factors】在三种 IBM App Connect 外形规格之间组织日志记录</title>
      <link>https://dzone.com/articles/logging-between-ibm-app-connect-form-factors</link>
      <description>【&lt;p&gt;The App Connect product enables you to integrate anything to anything. Its core routing and transformation engine enables you to inspect and transform messages from a wide variety of industry-standard and custom message models. But with great power can come complexity! Being generic and having the ability to run your integration flows on different form factors can give you a lot of options. This article aims to help you coordinate your &lt;a href=&#34;https://dzone.com/refcardz/log-management&#34;&gt;logging strategy&lt;/a&gt; across these different form factors and to clarify where and how you can get access to the more common form of logging across all the form factors.&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;Form Factors&lt;/h2&gt;&#xA;&lt;p&gt;The App Connect runtime runs on 3 distinct form factors, all capable of running BAR files containing Integration Flows. These BARs can be moved between each form factor. You can create a BAR file using the ACE Toolkit or the App Connect Designer UI.&lt;/p&gt;】&lt;p&gt;App Connect 产品使您能够将任何东西集成到任何东西。其核心路由和转换引擎使您能够检查和转换来自各种行业标准和自定义消息模型的消息。但强大的力量也会带来复杂性！通用性并能够在不同的外形尺寸上运行集成流程可以为您提供很多选择。本文旨在帮助您跨这些不同的外形尺寸协调您的&lt;a href=&#34;https://dzone.com/refcardz/log-management&#34;&gt;日志记录策略&lt;/a&gt;，并阐明您可以在何处以及如何访问跨所有外形尺寸的更常见的日志记录形式。 &lt;/p&gt;&#xA;&lt;h2&gt;外形尺寸&lt;/h2&gt;&#xA;&lt;p&gt;App Connect 运行时在 3 种不同的外形尺寸上运行，所有外形尺寸都能够运行包含集成流的 BAR 文件。这些 BAR 可以在每个外形规格之间移动。您可以使用 ACE Toolkit 或 App Connect Designer UI 创建 BAR 文件。&lt;/p&gt;</description>
      <pubDate>Tue, 05 Nov 2024 13:00:11 +0000</pubDate>
    </item>
    <item>
      <title>【Harnessing GenAI for Enhanced Agility and Efficiency During Planning Phase】利用 GenAI 增强规划阶段的敏捷性和效率</title>
      <link>https://dzone.com/articles/genai-for-enhanced-agility-and-efficiency</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Project planning is one of the first steps involved in any form of &lt;a href=&#34;https://dzone.com/articles/a-complete-guide-to-project-management-life-cycle&#34;&gt;project management&lt;/a&gt;. In this &lt;a href=&#34;https://dzone.com/articles/what-is-agile-methodology-dzone&#34;&gt;Agile&lt;/a&gt; era, whatever flavor of Agile it may be, programs and projects undergo a cadence for planning on the set-up of intentions for the next phase of delivering value to customers.&lt;/p&gt;&#xA;&lt;p&gt;In this generation of &lt;a href=&#34;https://dzone.com/articles/introduction-generative-ai-empowering-enterprises&#34;&gt;GenAI&lt;/a&gt;, there is an opportunity to catalyze productivity not just by reducing routine tasks through manual intervention, but also by providing key insights from analyzing the performance of previous delivery cycles and real-time progress tracking.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;项目规划是任何形式的&lt;a href=&#34;https://dzone.com/articles/a-complete-guide-to-project-management-life- 涉及的首要步骤之一周期“项目管理”。在这个&lt;a href=&#34;https://dzone.com/articles/what-is-agile-methodology-dzone&#34;&gt;敏捷&lt;/a&gt;时代，无论敏捷的风格是什么，程序和项目都会经历一种节奏：规划下一阶段为客户提供价值的意图。&lt;/p&gt;&#xA;&lt;p&gt;在这一代&lt;a href=&#34;https://dzone.com/articles/introduction-generative-ai-empowering-enterprises&#34;&gt;GenAI&lt;/a&gt;中，有机会提高生产力，而不仅仅是通过减少通过手动干预来执行日常任务，还可以通过分析先前交付周期的绩效和实时进度跟踪来提供关键见解。&lt;/p&gt;</description>
      <pubDate>Tue, 05 Nov 2024 18:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【How to Read JSON Files in Java Using the Google Gson Library】如何使用 Google Gson 库在 Java 中读取 JSON 文件</title>
      <link>https://dzone.com/articles/how-to-read-json-files-in-java-using-google-gson-l</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;JSON files are commonly used these days for sending data to applications. Be it a web application, an API, or a mobile application, JSON is used by almost every team as it is lightweight and self-describing.&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;Due to its high popularity and wide usage, it is important to understand and know what JSON is, its features, its different data types, file formats, etc. In this blog, we will be learning about JSON, its features, data types, and file formats. We will then continue to learn to read JSON files in Java using the Google Gson library.&lt;/p&gt;】&lt;p data-selectable-paragraph=&#34;&#34;&gt;如今，JSON 文件通常用于向应用程序发送数据。无论是 Web 应用程序、API 还是移动应用程序，几乎每个团队都使用 JSON，因为它是轻量级且自描述的。&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;由于其高流行度和广泛使用，了解和了解 JSON 是什么、它的特性、它的不同数据类型、文件格式等非常重要。在本博客中，我们将了解 JSON 及其功能、数据类型和文件格式。然后我们将继续学习使用 Google Gson 库在 Java 中读取 JSON 文件。&lt;/p&gt;</description>
      <pubDate>Tue, 05 Nov 2024 16:00:06 +0000</pubDate>
    </item>
    <item>
      <title>【Two-Pass Huffman in Blocks of 2 Symbols: Golang Implementation】2 个符号块中的两次霍夫曼：Golang 实现</title>
      <link>https://dzone.com/articles/two-pass-huffman-in-blocks-of-2-symbols-golang</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Data compression is perhaps the most important feature of modern computation, enabling efficient storage and transmission of information. One of the most famous &lt;a href=&#34;https://dzone.com/articles/crunch-time-10-best-compression-algorithms&#34;&gt;compression algorithms&lt;/a&gt; is Huffman coding. In this post, we are going to introduce an advanced version: a block-based, 2-symbol, two-pass Huffman algorithm in &lt;a href=&#34;https://dzone.com/articles/golang-tutorial-learn-golang-by-examples&#34;&gt;Golang&lt;/a&gt;. It can bring further enhancements regarding the increase of compression efficiency in specific types of data, as it will take into consideration pairs of symbols instead of individual ones.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Algorithm Overview&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;The two-pass Huffman algorithm in blocks of 2 symbols is an extension of the classic Huffman coding. It processes input data in pairs of bytes, potentially offering better compression ratios for certain types of data. Let’s break down the encoding process step by step:&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;数据压缩可能是现代计算最重要的功能，它可以实现信息的高效存储和传输。最著名的&lt;a href=&#34;https://dzone.com/articles/crunch-time-10-best-compression-algorithms&#34;&gt;压缩算法&lt;/a&gt;是霍夫曼编码。在这篇文章中，我们将介绍一个高级版本：&lt;a href=&#34;https://dzone.com/articles/golang-tutorial-learn-golang 中基于块的、2符号、两遍霍夫曼算法-by-examples&#34;&gt;Golang&lt;/a&gt;。它可以进一步增强特定类型数据的压缩效率，因为它将考虑符号对而不是单个符号。&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;算法概述&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;2 个符号块中的两遍霍夫曼算法是经典霍夫曼编码的扩展。它以字节对的形式处理输入数据，可能为某些类型的数据提供更好的压缩比。让我们一步步分解编码过程：&lt;/p&gt;</description>
      <pubDate>Tue, 05 Nov 2024 15:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Jakarta WebSocket Essentials: A Guide to Full-Duplex Communication in Java】Jakarta WebSocket Essentials：Java 全双工通信指南</title>
      <link>https://dzone.com/articles/jakarta-websocket-essentials</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Have you ever wondered what happens when you send a message to friends or family over the Internet? It’s not just magic — there’s a fascinating technology at work behind the scenes called &lt;a href=&#34;https://dzone.com/articles/what-the-heck-are-websockets&#34;&gt;WebSocket&lt;/a&gt;. This powerful protocol enables real-time communication, allowing messages to flow seamlessly between users.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Join us as we dive deeper into the world of WebSocket! We’ll explore how this technology operates and even create a simple application together to see it in action. Get ready to unlock the potential of real-time communication!&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;您有没有想过当您通过互联网向朋友或家人发送消息时会发生什么？这不仅仅是魔法，还有一种令人着迷的技术在幕后工作，称为 &lt;a href=&#34;https://dzone.com/articles/what-the-heck-are-websockets&#34;&gt;WebSocket&lt;/a&gt;。这种强大的协议支持实时通信，允许消息在用户之间无缝流动。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;加入我们，深入探索 WebSocket 的世界！我们将探索这项技术的运作方式，甚至一起创建一个简单的应用程序来查看它的实际效果。准备好释放实时通信的潜力！&lt;/p&gt;</description>
      <pubDate>Tue, 05 Nov 2024 22:00:02 +0000</pubDate>
    </item>
  </channel>
</rss>