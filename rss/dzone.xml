<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【How to Reorganize and Rebuild Indexes in MS SQL?】如何在MS SQL中重组和重建索引？</title>
      <link>https://dzone.com/articles/reorganize-and-rebuild-indexes-in-ms-sql</link>
      <description>【&lt;p&gt;Indexes are the objects of MS SQL database files. These schema objects act like a table of contents of the database. These are used to improve the data retrieval operations on an MS SQL database table.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;However, with time, the table can get fragmented due to continuous &lt;code&gt;INSERT&lt;/code&gt; and &lt;code&gt;UPDATE&lt;/code&gt; operations. Also, like other objects, indexes are also prone to corruption. If the indexes get corrupted, you can receive errors like:&lt;/p&gt;】&lt;p&gt;索引是MS SQL数据库文件的对象。这些架构对象像数据库的目录一样起作用。这些用于改善MS SQL数据库表上的数据检索操作。 &lt;/p&gt;&#xA;&lt;p&gt;但是，随着时间的推移，由于连续&lt;code&gt;插入&lt;/code&gt;和&lt;code&gt;更新&lt;/code&gt;操作，该表可能会被分散。同样，像其他对象一样，索引也容易发生腐败。如果索引损坏，您可以收到以下错误：&lt;/p&gt;</description>
      <pubDate>Wed, 12 Feb 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Loading XML into MongoDB】将XML加载到MongoDB中</title>
      <link>https://dzone.com/articles/loading-xml-into-mongodb</link>
      <description>【&lt;p&gt;There are many situations where you may need to export data from XML to MongoDB.&lt;/p&gt;&#xA;&lt;p&gt;Despite the fact that XML and JSON(B) formats used in &lt;a href=&#34;https://dzone.com/articles/mongodb-user-cases-pros-and-cons&#34;&gt;MongoDB&lt;/a&gt; have much in common, they also have a number of differences that make them non-interchangeable.&lt;/p&gt;】&lt;p&gt;在许多情况下，您可能需要将数据从XML导出到MongoDB。&lt;/p&gt;&#xA;&lt;p&gt;尽管事实是&lt;a href =“ https://dzone.com/articles/mongodb-user-cases-pros-and-cons in &lt;a href =”中使用的XML和JSON（B）格式在很大程度上，它们也有许多差异，使它们变得不可交流。&lt;/p&gt;</description>
      <pubDate>Wed, 12 Feb 2025 20:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【The Right ETL Architecture for Multi-Source Data Integration】多源数据集成的正确ETL体系结构</title>
      <link>https://dzone.com/articles/etl-architecture-multi-source-data-integration</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;When building ETL (Extract, Transform, Load) pipelines for marketing analytics, customer insights, or similar data-driven use cases, there are two primary architectural approaches: dedicated pipelines per source and common pipeline with integration, core, and sink layers.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Each has its distinct non-functional trade-offs in terms of maintainability, performance, cost efficiency, and operational visibility.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;在构建ETL（提取，转换，负载）以进行营销分析，客户见解或类似数据驱动的用例时，有两种主要的架构方法：每个源的专用管道和与集成的通用管道有关，核心和水槽层。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;在可维护性，性能，成本效率和操作可见性方面，每个人都有独特的非功能权衡。&lt;/p&gt;</description>
      <pubDate>Wed, 12 Feb 2025 17:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Cloud Security Is a Data Problem】云安全是数据问题</title>
      <link>https://dzone.com/articles/cloud-security-is-a-data-problem</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;More businesses than ever rely on cloud computing technologies to deliver reliable services at scale. With this shift to cloud-native technologies, microservices, and abstraction, the battle for security has shifted with it. Cloud security is no longer about traditional firewall rules and access control — it&#39;s fundamentally a data problem.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;&lt;strong&gt;The Evolving Complexity of Modern Cloud Infrastructure&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Today&#39;s scaling technology companies operate in a multifaceted environment that includes multiple cloud providers, numerous infrastructure vendors, and hundreds of interconnected microservices. Each component has its own set of configurations, policies, and monitoring requirements. In this new environment, the days of securing infrastructure through a few perimeter and DMZ firewalls are long gone.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;比以往任何时候都更多的业务依靠云计算技术来大规模提供可靠的服务。随着这种转移到云本地技术，微服务和抽象的转变，安全之战随之而来。云安全不再是传统的防火墙规则和访问控制 - 从根本上是数据问题。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt; &lt;strong&gt;现代云基础架构的不断发展的复杂性&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;今天的扩展技术公司在多方面的环境中运营，其中包括多个云提供商，众多基础架构供应商和数百个相互联系的微服务。每个组件都有自己的一组配置，策略和监视要求。在这种新环境中，通过几个外围和DMZ防火墙确保基础设施的日子早已消失。&lt;/p&gt;</description>
      <pubDate>Wed, 12 Feb 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Your Network, Your Rules: Take Charge With Own DNS】您的网络，您的规则：用自己的DNS负责</title>
      <link>https://dzone.com/articles/private-dns-nameserver</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;Maintaining online privacy has become a top priority for individuals and organizations alike. With the ever-present risk of data breaches and internet surveillance, it&#39;s essential to have control over your network&#39;s online activity. One often overlooked yet crucial aspect of this control is the way you resolve domain names on your devices.&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;Currently, relying on public DNS providers can compromise your online privacy, as they may track user activity and device usage. This raises essential questions about privacy and anonymity in the digital realm from malicious actors such as spammers, phishing attackers, and social engineers. Fortunately, there is a more private and cost-effective alternative to traditional services: &lt;strong&gt;self-hosted DNS nameservers&lt;/strong&gt;.&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt;维护在线隐私已成为个人和组织的重中之重。凭借存在数据泄露和互联网监视的风险，控制网络的在线活动至关重要。这个控制的一个经常被忽视但至关重要的方面是您在设备上解决域名的方式。&lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;当前，依靠公共DNS提供商可能会损害您的在线隐私，因为它们可能会跟踪用户活动和设备使用情况。这就引发了有关垃圾邮件发送者，网络钓鱼攻击者和社会工程师等恶意行为者的数字领域隐私和匿名性的基本问题。幸运的是，传统服务有一个更私密且具有成本效益的替代方法：&lt;strong&gt;自托管DNS名称服务器&lt;/strong&gt;。&lt;/p&gt;</description>
      <pubDate>Wed, 12 Feb 2025 15:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Build Serverless Applications Using Rust on AWS Lambda】在AWS lambda上使用Rust构建无服务器应用程序</title>
      <link>https://dzone.com/articles/build-serverless-applications-rust-aws-lambda</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Serverless computing has changed how teams build apps that scale effortlessly. But here’s the catch: popular tools like Node.js and Python often face delays when starting up, hog memory, or just don’t perform as smoothly as needed. That’s where Rust shines. Built for lightning speed and reliability without the bulk, it’s quickly becoming the secret weapon for serverless setups.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;In this walkthrough, we’ll teach you how to build and launch serverless functions using &lt;a href=&#34;https://dzone.com/articles/rust-programming-language-a-beginners-guide&#34;&gt;Rust&lt;/a&gt; on AWS Lambda.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;无服务器计算改变了团队毫不费力地构建应用程序的应用程序。但是，这是捕获量：诸如Node.js和Python之类的流行工具在启动时经常会面临延迟，猪内存，或者只是无法按需表现顺利。那就是生锈的地方。它是为了闪电速度和可靠性而无需大量的，它很快就成为无服务器设置的秘密武器。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;在本演练中，我们将教您如何使用&lt;a href =“ https://dzone.com/articles/rust-programming-language-a-beginners-指南“&gt; Rust &lt;/a&gt;在AWS Lambda上。 &lt;/p&gt;</description>
      <pubDate>Wed, 12 Feb 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【A Comprehensive Guide to Building and Debugging Apache Doris】构建和调试Apache Doris的综合指南</title>
      <link>https://dzone.com/articles/guide-to-building-and-debugging-apache-doris</link>
      <description>【&lt;p&gt;Apache Doris, a high-performance, real-time analytical database, boasts an impressive underlying architecture and code design. For developers, mastering source code compilation and debugging is key to understanding Doris’s core. However, the build process involves multiple toolchains and dependency configurations, and during debugging, you may encounter various complex issues that can leave beginners feeling overwhelmed.&lt;/p&gt;&#xA;&lt;p&gt;This article walks you through the process from source code to runtime, providing a detailed analysis of Apache Doris’s compilation and debugging procedures. From environment setup and code checkout to troubleshooting common issues, we combine practical examples to help you quickly get started with Doris development and debugging.&amp;nbsp;&lt;/p&gt;】&lt;p&gt; Apache Doris是一种高性能的实时分析数据库，拥有令人印象深刻的基础体系结构和代码设计。对于开发人员而言，掌握源代码编译和调试是了解多丽丝核心的关键。但是，构建过程涉及多个工具链和依赖性配置，在调试期间，您可能会遇到各种复杂的问题，这些问题可能使初学者感到不知所措。&lt;/p&gt;&#xA;&lt;p&gt;本文将为您提供从源代码到运行时的过程，对Apache Doris的汇编和调试过程进行了详细的分析。从环境设置和代码结帐到对常见问题进行故障排除，我们结合了实用的示例，以帮助您快速开始进行多丽丝开发和调试。 &lt;/p&gt;</description>
      <pubDate>Wed, 12 Feb 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Rediscovering Angular: Modern Advantages and Technical Stack】重新发现角度：现代优势和技术堆栈</title>
      <link>https://dzone.com/articles/angular-advantages-and-technical-stack</link>
      <description>【&lt;p&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;There are a lot of good front-end frameworks nowadays. We, front-end engineers, are spoilt for choice. Some&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;of them&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;offer&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;great&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;performance, and others&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;offer&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;huge&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;community support and ready-to-go solutions.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;If we&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;take&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;a&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;look at this picture, we will see that two frameworks are dominant in the scene — &lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/vuejs-vs-react-application-features-use-cases&#34;&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;React and VueJS&lt;/span&gt;&lt;/a&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;.&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span data-proserver spaces =“ true”&gt;如今有很多好的前端框架。我们的前端工程师被宠坏了。其中一些&lt;/span&gt; &lt;span data-proserver spaces =“ true”&gt; &lt;/span&gt; &lt;span data data-proserver spaces =“ true”&gt; geling &lt;/span&gt; &lt;span data data-data data-proserver spaces =“ true “&gt;出色&lt;/span&gt; &lt;span data-proserver spaces =“ true”&gt;性能，而其他&lt;/span&gt; &lt;span data-data-proserver spaces =“ true”&gt; geling &lt;/span&gt; &lt;span data data data data-preserver- spaces =“ true”&gt; &lt;/span&gt; &lt;span data-proserver spaces =“ true”&gt;巨大&lt;/span&gt; &lt;span data-data-proserver spaces =“ true”&gt;社区支持和即时启用解决方案。 &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;span data-proserver spaces =“ true”&gt;如果我们&lt;/span&gt; &lt;span data data-preserver spaces =“ true”&gt; take &lt;/span&gt; &lt;span data data data-proserver spaces =“ true”&gt; &lt;/span&gt; &lt;span data-proserver spaces =“ true”&gt; &lt;/span&gt; &lt;span data-pleserver spaces =“ true”&gt;看这张照片，我们将看到两个框架在场景中占主导地位 - &lt;/span&gt; &lt;a href =“ https://dzone.com/articles/vuejs-vs-vs-react-application-features-use-cases”&gt; &lt;span data data-proserver-spaces =“ true”&gt; react and vuejs &lt; /span&gt; &lt;/a&gt; &lt;span data-proserver spaces =“ true”&gt;。&lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 12 Feb 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Goose Migrations for Smooth Database Changes】鹅迁移以进行流畅的数据库更改</title>
      <link>https://dzone.com/articles/goose-as-crucial-tool-for-your-service</link>
      <description>【&lt;p&gt;Hello, mate!&lt;/p&gt;&#xA;&lt;p&gt;Today, let’s talk about what database migrations are and why they’re so important. In today’s world, it’s no surprise that any changes to a database should be done carefully and according to a specific process. Ideally, these steps would be integrated into our CI/CD pipeline so that everything runs automatically.&lt;/p&gt;】&lt;p&gt;你好，伴侣！&lt;/p&gt;&#xA;&lt;p&gt;今天，让我们来谈谈哪些数据库迁移以及它们如此重要的原因。在当今的世界中，应根据特定过程仔细进行数据库的任何更改，这也就不足为奇了。理想情况下，这些步骤将集成到我们的CI/CD管道中，以便一切自动运行。&lt;/p&gt;</description>
      <pubDate>Wed, 12 Feb 2025 21:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【USA PATRIOT Act vs SecNumCloud: Which Model for the Future?】美国爱国者法案与Secnumcloud：未来哪种型号？</title>
      <link>https://dzone.com/articles/usa-patriot-act-vs-secnumcloud-future-model</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;On one side, U.S. laws expand data access in the name of national security. On the other hand, French SecNumCloud ensures digital independence for European businesses. Let’s break down the implications of these two models on cybersecurity, compliance, and the protection of critical infrastructure.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Part I - Context and Challenges of Data Sovereignty&lt;/h2&gt;&#xA;&lt;h3 dir=&#34;ltr&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;The USA PATRIOT Act and the French SecNumCloud framework reflect two opposing visions of digital data management. The United States prioritizes national security, with laws allowing extraterritorial access to data stored by American companies. In contrast, France and Europe promote a sovereign and secure approach. Together, they aim to protect sensitive data from foreign interference.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;在一方面，美国法律以国家安全的名义扩展了数据访问。另一方面，法国Secnumcloud确保了欧洲企业的数字独立性。让我们分解这两个模型对网络安全，合规性和保护关键基础设施的影响。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt;第一部分 - 数据主权的上下文和挑战&lt;/h2&gt;&#xA;&lt;h3 dir =“ ltr”&gt;简介&lt;/h3&gt;&#xA;&lt;p dir =“ ltr”&gt;《美国爱国者法》和法国secnumcloud框架反映了两个相反的数字数据管理愿景。美国优先考虑国家安全，法律允许域外访问美国公司存储的数据。相比之下，法国和欧洲促进了主权和安全的方法。他们共同旨在保护敏感数据免受外国干扰。&lt;/p&gt;</description>
      <pubDate>Wed, 12 Feb 2025 12:00:10 +0000</pubDate>
    </item>
  </channel>
</rss>