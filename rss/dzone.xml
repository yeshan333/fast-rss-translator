<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Migrating from React Router v5 to v6: A Comprehensive Guide】从React路由器V5迁移到V6：综合指南</title>
      <link>https://dzone.com/articles/migrating-from-react-router-v5-to-v6</link>
      <description>【&lt;p&gt;React Router remains a foundational library for routing in React applications, facilitating navigation between different components and handling URL changes elegantly.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;With the release of &lt;a href=&#34;https://dzone.com/articles/why-you-should-consider-using-react-router-v6-an-o&#34;&gt;React Router v6&lt;/a&gt;, several significant changes have been introduced that improve the library’s performance, flexibility, and developer experience.&amp;nbsp;&lt;/p&gt;】&lt;p&gt; React Router仍然是用于在反应应用中路由的基础库，从而促进不同组件之间的导航和处理URL优雅变化。 &lt;/p&gt;&#xA;&lt;p&gt;发布&lt;a href =“ https://dzone.com/articles/why-you-should-consider-consider-usis-react-router-v6-an-o”&gt; react Router Router v6 &lt;/a&gt;，引入了一些重大的更改，这些更改已提高图书馆的性能，灵活性和开发人员的经验。 &lt;/p&gt;</description>
      <pubDate>Thu, 20 Mar 2025 18:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Grounding Gemini With Google Search and Other Data Sources】与Google搜索和其他数据源接地双子座</title>
      <link>https://dzone.com/articles/grounding-gemini-google-search-data-sources</link>
      <description>【&lt;p&gt;When you only have a few data sources (e.g., PDFs, JSON) that are required in your generative AI application, building RAG might not be worth the time and effort.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In this article, I&#39;ll show how you can use Google Gemini to retrieve context from three data sources. I&#39;ll also show how you can combine the context and ground results using Google search. This enables the end user to combine real-time information from Google Search with their internal data sources.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;当您只有几个数据源（例如PDF，JSON）是您的生成AI应用程序所需的时，建筑抹布可能不值得花费时间和精力。 &lt;/p&gt;&#xA;&lt;p&gt;在本文中，我将展示如何使用Google Gemini从三个数据源检索上下文。我还将展示如何使用Google搜索结合上下文和接地结果。这使最终用户可以将Google搜索的实时信息与其内部数据源相结合。 &lt;/p&gt;</description>
      <pubDate>Thu, 20 Mar 2025 20:30:11 +0000</pubDate>
    </item>
    <item>
      <title>【Mistakes That Django Developers Make and How To Avoid Them】Django开发人员犯的错误以及如何避免</title>
      <link>https://dzone.com/articles/mistakes-django-developers-make-how-to-avoid</link>
      <description>【&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;There is no doubt that Python is one of the most popular programming languages. Furthermore, it offers frameworks like Django and Flask. But Django is the most famous among Python developers as it helps them with a rapid development process and pragmatic design. For example, the Object Relational Mapping tool (ORM), routing, and templating features make things easier for developers.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;But despite these powerful features, there are many mistakes, such as bad application structure and incorrect resource placement, as well as writing fat views and skinny models, etc. These types of problems are not just faced by newbie Python developers, but they are also difficult ones for experienced Python developers as well.&lt;/p&gt;】&lt;p dir =“ ltr” style =“ text-align：left;”&gt;毫无疑问，Python是最受欢迎的编程语言之一。此外，它提供了诸如Django和Flask之类的框架。但是Django是Python开发人员中最著名的，因为它可以帮助他们快速开发过程和务实的设计。例如，对象关系映射工具（ORM），路由和模板功能使开发人员更容易。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr” style =“ text-align：left;”&gt;，但是尽管有这些功能强大的功能，但存在许多错误，例如不良的应用结构和不正确的资源放置，以及编写胖胖的景观和瘦模型等。这些类型的问题不仅是新手python开发人员所面临的，而且它们也是经验丰富的Python Developers的困难。</description>
      <pubDate>Thu, 20 Mar 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Build Multimodal RAG Apps With Amazon Bedrock and OpenSearch】使用Amazon Bedrock和OpenSearch构建多模式的RAG应用程序</title>
      <link>https://dzone.com/articles/build-multimodal-rag-apps-amazon-bedrock-opensearch</link>
      <description>【&lt;h2 style=&#34;text-align: left;&#34;&gt;&lt;strong&gt;Scenario&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;Customer support tickets with screenshots, technical documentation with diagrams, and a mountain of legacy PDFs — all containing valuable information, but impossible to query efficiently.&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;&#34;There has to be a better way,&#34; I thought. That&#39;s when I dove headfirst into the world of multimodal &lt;a href=&#34;https://dzone.com/articles/introduction-to-retrieval-augmented-generation-rag&#34;&gt;retrieval-augmented generation&lt;/a&gt; (RAG).&lt;/p&gt;】&lt;h2 style =“ text-align：left;”&gt; &lt;strong&gt;方案&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p style =“ text-align：left;”&gt;带有屏幕截图的客户支持门票，图表的技术文档和一系列旧版PDF，都包含有价值的信息，但无法有效地查询。&lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;“必须有更好的方法，”我想。那时我首先要进入多模式&lt;a href =“ https://dzone.com/articles/introduction-to-to-to-to-to-to-to-to-retreval-aig--aig--generated-generation-generation-generation-rag”&gt; reterieval-aughieval-agement-agement-agement-agement-agement-agement-agement ofented Generation &lt;/a&gt;（rag）。&lt;/p&gt;。&lt;/p&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 20 Mar 2025 18:15:00 +0000</pubDate>
    </item>
    <item>
      <title>【Patch Management in the Age of IoT: Challenges and Solutions】物联网时代的补丁管理：挑战和解决方案</title>
      <link>https://dzone.com/articles/iot-patch-management-challenges-solutions</link>
      <description>【&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;In a closely connected world, the Internet of Things (IoT) is already a familiar brand for people. However, the use of such many devices is likely to increase the risk of attack.&amp;nbsp;&lt;/span&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;This is why good patch management is so important. It implies the execution of a set of procedures for acquiring, installing, and supporting operating systems and other software.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;In this blog, the issues and opportunities concerning patch management in the IoT are considered. It is illustrated how such a possibility of patch management can minimize risks.&lt;/span&gt;&lt;span data-ccp-props=&#34;{}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt;在紧密连接的世界中，物联网（IoT）已经是人们的熟悉品牌。但是，使用如此多的设备可能会增加攻击风险。 &lt;/span&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt;这就是为什么良好的补丁管理如此重要的原因。这意味着执行一组程序，用于获取，安装和支持操作系统和其他软件。 &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt;在此博客中，考虑了物联网中有关补丁管理的问题和机会。可以说明补丁管理的可能性如何最大程度地降低风险。&lt;/span&gt; &lt;span data-ccp-props =“ {}”&gt; &lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 20 Mar 2025 14:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【[Part-1] Text to Action: Build a Smart Calendar AI Assistant】[第1部分]进行操作：构建智能日历AI助手</title>
      <link>https://dzone.com/articles/build-a-google-calendar-api-with-expressjs</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;&lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;Welcome to the “&lt;strong&gt;Text to Action”&amp;nbsp;&lt;/strong&gt;series, where we build intelligent systems that transform natural language into real-world actionable outcomes using AI.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;To understand the concept better, let’s start simple by building a Smart Calendar AI Assistant. Soon, we’ll tackle more complex challenges — from smart home control to document automation — as we master the art of turning words into actions.&lt;/p&gt;】&lt;p数​​据选择 -  paragraph =“”&gt; &lt;span style =“ margin：0px; padding：0px;“&gt;欢迎来到“ &lt;strong&gt; text to Action to Action” &lt;/strong&gt;系列，我们在其中构建智能系统，将自然语言转化为现实世界中的可行成果&#xA;&lt;p&gt;要更好地理解这个概念，让我们从建立智能日历AI助手开始简单。很快，我们将面临更复杂的挑战 - 从智能家庭控制到记录自动化 - 我们掌握了将单词变成动作的艺术。&lt;/p&gt;</description>
      <pubDate>Thu, 20 Mar 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Serverless Kubernetes: The Rise of Zero-Management Container Orchestration】无服务器Kubernetes：零管理集装箱编排的兴起</title>
      <link>https://dzone.com/articles/serverless-kubernetes-zero-management-orchestration</link>
      <description>【&lt;p&gt;I still remember the day our CTO walked into the engineering huddle and declared, &#34;We&#39;re moving everything to Kubernetes.&#34; It was 2017, and like many teams caught in the container hype cycle, we dove in headfirst with more excitement than wisdom. What followed was a sobering 18-month journey of steep learning curves, 3 AM incident calls, and the gradual realization that we&#39;d traded one set of operational headaches for another.&lt;/p&gt;&#xA;&lt;p&gt;Fast forward to today, I&#39;m deploying containerized applications without managing a single node. No upgrades. No capacity planning. No security patching. Yet, I still have the full power of Kubernetes&#39; declarative API at my fingertips. The serverless Kubernetes revolution is here, and it&#39;s changing everything about how we approach container orchestration.&lt;/p&gt;】&lt;p&gt;我仍然记得我们的CTO走进工程huddle的那一天，宣称：“我们将一切都移至Kubernetes。”那是2017年，就像许多在集装箱炒作周期中抓住的团队一样，我们首先脱颖而出，比智慧更兴奋。随之而来的是陡峭的学习曲线的醒目的18个月旅程，3个上午事件的电话以及我们已经将一套操作头痛交易的逐渐意识到。&lt;/p&gt;&#xA;&lt;p&gt;快进到今天，我正在部署容器化的应用程序，而无需管理单个节点。没有升级。没有能力计划。没有安全补丁。然而，我仍然拥有Kubernetes声明性API的全部力量。无服务器的Kubernetes革命在这里，它正在改变有关我们如何处理容器编排的所有内容。&lt;/p&gt;</description>
      <pubDate>Thu, 20 Mar 2025 21:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Multimodal AI: Beyond Single Modalities】多模式AI：超越单模式</title>
      <link>https://dzone.com/articles/multimodal-ai-beyond-single-modalities</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Artificial intelligence (AI) has progressed significantly from the time of unimodal systems to the more advanced multimodal systems, incorporating information from many different sources. Although unimodal AI has done a good job-solving problems such as language processing or image recognition, issues related to more complex situations in the real world will always comprise a larger data type than one.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Since more than one data type must often interplay for a proper conclusion, multimodal AI has come up to the front. It blends text, visual, and audio types of data to provide richer insights with contextual awareness.&amp;nbsp;&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt;人工智能（AI）从非峰系统的时间到更先进的多模式系统取得了显着发展，并结合了来自许多不同来源的信息。尽管单峰AI做出了一个很好的解决问题，例如语言处理或图像识别，但与现实世界中更复杂情况相关的问题始终构成比一种更大的数据类型。 &lt;/p&gt;&#xA;&lt;p data-pm-slice =“ 1 1 []&gt;，由于多种数据类型必须相互作用以得出正确的结论，因此多模式AI已出现在前面。它将数据的文本，视觉和音频类型融合在一起，以提供具有上下文意识的更丰富的见解。 &lt;/p&gt;</description>
      <pubDate>Thu, 20 Mar 2025 19:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Playwright Fixtures vs POM: Which One Should You Choose?】剧作家固定装置与POM：您应该选择哪一个？</title>
      <link>https://dzone.com/articles/playwright-fixtures-vs-pom</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;Playwright fixtures and traditional Page Object Models (POM) are both used in test automation, but they serve different purposes and can be integrated for better results. Playwright fixtures help set up and manage test environments, while POM organizes page interactions.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;In Playwright, you can use fixtures to handle POM instances, making tests cleaner and more maintainable.&lt;/p&gt;】&lt;p数​​据选择可选 -  paragraph =“”&gt;剧作家固定装置和传统页面对象模型（POM）都用于测试自动化，但它们具有不同的目的，并且可以集成以获得更好的结果。剧作家灯具有助于设置和管理测试环境，而POM组织页面交互。 &lt;/p&gt;&#xA;&lt;P Data-selectable-paragraph =“”&gt;在剧作家中，您可以使用固定装置来处理POM实例，使测试更加清洁，更可维护。&lt;/p&gt;</description>
      <pubDate>Thu, 20 Mar 2025 17:15:00 +0000</pubDate>
    </item>
    <item>
      <title>【Tackling Multidomain Integration in Software Development】解决软件开发中的多域集成</title>
      <link>https://dzone.com/articles/multidomain-integration-software-development</link>
      <description>【&lt;p&gt;&lt;span&gt;Multidomain integration is becoming a cornerstone of modern software development, bridging technologies like blockchain, biotech, and consumer applications. These cross-domain projects are no longer optional — they are the future of innovation. However, combining such diverse systems presents unique challenges.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span&gt;Let me share practical strategies to help you approach cross-domain integration with confidence. In this article, I will explore the technical hurdles of multidomain integration using the example of blockchain and biotech and uncover actionable insights to ensure your projects succeed in this demanding landscape.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span&gt;多域集成正在成为现代软件开发，桥接技术，例如区块链，生物技术和消费者应用的基石。这些跨域项目不再是可选的 - 它们是创新的未来。但是，将这种多样化的系统结合起来带来了独特的挑战。 &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;span&gt;让我分享实用策略，以帮助您自信地进行跨域的整合。在本文中，我将使用区块链和生物技术以及发现可行的见解的示例来探讨多域集成的技术障碍，以确保您的项目在这种苛刻的景观中取得成功。 &lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 20 Mar 2025 13:30:00 +0000</pubDate>
    </item>
  </channel>
</rss>