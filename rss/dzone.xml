<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【What Is Availability? Theory, Problems, Tools, and Best Practices】什么是可用性？理论，问题，工具和最佳实践</title>
      <link>https://dzone.com/articles/availability-theory-challenges-tools-best-practices</link>
      <description>【&lt;p&gt;Availability is the measure of a system’s ability to stay up and running despite the failures of its parts. Today, I will explore this core trait of distributed systems. I will cover theory, challenges, tools, and best practices to ensure your system stays up and running against all odds.&lt;/p&gt;&#xA;&lt;p&gt;Let&#39;s start with theory.&lt;/p&gt;】&lt;p&gt;可用性是衡量系统能够保持和运行的能力，尽管其零件失败了。今天，我将探索分布式系统的这种核心特征。我将介绍理论，挑战，工具和最佳实践，以确保您的系统保持昂贵的状态。&lt;/p&gt;&#xA;&lt;p&gt;让我们从理论开始。&lt;/p&gt;</description>
      <pubDate>Thu, 24 Jul 2025 11:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Hidden Bias in AI: How Data Shapes the Ethics of Machine Learning】AI中的隐藏偏见：数据如何塑造机器学习的伦理</title>
      <link>https://dzone.com/articles/hidden-bias-in-ai-how-data-impacts-ml-ethics</link>
      <description>【&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-IN&#34;&gt;Artificial intelligence (AI) has emerged at the top of technological innovation and has promised remarkable advancements throughout industry verticals. From healthcare and logistics to finance and education, AI has been transforming how we live, work, and do business.&amp;nbsp;&lt;/span&gt;&lt;span data-ccp-props=&#34;{}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-IN&#34;&gt;Nevertheless, as enterprises opt for AI, it is also essential to grapple with the ethical concerns that arise from its use. One of the most pressing concerns in this system is the hidden bias that comes with ingrained AI systems. The bias stems from the data AI models are trained on.&amp;nbsp;&lt;/span&gt;&lt;span data-ccp-props=&#34;{}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ in-in”&gt;人工智能（AI）已经出现在技术创新的顶部，并承诺在整个行业垂直行业中取得了显着的进步。从医疗保健和物流到金融和教育，AI一直在改变我们的生活，工作和开展业务。 &lt;/span&gt; &lt;span data-ccp-props =“ {}”&gt; &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ in-in”&gt;尽管如此，企业选择AI，也必须抓住其使用而引起的道德问题。该系统中最紧迫的问题之一是根深蒂固的AI系统带来的隐藏偏见。偏差源于数据AI模型的训练。 &lt;/span&gt; &lt;span data-ccp-props =“ {}”&gt; &lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 24 Jul 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why Data Privacy Without Context Will No Longer Work in 2026】为什么没有上下文的数据隐私在2026年将不再起作用</title>
      <link>https://dzone.com/articles/data-privacy-without-context-wont-work</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;The comfort zone of anonymization is breaking. For years, enterprises have limited their privacy goals to surface-level techniques of anonymization. Techniques such as Mask PII, which obfuscate identifiers and others, are often assumed to ensure compliance without thorough execution. And that’s the red flag in today’s AI-influenced, agile data environments.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Given global regulations getting stricter, multi-cloud environments can’t lean on schema-level anonymization anymore. Not only does it lose business context, but it also destroys relationships and data utility.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;匿名的舒适区正在破裂。多年来，企业将其隐私目标限制在表面级别的匿名技术中。通常假定掩盖标识符和其他人的蒙版PII等技术可以确保在没有彻底执行的情况下合规。这就是当今受AI影响的敏捷数据环境中的危险信号。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;给定全局法规变得更加严格，多云环境再也无法依靠模式级别的匿名化了。它不仅失去了业务环境，而且还会破坏关系和数据实用程序。&lt;/p&gt;</description>
      <pubDate>Thu, 24 Jul 2025 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Deploying Containers on Azure Container Apps】在Azure容器应用程序上部署容器</title>
      <link>https://dzone.com/articles/deploying-containers-on-azure-infrastructure</link>
      <description>【&lt;p&gt;Azure Container Apps are a popular offering that helps you deploy Docker containers. It provides a sweet spot between effortless container scaling and avoiding the operational complexity of managing a full Kubernetes environment. Some of its best use cases include deploying API endpoints, building event-driven services, and running cloud workflows.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In addition, it also provides all the observability features required for cloud-scale monitoring and alerting. As part of this tutorial, we will explore how to deploy a container to &lt;a href=&#34;https://dzone.com/articles/serverless-kubernetes-zero-management-orchestration&#34;&gt;Azure Container Apps&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;】&lt;p&gt; Azure容器应用程序是一种流行的产品，可帮助您部署Docker容器。它在轻松的容器缩放和避免管理完整的Kubernetes环境的操作复杂性之间提供了一个甜蜜的位置。它的一些最佳用例包括部署API端点，构建事件驱动的服务以及运行云工作流程。 &lt;/p&gt;&#xA;&lt;p&gt;此外，它还提供了云规模监视和警报所需的所有可观察性功能。作为本教程的一部分，我们将探索如何将容器部署到&lt;a href =“ https://dzone.com/articles/serverless-kubernetes-zero-management-management-management-orchestration”&gt; azure Container apps &lt;/a&gt;。 &lt;/p&gt;</description>
      <pubDate>Thu, 24 Jul 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Secure Microservices in Java: Cloud-Native Design With Zero Trust Architecture】Java中的安全微服务：带有零信任体系结构的云本地设计</title>
      <link>https://dzone.com/articles/microservices-cloud-native-design-zero-trust-architecture</link>
      <description>【&lt;p&gt;Microservices enable modern application architecture in today&#39;s fast-changing digital world. They break apps into smaller, deployable services, and this accelerates development, improves scalability, and increases flexibility.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Cloud computing&#39;s capabilities for distributed systems and containerized settings make this step vital, contributing to its exponential rise in popularity. Java remains popular among developers who want to build scalable, high-performance online applications due to its solid ecosystem and long-standing frameworks, such as Spring Boot and Jakarta EE.&lt;/p&gt;】&lt;p&gt;微服务在当今快速变化的数字世界中启用现代应用架构。它们将应用程序分解为较小的可部署服务，这可以加速开发，提高可扩展性并提高灵活性。 &lt;/p&gt;&#xA;&lt;p&gt;云计算用于分布式系统和集装设置的功能使此步骤至关重要，从而导致其普及率呈指数增长。由于其坚实的生态系统和长期存在的框架，例如Spring Boot和Jakarta EE。</description>
      <pubDate>Thu, 24 Jul 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Data Partitioning and Bucketing: How Modern Data Systems Organize and Optimize Your Data】数据划分和存放：现代数据系统如何组织和优化您的数据</title>
      <link>https://dzone.com/articles/partitioning-vs-bucketing-big-data</link>
      <description>【&lt;p&gt;&lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;As data volumes continue to grow, efficient data organization becomes crucial for performance, scalability, and cost management. Two of the most effective strategies for structuring big data are &lt;strong&gt;partitioning&lt;/strong&gt; and &lt;strong&gt;bucketing&lt;/strong&gt;. Although often mentioned together, they serve different purposes and are implemented in different ways. This article offers a practical, detailed look at how these techniques work, their impact on storage, and how to use them effectively in your data pipelines.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;What Is Data Partitioning?&lt;/span&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/evolution-of-data-partitioning-traditional-vs-mode&#34;&gt;&lt;strong&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;Partitioning&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;divides a large dataset into smaller, more manageable&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;segments based on the values of one or more columns (partition keys). Each partition&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;is typically stored&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;as a separate directory in the storage system (e.g., HDFS, S3, or cloud object storage).&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span style =“ margin：0px; padding：0px;“&gt;随着数据量继续增长，有效的数据组织对于性能，可伸缩性和成本管理至关重要。构建大数据的两个最有效的策略是&lt;strong&gt;分区&lt;/strong&gt;和&lt;strong&gt; bucketing &lt;/strong&gt;。尽管经常共同提及，但它们具有不同的目的，并以不同的方式实施。本文提供了一个实用的，详细的研究，详细介绍了这些技术的工作方式，它们对存储的影响以及如何在数据管道中有效使用它们。&lt;/span&gt; &lt;/p&gt;&#xA;&lt;h2&gt; &lt;span数据 - 销售物空间=“ true”&gt;什么是数据分区？&lt;/span&gt; &lt;/h2&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/articles/evolution-evolution-of-data-partitioning-traditional-vs-mode”&gt; &lt;strong&gt; &lt;strong&gt; &lt;span data-proserver-spaces =“ true”&gt;分区&lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/a&gt;基于一个或多个列的值（分区键）的值，data-preserver space =“ true”&gt;段。每个分区&lt;/span&gt; &lt;span data-preserver spaces =“ true”&gt;通常存储&lt;/span&gt; &lt;span data data-proserver spaces =“ true”&gt;作为存储系统中的单独目录（例如，HDFS，S3或云对象存储）。&lt;/span&gt; &lt;/span&gt; &lt;/ps&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 24 Jul 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Absolute Zero: How AI Is Learning Without Data】绝对零：没有数据的AI如何学习</title>
      <link>https://dzone.com/articles/absolute-zero-how-ai-is-learning-without-data</link>
      <description>【&lt;h2&gt;&lt;strong&gt;The Absolute Zero Reasoner&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/LeapLabTHU/Absolute-Zero-Reasoner&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Absolute Zero Reasoner&lt;/a&gt; (AZR) is a recent AI innovation that presents a new methodology for AI models to learn and reason. This method diverges from traditional AI learning approaches by enabling AI to learn from scratch, &lt;em&gt;without the need for pre-existing human-provided data&lt;/em&gt;.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;This is a key point: It is given zero data and self-evolves, in a similar way to Deep Mind&#39;s &lt;a href=&#34;https://deepmind.google/discover/blog/alphazero-shedding-new-light-on-chess-shogi-and-go/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Alpha Zero&lt;/a&gt;. Alpha Zero learned by itself the games of chess, go, and shogi without any human-fed data and eventually reached a super-human level. AZR is extending this self-play beyond board games.&lt;/p&gt;】&lt;h2&gt; &lt;strong&gt;绝对零推理器&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt; &lt;a href =“ https://github.com/leaplabthu/absolute-zero-reasoner” rel =“ noopener noreferrer” target =“ _ black”&gt;绝对零推理器&lt;/a&gt;（azr）是最新的AI Innovation，它是一种对AI创新的新方法，可以为AI模型提供新的方法。该方法通过使AI从头开始学习，与传统的AI学习方法不同，&lt;em&gt;无需预先存在的人类提供的数据&lt;/em&gt;。 &lt;/p&gt;&#xA;&lt;p&gt;这是一个要点：以类似的方式给出了零数据和自我传播的零数据和自我传播，与Deep的&lt;a href =“ https://deepmind.google/discover/discover/discover/discover/blog/alphazero-shedding-new-new-light-on-chess-on-chess-chess-shog--go/------------------------- and-go/” Alpha Zero本身就学会了国际象棋，GO和Shogi的游戏，没有任何人类喂养的数据，最终达到了超人的水平。 AZR将这种自我玩法扩展到棋盘游戏之外。&lt;/p&gt;</description>
      <pubDate>Thu, 24 Jul 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Concurrency in Rust: Writing Safe and Efficient Code】生锈的并发：编写安全有效的代码</title>
      <link>https://dzone.com/articles/concurrency-in-rust-safe-and-efficient-code</link>
      <description>【&lt;p&gt;Concurrency is a core principle of modern software application development that allows applications to execute many tasks at the same time. Computing paradigms continue to evolve, making use of preemptive multi-core and distributed architectures, thus concurrency becomes paramount for achieving the best performance and responsiveness. Whether processing huge amounts of data or ensuring smooth user experiences in web applications, concurrency enables resource efficiency and improved performance.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;That said, writing &lt;a href=&#34;https://dzone.com/articles/exploring-jakarta-concurrency&#34;&gt;concurrent programs&lt;/a&gt; can have its challenges. Problems such as race conditions, deadlocks, and data corruption are common weaknesses of classical concurrent programming patterns that lead to unpredictable and hard-to-debug behavior. Most programming languages use manual memory management or garbage collection, both of which can add overhead and unnecessary inefficiencies when dealing with concurrency. Rust addresses these issues using an ownership model and an expressive type system to implement a unique and safe concurrency mechanism.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;并发是现代软件应用程序开发的核心原则，它允许应用程序同时执行许多任务。计算范式继续发展，利用先发制的多核和分布式体系结构，因此并发对于实现最佳性能和响应能力至关重要。无论是处理大量数据还是确保在Web应用程序中的流畅用户体验，并发都可以提高资源效率并提高性能。 &lt;/p&gt;&#xA;&lt;p&gt;也就是说，写&lt;a href =“ https://dzone.com/articles/exploring-jakarta-concurrency”&gt;并发程序&lt;/a&gt;可能会面临挑战。种族条件，僵局和数据腐败等问题是经典并发编程模式的常见弱点，导致不可预测且难以忽视的行为。大多数编程语言都使用手动存储器管理或垃圾收集，在处理并发时，两者都可以增加开销和不必要的效率。 Rust使用所有权模型和表达类型系统来解决这些问题，以实现独特且安全的并发机制。 &lt;/p&gt;</description>
      <pubDate>Thu, 24 Jul 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【[Part-4] Text to Action: Wake Word Detection Speech to Calendar Event】[第4部分]文字到动作：唤醒单词检测语音到日历事件</title>
      <link>https://dzone.com/articles/wake-word-detection-voice-calendar-assistant</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34; style=&#34;text-align: left;&#34;&gt;Welcome to the fourth installment of our &lt;strong&gt;“Text to Action” series&lt;/strong&gt;, where we’re building intelligent systems that transform natural language into real-world actions using AI.&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;In &lt;a href=&#34;https://dzone.com/articles/build-a-google-calendar-api-with-expressjs&#34; target=&#34;_self&#34;&gt;[Part-1] Text to Action: Build a Smart Calendar AI Assistant&lt;/a&gt;, we established &lt;strong&gt;our foundation&lt;/strong&gt; by creating an Express.js backend that connects to Google Calendar’s API. This gave us the ability to programmatically &lt;strong&gt;create calendar events through exposed API endpoint.&lt;/strong&gt;&lt;/p&gt;】&lt;p数据选择可选 -  paragraph =“” style =“ text-align：left;”&gt;欢迎进入我们的&lt;strong&gt;“ text to Action”系列的第四期&lt;/strong&gt;，我们正在构建智能系统，这些系统将自然语言转换为使用AI的现实语言。&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;In &lt;a href=&#34;https://dzone.com/articles/build-a-google-calendar-api-with-expressjs&#34; target=&#34;_self&#34;&gt;[Part-1] Text to Action: Build a Smart Calendar AI Assistant&lt;/a&gt;, we established &lt;strong&gt;our foundation&lt;/strong&gt; by creating an Express.js backend that connects to Google日历的API。这使我们能够通过裸露的API端点来编程&lt;strong&gt;创建日历事件。&lt;/strong&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 24 Jul 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How LangChain Is Powering Next-Gen AI Apps: A Developer’s Guide in 2025】Langchain如何为下一代AI应用程序提供动力：2025年开发人员指南</title>
      <link>https://dzone.com/articles/langchain-developer-guide</link>
      <description>【&lt;p&gt;The AI landscape in 2025 has evolved at a pace few could have predicted. At the heart of this transformation is &lt;a href=&#34;https://dzone.com/articles/getting-started-with-langchain-for-beginners&#34;&gt;LangChain&lt;/a&gt;, a dynamic framework that has become essential for developers building next-generation AI applications. Whether it’s conversational agents, &lt;a href=&#34;https://dzone.com/articles/introduction-to-retrieval-augmented-generation-rag&#34;&gt;retrieval-augmented generation&lt;/a&gt; (RAG) systems, autonomous workflows, or embedded LLMs in enterprise tools, LangChain offers a flexible and modular foundation that accelerates development while maintaining reliability and scalability.&lt;/p&gt;&#xA;&lt;p&gt;This blog delves into the evolution of LangChain, showcasing its advanced features and how it has become a pivotal tool for developers in 2025. From streamlining LLM integrations to enabling the creation of autonomous agents and intelligent workflows, LangChain offers a powerful, flexible framework for building AI-driven applications. Whether building now customer-facing chatbots, enterprise tools, or complex decision-making systems, this guide will help you unlock LangChain’s full potential to create scalable, cutting-edge AI experiences.&lt;/p&gt;】&lt;p&gt; 2025年的AI景观以很少有预测的速度发展。这种转变的核心是&lt;a href =“ https://dzone.com/articles/getting-with-with-with-with-langchain-for-beginners”&gt; langchain &lt;/a&gt;，这是一个动态框架，对于开发人员而言，对于构建下一代AI应用程序而言已成为开发人员至关重要。 Whether it’s conversational agents, &lt;a href=&#34;https://dzone.com/articles/introduction-to-retrieval-augmented-generation-rag&#34;&gt;retrieval-augmented generation&lt;/a&gt; (RAG) systems, autonomous workflows, or embedded LLMs in enterprise tools, LangChain offers a flexible and modular foundation that accelerates development while maintaining reliability and可伸缩性。&lt;/p&gt;&#xA;&lt;p&gt;该博客深入研究了Langchain的演变，展示了其高级功能以及它如何成为2025年开发人员的关键工具。从简化LLM集成到使自主代理和智能工作流程的创建，Langchain为构建AI-Driven Applications的灵活框架提供了强大的灵活框架。无论是现在建立面向客户的聊天机器人，企业工具还是复杂的决策系统，本指南都将帮助您解锁Langchain的全部潜力，以创建可扩展的，尖端的AI体验。&lt;/p&gt;</description>
      <pubDate>Thu, 24 Jul 2025 19:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>