<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【How To Develop a Truly Performant Mobile Application in 2025: A Case for Android】如何在2025年开发真正的性能移动应用程序：Android的案例</title>
      <link>https://dzone.com/articles/developing-high-perfomant-android-mobile-app</link>
      <description>【&lt;p&gt;To develop a high-performance mobile application, you need functional code—&lt;em&gt;and&lt;/em&gt;&amp;nbsp;a responsive, intuitive user experience. As a mobile developer who has spent years working with Android, I’ve learned that performance optimization is both art and science. Balancing technical precision with user-centric design has become a key principle in my career.&lt;/p&gt;&#xA;&lt;h2&gt;Performance is Key&lt;/h2&gt;&#xA;&lt;p&gt;Today&#39;s users expect quick responses and seamless UIs as the standard, not the exception. Delays of even a few seconds often leads users to stop using the application altogether. I still remember, early on in my career, how milliseconds of latency hurt user engagement. That understanding formed my belief that performance optimization is not about technical metrics but rather about creating an experience that’s &#34;invisible.&#34; This looks as if an app just works, without the user realizing the complexity underneath.&lt;/p&gt;】&lt;p&gt;要开发高性能移动应用程序，您需要功能代码 -  &lt;em&gt;和&lt;/em&gt;响应迅速，直观的用户体验。作为一名与Android合作多年的移动开发人员，我了解到绩效优化既是艺术又是科学。平衡技术精度与以用户为中心的设计已成为我职业生涯中的关键原则。&lt;/p&gt;&#xA;&lt;h2&gt;性能是键&lt;/h2&gt;&#xA;&lt;p&gt;今天的用户期望快速响应和无缝UI作为标准，而不是例外。甚至几秒钟的延迟通常会导致用户完全停止完全使用该应用程序。我仍然记得，在我的职业生涯的早期，毫秒的潜伏期会损害用户参与度。这种理解构成了我的信念，即绩效优化与技术指标无关，而是创造一种“看不见”的体验。这看起来好像是一个应用程序只是在工作，而没有用户意识到下面的复杂性。&lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【MySQL to PostgreSQL Database Migration: A Practical Case Study】MySQL到PostgreSQL数据库迁移：一个实用的案例研究</title>
      <link>https://dzone.com/articles/practical-case-study-of-mysql-to-postgresql-databa</link>
      <description>【&lt;p&gt;Migrating a MySQL database to PostgreSQL is a complex process that involves schema conversion, data transfer, query optimization, and performance tuning. In this case study, we document a real-world migration of e-commerce platform&#39;s database from MySQL 8.0 to PostgreSQL 15. The study includes performance benchmarks before and after migration.&lt;/p&gt;&#xA;&lt;h2&gt;Project Overview&lt;/h2&gt;&#xA;&lt;div class=&#34;table-responsive&#34; style=&#34;border: none;&#34;&gt;&#xA; &lt;table style=&#34;max-width: 100%; width: auto; table-layout: fixed; display: table;&#34; width=&#34;auto&#34;&gt;&#xA;  &lt;tbody&gt;&#xA;   &lt;tr style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;Industry&lt;/td&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;E-commerce&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;Database Size&lt;/td&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;~120 GB&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;Number of Tables&lt;/td&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;200+&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;Queries per Second (QPS)&lt;/td&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;~350&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;Replication Setup&lt;/td&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;MySQL Master-Slave is switched to PostgreSQL Streaming Replication&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;Primary Use Case&lt;/td&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;OLTP (Online Transaction Processing)&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;Goal&lt;/td&gt;&#xA;    &lt;td style=&#34;overflow-wrap: break-word; width: auto;&#34; width=&#34;auto&#34;&gt;Improve read-heavy performance, complex query execution and JSON processing&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;Pre-Migration Performance Benchmarks&lt;/h2&gt;&#xA;&lt;p&gt;Before migration, we collected key performance metrics on MySQL 8.0 using &lt;code&gt;sysbench&lt;/code&gt; and &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt;.&lt;/p&gt;】&lt;p&gt;将MySQL数据库迁移到PostgreSQL是一个复杂的过程，涉及模式转换，数据传输，查询优化和性能调整。在此案例研究中，我们记录了电子商务平台从MySQL 8.0到PostgreSQL 15的现实迁移。该研究包括迁移前后的性能基准。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;H2&gt;项目概述&lt;/h2&gt;&#xA;&lt;div class =“ table响应”样式=“ border：none;”&gt;&#xA; &lt;table style =“最大宽度：100％;宽度：自动; table-layout：filest; display：table;&#39;&#39;宽度=“自动”&gt;&#xA;  &lt;tbody&gt;&#xA;   &lt;tr style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt;行业&lt;/td&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;” width =“自动”&gt;电子商务&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;” width =“自动”&gt;数据库大小&lt;/td&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt; 〜120 GB &lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;” width =“自动”&gt;表数&lt;/td&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt; 200+&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;” width =“ auto”&gt;每秒查询（qps）&lt;/td&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt; 〜350 &lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;” width =“自动”&gt;复制设置&lt;/td&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;” width =“ auto”&gt; mysql主奴隶被切换到postgresql流式复制&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;” width =“自动”&gt;主要用例&lt;/td&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;” width =“自动”&gt; OLTP（在线交易处理）&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;   &lt;tr style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;”宽度=“自动”&gt;目标&lt;/td&gt;&#xA;    &lt;td style =“溢出 -  wrap：break-word; width：auto;” width =“自动”&gt;提高读取性能，复杂的查询执行和JSON处理&lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;前移民绩效基准&lt;/h2&gt;&#xA;&lt;p&gt;在迁移之前，我们使用&lt;code&gt; sysbench &lt;/code&gt;和&lt;code&gt;在MySQL 8.0上收集了关键性能指标。&lt;/code&gt;。</description>
      <pubDate>Wed, 14 May 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Unlocking AI Coding Assistants: Generate Unit Tests】解锁AI编码助手：生成单位测试</title>
      <link>https://dzone.com/articles/ai-coding-assistants-generate-unit-tests</link>
      <description>【&lt;div&gt;&#xA; &lt;p&gt;In this part of this series, you will try to create unit tests for a Spring Boot application using an AI coding assistant. The goal is not merely to create working unit tests, but to create qualitative unit tests. Enjoy!&lt;/p&gt;&#xA; &lt;h2&gt;Introduction&lt;/h2&gt;&#xA; &lt;p&gt;You will try to generate unit tests for a basic Spring Boot application with the help of an AI coding assistant. The responses are evaluated, and different techniques are applied, which can be used to improve the responses when necessary. This blog is part of a series; the previous parts can be read here:&lt;/p&gt;】&lt;div&gt;&#xA; &lt;p&gt;在本系列的这一部分中，您将尝试使用AI编码助手为Spring Boot应用程序创建单元测试。目标不仅是创建工作单元测试，而且是创建定性单元测试。享受！&lt;/p&gt;&#xA; &lt;h2&gt;简介&lt;/h2&gt;&#xA; &lt;p&gt;您将尝试在AI编码助手的帮助下为基本的Spring Boot应用程序生成单元测试。评估响应，并应用不同的技术，可在必要时用于改善响应。这个博客是系列的一部分；以前的部分可以在此处阅读：&lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Cosmos DB Disaster Recovery: Multi-Region Write Pitfalls and How to Evade Them】Cosmos DB灾难恢复：多区域写陷阱以及如何逃避它们</title>
      <link>https://dzone.com/articles/cosmos-db-disaster-recovery</link>
      <description>【&lt;h2&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Azure Cosmos DB is an excellent global distributed, multi-model database service for high availability, low-latency access, and straightforward scalability. One of its most prominent characteristics is multi-region writes, whereby your applications write to the nearest regional replica, which greatly boosts performance and resilience.&lt;/p&gt;&#xA;&lt;p&gt;But here&#39;s the catch: enabling multi-region writes also introduces new challenges, especially when you&#39;re architecting for disaster recovery (DR). Without careful planning, you can end up with data conflicts, unplanned downtime, or even data loss.&lt;/p&gt;】&lt;h2&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt; Azure Cosmos DB是一款出色的全局分布式，多模型数据库服务，可用于高可用性，低延迟访问和直接的可扩展性。多区域写道，其最突出的特征之一是您的应用程序写入最近的区域复制品，从而极大地提高了性能和弹性。&lt;/p&gt;&#xA;&lt;p&gt;但这是捕获：启用多区域写作也引入了新的挑战，尤其是当您架构灾难恢复（DR）时。如果没有仔细的计划，您就可以遇到数据冲突，计划外停机时间甚至数据丢失。&lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2025 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Understanding IEEE 802.11(Wi-Fi) Encryption and Authentication: Write Your Own Custom Packet Sniffer】了解IEEE 802.11（WI-FI）加密和身份验证：编写您自己的自定义数据包sniffer</title>
      <link>https://dzone.com/articles/ieee-80211-wi-fi-encryption-authentication-encryption</link>
      <description>【&lt;h2 dir=&#34;ltr&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;As of 2023, it’s estimated that 42 billion cumulative Wi-Fi enabled devices have been shipped (&lt;em&gt;Wi-Fi® by the Numbers: Technology Momentum in 2023&lt;/em&gt;, n.d.). Every new device adds to the increasing wireless attack surface, and it&#39;s important for anyone working in the security software industry to have a basic understanding of how wireless networks encrypt traffic and authenticate users. In this article, we’ll go through the 4 currently supported and ratified security standards for Wi-Fi networks. We’ll also look at the IEEE 802.11 packet and header structure. Then we will look at a C program to write your custom packet sniffer linking with libpcap. We will also look at a real-life packet capture using Wireshark GUI.&lt;/p&gt;&#xA;&lt;h4 dir=&#34;ltr&#34;&gt;Outline:&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;Common encryption and auth supported by IEEE 802.11 standards &amp;nbsp;&amp;lt;- &lt;strong&gt;Theoretical Foundation&lt;/strong&gt;&lt;/li&gt;&#xA; &lt;li&gt;IEEE 802.11 mac header, frame types, Information elements &amp;lt;- &lt;strong&gt;Theoretical Foundation&lt;/strong&gt;&lt;/li&gt;&#xA; &lt;li&gt;Custom C program linked with &lt;code&gt;libpcap&lt;/code&gt; to sniff packets &amp;lt;- &lt;strong&gt;Practical Application&lt;/strong&gt;&lt;/li&gt;&#xA; &lt;li&gt;Wireshark based sniffing of nearby APs &amp;lt;- &lt;strong&gt;Practical Application&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Common Encryption and Authentication Methods Supported by the Standards&lt;/h2&gt;&#xA;&lt;p&gt;WEP (1997), WPA (2003), WPA2(2004), WPA3 (2018) are the 4 officially ratified IEEE 802.11 security standards by the &lt;a href=&#34;https://www.wi-fi.org/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Wi-Fi Alliance&lt;/a&gt;. WPA4 is expected to be rolled out with Wi-Fi 7 but no standard has been formally ratified.&lt;/p&gt;】&lt;h2 dir =“ ltr”&gt;简介&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;截至2023年，据估计，已经发货了420亿个累积启用Wi-Fi的设备（&lt;em&gt; Wi-fi®由数字：2023年的技术动量，n.d。&lt;/em&gt;）。每个新设备都增加了无线攻击表面的增加，对于在安全软件行业工作的任何人来说，对无线网络如何加密流量和对用户进行身份验证的任何人都很重要。在本文中，我们将浏览当前支持和批准Wi-Fi网络的安全标准的4个。我们还将查看IEEE 802.11数据包和标题结构。然后，我们将查看一个C程序来编写您的自定义数据包sniffer libpcap链接。我们还将使用Wireshark GUI查看现实生活中的数据包。&lt;/p&gt;&#xA;&lt;h4 dir =“ ltr”&gt;概述：&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt; IEEE 802.11支持的常见加密和授权&lt;-&lt;strong&gt;理论基础&lt;/strong&gt; &lt;/li&gt;&#xA; &lt;li&gt; IEEE 802.11 Mac标头，框架类型，信息元素&lt;-&lt;strong&gt;理论基础&lt;/strong&gt; &lt;/li&gt;&#xA; &lt;li&gt;自定义C程序与&lt;code&gt; libpcap &lt;/code&gt; &lt;/code&gt; &lt;-&lt;strong&gt;实用应用程序&lt;/strong&gt; &lt;/li&gt;&#xA; &lt;li&gt;基于Wireshark的嗅探附近的APS &lt;-&lt;strong&gt;实用应用&lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 dir =“ ltr”&gt;由标准支持的常见加密和身份验证方法&lt;/h2&gt;&#xA;&lt;p&gt; WEP（1997），WPA（2003），WPA2（2004），WPA3（2018）是4个正式批准的IEEE IEEE 802.11安全标准，由&lt;a href =“ https：///wwwww.wi.wi.wi.org/ https://www.wi.org/” WPA4预计将使用Wi-Fi 7推出，但未正式批准任何标准。&lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【FIPS 140-3: The Security Standard That Protects Our Federal Data】FIPS 140-3：保护我们联邦数据的安全标准</title>
      <link>https://dzone.com/articles/fips-security-standard-federal-data</link>
      <description>【&lt;p&gt;FIPS (Federal Information Processing Standards) &lt;a href=&#34;https://en.wikipedia.org/wiki/Federal_Information_Processing_Standards&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;[1]&lt;/a&gt; defines a set of public security standards developed by NIST (National Institute of Standards and Technology) &lt;a href=&#34;https://www.nist.gov&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;[2]&lt;/a&gt; that govern the security requirements for cryptographic modules used in government systems. FIPS 140-3 is the latest federal security standard, which includes state-of-the-art protection for deployment environments, such as the cloud, where the system could potentially be physically accessed by untrusted parties.&lt;/p&gt;&#xA;&lt;p&gt;Why is this important (or even relevant) for common (non-federal) workloads? Different security frameworks cater to specific domains or regions, focusing on safeguarding sensitive individual data used in those domains (e.g., name, age, and medical history in the healthcare domain or name, credit, loan, and tax records in the financial domain).&amp;nbsp;&lt;/p&gt;】&lt;p&gt; fips（联邦信息处理标准）&lt;a href =“ https://en.wikipedia.org/wiki/wiki/federal_information_processing_processing_processing_standards” rel =“ noopener noreferrer” target =“ _ black”&gt; [1] &lt;/a&gt;定义了公共安全标准（National and National and Instuction &lt;a href =“ https://www.nist.gov” rel =“ noopener noreferrer” target =“ _ blank”&gt; [2] &lt;/a&gt;，该&lt;/a&gt;管理政府系统中使用的加密模块的安全要求。 FIPS 140-3是最新的联邦安全标准，其中包括针对部署环境（例如云​​）的最新保护，在该保护环境中，该系统可能会被不受信任的各方物理访问。&lt;/p&gt;&#xA;&lt;p&gt;为什么对于普通（非法国）工作量而言，这个重要（甚至相关）？不同的安全框架适合特定领域或地区，重点是保护这些域中使用的敏感个人数据（例如，在金融领域的医疗保健领域或名称，信用，贷款和税收记录中的名称，年龄和病史，名称，年龄和病史）。 &lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why Database Migrations Take Months and How to Speed Them Up】为什么数据库迁移需要几个月以及如何加快它们的速度</title>
      <link>https://dzone.com/articles/speed-up-data-migrations</link>
      <description>【&lt;p&gt;Today, where information is unequivocally the cornerstone of everything and a core competitive advantage, our databases often hold our data hostage.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;It&#39;s 2025, yet it&#39;s not uncommon for a database migration project to span many months, even when the migration is considered like-for-like (e.g., between &lt;a href=&#34;https://dzone.com/articles/mongodb-basics-in-5-minutes&#34;&gt;MongoDB&lt;/a&gt; and &lt;a href=&#34;https://dzone.com/articles/optimizing-performance-in-azure-cosmos-db&#34;&gt;Cosmos DB&lt;/a&gt; with MongoDB API). These long projects take everyone&#39;s attention, create uncertainty, and slow down developer productivity.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;今天，在明确的信息上，信息是一切的基石和核心竞争优势，我们的数据库通常将我们的数据人为人为。 &lt;/p&gt;&#xA;&lt;p&gt;是2025年，但是数据库迁移项目跨越了数月，即使将迁移视为类似于for，&lt;a href =” &lt;a href =&#39; href =“ https://dzone.com/articles/optimizing-performance-in-azure-cosmos-db”&gt; cosmos db &lt;/a&gt;带有mongodb api）。这些漫长的项目引起了每个人的注意，创造不确定性并降低开发人员的生产力。 &lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Developers Beware: Slopsquatting and Vibe Coding Can Increase Risk of AI-Powered Attacks】开发人员要当心：Slopsquatting和Vibe编码可以增加AI驱动攻击的风险</title>
      <link>https://dzone.com/articles/slopsquatting-and-vibe-code-ai-risks</link>
      <description>【&lt;p&gt;Security researchers and developers are raising alarms over “slopsquatting,” a new form of supply chain attack that leverages AI-generated misinformation commonly known as hallucinations. As developers increasingly rely on coding tools like GitHub Copilot, ChatGPT, and DeepSeek, attackers are exploiting AI’s tendency to invent software packages, tricking users into downloading malicious content.&lt;/p&gt;&#xA;&lt;h2&gt;What is Slopsquatting?&lt;/h2&gt;&#xA;&lt;p&gt;The term slopsquatting was originally coined by Seth Larson, a developer with the Python Software Foundation, and later popularized by tech security researcher Andrew Nesbitt. It refers to cases &lt;a href=&#34;https://dzone.com/articles/how-artificial-intelligence-is-transforming-cybers&#34;&gt;where attackers&lt;/a&gt; register software packages that don’t actually exist, but are mistakenly suggested by AI tools; once live, these fake packages can contain harmful code.&lt;/p&gt;】&lt;p&gt;安全研究人员和开发人员正在对“ Slopsquatting”发出警报，这是一种新形式的供应链攻击，利用AI生成的错误信息，通常称为幻觉。随着开发人员越来越依赖GitHub Copilot，Chatgpt和DeepSeek等编码工具，攻击者正在利用AI的趋势发明软件包，欺骗用户下载恶意内容。&lt;/p&gt;&#xA;&lt;h2&gt;什么是slopsquatting？&lt;/h2&gt;&#xA;&lt;p&gt; Slopsquatting一词最初是由Python Software Foundation的开发人员Seth Larson创造的，后来由技术安全研究员Andrew Nesbitt推广。它指的是案例&lt;a href =“ https://dzone.com/articles/how-Artector-Intelligence-is-is-transforming-cybers”&gt;攻击者&lt;/a&gt;注册实际上不存在的软件包，但由AI工具错误建议；现场直播后，这些假套件可能包含有害代码。&lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2025 21:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【A Simple, Convenience Package for the Azure Cosmos DB Go SDK】Azure Cosmos DB GO SDK的简单便利套餐</title>
      <link>https://dzone.com/articles/azure-cosmos-db-go-sdk-helper</link>
      <description>【&lt;p&gt;When using the Go SDK for the Azure Cosmos DB NoSQL API, I often find myself writing boilerplate code for various operations. This includes database/container operations, querying, and more. The cosmosdb-go-sdk-helper (I know, not a great name!) is a package with convenience functions for some of these tasks.&lt;/p&gt;&#xA;&lt;p&gt;In this blog post, I will go over the packages in the repository with examples on how (and when) you can use them. It&#39;s early days for this project, but I hope to keep adding to it gradually.&lt;/p&gt;】&lt;p&gt;将GO SDK用于Azure Cosmos DB NOSQL API时，我经常发现自己编写用于各种操作的样板代码。这包括数据库/容器操作，查询等等。 cosmosdb-go-sdk-helper（我知道，不是一个好名字！）是其中某些任务具有便利功能的包装。&lt;/p&gt;&#xA;&lt;p&gt;在这篇博客文章中，我将介绍存储库中的软件包，并提供有关如何（以及何时）使用它们的示例。这是该项目的初期，但我希望继续逐渐增加它。&lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Beyond Code Coverage: A Risk-Driven Revolution in Software Testing With Machine Learning】超越代码覆盖范围：通过机器学习的软件测试中的风险驱动革命</title>
      <link>https://dzone.com/articles/software-testing-with-machine-learning</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Modern systems require more than high code coverage because they are complex and interconnected. Through machine learning development, companies can create advanced tools that link risk-based planning methods to enhance their software testing outcomes.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;With the focus on the possibility of failure and its effects, risk-based testing provides both improved efficiency and better effectiveness. RBT selects its execution focus on core features and often modified code and components known for producing defects.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;现代系统所需的不仅仅是高码覆盖范围，因为它们是复杂且相互联系的。通过机器学习开发，公司可以创建高级工具，以链接基于风险的计划方法以增强其软件测试结果。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;侧重于失败及其效果的可能性，基于风险的测试既可以提高效率和提高有效性。 RBT选择其执行重点是核心功能，并经常修改的代码和组件以产生缺陷而闻名。 &lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2025 15:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>