<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Setting Up CORS and Integration on AWS API Gateway Using CloudFormation】使用 CloudFormation 在 AWS API Gateway 上设置 CORS 和集成</title>
      <link>https://dzone.com/articles/setting-up-cors-and-integration-on-aws-api-gateway</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/what-is-cors&#34;&gt;Cross-Origin Resource Sharing (CORS)&amp;nbsp;&lt;/a&gt;is an essential security mechanism utilized by web browsers, allowing for regulated access to server resources from origins that differ in domain, protocol, or port. In the realm of APIs, especially when utilizing AWS API Gateway, configuring CORS is crucial to facilitate access for web applications originating from various domains while mitigating potential security risks.&lt;/p&gt;&#xA;&lt;p&gt;This article aims to provide a comprehensive guide on CORS and integrating AWS API Gateway through &lt;a href=&#34;https://dzone.com/articles/aws-cloudformation-getting-started-for-beginners&#34;&gt;CloudFormation&lt;/a&gt;. It will emphasize the significance of CORS, the development of authorization including bearer tokens, and the advantages of selecting optional methods in place of standard GET requests.&lt;/p&gt;】&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/what-is-cors&#34;&gt;跨源资源共享 (CORS)&lt;/a&gt;是网络浏览器使用的一种重要安全机制，允许受监管的从域、协议或端口不同的来源访问服务器资源。在 API 领域，特别是在使用 AWS API Gateway 时，配置 CORS 对于促进来自不同域的 Web 应用程序的访问并同时降低潜在的安全风险至关重要。&lt;/p&gt;&#xA;&lt;p&gt;本文旨在提供有关 CORS 以及通过 &lt;a href=&#34;https://dzone.com/articles/aws-cloudformation-getting-started-for-beginners&#34;&gt;CloudFormation 集成 AWS API Gateway 的全面指南&lt;/一个&gt;。它将强调 CORS 的重要性、包括不记名令牌在内的授权的发展，以及选择可选方法代替标准 GET 请求的优势。&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 18:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【A Hands-On Guide to OpenTelemetry: Exploring Telemetry Data With Jaeger】OpenTelemetry 实践指南：使用 Jaeger 探索遥测数据</title>
      <link>https://dzone.com/articles/exploring-telemetry-data-with-jaeger</link>
      <description>【&lt;p&gt;Are you ready to start your journey on the road to collecting telemetry data from your applications? Great observability begins with great instrumentation!&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In this series, you&#39;ll explore how to adopt &lt;a href=&#34;https://opentelemetry.io/&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;OpenTelemetry (OTel)&lt;/a&gt; and how to instrument an application to collect tracing telemetry. You&#39;ll learn how to leverage out-of-the-box automatic instrumentation tools and understand when it&#39;s necessary to explore more advanced manual instrumentation for your applications. By the end of this series, you&#39;ll have an understanding of how telemetry travels from your applications to the OpenTelemetry Collector, and be ready to bring OpenTelemetry to your future projects. Everything discussed here is supported by &lt;a href=&#34;https://o11y-workshops.gitlab.io/workshop-opentelemetry/&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;a hands-on, self-paced workshop&lt;/a&gt; authored &lt;a href=&#34;https://www.linkedin.com/in/paigerduty/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;by Paige Cruz&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;您准备好开始从应用程序收集遥测数据的旅程了吗？出色的可观测性始于出色的仪器！ &lt;/p&gt;&#xA;&lt;p&gt;在本系列中，您将探索如何采用 &lt;a href=&#34;https://opentelemetry.io/&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;OpenTelemetry (OTel)&lt;/a&gt; 以及如何检测一个应用程序来收集跟踪遥测数据。您将学习如何利用开箱即用的自动仪表工具，并了解何时需要为您的应用探索更高级的手动仪表。在本系列结束时，您将了解遥测如何从应用程序传输到 OpenTelemetry Collector，并准备好将 OpenTelemetry 引入您未来的项目。这里讨论的所有内容均由&lt;a href=&#34;https://o11y-workshops.gitlab.io/workshop-opentelemetry/&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;动手、自定进度的研讨会&lt;/ a&gt; 作者：&lt;a href=&#34;https://www.linkedin.com/in/paigerduty/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;由 Paige Cruz&lt;/a&gt;。 &lt;/p&gt;</description>
      <pubDate>Fri, 23 Aug 2024 21:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Agile Practices That Developers Can Use to Create Better Projects】开发人员可以用来创建更好项目的敏捷实践</title>
      <link>https://dzone.com/articles/agile-practices-to-create-better-projects</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;No matter what the project is about, every software development team wants to create the best project: one that is &lt;a href=&#34;https://dzone.com/articles/along-came-a-bug&#34;&gt;bug&lt;/a&gt;-free, shows the best performance, and meets the customer&#39;s needs. However, the software development cycle involves many things that can slow down the project or create expectations and communication problems between developers.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;One way to remedy these situations is by adopting &lt;a href=&#34;https://dzone.com/refcardz/agile-patterns&#34;&gt;Agile practices&lt;/a&gt;. First, we are going to explain to you what Agile is, the best practices, and how these can improve the performance of software developers so that they create better projects.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;无论项目是什么，每个软件开发团队都希望创建最好的项目：&lt;a href=&#34;https://dzone.com/articles/along-came-a -bug&#34;&gt;bug&lt;/a&gt;-free，展现最佳性能，满足客户需求。然而，软件开发周期涉及许多事情，这些事情可能会减慢项目速度或在开发人员之间产生期望和沟通问题。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;解决这些情况的一种方法是采用&lt;a href=&#34;https://dzone.com/refcardz/agile-patterns&#34;&gt;敏捷实践&lt;/a&gt;。首先，我们将向您解释什么是敏捷、最佳实践，以及它们如何提高软件开发人员的绩效，以便他们创建更好的项目。&lt;/p&gt;</description>
      <pubDate>Fri, 23 Aug 2024 13:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【The Role of Data Governance in Data Strategy: Part 3】数据治理在数据战略中的作用：第 3 部分</title>
      <link>https://dzone.com/articles/the-role-of-data-governance-in-data-strategy-part-3</link>
      <description>【&lt;h2 dir=&#34;ltr&#34;&gt;Data Subject Access Rights (DSAR)&amp;nbsp;&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;In the previous articles (&lt;a href=&#34;https://dzone.com/articles/the-role-of-data-governance-in-data-strategy-part&#34;&gt;Part 1&lt;/a&gt; and &lt;a href=&#34;https://dzone.com/articles/the-role-of-data-governance-in-data-strategy-part-1&#34;&gt;Part 2&lt;/a&gt;), we have seen the concept of BigID and how it enhances the data in an organization. In this article, let&#39;s see what is Data Subject Access Rights (DSAR) and how they correlate to individual rights in real-time.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Data Rights Fulfillment (&lt;a href=&#34;https://home.bigid.com/hubfs/Whitepapers%20and%20Data%20Sheets/BigID-Automate-Data-Access-Rights-Fulfillment-White-Paper.pdf&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;DRF&lt;/a&gt;) is a process of steps/actions taken by an organization with data protection rules and ensuring that individual rights and personal data are respected.&lt;/p&gt;】&lt;h2 dir=&#34;ltr&#34;&gt;数据主体访问权限 (DSAR)&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;在之前的文章中（&lt;a href=&#34;https://dzone.com/articles/the-role-of-data-governance-in-data-strategy-part&#34;&gt;第 1 部分&lt; /a&gt; 和&lt;a href=&#34;https://dzone.com/articles/the-role-of-data-governance-in-data-strategy-part-1&#34;&gt;第 2 部分&lt;/a&gt;），我们有了解 BigID 的概念以及它如何增强组织中的数据。在本文中，我们将了解什么是数据主体访问权 (DSAR) 以及它们如何与个人权利实时关联。 &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;数据权利履行 (&lt;a href=&#34;https://home.bigid.com/hubfs/Whitepapers%20and%20Data%20Sheets/BigID-Automate-Data-Access-Rights-Fulfillment-White -Paper.pdf&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;DRF&lt;/a&gt;) 是组织根据数据保护规则采取的步骤/行动的过程，并确保个人权利和个人数据得到尊重。&lt; /p&gt;</description>
      <pubDate>Fri, 23 Aug 2024 15:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Kotlin Coroutines and OpenTelemetry Tracing】Kotlin 协程和 OpenTelemetry 跟踪</title>
      <link>https://dzone.com/articles/kotlin-coroutines-and-opentelemetry-tracing</link>
      <description>【&lt;p&gt;I recently &lt;a href=&#34;https://dzone.com/articles/opentelemetry-tracing-on-spring-boot-java-agent-vs-micrometer-testing&#34;&gt;compared three OpenTelemetry approaches&lt;/a&gt; on the JVM: Java Agent v1, v2, and Micrometer. I used Kotlin and coroutines without overthinking. I received interesting feedback on the usage of &lt;code&gt;@WithSpan&lt;/code&gt; with coroutines:&lt;/p&gt;&#xA;&lt;p&gt;Indeed, the &lt;code&gt;@WithSpan&lt;/code&gt; annotation has worked flawlessly in conjunction with coroutines &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/7124&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;for some time already&lt;/a&gt;. However, it made me think about the underlying workings of OpenTelemetry. Here are my findings.&lt;/p&gt;】&lt;p&gt;我最近&lt;a href=&#34;https://dzone.com/articles/opentelemetry-tracing-on-spring-boot-java-agent-vs-micrometer-testing&#34;&gt;比较了三种 OpenTelemetry 方法&lt;/a&gt; JVM：Java Agent v1、v2 和 Micrometer。我没有过多考虑就使用了 Kotlin 和协程。我收到了关于使用 &lt;code&gt;@WithSpan&lt;/code&gt; 与协程的有趣反馈：&lt;/p&gt;&#xA;&lt;p&gt;确实，&lt;code&gt;@WithSpan&lt;/code&gt; 注释与协程完美结合 &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/7124&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;已经有一段时间了&lt;/a&gt;。然而，它让我思考了 OpenTelemetry 的底层工作原理。这是我的发现。&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 14:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Parent Document Retrieval (PDR): Useful Technique in RAG】父文档检索 (PDR)：RAG 中的有用技术</title>
      <link>https://dzone.com/articles/parent-document-retrieval-useful-technique-in-rag</link>
      <description>【&lt;h2&gt;What Is Parent Document Retrieval (PDR)?&lt;/h2&gt;&#xA;&lt;p&gt;Parent Document Retrieval is a method implemented in state-of-the-art &lt;a href=&#34;https://dzone.com/articles/a-comparative-exploration-of-llm-and-rag&#34;&gt;RAG models&lt;/a&gt; meant to recover full parent documents from which relevant child passages or snippets can be extracted. It provides context enrichment and is passed on to the RAG model for more comprehensive, information-rich responses to complex or nuanced questions.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Major steps in parent document retrieval in RAG models include:&lt;/p&gt;】&lt;h2&gt;什么是父文档检索 (PDR)？&lt;/h2&gt;&#xA;&lt;p&gt;父文档检索是一种在最先进的 &lt;a href=&#34;https://dzone.com/articles/a-comparative-exploration-of-llm-and-rag&#34;&gt;RAG 模型中实现的方法&lt;/a&gt; 意味着恢复完整的父文档，可以从中提取相关的子段落或片段。它提供了丰富的上下文，并传递给 RAG 模型，以便对复杂或微妙的问题做出更全面、信息丰富的响应。 &lt;/p&gt;&#xA;&lt;p&gt;RAG 模型中父文档检索的主要步骤包括：&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 20:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【When Backstage Met Terraform: Exploring Platform Abstractions [Video]】当后台遇到 Terraform：探索平台抽象 [视频]</title>
      <link>https://dzone.com/articles/when-backstage-met-terraform</link>
      <description>【&lt;p dir=&#34;auto&#34;&gt;In a recent fireside chat, I delved into the &lt;a data-hook=&#34;WebLink&#34; href=&#34;https://www.linkedin.com/events/7207393585124511744/comments/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;intriguing convergence of Terraform and Backstage&lt;/a&gt;, two pivotal technologies reshaping the landscape of platform engineering. This session was particularly exciting as I had a special guest, &lt;a data-hook=&#34;WebLink&#34; href=&#34;https://www.linkedin.com/in/sevedkim/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Seve Kim&lt;/a&gt;, a product manager from Backstage, joining Abby Bangser and me!&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;auto&#34;&gt;Although the chat only lasted 30 minutes, we covered much ground. We explored the layers of platform architecture, talked about the goals of platform engineering, and discussed how best to leverage open-source tools like Backstage, Kratix, and Terraform to create robust, scalable internal developer platforms.&lt;/p&gt;】&lt;p dir=&#34;auto&#34;&gt;在最近的一次炉边聊天中，我深入研究了 &lt;a data-hook=&#34;WebLink&#34; href=&#34;https://www.linkedin.com/events/7207393585124511744/comments/&#34; rel=&#34; noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Terraform 和 Backstage 的有趣融合&lt;/a&gt;，这两项关键技术重塑了平台工程的格局。这次会议特别令人兴奋，因为我有一位特殊的客人，&lt;a data-hook=&#34;WebLink&#34; href=&#34;https://www.linkedin.com/in/sevedkim/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34; &gt;Seve Kim&lt;/a&gt;，Backstage 的产品经理，加入 Abby Bangser 和我！ &lt;/p&gt;&#xA;&lt;p dir=&#34;auto&#34;&gt;虽然聊天只持续了 30 分钟，但我们讨论了很多内容。我们探索了平台架构的各层，讨论了平台工程的目标，并讨论了如何最好地利用 Backstage、Kratix 和 Terraform 等开源工具来创建强大、可扩展的内部开发人员平台。&lt;/p&gt;</description>
      <pubDate>Fri, 23 Aug 2024 17:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Architectural Patterns for Enterprise Generative AI Apps: DSFT, RAG, RAFT, and GraphRAG】企业生成式人工智能应用程序的架构模式：DSFT、RAG、RAFT 和 GraphRAG</title>
      <link>https://dzone.com/articles/architectural-patterns-for-genai-dsft-rag-raft-graphrag</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;A best-designed Enterprise Architecture is the backbone for any organization&#39;s IT systems, which support the foundational building blocks to achieve the organization&#39;s business objective. The architecture consists of best practices, clearly outlined strategies, common frameworks, and guidelines for the engineering team and other stakeholders to pick the right tool to accomplish the tasks. Enterprise Architecture is mostly governed by the architecture team that supports the line of business. In most organizations, the architecture team is responsible for outlining the architecture patterns and common frameworks which would help the engineering and product team not to spend hours of effort in doing proof of concepts, but rather help them to adopt the strategies to design the core building blocks based on the patterns.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Since &lt;a href=&#34;https://dzone.com/articles/introduction-generative-ai-empowering-enterprises&#34;&gt;Generative AI&lt;/a&gt; has been transforming the entire landscape, most organizations are either building Generative AI-based applications or they are integrating Generative AI capabilities or features into their existing applications or products. In this article, we will deep dive into the common architectural patterns that are available for building Generative AI solutions. We will also be discussing various enterprise-level strategies in picking the right framework for the right use case.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;设计最佳的企业架构是任何组织 IT 系统的支柱，它支持实现组织业务目标的基础构建块。该架构包含最佳实践、清晰概述的策略、通用框架以及工程团队和其他利益相关者选择正确工具来完成任务的指南。企业架构主要由支持业务线的架构团队管理。在大多数组织中，架构团队负责概述架构模式和通用框架，这将帮助工程和产品团队不要花费大量精力进行概念验证，而是帮助他们采用策略来设计核心构建基于模式的块。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;由于&lt;a href=&#34;https://dzone.com/articles/introduction-generative-ai-empowering-enterprises&#34;&gt;生成式人工智能&lt;/a&gt;已经改变了整个格局，大多数组织正在构建基于生成式人工智能的应用程序，或者正在将生成式人工智能功能或特性集成到现有的应用程序或产品中。在本文中，我们将深入探讨可用于构建生成式 AI 解决方案的常见架构模式。我们还将讨论各种企业级策略，为正确的用例选择正确的框架。&lt;/p&gt;</description>
      <pubDate>Fri, 23 Aug 2024 19:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Protect Your Alerts: The Importance of Independent Incident Alert Management】保护您的警报：独立事件警报管理的重要性</title>
      <link>https://dzone.com/articles/importance-of-independent-incident-alert-management</link>
      <description>【&lt;p&gt;In a world where IT infrastructure underpins countless businesses and organizations, maintaining operational integrity during critical failures or outages is non-negotiable. A key element in achieving this is ensuring that your &lt;a href=&#34;https://dzone.com/articles/insights-from-incident-management&#34;&gt;incident alert management system&lt;/a&gt; remains active and accessible under all circumstances. Unfortunately, a significant vulnerability can arise when the incident alert management system shares the same cloud provider as your primary services. If that cloud provider experiences an outage, your alert management system could become unavailable just when it is needed the most. This could lead to delayed responses, prolonged downtimes, and potentially catastrophic consequences for your business operations.&lt;/p&gt;&#xA;&lt;h2&gt;Understanding the Role of Redundancy in Incident Management&lt;/h2&gt;&#xA;&lt;p&gt;Redundancy is a fundamental principle in IT management, especially when it comes to ensuring continuous operations. Consider a scenario where your services are hosted on a major cloud provider like Amazon Web Services (AWS), Microsoft Azure, or Google Cloud. While these platforms are indeed robust and reliable, they are not infallible. They can and have experienced failures caused by various factors such as Distributed Denial of Service (DDoS) attacks, major hardware failures, &lt;a href=&#34;https://dzone.com/articles/along-came-a-bug&#34;&gt;software bugs&lt;/a&gt;, or even human error resulting in misconfigurations. In such situations, if your incident alert management system is also hosted on the same cloud, the very tools you rely on to notify you of the outage might be compromised as well. This could leave your IT team in the dark, unaware of the issues, and unable to respond promptly.&lt;/p&gt;】&lt;p&gt;在 IT 基础设施支撑着无数企业和组织的世界中，在严重故障或中断期间保持运营完整性是不容谈判的。实现这一目标的关键要素是确保您的&lt;a href=&#34;https://dzone.com/articles/insights-from-incident-management&#34;&gt;事件警报管理系统&lt;/a&gt;在任何情况下都保持活跃且可访问。不幸的是，当事件警报管理系统与您的主要服务共享同一云提供商时，可能会出现严重漏洞。如果该云提供商遇到中断，您的警报管理系统可能会在最需要的时候变得不可用。这可能会导致响应延迟、停机时间延长，并可能给您的业务运营带来灾难性后果。&lt;/p&gt;&#xA;&lt;h2&gt;了解冗余在事件管理中的作用&lt;/h2&gt;&#xA;&lt;p&gt;冗余是 IT 管理的基本原则，特别是在确保持续运营方面。考虑这样一个场景：您的服务托管在 Amazon Web Services (AWS)、Microsoft Azure 或 Google Cloud 等主要云提供商上。虽然这些平台确实强大且可靠，但它们并非绝对可靠。他们可能并且已经经历过由各种因素引起的故障，例如分布式拒绝服务 (DDoS) 攻击、主要硬件故障、&lt;a href=&#34;https://dzone.com/articles/along-came-a-bug&#34;&gt;软件bug，甚至是人为错误导致配置错误。在这种情况下，如果您的事件警报管理系统也托管在同一云上，那么您用来通知中断的工具也可能会受到损害。这可能会让您的 IT 团队一无所知，不知道问题，并且无法及时响应。&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 16:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Integrating Apache Kafka in KRaft Mode With RisingWave for Event Stream Processing】将 KRaft 模式下的 Apache Kafka 与 RisingWave 集成以进行事件流处理</title>
      <link>https://dzone.com/articles/apache-kafka-in-kraft-mode-with-rising-wave</link>
      <description>【&lt;p&gt;Over the past few years, Apache Kafka has emerged as the top event streaming platform for streaming data/event ingestion. However, in an earlier version of Apache Kafka, 3.5, Zookeeper was the additional and mandatory component for managing and coordinating the Kafka cluster. Relying on ZooKeeper on the operational multi-node Kafka cluster introduced complexity and could be a single point of failure.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;ZooKeeper is completely a separate system having its own configuration file syntax, management tools, and deployment patterns. In-depth skills with experience are necessary to manage and deploy two individual distributed systems and an eventually up-and-running Kafka cluster. Having expertise in Kafka administration without ZooKeeper won’t be able to help to come out from the crisis, especially in the production environment where ZooKeeper runs in a completely isolated environment (Cloud).&amp;nbsp;&lt;/p&gt;】&lt;p&gt;在过去的几年里，Apache Kafka 已成为流数据/事件摄取的顶级事件流平台。然而，在 Apache Kafka 的早期版本 3.5 中，Zookeeper 是用于管理和协调 Kafka 集群的附加且必需的组件。依赖可操作的多节点 Kafka 集群上的 ZooKeeper 会带来复杂性，并且可能会出现单点故障。 &lt;/p&gt;&#xA;&lt;p&gt;ZooKeeper 是一个完全独立的系统，拥有自己的配置文件语法、管理工具和部署模式。管理和部署两个单独的分布式系统以及最终启动并运行的 Kafka 集群需要深厚的技能和经验。在没有 ZooKeeper 的情况下拥有 Kafka 管理方面的专业知识将无法帮助摆脱危机，尤其是在 ZooKeeper 在完全隔离的环境（云）中运行的生产环境中。 &lt;/p&gt;</description>
      <pubDate>Fri, 23 Aug 2024 11:00:04 +0000</pubDate>
    </item>
  </channel>
</rss>