<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【5 Signs You’ve Built a Secretly Bad Architecture (And How to Fix It)】您构建了一个秘密糟糕的架构的 5 个迹象（以及如何修复它）</title>
      <link>https://dzone.com/articles/5-signs-youve-built-a-secretly-bad-architecture</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In the hustle to deliver value, development teams can unknowingly create software architectures that hinder their long-term progress. Initially, everything seems fine — features are shipping, continuous integration (CI) jobs are passing, and the product actually works. Yet, beneath the apparent progress, unchecked complexity can take root. What starts as manageable interactions between components can evolve into tangled dependencies and sprawling systems that hinder agility and slow innovation. &amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Overly complex flows and unnecessary dependencies escalate complexity and &lt;a href=&#34;https://dzone.com/articles/managing-architectural-tech-debt&#34;&gt;architectural technical debt&lt;/a&gt;, creating barriers to maintainability and leaving teams vulnerable to setbacks at the most inopportune times. &amp;nbsp;Overly complex flows and unnecessary dependencies escalate both complexity and architectural technical debt, hindering maintainability and leaving teams exposed to setbacks at the worst possible times.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;在忙于交付价值的过程中，开发团队可能会在不知不觉中创建阻碍其长期进步的软件架构。最初，一切看起来都很好——功能正在交付，持续集成 (CI) 工作正在通过，产品实际上可以工作。然而，在表面进展的背后，不受控制的复杂性可能会扎根。组件之间的可管理交互可能会演变成复杂的依赖关系和庞大的系统，从而阻碍敏捷性并减缓创新。  &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;过于复杂的流程和不必要的依赖关系会加剧复杂性和&lt;a href=&#34;https://dzone.com/articles/managing-architectural-tech-debt&#34;&gt;架构技术债务&lt;/a&gt;，从而产生可维护性的障碍，并使团队在最不合时宜的时候容易遭受挫折。  过于复杂的流程和不必要的依赖关系会增加复杂性和架构技术债务，阻碍可维护性，并使团队在最糟糕的情况下遭受挫折。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Dec 2024 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Zero Trust for AI: Building Security from the Ground Up】人工智能零信任：从头开始构建安全</title>
      <link>https://dzone.com/articles/zero-trust-for-ai-building-security-from-the-ground-up</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;As artificial intelligence (AI) continues to revolutionize industries, its role in critical applications continues to grow exponentially. With all this innovation comes a growing concern — how do we keep AI systems secure? Unlike traditional applications, AI deals with highly sensitive data, intricate models, and sprawling networks that don’t fit neatly within the walls of traditional security measures. Traditional security models, built on the assumption of trust within a defined network perimeter, are proving inadequate in protecting the highly distributed, dynamic, and sensitive nature of AI workflows. In the context of AI, where sensitive data, complex models, and distributed systems intersect, Zero Trust offers a proactive and holistic approach to security.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;This article explores the need for Zero Trust in AI, the fundamental principles that direct its application, and practical methods to safeguard AI systems from the outset.&lt;/p&gt;】&lt;p style=&#34;text-align: left;&#34;&gt;随着人工智能 (AI) 不断给行业带来变革，其在关键应用中的作用继续呈指数级增长。随着所有这些创新，人们越来越关注——我们如何保证人工智能系统的安全？与传统应用程序不同，人工智能处理高度敏感的数据、复杂的模型和庞大的网络，这些数据无法完全适应传统安全措施的范围。传统的安全模型建立在定义的网络边界内的信任假设之上，事实证明，它不足以保护人工智能工作流程的高度分布式、动态和敏感的性质。在敏感数据、复杂模型和分布式系统交叉的人工智能背景下，零信任提供了一种主动且全面的安全方法。 &lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;本文探讨了人工智能零信任的必要性、指导其应用的基本原则，以及从一开始就保护人工智能系统的实用方法。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Dec 2024 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Managing Orphaned Users in SQL Server: A Comprehensive Guide】管理 SQL Server 中的孤立用户：综合指南</title>
      <link>https://dzone.com/articles/managing-orphaned-users-in-sql-server</link>
      <description>【&lt;p&gt;Managing orphaned users in SQL Server is critical to database security and administration. Orphaned users occur when a database user exists without a corresponding login in the master database. This mismatch can disrupt access and lead to potential security vulnerabilities. In this article, we&#39;ll explore what orphaned users are, how to detect them, and methods to resolve them, including updated examples and scenarios.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Background&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;To &lt;a href=&#34;https://dzone.com/articles/synchronizing-ms-sql-server-databases&#34;&gt;connect to an SQL Server database&lt;/a&gt;, a user must have a valid login in the master database. This login authenticates the user and maps to a database user for authorization. The mapping is maintained using the &lt;strong&gt;Security Identifier (SID)&lt;/strong&gt;, ensuring that database users and server logins are linked correctly.&lt;/p&gt;】&lt;p&gt;管理 SQL Server 中的孤立用户对于数据库安全和管理至关重要。当数据库用户在主数据库中没有相应的登录名时，就会出现孤立用户。这种不匹配可能会中断访问并导致潜在的安全漏洞。在本文中，我们将探讨什么是孤立用户、如何检测它们以及解决它们的方法，包括更新的示例和场景。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;要&lt;a href=&#34;https://dzone.com/articles/synchronizing-ms-sql-server-databases&#34;&gt;连接到 SQL Server 数据库&lt;/a&gt;，用户必须在主数据库。此登录对用户进行身份验证并映射到数据库用户以进行授权。使用&lt;strong&gt;安全标识符 (SID)&lt;/strong&gt; 维护映射，确保数据库用户和服务器登录正确链接。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Dec 2024 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【A Comprehensive Guide to Prompt Engineering】快速工程综合指南</title>
      <link>https://dzone.com/articles/a-comprehensive-guide-to-prompt-engineering</link>
      <description>【&lt;p&gt;Prompt engineering is the art and science of crafting inputs to guide AI models in generating desired outputs. This involves designing and refining prompts — questions, instructions, or statements — to effectively communicate with AI language models. The quality and structure of these prompts directly influence the usefulness and reliability of the AI’s responses.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;What Is the Perfect Prompt?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The best prompt is one that &lt;a href=&#34;https://dzone.com/articles/unlocking-language-models-with-powerful-prompts&#34;&gt;effectively communicates your requirements&lt;/a&gt; to the AI, ensuring that the generated output meets your expectations. You can craft prompts that yield high-quality and useful responses by incorporating clarity, specificity, context, conciseness, and relevance.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;即时工程是精心设计输入以指导人工智能模型生成所需输出的艺术和科学。这涉及设计和完善提示（问题、指令或陈述），以与人工智能语言模型进行有效沟通。这些提示的质量和结构直接影响人工智能响应的有用性和可靠性。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;什么是完美的提示？&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;最好的提示是能够&lt;a href=&#34;https://dzone.com/articles/unlocking-language-models-with-powerful-prompts&#34;&gt;有效地将您的要求传达给 AI 的提示&lt;/a&gt;，确保生成的输出满足您的期望。您可以通过结合清晰度、特异性、上下文、简洁性和相关性来制作提示，从而产生高质量和有用的响应。 &lt;/p&gt;</description>
      <pubDate>Wed, 18 Dec 2024 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【GitOps Software Development Principles – And the Benefits for the Entire Organization】GitOps 软件开发原则 – 以及对整个组织的好处</title>
      <link>https://dzone.com/articles/gitops-software-development-principles</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;The GitOps model for software development is a boon to productivity and software security. Companies that aren’t embracing it are missing a huge opportunity to release better software faster and with lower risk. This benefits the entire organization by reducing the possibility of everything from buggy software to cyberattacks. Here’s a bit of history to explain what GitOps is, how it has evolved, why developers love it, and why businesses should too.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;History of DevOps&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;DevOps was created about a decade ago to bridge the longstanding gap between software development and IT operations. Traditionally, these two groups worked in silos: developers focused on writing code and adding new features, while the operations team was responsible for deploying and maintaining the software in production environments. This separation often led to miscommunication, conflicting objectives, and delays. Developers aimed for rapid innovation, sometimes introducing changes that could destabilize the system, whereas operations prioritized system stability and uptime, often resisting frequent changes.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;软件开发的 GitOps 模型有助于提高生产力和软件安全性。不接受它的公司会错失一个以更低的风险更快地发布更好的软件的巨大机会。这可以降低从有缺陷的软件到网络攻击等各种情况的可能性，从而使整个组织受益。这里有一些历史来解释 GitOps 是什么、它是如何演变的、为什么开发人员喜欢它以及为什么企业也应该喜欢它。&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;DevOps 的历史&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;DevOps 大约十年前创建，旨在弥合软件开发和 IT 运营之间长期存在的差距。传统上，这两个团队各自为政：开发人员专注于编写代码和添加新功能，而运营团队负责在生产环境中部署和维护软件。这种分离常常导致沟通不畅、目标冲突和延误。开发人员的目标是快速创新，有时会引入可能破坏系统稳定性的更改，而运营人员则优先考虑系统稳定性和正常运行时间，通常会抵制频繁的更改。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Dec 2024 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Foundational Building Blocks for AI Applications】人工智能应用的基础构建块</title>
      <link>https://dzone.com/articles/foundational-building-blocks-for-ai-applications</link>
      <description>【&lt;p&gt;Startups are revolutionizing their growth trajectory by harnessing AI technologies. From intelligent chatbots handling customer inquiries to sophisticated recommendation systems personalizing user experiences, AI tools are enabling small teams to achieve outsized impact. Modern startups can now automate complex operations, derive actionable insights from data, and scale their services efficiently - capabilities once reserved for large enterprises. Let&#39;s explore the practical implementation of AI in startups, examining both the essential technology stack and real-world applications through the lens of system architecture.&lt;/p&gt;&#xA;&lt;p&gt;In the following article, we will dive deep into two ways you can leverage AI models in your organization&#39;s solution stack:&lt;/p&gt;】&lt;p&gt;初创公司正在利用人工智能技术彻底改变其增长轨迹。从处理客户询问的智能聊天机器人到提供个性化用户体验的复杂推荐系统，人工智能工具使小型团队能够发挥巨大的影响力。现代初创公司现在可以自动化复杂的操作，从数据中获取可行的见解，并有效地扩展其服务——这些能力曾经是大型企业保留的。让我们探索人工智能在初创企业中的实际实施，通过系统架构的视角来审视基本技术堆栈和实际应用。&lt;/p&gt;&#xA;&lt;p&gt;在下一篇文章中，我们将深入探讨您在组织的解决方案堆栈中利用 AI 模型的两种方法：&lt;/p&gt;</description>
      <pubDate>Wed, 18 Dec 2024 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Designing Accessible Telehealth Platforms for Older Adults: A React Developer&#39;s Guide】为老年人设计无障碍远程医疗平台：React 开发人员指南</title>
      <link>https://dzone.com/articles/a-react-developers-guide-to-designing-telehealth-platforms</link>
      <description>【&lt;p&gt;As telehealth services increasingly become relevant in today’s world, particularly after the COVID-19 pandemic, all the user populations, including the elderly, must benefit from the programs leading to the importance of the above recommendations.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/advanced-react-js-concepts-a-deep-dive&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;React&lt;/a&gt; is adopted in this article to examine the key technical approaches for creating accessible telehealth applications that should follow the WCAG. As with many things, it is often possible to build interfaces that are accessible to all, including the elderly, by considering the following key areas of design or development.&lt;/p&gt;】&lt;p&gt;随着远程医疗服务在当今世界变得越来越重要，特别是在 COVID-19 大流行之后，包括老年人在内的所有用户群体都必须从这些计划中受益，从而导致上述建议的重要性。 &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/advanced-react-js-concepts-a-deep-dive&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;React&lt;/a&gt; 是本文采用的方法是为了研究创建应遵循 WCAG 的可访问远程医疗应用程序的关键技术方法。与许多事情一样，通过考虑以下设计或开发的关键领域，通常可以构建所有人（包括老年人）都可以访问的界面。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Dec 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Delta Live Tables in Databricks: A Guide to Smarter, Faster Data Pipelines】Databricks 中的 Delta 实时表：更智能、更快速的数据管道指南</title>
      <link>https://dzone.com/articles/a-guide-to-delta-live-tables-in-databricks</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Data pipelines are the main arteries of any organization that functions in the data economy. However, building and maintaining them can be a complex, time-consuming process and can be quite frustrating for data engineers. Maintaining data quality, maintaining data processes, and processing data in real-time are programmable challenges that can complicate projects and, thus, the quality of information.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Delta Live Tables (DLT) from Databricks wants to do this differently. Through data validation automation, pipeline management simplification, and real-time processing handling by DLT, data engineers are able to design more efficient pipelines with fewer issues. This article will introduce you to DLT, showing how it can make data pipeline management easier and more efficient.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;数据管道是任何在数据经济中运作的组织的主要动脉。然而，构建和维护它们可能是一个复杂且耗时的过程，并且对于数据工程师来说可能非常令人沮丧。维护数据质量、维护数据流程和实时处理数据是可编程挑战，可能会使项目复杂化，从而影响信息质量。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Databricks 的 Delta Live Tables (DLT) 希望以不同的方式做到这一点。通过数据验证自动化、管道管理简化以及 DLT 的实时处理处理，数据工程师能够设计更高效的管道并减少问题。本文将向您介绍 DLT，展示它如何使数据管道管理变得更轻松、更高效。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Dec 2024 15:00:13 +0000</pubDate>
    </item>
    <item>
      <title>【Key Considerations for On-Premise to Cloud Data Warehouse Migration】本地数据仓库迁移到云数据仓库的关键注意事项</title>
      <link>https://dzone.com/articles/key-factors-for-on-premise-to-cloud-data-warehouse-migration</link>
      <description>【&lt;p&gt;Migrating your on-premise data warehouse to the cloud — an efficient and scalable storage solution — requires thorough planning. You&#39;ll need to evaluate cost impact, scalability benefits, performance gains, governance structures, and compliance requirements, not to mention security and privacy implications.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;This article will explore these critical factors while giving you a high-level overview of the challenges inherent in transitioning your data to the cloud.&lt;/p&gt;】&lt;p&gt;将本地数据仓库迁移到云端（一种高效且可扩展的存储解决方案）需要周密的规划。您需要评估成本影响、可扩展性优势、性能提升、治理结构和合规性要求，更不用说安全和隐私影响。 &lt;/p&gt;&#xA;&lt;p&gt;本文将探讨这些关键因素，同时为您提供有关将数据迁移到云所固有的挑战的高级概述。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Dec 2024 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Can Pure Scrum Actually Work?】纯粹的 Scrum 真的可行吗？</title>
      <link>https://dzone.com/articles/can-pure-scrum-actually-work</link>
      <description>【&lt;p&gt;Can you rely on pure Scrum to transform your organization and deliver value? Not always. While Scrum excels in simplicity and flexibility, applying it “out of the box” often falls short in corporate contexts due to limitations in product discovery, scaling, and portfolio management.&lt;/p&gt;&#xA;&lt;p&gt;This article explores the conditions under which pure &lt;a href=&#34;https://dzone.com/articles/what-is-scrum-software-development-how-it-works-be&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Scrum&lt;/a&gt; thrives, the organizational DNA required to support it, and practical scenarios where it works best — along with a candid look at where it struggles. Discover whether pure Scrum is a realistic approach for your team and how thoughtful adaptation can unlock its true potential.&lt;/p&gt;】&lt;p&gt;您可以依靠纯粹的 Scrum 来改造您的组织并交付价值吗？并非总是如此。虽然 Scrum 在简单性和灵活性方面表现出色，但由于产品发现、扩展和产品组合管理方面的限制，“开箱即用”的应用在企业环境中往往存在不足。&lt;/p&gt;&#xA;&lt;p&gt;本文探讨了纯 &lt;a href=&#34;https://dzone.com/articles/what-is-scrum-software-development-how-it-works-be&#34; rel=&#34;noopener noreferrer&#34; 的条件target=&#34;_blank&#34;&gt;Scrum&lt;/a&gt; 蓬勃发展，支持它所需的组织 DNA，以及它最有效的实际场景 - 以及对它的困境的坦率审视。了解纯 Scrum 对您的团队是否是一种现实的方法，以及深思熟虑的适应如何释放其真正的潜力。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Dec 2024 14:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>