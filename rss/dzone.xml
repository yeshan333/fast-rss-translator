<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Secrets Management With Datadog Secret Backend Utility】秘密管理与datadog秘密后端实用程序</title>
      <link>https://dzone.com/articles/secrets-management-datadog-secret-backend-utility</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Datadog has 600+ out-of-the-box integrations that cover a variety of technologies, from web servers to databases to 3rd party SaaS services. For many of these integrations, there are agent configuration files that require storing credentials for the technology. The larger issue is around how to store those credentials. Many security-minded engineers would prefer not to store those secrets in plaintext in case of unauthorized access to their servers or shared access to Datadog configuration. What not everyone knows is that the Datadog agent has a mechanism to run an executable at agent startup in order to reach out to a secrets management tool of your choosing and decrypt those secrets, storing them in memory for use by the agent.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;&lt;strong&gt;Secrets Configuration&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;If you want to utilize &lt;a href=&#34;https://dzone.com/articles/lessons-on-secrets-security-from-datadog-research&#34;&gt;Datadog’s secrets management capabilities&lt;/a&gt;, there is a specific notation that the agent recognizes. Let’s take the Datadog MySQL integration as an example. While the integration, by default, only collects information from performance-related tables, you might grant additional access to other database tables to ingest more business-specific metrics into the platform via custom queries. This may require additional permissions for more sensitive data, so you might want to ensure that the credential is not stored in plaintext in the integration configuration.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr”&gt; datadog具有600多个现成的集成，涵盖了从Web服务器到数据库再到第三方SaaS服务的各种技术。对于许多集成，有代理配置文件需要该技术存储凭据。更大的问题是如何存储这些凭据。如果未经授权访问其服务器或共享dataDog配置访问权限，许多具有安全意识的工程师将不愿意将这些秘密存储在明文中。并不是每个人都知道的是，DataDog代理具有在Agent Startup上运行可执行文件的机制，以便与您选择和解密这些秘密的秘密管理工具，将其存储在内存中以供代理使用。&lt;/p。&lt;/p &gt;&#xA;&lt;h2 dir =“ ltr”&gt; &lt;strong&gt;秘密配置&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;如果要使用&lt;a href =” https://dzone.com/articles/Articles/lessons-on-secrets-secrets-secrety-from-datadog-research&gt; datadog的秘密管理能力&lt;/a &gt;，代理商识别的特定符号。让我们以Datadog MySQL集成为例。虽然默认情况下的集成仅从与性能相关的表中收集信息，但您可以授予对其他数据库表的其他访问权限，以通过自定义查询将更多特定于商业的指标摄入平台。这可能需要对更敏感的数据进行额外的权限，因此您可能需要确保在集成配置中不会以纯文本存储凭证。 &lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2025 14:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Building a Machine Learning Pipeline Using PySpark】使用Pyspark建造机器学习管道</title>
      <link>https://dzone.com/articles/building-machine-learning-pipeline-pyspark</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;In this article, we will look at an example of a complete machine learning (ML) pipeline using Python and PySpark. This pipeline includes data loading, preprocessing, feature engineering, model training, and evaluation.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;The main idea here is to provide you with a jump start on building your own ML pipelines. We will use Spark capabilities to build the pipeline. PySpark offers ML libraries that are very powerful and efficient when it comes to processing large volumes of data.&amp;nbsp;&lt;/p&gt;】&lt;p数​​据可选 - 段落=“”&gt;在本文中，我们将使用Python和Pyspark查看完整的机器学习（ML）管道的示例。该管道包括数据加载，预处理，功能工程，模型培训和评估。 &lt;/p&gt;&#xA;&lt;P数据选择 - 段落=“”&gt;这里的主要思想是在构建自己的ML管道时为您提供启动。我们将使用火花功能来构建管道。 Pyspark提供的ML库在处理大量数据方面非常有效和有效。 &lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Understanding the Two Schools of Unit Testing】了解两所单元测试的学校</title>
      <link>https://dzone.com/articles/two-schools-of-unit-testing</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Unit testing is an essential part of software development. Unit tests help to check the correctness of newly written logic as well as prevent a system from regression by testing old logic every time (preferably with every build). However, there are two different approaches (or schools) to writing unit tests: Classical (a.k.a Detroit) and Mockists (or London) schools of unit testing.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;In this article, we’ll explore these two schools, compare their methodologies, and analyze their pros and cons. By the end, you should have a clearer understanding of which approach might work best for your needs.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;单元测试是软件开发的重要组成部分。单位测试有助于检查新书面​​逻辑的正确性，并通过每次测试旧逻辑（最好在每个构建中）来防止系统回归。但是，有两种不同的方法（或学校）来编写单位测试：古典（又称底特律）和单位测试的户外学派（或伦敦）。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;在本文中，我们将探索这两所学校，比较他们的方法论并分析他们的利弊。最后，您应该更清楚地了解哪种方法可能最适合您的需求。&lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2025 22:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Scaling Read Your Own Writes Consistency】缩放阅读您自己的写作一致性</title>
      <link>https://dzone.com/articles/scaling-read-your-own-writes-consistency</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Building on the foundational understanding of Read Your Own Writes (RYW) consistency outlined in my previous &lt;a href=&#34;https://dzone.com/articles/read-your-own-writes-consistency&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;, this follow-up dives into advanced strategies for scaling RYW in distributed systems. As systems grow in complexity and handle millions of concurrent users, ensuring RYW consistency becomes a more nuanced challenge. This article will explore cutting-edge techniques, trade-offs, and case studies to help practitioners implement RYW at scale.&lt;/p&gt;&#xA;&lt;h2 data-pm-slice=&#34;1 1 []&#34;&gt;Challenges in Scaling RYW&lt;/h2&gt;&#xA;&lt;h3&gt;1. Geo-Distributed Systems&lt;/h3&gt;&#xA;&lt;p&gt;In globally distributed systems, writes often need to propagate across data centers in different regions. Ensuring &lt;a href=&#34;https://dzone.com/articles/read-your-own-writes-consistency&#34;&gt;RYW consistency&lt;/a&gt; for users whose requests span multiple regions introduces latency and synchronization challenges. Strategies must balance performance with correctness.&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt;在我以前的&lt;a href =“ https://dzone.com/articles/read-actilect中概述了您自己的写作（RYW）一致性的基础理解（RYW）的基础理解上Your-ath-writes的一致性“ rel =” noopener noreferrer“ target =” _ blank“&gt; acress &lt;/a&gt;，此后续介绍进入了在分布式系统中扩展RYW的高级策略。随着系统的复杂性增长并处理数百万并发的用户，确保RYW一致性成为一个更加细微的挑战。本文将探讨最先进的技术，权衡和案例研究，以帮助从业者大规模实施RYW。&lt;/p&gt;&#xA;&lt;h2 data-pm-slice =“ 1 1 []&gt;缩放RYW &lt;/h2&gt;的挑战&#xA;&lt;H3&gt; 1。地理分布系统&lt;/h3&gt;&#xA;&lt;p&gt;在全球分布式系统中，写道通常需要在不同地区的数据中心进行传播。确保&lt;a href =“ https://dzone.com/articles/read-your-own-writes-conistency”&gt; ryw一致性&lt;/a&gt;对于用户跨越多个区域的用户会引入延迟和同步挑战。策略必须平衡性能与正确性。&lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2025 12:00:10 +0000</pubDate>
    </item>
    <item>
      <title>【Develop Microservices Using Azure Functions, API Management】使用Azure功能，API管理开发微服务</title>
      <link>https://dzone.com/articles/develop-microservices-azure-functions-api-management</link>
      <description>【&lt;p&gt;Microservices are a popular architectural pattern for building scalable and modular applications. They allow developers to focus on building small, independent, and reusable services that interact with each other through APIs. This blog will guide you through creating a simple serverless microservice and deploying it to Azure Cloud. I have used this approach to start building simple prototypes of various products, get early feedback from customers, and iterate faster.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Components&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3&gt;&lt;strong&gt;Azure Functions: The Serverless Workhorse&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/serverless-computing-with-azure-functions&#34;&gt;Azure Functions&lt;/a&gt; is a serverless compute service that lets you run code pieces (functions) in Azure Cloud without worrying about provisioning infrastructure. We will leverage the event-driven functionality of Azure Functions to execute some API logic based on an HTTP request trigger.&lt;/p&gt;】&lt;p&gt;微服务是用于构建可扩展和模块化应用程序的流行架构模式。它们使开发人员可以专注于通过API相互交互的小型，独立和可重复使用的服务。该博客将指导您创建一个简单的无服务器微服务并将其部署到Azure Cloud。我已经使用这种方法开始构建各种产品的简单原型，从客户那里获得早期反馈，并更快地进行迭代。&lt;/p&gt;&#xA;&lt;h2&gt; &lt;strong&gt;组件&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;h3&gt; &lt;strong&gt; azure函数：无服务器的工作马&lt;/strong&gt; &lt;/h3&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/articles/serverless-computing-with-azure-functions”&gt; azure functions &lt;/a&gt;是一款无服务器的计算服务，可以使您可以在中运行代码（功能）（功能） Azure Cloud而不必担心配置基础架构。我们将利用Azure功能的事件驱动的功能来基于HTTP请求触发器执行某些API逻辑。&lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Structured Logging in Grails 6.2.3】结构化伐木6.2.3</title>
      <link>https://dzone.com/articles/structured-logging-in-grails</link>
      <description>【&lt;p&gt;Traditionally, logging has been unstructured and relies on plain text messages to file. This approach is not suitable for large-scale distributed systems emitting tons of events, and parsing unstructured logs is cumbersome for extracting any meaningful insights.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/structured-logging-2&#34;&gt;Structured logging&lt;/a&gt; offers a solution to the above problem by capturing logs in a machine-readable format such as JSON, and it becomes easier to query and analyze log data in a system where logs are aggregated into centralized platforms like ELK (ElasticSearch, Logstash, Kibana).&amp;nbsp;&lt;/p&gt;】&lt;p&gt;传统上，记录是非结构化的，依靠纯文本消息要提交。这种方法不适用于发出大量事件的大规模分布式系统，而解析非结构化日志对于提取任何有意义的见解很麻烦。&lt;/p&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/articles/-structred-logging-2”&gt;结构化日志，并且在将日志聚合到麋鹿（Elasticsearch，Logstash，Kibana）等集中式平台中的系统中查询和分析日志数据变得更加容易。 &lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Bridging Graphviz and Cytoscape.js for Interactive Graphs】桥接GraphViz和Cytoscape.js用于交互式图</title>
      <link>https://dzone.com/articles/bridging-graphviz-cytoscapejs-interactive-graphs</link>
      <description>【&lt;p&gt;Visualizing complex digraphs often requires balancing clarity with interactivity. Graphviz is a great tool for generating static graphs with optimal layouts, ensuring nodes and edges don&#39;t overlap. On the flip side, Cytoscape.js offers interactive graph visualizations but doesn&#39;t inherently prevent overlapping elements, which can clutter the display.&lt;/p&gt;&#xA;&lt;p&gt;This article describes a method to convert Graphviz digraphs into interactive Cytoscape.js graphs. This approach combines Graphviz&#39;s layout algorithms with Cytoscape.js&#39;s interactive capabilities, resulting in clear and navigable visualizations.&lt;/p&gt;】&lt;p&gt;可视化复杂的挖掘通常需要平衡清晰度与交互性。 GraphViz是一个很好的工具，用于生成具有最佳布局的静态图形，确保节点和边缘不会重叠。另一方面，cytoscape.js提供交互式图可视化，但并不能固有地阻止重叠的元素，这会使显示器混乱。&lt;/p&gt;&#xA;&lt;p&gt;本文介绍了一种将GraphViz Digraphs转换为Interactive Cytoscape.js图的方法。这种方法将GraphViz的布局算法与cytoscape.js的交互功能结合在一起，从而产生清晰且可导航的可视化。&lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【SmartXML: An Alternative to XPath for Complex XML Files】SmartXML：XPATH的替代XPATH的XML文件</title>
      <link>https://dzone.com/articles/smartxml-xpath-alternative-complex-xml</link>
      <description>【&lt;p&gt;XML is one of the most widely used data formats, which in popularity can compete only with JSON. Still, very often, this format is used as an intermediate representation of data that needs to be transferred between two information systems. And like any intermediate representation the final storage point of XML is a database.&lt;/p&gt;&#xA;&lt;p&gt;Usually, &lt;a href=&#34;https://dzone.com/articles/xpath-in-selenium-a-complete-guide&#34;&gt;XPath&lt;/a&gt; is used to parse XML because it represents a set of functions that allows you to extract data from an XML tree. However, not all XML files are formed correctly, which creates great difficulties when using XPath.&lt;/p&gt;】&lt;p&gt; XML是使用最广泛的数据格式之一，其受欢迎程度只能与JSON竞争。尽管如此，这种格式通常还是用作需要在两个信息系统之间传输的数据的中间表示。与任何中间表示一样，XML的最终存储点是数据库。&lt;/p&gt;&#xA;&lt;p&gt;通常，&lt;a href =“ https://dzone.com/articles/xpath-in-selenium-a-complete-guide”&gt; xpath &lt;/a&gt;用于解析XML，因为它代表了一组函数这使您可以从XML树中提取数据。但是，并非所有XML文件都正确形成，这在使用XPath时会造成很大的困难。&lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to Build a Data Dashboard Prototype With Generative AI】如何使用生成AI构建数据仪表板原型</title>
      <link>https://dzone.com/articles/build-data-dashboard-prototype-generative-ai</link>
      <description>【&lt;p&gt;This article is a tutorial that shows how to build a data dashboard to visualize book reading data taken from Goodreads. It uses a low-code approach to prototype the dashboard using natural language prompts to an open-source tool, Vizro-AI, which generates Plotly charts that can be added to a template dashboard.&lt;/p&gt;&#xA;&lt;p&gt;You&#39;ll see how to iterate prompts to build three charts then add the prompts to a Notebook to generate an interactive dashboard. Finally, the generated dashboard code is added to a shared project that can be tweaked to improve the prototype. It&#39;s still not complete and can definitely be extended and improved upon. Let me know in the comments if you try it out!&lt;/p&gt;】&lt;p&gt;本文是一个教程，它显示了如何构建数据仪表板以可视化从Goodreads获取的书籍阅读数据。它使用低编码方法使用自然语言提示到开源工具Vizro-ai的仪表板原型，该工具生成了可以添加到模板仪表板的绘图图。&lt;/p&gt;&#xA;&lt;p&gt;您将看到如何迭代提示构建三个图表，然后将提示添加到笔记本上以生成交互式仪表板。最后，将生成的仪表板代码添加到共享项目中，该项目可以进行调整以改进原型。它仍然不完整，绝对可以扩展和改进。如果您尝试一下，请在评论中告诉我！&lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2025 20:00:09 +0000</pubDate>
    </item>
    <item>
      <title>【Commonly Occurring Errors in Microsoft Graph Integrations and How To Troubleshoot Them (Part 7)】Microsoft Graph集成中通常发生错误以及如何对其进行故障排除（第7部分）</title>
      <link>https://dzone.com/articles/errors-in-microsoft-graph-integrations-part-seven</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Retrieving attachments from SharePoint lists is a key feature when integrating data from SharePoint into external applications. Microsoft offers two possible APIs: the SharePoint REST API and the Microsoft Graph API. Both approaches provide methods to access the desired data. We explain the steps for configuring and using these APIs to retrieve attachments from a SharePoint list.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;SharePoint Lists&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/sharepoint-integration-with-mulesoft&#34;&gt;SharePoint&lt;/a&gt; provides different list types to suit various data management needs and applications.&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []”&gt;从SharePoint列表中检索附件是将来自SharePoint集成到外部应用程序中的数据时的关键功能。 Microsoft提供了两个可能的API：SharePoint REST API和Microsoft Graph API。两种方法都提供了访问所需数据的方法。我们说明用于配置和使用这些API从SharePoint列表中检索附件的步骤。&lt;/p&gt;&#xA;&lt;H2&gt; &lt;strong&gt; SharePoint列表&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/articles/sharepoint-integration-with-mulesoft”&gt; SharePoint &lt;/a&gt;提供不同的列表类型来满足各种数据管理需求和应用程序。&lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2025 13:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>