<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Cutting-Edge Object Detection for Autonomous Vehicles: Advanced Transformers and Multi-Sensor Fusion】自动驾驶汽车的尖端对象检测：高级变压器和多传感器融合</title>
      <link>https://dzone.com/articles/advanced-object-detection-autonomous-vehicles-transformers-fusion</link>
      <description>【&lt;p&gt;Developers of autonomous driving systems must ensure their detectors handle varied weather, occlusions, and wide-ranging object sizes without draining hardware resources. Traditional CNN-based pipelines have plateaued in many scenarios. This article explores &lt;a href=&#34;http://Transformer%20architectures&#34;&gt;advanced Transformer architectures&lt;/a&gt; for 3D detection, LiDAR-camera cross-attention modules, and specialized polyline-based lane estimation with nuanced synchronization methods. Readers familiar with baseline approaches (two-stage detectors or initial Transformer backbones) will find deeper discussions on improved attention blocks, memory management, and on-device constraints.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Transformer-Based 3D Detection With Enhanced Modules&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3&gt;&lt;strong&gt;DETR Variants for Multi-View Geometry&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Conventional DETR processes 2D images, but researchers have introduced extensions such as Deformable DETR, DETR3D and BEVFormer. These variants align multi-camera data in three-dimensional space using geometry cues. When multiple cameras overlook a complex intersection, a 3D aggregator can unify the perspective transforms.&lt;/p&gt;】&lt;p&gt;自动驾驶系统的开发人员必须确保其检测器处理多种天气，遮挡和宽量的物体尺寸，而不会耗尽硬件资源。在许多情况下，传统的基于CNN的管道已经平稳。本文探讨了&lt;a href =“ http：// Transformer％20构造”&gt;高级变压器体系结构&lt;/a&gt;用于3D检测，LIDAR-CAMERA跨意义模块和细微的同步方法。熟悉基线方法（两阶段探测器或初始变压器骨架）的读者将在改善注意力块，内存管理和设备上的限制方面进行更深入的讨论。&lt;/p&gt;&#xA;&lt;H2&gt; &lt;strong&gt;基于变压器的3D检测，具有增强的模块&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;h3&gt; &lt;strong&gt;多视图几何形状的DETR变体&lt;/strong&gt; &lt;/h3&gt;&#xA;&lt;p&gt;常规的DETR处理2D图像，但是研究人员引入了扩展，例如可变形的DETR，DETR3D和BEVFORMER。这些变体使用几何形状提示在三维空间中对齐多相机数据。当多个摄像机忽略复杂的交叉点时，3D聚合器可以统一透视变换。&lt;/p&gt;</description>
      <pubDate>Thu, 08 May 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Cypress Edge: Next-Level Testing Strategies for React Developers】柏树边缘：React开发人员的下一级测试策略</title>
      <link>https://dzone.com/articles/cypress-edge-testing-strategies-react-developers</link>
      <description>【&lt;h2&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Testing is the backbone of building reliable software. As a React developer, you’ve likely heard about &lt;a href=&#34;https://dzone.com/articles/cypress-tutorial-a-comprehensive-guide-with-exampl&#34;&gt;Cypress&lt;/a&gt;—a tool that’s been making waves in the testing community. But how do you go from writing your first test to mastering complex scenarios? Let’s break it down together, step by step, with real-world examples and practical advice.&lt;/p&gt;&#xA;&lt;h2&gt;Why Cypress Stands Out for React Testing&lt;/h2&gt;&#xA;&lt;p&gt;Imagine this: You’ve built a React component, but it breaks when a user interacts with it. You spend hours debugging, only to realize the issue was a missing prop. Cypress solves this pain point by letting you test components in isolation, catching errors early. Unlike traditional testing tools, Cypress runs directly in the browser, giving you a real-time preview of your tests. It’s like having a pair of eyes watching every click, hover, and API call.&lt;/p&gt;】&lt;h2&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;测试是构建可靠软件的骨干。作为React开发人员，您可能已经听说过&lt;a href =“ https://dzone.com/articles/cypress-tutorial-a-comprehens-guide-guide-with-exampl”&gt; cypress &lt;/a&gt;  - 一种在测试社区中引起波浪的工具。但是，如何从编写第一个测试到掌握复杂方案？让我们通过现实世界的例子和实践建议逐步将其分解在一起。&lt;/p&gt;&#xA;&lt;h2&gt;为什么柏树突出进行反应测试&lt;/h2&gt;&#xA;&lt;p&gt;想象一下：您已经构建了一个React组件，但是当用户与之交互时，它会破裂。您花了数小时调试，只是意识到这个问题是缺失的道具。柏树通过让您孤立地测试组件，尽早发现错误来解决这个疼痛点。与传统的测试工具不同，柏树直接在浏览器中运行，为您提供了测试的实时预览。这就像每次点击，悬停和API呼叫一样看着一只眼睛。&lt;/p&gt;</description>
      <pubDate>Thu, 08 May 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Start Coding With Google Cloud Workstations】开始使用Google Cloud Workstations编码</title>
      <link>https://dzone.com/articles/google-cloud-workstations</link>
      <description>【&lt;p data-sourcepos=&#34;7:1-7:688&#34;&gt;Google Cloud Workstations provide powerful, managed solutions for modern software development. By offering secure, consistent, and accessible cloud-based development environments, they tackle common frustrations associated with local setups, like configuration drift, dependency issues, and security concerns. Utilizing containerization and Google Cloud&#39;s scalable infrastructure, Workstations empower developers to code from anywhere with their favorite IDEs, guaranteeing a standardized and secure workflow. This approach simplifies developer onboarding, boosts collaboration, and significantly increases productivity by shifting the focus from environment management to writing code.&lt;/p&gt;&#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;p&gt;Enable the Cloud Workstations API: Before you begin, ensure the necessary API is active. Go to the Google Cloud Console&#39;s APIs &amp;amp; Services section. Search for and enable the &#34;Cloud Workstations API&#34; if it is not currently enabled.&lt;/p&gt;】&lt;P Data-Sourcepos =“ 7：1-7：688”&gt; Google Cloud Workstations为现代软件开发提供了强大的，托管的解决方案。通过提供安全，一致和可访问的基于云的开发环境，它们可以解决与本地设置相关的常见挫败感，例如配置漂移，依赖关系问题和安全问题。利用容器化和Google Cloud的可扩展基础架构，工作站使开发人员能够从自己喜欢的IDE中的任何地方进行编码，从而保证了标准化和安全的工作流程。这种方法通过将重点从环境管理转移到编写代码来简化开发人员的登机，提高协作并显着提高生产率。&lt;/p&gt;&#xA;&lt;H2&gt;先决条件&lt;/h2&gt;&#xA;&lt;p&gt;启用Cloud Workstations API：在开始之前，请确保必要的API处于活动状态。转到Google Cloud Console的API＆Services部分。如果当前未启用“云工作站API”，搜索并启用了“云工作站API”。&lt;/p&gt;</description>
      <pubDate>Thu, 08 May 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Power BI Embedded Analytics — Part 1.1: Power BI Authoring Data Federation】Power BI嵌入式分析 - 第1.1部分：Power BI创作数据联合会</title>
      <link>https://dzone.com/articles/power-bi-authoring-data-federation</link>
      <description>【&lt;div dir=&#34;auto&#34;&gt;&#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This article dives into the details of Power BI Authoring Data Federation. &lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;This is a sub-part of the &lt;a href=&#34;https://dzone.com/articles/introduction-power-bi-authoring-overview&#34; target=&#34;_blank&#34;&gt;Power BI Embedded Analytics — Part 1&lt;/a&gt; article, where Power BI Authoring and introduction to Power BI Embedded Analytics are discussed.&lt;/span&gt;&amp;nbsp;&lt;/p&gt;&#xA; &lt;p&gt;So, going through the discussion on &lt;a href=&#34;https://dzone.com/articles/introduction-power-bi-authoring-overview&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Power BI Embedded Analytics — Part 1&lt;/a&gt; is recommended.&lt;/p&gt;】&lt;div dir =“ auto”&gt;&#xA; &lt;p&gt; &lt;strong&gt;注意&lt;/strong&gt;：本文介绍了Power BI创作数据联合会的详细信息。 &lt;span style =“边距：0px;填充：0px;“&gt;这是&lt;a href =” https://dzone.com/articles/introduction-power-power-bi-authoring-othoring-overor-view“ targe讨论。&lt;/span&gt; &lt;/p&gt;&#xA; &lt;p&gt;因此，仔细讨论&lt;a href =“ https://dzone.com/articles/introduction-power-power-bi-authoring-authoring-operview” rel =“ noopener noreferrer” target =“ _ blank”&gt; power barmand&gt; power bi blake&gt; power bi bi嵌入式分析 -  part 1 &lt;/a&gt; part 1 &lt;/a&gt;建议。&lt;/p&gt;。</description>
      <pubDate>Thu, 08 May 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to Configure and Customize the Go SDK for Azure Cosmos DB】如何为Azure Cosmos DB配置和自定义GO SDK</title>
      <link>https://dzone.com/articles/configure-customize-go-sdk-azure-cosmos-db</link>
      <description>【&lt;p&gt;The Go SDK for Azure Cosmos DB is built on top of the core Azure Go SDK package, which implements several patterns that are applied throughout the SDK. The core SDK is designed to be quite customizable, and its configurations can be applied with the ClientOptions struct when creating a new Cosmos DB client object using NewClient (and other similar functions).&lt;/p&gt;&#xA;&lt;p&gt;If you peek inside the &lt;a href=&#34;https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/azcore/policy#ClientOptions&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;azcore.ClientOptions&lt;/a&gt; struct, you will notice that it has many options for configuring the HTTP client, retry policies, timeouts, and other settings. In this blog, we will cover how to make use of (and extend) these common options when building applications with the Go SDK for Cosmos DB.&lt;/p&gt;】&lt;p&gt; Azure Cosmos DB的GO SDK建立在Core Azure GO SDK软件包的顶部，该软件包实现了整个SDK中应用的几种模式。 Core SDK设计为可自定义的，其配置可以使用NewClient（和其他类似功能）创建新的Cosmos DB客户端对象。&lt;/p&gt;&gt; &lt;/p&gt;&#xA;&lt;p&gt;如果您在&lt;a a href =“ https://pkg.go.dev/github.com/azure/azure-sdk-for-go/sdk/sdk/azcore/policy#clientoptions“ rel =” noopener noreferrer nooreferrer“ target =” HTTP客户端，重试策略，超时和其他设置。在此博客中，我们将介绍如何在使用GO SDK for Cosmos db构建应用程序时使用（并扩展）这些共同的选项。&lt;/p&gt;</description>
      <pubDate>Thu, 08 May 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Getting Started With GenAI on BigQuery: A Step-by-Step Guide】Genai在BigQuery上开始：逐步指南</title>
      <link>https://dzone.com/articles/getting-started-with-genai-on-bigquery</link>
      <description>【&lt;h2 dir=&#34;ltr&#34;&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Companies are continuously looking for methods to extract important information from their continuously growing databases. Machine learning has become a game-changer in this mission, allowing us to predict user behavior, discover emerging trends, and automate complex decision-making.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/control-access-to-google-bigquery-data&#34;&gt;Google Cloud&#39;s BigQuery ML&lt;/a&gt; has completely redefined the way we deal with ML by bringing model training directly to the data warehouse. This means we can come up with sophisticated ML models by writing simple SQL queries and deploying them, which removes the need to move complex data or integrate with other separate ML platforms.&lt;/p&gt;】&lt;h2 dir =“ ltr”&gt; &lt;strong&gt;概述&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;公司一直在寻找从不断增长的数据库中提取重要信息的方法。机器学习已成为此任务中的游戏规则改变者，使我们能够预测用户行为，发现新兴趋势并自动化复杂的决策。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt; &lt;a href =“ https://dzone.com/articles/control-access-to-google-bigquery-data”&gt; Google Cloud的BigQuery ML &lt;/a&gt;已经完全重新定义了我们通过直接将模型培训到数据仓库来处理ML的方式。这意味着我们可以通过编写简单的SQL查询并部署它们来提出复杂的ML模型，从而消除了移动复杂数据或与其他单独的ML平台集成的需求。&lt;/p&gt;</description>
      <pubDate>Thu, 08 May 2025 12:00:06 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Advanced Traffic Management in Multi-Cloud Kubernetes: Scaling With Multiple Istio Ingress Gateways】掌握多云kubernetes中的高级流量管理：使用多个ISTIO入口网关缩放</title>
      <link>https://dzone.com/articles/scaling-multiple-istio-ingress-gateways</link>
      <description>【&lt;p&gt;In my experience managing large-scale Kubernetes deployments across multi-cloud platforms, traffic control often becomes a critical bottleneck, especially when dealing with mixed workloads like APIs, UIs, and transactional systems. While Istio’s default ingress gateway does a decent job, I found that relying on a single gateway can introduce scaling and isolation challenges.&lt;/p&gt;&#xA;&lt;p&gt;That’s where configuring multiple Istio Ingress Gateways can make a real difference. In this article, I’ll walk you through how I approached this setup, what benefits it unlocked for our team, and the hands-on steps we used, along with best practices and YAML configurations that you can adapt in your own clusters.&lt;/p&gt;】&lt;p&gt;根据我在多云平台上管理大规模kubernetes部署的经验，流量控制通常会成为关键的瓶颈，尤其是在处理API，UIS和Transactional Systems等混合工作负载时。虽然ISTIO的默认入口网关从事不错的工作，但我发现依靠一个网关可以引入缩放和隔离挑战。&lt;/p&gt;&#xA;&lt;p&gt;这就是配置多个ISTIO入口网关可以真正差异的地方。在本文中，我将介绍如何处理此设置，对团队解锁的好处以及我们使用的动手步骤，以及您可以在自己的群集中适应的最佳实践和YAML配置。&lt;/p&gt;</description>
      <pubDate>Thu, 08 May 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Testing SingleStore&#39;s MCP Server】测试Singlestore的MCP服务器</title>
      <link>https://dzone.com/articles/testing-singlestores-mcp-server</link>
      <description>【&lt;p&gt;Model Context Protocol (MCP) appears to be gaining traction since its release in 2024.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;SingleStore recently released an &lt;a href=&#34;https://github.com/singlestore-labs/mcp-server-singlestore&#34; target=&#34;_blank&#34;&gt;official MCP Server&lt;/a&gt;, and this article will show how to install, configure, and run this from the CLI using a freely available tool called &lt;a href=&#34;https://github.com/mark3labs/mcphost&#34; target=&#34;_blank&#34;&gt;MCPHost&lt;/a&gt;.&lt;/p&gt;】&lt;p&gt;模型上下文协议（MCP）自2024年发布以来似乎正在获得吸引力。&lt;/p&gt;&#xA;&lt;p&gt; Singlestore最近发布了&lt;a href =“ https://github.com/singlestore-labs/mcp-server-singlestore” target =“ _ black”&gt;官方MCP Server &lt;/a&gt;，本文将显示如何使用CLI使用称为&lt;a的免费工具&lt;a a &lt;/a&gt; href =“ https://github.com/mark3labs/mcphost” target =“ _ blank”&gt; mcphost &lt;/a&gt;。&lt;/p&gt;</description>
      <pubDate>Thu, 08 May 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Cloud Cost Optimization for ML Workloads With NVIDIA DCGM】NVIDIA DCGM对ML工作负载的云成本优化</title>
      <link>https://dzone.com/articles/cloud-cost-optimization-for-ml-workloads</link>
      <description>【&lt;h2&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Running &lt;a href=&#34;https://dzone.com/ai-ml&#34;&gt;machine learning&lt;/a&gt; (ML) workloads in the cloud can become prohibitively expensive when teams overlook resource orchestration. Large-scale data ingestion, GPU-based inference, and ephemeral tasks often rack up unexpected fees. This article offers a detailed look at advanced strategies for cost management, including:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;Dynamic Extract, Transfer, Load (ETL) schedules using &lt;strong&gt;SQL triggers&amp;nbsp;&lt;/strong&gt;and partitioning&lt;/li&gt;&#xA; &lt;li&gt;Time-series modeling—Seasonal Autoregressive Integrated Moving Average&lt;em&gt;&amp;nbsp;(&lt;/em&gt;SARIMA) and Prophet—with hyperparameter tuning&lt;/li&gt;&#xA; &lt;li&gt;GPU provisioning with &lt;strong&gt;NVIDIA DCGM&lt;/strong&gt; and multi-instance GPU configurations&lt;/li&gt;&#xA; &lt;li&gt;In-depth autoscaling examples for AI services&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Our team reduced expenses by 48% while maintaining performance for large ML pipelines. This guide outlines our process in code.&lt;/p&gt;】&lt;h2&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;运行&lt;a href =“ https://dzone.com/ai-ml”&gt;机器学习&lt;/a&gt;（ML）当团队忽略资源编排时，云中的工作负载可能会变得非常昂贵。大规模的数据摄入，基于GPU的推理和短暂的任务通常会增加意外费用。本文详细介绍了成本管理的高级策略，包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;使用&lt;strong&gt; sql触发器&lt;/strong&gt;和分区&lt;/li&gt;的动态提取，转移，负载（ETL）计划&#xA; &lt;li&gt;时间序列建模 - 季节自回旋的集成运动平均值&lt;em&gt;（&lt;/em&gt; sarima）和先知 - 与参数调整&lt;/li&gt;&#xA; &lt;li&gt;使用&lt;strong&gt; nvidia dcgm &lt;/strong&gt;和多现代GPU配置&lt;/li&gt;&#xA; &lt;li&gt; AI服务的深入自动示例&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;我们的团队将费用降低了48％，同时维持大型ML管道的性能。本指南在代码中概述了我们的过程。&lt;/p&gt;</description>
      <pubDate>Thu, 08 May 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Scalable System Design: Core Concepts for Building Reliable Software】可扩展系统设计：用于构建可靠软件的核心概念</title>
      <link>https://dzone.com/articles/software-system-design-concepts</link>
      <description>【&lt;p&gt;System design refers to the process of defining and creating a high-level architecture that meets certain requirements related to performance, scalability, availability, maintainability, and more. Based on my learnings and experience so far as a senior software engineering leader, I have tried to summarize the key concepts of software system design. Here are some of the most important concepts you’ll encounter when designing large-scale systems:&lt;/p&gt;&#xA;&lt;h2 data-end=&#34;318&#34; data-start=&#34;301&#34;&gt;Scalability&lt;/h2&gt;&#xA;&lt;p&gt;The ability of a system to handle an increasing workload (either by scaling up or scaling out) without sacrificing performance.&lt;/p&gt;】&lt;p&gt;系统设计是指定义和创建高级体系结构的过程，该架构符合与性能，可伸缩性，可用性，可维护性等相关的某些要求。根据我的学习和经验，作为高级软件工程领导者，我试图总结软件系统设计的关键概念。这是设计大型系统时会遇到的一些最重要的概念：&lt;/p&gt;&#xA;&lt;h2 data-end =“ 318” data-start =“ 301”&gt;可伸缩性&lt;/h2&gt;&#xA;&lt;p&gt;系统能够处理增加的工作量（通过扩大或扩展出来）而无需牺牲性能的能力。&lt;/p&gt;</description>
      <pubDate>Thu, 08 May 2025 14:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>