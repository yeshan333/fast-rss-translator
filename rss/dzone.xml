<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Simplifying Multi-Cloud Observability With Open Source】通过开源简化多云可观测性</title>
      <link>https://dzone.com/articles/simplify-multi-cloud-observability-with-open-source</link>
      <description>【&lt;p&gt;Gartner predicts by 2028, 50% of enterprises will utilize the cloud. The growth has also seen an increase in different strategies for organizations to use the cloud. Initially, organizations were completely on-prem, then they were hybrid where some workloads were still on-prem but some were migrated to the cloud. Eventually, companies started moving to &lt;a href=&#34;https://dzone.com/articles/diversifying-in-the-cloud-age-a-deep-dive-into-mul&#34;&gt;multi-cloud&lt;/a&gt; where they use more than one cloud provider to host their workloads. A recent Oracle survey indicates that 98% of enterprises are either considering or already implementing a multi-cloud strategy.&lt;/p&gt;&#xA;&lt;p&gt;So what are the motivations for these enterprises to move towards multi-cloud?&lt;/p&gt;】&lt;p&gt;Gartner 预测，到 2028 年，50% 的企业将使用云。这种增长还导致组织使用云的不同策略有所增加。最初，组织完全是在本地部署的，然后它们是混合的，其中一些工作负载仍然在本地，但有些已迁移到云端。最终，公司开始转向&lt;a href=&#34;https://dzone.com/articles/diversifying-in-the-cloud-age-a-deep-dive-into-mul&#34;&gt;多云&lt;/a&gt;他们使用多个云提供商来托管其工作负载。 Oracle 最近的一项调查表明，98% 的企业正在考虑或已经实施多云战略。&lt;/p&gt;&#xA;&lt;p&gt;那么这些企业迈向多云的动机是什么？&lt;/p&gt;</description>
      <pubDate>Wed, 25 Sep 2024 12:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Optimizing External Secrets Operator Traffic】优化外部秘密运营商流量</title>
      <link>https://dzone.com/articles/optimizing-external-secrets-operator-traffic</link>
      <description>【&lt;p&gt;In &lt;a href=&#34;https://dzone.com/refcardz/getting-started-kubernetes&#34;&gt;Kubernetes&lt;/a&gt;, a &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/secret/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Secret&amp;nbsp;&lt;/a&gt;is an object that stores sensitive information like a password, token, key, etc. One of the several &lt;a href=&#34;https://kubernetes.io/docs/concepts/security/secrets-good-practices/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;good practices&lt;/a&gt; for &lt;a href=&#34;https://dzone.com/articles/four-ways-to-keep-kubernetes-secrets-secret&#34;&gt;Kubernetes secret management&lt;/a&gt; is making use of a third-party secrets store provider solution to manage secrets outside of the clusters and configuring pods to access those secrets. There are plenty of such third-party solutions available in the market, such as:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;HashiCorp Vault&lt;/li&gt;&#xA; &lt;li&gt;Google Cloud Secret Manager&lt;/li&gt;&#xA; &lt;li&gt;AWS Secrets Manager&lt;/li&gt;&#xA; &lt;li&gt;Azure Key Vault&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;These third-party solutions, a.k.a &lt;strong&gt;External Secrets Managers (ESM),&lt;/strong&gt; implement secure storage, secret versioning, fine-grain access control, audit and logging.&lt;/p&gt;】&lt;p&gt;在 &lt;a href=&#34;https://dzone.com/refcardz/getting-started-kubernetes&#34;&gt;Kubernetes&lt;/a&gt; 中，&lt;a href=&#34;https://kubernetes.io/docs/concepts/ configuration/secret/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Secret&lt;/a&gt; 是一个存储敏感信息（如密码、令牌、密钥等）的对象。&lt;a href=&#34;https: //kubernetes.io/docs/concepts/security/secrets-good-practices/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://dzone.com&#34; 的良好实践&lt;/a&gt; /articles/four-ways-to-keep-kubernetes-secrets-secret&#34;&gt;Kubernetes 机密管理&lt;/a&gt;正在利用第三方机密存储提供商解决方案来管理集群外部的机密，并配置 pod 来访问这些机密秘密。市场上有很多此类第三方解决方案，例如：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;HashiCorp 金库&lt;/li&gt;&#xA; &lt;li&gt;Google Cloud Secret Manager&lt;/li&gt;&#xA; &lt;li&gt;AWS Secrets Manager&lt;/li&gt;&#xA; &lt;li&gt;Azure 密钥保管库&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这些第三方解决方案，又名&lt;strong&gt;外部机密管理器 (ESM)&lt;/strong&gt;，实现安全存储、机密版本控制、细粒度访问控制、审核和日​​志记录。&lt;/p&gt;</description>
      <pubDate>Wed, 25 Sep 2024 11:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Feature Engineering Transforming Predictive Models】特征工程转变预测模型</title>
      <link>https://dzone.com/articles/feature-engineering-transforming-predictive-models</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Imagine you’re building a model to predict house prices: two models, identical in every aspect except one; one uses raw data, and the other leverages thoughtfully engineered features like the age of the house, proximity to schools, and seasonal price trends. Which model do you think performs better? The answer is intuitive: the latter.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/feature-engineering-1&#34;&gt;Feature engineering&lt;/a&gt; is the process of using domain knowledge to create features that make &lt;a href=&#34;https://dzone.com/refcardz/machine-learning-predictive&#34;&gt;machine learning algorithms&lt;/a&gt; work more effectively. It bridges the gap between raw data and the insights needed to drive decision-making. In this article, we’ll explore how feature engineering can significantly impact the performance of your predictive models.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;假设您正在构建一个模型来预测房价：两个模型，除了一个之外在各个方面都相同；一种使用原始数据，另一种利用精心设计的特征，例如房屋的年龄、与学校的距离和季节性价格趋势。您认为哪种模型表现更好？答案很直观：后者。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/feature-engineering-1&#34;&gt;特征工程&lt;/a&gt;是使用领域知识创建特征的过程，这些特征使得&lt;a href=&#34;https://dzone.com/refcardz/machine-learning-predictive&#34;&gt;机器学习算法&lt;/a&gt;更有效地工作。它弥合了原始数据和推动决策所需的见解之间的差距。在本文中，我们将探讨特征工程如何显着影响预测模型的性能。&lt;/p&gt;</description>
      <pubDate>Wed, 25 Sep 2024 19:45:14 +0000</pubDate>
    </item>
    <item>
      <title>【Probabilistic Graphical Models: A Gentle Introduction】概率图形模型：简单介绍</title>
      <link>https://dzone.com/articles/probablistic-graphical-models-a-gentle-intro</link>
      <description>【&lt;div data-message-author-role=&#34;assistant&#34; data-message-id=&#34;08ca8d55-cbd5-41d3-a12a-9be9f6c27e52&#34; dir=&#34;auto&#34;&gt;&#xA; &lt;h2&gt;What Are Probabilistic Graphical Models (PGMs)?&lt;/h2&gt;&#xA; &lt;p&gt;Probabilistic models represent complex systems by defining a joint probability distribution over multiple random variables, effectively capturing the uncertainty and dependencies within the system. However, as the number of variables increases, the joint distribution grows exponentially, making it computationally infeasible to handle directly. Probabilistic Graphical Models (PGMs) address this challenge by leveraging the conditional independence properties among variables and representing them using graph structures. These graphs allow for a more compact representation of the joint distribution, enabling the use of efficient &lt;a href=&#34;https://dzone.com/articles/algorithm-week-graphs-and&#34;&gt;graph-based algorithms&lt;/a&gt; for both learning and inference. This approach significantly reduces computational complexity, making PGMs a powerful tool for modeling complex, high-dimensional systems.&lt;/p&gt;&#xA; &lt;p&gt;PGMs are extensively used in diverse domains such as medical diagnosis, natural language processing, causal inference, computer vision, and the development of digital twins. These fields require precise modeling of systems with many interacting variables, where uncertainty plays a significant role [1-3].&lt;/p&gt;】&lt;div data-message-author-role=&#34;助理&#34; data-message-id=&#34;08ca8d55-cbd5-41d3-a12a-9be9f6c27e52&#34; dir=&#34;auto&#34;&gt;&#xA; &lt;h2&gt;什么是概率图形模型 (PGM)？&lt;/h2&gt;&#xA; &lt;p&gt;概率模型通过定义多个随机变量的联合概率分布来表示复杂系统，有效捕获系统内的不确定性和依赖性。然而，随着变量数量的增加，联合分布呈指数增长，使得计算上无法直接处理。概率图形模型 (PGM) 通过利用变量之间的条件独立属性并使用图形结构表示它们来解决这一挑战。这些图表可以更紧凑地表示联合分布，从而可以使用高效的&lt;a href=&#34;https://dzone.com/articles/algorithm-week-graphs-and&#34;&gt;基于图表的算法&lt;/a&gt;用于学习和推理。这种方法显着降低了计算复杂性，使 PGM 成为建模复杂、高维系统的强大工具。&lt;/p&gt;&#xA; &lt;p&gt;PGM 广泛应用于医疗诊断、自然语言处理、因果推理、计算机视觉和数字孪生开发等不同领域。这些领域需要对具有许多相互作用变量的系统进行精确建模，其中不确定性起着重要作用[1-3]。&lt;/p&gt;</description>
      <pubDate>Wed, 25 Sep 2024 15:00:06 +0000</pubDate>
    </item>
    <item>
      <title>【Automating Data Pipelines With Snowflake: Leveraging DBT and Airflow Orchestration Frameworks for ETL/ELT Processes】使用 Snowflake 实现数据管道自动化：利用 DBT 和 Airflow Orchestration 框架进行 ETL/ELT 流程</title>
      <link>https://dzone.com/articles/automating-data-pipelines-with-snowflake-leveragin</link>
      <description>【&lt;p&gt;In the era of digitization and data landscape, automating data pipelines is crucial for enhanced efficiency, consistency, and scalability of the lake house. Snowflake is a leading cloud data platform that integrates seamlessly with various tools to facilitate the automation of ETL (Extract, Transform, Load) and ELT (Extract, Load, Transform) processes.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;This article delves into automating data pipelines with Snowflake by leveraging dbt (data build tool) and orchestration frameworks and the best practices for streamlining data workflows to ensure reliable data processing.&lt;/p&gt;】&lt;p&gt;在数字化和数据环境时代，自动化数据管道对于提高湖屋的效率、一致性和可扩展性至关重要。 Snowflake 是领先的云数据平台，可与各种工具无缝集成，以促进 ETL（提取、转换、加载）和 ELT（提取、加载、转换）流程的自动化。 &lt;/p&gt;&#xA;&lt;p&gt;本文深入探讨了通过利用 dbt（数据构建工具）和编排框架以及简化数据工作流程以确保可靠的数据处理的最佳实践，使用 Snowflake 实现数据管道自动化。&lt;/p&gt;</description>
      <pubDate>Wed, 25 Sep 2024 20:45:07 +0000</pubDate>
    </item>
    <item>
      <title>【How To Convert Files to Thumbnail Images in Java】如何在 Java 中将文件转换为缩略图</title>
      <link>https://dzone.com/articles/how-to-convert-files-to-thumbnail-images-in-java</link>
      <description>【&lt;p&gt;In this article, we’ll discuss the benefits of programmatically generating thumbnail images for a wide range of file types. &amp;nbsp;We’ll take a high-level look at resolving this workflow with open-source &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; solutions, and we’ll learn how to take advantage of an efficient web API to get the job done.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Why Convert Documents to Thumbnail Images?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&#34;Converting&#34; documents to thumbnail images — i.e., programmatically generating thumbnail images from document contents — creates lightweight content previews that can be viewed quickly by document recipients with minimal effort.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;在本文中，我们将讨论以编程方式为各种文件类型生成缩略图的好处。  我们将深入研究如何使用开源 &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; 解决方案来解决此工作流程，并且我们将了解如何利用高效的 Web API 来完成工作。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;为什么将文档转换为缩略图？&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;将文档“转换”为缩略图 - 即以编程方式从文档内容生成缩略图 - 创建轻量级内容预览，文档收件人可以轻松快速地查看这些预览。 &lt;/p&gt;</description>
      <pubDate>Wed, 25 Sep 2024 13:00:09 +0000</pubDate>
    </item>
    <item>
      <title>【Building a Zero Trust API With ASP.NET Core: A Developer’s Guide】使用 ASP.NET Core 构建零信任 API：开发人员指南</title>
      <link>https://dzone.com/articles/building-a-zero-trust-api-with-aspnet-core-a-devel</link>
      <description>【&lt;p&gt;In a world where cyber threats are just one click away (or just one QR code scan away), the old-school “castle and moat” security approach isn’t enough. Enter Zero Trust — a security model that flips the script, requiring every request to be verified, authenticated, and monitored, no matter where it comes from. For developers working with ASP.NET Core APIs that handle sensitive data, this isn’t just a trend; it’s a necessity.&lt;/p&gt;&#xA;&lt;p&gt;Let’s dive into the why, what, and how of implementing Zero Trust in your ASP.NET Core API.&lt;/p&gt;】&lt;p&gt;在网络威胁只需点击一下（或只需扫描一次二维码）的世界中，老式的“城堡和护城河”安全方法是不够的。输入零信任——一种翻转脚本的安全模型，要求每个请求都经过验证、认证和监控，无论它来自哪里。对于使用处理敏感数据的 ASP.NET Core API 的开发人员来说，这不仅仅是一种趋势；这是必需的。&lt;/p&gt;&#xA;&lt;p&gt;让我们深入了解在 ASP.NET Core API 中实现零信任的原因、内容和方式。&lt;/p&gt;</description>
      <pubDate>Wed, 25 Sep 2024 23:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Concurrency Issues in SQL and Distributed Systems】SQL 和分布式系统中的并发问题</title>
      <link>https://dzone.com/articles/concurrency-issues-in-sql-and-distributed-systems</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;An SQL database must handle multiple incoming connections simultaneously to maintain optimal system performance. The expectation is that the database can accept and process numerous requests in parallel. It&#39;s straightforward when different requests target separate data, such as one request reading from &lt;strong&gt;&lt;em&gt;Table 1&lt;/em&gt;&lt;/strong&gt; and another from &lt;strong&gt;&lt;em&gt;Table 2&lt;/em&gt;&lt;/strong&gt;. However, complications arise when multiple requests involve reading from and writing to the same table. How do we keep the performance high and yet avoid consistency issues? Let’s read on to understand how things work in SQL databases and distributed systems.&lt;/p&gt;&#xA;&lt;h2&gt;Transactions and Issues&lt;/h2&gt;&#xA;&lt;p&gt;An SQL transaction is a collection of queries (such as &lt;strong&gt;&lt;em&gt;SELECT&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;INSERT&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;UPDATE&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;DELETE&lt;/em&gt;&lt;/strong&gt;) sent to the database to be executed as a single unit of work. This means that either all queries in the transaction must be executed, or none should be. Executing transactions is not atomic and takes time. For example, a single &lt;strong&gt;&lt;em&gt;UPDATE&lt;/em&gt;&lt;/strong&gt; statement might modify multiple rows, and the database system needs time to update each row. During this update process, another transaction might start and attempt to read the modified rows. This raises the question: should the other transaction read the new values of the rows (even if not all rows are updated yet), the old values of the rows (even if some rows have been updated), or should it wait? What happens if the first transaction must be canceled later for any reason? How should this affect the other transaction?&lt;/p&gt;】&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;SQL 数据库必须同时处理多个传入连接以保持最佳系统性能。期望数据库能够并行接受和处理大量请求。当不同的请求针对不同的数据时，这很简单，例如一个请求读取&lt;strong&gt;&lt;em&gt;表 1&lt;/em&gt;&lt;/strong&gt;，另一个请求读取&lt;strong&gt;&lt;em&gt;表 2&lt;/em&gt;&lt;/strong&gt; 。但是，当多个请求涉及对同一个表进行读取和写入时，就会出现复杂情况。我们如何保持高性能并避免一致性问题？让我们继续阅读以了解 SQL 数据库和分布式系统中的工作原理。&lt;/p&gt;&#xA;&lt;h2&gt;交易和问题&lt;/h2&gt;&#xA;&lt;p&gt;SQL 事务是查询的集合（例如 &lt;strong&gt;&lt;em&gt;SELECT&lt;/em&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;em&gt;INSERT&lt;/em&gt;&lt;/strong&gt;、&lt;strong&gt;&lt; em&gt;UPDATE&lt;/em&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;em&gt;DELETE&lt;/em&gt;&lt;/strong&gt;）发送到数据库以作为单个工作单元执行。这意味着要么必须执行事务中的所有查询，要么不执行任何查询。执行事务不是原子的并且需要时间。例如，单个&lt;strong&gt;&lt;em&gt;UPDATE&lt;/em&gt;&lt;/strong&gt;语句可能会修改多行，而数据库系统需要时间来更新每行。在此更新过程中，另一个事务可能会启动并尝试读取已修改的行。这就提出了一个问题：另一个事务应该读取行的新值（即使尚未更新所有行）、行的旧值（即使某些行已更新），还是应该等待？如果由于任何原因必须稍后取消第一笔交易，会发生什么情况？这将如何影响其他交易？&lt;/p&gt;</description>
      <pubDate>Wed, 25 Sep 2024 22:30:07 +0000</pubDate>
    </item>
    <item>
      <title>【Securing Your Azure Kubernetes Services Cluster】保护 Azure Kubernetes 服务集群的安全</title>
      <link>https://dzone.com/articles/securing-your-azure-kubernetes-services-cluster</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;In this article, I will present my perspective on securing an Azure Kubernetes cluster with the &lt;a data-hook=&#34;WebLink&#34; href=&#34;https://en.wikipedia.org/wiki/Principle_of_least_privilege&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;principle of least privilege&lt;/u&gt;&lt;/a&gt; as a top priority. I will explain the available built-in Azure Kubernetes Roles, the function of the Microsoft Entra (formerly Azure Active Directory) groups, and how to utilize Kubernetes RBAC to manage access to the workloads.&lt;/p&gt;&#xA;&lt;p data-pm-slice=&#34;1 1 []&#34; style=&#34;text-align: center;&#34;&gt;&lt;em&gt;Photo by &#34;ArminH&#34; on Freeimages.com&lt;/em&gt;&lt;/p&gt;】&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;在本文中，我将阐述我对使用 &lt;a data-hook=&#34;WebLink&#34; href=&#34;https://en.Azure Kubernetes 集群进行保护的观点。 wikipedia.org/wiki/Principle_of_least_privilege&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;最小权限原则&lt;/u&gt;&lt;/a&gt;作为重中之重。我将解释可用的内置 Azure Kubernetes 角色、Microsoft Entra（以前称为 Azure Active Directory）组的功能，以及如何利用 Kubernetes RBAC 来管理对工作负载的访问。&lt;/p&gt;&#xA;&lt;p data-pm-slice=&#34;1 1 []&#34; style=&#34;text-align: center;&#34;&gt;&lt;em&gt;照片由 Freeimages.com 上的“ArminH”拍摄&lt;/em&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 25 Sep 2024 18:30:06 +0000</pubDate>
    </item>
    <item>
      <title>【The Future of Application Security: Empowering Developers in the AI Era】应用安全的未来：为AI时代的开发者赋能</title>
      <link>https://dzone.com/articles/the-future-of-application-security-empowering-deve</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In an era where software vulnerabilities can lead to catastrophic breaches, &lt;a href=&#34;https://dzone.com/trendreports/enterprise-application-security&#34;&gt;application security&lt;/a&gt; has never been more critical. Yet, for many developers, security remains a complex and often frustrating aspect of the development process.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;At &lt;a href=&#34;https://www.blackhat.com/us-24/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Black Hat 2024&lt;/a&gt;, I sat down with &lt;a href=&#34;https://www.linkedin.com/in/rdegges/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Randall Degges&lt;/a&gt;, Head of Developer Relations and Community at Snyk, to explore how the landscape of application security is evolving, particularly in light of cloud-native architectures, serverless computing, and the rise of AI-assisted development.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;在软件漏洞可能导致灾难性漏洞的时代，&lt;a href=&#34;https://dzone.com/trendreports/enterprise-application-security&#34;&gt;应用程序安全&lt;/a&gt;从未如此更具有批判性。然而，对于许多开发人员来说，安全性仍然是开发过程中复杂且常常令人沮丧的一个方面。 &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;在 &lt;a href=&#34;https://www.blackhat.com/us-24/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;黑帽 2024&lt;/a&gt;，我与 Snyk 开发者关系和社区主管 &lt;a href=&#34;https://www.linkedin.com/in/rdegges/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Randall Degges&lt;/a&gt; 进行了交谈，探索应用程序安全格局如何演变，特别是考虑到云原生架构、无服务器计算和人工智能辅助开发的兴起。&lt;/p&gt;</description>
      <pubDate>Wed, 25 Sep 2024 14:00:11 +0000</pubDate>
    </item>
  </channel>
</rss>