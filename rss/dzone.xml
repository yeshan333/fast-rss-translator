<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Creating MVPs on a Budget: A Guide for Tech Startups】根据预算创建 MVP：科技初创公司指南</title>
      <link>https://dzone.com/articles/creating-mvps-on-a-budget-a-guide-for-tech-startups</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;You must have used Snapchat and Uber, but do you know how they started? These widely used applications began as &lt;a href=&#34;https://dzone.com/articles/a-step-by-step-guide-to-build-a-minimum-viable-pro&#34;&gt;minimum viable products (MVPs)&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;img width=&#34;756&#34; height=&#34;397&#34; class=&#34;fr-fic fr-dib lazyload&#34; data-image=&#34;true&#34; data-new=&#34;false&#34; data-sizeformatted=&#34;290.8 kB&#34; data-mimetype=&#34;image/png&#34; data-creationdate=&#34;1725880443530&#34; data-creationdateformatted=&#34;09/09/2024 11:14 AM&#34; data-type=&#34;temp&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/17906990-1725880439418.png&#34; data-modificationdate=&#34;null&#34; data-size=&#34;290802&#34; data-name=&#34;1725880439418.png&#34; data-id=&#34;17906990&#34; data-src=&#34;https://dz2cdn1.dzone.com/storage/temp/17906990-1725880439418.png&#34; alt=&#34;Strategic financial planning for building an MVP&#34;&gt;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Uber was initially launched as “UberCab,” a basic, on-demand ride-hailing app with one main feature: allowing users in San Francisco to book black car services through their smartphones. Similarly, Snapchat started as a single-feature application called “Picaboo,” enabling users to send photos that would disappear after a few seconds.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;你一定用过 Snapchat 和 Uber，但你知道它们是怎么开始的吗？这些广泛使用的应用程序最初是&lt;a href=&#34;https://dzone.com/articles/a-step-by-step-guide-to-build-a-minimum-viable-pro&#34;&gt;最小可行产品 (MVP) &lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;img width=&#34;756&#34; height=&#34;397&#34; class=&#34;fr-fic fr-diblazyload&#34; data-image=&#34;true&#34; data-new=&#34;false&#34; data- sizeformatted =“290.8 kB”data-mimetype =“image / png”data-creationdate =“1725880443530”data-creationdateformatted =“09/09/2024 11:14 AM”data-type =“temp”data-url =“https ://dz2cdn1.dzone.com/storage/temp/17906990-1725880439418.png”data-modificationdate =“null”data-size =“290802”data-name =“1725880439418.png”data-id =“17906990”数据-src=&#34;https://dz2cdn1.dzone.com/storage/temp/17906990-1725880439418.png&#34; alt=&#34;构建 MVP 的战略财务规划&#34;&gt;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Uber 最初推出时名为“UberCab”，这是一款基本的按需叫车应用程序，其主要功能是：允许旧金山用户通过智能手机预订黑车服务。同样，Snapchat 最初是一个名为“Picaboo”的单一功能应用程序，使用户能够发送几秒钟后就会消失的照片。&lt;/p&gt;</description>
      <pubDate>Fri, 27 Sep 2024 16:30:02 +0000</pubDate>
    </item>
    <item>
      <title>【Maturing an Engineering Organization From DevOps to Platform Team】使工程组织从 DevOps 到平台团队走向成熟</title>
      <link>https://dzone.com/articles/maturing-an-organization-from-devops-to-platform</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;The DevOps model broke down the wall between development and production by assigning deployment and production management responsibilities to the application engineers and providing them with infrastructure management tools. This approach expanded engineers&#39; competencies beyond their initial skill sets.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;This model helped companies gain velocity as applications weren&#39;t passed around from team to team, and owners became responsible from ideation to production. It shortened the development lifecycle and time to deployment, making companies more agile and responsive.&amp;nbsp;&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;DevOps 模型通过将部署和生产管理职责分配给应用工程师并为他们提供基础设施管理工具，打破了开发和生产之间的壁垒。这种方法扩展了工程师的能力，超出了他们最初的技能范围。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;该模型帮助公司提高了速度，因为应用程序不再在团队之间传递，并且所有者负责从构思到生产的整个过程。它缩短了开发生命周期和部署时间，使公司更加敏捷和响应迅速。 &lt;/p&gt;</description>
      <pubDate>Thu, 26 Sep 2024 19:45:05 +0000</pubDate>
    </item>
    <item>
      <title>【Hands-On: Assigning Pods to Nodes Using Affinity Rules】实践：使用关联性规则将 Pod 分配给节点</title>
      <link>https://dzone.com/articles/assigning-pods-to-nodes-using-affinity-rules</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;This article describes how to configure your Pods to run in specific nodes based on affinity and anti-affinity rules. Affinity and anti-affinity allow you to inform the Kubernetes Scheduler whether to assign or not assign your Pods, which can help optimize performance, reliability, and compliance.&lt;/p&gt;&#xA;&lt;p&gt;There are two types of affinity and anti-affinity, as per the &lt;a data-hook=&#34;WebLink&#34; href=&#34;https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;Kubernetes documentation&lt;/u&gt;&lt;/a&gt;:&lt;/p&gt;】&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;本文介绍如何根据亲和性和反亲和性规则将 Pod 配置为在特定节点中运行。亲和性和反亲和性允许您通知 Kubernetes Scheduler 是否分配您的 Pod，这有助于优化性能、可靠性和合规性。&lt;/p&gt;&#xA;&lt;p&gt;根据&lt;a data-hook=&#34;WebLink&#34; href=&#34;https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node，有两种类型的亲和力和反亲和力/#node-affinity&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;Kubernetes 文档&lt;/u&gt;&lt;/a&gt;：&lt;/p&gt;</description>
      <pubDate>Fri, 27 Sep 2024 15:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【Low-Code AI Agent for Classifying User Support Tickets With OpenAI and Kumologica】用于使用 OpenAI 和 Kumologica 对用户支持票进行分类的低代码 AI 代理</title>
      <link>https://dzone.com/articles/smart-case-classification-with-openai</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;This article will demonstrate how &lt;a href=&#34;https://www.kumologica.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Kumologica&lt;/a&gt; and &lt;a href=&#34;https://openai.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;OpenAI&lt;/a&gt; can assist in developing an AI agent API that efficiently classifies cases within an enterprise using user data, without the need for customer support agent intervention. An ideal case management solution should be able to automatically categorize and prioritize cases from various channels, identify high-priority cases, apply labels, and assign them to the appropriate groups without requiring agents to manually perform these tasks.&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;There are several case management products currently available on the market, such as &lt;a href=&#34;https://dzone.com/articles/leveraging-react-in-servicenow-applications&#34;&gt;ServiceNow&lt;/a&gt;, &lt;a href=&#34;https://dzone.com/articles/jira-add-ons-for-better-software-delivery&#34;&gt;JIRA&lt;/a&gt;, and &lt;a href=&#34;https://dzone.com/articles/best-practices-for-salesforce-data-management-and-security&#34;&gt;Salesforce Case Management&lt;/a&gt;. While some of these products include built-in solutions for ticket classification, others offer no such functionality. Even for those with built-in solutions, there are limitations in their ability to integrate with third-party systems.&lt;/p&gt;】&lt;p style=&#34;text-align: left;&#34;&gt;本文将演示 &lt;a href=&#34;https://www.kumologica.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Kumologica&lt;/a &gt; 和 &lt;a href=&#34;https://openai.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;OpenAI&lt;/a&gt; 可以协助开发 AI 代理 API，该 API 可以使用用户有效地对企业内的案例进行分类数据，无需客户支持代理干预。理想的案例管理解决方案应该能够自动对来自不同渠道的案例进行分类和优先级排序，识别高优先级案例，应用标签，并将它们分配到适当的组，而不需要代理手动执行这些任务。&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;目前市场上有多种案例管理产品，例如&lt;a href=&#34;https://dzone.com/articles/leveraging-react-in-servicenow- applications&#34;&gt;ServiceNow&lt;/a&gt;、&lt;a href=&#34;https://dzone.com/articles/jira-add-ons-for-better-software-delivery&#34;&gt;JIRA&lt;/a&gt; 和 &lt;a href= “https://dzone.com/articles/best-practices-for-salesforce-data-management-and-security&#34;&gt;Salesforce 案例管理&lt;/a&gt;。虽然其中一些产品包含用于票证分类的内置解决方案，但其他产品则不提供此类功能。即使对于那些拥有内置解决方案的人来说，它们与第三方系统集成的能力也存在限制。&lt;/p&gt;</description>
      <pubDate>Fri, 27 Sep 2024 11:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Indexes Under The Hood】索引底层</title>
      <link>https://dzone.com/articles/indexes-under-the-hood</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Many things can improve database performance. One of the most obvious solutions is to use indexes. This blog post will examine them in detail to understand how they work in PostgreSQL and what makes them useful.&lt;/p&gt;&#xA;&lt;h2&gt;Data Storage Basics&lt;/h2&gt;&#xA;&lt;p&gt;Before getting to indexes, we need to understand the basics of data storage in PostgreSQL. We will explain how things are represented internally, but we won’t cover all the aspects of the data storage like shared memory and buffer pools.&lt;/p&gt;】&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;很多事情都可以提高数据库性能。最明显的解决方案之一是使用索引。这篇博文将详细研究它们，以了解它们在 PostgreSQL 中的工作原理以及它们的用处。&lt;/p&gt;&#xA;&lt;h2&gt;数据存储基础知识&lt;/h2&gt;&#xA;&lt;p&gt;在了解索引之前，我们需要了解 PostgreSQL 中数据存储的基础知识。我们将解释事物在内部是如何表示的，但我们不会涵盖数据存储的所有方面，例如共享内存和缓冲池。&lt;/p&gt;</description>
      <pubDate>Fri, 27 Sep 2024 18:00:09 +0000</pubDate>
    </item>
    <item>
      <title>【Using AI in Your IDE To Work With Open-Source Code Bases】在 IDE 中使用 AI 来处理开源代码库</title>
      <link>https://dzone.com/articles/using-ai-in-your-ide-to-work-with-open-source-code</link>
      <description>【&lt;p&gt;Thanks to &lt;code&gt;langchaingo&lt;/code&gt;, it&#39;s possible to build composable generative AI applications using Go. I will walk you through how I used the code generation (and software development in general) capabilities in &lt;a href=&#34;https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/what-is.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Amazon Q Developer&lt;/a&gt; using &lt;a href=&#34;https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/what-is.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;VS Code&lt;/a&gt; to enhance &lt;code&gt;langchaingo&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Let&#39;s get right to it!&lt;/p&gt;】&lt;p&gt;感谢 &lt;code&gt;langchaingo&lt;/code&gt;，我们可以使用 Go 构建可组合的生成式 AI 应用程序。我将向您介绍如何使用 &lt;a href=&#34;https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/what-is.html 中的代码生成（以及一般的软件开发）功能&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Amazon Q Developer&lt;/a&gt; 使用 &lt;a href=&#34;https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/what-is。 html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;VS Code&lt;/a&gt; 来增强 &lt;code&gt;langchaingo&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;让我们开始吧！&lt;/p&gt;</description>
      <pubDate>Sat, 28 Sep 2024 11:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Is Spring AI Strong Enough for AI?】Spring AI对于AI来说足够强大吗？</title>
      <link>https://dzone.com/articles/is-spring-ai-strong-enough-for-ai</link>
      <description>【&lt;p&gt;In recent years, there has been a significant surge in the adoption of artificial intelligence (AI) and &lt;a href=&#34;https://dzone.com/refcardz/machine-learning-predictive&#34;&gt;machine learning (ML)&lt;/a&gt; technologies across a wide range of industries. Frameworks such as TensorFlow, PyTorch, and Scikit-learn have emerged as popular choices for AI development due to their versatility and robustness. However, the seamless integration of AI into enterprise-grade, production-ready applications poses unique challenges that need to be addressed.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/history-of-spring-framework-spring-boot-framework&#34;&gt;Spring&lt;/a&gt;, a widely recognized enterprise-level framework, is celebrated for its exceptional robustness, scalability, and flexibility in crafting sophisticated applications. Nevertheless, the question arises: can Spring effectively cater to the intricate demands of AI/ML-based applications? This article aims to explore the depths of Spring&#39;s capabilities within the AI domain, its potential integration with AI libraries, and its ability to effectively manage AI workflows within production environments.&lt;/p&gt;】&lt;p&gt;近年来，人工智能 (AI) 和&lt;a href=&#34;https://dzone.com/refcardz/machine-learning-predictive&#34;&gt;机器学习 (ML) 的采用显着激增&lt;/a&gt; 跨多个行业的技术。 TensorFlow、PyTorch 和 Scikit-learn 等框架因其多功能性和鲁棒性而成为人工智能开发的热门选择。然而，将人工智能无缝集成到企业级、生产就绪的应用程序中带来了需要解决的独特挑战。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/history-of-spring-framework-spring-boot-framework&#34;&gt;Spring&lt;/a&gt;，一个广泛认可的企业级框架，因其在构建复杂应用程序方面具有卓越的稳健性、可扩展性和灵活性。然而，问题出现了：Spring 能否有效满足基于 AI/ML 的应用程序的复杂需求？本文旨在探讨 Spring 在 AI 领域的深度功能、它与 AI 库的潜在集成，以及它在生产环境中有效管理 AI 工作流程的能力。&lt;/p&gt;</description>
      <pubDate>Fri, 27 Sep 2024 13:30:02 +0000</pubDate>
    </item>
    <item>
      <title>【Integrating Data Engineering Into Artificial Intelligence】将数据工程融入人工智能</title>
      <link>https://dzone.com/articles/integrating-data-engineering-into-machine-learning</link>
      <description>【&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;Data is often referred to as the lifeblood of artificial intelligence and machine learning (ML). We know the value of data: it fuels insights, provides input for predictions, and is foundational for data engineers&#39; and data scientists&#39; decisions. The journey from raw data to meaningful information is lengthy which is where data engineering fits into play. Incorporating data engineering and dealing with the messiness of the dataset is crucial to having a smooth flow of data through the ML pipeline, leading us to better models and consistent results. In this article, I’ll take a deep dive into how data engineering and Machine Learning intersect and why it is important in this era of modern data-driven applications.&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;Importance of Data Engineering in Artificial Intelligence&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;Machine learning relies on data and its accuracy. Raw data transformation involves landing data, cleaning, transformation as per requirements, and loading to the target to make it meaningful. These activities take from extracting the source systems up to a point where you analyze using some tool/configuration. The ML lifecycle has these stages, and data engineering is the focus of each step.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;数据通常被称为人工智能和机器学习 (ML) 的命脉。我们知道数据的价值：它可以激发洞察力，为预测提供输入，并且是数据工程师和数据科学家决策的基础。从原始数据到有意义的信息的过程是漫长的，这正是数据工程发挥作用的地方。结合数据工程并处理数据集的混乱程度对于使数据顺利通过机器学习管道至关重要，从而使我们获得更好的模型和一致的结果。在本文中，我将深入探讨数据工程和机器学习如何交叉，以及为什么它在现代数据驱动应用程序的时代如此重要。 &lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;数据工程在人工智能中的重要性&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;机器学习依赖于数据及其准确性。原始数据转换涉及数据落地、清理、根据需求进行转换，并加载到目标以使其有意义。这些活动从提取源系统到使用某种工具/配置进行分析。机器学习生命周期有这些阶段，数据工程是每个步骤的重点。&lt;/p&gt;</description>
      <pubDate>Thu, 26 Sep 2024 20:45:07 +0000</pubDate>
    </item>
    <item>
      <title>【Advanced Strategies for Building Modern Data Pipelines】构建现代数据管道的高级策略</title>
      <link>https://dzone.com/articles/advanced-strategies-for-building-modern-data-pipel</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In today&#39;s data-driven world, organizations increasingly rely on sophisticated data pipelines to manage vast volumes of data generated daily. A &lt;a href=&#34;https://dzone.com/articles/what-is-a-data-pipeline&#34;&gt;data pipeline&lt;/a&gt; is more than just a conduit for data — it is a complex system that involves the extraction, transformation, and loading (&lt;a href=&#34;https://dzone.com/articles/what-is-elt-1&#34;&gt;ETL&lt;/a&gt;) of data from various sources to ensure that it is clean, consistent, and ready for analysis. This article explores advanced strategies, the process of building data pipelines, and the pillars of a successful modern data strategy, with a focus on both real-time and batch data processing.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Steps for Building Data Pipelines&amp;nbsp;&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Building modern data pipelines that are efficient, scalable, and resilient requires advanced strategies and a deep understanding of the underlying technologies. Let’s dive into the key steps to building out your data pipelines.&amp;nbsp;&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;在当今数据驱动的世界中，组织越来越依赖复杂的数据管道来管理每天生成的大量数据。 &lt;a href=&#34;https://dzone.com/articles/what-is-a-data-pipeline&#34;&gt;数据管道&lt;/a&gt;不仅仅是数据的管道 - 它是一个复杂的系统，涉及从各种来源提取、转换和加载 (&lt;a href=&#34;https://dzone.com/articles/what-is-elt-1&#34;&gt;ETL&lt;/a&gt;) 数据，以确保数据干净、一致，并准备好进行分析。本文探讨了高级策略、构建数据管道的过程以及成功的现代数据策略的支柱，重点关注实时和批量数据处理。&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;构建数据管道的步骤&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;构建高效、可扩展且具有弹性的现代数据管道需要先进的策略和对底层技术的深入了解。让我们深入探讨构建数据管道的关键步骤。 &lt;/p&gt;</description>
      <pubDate>Thu, 26 Sep 2024 21:24:42 +0000</pubDate>
    </item>
    <item>
      <title>【Leveraging IBM WatsonX Data With Milvus To Build an Intelligent Slack Bot for Knowledge Retrieval】利用 IBM WatsonX 数据和 Milvus 构建用于知识检索的智能 Slack 机器人</title>
      <link>https://dzone.com/articles/ibm-watsonx-data-with-milvus-build-a-slack-bot</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;In today&#39;s fast-paced work environment, quick and easy access to information is crucial for maintaining productivity and efficiency. Whether it&#39;s finding specific instructions in a runbook or accessing key knowledge transfer (KT) documents, the ability to retrieve relevant information swiftly can make a significant difference.&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;This tutorial will guide you through building an intelligent Slack bot that leverages IBM WatsonX.data and Milvus for efficient knowledge retrieval. By integrating these tools, you&#39;ll create a bot that can search and provide answers to queries based on your organization&#39;s knowledge sources. We will use IBM WatsonX.data to populate and query relevant documents and IBM WatsonX.ai to answer questions from the fetched documents.&lt;/p&gt;】&lt;p style=&#34;text-align: left;&#34;&gt;在当今快节奏的工作环境中，快速轻松地访问信息对于保持生产力和效率至关重要。无论是在操作手册中查找特定说明还是访问关键知识转移 (KT) 文档，快速检索相关信息的能力都可以产生重大影响。&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;本教程将指导您构建一个智能 Slack 机器人，该机器人利用 IBM WatsonX.data 和 Milvus 进行高效的知识检索。通过集成这些工具，您将创建一个机器人，可以根据组织的知识源搜索查询并提供查询答案。我们将使用 IBM WatsonX.data 来填充和查询相关文档，并使用 IBM WatsonX.ai 来回答所获取文档中的问题。&lt;/p&gt;</description>
      <pubDate>Fri, 27 Sep 2024 20:15:02 +0000</pubDate>
    </item>
  </channel>
</rss>