<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Selenium Pagination Tutorial: How to Handle Page Navigation】硒共同教程：如何处理页面导航</title>
      <link>https://dzone.com/articles/selenium-pagination-tutorial-page-navigation</link>
      <description>【&lt;p name=&#34;8433&#34;&gt;As websites are becoming an integral part of the business, they must have a good UI that provides the best user experience and loads the content quickly.&lt;/p&gt;&#xA;&lt;p name=&#34;1773&#34;&gt;Websites can be categorized into two types based on the categorisation of their content: paginated and infinite-scrolling websites. The paginated website divides the content of the website into different pages, allowing the user to access all the available content on the different pages of the website one by one seamlessly.&lt;/p&gt;】&lt;p name =“ 8433”&gt;由于网站正在成为业务不可或缺的一部分，因此它们必须具有良好的UI，可以提供最佳的用户体验并迅速加载内容。&lt;/p&gt;&#xA;&lt;p name =“ 1773”&gt;网站可以根据其内容的分类为两种类型：分页和无限滚动网站。分页的网站将网站的内容分为不同的页面，使用户可以无缝地访问网站不同页面上的所有可用内容。&lt;/p&gt;</description>
      <pubDate>Thu, 01 May 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Evolution of Cloud Services for MCP/A2A Protocols in AI Agents】AI代理中MCP/A2A协议的云服务的演变</title>
      <link>https://dzone.com/articles/cloud-services-mcp-a2a-ai</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;The rapid evolution of artificial intelligence (AI) is reshaping cloud service architectures, necessitating new frameworks to support the growing complexity and autonomy of AI agents. The MCP (Model Context Protocol) and A2A (Agent-to-Agent) protocols are enhancing how AI agents interact with cloud services. MCP introduces a modular client-server architecture that allows AI models to connect seamlessly to various services without the need for custom integrations.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;Concurrently, the A2A protocol facilitates direct communication between AI agents, enabling them to collaborate effectively across different platforms and frameworks. As organizations increasingly adopt AI-driven solutions, the integration of MCP and A2A protocols into cloud service architectures is becoming imperative. These protocols not only streamline the development and deployment of AI agents but also pave the way for more dynamic, flexible, and scalable cloud ecosystems.&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt;人工智能（AI）的快速演变正在重塑云服务体系结构，需要新的框架来支持AI代理人日益增长的复杂性和自主权。 MCP（模型上下文协议）和A2A（代理到代理）协议正在增强AI代理与云服务的互动方式。 MCP引入了模块化客户端服务器体系结构，该体系结构允许AI模型无需自定义集成而无需接缝与各种服务连接。 &lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;同时，A2A协议有助于AI代理之间的直接通信，从而使它们能够在不同的平台和框架上有效地协作。随着组织越来越多地采用AI驱动的解决方案，MCP和A2A协议中的集成到云服务体系结构中必须成为必要。这些协议不仅简化了AI代理的开发和部署，还为更动态，灵活和可扩展的云生态系统铺平了道路。&lt;/p&gt;</description>
      <pubDate>Thu, 01 May 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【My LLM Journey as a Software Engineer Exploring a New Domain】我作为软件工程师探索新领域的LLM旅程</title>
      <link>https://dzone.com/articles/llm-journey-as-a-software-engineer</link>
      <description>【&lt;p&gt;Over the holidays when I had some time off, I pondered the thought of how to make some passive income. In this day and age of AI and all the hype, I had been thinking that the world is my oyster.&lt;/p&gt;&#xA;&lt;p&gt;With the threat of AI taking over the world, especially in my day to day as a software engineer, I should start bucking up my ideas and get involved.&lt;/p&gt;】&lt;p&gt;在我休假的假期中，我想到了如何赚取被动收入的想法。在AI和所有炒作的时代，我一直在想世界是我的牡蛎。&lt;/p&gt;&#xA;&lt;p&gt;随着AI接管世界的威胁，尤其是在我作为软件工程师的日常工作中，我应该开始屈服于我的想法并参与其中。&lt;/p&gt;</description>
      <pubDate>Thu, 01 May 2025 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Internal Developer Portals: Modern DevOps&#39;s Missing Piece】内部开发人员门户：现代Devops的缺失作品</title>
      <link>https://dzone.com/articles/idps-modern-devopss-missing-piece</link>
      <description>【&lt;p&gt;You have experienced the following scenario as a developer in 2025: you are prepared to test an API or introduce a new microservice, but you are initially stalled. You require authorization to construct a container, database access, or guidance on which CI/CD pipeline to employ. You go through old documents, ping a few Slack channels, and maybe, just possibly, you&#39;ll be unblocked before lunch.&lt;/p&gt;&#xA;&lt;p&gt;It&#39;s not a tool problem. This issue stems from the lack of experience among developers. To bridge the gap, internal developer portals (IDPs) are taking over.&lt;/p&gt;】&lt;p&gt;您在2025年经历了以下方案作为开发人员：您准备测试API或引入新的微服务，但最初您会停滞不前。您需要授权来构建CI/CD管道使用的容器，数据库访问或指导。您会浏览旧文档，ping几个松弛的频道，也许，午餐前您会不会被封锁。&lt;/p&gt;&#xA;&lt;p&gt;这不是工具问题。这个问题源于开发人员之间缺乏经验。为了弥合差距，内部开发人员门户（IDP）正在接管。&lt;/p&gt;</description>
      <pubDate>Thu, 01 May 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How Platform Engineering Is Impacting Infrastructure Automation】平台工程如何影响基础设施自动化</title>
      <link>https://dzone.com/articles/platform-engineering-impacts-infrastructure-automation</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Platform engineering is all about building reusable tools, workflows, and infrastructure that empower development teams to move faster without compromising on reliability or security. It’s a shift from ad hoc support to treating internal platforms like products, complete with roadmaps, user feedback, and clear ownership.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Paired with infrastructure automation, which handles tasks like provisioning environments, scaling systems, and enforcing configurations, these disciplines help reduce toil and eliminate the bottlenecks that come with manual operations.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;平台工程是建立可重复使用的工具，工作流和基础架构，这些工具和基础架构使开发团队能够更快地移动，而不会损害可靠性或安全性。这是从临时支持到处理诸如产品之类的内部平台的转变，包括路线图，用户反馈和清晰的所有权。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;与基础架构自动化配对，该自动化处理诸如配置环境，缩放系统和执行配置之类的任务，这些学科有助于减少辛劳并消除手动操作带来的瓶颈。&lt;/p&gt;&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 01 May 2025 18:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Integrating Security as Code: A Necessity for DevSecOps】将安全性作为代码集成：DevSecops的必要性</title>
      <link>https://dzone.com/articles/integrating-security-as-code-devops</link>
      <description>【&lt;p&gt;Security practices in DevOps have evolved from being a minor concern to one of the main focus points, which resulted in the DevSecOps movement. It’s about “shifting security to the left” in the software development lifecycle — so the security measures are a fundamental component.&lt;/p&gt;&#xA;&lt;p&gt;Traditionally, security management was moved to the final stages of developing software, and it has proven its ineffectiveness in dealing with the challenges of modern software projects. This is where Security as Code (SaC) comes in. It is a way to integrate security into every phase of development, from start to deployment, so that security and development teams can work together effectively and successfully.&amp;nbsp;&lt;/p&gt;】&lt;p&gt; DevOps中的安全实践从成为主要重点之一的小问题发展，这导致了DevSecops运动。这是关于软件开发生命周期中的“将安全性转移到左边”的内容 - 因此，安全措施是基本组件。&lt;/p&gt;&#xA;&lt;p&gt;传统上，安全管理已转移到开发软件的最后阶段，并且证明其在应对现代软件项目的挑战方面无效。这是安全性（SAC）进来的安全性。这是将安全性整合到开发的每个阶段的一种方式，从开始到部署，以便安全和开发团队可以有效，成功地共同努力。 &lt;/p&gt;</description>
      <pubDate>Thu, 01 May 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Zero Trust for AWS NLBs: Why It Matters and How to Do It】零信任AWS NLB：为什么重要以及如何做</title>
      <link>https://dzone.com/articles/zero-trust-for-aws-nlbs</link>
      <description>【&lt;h2 data-pm-slice=&#34;1 1 []&#34;&gt;Introduction to AWS Network Load Balancer&lt;/h2&gt;&#xA;&lt;p&gt;AWS has several critical services that drive the internet. If you have ever built any application on top of AWS and need a high throughput or volume of traffic, the chances are that you’ve leaned on an AWS Network Load Balancer at some point in the discussion. AWS NLB is nothing but a Layer 4 load balancer, and consistency helps with low-latency forwarding of massive amounts of TCP, UDP, and even TLS traffic. NLBs, being operational at Layer 4 of the OSI model, support a host of features. You get features like static IPs, support for long-lived connections out of the box, and can be configured to our requirements.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In my projects, I’ve used NLBs for use cases ranging from being the front end for low-latency database requests to hosting an entire backend of an application. NLB helps in all these use cases by giving us a consistent latency, and it holds up its end every time. There are alternatives for NLBs like the AWS Application Load Balancers, but they operate at a higher level of the OSI model and are not always the choice for developers looking for a high-throughput, no-nonsense load balancer.&lt;/p&gt;】&lt;H2 data-pm-slice =“ 1 1 []”&gt; AWS网络负载均衡器简介&lt;/h2&gt;&#xA;&lt;p&gt; aws拥有几种驱动互联网的关键服务。如果您曾经在AWS之上构建了任何应用程序，并且需要大量的吞吐量或流量量，那么在讨论中的某个时候，您可能会依靠AWS网络负载均衡器。 AWS NLB不过是第4层负载平衡器，一致性有助于大量TCP，UDP甚至TLS流量的低延迟转发。 NLB在OSI模型的第4层运行，支持许多功能。您将获得诸如静态IPS之类的功能，即开箱即用的长期连接的支持，并且可以根据我们的要求进行配置。 &lt;/p&gt;&#xA;&lt;p&gt;在我的项目中，我使用了NLB的用例，从低延迟数据库请求的前端到托管应用程序的整个后端。 NLB在所有这些用例中都可以通过一致的延迟来帮助所有这些用例，并且每次都保持终结。 NLB有其他替代方案，例如AWS应用程序负载平衡器，但它们以更高的OSI模型运行，并且并不总是选择寻求高通量的，无疑的负载均衡器的开发人员。&lt;/p&gt;。&lt;/p&gt;</description>
      <pubDate>Thu, 01 May 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Subtitles: The Good, the Bad, and the Resource-Heavy】字幕：好，坏和资源繁重</title>
      <link>https://dzone.com/articles/subtitle-good-bad-evil-resource-heavy</link>
      <description>【&lt;p&gt;&lt;strong&gt;Stack&lt;/strong&gt;: HTML + CSS + TypeScript + Next.js (React)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Build a universal expandable subtitle with an embedded &#34;Show more&#34; button and gradient background.&lt;/p&gt;】&lt;p&gt; &lt;strong&gt; stack &lt;/strong&gt;：html + css + typescript + next.js（react）&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;目标&lt;/strong&gt;：构建具有嵌入式“显示更多”按钮和梯度背景的通用扩展字幕。&lt;/p&gt;</description>
      <pubDate>Thu, 01 May 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【GDPR Compliance With .NET: Securing Data the Right Way】GDPR遵守.NET：以正确的方式保护数据</title>
      <link>https://dzone.com/articles/gdpr-compliance-with-net</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;When developers hear the term GDPR, the initial reaction often involves stress and uncertainty, especially around how it might slow down development or degrade application performance.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;But here’s the truth: GDPR isn’t just another regulation to check off your list. It&#39;s a framework that can help build trust, protect user rights, and improve your application’s overall data hygiene.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;当开发人员听到术语GDPR时，初始反应通常涉及压力和不确定性，尤其是围绕它如何减慢开发或降低应用程序性能的方式。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;，但这是事实：GDPR不仅仅是查看列表的另一项法规。这是一个框架，可以帮助建立信任，保护用户权利并改善应用程序的整体数据卫生。&lt;/p&gt;</description>
      <pubDate>Thu, 01 May 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The 4 R’s of Pipeline Reliability: Designing Data Systems That Last】管道可靠性4 R：设计持续的数据系统</title>
      <link>https://dzone.com/articles/four-rs-of-pipeline-reliability</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;As AI and machine learning applications continue to proliferate, the data pipelines that power them have become more mission-critical than ever. As retrieval-augmented generation (RAG) applications and real-time AI systems are becoming the norm, any glitch in a data pipeline can lead to stale insights, suboptimal model performance, and inflated infrastructure costs.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Working in this domain has taught me that even minor lapses in pipeline reliability can escalate into major outages. To combat this, I rely on a framework I call the 4 R’s of &lt;a href=&#34;https://dzone.com/articles/enhanced-monitoring-pipeline-rag-optimizations&#34;&gt;pipeline reliability&lt;/a&gt;: robust architecture, resumability, recoverability, and redundancy. Here’s how each element contributes to building data systems that truly last.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;随着AI和机器学习应用程序的持续增长，功率的数据管道比以往任何时候都变得更加关键任务。随着检索功能的生成（RAG）应用程序和实时AI系统正在成为常态，数据管道中的任何故障都可以导致陈旧的见解，次优模型性能和膨胀的基础设施成本。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;在这个域中工作已经告诉我，即使是管道可靠性的较小失误也可以升级为主要停电。为了解决这个问题，我依靠一个框架，我称之为&lt;a href =“ https://dzone.com/articles/enhanced-monitoring-pipeline-pipeline-pipeline-rag-optimizations”&gt;管道可靠性&lt;/a&gt;：可靠性&lt;/a&gt;：可靠的结构，可靠性，可恢复性，可恢复性，可恢复性和冗余性。这是每个元素如何构建真正持续的数据系统的方式。&lt;/p&gt;</description>
      <pubDate>Thu, 01 May 2025 14:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>