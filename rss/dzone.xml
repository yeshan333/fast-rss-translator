<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Real-World Garbage Collection Scenarios and Solutions】现实世界中的垃圾收集方案和解决方案</title>
      <link>https://dzone.com/articles/real-world-garbage-collection-solutions</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;If you’re experiencing Java performance problems, where do you start looking for solutions? Is GC tuning really worthwhile? How do you analyze the GC logs to identify and fix bottlenecks?&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;This article looks at some real-life success stories, where organizations were able to achieve dramatic performance gains simply by tweaking GC.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;如果您遇到Java性能问题，您在哪里开始寻找解决方案？ GC调整真的值得吗？您如何分析GC日志以识别和修复瓶颈？&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;本文着眼于一些现实生活中的成功案例，组织仅通过调整GC就能实现戏剧性的性能。&lt;/p&gt;</description>
      <pubDate>Fri, 28 Mar 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Challenges of Using LLMs in Production: Constraints, Hallucinations, and Guardrails】在生产中使用LLM的挑战：限制，幻觉和护栏</title>
      <link>https://dzone.com/articles/challenges-of-using-llms-in-production</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Large language models (LLMs) have risen in popularity after the release of Chat-GPT. These pre-trained foundation models enable rapid prototyping, and companies want to use this cool technology. However, their probabilistic nature and lack of built-in constraints often lead to challenges once they are out of prototyping mode.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Let us consider an example of classifying news articles based on the content in the article to discuss the challenges one would encounter. Current LLMs have issues such as non-adherence to instructions, hallucinations, and possibly spitting out something that you don&#39;t want. This article explores these challenges with an example of classifying news articles into categories based on the content in the article and offers actionable strategies to mitigate them.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;大语言模型（LLMS）在发行CHAT-GPT后普及。这些预训练的基础模型可以快速原型制作，公司希望使用这种酷技术。但是，一旦它们不超出原型制度模式，它们的概率性质和缺乏内置约束通常会导致挑战。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;让我们考虑一个基于文章中内容的新闻文章的示例，以讨论人们会遇到的挑战。当前的LLM有针对说明，幻觉以及可能不想要的东西等问题。本文以根据文章中的内容将新闻文章分类为类别的示例探讨了这些挑战，并提供了可行的策略来减轻它们。&lt;/p&gt;</description>
      <pubDate>Fri, 28 Mar 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Using Terraform Moved Block to Refactor Resources】使用Terraform移动的块来重构资源</title>
      <link>https://dzone.com/articles/using-terraform-moved-block-to-refactor-resources</link>
      <description>【&lt;p&gt;Terraform introduced the &lt;code&gt;moved&lt;/code&gt; block in version 1.1.0. This block provides a straightforward way to refactor resources by explicitly mapping old resource addresses to new ones. It significantly reduces the risk of losing state or manually managing imports during renames or moves.&lt;/p&gt;&#xA;&lt;p&gt;In this article, we’ll explain what the &lt;code&gt;moved&lt;/code&gt; block is and how to use it to streamline resource restructuring for smoother and safer Terraform updates.&lt;/p&gt;】&lt;p&gt; Terraform在版本1.1.0中引入了&lt;code&gt;移动&lt;/code&gt;块。该块通过将旧资源地址明确映射到新的资源地址，提供了一种简单的方法来重构资源。它大大降低了丢失状态或在重命名或移动期间手动管理进口的风险。&lt;/p&gt;&#xA;&lt;p&gt;在本文中，我们将说明&lt;code&gt;移动&lt;/code&gt;块是什么，以及如何使用它来简化资源重组以使其更平滑和更安全的Terraform更新。&lt;/p&gt;</description>
      <pubDate>Fri, 28 Mar 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Getting Started With LangChain for Beginners】初学者的Langchain入门</title>
      <link>https://dzone.com/articles/getting-started-with-langchain-for-beginners</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;Large language models (LLMs) like OpenAI’s GPT-4 and Hugging Face models are powerful, but using them effectively in applications requires more than just calling an API. &lt;strong&gt;LangChain&lt;/strong&gt; is a framework that simplifies working with LLMs, enabling developers to create advanced AI applications with ease.&lt;/p&gt;&#xA;&lt;p&gt;In this article, we’ll cover:&lt;/p&gt;】&lt;p数​​据选择可选 -  paragraph =“”&gt;大型语言模型（LLM），例如OpenAI的GPT-4和拥抱面部模型功能强大，但是在应用程序中有效使用它们不仅需要调用API。 &lt;strong&gt; Langchain &lt;/strong&gt;是一个简化与LLMS的框架，使开发人员可以轻松地创建高级AI应用程序。&lt;/p&gt;&#xA;&lt;p&gt;在本文中，我们将介绍：&lt;/p&gt;</description>
      <pubDate>Fri, 28 Mar 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Ansible Security and Testing Tools for Automation】自动化的Ansible安全性和测试工具</title>
      <link>https://dzone.com/articles/ansible-security-and-testing-tools-for-automation</link>
      <description>【&lt;p&gt;Automation has become the cornerstone of modern IT operations, enabling organizations to streamline processes, reduce manual errors, and improve efficiency. However, as automation grows in complexity and scale, security risks also increase. Misconfigured infrastructure, untested playbooks, and vulnerabilities in automation workflows can expose organizations to significant threats.&lt;/p&gt;&#xA;&lt;p&gt;After my article on using &lt;a href=&#34;https://dzone.com/articles/ansible-code-scanning-and-quality-with-sonarqube&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;SonarQube for Ansible code scanning and quality checks&lt;/a&gt;, this article covers additional tools and frameworks required for secured automation.&lt;/p&gt;】&lt;p&gt;自动化已成为现代IT操作的基石，使组织能够简化流程，减少手动错误并提高效率。但是，随着自动化的复杂性和规模的增长，安全风险也会增加。自动化工作流程中的基础架构，未经测试的剧本和脆弱性可能会使组织面临重大威胁。&lt;/p&gt;&#xA;&lt;p&gt;在我有关使用&lt;a href =“ https://dzone.com/articles/asible-code-scanning-and-with-with-with-sonarqube”中的文章之后</description>
      <pubDate>Fri, 28 Mar 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Security in the CI/CD Pipeline】CI/CD管道中的安全性</title>
      <link>https://dzone.com/articles/security-in-the-cicd-pipeline</link>
      <description>【&lt;p data-end=&#34;520&#34; data-start=&#34;88&#34;&gt;As development cycles speed up, integrating security into the CI/CD pipeline is essential to embed security checks early and throughout the process to prevent vulnerabilities from creeping into production. This article delves deeper into the technical details, code examples, and configurations to build a robust, secure CI/CD pipeline.&lt;/p&gt;&#xA;&lt;p data-end=&#34;164&#34; data-start=&#34;0&#34;&gt;A &lt;a href=&#34;https://dzone.com/articles/what-is-a-cicd-pipeline&#34;&gt;CI/CD pipeline&lt;/a&gt; is an automated workflow that streamlines the process of software development from code integration to deployment. It comprises two main practices:&lt;/p&gt;】&lt;p data-end =“ 520” data-start =“ 88”&gt;随着开发周期的加快，将安全性集成到CI/CD管道中对于早期和整个过程中嵌入安全检查至关重要，以防止脆弱性蔓延到生产中。本文更深入地研究技术细节，代码示例和配置，以构建坚固的，安全的CI/CD管道。&lt;/p&gt;&#xA;&lt;p data-end =“ 164” data-start =“ 0”&gt; a &lt;a href =“ https://dzone.com/articles/what-is-a-a-cicd-pipeline”&gt; ci/cd pipeline &lt;/a&gt;是一种自动化工作流，是一种简化了从代码集成到部署的软件开发过程。它包括两个主要实践：&lt;/p&gt;</description>
      <pubDate>Fri, 28 Mar 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Understanding the Importance of Web Accessibility】了解Web可访问性的重要性</title>
      <link>https://dzone.com/articles/importance-of-web-accessibility</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;The process of creating websites and web apps that are usable by individuals with disabilities is known as web accessibility. This encompasses people with a range of disabilities, including:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li style=&#34;text-align: left;&#34;&gt;&lt;strong&gt;Visual&lt;/strong&gt;: Low vision, color blindness, and blindness&lt;/li&gt;&#xA; &lt;li style=&#34;text-align: left;&#34;&gt;&lt;strong&gt;Auditory&lt;/strong&gt;: Hard of hearing, deaf&lt;/li&gt;&#xA; &lt;li style=&#34;text-align: left;&#34;&gt;&lt;strong&gt;Cognitive&lt;/strong&gt;: Memory problems, learning issues&lt;/li&gt;&#xA; &lt;li style=&#34;text-align: left;&#34;&gt;&lt;strong&gt;Motor&lt;/strong&gt;: Paralysis, tremors, and trouble using hands&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;An accessible web enables these individuals to view, understand, interact with, and contribute to the online environment. Here are a few examples of accessibility features:&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt;创建由残障人士使用的网站和网络应用程序的过程被称为Web可访问性。这包括各种残疾人，包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li style =“ text-align：左;”&gt; &lt;strong&gt;视觉&lt;/strong&gt;：低视力，色盲和失明&lt;/li&gt;&#xA; &lt;li style =“ text-align：left;”&gt; &lt;strong&gt;听觉&lt;/strong&gt;：听力难，聋&lt;/li&gt;&#xA; &lt;li style =“ text-align：左;”&gt; &lt;strong&gt;认知&lt;/strong&gt;：记忆问题，学习问题&lt;/li&gt;&#xA; 在&#xA;&lt;/ul&gt;&#xA;&lt;p style =“ text-align：left;”&gt;可访问的网络使这些人能够查看，理解，互动并为在线环境中做出贡献。以下是可访问性功能的一些示例：&lt;/p&gt;</description>
      <pubDate>Fri, 28 Mar 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why Mocking Sucks】为什么嘲笑很烂</title>
      <link>https://dzone.com/articles/why-mocking-sucks</link>
      <description>【&lt;p&gt;Developers love mocking. It’s been a go-to solution for years: Simulate external services, run tests faster, and avoid the overhead of real APIs. But here’s the truth — &lt;strong&gt;mocking is overused and often dangerous&lt;/strong&gt;. It deceives you into thinking your system is stable, hiding critical failures that only appear when your code hits the real world. APIs change. Rate limits throttle you. Authentication flows break. Your tests will still pass with green colors while your app crashes in production.&lt;/p&gt;&#xA;&lt;p&gt;Overusing mocks can turn your tests into a house of cards, giving you false confidence and creating hidden technical debt that slows teams down. In complex workflows — like payments or authentication — mocks fail to capture the true behavior of interconnected services.&lt;/p&gt;】&lt;p&gt;开发人员喜欢嘲笑。多年来，这一直是首选解决方案：模拟外部服务，更快地运行测试并避免真实API的开销。但这是事实 -  &lt;strong&gt;嘲笑被过度使用且常常是危险的&lt;/strong&gt;。它欺骗您认为您的系统稳定，隐藏了仅在代码击中现实世界时才会出现的关键故障。 API改变。费率限制您。身份验证流断裂。当您的应用程序在生产中崩溃时，您的测试仍会通过绿色。&lt;/p&gt;&#xA;&lt;p&gt;过度使用模拟可以将您的测试变成纸牌屋，使您有虚假的信心并创造隐藏的技术债务，从而减慢了团队的速度。在复杂的工作流程（例如付款或身份验证）中，模拟无法捕获互连服务的真实行为。&lt;/p&gt;</description>
      <pubDate>Fri, 28 Mar 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【In-App Browsers in Mobile Apps: Benefits, Challenges, Solutions】移动应用程序中应用内浏览器：好处，挑战，解决方案</title>
      <link>https://dzone.com/articles/in-app-browsers-in-mobile-apps</link>
      <description>【&lt;p&gt;Mobile apps use in-app browsers to keep users hooked to the app ecosystem and make their experience better. These browsers let people see web content without leaving the app. When users go to external browsers to look at web content, they might get sidetracked by other things. In-app browsers provide users with simple browsing features without all the bells and whistles of a full browser.&lt;/p&gt;&#xA;&lt;h2 data-pm-slice=&#34;1 1 []&#34;&gt;&lt;strong&gt;Cordova InAppBrowser&amp;nbsp;&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;The InAppBrowser plugin for &lt;a href=&#34;https://dzone.com/articles/cordova-communicating-between-javascript-and-java&#34;&gt;Cordova&lt;/a&gt; creates a separate browser window that works on its own apart from the main Cordova WebView. This window acts like a regular web browser, but with one key difference: it can&#39;t access Cordova APIs. This separation makes it a good choicefor loading third-party (untrusted) content, as it adds an extra layer of protection compared to loading such content straight into the main Cordova WebView.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;移动应用程序使用应用程序内浏览器将用户吸引到应用程序生态系统并改善其体验。这些浏览器可让人们看到网络内容而无需离开应用程序。当用户转到外部浏览器查看Web内容时，他们可能会被其他事物所困扰。应用内浏览器为用户提供简单的浏览功能，而没有完整浏览器的所有铃铛和哨子。&lt;/p&gt;&#xA;&lt;h2 data-pm-slice =“ 1 1 []&gt; &lt;strong&gt; cordova inappbrowser &lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p data-pm-slice =“ 1 1 []&gt; &lt;a href =“ https://dzone.com/articles/cordova-communicating-betweien-betwiend-betwiend-ben-javascript-and-and-java”&gt; cordova &lt;/a&gt;创建一个独立的browser窗口，可在Main Cordova webivewiew上创建一个独立的browser窗口。此窗口的作用像常规的Web浏览器，但有一个关键区别：它无法访问Cordova API。这种分离使其成为加载第三方（不信任）内容的理想选择，因为它与将此类内容直接加载到主Cordova WebView相比增加了额外的保护。 &lt;/p&gt;</description>
      <pubDate>Fri, 28 Mar 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Building a Scalable ML Pipeline and API in AWS】在AWS中构建可扩展的ML管道和API</title>
      <link>https://dzone.com/articles/building-a-scalable-ml-pipeline-and-api-in-aws</link>
      <description>【&lt;p&gt;&lt;span&gt;With rapid progress in the fields of machine learning (ML) and artificial intelligence (AI), it is important to deploy the AI/ML model efficiently in production environments.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;This blog post discusses an end-to-end ML pipeline on &lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/deploy-machine-learning-models-using-amazon-sagemaker&#34;&gt;&lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;AWS SageMaker&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt; that leverages serverless computing, event-trigger-based data processing, and external API integrations. The architecture downstream ensures scalability, cost efficiency, and real-time&lt;/span&gt;&lt;span&gt;&amp;nbsp;access to applications.&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span&gt;随着机器学习（ML）和人工智能（AI）领域的快速进步，有效地在生产环境中有效地部署AI/ML模型很重要。 &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;span style =“边距：0px; padding：0px;“&gt;此博客文章在&lt;/span&gt; &lt;a href =“ https://dzone.com/articles/deploy-machine-machine-marearning-mearning-mearning-mearning-mudel-mazon-shi--s---- in-sam-sagemaker-san-sagemaker-sagemaker”&gt; &lt;/span&gt; &lt;a href =“ sagemaker &lt;/span&gt; &lt;/a&gt; &lt;span style =“ margin：0px; padding：0px;“&gt;利用无服务器计算，基于事件触发的数据处理以及外部API集成。下游的体系结构确保可扩展性，成本效率和实时&lt;/span&gt; &lt;span&gt;访问应用程序。&lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Fri, 28 Mar 2025 12:00:12 +0000</pubDate>
    </item>
  </channel>
</rss>