<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Optimizing Data Storage With Hybrid Partitioned Tables in Oracle 19c】使用Oracle 19c中的混合分区表优化数据存储</title>
      <link>https://dzone.com/articles/hybrid-partitioned-tables-oracle-19c</link>
      <description>【&lt;p&gt;Effective management of large datasets is paramount for both performance and cost optimization. Oracle 19c introduces Hybrid Partitioned Tables (HPT), a feature that allows you to distribute table partitions across multiple storage tiers — from high-performance on-premises systems to cost-effective cloud-based object storage. This approach enables organizations to store frequently accessed “hot” data locally for faster processing while archiving less-active “cold” data in the cloud.&lt;/p&gt;&#xA;&lt;p&gt;Learn how to implement Hybrid Partitioned Tables (HPT) to streamline data management, boost query performance, and cut storage costs.&lt;/p&gt;】&lt;p&gt;大型数据集的有效管理对于性能和成本优化都是至关重要的。 Oracle 19C引入了混合分区表（HPT），该功能使您可以在多个存储层（从高性能的本地系统到基于成本效益的基于云的对象存储）之间分发表分区。这种方法使组织能够在本地存储经常访问的“热门”数据，以更快地处理，同时在云中归档较小的“冷”数据。&lt;/p&gt;&#xA;&lt;p&gt;了解如何实现混合分区表（HPT）以简化数据管理，提高查询性能和降低存储成本。&lt;/p&gt;</description>
      <pubDate>Tue, 08 Apr 2025 16:45:01 +0000</pubDate>
    </item>
    <item>
      <title>【Understanding Structured Concurrency in Java】了解Java中结构化的并发性</title>
      <link>https://dzone.com/articles/understanding-structured-concurrency-java</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;Typically, complexity in programming is managed by breaking down tasks into subtasks. These subtasks can then be executed concurrently.&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;Since Java 5, &lt;code&gt;ExecutorService&lt;/code&gt; API helps the programmer execute these subtasks concurrently. However, given the nature of concurrent execution, each subtask could fail or succeed independently with no implicit communication between them. The failure of one subtask does not automatically cancel the other subtasks&lt;em&gt;.&lt;/em&gt; Although an attempt can be made to manage this cancellation manually via external handling, it&#39;s quite tricky to get it right — especially when a large number of subtasks are involved.&amp;nbsp;&lt;/p&gt;】&lt;p数​​据选择性 - 段落=“”&gt;通常，编程中的复杂性是通过将任务分解为子任务来管理的。然后可以同时执行这些子任务。&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph =“”&gt;由于java 5，&lt;code&gt; executorService &lt;/code&gt; api帮助程序员同时执行这些子任务。但是，鉴于并发执行的性质，每个子任务都可以独立失败或成功，而它们之间没有隐含的交流。一项子任务的故障并不能自动取消其他子任务&lt;em&gt;。&lt;/em&gt;，尽管可以尝试通过外部处理手动管理此取消，但要正确处理该取消是非常棘手的，尤其是当涉及大量子任务时。 &lt;/p&gt;</description>
      <pubDate>Tue, 08 Apr 2025 17:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Shifting Left: A Culture Change Plan for Early Bug Detection】向左移动：早期错误检测的文化变化计划</title>
      <link>https://dzone.com/articles/plan-for-early-bug-detection</link>
      <description>【&lt;h2 style=&#34;text-align: left;&#34;&gt;&lt;strong&gt;The Challenge: Overloaded QA Teams&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;Every software development company demands rapid growth and continuous innovation&lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;. With this, they also need to make sure that the products shipped are of high quality. &lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;Usually, all companies have QA (quality assurance)&amp;nbsp;engineers assigned to each team.&lt;/span&gt; They are mainly responsible for ensuring that the products going in the customer&#39;s hands are of high quality and don&#39;t have any defects that could hamper the&amp;nbsp;&lt;/span&gt;customer experience.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;However, when development cycles are very active during a release, the &lt;a href=&#34;https://dzone.com/articles/what-is-quality-assurance-getting-started-guide&#34;&gt;QA resources&lt;/a&gt; are constrained, and two major problems arise:&lt;/p&gt;】&lt;h2 style =“ text-align：left;”&gt; &lt;strong&gt;挑战：QA团队超载&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p dir =“ ltr” style =“ text-align：left;”&gt;每个软件开发公司都需要快速增长和连续创新&lt;span style =“ margin：0px; padding：0px;”&gt;。这样，他们还需要确保发货的产品具有高质量。 &lt;span style =“保证金：0px;填充：0px;“&gt;通常，所有公司都有分配给每个团队的QA（质量保证）工程师。&lt;/span&gt;他们主要负责确保客户掌握的产品具有高质量，并且没有任何可能阻碍客户体验的缺陷。 &lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;但是，当开发周期在发行过程中非常活跃时，&lt;a href =“ https://dzone.com/articles/what-is-quality-quality-quality-quality-aperance-getting-start-start-guide-guide”&gt; QA资源&lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt;受约束，并且有两个主要问题。</description>
      <pubDate>Tue, 08 Apr 2025 20:30:01 +0000</pubDate>
    </item>
    <item>
      <title>【AI-Powered Defenses Against Clickjacking in Finance】AI驱动的防御措施，以防止金融中的点击夹克</title>
      <link>https://dzone.com/articles/ai-powered-defenses-against-clickjacking-in-finance</link>
      <description>【&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;Clickjacking is a well-known cyber-attack that has been present in web-based platforms for almost two decades now. It refuses to go away, with a new attack vector surfacing pretty regularly. One of the primary reasons this attack has remained relevant is due to the fact that it provides an attractive option for hackers to steal people’s money.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;With the evolution and rapid growth of digital banking platforms and self-serve money movement capabilities, it has become a playfield for the bad actors to exploit people’s innocence and make money through apparently harmless mouse clicks. At the beginning of this year, 2025, a new pattern of clickjacking called double-clickjacking [1] has surfaced, which underscores the fact that this vulnerability is going to appear in different forms in web platforms, and the battle to protect people’s assets will continue.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt; clickjacking是一个著名的网络攻击，已经存在于基于Web的平台中已有近二十年了。它拒绝消失，新的攻击矢量经常浮出水面。这次攻击仍然相关的主要原因之一是由于它为黑客窃取人们的钱提供了一种有吸引力的选择。 &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt;随着数字银行平台的演变和快速增长，它已成为不良行为者利用人们无罪并通过无害的小鼠点击赚钱的不良演员的戏剧场所。在今年年初，即2025年，一种称为双击夹克[1]的新型点击夹克浮出水面，这强调了这种漏洞将以不同形式出现在Web平台中的事实，保护人们资产的战斗将继续进行。 &lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Tue, 08 Apr 2025 13:45:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why Clean Data Is the Foundation of Successful AI Systems】为什么干净的数据是成功的AI系统的基础</title>
      <link>https://dzone.com/articles/clean-data-ai-foundation</link>
      <description>【&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;According to recent research, enterprises would probably be losing approximately $406 million every year due to low-quality data, which prevents their AI applications from working efficiently [1][2][3]. Research shows that the accumulated losses will be a staggering amount, reaching $745 billion by the end of 2025. Data quality is not an option or recommendation for developers and data engineers; it is a technical requirement.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;This article describes the gateways, sources, and methods for creating AI systems that depend on a flow of quality information.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr” style =“ text-align：left;”&gt;根据最近的研究，由于数据质量低，企业可能每年可能会损失约4.06亿美元，这阻止了他们的AI应用程序有效地工作[1] [2] [3]。研究表明，累积损失将是惊人的数量，到2025年底达到了7450亿美元。对于开发人员和数据工程师来说，数据质量不是一种选择或建议；这是技术要求。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr” style =“ text-align：left;”&gt;本文介绍了创建依赖质量信息流的AI系统的网关，来源和方法。 &lt;/p&gt;</description>
      <pubDate>Tue, 08 Apr 2025 19:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why Rate Limiting Matters in Istio and How to Implement It】为什么利率限制在ISTIO中重要以及如何实施它</title>
      <link>https://dzone.com/articles/rate-limiting-in-istio</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;In today&#39;s microservices-driven world, managing traffic smartly is just as crucial as deploying the services themselves. As your system grows, so do the risks — like overuse, misuse, and cascading failures. And if you&#39;re running multi-tenant services, it&#39;s essential to enforce request limits for each customer. That’s where rate limiting in a service mesh like Istio can make a big difference. In this post, we’ll explore why rate limiting is important in Istio and show you how to set it up effectively.&lt;/p&gt;&#xA;&lt;h2 style=&#34;text-align: left;&#34;&gt;Why Rate Limiting Matters in Istio&lt;/h2&gt;&#xA;&lt;h3 style=&#34;text-align: left;&#34;&gt;Why Was It Important for Us?&lt;/h3&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;This is in continuation of the incident that we faced, which is detailed in &lt;a href=&#34;https://dzone.com/articles/liberty-microservices-load-resilient&#34;&gt;How I Made My Liberty Microservices Load-Resilient&lt;/a&gt;. One of the findings during the incident was the missing rate limiting in the Istio ingress private gateway. Here are the challenges that we faced:&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt;在当今以微服务为驱动的世界中，巧妙地管理流量与部署服务本身一样重要。随着系统的增长，风险也会存在，例如过度使用，滥用和级联故障。而且，如果您正在运行多租户服务，则必须为每个客户执行请求限制。在这里，像ISTIO这样的服务网格中的费率限制可以产生很大的不同。在这篇文章中，我们将探讨为什么利率限制在ISTIO中很重要，并向您展示如何有效设置它。&lt;/p&gt;&#xA;&lt;h2 style =“ text-align：left;”&gt;为什么速率限制在istio &lt;/h2&gt;中&#xA;&lt;h3 style =“ text-align：left;”&gt;为什么对我们很重要？&lt;/h3&gt;&#xA;&lt;p style =“ text-align：left;”&gt;这是我们面临的事件的延续，该事件在&lt;a href =“ https://dzone.com/articles/liberty-microservices-load-load-risilient”中详细介绍了我如何使我的自由度微量器road-Resilient-Resilient-Resilient-resilient &lt;/a&gt;。事件期间的发现之一是Istio Ingress私人网关中缺少率限制。这是我们面临的挑战：&lt;/p&gt;</description>
      <pubDate>Tue, 08 Apr 2025 16:15:00 +0000</pubDate>
    </item>
    <item>
      <title>【AWS S3 Strategies for Scalable and Secure Data Lake Storage】AWS S3策略可扩展和安全数据湖存储</title>
      <link>https://dzone.com/articles/scalable-secure-aws-data-lake-strategies</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Amazon S3 is an object storage service that offers scalability, data availability, security, and performance. S3 is the main component of your data lake, and creating buckets with the right strategy and properties can help you consume the data from the data lake in an efficient and secure way.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;The article will guide you through bucket strategies when creating a &lt;a href=&#34;https://dzone.com/articles/data-lakes-all-you-need-to-know&#34;&gt;data lake&lt;/a&gt; and discuss other things to keep in mind.&lt;/p&gt;】&lt;p dir =“ ltr”&gt; Amazon S3是一种对象存储服务，可提供可扩展性，数据可用性，安全性和性能。 S3是您数据湖的主要组成部分，使用正确的策略和特性创建水桶可以帮助您以有效且安全的方式消耗数据湖中的数据。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;文章将在创建&lt;a href =“ https://dzone.com/articles/data-lakes-alk-allakes-allakes-ally-you-need-to-know”&gt; data lake &lt;/a&gt;时，将指导您采用水桶策略。</description>
      <pubDate>Tue, 08 Apr 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Evaluating Performance Gains in MySQL Lock Scheduling Algorithms】评估MySQL锁定计划算法中的性能提高</title>
      <link>https://dzone.com/articles/mysql-cats-vs-fifo-performance</link>
      <description>【&lt;p&gt;Scheduling is crucial in computer system design. The right policy can significantly reduce mean response time without needing faster machines, effectively improving performance for free. Scheduling also optimizes other metrics, such as user fairness and differentiated service levels, ensuring some job classes have lower mean delays than others [1].&lt;/p&gt;&#xA;&lt;p&gt;MySQL 8.0 uses the Contention-Aware Transaction Scheduling (CATS) algorithm to prioritize transactions waiting for locks. When multiple transactions compete for the same lock, CATS determines the priority based on scheduling weight, calculated by the number of transactions a given transaction blocks. The transaction blocking the most others gets higher priority; if weights are equal, the longest waiting transaction goes first.&lt;/p&gt;】&lt;p&gt;调度对于计算机系统设计至关重要。正确的策略可以大大减少平均响应时间而无需更快的机器，从而有效地免费提高性能。调度还可以优化其他指标，例如用户公平性和差异化服务级别，确保某些工作类别的平均延迟低于其他指标[1]。&lt;/p&gt;&#xA;&lt;p&gt; MySQL 8.0使用竞争感知交易计划（CAT）算法来确定等待锁的事务。当多个交易竞争相同的锁时，猫会根据调度重量确定优先级，该级别由给定交易块的交易数量计算出来。阻止大多数其他交易的优先级更高；如果权重相等，则最长的等待交易先进行。&lt;/p&gt;</description>
      <pubDate>Tue, 08 Apr 2025 18:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Your Ultimate Website QA Checklist】您的最终网站质量检查清单</title>
      <link>https://dzone.com/articles/ultimate-website-qa-checklist</link>
      <description>【&lt;p&gt;A detailed website QA checklist helps make sure every aspect of the website is tested, whether through manual or automated testing approaches. It usually covers parameters like functionality, performance, usability, security, and compatibility across various browsers and devices.&lt;/p&gt;&#xA;&lt;p&gt;By following the website QA checklist, testers can test the website step-by-step, making sure everything works well without any bugs. This approach keeps the website running smoothly and meeting both user expectations and business needs.&lt;/p&gt;】&lt;p&gt;详细的网站QA清单有助于确保测试网站的各个方面，无论是通过手动测试方法还是自动化测试方法。它通常涵盖各种浏览器和设备的功能，性能，可用性，安全性和兼容性等参数。&lt;/p&gt;&#xA;&lt;p&gt;通过遵循网站质量检查清单，测试人员可以逐步测试网站，确保一切正常，而无需任何错误。这种方法使网站运行顺利，并满足用户的期望和业务需求。&lt;/p&gt;</description>
      <pubDate>Tue, 08 Apr 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【A Practical Guide to OpenTelemetry With Spring Boot Workloads】带有弹簧启动工作负载的OpenTelemetry的实用指南</title>
      <link>https://dzone.com/articles/opentelemetry-spring-boot-observability</link>
      <description>【&lt;p&gt;In this tutorial, we consolidated some practical approaches regarding OpenTelemetry and how to use it with Spring Boot. This tutorial is composed of four primary sections:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;OpenTelemetry practical concepts&lt;/li&gt;&#xA; &lt;li&gt;Setting up an observability stack with OpenTelemetry Collector, Grafana, Loki, Tempo, and Podman&lt;/li&gt;&#xA; &lt;li&gt;Instrumenting Spring Boot applications for OpenTelemetry&lt;/li&gt;&#xA; &lt;li&gt;Testing and E2E sample&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;By the end of the tutorial, you should be able to implement the following architecture:&lt;/p&gt;】&lt;p&gt;在本教程中，我们合并了有关OpenTelemetry以及如何将其与Spring Boot一起使用的一些实用方法。本教程由四个主要部分组成：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt; opentelemetry实用概念&lt;/li&gt;&#xA; &lt;li&gt;使用Opentelemetry收集器，Grafana，Loki，Tempo和Podman建立可观察性堆栈&lt;/li&gt;&#xA; &lt;li&gt; OpenTelemetry的弹簧启动应用程序&lt;/li&gt;&#xA; &lt;li&gt;测试和E2E样品&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在教程结束时，您应该能够实现以下体系结构：&lt;/p&gt;</description>
      <pubDate>Tue, 08 Apr 2025 21:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>