<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【AI Coding Assistants: Capabilities, Tools, Trends, and Comparisons】AI编码助手：功能，工具，趋势和比较</title>
      <link>https://dzone.com/articles/ai-coding-assistants</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;AI coding assistants are transforming software development by enabling developers to write and engage with code in a more efficient way. These AI-driven tools fit right into development environments, offering real-time suggestions, automating tedious tasks, and enhancing overall productivity. By understanding the context, they can propose entire lines or blocks of code, which cuts down on coding time and reduces the number of keystrokes.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;Additionally, they help improve code accuracy by spotting potential errors before the compilation stage, allowing developers to concentrate more on high-level problem-solving and design instead of getting bogged down by syntax and routine coding chores.&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt; AI编码助手正在通过使开发人员能够以更有效的方式编写和互动来改变软件开发。这些AI驱动的工具非常适合开发环境，提供实时建议，自动化乏味的任务并提高整体生产力。通过了解上下文，他们可以提出整个代码或块，从而减少编码时间并减少击键数量。 &lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;此外，它们通过在编译阶段之前发现潜在错误来帮助提高代码准确性，从而使开发人员能够更多地专注于高级问题解决和设计，而不是被构成和常规编码陪伴。&lt;/p&gt;。&lt;/p&gt;。&lt;/p&gt;</description>
      <pubDate>Fri, 27 Jun 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【My Dive into Local LLMs: From Alexa Curiosity to Homegrown AI】我进入本地LLM：从Alexa的好奇心到本土AI</title>
      <link>https://dzone.com/articles/ollama-ubuntu-local-llm-setup</link>
      <description>【&lt;p&gt;So, I&#39;m a software dev manager over at the Alexa team, and being around the Alexa journey, you kinda get a front-row seat to some seriously cool AI. It got me thinking, &#34;Hey, I wanna poke at these LLMs on my own machine, see what makes &#39;em tick without needing a massive server farm.&#34; This is basically my log of figuring out how to get a personal &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-large-language-models&#34;&gt;LLM&lt;/a&gt; setup going.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;In this article:&lt;/strong&gt;&lt;/p&gt;】&lt;p&gt;所以，我是Alexa团队的软件开发经理，并且在Alexa之旅中，您有点前排座位，可以遇到一些非常酷的AI。这让我想到：“嘿，我想在自己的机器上戳入这些LLM，看看是什么使em tick脚不需要大规模的服务器农场。”这基本上是我弄清楚如何获得个人&lt;a href =“ https://dzone.com/refcardz/getting-with-large-lange-models”&gt; llm &lt;/a&gt;设置的日志。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;在本文中：&lt;/strong&gt; &lt;/p&gt;</description>
      <pubDate>Fri, 27 Jun 2025 11:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【A Beginner’s Guide to Playwright: End-to-End Testing Made Easy】剧作家初学者指南：端到端测试变得容易</title>
      <link>https://dzone.com/articles/beginner-guide-playwright-end-to-end-testing</link>
      <description>【&lt;p data-end=&#34;586&#34; data-start=&#34;288&#34;&gt;Modern web applications are growing increasingly complex, and so is the need for reliable, fast, and flexible testing tools. Playwright, developed by Microsoft, is quickly becoming a go-to choice for developers and QA engineers looking to implement robust end-to-end (E2E) testing for web apps.&lt;/p&gt;&#xA;&lt;p data-end=&#34;895&#34; data-start=&#34;588&#34;&gt;In this beginner’s guide, we’ll explore what &lt;a href=&#34;https://dzone.com/articles/playwright-javascript-tutorial-a-complete-guide&#34;&gt;Playwright&lt;/a&gt; is, why it’s useful, and how to get started — step by step. Whether you&#39;re just starting your testing journey or transitioning from tools like Selenium or Cypress, this guide will help you understand Playwright’s core strengths and how to leverage them.&lt;/p&gt;】&lt;p data-end =“ 586” data-start =“ 288”&gt;现代Web应用程序越来越复杂，因此需要可靠，快速和灵活的测试工具。由Microsoft开发的Playwright正在迅速成为开发人员和质量保证工程师，希望实施Web应用程序的强大端到端测试（E2E）。&lt;/p&gt;&#xA;&lt;p data-end=&#34;895&#34; data-start=&#34;588&#34;&gt;In this beginner’s guide, we’ll explore what &lt;a href=&#34;https://dzone.com/articles/playwright-javascript-tutorial-a-complete-guide&#34;&gt;Playwright&lt;/a&gt; is, why it’s useful, and how to get started — step by step.无论您是刚开始测试旅程还是从硒或柏树等工具过渡，本指南都将帮助您了解剧作家的核心优势以及如何利用它们。&lt;/p&gt;</description>
      <pubDate>Fri, 27 Jun 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Advanced NLP-Powered Financial Ledger Reconciliation Using LangChain】使用Langchain的高级NLP供电财务分类帐和解</title>
      <link>https://dzone.com/articles/nlp-financial-ledger-reconciliation-langchain</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;In the world of finance, ensuring accuracy and compliance in financial records is a critical function. One of the key challenges faced by financial institutions is ledger reconciliation, which involves matching transactions across multiple data sources to detect inconsistencies, errors, and fraud. Traditional reconciliation methods, largely rule-based and manual, are often inefficient, slow, and unable to handle the vast amount of financial data generated daily.&lt;/p&gt;&#xA;&lt;p&gt;Enter &lt;a href=&#34;https://dzone.com/articles/a-complete-guide-to-modern-ai-developer-tools&#34;&gt;Natural Language Processing (NLP) and LangChain&lt;/a&gt;, a cutting-edge AI-powered framework that transforms ledger reconciliation through automation, enhanced accuracy, and anomaly detection. This article explores how LangChain leverages &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-large-language-models&#34;&gt;Large Language Models (LLMs)&lt;/a&gt; to improve financial ledger reconciliation, reduce manual effort, and enhance fraud detection.&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt;在金融界中，确保财务记录的准确性和合规性是关键功能。金融机构面临的主要挑战之一是分类帐会，涉及与多个数据源的交易相匹配以检测不一致，错误和欺诈。传统的对帐方法，主要基于规则和手动，通常效率低下，缓慢，无法处理每天生成的大量财务数据。&lt;/p&gt;&#xA;&lt;p&gt;输入&lt;a href =“ https://dzone.com/articles/a-complete-guide-to-modern-ai-developer-tools”&gt;自然语言处理（NLP）和langchain &lt;/a&gt;，一种尖锐的AI-AI-AI-Power框架，通过自动化来改变LEDGER和解，并增强精度，并促进了Ans Anmanaly，并具有一个良好的可观范围。本文探讨了Langchain的利用如何&lt;a href =“ https://dzone.com/refcardz/getting-with-with-large-lange-language-models”&gt;大型语言模型（LLMS）&lt;/a&gt; &lt;/a&gt;以改善金融账本和解，减少手动训练，并增强欺诈检测。</description>
      <pubDate>Fri, 27 Jun 2025 15:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【The Missing Layer in AI Pipelines: Why Data Engineers Must Think Like Product Managers】AI管道中的缺失层：为什么数据工程师必须像产品经理一样思考</title>
      <link>https://dzone.com/articles/ai-project-failure-data-product-mindset</link>
      <description>【&lt;p&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;AI is reshaping industries, but without the right data mindset, it won’t go far. Everyone’s trying to launch &lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/ai-explained-for-curious-minds&#34;&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;AI&lt;/span&gt;&lt;/a&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;, be it predictive models, &lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/understanding-llm-technology&#34;&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;LLMs&lt;/span&gt;&lt;/a&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;, or anything else. But when projects stall, the model is rarely the&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;problem&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;. The issues are upstream: messy data, unclear ownership, or mismatched expectations.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;Data engineers used to be&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;behind-the-scenes&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;builders. Now they’re front and&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;centre&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;in AI delivery. But the bar’s higher. Moving data isn’t enough. You have to own what happens next,&amp;nbsp;&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;and&lt;/span&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;that means thinking like a product manager.&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span data-proserver spaces =“ true”&gt; AI正在重塑行业，但是如果没有正确的数据思维方式，它就不会走得更远。每个人都在尝试启动&lt;/span&gt; &lt;a href =“ https://dzone.com/articles/ai-explained-for-curious-minds”&gt; &lt;span data data-preserver-spaces =“ true”&gt; ai &lt;/span&gt; ai &lt;/span&gt; &lt;/a&gt; &lt;span data data-proserver spaces = href =“ https://dzone.com/articles/understanding-llm-technology”&gt; &lt;span data-preserver-spaces =“ true”&gt; llms &lt;/span&gt; &lt;/a&gt; &lt;span data data-proserver-spaces =“ true”&gt;或其他任何东西。但是，当项目失速时，模型很少是&lt;/span&gt; &lt;span data-proserver spaces =“ true”&gt;问题&lt;/span&gt; &lt;span data data-proserver spaces =“ true”&gt;。这些问题是上游：凌乱的数据，不清楚的所有权或不匹配的期望。&lt;/span&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;span data-proserver spaces =“ true”&gt;数据工程师曾经为&lt;/span&gt; &lt;span data-data-proserver spaces =“ true”&gt;幕后&lt;/span&gt; &lt;span data data-pleserver spaces =“ true”&gt; builders。现在，它们是前面的，&lt;/span&gt; &lt;span data-proserver spaces =“ true”&gt;中心&lt;/span&gt; &lt;span data data-preserver spaces =“ true”&gt;在AI交付中。但是酒吧更高。移动数据还不够。您必须拥有接下来会发生的事情，&lt;/span&gt; &lt;span data-proserver spaces =“ true”&gt; and &lt;/span&gt; &lt;span data data-proserver spaces =“ true”&gt;，意思是像产品管理器一样思考。&lt;/span&gt; &lt;/per&gt; &lt;/p&gt;</description>
      <pubDate>Fri, 27 Jun 2025 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Untold Costs of Automation: Are We Sacrificing Security for Speed?】自动化成本不足：我们是否为速度牺牲了安全性吗？</title>
      <link>https://dzone.com/articles/costs-of-automation-sacrificing-security-for-speed</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Are we getting too aggressive with speed and efficiency in automation, losing the battle to security? If security isn&#39;t prioritized, automation can accelerate risks as quickly as it accelerates processes, leading to severe consequences.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;A study &lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;conducted on the &lt;a href=&#34;https://www.ibm.com/reports/threat-intelligence&#34; target=&#34;_blank&#34;&gt;IBM Security X-Force Threat Intelligence Index 2024&lt;/a&gt; reveals that, among the overall cyberattacks, 71% are attributed to stolen or compromised credentials, underscoring&lt;/span&gt; the human factor in security breaches.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;我们对自动化的速度和效率过于激进，失去了安全的战斗？如果没有确定安全性，自动化可以像加速过程一样快速加速风险，从而导致严重的后果。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;一项研究&lt;span style =“边距：0px; padding：0px;”&gt;在&lt;a href =“ https：//www.ibm.com/reatports/retports/retports/reat-inteleat-intelligence” target =“ _ blank”&gt; ibm Secuther x-force theat要偷走或妥协凭证，强调&lt;/span&gt;安全漏洞中的人为因素。 &lt;/p&gt;</description>
      <pubDate>Fri, 27 Jun 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Advanced Argo Rollouts With Datadog Metrics for Progressive Delivery】高级Argo推出，使用DataDog指标进行渐进交付</title>
      <link>https://dzone.com/articles/argo-rollouts-datadog-automated-deployments</link>
      <description>【&lt;p&gt;In modern DevOps environments, delivering software quickly and reliably is essential. Progressive delivery strategies such as canary deployments have emerged as effective methods to reduce risk during application updates. &lt;a href=&#34;https://dzone.com/articles/argo-rollout-and-deployment-strategies&#34;&gt;Argo Rollouts&lt;/a&gt; is a Kubernetes-native controller that enables progressive delivery using deployment strategies like canary and blue-green. When integrated with &lt;a href=&#34;https://dzone.com/articles/secrets-management-datadog-secret-backend-utility&#34;&gt;Datadog&lt;/a&gt;, a powerful monitoring and observability platform, Argo Rollouts can automatically make deployment decisions based on real-time metrics. This paper explores how Argo Rollouts and Datadog work together to automate analysis, reduce manual intervention, and ensure safe, data-driven deployments in Kubernetes environments.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;As organizations adopt microservices and cloud-native architectures, the complexity of application deployments has increased significantly. Traditional deployment methods often lead to downtime, user disruption, or production issues due to the lack of real-time feedback. Progressive delivery offers a solution by incrementally rolling out changes and continuously validating them.&lt;/p&gt;】&lt;p&gt;在现代DevOps环境中，快速可靠地交付软件至关重要。诸如金丝雀部署之类的渐进交付策略已成为降低申请更新期间风险的有效方法。 &lt;a href =“ https://dzone.com/articles/argo-rollout-and-deployment-strategies”&gt; argo推出&lt;/a&gt;是一个Kubernetes-native Controller，可以使用金丝雀和蓝绿色等部署策略进行逐步交付。当与&lt;a href =“ https://dzone.com/articles/secrets-management-datadog-secret-backend-utility”集成时，&gt; datadog &lt;/a&gt;，一个强大的监视和可观察性平台时，Argo推出可以自动根据实时计算机进行部署决策。本文探讨了Argo推出和DataDog如何共同努力以自动分析，减少手动干预并确保在Kubernetes环境中安全，数据驱动的部署。&lt;/p&gt;&#xA;&lt;H2&gt; &lt;strong&gt;简介&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt;随着组织采用微服务和云本地体系结构，应用程序部署的复杂性已大大增加。传统的部署方法通常会导致由于缺乏实时反馈而导致停机时间，用户中断或生产问题。渐进交付通过逐步推出更改并不断验证它们提供解决方案。&lt;/p&gt;</description>
      <pubDate>Fri, 27 Jun 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AI-Driven Autonomous ERP Systems: Engineering Management Perspective】AI驱动的自主ERP系统：工程管理观点</title>
      <link>https://dzone.com/articles/ai-driven-autonomous-erp-systems</link>
      <description>【&lt;h2&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Enterprise resource planning (ERP) systems are fundamental to modern business operations, yet traditional ERP solutions demand extensive manual configuration, maintenance, and monitoring. This paper proposes a novel AI-driven autonomous ERP framework that leverages machine learning (ML), process mining, and large language models (LLMs) to optimize enterprise workflows in real time.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In the context of engineering management, the framework introduces self-learning modules that continuously adapt to business trends, user behavior, and operational inefficiencies, reducing human intervention while enhancing efficiency, security, and scalability. This paper outlines the architecture, key components, implementation challenges, and the managerial impact of autonomous ERP systems.&lt;/p&gt;】&lt;h2&gt;摘要&lt;/h2&gt;&#xA;&lt;p&gt;企业资源计划（ERP）系统是现代业务运营的基础，但是传统的ERP解决方案需要大量的手动配置，维护和监视。本文提出了一个新颖的AI驱动自动ERP框架，该框架利用机器学习（ML），过程挖掘和大型语言模型（LLMS）实时优化企业工作流程。 &lt;/p&gt;&#xA;&lt;p&gt;在工程管理的背景下，该框架引入了不断适应业务趋势，用户行为和运营效率低下的自学习模块，减少了人类干预，同时提高效率，安全性和可扩展性。本文概述了自动ERP系统的体系结构，关键组件，实施挑战以及管理影响。&lt;/p&gt;</description>
      <pubDate>Fri, 27 Jun 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Containerizing AI: Hands-On Guide to Deploying ML Models With Docker and Kubernetes】使用Docker和Kubernetes部署ML模型的容器AI：动手指南</title>
      <link>https://dzone.com/articles/containerize-ml-model-docker-aws-eks</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/introduction-to-containerization&#34;&gt;Containerization&lt;/a&gt; packages applications into lightweight, portable units. For machine learning, this ensures reproducible environments and easy deployments. &amp;nbsp;For example, containers bundle the ML model code with its exact dependencies, so results stay consistent across machines They can then be run on any Docker host or cloud, improving portability. Orchestration platforms like &lt;a href=&#34;https://dzone.com/refcardz/getting-started-kubernetes&#34;&gt;Kubernetes&lt;/a&gt; add scalability, automatically spinning up or down containers as needed. &amp;nbsp;Containers also isolate the ML environment from other applications, preventing dependency conflicts. In short, packaging your ML model in a &lt;a href=&#34;https://dzone.com/articles/kubernetes-vs-docker-differences-explained&#34;&gt;Docker container&lt;/a&gt; makes it much easier to move, run, and scale reliably in production.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li data-end=&#34;1134&#34; data-start=&#34;939&#34;&gt;&lt;strong data-end=&#34;959&#34; data-start=&#34;939&#34;&gt;Reproducibility:&lt;/strong&gt; Container images bundle the model, libraries and runtime (e.g. Python, scikit-learn), so the ML service behaves the same on any system.&lt;/li&gt;&#xA; &lt;li data-end=&#34;1283&#34; data-start=&#34;1137&#34;&gt;&lt;strong data-end=&#34;1153&#34; data-start=&#34;1137&#34;&gt;Portability:&lt;/strong&gt; The same container runs on a developer’s laptop, CI pipeline, or cloud VM without changes.&lt;/li&gt;&#xA; &lt;li data-end=&#34;1490&#34; data-start=&#34;1286&#34;&gt;&lt;strong data-end=&#34;1302&#34; data-start=&#34;1286&#34;&gt;Scalability:&lt;/strong&gt; Container platforms (Docker + Kubernetes) can replicate instances under load. Kubernetes can auto-scale pods running your ML service to meet demand.&lt;/li&gt;&#xA; &lt;li data-end=&#34;1665&#34; data-start=&#34;1493&#34;&gt;&lt;strong data-end=&#34;1507&#34; data-start=&#34;1493&#34;&gt;Isolation:&lt;/strong&gt; Each container is sandboxed from others and the host OS, avoiding version conflicts or “works on my machine” problems.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p data-end=&#34;1864&#34; data-start=&#34;1667&#34;&gt;With these benefits, let’s walk through a concrete example: training a simple model in Python, serving it via a Flask API, and then containerizing and deploying it on an AWS EKS Kubernetes cluster.&lt;/p&gt;】&lt;p&gt; &lt;a href =“ https://dzone.com/articles/introduction-to-containerization”&gt;容器化&lt;/a&gt;将应用程序应用到轻便的便携式单元中。对于机器学习，这可以确保可重现的环境和易于部署。  例如，容器将ML模型代码与其确切的依赖关系捆绑在一起，因此结果在机器之间保持一致，然后可以在任何Docker主机或云上运行，从而提高便携性。 &lt;a href =“ https://dzone.com/refcardz/getting-started-kubernetes”&gt; kubernetes之类的管弦乐平台&lt;/a&gt; &lt;/a&gt;添加可扩展性，自动根据需要自动向上或向下旋转。  容器还将ML环境与其他应用程序隔离，以防止依赖性冲突。简而言之，将您的ML模型包装在A &lt;a href =“ https://dzone.com/articles/kubernetes-vs-vs-docker-differences-explace-&gt; docker容器&lt;/a&gt;中，使移动，运行，运行和缩放在生产中可相得更容易。&#xA;&lt;ul&gt;&#xA; &lt;li data-end =“ 1134” data-start =“ 939”&gt; &lt;strong data-end =“ 959” data-start =“ 939”&gt;可重复性：&lt;/strong&gt;容器图像捆绑模型，库和运行时（例如，python，scikit-learn），因此ML服务在任何系统上行为相同。&#xA; &lt;li data-end =“ 1283” data-start =“ 1137”&gt; &lt;strong data-end =“ 1153” data-start =“ 1137”&gt;可移植性：&lt;/strong&gt;在开发人员的笔记本电脑，CI管道或云VM上运行相同的容器，无需更改。&lt;/li&gt;&#xA; &lt;li data-end =“ 1490” data-start =“ 1286”&gt; &lt;strong data-end =“ 1302” data-start =“ 1286”&gt;可伸缩性：&lt;/strong&gt;容器平台（Docker + Kubernetes）可以在负载下复制实例。 kubernetes可以自动运行您的ML服务以满足需求。&lt;/li&gt;&#xA; &lt;li data-end =“ 1665” data-start =“ 1493”&gt; &lt;strong data-end =“ 1507” data-start =“ 1493”&gt;隔离：&lt;/strong&gt;每个容器都与其他容器和主机OS一起沙盒，避免使用版本冲突或“在我的机器上工作”问题。&lt;/li&gt; &lt;/li&gt; &lt;/li&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p data-end =“ 1864” data-start =“ 1667”&gt;带有这些好处，让我们浏览一个具体的示例：在Python中训练一个简单的模型，通过烧瓶API进行服务，然后在AWS EKS EKS EKS EKS KUBERNETES群集上进行容器和部署。</description>
      <pubDate>Fri, 27 Jun 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Mock the File System】模拟文件系统</title>
      <link>https://dzone.com/articles/mock-the-file-system</link>
      <description>【&lt;p&gt;It happens quite often that our applications need to interact with the file system. &amp;nbsp;As a result, some components inevitably depend on it. When we test such code, we face a choice: &lt;a href=&#34;https://dzone.com/articles/mocking-importance-in-integration-e2e-testing&#34;&gt;mock the file system&lt;/a&gt;, or test against the real one? &amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;There are several opposing views on this. Most developers avoid using the file system in &lt;a href=&#34;https://dzone.com/articles/7-popular-unit-test-naming&#34;&gt;unit tests&lt;/a&gt;. Tests that touch the disk are usually treated as an anti‑pattern because they are slow and brittle.&lt;/p&gt;】&lt;p&gt;我们的应用程序经常需要与文件系统进行交互。  结果，某些组件不可避免地取决于它。当我们测试这样的代码时，我们将面临一个选择：&lt;a href =“ https://dzone.com/articles/mocking-importance-in-integration-e2e-testing”&gt;模拟文件系统&lt;/a&gt;或对真实的文件进行测试？  &lt;/p&gt;&#xA;&lt;p&gt;对此有几种相反的看法。大多数开发人员避免在&lt;a href =“ https://dzone.com/articles/7popular-unit-test-naming”中使用文件系统&gt;单位测试&lt;/a&gt;。触摸磁盘的测试通常被视为抗模式，因为它们较慢且脆弱。&lt;/p&gt;</description>
      <pubDate>Fri, 27 Jun 2025 13:00:01 +0000</pubDate>
    </item>
  </channel>
</rss>