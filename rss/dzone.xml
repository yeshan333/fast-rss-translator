<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Enhancing Accuracy in AI-Driven Mobile Applications: Tackling Hallucinations in Large Language Models】提高人工智能驱动的移动应用程序的准确性：解决大型语言模型中的幻觉</title>
      <link>https://dzone.com/articles/tackling-hallucinations-in-large-language-models</link>
      <description>【&lt;p&gt;In recent discussions around AI, hallucinations in &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-large-language-models&#34;&gt;Large Language Models (LLMs)&lt;/a&gt; have become a focal point. These hallucinations manifest when an LLM generates outputs that, while coherent and contextually appropriate, are factually incorrect. For instance, in a mobile app that provides technical support, an LLM might confidently assert that a certain deprecated API can still be used in a current version of Android, leading to potential application errors. This issue is particularly critical in my work, where precision in mobile app development is non-negotiable.&lt;/p&gt;&#xA;&lt;p&gt;Understanding why LLMs produce such hallucinations is essential, especially when deploying them in scenarios that require high trust and accuracy. It&#39;s important to recognize that an LLM is not a structured database; it functions more like a predictive text engine, generating content based on probabilistic patterns rather than factual data.&lt;/p&gt;】&lt;p&gt;在最近围绕人工智能的讨论中，&lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-large-language-models&#34;&gt;大型语言模型 (LLM)&lt;/a&gt; 中出现了幻觉成为焦点。当法学硕士生成的输出虽然连贯且符合上下文，但实际上是不正确的时，这些幻觉就会显现出来。例如，在提供技术支持的移动应用程序中，法学硕士可能会自信地断言某个已弃用的 API 仍然可以在当前版本的 Android 中使用，从而导致潜在的应用程序错误。这个问题在我的工作中尤其重要，因为移动应用程序开发的精度是不容妥协的。&lt;/p&gt;&#xA;&lt;p&gt;了解法学硕士为何产生此类幻觉至关重要，尤其是在需要高信任度和准确性的场景中部署它们时。重要的是要认识到法学硕士不是一个结构化数据库；它是一个结构化的数据库。它的功能更像是一个预测文本引擎，根据概率模式而不是事实数据生成内容。&lt;/p&gt;</description>
      <pubDate>Tue, 27 Aug 2024 20:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【How to Setup Multi-Primary Istio in EKS and AKS for Production】如何在 EKS 和 AKS 中设置多主 Istio 以进行生产</title>
      <link>https://dzone.com/articles/setup-multi-primary-istio-in-eks-and-aks-for-production</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Many large enterprises like retail and banks are adopting open-source Istio service mesh to abstract and better manage the security and network of microservices. To either tackle cost, achieve HA/DR, or improve latency, they apply multi-cloud and multi-cluster strategies in their production system.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Implementing Istio in a multi-cloud environment can be tricky, and architects often take time for experimentation. In this blog, we will discuss various ways to achieve multi-cloud and multicluster configuration for Istio implementation and also guide you through the steps to set up primary-primary multicluster Istio in EKS and AKS&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;零售和银行等许多大型企业正在采用开源 Istio 服务网格来抽象和更好地管理微服务的安全性和网络。为了解决成本问题、实现 HA/DR 或改善延迟，他们在生产系统中应用多云和多集群策略。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;在多云环境中实施 Istio 可能很棘手，架构师通常需要时间进行试验。在本博客中，我们将讨论实现 Istio 实施的多云和多集群配置的各种方法，并指导您完成在 EKS 和 AKS 中设置主-主多集群 Istio 的步骤&lt;/p&gt;</description>
      <pubDate>Tue, 27 Aug 2024 21:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Debugging Low Cache Hit Ratio】调试低缓存命中率</title>
      <link>https://dzone.com/articles/debugging-low-cache-hit-ratio</link>
      <description>【&lt;p&gt;Disk activity is much slower than reading data from RAM. With today’s performance characteristics, reading from DRAM takes around 100 nanoseconds whereas reading from the physical drive is between 10 microseconds (for SSD) up to 10 milliseconds (for HHD). This is up to 100,000 times slower than accessing the random access memory. Reading from the L1 cache is even faster and can take 3 CPU cycles which is less than 1 nanosecond. Therefore, every read from a physical drive is a tremendous performance hit and should be avoided. In this blog post, we are going to see how to debug scenarios where we can’t utilize cached data and need to read from the physical drive. We’re going to see why it’s important, what to look for, and what tools and extensions to use.&lt;/p&gt;&#xA;&lt;h2&gt;How Databases Read Data&lt;/h2&gt;&#xA;&lt;p&gt;Databases are well aware of performance issues when reading data directly from the hard drive. Therefore, they incorporate many sophisticated techniques to boost performance and cache data where possible. Let’s see how the database can access the data and what happens next.&lt;/p&gt;】&lt;p&gt;磁盘活动比从 RAM 读取数据慢得多。根据当今的性能特征，从 DRAM 读取大约需要 100 纳秒，而从物理驱动器读取的时间在 10 微秒（对于 SSD）到 10 毫秒（对于 HHD）之间。这比访问随机存取存储器要慢 100,000 倍。从 L1 缓存读取的速度更快，需要 3 个 CPU 周期，不到 1 纳秒。因此，每次从物理驱动器读取都会对性能造成巨大影响，应该避免。在这篇博文中，我们将了解如何调试无法利用缓存数据并需要从物理驱动器读取数据的场景。我们将了解为什么它很重要、要寻找什么以及要使用哪些工具和扩展。&lt;/p&gt;&#xA;&lt;h2&gt;数据库如何读取数据&lt;/h2&gt;&#xA;&lt;p&gt;数据库非常清楚直接从硬盘读取数据时的性能问题。因此，它们结合了许多复杂的技术来提高性能并尽可能缓存数据。让我们看看数据库如何访问数据以及接下来会发生什么。&lt;/p&gt;</description>
      <pubDate>Tue, 27 Aug 2024 12:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Building a Powerful AI and Machine Learning Pipeline: Best Practices and Tools】构建强大的人工智能和机器学习管道：最佳实践和工具</title>
      <link>https://dzone.com/articles/building-a-powerful-ai-and-machine-learning-pipeli</link>
      <description>【&lt;p&gt;Artificial intelligence and machine learning have evolved from experimental technologies to essential components of modern business strategies. Companies that effectively build and deploy AI/ML models gain a significant competitive advantage, but creating a fully functional AI system is complex and involves multiple stages.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Each stage, from raw data collection to the deployment of a final model, demands careful planning and execution. This article explores best practices for constructing a robust AI/ML pipeline, guiding you through every step — from data collection and processing to model deployment and monitoring.&lt;/p&gt;】&lt;p&gt;人工智能和机器学习已经从实验技术发展成为现代商业战略的重要组成部分。有效构建和部署 AI/ML 模型的公司可以获得显着的竞争优势，但创建功能齐全的 AI 系统非常复杂，涉及多个阶段。 &lt;/p&gt;&#xA;&lt;p&gt;从原始数据收集到最终模型的部署，每个阶段都需要仔细规划和执行。本文探讨了构建强大的 AI/ML 管道的最佳实践，指导您完成从数据收集和处理到模型部署和监控的每一步。&lt;/p&gt;</description>
      <pubDate>Tue, 27 Aug 2024 18:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Overcoming the Retry Dilemma in Distributed Systems】克服分布式系统中的重试困境</title>
      <link>https://dzone.com/articles/overcoming-the-retry-dilemma-in-distributed-systems</link>
      <description>【&lt;blockquote&gt;&#xA; &lt;p&gt;&lt;em&gt;“Insanity is doing the same thing over and over again, but expecting different results” - Source unknown&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;As you can see in the quote above, humans have this tendency to retry things even when results are not going to change. This was manifested in systems designs as well where we pushed these biases when designing systems. If you look closely there are two broad categories of failures:&amp;nbsp;&lt;/p&gt;】&lt;块引用&gt;&#xA; &lt;p&gt;&lt;em&gt;“疯狂就是一遍又一遍地做同样的事情，却期待不同的结果” - 来源未知&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&lt;p&gt;正如您在上面的引文中所看到的，即使结果不会改变，人类也有重试的倾向。这也体现在系统设计中，以及我们在设计系统时推动这些偏见的地方。如果您仔细观察，会发现失败分为两大类：&lt;/p&gt;</description>
      <pubDate>Tue, 27 Aug 2024 16:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Telemetry Pipelines Workshop: Integrating Fluent Bit With OpenTelemetry, Part 1】遥测管道研讨会：将 Fluent Bit 与 OpenTelemetry 集成，第 1 部分</title>
      <link>https://dzone.com/articles/telemetry-pipelines-integrating-fluent-bit-with-otel-pt1</link>
      <description>【&lt;p&gt;Are you ready to get started with cloud-native observability with telemetry pipelines?&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;This article is part of a series exploring a workshop guiding you through the open source project Fluent Bit, what it is, a basic installation, and setting up the first telemetry pipeline project. Learn how to manage your cloud-native data from source to destination using the telemetry pipeline phases covering collection, aggregation, transformation, and forwarding from any source to any destination.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;您准备好开始使用遥测管道进行云原生可观测了吗？ &lt;/p&gt;&#xA;&lt;p&gt;本文是一系列研讨会的一部分，该研讨会将指导您了解开源项目 Fluent Bit、它是什么、基本安装以及设置第一个遥测管道项目。了解如何使用遥测管道阶段（涵盖从任何源到任何目标的收集、聚合、转换和转发）来管理从源到目标的云原生数据。 &lt;/p&gt;</description>
      <pubDate>Tue, 27 Aug 2024 14:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【LangChain Language Correctness Detector】LangChain语言正确性检测器</title>
      <link>https://dzone.com/articles/langchain-language-correctness-detector</link>
      <description>【&lt;p&gt;This project implements a simple LangChain language correctness detector that detects grammatical errors, sentiment, and aggressiveness, and provides solutions for the errors in the text.&lt;/p&gt;&#xA;&lt;h2&gt;Features&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;Detects grammatical errors in the text&lt;/li&gt;&#xA; &lt;li&gt;Analyzes the sentiment of the text&lt;/li&gt;&#xA; &lt;li&gt;Measures the aggressiveness of the text&lt;/li&gt;&#xA; &lt;li&gt;Provides solutions for the detected errors&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Stack Used&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: JavaScript runtime environment&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: Typed superset of JavaScript&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;LangChain&lt;/strong&gt;: Language processing library&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;OpenAI API&lt;/strong&gt;: For language model capabilities&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Google Cloud&lt;/strong&gt;: For additional language processing services&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Installation&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;Clone the repository:&#xA;  &lt;pre&gt;&lt;code&gt; git clone https://github.com/xavidop/langchain-example.git&#xA; cd langchain-example&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;br&gt;&lt;/p&gt;】&lt;p&gt;该项目实现了一个简单的LangChain语言正确性检测器，可以检测语法错误、情绪和攻击性，并针对文本中的错误提供解决方案。&lt;/p&gt;&#xA;&lt;h2&gt;功能&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;检测文本中的语法错误&lt;/li&gt;&#xA; &lt;li&gt;分析文本的情绪&lt;/li&gt;&#xA; &lt;li&gt;衡量文本的攻击性&lt;/li&gt;&#xA; &lt;li&gt;针对检测到的错误提供解决方案&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;使用的堆栈&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt;：JavaScript 运行时环境&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;：JavaScript 的类型超集&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;LangChain&lt;/strong&gt;：语言处理库&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;OpenAI API&lt;/strong&gt;：用于语言模型功能&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Google Cloud&lt;/strong&gt;：用于其他语言处理服务&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;安装&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;克隆存储库：&#xA;  &lt;pre&gt;&lt;code&gt; git 克隆 https://github.com/xavidop/langchain-example.git&#xA; cd langchain-example&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 27 Aug 2024 17:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Are You Tired of Fragile Tests? Meet data-testid】您是否厌倦了脆弱的测试？满足数据testid</title>
      <link>https://dzone.com/articles/meet-data-testid</link>
      <description>【&lt;p name=&#34;216f&#34;&gt;In the realm of front-end development, ensuring that your application is thoroughly tested and maintains high quality is paramount. One of the strategies that can significantly enhance both the development and testing processes is the use of the &lt;code&gt;data-testid&lt;/code&gt; attribute. This attribute, specifically designed for testing purposes, offers numerous advantages, particularly from a QA perspective.&lt;br&gt;&lt;img data-width=&#34;1536&#34; class=&#34;fr-fic fr-dib lazyload&#34; data-image=&#34;true&#34; data-new=&#34;false&#34; data-sizeformatted=&#34;299.7 kB&#34; data-mimetype=&#34;image/jpeg&#34; data-creationdate=&#34;1724168330191&#34; data-creationdateformatted=&#34;08/20/2024 03:38 PM&#34; data-type=&#34;temp&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/17865210-1724168328872.jpeg&#34; data-modificationdate=&#34;null&#34; data-size=&#34;299671&#34; data-name=&#34;1724168328872.jpeg&#34; data-id=&#34;17865210&#34; style=&#34;width: 440px;&#34; data-src=&#34;https://dz2cdn1.dzone.com/storage/temp/17865210-1724168328872.jpeg&#34; alt=&#34;Stop sign that says, &amp;quot;STOP flaky tests&amp;quot;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 name=&#34;90f6&#34;&gt;&lt;strong&gt;Benefits of Using data-testid&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 name=&#34;87a6&#34;&gt;&lt;strong&gt;Stable and Reliable Locators&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4&gt;&lt;strong&gt;Benefit&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;p&gt;One of the primary challenges in automated testing is ensuring that test scripts remain stable as the UI evolves. Typically, selectors like classes and IDs are used to locate elements in the DOM, but these can change frequently as the design or structure of the UI is updated. &lt;code&gt;data-testid&lt;/code&gt; provides a stable and reliable way to locate elements, as it is intended solely for testing purposes and is less likely to be altered.&lt;/p&gt;】&lt;p name=&#34;216f&#34;&gt;在前端开发领域，确保您的应用程序经过彻底测试并保持高质量至关重要。可以显着增强开发和测试过程的策略之一是使用 &lt;code&gt;data-testid&lt;/code&gt; 属性。此属性专为测试目的而设计，具有许多优点，特别是从 QA 角度来看。&lt;br&gt;&lt;img data-width=&#34;1536&#34; class=&#34;fr-fic fr-dib lazyload&#34; data-image=&#34;true&#34; data -new=&#34;false&#34; data-sizeformatted=&#34;299.7 kB&#34; data-mimetype=&#34;image/jpeg&#34; data-creationdate=&#34;1724168330191&#34; data-creationdateformatted=&#34;08/20/2024 03:38 PM&#34; data-type=&#34;临时” data-url =“https://dz2cdn1.dzone.com/storage/temp/17865210-1724168328872.jpeg”data-modificationdate =“null”data-size =“299671”data-name =“1724168328872.jpeg”数据id =“17865210”样式=“宽度：440px;” data-src=&#34;https://dz2cdn1.dzone.com/storage/temp/17865210-1724168328872.jpeg&#34; alt=&#34;停止标志，上面写着“停止片状测试”&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 name=&#34;90f6&#34;&gt;&lt;strong&gt;使用 data-testid 的好处&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 name=&#34;87a6&#34;&gt;&lt;strong&gt;稳定可靠的定位器&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4&gt;&lt;strong&gt;好处&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;p&gt;自动化测试的主要挑战之一是确保测试脚本随着 UI 的发展保持稳定。通常，类和 ID 等选择器用于在 DOM 中定位元素，但随着 UI 设计或结构的更新，这些选择器可能会频繁更改。 &lt;code&gt;data-testid&lt;/code&gt; 提供了一种稳定可靠的方式来定位元素，因为它仅用于测试目的并且不太可能被更改。&lt;/p&gt;</description>
      <pubDate>Tue, 27 Aug 2024 19:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Beyond the Obvious: Uncovering the Hidden Challenges in Cybersecurity】超越显而易见的事情：揭示网络安全中隐藏的挑战</title>
      <link>https://dzone.com/articles/beyond-the-obvious-uncovering-the-hidden-challenge</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In the ever-evolving landscape of cybersecurity, staying ahead of threats requires more than just keeping up with the latest technologies. As we delve into the insights shared by industry experts at &lt;a href=&#34;https://www.blackhat.com/us-24/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Black Hat 2024&lt;/a&gt;, it becomes clear that some of the most critical challenges facing security professionals today are often hidden in plain sight. This article explores these overlooked areas and their implications for developers, engineers, and security professionals.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;The Human Element: The Overlooked Firewall&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;While cutting-edge technologies dominate cybersecurity discussions, several experts emphasized that the human factor remains both our greatest vulnerability and our strongest asset. &lt;a href=&#34;https://www.linkedin.com/in/katiepf/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Katie Paxton-Fear&lt;/a&gt;, API Researcher at Traceable AI, points out that &#34;teams often fixate on what&#39;s new and shiny,&#34; potentially overlooking the crucial &#34;human firewall.&#34;&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;在不断发展的网络安全环境中，保持领先地位需要的不仅仅是跟上最新技术。当我们深入研究行业专家在 &lt;a href=&#34;https://www.blackhat.com/us-24/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Black Hat 2024&lt;/a&gt; 上分享的见解时很明显，当今安全专业人员面临的一些最严峻的挑战往往隐藏在人们的视线中。本文探讨了这些被忽视的领域及其对开发人员、工程师和安全专业人员的影响。&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;人的因素：被忽视的防火墙&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;虽然尖端技术主导着网络安全讨论，但几位专家强调，人为因素仍然是我们最大的弱点，也是我们最强大的资产。 Traceable AI 的 API 研究员 &lt;a href=&#34;https://www.linkedin.com/in/katiepf/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Katie Paxton-Fear&lt;/a&gt; 指出“团队经常关注新的和闪亮的东西”，可能会忽视关键的“人类防火墙”。&lt;/p&gt;</description>
      <pubDate>Tue, 27 Aug 2024 15:00:07 +0000</pubDate>
    </item>
    <item>
      <title>【Cybersecurity Career Paths: Bridging the Gap Between Red and Blue Team Roles】网络安全职业道路：弥合红队和蓝队角色之间的差距</title>
      <link>https://dzone.com/articles/cybersecurity-career-paths-red-and-blue-teams</link>
      <description>【&lt;p&gt;In cybersecurity, professionals are often divided into two distinct groups: Red Teams, which focus on offense, and Blue Teams, which focus on defense. Red Teaming involves ethical hacking. Here, security experts simulate cyberattacks to find vulnerabilities in a system before malicious actors can exploit them. On the other hand, Blue Teaming is all about defending the system from such attacks. Blue Team members monitor, detect, and respond to security incidents.&lt;/p&gt;&#xA;&lt;p&gt;For developers, understanding the dynamics of both Red and Blue Teams is very important. Developers are often on the front lines of &lt;a href=&#34;https://dzone.com/articles/guidance-for-cloud-security-nist-cybersecurity-fra&#34;&gt;building and securing applications&lt;/a&gt;. They must consider how their work fits into the broader security landscape. Whether you are writing code for a new app or patching vulnerabilities in apps after a security breach, knowing the strategies and challenges of both teams can make you a more well-rounded professional.&lt;/p&gt;】&lt;p&gt;在网络安全中，专业人员通常分为两个不同的组：专注于进攻的红队和专注于防御的蓝队。红队涉及道德黑客行为。在这里，安全专家模拟网络攻击，以便在恶意行为者利用这些漏洞之前找到系统中的漏洞。另一方面，蓝队就是为了保护系统免受此类攻击。蓝队成​​员监控、检测和响应安全事件。&lt;/p&gt;&#xA;&lt;p&gt;对于开发者来说，了解红队和蓝队的动态非常重要。开发人员通常处于&lt;a href=&#34;https://dzone.com/articles/guidance-for-cloud-security-nist-cybersecurity-fra&#34;&gt;构建和保护应用程序&lt;/a&gt;的第一线。他们必须考虑他们的工作如何适应更广泛的安全格局。无论您是为新应用程序编写代码，还是在安全漏洞后修补应用程序中的漏洞，了解两个团队的策略和挑战都可以让您成为更加全面的专业人士。&lt;/p&gt;</description>
      <pubDate>Tue, 27 Aug 2024 13:00:04 +0000</pubDate>
    </item>
  </channel>
</rss>