<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【From Laptop to Cloud: Building and Scaling AI Agents With Docker Compose and Offload】从笔记本电脑到云：用Docker组成和卸载的建筑和缩放AI代理</title>
      <link>https://dzone.com/articles/ai-agents-docker-compose-cloud-offload</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Running AI agents locally feels simple until you try it: dependencies break, configs drift, and your laptop slows to a crawl. An agent isn’t one process — it’s usually a mix of a language model, a database, and a frontend. Managing these by hand means juggling installs, versions, and ports.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/manage-microservices-with-docker-compose&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Docker Compose&lt;/a&gt; changes that. You can now define these services in a single YAML file and run them together as one app. Compose even supports declaring &lt;a href=&#34;https://docs.docker.com/ai/compose/models-and-compose&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;AI models&lt;/a&gt; directly with the models element. With one command — docker compose up — your full agent stack runs locally.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;运行AI代理在本地感觉很简单，直到您尝试它：依赖关系破裂，configs漂移，笔记本电脑会减慢爬网。代理不是一个过程，通常是语言模型，数据库和前端的混合。手工管理这些意味着杂耍安装，版本和端口。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt; &lt;a href =“ https://dzone.com/articles/manage-microservices-with-docker-compose” rel =“ noopener noreferrer” target =“ _ blank”&gt; docker compose &lt;/a&gt;变化。现在，您可以在一个YAML文件中定义这些服务，并将它们作为一个应用程序一起运行。甚至支持声明&lt;a href =“ https://docs.docker.com/ai/compose/models-and-compose” rel =“ noopener noreferrer” target =“ _ blank”&gt; ai模型&lt;/a&gt;直接带有模型元素。使用一个命令 -  Docker组成 - 您的完整代理堆栈在本地运行。&lt;/p&gt;</description>
      <pubDate>Mon, 15 Sep 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Spring Cloud Gateway With Service Discovery Using HashiCorp Consul】使用HashiCorp领事通过服务发现的弹簧云网关</title>
      <link>https://dzone.com/articles/spring-cloud-gateway-service-discovery-consul</link>
      <description>【&lt;p dir=&#34;auto&#34;&gt;This article will explain some basics of the HashiCorp Consul service and its configurations. It is a service networking solution that provides service registry and discovery capabilities, which integrate seamlessly with Spring Boot. You may have heard of Netflix Eureka; here, Consul works similarly but offers many additional features. Notably, it supports the modern reactive programming paradigm. I will walk you through with the help of some applications.&lt;/p&gt;&#xA;&lt;div dir=&#34;auto&#34;&gt;&#xA; &lt;h2 dir=&#34;auto&#34; tabindex=&#34;-1&#34;&gt;Used Libraries&lt;/h2&gt;&lt;a href=&#34;https://github.com/VishnuViswam/api-gateway-with-service-discovery#used-libraries&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;ul dir=&#34;auto&#34;&gt;&#xA; &lt;li&gt;Spring Boot&lt;/li&gt;&#xA; &lt;li&gt;Spring Cloud Gateway&lt;/li&gt;&#xA; &lt;li&gt;Spring Cloud Consul&lt;/li&gt;&#xA; &lt;li&gt;Spring Boot Actuator&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div dir=&#34;auto&#34;&gt;&#xA; &lt;a href=&#34;https://github.com/VishnuViswam/api-gateway-with-service-discovery#working&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;p dir=&#34;auto&#34;&gt;The architecture includes three main components:&lt;/p&gt;】&lt;p dir =“自动”&gt;本文将解释Hashicorp领事服务及其配置的一些基础。它是一种服务网络解决方案，可提供服务注册表和发现功能，可与Spring Boot无缝集成。您可能听说过Netflix Eureka；在这里，领事的工作方式类似，但提供了许多其他功能。值得注意的是，它支持现代的反应性编程范式。我会在某些应用程序的帮助下引导您完成。&lt;/p&gt;&#xA;&lt;div dir =“ auto”&gt;&#xA; &lt;h2 dir =“ auto” tabindex =“  -  1”&gt;二手库&lt;/h2&gt; &lt;a href =“ https://github.com/vishnuviswam/api-gateway-gateway-withway-withway-with-with-service-discovery#usedus-liblaries”&gt; &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;ul dir =“自动”&gt;&#xA; &lt;li&gt; Spring Boot &lt;/li&gt;&#xA; &lt;li&gt;春季云网关&lt;/li&gt;&#xA; &lt;li&gt;春天云领事&lt;/li&gt;&#xA; &lt;li&gt;春季启动执行器&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div dir =“ auto”&gt;&#xA; &lt;a href =“ https://github.com/vishnuviswam/api-gateway-with-service-discovery#working”&gt; &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;p dir =“自动”&gt;架构包括三个主要组件：&lt;/p&gt;</description>
      <pubDate>Mon, 15 Sep 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Approximate Top K: Choosing Optimal Count-Min Sketch Parameters】掌握大概顶部K：选择最佳计数米草图参数</title>
      <link>https://dzone.com/articles/top-k-count-min-sketch-configuration</link>
      <description>【&lt;h2&gt;What Is Top K?&lt;/h2&gt;&#xA;&lt;p&gt;The &#34;Top K&#34; problem refers to determining the top-&lt;em&gt;k&lt;/em&gt; elements with the highest frequencies or relevance scores from vast, rapidly changing data streams. In modern real-time systems — such as e-commerce platforms, social media, and streaming services — it&#39;s vital to quickly identify the most relevant items or events. Real-world examples include:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;Trending Twitter hashtags rapidly shifting based on tweet volume&lt;/li&gt;&#xA; &lt;li&gt;Most-watched Netflix movies updating hourly across regions&lt;/li&gt;&#xA; &lt;li&gt;Top Amazon products ranking sales in real time&lt;/li&gt;&#xA; &lt;li&gt;Popular YouTube videos updating hourly based on view velocity&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The &#34;Top K&#34; approach is essential for use cases like:&lt;/p&gt;】&lt;h2&gt;什么是顶部K？&lt;/h2&gt;&#xA;&lt;p&gt;“顶部K”问题是指确定来自频率最高或相关性得分的顶部&lt;em&gt; k &lt;/em&gt;元素。在现代实时系统（例如电子商务平台，社交媒体和流媒体服务）中，很重要的是快速识别最相关的项目或事件。实际示例包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;趋向于根据推文卷迅速转移的Twitter主题标签&lt;/li&gt;&#xA; &lt;li&gt;最观看的Netflix电影每小时更新各个地区&lt;/li&gt;&#xA; &lt;li&gt;最高的亚马逊产品实时排名销售&lt;/li&gt;&#xA; &lt;li&gt;流行的YouTube视频每小时更新基于视图速度&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;“上k”方法对于以下用例至关重要。&lt;/p&gt;</description>
      <pubDate>Mon, 15 Sep 2025 17:00:09 +0000</pubDate>
    </item>
    <item>
      <title>【How AI and Machine Learning Are Shaping the Fight Against Ransomware】AI和机器学习如何塑造与勒索软件的斗争</title>
      <link>https://dzone.com/articles/how-ai-and-machine-learning-are-shaping-the-fight</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Ransomware remains one of the biggest threats to individuals and corporations, primarily because cybercriminals relentlessly look for loopholes. With traditional measures struggling to keep pace with cyber threats, the shift to artificial intelligence (AI) and machine learning (ML) can be revolutionary. With such technologies, detection is automated, damage mitigation strategies are devised, and even attacks are predicted ahead of time. In this article, we review the innovative approaches and AI-enabled solutions that enhance cybersecurity strategies against ransomware.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;The Roles of AI in Prevention and Threat Detection&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;With AI technologies like &lt;a href=&#34;https://dzone.com/articles/4-business-applications-for-natural-language-proce&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;natural language processing&lt;/a&gt; and image recognition, identifying anomalies is faster, more precise, and far better than having to rely on existing systems. By leveraging AI, machine learning algorithms can be combined to identify unique patterns that directly correspond to anomalies. For AI security solutions, the accuracy of cyber attack detection in a real-world environment is reduced by &lt;a href=&#34;https://seosandwitch.com/ai-cybersecurity-stats/&#34;&gt;96%&lt;/a&gt; when compared with traditional methods.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;勒索软件仍然是对个人和公司的最大威胁之一，这主要是因为网络犯罪分子无情地寻找漏洞。随着传统措施努力与网络威胁保持同步，人工智能（AI）和机器学习（ML）的转变可能是革命性的。使用此类技术，检测是自动化的，制定了缓解损伤策略，甚至预测攻击也会提前。在本文中，我们回顾了增强针对勒索软件的网络安全策略的创新方法和启用AI的解决方案。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt; AI在预防和威胁检测中的作用&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;具有像&lt;a href =“ https://dzone.com/articles/4-business--business-for-natural-language-proce” rel =“ noopener noreferrer” target =“ _ black”&gt;自然语言处理&lt;/a&gt;和识别现有系统的facter and for Anemant for Antome，以及更高的系统，以及更高的系统。通过利用AI，可以将机器学习算法组合在一起，以识别直接对应异常的独特模式。对于AI安全解决方案，在现实世界中，网络攻击检测的准确性通过&lt;a href =“ https://seosandwitch.com/ai-cybersecurity-stats/”&gt; 96％&lt;/a&gt;与传统方法进行比较时。&lt;/p&gt;。</description>
      <pubDate>Mon, 15 Sep 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Toward Explainable AI (Part 10): Bridging Theory and Practice—Responsible AI: Ambition or Illusion?】迈向可解释的AI（第10部分）：桥接理论和实践 - 受反应的AI：野心还是幻觉？</title>
      <link>https://dzone.com/articles/explainable-ai-responsible-ai</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;&lt;em&gt;Series reminder: This series explores how explainability in AI helps build trust, ensure accountability, and align with real-world needs, from foundational principles to practical use cases.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;em&gt;Previously, in&amp;nbsp;&lt;/em&gt;&lt;em&gt;Part IX:&amp;nbsp;&lt;/em&gt;&lt;a href=&#34;https://dzone.com/articles/explainable-ai-explainability-under-conditions&#34;&gt;&lt;em&gt;Conclusion: Explainability Under Real-World Conditions: Comparing LIME and SHAP in practice&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;】&lt;p dir =“ ltr”&gt; &lt;em&gt;系列提醒：该系列探讨了AI中的解释性如何帮助建立信任，确保问责制并与现实需求保持一致，从基本原理到实际用例。&lt;/em&gt; &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt; &lt;em&gt;以前，在&lt;/em&gt; &lt;em&gt;第IX部分：&lt;/em&gt; &lt;a href =“ https://dzone.com/articles/explainablece-explainable--ai-explainability-under-cunderability-under-conditions&gt;</description>
      <pubDate>Mon, 15 Sep 2025 15:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【GenAI Beyond Just LLMs】超越LLM的基因</title>
      <link>https://dzone.com/articles/genai-beyond-just-llms</link>
      <description>【&lt;h2 name=&#34;648c&#34;&gt;&lt;strong&gt;From Words to Molecules: The Expanding Frontier of GenAI&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p name=&#34;fa4a&#34;&gt;Generative AI has changed how we create, work, and even imagine. In just a few short years, tools like ChatGPT, GitHub Copilot, and DALL·E have redefined productivity across industries  —  from software development and design to education and marketing. But the innovation curve continues to steepen, and it&#39;s no longer just about generating text or images. The same technology that can draft an email or write a poem is now designing molecules and discovering new materials.&lt;/p&gt;&#xA;&lt;p name=&#34;6f53&#34;&gt;We’re entering a world where AI doesn’t just write &lt;em&gt;about&lt;/em&gt; science  —  it helps do the science. Big tech isn’t sitting this one out. OpenAI, Meta, Google DeepMind, Microsoft, and others are in a tight race, developing large-scale AI models that understand not just language and visuals, but also chemistry, biology, and physics.&lt;/p&gt;】&lt;h2 name =“ 648c”&gt; &lt;strong&gt;从单词到分子：genai的扩展边界&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p name =“ fa4a”&gt;生成型AI改变了我们的创建，工作甚至想象的方式。在短短的几年中，诸如Chatgpt，Github Copilot和Dall等工具都重新定义了整个行业的生产力 - 从软件开发，设计到教育和营销。但是创新曲线继续陡峭，这不再只是生成文本或图像。现在可以起草电子邮件或写诗的技术现在正在设计分子并发现新材料。&lt;/p&gt;&#xA;&lt;p name =“ 6f53”&gt;我们进入了一个世界，AI不仅会写&lt;em&gt;关于&lt;/em&gt; Science，还可以帮助您进行科学。 Big Tech并没有坐下来。 Openai，Meta，Google Deepmind，Microsoft等人都处于紧密的竞争中，开发了大规模的AI模型，不仅了解语言和视觉效果，还了解化学，生物学和物理学。&lt;/p&gt;</description>
      <pubDate>Mon, 15 Sep 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Benchmarking Open-Source LLMs: LLaMA vs Mistral vs Gemma — A Practical Guide for Developers Building Private Models】基准开源LLM：Llama vs Mistral vs Gemma-开发人员建立私人模型的实用指南</title>
      <link>https://dzone.com/articles/benchmarking-open-source-llama-mistral-gemma</link>
      <description>【&lt;p&gt;Large language models (LLMs) have transitioned from research labs into the everyday workflows of companies worldwide. While tools like GPT-4 and Claude often steal the spotlight, they come with restrictions such as API rate limits, opaque model behavior, and privacy concerns.&lt;/p&gt;&#xA;&lt;p&gt;This has led to the rise of open-source LLMs like Meta’s LLaMA, Mistral AI’s Mistral, and Google’s Gemma. These models allow developers to build and deploy powerful AI applications without relying on third-party APIs, offering transparency, flexibility, and cost control.&lt;/p&gt;】&lt;p&gt;大语言模型（LLMS）已从研究实验室过渡到全球公司的日常工作流程。尽管GPT-4和Claude之类的工具经常引起人们的关注，但它们具有限制，例如API率限制，不透明的模型行为和隐私问题。&lt;/p&gt;&#xA;&lt;p&gt;这导致了诸如Meta的Llama，Mistral AI的Mistral和Google的Gemma之类的开源LLM的兴起。这些模型允许开发人员在不依赖第三方API的情况下构建和部署强大的AI应用程序，提供透明度，灵活性和成本控制。&lt;/p&gt;</description>
      <pubDate>Mon, 15 Sep 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Agentic AI: The Next Evolution of Artificial Intelligence and Autonomous Automation】代理AI：人工智能和自动自动化的下一个演变</title>
      <link>https://dzone.com/articles/next-evolution-ai-autonomous-automation</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;Artificial intelligence has evolved significantly over the years. In the early days, we had pseudo-AIs like Siri and Alexa — handy tools for playing songs, setting alarms, or answering basic questions. However, their functionality was limited. They operated as reactive voice bots, only responding to direct commands without any real autonomy or initiative.&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;Then came AI-powered assistants like ChatGPT, which businesses quickly adopted for drafting emails, reports, and handling customer inquiries. A marketing team could request a campaign plan, or a support team could automate responses to common questions. While this was a step forward, these tools still required human input to function — they didn’t act on their own. Imagine an assistant that only speaks when spoken to. It executes tasks efficiently but lacks independent thought or initiative.&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt;多年来人工智能发生了显着发展。在早期，我们拥有像Siri和Alexa这样的伪AIS，即播放歌曲，设置警报或回答基本问题的方便工具。但是，它们的功能是有限的。他们作为反应性语音机器人操作，只能响应直接命令而没有任何真正的自主权或主动性。&lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;然后是诸如chatgpt这样的AI驱动助手，该公司迅速采用了起草电子邮件，报告和处理客户查询的企业。营销团队可以要求一项运动计划，或者支持团队可以自动对常见问题的回答自动化。虽然这是向前迈出的一步，但这些工具仍然需要人类的投入才能运作 - 它们并非自己行动。想象一个只在与之交谈时说话的助手。它有效地执行任务，但缺乏独立的思想或主动性。&lt;/p&gt;</description>
      <pubDate>Mon, 15 Sep 2025 12:00:07 +0000</pubDate>
    </item>
    <item>
      <title>【Tuples and Records (Part 5): Performance Challenges】元组和记录（第5部分）：绩效挑战</title>
      <link>https://dzone.com/articles/tuples-and-records-part-5</link>
      <description>【&lt;p data-end=&#34;487&#34; data-start=&#34;95&#34;&gt;After exploring Tuples and Records in Parts 1–4—covering JavaScript syntax, immutability, value-based equality, performance benefits, and React optimizations—we now examine why this ambitious proposal was ultimately &lt;strong data-end=&#34;345&#34; data-start=&#34;320&#34;&gt;withdrawn from ES2025&lt;/strong&gt;. Despite the promise of native immutable data structures, technical challenges around structural equality, memory management, and engine optimization prevented its adoption. In this part, we’ll break down the core reasons for the withdrawal, the alternatives considered, and the lessons for future JavaScript language evolution.&lt;/p&gt;&#xA;&lt;p data-end=&#34;708&#34; data-start=&#34;313&#34;&gt;The journey of the &lt;strong data-end=&#34;354&#34; data-start=&#34;332&#34;&gt;Tuples and Records&lt;/strong&gt; proposal in JavaScript represents one of the most significant withdrawals in recent ECMAScript history. After years of development and community anticipation, the proposal was officially withdrawn from the TC39 standardization process in April 2025, marking the end of an ambitious attempt to bring immutable data structures as primitives to JavaScript.&lt;/p&gt;】&lt;p data-end =“ 487” data-start =“ 95”&gt;在探索第1-4部分的元组和记录后 - 涵盖了JavaScript语法，不可分割性，基于价值的平等，绩效效益和反应优化 - 我们现在研究了为什么这个雄心勃勃的建议最终&lt;强大的数据结尾=“ 345” data-end =“ 345” data start =“ 345” data-start =“ 320”&gt; with essy20255 &lt;/scront contss20255 &lt;/scront vern vern vernss2025255 &lt;/scront nawn&gt; drawn。尽管有前景的不变数据结构，但围绕结构平等，内存管理和发动机优化的技术挑战阻止了其采用。在这一部分中，我们将分解撤回的核心原因，考虑的替代方案以及未来JavaScript语言演变的课程。&lt;/p&gt;&#xA;&lt;p data-end =“ 708” data-start =“ 313”&gt; &lt;strong data-end =“ 354” data-start =“ 332”&gt;元组和记录&lt;/strong&gt;建议&lt;/strong&gt;提案的旅程代表了最近的ECMAScript历史记录中最重要的提款之一。经过多年的发展和社区期望，该提案于2025年4月从TC39的标准化过程正式撤回，这标志着雄心勃勃的尝试将不变的数据结构作为JavaScript的原始人的雄心勃勃。&lt;/p&gt;</description>
      <pubDate>Mon, 15 Sep 2025 11:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Enhancing AI Privacy: Federated Learning and Differential Privacy in Machine Learning】增强AI隐私：联合学习和机器学习中的差异隐私</title>
      <link>https://dzone.com/articles/privacy-preserving-machine-learning-models-federat</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Privacy-preserving techniques are keeping your data safe in the age of AI. In particular, federated learning (FL) keeps data local, while differential privacy (DP) strengthens individual privacy. In this article, we will discuss challenges associated with this, practical tools, and emerging trends like secure aggregation and personalized FL for stronger privacy in AI.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;br&gt;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;隐私保护技术在AI时代确保您的数据安全。特别是，联邦学习（FL）可以保留数据本地，而差异隐私（DP）则加强了个人隐私。在本文中，我们将讨论与此，实用工具以及新兴趋势相关的挑战，例如安全汇总和个性化的FL，以在AI中获得更强的隐私。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt;简介&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt; &lt;br&gt; &lt;/p&gt;</description>
      <pubDate>Fri, 12 Sep 2025 20:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>