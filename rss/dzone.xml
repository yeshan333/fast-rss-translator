<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【11 Best Practices for Developing Secure Web Applications】11个开发安全的Web应用程序的最佳实践</title>
      <link>https://dzone.com/articles/11-best-practices-for-developing-secure-web-application</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Applications related to the web enable business, e-commerce, and user interactions to be the backbones of the e-world of a more and more digital world. In this growth, there is one thing that has gone up, and that is &lt;a href=&#34;https://dzone.com/articles/secure-coding-practices-for-web-applications&#34;&gt;web application security&lt;/a&gt;. Insecure web applications can lead to severe consequences such as data breaches and ransomware attacks, resulting in significant financial losses, legal liabilities, and reputational damage.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Given the growing sophistication of cyber threats, it&#39;s crucial for both developers and business stakeholders to prioritize security from day one. This blog outlines 11 essential best practices for web application development to help you build robust, resilient, and attack-resistant systems.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;与Web启用业务，电子商务和用户交互有关的应用程序，成为越来越多的数字世界的电子世界的骨干。在这种增长中，有一件事已经上升了，那就是&lt;a href =“ https://dzone.com/articles/secure-coding-practices-for-web-applications”&gt; Web应用程序安全性&lt;/a&gt;。不安全的Web应用程序可能会导致严重的后果，例如数据泄露和勒索软件攻击，从而造成重大财务损失，法律责任和声誉损失。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;鉴于网络威胁的越来越复杂，对于开发人员和商业利益相关者来说，从第一天开始确定安全性至关重要。该博客概述了11种Web应用程序开发的基本最佳实践，以帮助您构建强大的，弹性和抗攻击的系统。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Jul 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Best Practices for Syncing Hive Data to Apache Doris :  From Scenario Matching to Performance Tuning】将Hive数据同步到Apache Doris的最佳实践：从场景匹配到性能调整</title>
      <link>https://dzone.com/articles/syncing-hive-to-apache-doris-best-practices-performance</link>
      <description>【&lt;p name=&#34;927f&#34;&gt;In the realm of big data, Hive has long been a cornerstone for massive data warehousing and offline processing, while Apache Doris shines in real-time analytics and ad-hoc query scenarios with its robust OLAP capabilities. When enterprises aim to combine Hive’s storage prowess with Doris’s analytical agility, the challenge lies in efficiently and reliably syncing data between these two systems.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p name=&#34;927f&#34;&gt;This article provides a comprehensive guide to Hive-to-Doris data synchronization, covering use cases, technical solutions, model design, and performance optimization.&lt;/p&gt;】&lt;p name =“ 927f”&gt;在大数据领域中，Hive长期以来一直是大量数据仓库和离线处理的基石，而Apache Doris在实时分析和具有强大的OLAP功能的实时分析和临时查询方案中发挥作用。当企业旨在将Hive的存储能力与Doris的分析敏捷性相结合时，挑战在于有效，可靠地在这两个系统之间同步数据。 &lt;/p&gt;&#xA;&lt;p name =“ 927f”&gt;本文提供了有关Hive-Doris数据同步，涵盖用例，技术解决方案，模型设计和性能优化的综合指南。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Jul 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Twelve-Factor Agents: Building Production-Ready LLM Applications】十二个因素代理：建筑准备生产的LLM应用程序</title>
      <link>https://dzone.com/articles/understanding-twelve-factor-agents</link>
      <description>【&lt;p data-bubble-menu=&#34;true&#34; data-hook-type=&#34;blockHook&#34; data-pm-slice=&#34;1 1 []&#34; dir=&#34;ltr&#34;&gt;After exploring and publishing articles around observability tools and architectural patterns related to AI Agents, I came across an interesting talk by Dex Horthy on YouTube and the Twelve-Factor Agent. This article delves into the concept of the Twelve-Factor Agent, an architectural pattern designed to create robust, scalable, and maintainable applications, particularly in the context of modern cloud environments. We will explore the core principles of this approach and how they contribute to building applications that are well-suited for deployment and operation in dynamic and distributed systems.&lt;/p&gt;&#xA;&lt;p&gt;The rise of large language models (LLMs) has created unprecedented opportunities for building intelligent applications, but it has also introduced new challenges for software engineering. The Twelve-Factor Agent methodology represents a set of principles for building LLM-powered software that&#39;s reliable enough to put in the hands of production customers, drawing inspiration from the original Twelve-Factor App methodology by Heroku.&amp;nbsp;&lt;/p&gt;】&lt;p data-bubble-menu =“ true” data-hook-type =“ blockhook” data-pm-slice =“ 1 1 []“ dir =” ltr“ ltr”&gt;在探索和发布与AI代理相关的可观察性工具和建筑模式的文章之后，我遇到了Dex Horthy在YouTube和Twelleve-ftactor Ament上进行了一次有趣的演讲。本文深入研究了十二个因子代理的概念，这是一种旨在创建强大，可扩展和可维护的应用程序的建筑模式，尤其是在现代云环境的背景下。我们将探讨这种方法的核心原则，以及它们如何为在动态和分布式系统中的部署和运行非常适合构建应用程序做出贡献。&lt;/p&gt;&#xA;&lt;p&gt;大语言模型（LLM）的兴起为构建智能应用程序创造了前所未有的机会，但它也引入了软件工程的新挑战。十二个因子代理方法代表了一组用于构建LLM驱动软件的原则，该原则足够可靠，可以掌握在生产客户手中，从Heroku汲取了原始的十二个因子App方法论的灵感。 &lt;/p&gt;</description>
      <pubDate>Thu, 17 Jul 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Terraform vs Pulumi vs SST: A Tradeoffs Analysis】Terraform vs Pulumi vs SST：权衡分析</title>
      <link>https://dzone.com/articles/iac-tool-comparison-terraform-pulumi-sst</link>
      <description>【&lt;p&gt;Defining a deployment strategy is a key concern for any new software project. While Infrastructure as Code (IaC) has become the industry standard for provisioning and managing cloud infrastructure, &lt;strong&gt;choosing the best-fitting one among several viable options can be difficult.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this article, I look at three popular tools for writing infrastructure code and which one I would recommend based on the circumstances of the project. First though, let&#39;s start with some basics.&lt;/p&gt;】&lt;p&gt;定义部署策略是任何新软件项目的关键问题。尽管基础架构作为代码（IAC）已成为供应和管理云基础架构的行业标准，但&lt;strong&gt;在几种可行选择中选择最合适的一个可能很困难。&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt;在本文中，我研究了三个流行的工具，用于编写基础架构代码，并根据项目的情况推荐哪个工具。不过，首先，让我们从一些基础开始。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Jul 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Migrating Traditional Workloads From Classic Compute to Serverless Compute on Databricks】将传统的工作负载从经典计算到数据链球上的无服务器计算</title>
      <link>https://dzone.com/articles/migrate-classic-to-serverless-databricks</link>
      <description>【&lt;p&gt;This article walks us through the process of how to migrate traditional workloads using Classic Compute to Serverless Compute for efficient cluster management, cost effectiveness, better scalability and optimized performance.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;As data engineering evolves, so do the infrastructure needs of enterprise workloads. With growing demands for agility, scalability, and cost-efficiency, &lt;a href=&#34;https://dzone.com/articles/snowflake-vs-databricks-how-to-choose-the-right-data-platform&#34;&gt;&lt;strong&gt;Databricks&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; Serverless Compute&lt;/strong&gt; provides a compelling alternative to classic clusters. In this article, we explore a practical roadmap to migrate your &lt;strong&gt;pipelines and analytics workloads&lt;/strong&gt; from &lt;strong&gt;classic compute (manual clusters or job clusters)&lt;/strong&gt; to &lt;strong&gt;Databricks Serverless Compute&lt;/strong&gt;, with specific attention to data security, scheduling, costs, and operational resilience.&lt;/p&gt;】&lt;p&gt;本文通过经典的计算到无服务器的计算来迁移传统工作负载的过程，以实现有效的集群管理，成本效益，更好的可伸缩性和优化的性能。&lt;/p&gt;&#xA;&lt;H2&gt; &lt;strong&gt;概述&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt;随着数据工程的发展，企业工作负载的基础架构需求也会发展。 With growing demands for agility, scalability, and cost-efficiency, &lt;a href=&#34;https://dzone.com/articles/snowflake-vs-databricks-how-to-choose-the-right-data-platform&#34;&gt;&lt;strong&gt;Databricks&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; Serverless Compute&lt;/strong&gt; provides a compelling alternative to classic clusters.在本文中，我们探索了一个实用的路线图，以将您的&lt;strong&gt;管道和分析工作负载迁移&lt;/strong&gt;从&lt;strong&gt;经典compasute（手动群集或工作簇）&lt;/strong&gt;迁移到&lt;strong&gt; databricks compute &lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt;，并特别注意数据安全性，调度安全，成本，成本，以及操作性弹性。</description>
      <pubDate>Thu, 17 Jul 2025 15:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【AI-Powered Security for the Modern Software Supply Chain: Reinforcing Software Integrity in an Era of Autonomous Code and Expanding Risk】现代软件供应链的AI驱动安全性：在自主代码时代增强软件完整性并扩大风险</title>
      <link>https://dzone.com/articles/ai-powered-security-modern-software-supply-chain</link>
      <description>【&lt;p style=&#34;font-size: 17px;&#34;&gt;&lt;em&gt;Editor&#39;s Note: The following is an article written for and published in DZone&#39;s 2025 Trend Report,&amp;nbsp;&lt;/em&gt;&lt;a href=&#34;https://dzone.com/link/2025-tr-security-contributor-article&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Software Supply Chain Security: Enhancing Trust and Resilience Across the Software Development Lifecycle&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;In today&#39;s software landscape, the supply chain has grown from a controlled pipeline to a vast, interconnected ecosystem. Modern development relies heavily on third-party dependencies, open-source components, distributed CI/CD pipelines, and ephemeral cloud-native environments. While this fosters rapid innovation, it also amplifies risk exposure. High-profile breaches like SolarWinds and Log4Shell revealed how a single weak link can cascade across thousands of organizations.&lt;/p&gt;】&lt;p style =“ font-size：17px;”&gt; &lt;em&gt;编辑注：以下是为Dzone的2025年2025年趋势报告编写并发表的文章，&lt;/em&gt; &lt;a href =“ https://dzone.com/link/link/link/link/2025-security-contribity-contributor-contributor-artilecutor-article- sepusence”增强软件开发生命周期的信任和韧性&lt;/em&gt; &lt;/a&gt; &lt;em&gt;。&lt;/em&gt; &lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p dir =“ ltr”&gt;在当今的软件景观中，供应链已从受控管道发展到庞大的相互联系的生态系统。现代发展在很大程度上依赖于第三方依赖性，开源组件，分布式CI/CD管道和短暂的云原生环境。尽管这促进了快速的创新，但它也扩大了风险风险。诸如Solarwinds和Log4shell之类的备受瞩目的漏洞揭示了一个单个薄弱环节如何在成千上万的组织中级联。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Jul 2025 12:30:01 +0000</pubDate>
    </item>
    <item>
      <title>【How Hackers Exploit Spring Core Vulnerability in 2025: Proactive Measures to Detect Emerging Cyber Threats】黑客如何利用2025年的春核脆弱性：检测新兴网络威胁的积极措施</title>
      <link>https://dzone.com/articles/springshell-spring-core-honeypot-threat-detection</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;API management has emerged as a critical and strategic factor in staying ahead of the market leaders. However, digital transformation has significant disadvantages, such as opening the door to hackers.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;Hackers have been quick to take advantage of a serious flaw in Spring Core, commonly known as SpringShell or Spring4Shell among security experts. The cybercriminal sends a specially created query to the Spring Core framework&#39;s web application server.&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt; API管理已成为保持在市场领导者领先的关键和战略因素。但是，数字化转型具有明显的缺点，例如向黑客打开大门。 &lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;黑客很快就可以利用弹簧核的严重缺陷，在安全专家中通常称为Springshell或Spring4shell。网络犯罪分子将特殊创建的查询发送到Spring Core Framework的Web应用程序服务器。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Jul 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Rapid AWS Prototyping With LocalStack: A Developer’s Guide to Building AWS PoCs Locally】Rapid AWS与LocalStack的原型设计：当地建造AWS POC的开发人员指南</title>
      <link>https://dzone.com/articles/build-serverless-poc-using-localstack</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/part-i-overview-of-infrastructure-as-code-iac-tool&#34;&gt;Proof of Concepts&lt;/a&gt; (PoCs) play a critical role in modern software development. They allow engineers and architects to validate technical assumptions, test integrations, and explore new ideas quickly and with minimal investment. When working with Amazon Web Services (AWS), however, even simple experimentation often requires deploying cloud infrastructure. This can be time-consuming, costly, and constrained by organizational permissions.&lt;/p&gt;&#xA;&lt;p&gt;Enter LocalStack — a fully functional AWS cloud emulator that enables developers to simulate AWS services entirely on their local machines. By replicating AWS APIs and service behavior, LocalStack empowers teams to build and iterate faster without depending on live cloud environments.&lt;/p&gt;】&lt;p&gt; &lt;a href =“ https://dzone.com/articles/part-i-overview-ob-infrastructure-as-code-iac-tool”&gt;概念证明&lt;/a&gt;（POCS）在现代软件开发中起着至关重要的作用。它们允许工程师和建筑师验证技术假设，测试集成并通过最少的投资快速而探索新的想法。但是，在使用Amazon Web Services（AWS）时，即使是简单的实验也通常需要部署云基础架构。这可能是耗时，昂贵且受组织权限的约束。&lt;/p&gt;&#xA;&lt;p&gt;输入LocalStack  - 功能齐全的AWS云模拟器，使开发人员能够在本地机器上完全模拟AWS服务。通过复制AWS API和服务行为，LocalStack赋予团队的构建和迭代速度，而无需依赖实时云环境。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Jul 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Simplifying Code Migration: The Benefits of the New Ampere Porting Advisor for x86 to Arm64】简化代码迁移：X86的新安培移植顾问的好处对ARM64</title>
      <link>https://dzone.com/articles/code-migration-ampere-porting-advisor</link>
      <description>【&lt;p&gt;The demand for efficient software porting solutions is increasing. With the transition from legacy x86 to Arm64 — and particularly Ampere processors — gaining momentum, developers are looking for ways to expedite the migration of existing codebases. The Ampere Porting Advisor, available via &lt;a href=&#34;https://github.com/AmpereComputing/ampere-porting-advisor&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Github&#39;s page&lt;/a&gt;, is intended to assist with this process.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;The tool provides a streamlined migration process, allowing developers to save time and effort. It automates many of the manual steps involved in porting code, reducing the risk of errors, and ensuring consistency throughout the migration. By analyzing the source code, the advisor provides detailed insights into the required changes, highlights potential pitfalls, and recommends optimal modifications. This guidance enables developers to navigate the intricacies of transitioning between architectures more efficiently, and accelerates the overall migration process.&lt;/p&gt;】&lt;p&gt;对高效软件移植解决方案的需求正在增加。随着从传统X86到ARM64（尤其是安培处理器）的过渡，开发人员正在寻找加快现有代码库迁移的方法。通过&lt;a href =“ https://github.com/amperecomputing/ampere-porting-advisor“ rel =“ noopener noreferrer” target =“ _ black”&gt; github的页面&lt;/a&gt;），Ampere Porting顾问可通过&lt;a href =“ https://github.com/amperecomputing/ampere-porting-advisor”获得。 &lt;/p&gt;&#xA;&lt;p&gt;该工具提供了简化的迁移过程，使开发人员可以节省时间和精力。它可以自动化涉及移植代码的许多手动步骤，降低错误的风险，并确保整个迁移过程中的一致性。通过分析源代码，顾问提供了对所需更改的详细见解，突出了潜在的陷阱，并建议进行最佳修改。该指南使开发人员能够更有效地导航架构之间的过渡，并加速整体迁移过程。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Jul 2025 12:05:41 +0000</pubDate>
    </item>
    <item>
      <title>【The Underrated Hero of UI Testing: Why Screenshot Testing Matters】UI测试的被低估英雄：为什么屏幕截图测试很重要</title>
      <link>https://dzone.com/articles/screenshot-testing-android-paparazzi</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;As an Android engineer with years of experience, including six dedicated to screenshot testing, I’ve seen firsthand how this often-overlooked testing strategy can save teams from major headaches. While unit and integration tests dominate conversations about code quality, screenshot testing quietly stands out as a game-changer – especially for apps with complex design systems, multiple localizations, and countless UI states.&lt;/p&gt;&#xA;&lt;p&gt;Despite its niche popularity, screenshot testing is one of the most efficient ways to catch visual regressions early. In this article, I&#39;ll explore why every &lt;a href=&#34;https://dzone.com/refcardz/android-application&#34;&gt;Android&lt;/a&gt; project should integrate screenshot testing into its &lt;a href=&#34;https://dzone.com/articles/everything-you-need-to-know-about-cicd-pipeline-pa&#34;&gt;CI/CD pipeline&lt;/a&gt; and why Paparazzi currently stands out as the most effective tool.&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt;作为具有多年经验的Android工程师，其中包括六项专门用于屏幕截图测试的经验，我亲眼目睹了这种经常被忽视的测试策略如何可以从主要头痛中节省团队。虽然单位和集成测试主导了有关代码质量的对话，但屏幕截图测试悄悄地以改变游戏规则的方式脱颖而出 - 尤其是对于具有复杂设计系统，多个本地化和无数UI状态的应用程序。&lt;/p&gt;&#xA;&lt;p&gt;尽管有很广泛的知名度，但屏幕截图测试还是尽早捕获视觉回归的最有效方法之一。在本文中，我将探讨为什么每个&lt;a href =“ https://dzone.com/refcardz/android-application”&gt; android &lt;/a&gt;项目应将屏幕截图测试集成到其&lt;a href =“以及为什么狗仔队目前是最有效的工具。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Jul 2025 17:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>