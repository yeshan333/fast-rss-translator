<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Open Source .NET Aspire and Dapr: What Are They and How Do They Complement Each Other For Distributed Apps?】开源 .NET Aspire 和 Dapr：它们是什么以及它们如何在分布式应用程序中相互补充？</title>
      <link>https://dzone.com/articles/open-source-net-aspire-and-dapr-what-are-they</link>
      <description>【&lt;p&gt;Over the last weeks, I&#39;ve seen many questions from the .NET community on how .NET Aspire compares to Dapr, the Distributed Application Runtime. Some say the features appear to be very similar and think Aspire is a replacement for Dapr (which it isn’t). The TL;DR is: .NET Aspire is a set of tools for local development, while Dapr is a runtime offering building block APIs and is used during local development and running in production. This article covers both .NET Aspire and Dapr, the problems they solve, their differences, and why .NET developers should use them together when building distributed applications that can run on any cloud.&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;What Problem Does .NET Aspire Solve?&lt;/h2&gt;&#xA;&lt;p&gt;.NET Aspire was created to solve a problem that many distributed application developers face: running and debugging multiple cloud native apps locally. .NET developers can now use a language they understand well, C#, to configure their microservices and infrastructure dependencies, such as state stores and message brokers. Developers can run and debug their .NET applications using Visual Studio or VS Code with the C# Dev Kit extension.&lt;/p&gt;】&lt;p&gt;在过去的几周里，我看到了来自 .NET 社区的许多关于 .NET Aspire 与分布式应用程序运行时 Dapr 的比较的问题。有人说这些功能看起来非常相似，并认为 Aspire 是 Dapr 的替代品（事实并非如此）。 TL;DR 是：.NET Aspire 是一套用于本地开发的工具，而 Dapr 是一个提供构建块 API 的运行时，在本地开发和生产中运行期间使用。本文介绍了 .NET Aspire 和 Dapr、它们解决的问题、它们的差异，以及为什么 .NET 开发人员在构建可以在任何云上运行的分布式应用程序时应该一起使用它们。 &lt;/p&gt;&#xA;&lt;h2&gt;.NET Aspire 解决了什么问题？&lt;/h2&gt;&#xA;&lt;p&gt;.NET Aspire 的创建是为了解决许多分布式应用程序开发人员面临的问题：在本地运行和调试多个云原生应用程序。 .NET 开发人员现在可以使用他们熟悉的语言 C# 来配置其微服务和基础设施依赖项，例如状态存储和消息代理。开发人员可以使用 Visual Studio 或 VS Code 以及 C# Dev Kit 扩展来运行和调试其 .NET 应用程序。&lt;/p&gt;</description>
      <pubDate>Fri, 20 Sep 2024 16:15:05 +0000</pubDate>
    </item>
    <item>
      <title>【Decoding LLM Parameters, Part 1: Temperature】解码 LLM 参数，第 1 部分：温度</title>
      <link>https://dzone.com/articles/decoding-llm-parameters-temperature</link>
      <description>【&lt;h2&gt;LLM Parameters&lt;/h2&gt;&#xA;&lt;p&gt;Like any &lt;a href=&#34;https://dzone.com/refcardz/machine-learning-predictive&#34;&gt;machine learning&lt;/a&gt; model, &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-large-language-models&#34;&gt;large language models&lt;/a&gt; have various parameters that control the variance of the generated text output. We have started a multi-part series to explain the impact of these parameters in detail. We will conclude by striking the perfect balance in content generation using all of these parameters discussed in our multi-part series.&lt;/p&gt;&#xA;&lt;p&gt;Welcome to the first part, where we discuss the most well-known parameter, &#34;Temperature.&#34;&lt;/p&gt;】&lt;h2&gt;法学硕士参数&lt;/h2&gt;&#xA;&lt;p&gt;与任何&lt;a href=&#34;https://dzone.com/refcardz/machine-learning-predictive&#34;&gt;机器学习&lt;/a&gt;模型一样，&lt;a href=&#34;https://dzone.com/refcardz/ Getting-started-with-large-language-models&#34;&gt;大型语言模型&lt;/a&gt;具有各种参数来控制生成的文本输出的方差。我们已经开始了一个由多部分组成的系列来详细解释这些参数的影响。最后，我们将使用我们的多部分系列中讨论的所有这些参数来实现内容生成的完美平衡。&lt;/p&gt;&#xA;&lt;p&gt;欢迎来到第一部分，我们将讨论最著名的参数“温度”。&lt;/p&gt;</description>
      <pubDate>Fri, 20 Sep 2024 18:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【New Era of Cloud 2.0 Computing: Go Serverless!】云2.0计算新时代：走向无服务器！</title>
      <link>https://dzone.com/articles/new-era-of-cloud-20-computing-go-serverless</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/step-into-serverless-computing&#34;&gt;Serverless computing&lt;/a&gt; is one of the fastest-changing landscapes in cloud technology and has often been termed the next big revolution in Cloud 2.0. In the &lt;a href=&#34;https://dzone.com/articles/learn-digital-transformation-with-coding-over-cock&#34;&gt;digital transformation journeys&lt;/a&gt; of every organization, serverless is finding a place as a key enabler by letting companies offload the business of infrastructure management and focus on core application development.&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;About Serverless Architecture&lt;/h2&gt;&#xA;&lt;p&gt;Applications on a serverless architecture would be &lt;a href=&#34;https://dzone.com/articles/event-driven-architecture-as-a-strategy&#34;&gt;event-driven&lt;/a&gt;, meaning that functions are only invoked on particular events, like HTTP requests, database updates, and messages ingress. That not only simplifies the development process but increases operational efficiency because developers would have to focus only on writing and deploying code, instead of fiddling with the management of servers.&lt;/p&gt;】&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/step-into-serverless-computing&#34;&gt;无服务器计算&lt;/a&gt;是云技术中变化最快的领域之一，通常被称为“无服务器计算”。云 2.0 的下一次重大革命。在每个组织的&lt;a href=&#34;https://dzone.com/articles/learn-digital-transformation-with-coding-over-cock&#34;&gt;数字化转型之旅&lt;/a&gt;中，无服务器正在作为一种解决方案找到一席之地。关键推动因素是让公司摆脱基础设施管理业务并专注于核心应用程序开发。 &lt;/p&gt;&#xA;&lt;h2&gt;关于无服务器架构&lt;/h2&gt;&#xA;&lt;p&gt;无服务器架构上的应用程序将是&lt;a href=&#34;https://dzone.com/articles/event-driven-architecture-as-a-strategy&#34;&gt;事件驱动的&lt;/a&gt;，这意味着函数是仅在特定事件上调用，例如 HTTP 请求、数据库更新和消息入口。这不仅简化了开发流程，还提高了运营效率，因为开发人员只需专注于编写和部署代码，而不必费心去管理服务器。&lt;/p&gt;</description>
      <pubDate>Fri, 20 Sep 2024 20:00:07 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering the Art of Data Engineering to Support Billion-Dollar Tech Ecosystems】掌握数据工程的艺术以支持价值数十亿美元的技术生态系统</title>
      <link>https://dzone.com/articles/mastering-the-art-of-data-engineering</link>
      <description>【&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;Data reigns supreme as the currency of innovation, and it is a valuable one at that. In the multifaceted world of technology, mastering the art of &lt;a href=&#34;https://dzone.com/articles/how-to-become-a-data-engineer-a-hype-profession-or&#34;&gt;data engineering&lt;/a&gt; has become crucial for supporting billion-dollar tech ecosystems. This sophisticated craft involves creating and maintaining data infrastructures capable of handling vast amounts of information with high reliability and efficiency.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;As companies push the boundaries of innovation, the role of data engineers has never been more critical. Specialists design systems that certify seamless data flow, optimize performance, and provide the backbone for applications and services that millions of people use.&amp;nbsp;&lt;/p&gt;】&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;数据作为创新的货币占据着至高无上的地位，而且它是一种有价值的货币。在多方面的技术世界中，掌握&lt;a href=&#34;https://dzone.com/articles/how-to-become-a-data-engineer-a-hype-profession-or&#34;&gt;数据工程&lt; /a&gt; 已成为支持价值数十亿美元的科技生态系统的关键。这种复杂的技术涉及创建和维护能够以高可靠性和高效率处理大量信息的数据基础设施。 &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;随着公司不断突破创新界限，数据工程师的作用从未如此重要。专家设计的系统可验证无缝数据流、优化性能并为数百万人使用的应用程序和服务提供骨干。 &lt;/p&gt;</description>
      <pubDate>Fri, 20 Sep 2024 21:00:07 +0000</pubDate>
    </item>
    <item>
      <title>【Demystifying Service-Oriented Architecture】揭秘面向服务的架构</title>
      <link>https://dzone.com/articles/demystifying-service-oriented-architecture</link>
      <description>【&lt;p&gt;In the ever-changing world of software, one term that keeps popping up is Service-Oriented Architecture (SOA). It might sound complex, but fear not! This article aims to be your friendly guide, explaining SOA in plain English for beginners and offering valuable insights for seasoned professionals.&lt;/p&gt;&#xA;&lt;h2&gt;Understanding Service-Oriented Architecture&lt;/h2&gt;&#xA;&lt;p&gt;At its core, SOA is a method of designing and building software by breaking it into smaller, independent parts. We call these parts &#34;services.&#34; Each service does a specific job and talks to others through a well-defined language.&lt;/p&gt;】&lt;p&gt;在不断变化的软件世界中，不断出现的一个术语是面向服务的架构 (SOA)。这听起来可能很复杂，但不要害怕！本文旨在成为您的友好指南，用简单的英语向初学者解释 SOA，并为经验丰富的专业人士提供宝贵的见解。&lt;/p&gt;&#xA;&lt;h2&gt;了解面向服务的架构&lt;/h2&gt;&#xA;&lt;p&gt;SOA 的核心是一种通过将软件分解为更小的独立部分来设计和构建软件的方法。我们将这些部分称为“服务”。每项服务都执行特定的工作，并通过明确定义的语言与其他服务进行交互。&lt;/p&gt;</description>
      <pubDate>Fri, 20 Sep 2024 19:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Navigating the Regulatory Maze: Simplifying Data Compliance】穿越监管迷宫：简化数据合规性</title>
      <link>https://dzone.com/articles/simplifying-data-compliance</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In an era of increasingly complex regulatory landscapes, IT professionals face unprecedented challenges in &lt;a href=&#34;https://dzone.com/articles/achieving-continuous-compliance&#34;&gt;managing data compliance&lt;/a&gt;. The evolving nature of regulations across various industries demands a proactive and sophisticated approach to &lt;a href=&#34;https://dzone.com/articles/data-management-in-complex-systems&#34;&gt;data management&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;I spoke with &lt;a href=&#34;https://www.linkedin.com/in/steve-leeper-0102505/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Steve Leeper&lt;/a&gt;, VP of Product Marketing at Datadobi, to learn how StorageMAP 7.0 addresses these critical issues and simplifies compliance management for developers, engineers, and architects.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;在监管环境日益复杂的时代，IT 专业人员在&lt;a href=&#34;https://dzone.com/articles/achieving-continuous-compliance&#34;&gt;管理数据合规性方面面临着前所未有的挑战&lt;/一个&gt;。各个行业的法规不断变化，需要采用积极主动且复杂的方法来进行&lt;a href=&#34;https://dzone.com/articles/data-management-in-complex-systems&#34;&gt;数据管理&lt;/a&gt;。&lt;/ p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;我与&lt;a href=&#34;https://www.linkedin.com/in/steve-leeper-0102505/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;史蒂夫·利珀&lt; /a&gt;，Datadobi 产品营销副总裁，了解 StorageMAP 7.0 如何解决这些关键问题并简化开发人员、工程师和架构师的合规性管理。&lt;/p&gt;</description>
      <pubDate>Fri, 20 Sep 2024 17:00:10 +0000</pubDate>
    </item>
    <item>
      <title>【How Machine Learning and AI are Transforming Healthcare Diagnostics in Mobile Apps】机器学习和人工智能如何改变移动应用程序中的医疗诊断</title>
      <link>https://dzone.com/articles/ml-and-ai-in-healthcare-mobile-apps</link>
      <description>【&lt;p&gt;Healthcare has long been a data-intensive domain, and today, the integration of artificial intelligence and &lt;a href=&#34;https://dzone.com/refcardz/machine-learning-predictive&#34;&gt;machine learning&lt;/a&gt; is opening new frontiers, especially in the field of diagnostics. As developers, we&#39;re at the forefront of this transformation, building mobile applications that help both patients and healthcare professionals make better decisions, faster. From improving diagnostic accuracy to speeding up early disease detection, AI-powered mobile apps are becoming indispensable tools in modern healthcare.&lt;/p&gt;&#xA;&lt;p&gt;In this article, we’ll explore how AI is being integrated into healthcare apps to provide diagnostic tools and assist in early disease detection, along with a few technical insights from a developer&#39;s perspective.&lt;/p&gt;】&lt;p&gt;医疗保健长期以来一直是一个数据密集型领域，如今，人工智能和&lt;a href=&#34;https://dzone.com/refcardz/machine-learning-predictive&#34;&gt;机器学习&lt;/a&gt;的集成正在开辟新的领域，特别是在诊断领域。作为开发人员，我们处于这一转型的最前沿，构建移动应用程序来帮助患者和医疗保健专业人员更快地做出更好的决策。从提高诊断准确性到加快早期疾病检测，人工智能驱动的移动应用程序正在成为现代医疗保健中不可或缺的工具。&lt;/p&gt;&#xA;&lt;p&gt;在本文中，我们将探讨如何将人工智能集成到医疗保健应用中，以提供诊断工具并协助早期疾病检测，并从开发人员的角度提供一些技术见解。&lt;/p&gt;</description>
      <pubDate>Thu, 19 Sep 2024 17:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Refining Your JavaScript Code: 10 Critical Mistakes to Sidestep】优化你的 JavaScript 代码：避免犯的 10 个严重错误</title>
      <link>https://dzone.com/articles/javascript-10-critical-mistakes-to-sidestep</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/javascript-frameworks-past-present-and-future&#34;&gt;JavaScript,&lt;/a&gt; the backbone of modern web development, is a powerful and versatile language. JavaScript&#39;s flexibility and dynamic nature make it both a blessing and a curse for new developers. While it allows for rapid development and creativity, it also has quirks that can trip up the uninitiated. By familiarizing yourself with these common mistakes, you&#39;ll be better equipped to write &lt;a href=&#34;https://dzone.com/articles/clean-code-tips&#34;&gt;clean&lt;/a&gt;, efficient, and &lt;a href=&#34;https://dzone.com/articles/along-came-a-bug&#34;&gt;bug&lt;/a&gt;-free code.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Mistake 1: Not Declaring Variables Properly&lt;/h2&gt;&#xA;&lt;h3 dir=&#34;ltr&#34;&gt;&lt;strong&gt;The Problem&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;One of the most common mistakes beginners make is not properly declaring variables. JavaScript allows you to declare variables using &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;const&lt;/code&gt;. Failing to declare a variable properly can lead to unexpected behavior and hard-to-track bugs.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/javascript-frameworks-past-present-and-future&#34;&gt;JavaScript 是现代 Web 开发的支柱，一种强大且多功能的语言。 JavaScript 的灵活性和动态特性对于新开发人员来说既是福也是祸。虽然它允许快速开发和创造力，但它也有一些怪癖，可能会给外行带来麻烦。通过熟悉这些常见错误，您将能够更好地编写&lt;a href=&#34;https://dzone.com/articles/clean-code-tips&#34;&gt;干净&lt;/a&gt;、高效且&lt;a href =&#34;https://dzone.com/articles/along-came-a-bug&#34;&gt;无错误&lt;/a&gt;代码。&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;错误 1：没有正确声明变量&lt;/h2&gt;&#xA;&lt;h3 dir=&#34;ltr&#34;&gt;&lt;strong&gt;问题&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;初学者最常犯的错误之一是没有正确声明变量。 JavaScript 允许您使用 &lt;code&gt;var&lt;/code&gt;、&lt;code&gt;let&lt;/code&gt; 或 &lt;code&gt;const&lt;/code&gt; 声明变量。未能正确声明变量可能会导致意外行为和难以跟踪的错误。&lt;/p&gt;</description>
      <pubDate>Thu, 19 Sep 2024 19:30:06 +0000</pubDate>
    </item>
    <item>
      <title>【How To Handle a Crisis in a Software Project and Solve Disaster】如何处理软件项目危机并化解灾难</title>
      <link>https://dzone.com/articles/how-to-handle-a-crisis-in-a-software-project</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Crises are part of life. When it comes to software development, crises are not a matter of &#34;if,&#34; but &#34;when,&#34; so you always have to be prepared for such situations.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Imagine this scenario: Everything seems to be going well with your mobile app development project. Suddenly, the &lt;a href=&#34;https://dzone.com/articles/levelling-up-the-non-technical-skills-every-aspiri&#34;&gt;senior developer&lt;/a&gt; has to leave the project due to force majeure, and only the junior developers are left to lead the project. The delivery deadline is very close and the client is anxious. What to do?&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;危机是生活的一部分。对于软件开发来说，危机不是“如果”的问题，而是“何时”的问题，因此您必须始终为此类情况做好准备。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;想象一下这个场景：您的移动应用开发项目似乎一切进展顺利。突然，&lt;a href=&#34;https://dzone.com/articles/levelling-up-the-non-technical-skills-every-aspiri&#34;&gt;高级开发人员&lt;/a&gt;因不可抗力而不得不离开项目，只剩下初级开发人员来领导该项目。交货期限已经临近，客户焦急万分。该怎么办？&lt;/p&gt;</description>
      <pubDate>Thu, 19 Sep 2024 18:00:06 +0000</pubDate>
    </item>
    <item>
      <title>【Observability With eBPF】eBPF 的可观察性</title>
      <link>https://dzone.com/articles/observability-with-ebpf</link>
      <description>【&lt;p data-sourcepos=&#34;5:1-5:36&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/A-Gentle-Intro-to-eBPF&#34;&gt;eBPF&lt;/a&gt; is a groundbreaking technology that allows you to run sandboxed programs within the Linux kernel. This provides a safe and efficient way to extend the kernel&#39;s capabilities without modifying its source code.&lt;/p&gt;&#xA;&lt;h2 data-sourcepos=&#34;7:1-7:12&#34;&gt;High-Level Overview&lt;/h2&gt;&#xA;&lt;p data-sourcepos=&#34;7:1-7:12&#34;&gt;Below is an overview of the stack:&lt;/p&gt;】&lt;p data-sourcepos=&#34;5:1-5:36&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/A-Gentle-Intro-to-eBPF&#34;&gt;eBPF&lt;/a&gt; 是一个突破性的允许您在 Linux 内核中运行沙盒程序的技术。这提供了一种安全有效的方法来扩展内核的功能，而无需修改其源代码。&lt;/p&gt;&#xA;&lt;h2 data-sourcepos=&#34;7:1-7:12&#34;&gt;高级概述&lt;/h2&gt;&#xA;&lt;p data-sourcepos=&#34;7:1-7:12&#34;&gt;下面是堆栈的概述：&lt;/p&gt;</description>
      <pubDate>Thu, 19 Sep 2024 21:00:06 +0000</pubDate>
    </item>
  </channel>
</rss>