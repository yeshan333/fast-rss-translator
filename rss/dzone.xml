<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Segmentation Violation and How Rust Helps Overcome It】分割违规以及生锈如何帮助克服它</title>
      <link>https://dzone.com/articles/segmentation-violation-rust-solution</link>
      <description>【&lt;p&gt;Segmentation faults are a common issue when working in low-level programming languages like C. These faults occur when a program attempts to access memory it’s not supposed to, leading to crashes and unpredictable behavior. While C offers granular control over memory management, it leaves developers responsible for ensuring safety, often resulting in bugs such as buffer overflows, use-after-free errors, and dangling pointers.&lt;/p&gt;&#xA;&lt;p&gt;Enter &lt;a href=&#34;https://dzone.com/articles/rust-programming-language-a-beginners-guide&#34;&gt;Rust&lt;/a&gt;, a systems programming language designed to address these issues with its built-in safety mechanisms. Rust prevents segmentation faults and other memory-related errors through its ownership system, borrow checker, and strict type and lifetime guarantees — all features enforced at compile time. This article will compare C&#39;s approach to segmentation faults with Rust&#39;s implementation and explain &lt;strong&gt;why Rust significantly reduces memory-related bugs&lt;/strong&gt;.&lt;/p&gt;】&lt;p&gt;细分故障是一个常见的问题。当程序试图访问不应该访问内存时，这些故障就会发生。这些故障发生，导致崩溃和无法预测的行为。尽管C提供了对内存管理的颗粒状控制，但它使开发人员负责确保安全，通常会导致诸如缓冲区溢出，无使用后的错误和悬空指示等错误。&lt;/p&gt;&#xA;&lt;p&gt;输入&lt;a href =“ https://dzone.com/articles/rust-programming-language-a-beginners-guide”&gt; Rust &lt;/a&gt;，一种系统编程语言，旨在通过其内置的安全机制解决这些问题。 RUST通过其所有权系统，借用检查器以及严格的类型和终身保证来防止细分故障和其他与内存相关的错误 - 所有功能在编译时都执行。本文将将C的细分故障方法与Rust的实现进行比较，并解释为什么Rust显着减少了与内存有关的错误&lt;/strong&gt;。&lt;/p&gt;。</description>
      <pubDate>Tue, 06 May 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【It’s Not About Control — It’s About Collaboration Between Architecture and Security】这与控制无关 - 它是关于建筑与安全之间的协作</title>
      <link>https://dzone.com/articles/collaboration-between-architecture-and-security</link>
      <description>【&lt;p data-end=&#34;601&#34; data-start=&#34;141&#34; style=&#34;text-align: left;&#34;&gt;In the day-to-day operations of companies, solution architecture and information security are two areas that inevitably intersect. Both play a key role in building robust, scalable, and reliable technology environments. However, one question lingers — though rarely openly discussed: what should the relationship between these two areas look like? Should architecture report to security? Or the other way around? Or should each follow its own path independently?&lt;/p&gt;&#xA;&lt;p data-end=&#34;1013&#34; data-start=&#34;603&#34; style=&#34;text-align: left;&#34;&gt;This reflection is not just theoretical. It directly impacts decision-making, the success of strategic projects, and even the digital maturity of organizations.&amp;nbsp;&lt;/p&gt;】&lt;p data-end =“ 601” data-start =“ 141”样式=“ text-align：left;”&gt;在公司的日常运营中，解决方案架构和信息安全性是不可避免地相交的两个领域。两者在建立强大，可扩展和可靠的技术环境中起着关键作用。但是，一个问题流连忘返 - 尽管很少公开讨论：这两个领域之间的关系应该是什么样的？建筑应该向安全报告吗？还是另一方面？还是每个人都应该独立遵循自己的道路？&lt;/p&gt;&#xA;&lt;p data-end =“ 1013” data-start =“ 603”样式=“ text-align：left;”&gt;这种反射不仅是理论上的。它直接影响决策，战略项目的成功，甚至组织的数字成熟度。 &lt;/p&gt;</description>
      <pubDate>Tue, 06 May 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【A Guide to Developing Large Language Models Part 1: Pretraining】开发大型语言模型的指南第1部分：预处理</title>
      <link>https://dzone.com/articles/guide-to-developing-llms-pretraining</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;Recently, I came across a fascinating &lt;a href=&#34;https://www.youtube.com/watch?v=9vM4p9NN0Ts&amp;amp;ab_channel=StanfordOnline&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;lecture&lt;/a&gt; by Yann Dubois in Stanford’s CS229: Machine learning course. The lecture offered an overview of how large language models (LLMs) like ChatGPT are built, covering both the fundamental principles and the practical considerations. I decided to write this article to share the key takeaways with a wider audience.&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;The five main components of LLM development are:&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt;最近，我遇到了一个有趣的&lt;a href =“ https：//www.youtube.com/watch?v=9vm4p9nn0ts&amp;ab_channel = stanelt = stanell = stanfordonline” CS229：机器学习课程。演讲提供了概述，概述了诸如Chatgpt之类的大型语言模型（LLM），涵盖了基本原则和实际考虑。我决定写这篇文章，与更广泛的受众分享关键的收获。&lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt; llm开发的五个主要组成部分是：&lt;/p&gt;</description>
      <pubDate>Tue, 06 May 2025 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Beyond Linguistics: Real-Time Domain Event Mapping with WebSocket and Spring Boot】超越语言学：实时域事件与Websocket和Spring Boot映射</title>
      <link>https://dzone.com/articles/domain-event-mapping-bridge-websocket-spring-boot</link>
      <description>【&lt;p&gt;By &lt;a href=&#34;http://a%20markup%20language%20is%20a%20system%20used%20for%20annotating%20a%20document%20in%20a%20way%20that%20is%20syntactically%20distinguishable%20from%20the%20text&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;definition&lt;/a&gt;, &lt;em&gt;a&amp;nbsp;&lt;/em&gt;&lt;a href=&#34;https://dzone.com/articles/programming-languages-1&#34;&gt;&lt;em&gt;markup language&lt;/em&gt;&lt;/a&gt;&lt;em&gt;&amp;nbsp;is a system used for annotating a document in a way that is syntactically distinguishable from the text. Essentially, it provides a way to structure and format text using tags or symbols that are embedded within the content. Markup languages are used to define elements within a document, such as headings, paragraphs, lists, links, and images&lt;/em&gt;. &lt;strong&gt;H&lt;/strong&gt;ype &lt;strong&gt;T&lt;/strong&gt;ext &lt;strong&gt;M&lt;/strong&gt;arkup &lt;strong&gt;L&lt;/strong&gt;anguage (HTML) is the most common of them. There are many other such as XML, SGML, Markdown, MathML, BBCode, to name a few.&lt;/p&gt;&#xA;&lt;p&gt;This article articulates the need of and presents a minimally working version to what the term “domain markup event mapping” is conferred. Lest an unfamiliar terminology introduced abruptly make the audience assume otherwise, let us illustrate the experience as a real-time commentary of an event, say a cricket match on popular online news media. ESPN, Yahoo cricket, Cricbuzz.com, Star Sports, and BBC are among the top players in this area. I remember how they used to be 15 years ago and and now, they&#39;ve evolved to cater real-time updates. With advanced backend systems, communication protocols, better design approach and of course, modern browser technologies, they have always been on the top to provide their users the best intuitive updates compensating the absence of audio and video. &amp;nbsp;&lt;/p&gt;】&lt;p&gt; &lt;p&gt; &lt;a href =“ http：// a％20markup％20语言％20IS％​​20A％20SyStem％20sy％20SUSE％20％20 for％20 inter％20A％20A％20A％20 Document; target =“ _ black”&gt;定义&lt;/a&gt;，&lt;em&gt; a &lt;/em&gt; &lt;a href =“ https://dzone.com/articles/articles/programpommming-languages-1”&gt; &lt;em&gt; &lt;em&gt; markup语言&lt;/em&gt; &lt;/a&gt; &lt;em&gt; &lt;em&gt;是一种用于以一种可与文本区分的文档进行注释的系统。从本质上讲，它提供了一种使用嵌入内容中的标签或符号来构造和格式文本的方法。标记语言用于定义文档中的元素，例如标题，段落，列表，链接和图像&lt;/em&gt;。 &lt;strong&gt; h &lt;/strong&gt; ype &lt;strong&gt; t &lt;/strong&gt; ext &lt;strong&gt; m &lt;/strong&gt; arkup &lt;strong&gt; l &lt;/strong&gt; and厌恶（html）是其中最常见的。还有许多其他，例如XML，SGML，Markdown，MathMl，Bbcode，命名一些。&lt;/p&gt;&#xA;&lt;p&gt;本文阐明了对“域标记事件映射”一词的最小工作版本的阐述。借到突然引入的一个陌生术语使观众否则假设，让我们将这种体验作为活动的实时评论说明，说是在流行的在线新闻媒体上的板球比赛。 ESPN，Yahoo板球，Cricbuzz.com，Star Sports和BBC是该领域的顶级球员。我记得他们以前是15年前的情况，现在，它们已经发展为迎合实时更新。借助高级后端系统，通信协议，更好的设计方法，当然还有现代的浏览器技术，它们一直处于首位，为用户提供最佳直观更新，以补偿缺少音频和视频的最佳更新。  &lt;/p&gt;</description>
      <pubDate>Tue, 06 May 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Hybrid Cloud vs Multi-Cloud: Choosing the Right Strategy for AI Scalability and Security】混合云与多云：为AI可扩展性和安全性选择正确的策略</title>
      <link>https://dzone.com/articles/hybrid-cloud-vs-multi-cloud</link>
      <description>【&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;As enterprises accelerate AI adoption, their cloud strategy determines whether they can efficiently train models, scale workloads, and ensure compliance. Given the computational intensity and data sensitivity of AI, businesses must choose between hybrid cloud and multi-cloud architectures. While both hybrid cloud and multi-cloud approaches offer distinct advantages, understanding their nuances is crucial for organizations aiming to build robust AI infrastructure.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;This article explores the key differences between these strategies and provides practical guidance for enterprises preparing for AI adoption.&lt;/span&gt;&lt;span data-ccp-props=&#34;{&amp;quot;134233117&amp;quot;:false,&amp;quot;134233118&amp;quot;:false,&amp;quot;335559738&amp;quot;:240,&amp;quot;335559739&amp;quot;:240}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt;随着企业的加速AI采用，其云策略决定了它们是否可以有效地训练模型，规模工作负载并确保合规性。鉴于AI的计算强度和数据敏感性，企业必须在混合云和多云体系结构之间进行选择。尽管混合云和多云的方法都具有明显的优势，但了解其细微差别对于旨在建立强大的AI基础架构的组织至关重要。 &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt;本文探讨了这些策略之间的关键差异，并为准备AI采用的企业提供了实用的指导。&lt;/span&gt; &lt;span data-ccp-props =“ {” 134233117“：false，” 134233118“：false，” 335559738“：240，” 335559739“：240}：240}”&gt; &lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Tue, 06 May 2025 15:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Unlocking the Potential of Apache Iceberg: A Comprehensive Analysis】解锁Apache Iceberg的潜力：全面的分析</title>
      <link>https://dzone.com/articles/unlocking-the-potential-of-apache-iceberg</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Apache Iceberg has emerged as a pioneering open table format, &amp;nbsp;revolutionising data management by addressing big challenges. In this article, we&#39;ll delve into Iceberg&#39;s capabilities, discuss its limitations, and explore the implications for data architects.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;A Brief History Lesson: Hadoop&#39;s Legacy&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/hadoop-ecosystem-hadoop-tools-for-crunching-big-da&#34;&gt;Hadoop&lt;/a&gt;, once hailed as a groundbreaking solution, ultimately failed to live up to its expectations due to its inherent complexity. Many organizations struggled to navigate distributed clusters, fine-tune configurations, and mitigate issues like data fragmentation. Iceberg aims to learn from Hadoop&#39;s mistakes and provide a more streamlined and efficient solution.&lt;/p&gt;】&lt;p dir =“ ltr”&gt; Apache Iceberg已成为一种开创性的餐桌格式，通过解决重大挑战来彻底改变数据管理。在本文中，我们将深入研究冰山的能力，讨论其局限性，并探讨对数据架构师的影响。&lt;/p&gt;&#xA;&lt;H2 dir =“ ltr”&gt;简短的历史课：Hadoop的遗产&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt; &lt;a href =“ https://dzone.com/articles/hadoop-ecosystem-hadoop-tools-tools-for-crunching-big-da”&gt; addoop &lt;/a&gt; &lt;/a&gt;曾经被誉为开创性的解决方案，最终由于其固有的复杂性而无法实现其预期。许多组织都在努力导航分布式簇，微调配置以及减轻数据碎片等问题。冰山旨在从Hadoop的错误中学习并提供更精简和有效的解决方案。&lt;/p&gt;</description>
      <pubDate>Tue, 06 May 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How Clojure Shapes Teams and Products】如何塑造团队和产品</title>
      <link>https://dzone.com/articles/how-clojure-shapes-teams-and-products</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Four episodes into our journey exploring real-world Clojure stories, fascinating patterns have emerged from our conversations with leaders at Quuppa, CodeScene, Catermonkey, and Griffin. While each company&#39;s domain is distinct — from indoor positioning technology to banking infrastructure – their experiences reveal compelling insights about how Clojure influences not just code but entire organizations.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Building Teams and Projects&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;The journey to adopting &lt;a href=&#34;https://dzone.com/refcardz/functional-programming-clojure&#34;&gt;Clojure&lt;/a&gt; often begins with practical challenges. At Quuppa, they needed better ways to handle data serialization in their enterprise system. Catermonkey&#39;s Marten Sytema had already built a working product in Java but saw the potential for faster iteration with Clojure.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;四集进入我们的旅程，探索现实世界中的故事，我们与Quppa，Codescene，Catermonkey和Griffin的领导者的对话中出现了引人入胜的模式。尽管每个公司的领域都与众不同 - 从室内定位技术到银行基础设施，但他们的经验揭示了有关Clojure不仅影响代码，而且整个组织的影响的令人信服的见解。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt;建筑团队和项目&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;采用&lt;a href =“ https://dzone.com/refcardz/functional-programming-clojure”&gt; clojure &lt;/a&gt;通常始于实际挑战。在Quuppa，他们需要更好的方法来处理其企业系统中的数据序列化。 Catermonkey的Marten Sytema已经在Java建立了一个有效的产品，但看到Clojure更快的迭代可能性。 &lt;/p&gt;</description>
      <pubDate>Tue, 06 May 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Solid Testing Strategies for Salesforce Releases】Salesforce发行的可靠测试策略</title>
      <link>https://dzone.com/articles/solid-testing-strategies-for-salesforce-releases</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;As software engineers, we live in a dependency-driven world. Whether they are libraries, open-source code, or frameworks, these dependencies often provide the boilerplate functionality, integrations with other platforms, and tooling that make our jobs a little easier.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;But of course, one of the burdens of this dependency-driven world is that we are now at the mercy of our dependencies’ updates and schedules. Especially when we’ve added our own customizations and integrations on top.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;作为软件工程师，我们生活在依赖关系驱动的世界中。无论它们是库，开源代码还是框架，这些依赖性通常都提供样板功能，与其他平台集成以及使我们的工作更容易的工具。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;但是，当然，这个依赖性驱动的世界的负担之一是我们现在受到依赖的更新和时间表的摆布。尤其是当我们在顶部添加自己的自定义和集成时。&lt;/p&gt;</description>
      <pubDate>Tue, 06 May 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Beyond ChatGPT, AI Reasoning 2.0: Engineering AI Models With Human-Like Reasoning】超越Chatgpt，AI推理2.0：具有类似人类推理的工程AI模型</title>
      <link>https://dzone.com/articles/build-ai-reasoning-models</link>
      <description>【&lt;h2&gt;What You&#39;ll Learn&lt;/h2&gt;&#xA;&lt;p&gt;This tutorial will teach you how to build AI models that can understand and solve problems systematically. You&#39;ll learn to create a reasoning system that can:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;Process user inputs intelligently&lt;/li&gt;&#xA; &lt;li&gt;Make decisions based on rules and past experiences&lt;/li&gt;&#xA; &lt;li&gt;Handle real-world scenarios&lt;/li&gt;&#xA; &lt;li&gt;Learn and improve from feedback&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Have you ever wondered how to create AI models that can think and reason like humans? In this hands-on tutorial, we&#39;ll build a reasoning AI system from scratch, using practical examples and step-by-step guidance.&lt;/p&gt;】&lt;h2&gt;您将学到的东西&lt;/h2&gt;&#xA;&lt;p&gt;本教程将教您如何构建可以系统地理解和解决问题的AI模型。您将学会创建一个可以：&lt;/p&gt;的推理系统&#xA;&lt;ul&gt;&#xA; &lt;li&gt;处理用户输入智能&lt;/li&gt;&#xA; &lt;li&gt;根据规则和过去的经验做出决定&lt;/li&gt;&#xA; &lt;li&gt;处理现实世界情景&lt;/li&gt;&#xA; &lt;li&gt;从反馈中学习和改进&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;您是否曾经想过如何创建像人类一样思考和理性的AI模型？在本动手教程中，我们将使用实际示例和逐步指导从头开始构建一个推理AI系统。&lt;/p&gt;</description>
      <pubDate>Tue, 06 May 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Streamlining Event Data in Event-Driven Ansible】在事件驱动的Ansible中简化事件数据</title>
      <link>https://dzone.com/articles/streamlining-event-data-event-driven-ansible</link>
      <description>【&lt;p&gt;In Event-Driven Ansible (EDA), event filters play a crucial role in preparing incoming data for automation rules. They help streamline and simplify event payloads, making it easier to define conditions and actions in rulebooks. Previously, we explored the &lt;code&gt;ansible.eda.dashes_to_underscores&lt;/code&gt; filter, which replaces dashes in keys with underscores to ensure compatibility with Ansible&#39;s variable naming conventions.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In this article, we will explore two more event filters &lt;code&gt;ansible.eda.json_filter&lt;/code&gt; and &lt;code&gt;ansible.eda.normalize_keys&lt;/code&gt;.&lt;/p&gt;】&lt;p&gt;在事件驱动的Ansible（EDA）中，事件过滤器在准备自动化规则的传入数据中起着至关重要的作用。它们有助于简化和简化事件有效载荷，从而更容易定义规则手册中的条件和操作。以前，我们探索了&lt;code&gt; ansible.eda.dashes_to_underscores &lt;/code&gt; filter，该滤波器用下划线替换键中的破折号，以确保与Ansible的可变命名约定的兼容性。 &lt;/p&gt;&#xA;&lt;p&gt;在本文中，我们将探索两个事件过滤器&lt;code&gt; ansible.eda.json_filter &lt;/code&gt;和&lt;code&gt; ansible.eda.normalize_keys_keys &lt;/code&gt;。&lt;/p&gt;</description>
      <pubDate>Tue, 06 May 2025 14:00:03 +0000</pubDate>
    </item>
  </channel>
</rss>