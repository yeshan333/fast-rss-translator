<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【How to Use AI With WordPress】如何将AI与WordPress一起使用</title>
      <link>https://dzone.com/articles/how-to-use-ai-with-wordpress</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Artificial intelligence (AI) lets you manage WordPress in many ways, including generating AI content, creating images, improving SEO, and more.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;You can use AI to do the following:&lt;/p&gt;】&lt;p dir =“ ltr”&gt;人工智能（AI）让您以多种方式管理WordPress，包括生成AI内容，创建图像，改进SEO等。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;您可以使用AI执行以下操作：&lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Role of DQ Checks in Data Pipelines】DQ检查在数据管道中的作用</title>
      <link>https://dzone.com/articles/role-of-dq-checks-in-data-pipelines</link>
      <description>【&lt;h2&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;One of the key principles of writing a good data pipeline is ensuring accurate data is loaded into the target table. We have no control over the quality of the upstream data we read from, but we can have a few data quality (DQ) checks in our pipeline to ensure any bad data would be caught early on without letting it propagate downstream.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;DQ checks are critical in making sure the data that gets processed every day is reliable, and that downstream tables can query them safely. This will save a lot of time and resources, as we will be able to halt the data flow, giving us some time to &lt;a href=&#34;https://dzone.com/articles/root-cause-analysis-in-software-development-teams&#34;&gt;do RCA&lt;/a&gt; and fix the issue rather than pass incorrect data.&amp;nbsp;&lt;/p&gt;】&lt;H2&gt;概述&lt;/h2&gt;&#xA;&lt;p&gt;编写良好数据管道的关键原理之一是确保将准确的数据加载到目标表中。我们无法控制我们从中读取的上游数据的质量，但是我们可以在管道中进行一些数据质量（DQ）检查，以确保在不让它传播下游的情况下会尽早发现任何不良数据。 &lt;/p&gt;&#xA;&lt;p&gt; dq检查对于确保每天处理的数据是可靠的，并且下游表可以安全地查询它们。这将节省大量的时间和资源，因为我们将能够停止数据流，从而给我们一些时间&lt;a href =“ https://dzone.com/articles/root-cause-analysis-insoft-in-software -Development-Teams“&gt; DO RCA &lt;/a&gt;解决问题，而不是传递错误的数据。 &lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Detecting Patterns in Event Streams With FlinkCEP】在使用FlinkCEP的事件流中检测模式</title>
      <link>https://dzone.com/articles/detecting-event-stream-patterns-flinkcep</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;&lt;span&gt;We call this an event when a button is pressed; a sensor detects a temperature change, or a transaction flows through. An event is an action or state change that is important to an application.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/event-streams-are-nothing-without-action&#34;&gt;&lt;span&gt;Event stream processing&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp;(ESP) refers to a method or technique to stream the data in real-time as it passes through a system. The main objective of ESP is to focus on the key goal of taking action on the data as it arrives. This enables real-time analytics and action, which is important in scenarios where low-latency response is a prerequisite, e.g., fraud detection, monitoring, and automated decision-making systems. Patterns play a big role in ESP as they help spot important sequences or behaviors in data that keep flowing non-stop.&lt;/span&gt;&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt; &lt;span&gt;我们将按钮按下按钮时称之为事件；传感器检测到温度变化，或者交易流通过。事件是对应用程序很重要的动作或状态变更。 &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt; &lt;a href =“ https://dzone.com/articles/event-streams-areas-are-nothing-without-action”&gt; &lt;span&gt;事件流处理&lt;/span &gt; &lt;/a&gt; &lt;span&gt;（ESP）是指在通过系统中实时流式传输数据的方法或技术。 ESP的主要目的是专注于在数据到达时采取行动的关键目标。这可以实现实时分析和动作，这在低延迟响应是先决条件的情况下很重要，例如欺诈检测，监视和自动化决策系统。模式在ESP中起着很大的作用，因为它们有助于发现不断流动的数据中重要的序列或行为。&lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2025 19:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【How Spring Boot Starters Integrate With Your Project】春季启动器如何与您的项目集成</title>
      <link>https://dzone.com/articles/how-spring-boot-starters-integrate-with-your-project</link>
      <description>【&lt;p&gt;When developers set up and integrate services, they often face challenges that can take up a lot of time. Starters help simplify this process by organizing code and making it easier to manage. Let&#39;s take a look at creating two starters, configuring their settings automatically, and using them in a service.&lt;/p&gt;&#xA;&lt;p&gt;So, what are Spring Boot Starters, exactly? What benefits do they provide?&lt;/p&gt;】&lt;p&gt;开发人员建立和集成服务时，他们经常面临可能需要大量时间的挑战。开胃菜通过组织代码和使其更易于管理来帮助简化此过程。让我们看一下创建两个启动器，自动配置其设置并在服务中使用它们。&lt;/p&gt;&#xA;&lt;p&gt;那么，到底是什么春季启动器？他们提供什么好处？&lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2025 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Demystifying Sorting Assertions With AssertJ】用assertj揭开对分类的神秘</title>
      <link>https://dzone.com/articles/demystifying-sorting-assertions-in-assertj</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;There are times when a new feature containing sorting is introduced. Obviously, we want to verify that the implemented sorting works correctly. AssertJ framework provides first-class support for such tasks. This article shows how to write such tests.&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;In this article, you will learn the following:&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt;有时会引入包含排序的新功能。显然，我们想验证实施的排序是否正确。 ASSERTJ框架为此类任务提供一流的支持。本文展示了如何编写这样的测试。&lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;在本文中，您将学习以下内容：&lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Docker Performance Optimization: Real-World Strategies】Docker绩效优化：现实世界策略</title>
      <link>https://dzone.com/articles/docker-performance-optimization-strategies</link>
      <description>【&lt;p&gt;After optimizing containerized applications processing petabytes of data in fintech environments, I&#39;ve learned that Docker performance isn&#39;t just about speed — it&#39;s about reliability, resource efficiency, and cost optimization. Let&#39;s dive into strategies that actually work in production.&lt;/p&gt;&#xA;&lt;h2&gt;The Performance Journey: Common Scenarios and Solutions&lt;/h2&gt;&#xA;&lt;h3&gt;Scenario 1: The CPU-Hungry Container&lt;/h3&gt;&#xA;&lt;p&gt;Have you ever seen your container &lt;a href=&#34;https://dzone.com/articles/cpu-optimization-in-virtual-environment&#34;&gt;CPU usage&lt;/a&gt; spike to 100% for no apparent reason? We can fix that with this code below:&lt;/p&gt;】&lt;p&gt;在优化了在金融科技环境中处理数据的容器化应用程序之后，我了解到Docker的性能不仅仅是速度 - 它与可靠性，资源效率和成本优化有关。让我们研究实际上在生产中实际运作的策略。&lt;/p&gt;&#xA;&lt;H2&gt;性能旅程：常见的场景和解决方案&lt;/h2&gt;&#xA;&lt;h3&gt;方案1：饮用CPU饮用容器&lt;/h3&gt;&#xA;&lt;p&gt;您是否曾经看过容器&lt;a href =” https://dzone.com/articles/cpu-optimization-in-in-virtual-environment&gt; cpu用法&lt;/a&gt;出于明显的原因而飙升至100％？我们可以使用以下代码解决此问题：&lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Build A Stateless Microservice With GitHub Copilot in VSCode】在VSCODE中使用GitHub Copilot构建无状态的微服务</title>
      <link>https://dzone.com/articles/build-stateless-microservice-github-copilot-vscode</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;Microsoft CEO Satya Nadella recently announced that GitHub Copilot is now free for all developers in VSCode. This is a game-changer in the software development industry. Github Copilot is an AI code assistant that helps developers finish their coding tasks easily and quickly. It also helps suggest code snippets and autocomplete functions.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;In this article, we will learn how to use GitHub Copilot using&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/visual-studio-code-extension-development&#34;&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;VSCode&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;&amp;nbsp;in a step-by-step manner for creating the first stateless flask microservice. This is a beginner-friendly guide showcasing how Copilot helps reduce the development time and simplify the process.&lt;/span&gt;&lt;span data-ccp-props=&#34;{&amp;quot;335551550&amp;quot;:6,&amp;quot;335551620&amp;quot;:6}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt; &lt;span data-contrast =“ auto” auto“ lang =” en-us“&gt; &lt;span data-contrast =” auto“ auto” lang =“ en-us”&gt; Microsoft CEO SATYA纳德拉（Nadella）最近宣布，Github Copilot现在对VScode的所有开发人员免费。这是软件开发行业的游戏规则改变者。 Github Copilot是AI代码助理，可帮助开发人员轻松快速完成编码任务。它还有助于建议代码段和自动完成功能。 &lt;/span&gt; &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt; &lt;span data-contrast =“ auto” auto“ auto” lang =“ en-us”&gt;在本文中，我们将学习如何使用&lt;/span&gt; &lt;/span&gt; &lt;a href =“ https://dzone.com/articles/visual-studio-code-extension-extension-development”&gt; &lt;span data-contrast = “ auto” lang =“ en-us”&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt; vscode &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt;以创建第一个无状态烧瓶微服务的方式。这是一本初学者友好的指南，展示了Copilot如何帮助减少开发时间并简化过程。&lt;/span&gt; &lt;span data-ccp-props =“ {” 3355551550“：6，” 3355551620“：6}跨度&gt; &lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Optimizing Front-End Performance】优化前端性能</title>
      <link>https://dzone.com/articles/frontend-performance-optimization</link>
      <description>【&lt;p&gt;This is especially important in the modern world of web development, where it can be challenging for a site to load in a reasonable amount of time. End customers experience delays when visiting slow-loading sites, higher bounce rates, and lost business prospects. It&#39;s to overcome this challenge that front-end performance has become the norm or optimization among developers. It entails optimizing relative to the performance standards of the user interface elements of a site. Through optimization methods, companies can present value propositions that engaged users will be able to navigate with minimal hiccups&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Lazy Loading: Efficient Content Delivery&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/lazy-loading-in-web-applications-js-angular-and-re&#34;&gt;Lazy loading&lt;/a&gt; is a front-end optimization concept that loads front-end sources such as images, &amp;nbsp;videos, iframes, and others on a website when the page is loaded. Lazy loading serves more content than the original page load; it loads only as much content as the user can see when the page is loaded. Other content is loaded on the page as the user scrolls down the page, thus making the process an Ajax function.&lt;/p&gt;】&lt;p&gt;这在现代Web开发世界中尤其重要，在该网站开发的现代世界中，网站在合理的时间内加载它可能具有挑战性。最终客户在访问缓慢加载站点，更高的跳出率和损失业务前景时会经历延误。要克服这一挑战，即前端绩效已成为开发人员之间的规范或优化。它需要相对于网站用户界面元素的性能标准进行优化。通过优化方法，公司可以提出价值主张，使用户可以用最小的打ic &lt;/p&gt;导航。&#xA;&lt;H2&gt; &lt;strong&gt;懒惰加载：有效的内容交付&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/articles/lazy-loading-in-web-applications-js-js-angular-and-re----------------------------加载页面加载后，加载了前端源，例如图像，视频，iframe和其他其他来源。懒惰加载比原始页面加载更多的内容；它仅加载与用户在加载页面时所能看到的内容一样多。当用户向下滚动页面时，在页面上加载了其他内容，从而使过程成为AJAX函数。&lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AI Regulation in the U.S.: Navigating Post-EO 14110】美国的AI法规：在eo后14110</title>
      <link>https://dzone.com/articles/ai-regulation-in-the-us-navigating-the-post-eo</link>
      <description>【&lt;p&gt;As the Trump administration revokes Executive Order 14110, the U.S. shifts toward a market-driven AI strategy, departing from the Biden administration’s regulatory framework. While proponents see this as a catalyst for innovation and economic growth, critics warn of increased risks, regulatory fragmentation, and strained transatlantic relations. With Europe reinforcing its AI Act and states like California exploring their own regulations, the future of AI governance in the U.S. remains uncertain. Will deregulation accelerate progress, or does it open the door to new challenges in ethics, security, and global cooperation?&lt;/p&gt;&#xA;&lt;p&gt;Just days after taking office, Donald Trump, the 47th President of the United States, issued a series of executive actions aimed at dismantling key initiatives from the Biden administration. Among them was the revocation of Executive Order (EO) 14110, a landmark policy that established a framework for AI governance and regulation.&lt;/p&gt;】&lt;p&gt;随着特朗普政府撤销14110号行政命令，美国朝着市场驱动的AI策略转向了拜登政府的监管框架。支持者认为这是创新和经济增长的催化剂，但批评家警告说，风险增加，监管破裂和紧张的跨大西洋关系。随着欧洲加强其AI法案和像加利福尼亚这样的州探索自己的法规，美国的AI治理未来仍然不确定。放松管制会加速进步，还是要为道德，安全和全球合作的新挑战打开大门吗？&lt;/p&gt;&#xA;&lt;p&gt;上任几天后，美国第47任总统唐纳德·特朗普（Donald Trump）发出了一系列旨在拆除拜登政府的关键举措的行政行动。其中包括撤销行政命令（EO）14110，这是一项具有里程碑意义的政策，建立了AI治理和法规的框架。&lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering the Transition: From Amazon EMR to EMR on EKS】掌握过渡：从亚马逊EMR到EKS上的EMR</title>
      <link>https://dzone.com/articles/amazon-emr-to-emr-on-eks-transition</link>
      <description>【&lt;p&gt;Amazon Elastic MapReduce (EMR) is a platform to process and analyze big data. Traditional EMR runs on a cluster of Amazon EC2 instances managed by AWS. &amp;nbsp;This includes provisioning the infrastructure and handling tasks like scaling and monitoring.&lt;/p&gt;&#xA;&lt;p&gt;EMR on EKS integrates Amazon EMR with &lt;a href=&#34;https://dzone.com/articles/5-practices-for-kubernetes-operations-with-amazon?fromrel=true&#34;&gt;Amazon Elastic Kubernetes Service&lt;/a&gt; (EKS). It allows users the flexibility to run Spark workloads on a Kubernetes cluster. This brings a unified approach to manage and orchestrate both compute and storage resources.&lt;/p&gt;】&lt;p&gt; Amazon Elastic MapReduce（EMR）是处理和分析大数据的平台。传统EMR在AWS管理的Amazon EC2实例集中运行。  这包括配置基础架构和处理任务，例如缩放和监视。&lt;/p&gt;&#xA;EKS上的&lt;p&gt; EMR将Amazon EMR与&lt;a href =“ https://dzone.com/articles/5-practices/5-practices-for-kubernetes-operations-operations-with-amazon？fromrel = true”&gt; a&gt;（eks）。它使用户可以灵活地在Kubernetes群集上运行Spark Workloads。这带来了一种统一的方法来管理和编排计算和存储资源。&lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2025 17:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>