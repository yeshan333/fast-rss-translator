<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Why 99% Accuracy Isn&#39;t Good Enough: The Reality of ML Malware Detection】为什么99％的准确性不够好：ML恶意软件检测的现实</title>
      <link>https://dzone.com/articles/ml-malware-detection-base-rate-problem</link>
      <description>【&lt;p&gt;The threat of &lt;a href=&#34;https://dzone.com/articles/common-cybersecurity-threats-and-how-to-protect-yo&#34;&gt;malware&lt;/a&gt; in enterprises is evolving each year. As enterprises expand their digital footprint through remote work and cloud adoption, their attack surface increases, making them more vulnerable to targeted malware campaigns. &lt;a href=&#34;https://www.ic3.gov/annualreport/reports/2023_ic3report.pdf&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;FBI’s 2023 Internet Crime Report&lt;/a&gt; showed that Business Email Compromise (BEC) scams alone caused over USD 2.9 billion in losses. Investment fraud losses also rose by 38% to USD 4.57 billion, and ransomware caused USD 59.6 million in losses.&lt;/p&gt;&#xA;&lt;p&gt;Other reports paint similarly bleak pictures of the state of enterprise security today. The &lt;a href=&#34;https://www.ibm.com/reports/data-breach&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;2024 IBM Cost of a Data Breach Report&lt;/a&gt; shows that the average cost of a data breach jumped 10% to USD 4.88 million. It also shows that organizations using AI in incident prevention saved USD 2.2 million on average. More than half of breached organizations are experiencing severe security staffing shortages, a 26.2% increase from last year. &lt;a href=&#34;https://dzone.com/articles/a-complete-guide-to-modern-ai-developer-tools&#34;&gt;AI tools&lt;/a&gt; can help fill the gap.&lt;/p&gt;】&lt;p&gt; &lt;a href =“ https://dzone.com/articles/common-cybersecurity-threats-and-how-how-to-protect-yo”&gt;恶意软件&lt;/a&gt;在企业中每年都在演变。随着企业通过远程工作和采用云扩展其数字足迹，其攻击表面的增加，使其更容易受到针对性的恶意软件活动的影响。 &lt;a href=&#34;https://www.ic3.gov/annualreport/reports/2023_ic3report.pdf&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;FBI’s 2023 Internet Crime Report&lt;/a&gt; showed that Business Email Compromise (BEC) scams alone caused over USD 2.9 billion in losses.投资欺诈损失也增长了38％，达到45.7亿美元，勒索软件造成了5960万美元的损失。&lt;/p&gt;&#xA;&lt;p&gt;其他报告今天对企业安全状况的图片类似地绘制。 &lt;a href =“ https://www.ibm.com/reports/data-breach” rel =“ noopener noreferrer” target =“ _ blank”&gt; 2024 IBM数据泄露报告的成本&lt;/a&gt;显示，数据漏洞的平均成本跳到了10％的4.88亿美元。它还表明，使用AI在事件中使用AI的组织平均节省了220万美元。超过一半的违反组织遭受严重的安全人员短缺，比去年增加了26.2％。 &lt;a href =“ https://dzone.com/articles/a-complete-guide-to-modern-ai-developer-tools”&gt; ai工具&lt;/a&gt;可以帮助填补空白。&lt;/p&gt;</description>
      <pubDate>Mon, 16 Jun 2025 20:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Scrum Smarter, Not Louder: AI Prompts Every Developer Should Steal】Scrum聪明，不要大声：AI提示每个开发人员都应该偷走</title>
      <link>https://dzone.com/articles/ai-prompts-for-agile-scrum-developers</link>
      <description>【&lt;p&gt;Most developers think AI’s only job is writing code, debugging tests, or generating documentation. But &lt;a href=&#34;https://dzone.com/refcardz/scrum&#34;&gt;Scrum&lt;/a&gt;? That’s still a human mess, full of vague stories, chaotic meetings, and awkward silences. Here’s the truth: prompt engineering can turn &lt;a href=&#34;https://dzone.com/ai-ml&#34;&gt;AI &lt;/a&gt;into your secret &lt;a href=&#34;https://dzone.com/articles/agile-best-practices-values-and-principles-for-effective-teams&#34;&gt;Agile&lt;/a&gt; assistant—if you know how to talk to it.&lt;/p&gt;&#xA;&lt;p&gt;In this guide, we share field-tested, research-backed prompts that developers can use in real time to make Agile rituals smoother, smarter, and actually useful. Based on findings from Alamu et al. (2024), Verma et al. (2025), and Mitra &amp;amp; Lewis (2025), we show how prompt structures can turn your next standup, sprint planning, or retro into something that works for you, not just for your Scrum Master.&lt;/p&gt;】&lt;p&gt;大多数开发人员认为AI的唯一工作是编写代码，调试测试或生成文档。但是&lt;a href =“ https://dzone.com/refcardz/scrum”&gt; scrum &lt;/a&gt;？那仍然是人类的混乱，充满了模糊的故事，混乱的会议和尴尬的沉默。 Here’s the truth: prompt engineering can turn &lt;a href=&#34;https://dzone.com/ai-ml&#34;&gt;AI &lt;/a&gt;into your secret &lt;a href=&#34;https://dzone.com/articles/agile-best-practices-values-and-principles-for-effective-teams&#34;&gt;Agile&lt;/a&gt; assistant—if you know how to talk to it.&lt;/p&gt;&#xA;&lt;p&gt;在本指南中，我们共享了经过现场测试的，以研究支持的提示，开发人员可以实时使用，使敏捷仪式更加顺畅，更聪明，实际上有用。根据Alamu等人的发现。 （2024），Verma等。 （2025年）和Mitra＆Lewis（2025），我们展示了及时结构如何将您的下一个站立，冲刺计划或复古变成适合您的东西，而不仅仅是对您的Scrum Master。&lt;/p&gt;</description>
      <pubDate>Mon, 16 Jun 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Code of Shadows: Master Shifu and Po Use Functional Java to Solve the Decorator Pattern Mystery】阴影代码：大师SHIFU和PO使用功能性Java来解决装饰器模式的神秘</title>
      <link>https://dzone.com/articles/java-solve-decorator-pattern</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;It was a cold, misty morning at the Jade Palace. The silence was broken not by combat… but by a mysterious glitch in the logs.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Po&lt;/strong&gt; (rushing in): &#34;Shifu! The logs… they&#39;re missing timestamps!&#34;&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt;在玉宫是一个冷淡，雾蒙蒙的早晨。沉默不是被战斗打破……而是被原木中的神秘故障打破。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt; po &lt;/strong&gt;（匆匆进来）：“ shifu！原木……他们缺少时间戳！” &lt;/p&gt;&gt;</description>
      <pubDate>Mon, 16 Jun 2025 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Kubernetes Observability: Boost Performance, Security, and Stability With Tracestore, OPA, Flagger, and Custom Metrics】掌握Kubernetes的可观察性：通过Tracestore，OPA，Flagger和自定义指标提高性能，安全性和稳定性</title>
      <link>https://dzone.com/articles/kubernetes-observability-guide-tracestore-opa-flagger</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In modern microservices architectures, achieving comprehensive &lt;a href=&#34;https://dzone.com/monitoring-and-observability&#34;&gt;&lt;strong&gt;observability&lt;/strong&gt;&lt;/a&gt; is not just an option—it&#39;s a necessity. As applications scale dynamically within Kubernetes environments, tracking performance issues, enforcing security policies, and ensuring smooth deployments become complex challenges. Traditional monitoring solutions alone cannot fully address these challenges.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;This guide explores four powerful tools that significantly improve observability and control in &lt;a href=&#34;https://dzone.com/microservices&#34;&gt;microservices&lt;/a&gt; environments:&lt;/p&gt;】&lt;p dir =“ ltr”&gt;在现代微服务体系结构中，实现综合&lt;a href =“ https://dzone.com/monitoring-and-bobservility”&gt; &lt;strong&gt; &lt;strong&gt;可观察性&lt;/strong&gt; &lt;/a&gt;不仅是一种选择 - 这是一个选择。随着应用程序在Kubernetes环境中动态扩展，跟踪性能问题，执行安全策略以及确保平稳部署成为复杂的挑战。 &lt;/p&gt;，仅传统的监测解决方案就无法完全应对这些挑战。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;本指南探讨了四个强大的工具，可以显着改善&lt;a href =“ https://dzone.com/microservices”&gt; microservices &lt;/a&gt;环境：&lt;/p&gt;</description>
      <pubDate>Mon, 16 Jun 2025 13:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【Before You Microservice Everything, Read This】在您微服务之前，请阅读此内容</title>
      <link>https://dzone.com/articles/modular-monolith-vs-microservices</link>
      <description>【&lt;p&gt;The way we build software systems is always evolving, and right now, everyone&#39;s talking about microservices. They&#39;ve become popular because of cloud computing, containerization, and tools like Kubernetes. Lots of new projects use this approach, and even older systems are trying to switch over. But this discussion is about something else: the &lt;a href=&#34;https://dzone.com/articles/microservices-vs-monoliths-choosing-the-right-architecture&#34;&gt;&lt;strong&gt;modular monolith&lt;/strong&gt;&lt;/a&gt;, especially in comparison to microservices.&lt;/p&gt;&#xA;&lt;p&gt;But, why focus on this?&lt;/p&gt;】&lt;p&gt;我们构建软件系统的方式一直在发展，现在，每个人都在谈论微服务。由于云计算，容器化和Kubernetes等工具，它们变得流行。许多新项目都使用这种方法，甚至较旧的系统都在尝试切换。但是讨论是其他的：&lt;a href =“ https://dzone.com/articles/microservices-vs-monoliths-choosing-the-the-the-the-right-architecture”&gt; &lt;strong&gt; &lt;strong&gt;模块化monolith &lt;/strong&gt; &lt;/a&gt;，尤其是与Microservices相比。&#xA;&lt;p&gt;但是，为什么要专注于此？&lt;/p&gt;</description>
      <pubDate>Mon, 16 Jun 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Safeguarding Cloud Databases: Best Practices and Risks Engineers Must Avoid】保护云数据库：最佳实践和风险工程师必须避免</title>
      <link>https://dzone.com/articles/cloud-database-best-practices-and-risks</link>
      <description>【&lt;p data-end=&#34;779&#34; data-start=&#34;184&#34;&gt;As enterprises increasingly adopt digital transformation strategies, the cloud has emerged as a foundational component of modern IT infrastructure. Organizations are rapidly shifting workloads, including critical databases, to cloud platforms such as Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform (GCP) to harness benefits like on-demand scalability, high availability, and reduced operational overhead. Cloud-based databases, in particular, have revolutionized how businesses store, access, and manage data, offering improved performance and flexibility across industries.&lt;/p&gt;&#xA;&lt;p data-end=&#34;1391&#34; data-start=&#34;781&#34;&gt;However, while the shift to cloud-native databases brings significant advantages, it also introduces a complex set of security challenges. In traditional on-premises environments, organizations manage and secure their own hardware and network boundaries. In the cloud, however, security follows a shared responsibility model where both the provider and the customer play a role in protecting systems and data. This model holds both cloud providers and their customers accountable for different aspects of system and data security. Failure to clearly define and act upon these responsibilities can expose organizations to serious data breaches, compliance failures, and reputational harm.&lt;/p&gt;】&lt;p data-end =“ 779” data-start =“ 184”&gt;随着企业越来越多地采用数字转换策略，云已成为现代IT基础架构的基础组成部分。组织正在迅速将工作负载（包括关键数据库）转移到诸如Amazon Web Services（AWS），Microsoft Azure和Google Cloud Platform（GCP）等云平台上，以利用诸如按需可伸缩性，高可用性和减少操作性的开销等福利。尤其是基于云的数据库已经彻底改变了企业如何存储，访问和管理数据，从而提高了行业的性能和灵活性。&lt;/p&gt;&#xA;&lt;p data-end =“ 1391” data-start =“ 781”&gt;但是，虽然向云本地数据库的转移带来了显着的优势，但它也引入了一系列复杂的安全挑战集。在传统的本地环境中，组织管理和保护自己的硬件和网络边界。但是，在云中，安全性遵循共同的责任模型，其中提供商和客户都在保护系统和数据中发挥作用。该模型使云提供商及其客户对系统和数据安全性的不同方面负责。未能明确定义并遵守这些责任可以使组织遭受严重的数据泄露，合规性失败和声誉危害。&lt;/p&gt;</description>
      <pubDate>Mon, 16 Jun 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Monitoring and Managing the Growth of the MSDB System Database in SQL Server】监视和管理SQL Server中MSDB系统数据库的增长</title>
      <link>https://dzone.com/articles/growth-msdb-system-database-sql-server</link>
      <description>【&lt;p data-end=&#34;575&#34; data-start=&#34;89&#34;&gt;In SQL Server environments, system databases play crucial roles in ensuring smooth and reliable database operations. Among these, the &lt;code data-end=&#34;229&#34; data-start=&#34;223&#34;&gt;msdb&lt;/code&gt; database is critical as it handles a variety of operational tasks, including job scheduling via SQL Server Agent, alert management, database mail configuration, and backup and restore history tracking. These functions are essential for automating routine maintenance, monitoring system health, and managing administrative workflows.&lt;/p&gt;&#xA;&lt;p data-end=&#34;1035&#34; data-start=&#34;577&#34;&gt;However, the &lt;code data-end=&#34;596&#34; data-start=&#34;590&#34;&gt;msdb&lt;/code&gt; database can sometimes grow unexpectedly large, especially in busy or long-running environments. This growth, if left unchecked, can lead to performance degradation, longer response times for job execution, and potential issues with SQL Server Agent functionality. Therefore, understanding how to monitor and manage the size of the &lt;code data-end=&#34;935&#34; data-start=&#34;929&#34;&gt;msdb&lt;/code&gt; database is critical for database administrators aiming to maintain optimal SQL Server performance.&lt;/p&gt;】&lt;p data-end =“ 575” data-start =“ 89”&gt;在SQL Server环境中，系统数据库在确保平滑可靠的数据库操作中起着至关重要的作用。其中，&lt;code data-end =“ 229” data-start =“ 223”&gt; msdb &lt;/code&gt;数据库至关重要，因为它处理了各种操作任务，包括通过SQL Server代理，警报管理，数据库邮件配置以及备份和备份和备份历史记录跟踪。这些功能对于自动化日常维护，监视系统健康和管理管理工作流程至关重要。&lt;/p&gt;&#xA;&lt;p data-end =“ 1035” data-start =“ 577”&gt;但是，&lt;code data-end =“ 596” data-start =“ 590”&gt; msdb &lt;/code&gt;数据库有时会出乎意料地生长出大型，尤其是在繁忙或长期跑步的环境中。这种增长，如果没有选中，则可以导致性能降解，较长的工作执行响应时间以及SQL Server代理功能的潜在问题。因此，了解如何监视和管理&lt;code data-end =“ 935” data-start =“ 929”&gt; msdb &lt;/code&gt;数据库的大小对于旨在保持最佳SQL Server性能的数据库管理员至关重要。&lt;/p&gt;</description>
      <pubDate>Mon, 16 Jun 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AI Agents in PHP with Model Context Protocol】具有模型上下文协议的PHP中的AI代理</title>
      <link>https://dzone.com/articles/ai-agents-in-php-with-mcp-model-context-protocol</link>
      <description>【&lt;p&gt;If you are building AI agents you’ve probably heard about &lt;a href=&#34;https://dzone.com/articles/mcp-microsoft-copilot-ai-agents&#34;&gt;MCP&lt;/a&gt; (Model Context Protocol). Actually, really everyone is talking about MCP right now. From what I’ve read online, it seems many people don’t seem to have the slightest idea what we’re talking about, and the new product development opportunities associated with that.&lt;/p&gt;&#xA;&lt;p&gt;I want to break down a couple of key concepts to help establish the foundational understanding you might need as a software developer exploring new ideas for agent implementations. This will also help clarify the role of MCP servers when directly connected to an &lt;a href=&#34;https://dzone.com/articles/ai-agents-future-of-automation-or-overhyped-buzzword&#34;&gt;AI agent&lt;/a&gt;, such as a &lt;a href=&#34;https://neuron-ai.dev/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Neuron AI Agent&lt;/a&gt;, as one example.&lt;/p&gt;】&lt;p&gt;如果您正在构建AI代理，则可能听说过&lt;a href =“ https://dzone.com/articles/mcp-microsoft-copilot-ai-ai-agents”&gt; mcp &lt;/a&gt;（模型上下文协议）。实际上，实际上每个人现在都在谈论MCP。从我在网上阅读的内容来看，似乎许多人似乎并没有丝毫想法，以及与之相关的新产品开发机会。&lt;/p&gt;&#xA;&lt;p&gt;我想分解一些关键概念，以帮助建立您可能需要的基本理解，因为软件开发人员探索了代理实施的新想法。这也将有助于阐明MCP服务器直接连接到&lt;a href =“ https://dzone.com/articles/ai-agents/ai-agents-future-future-of-automation-or-or-overhyped-buzzword”&gt; ai Agent &lt;/a&gt; target =“ _ blank”&gt; neuron ai代理&lt;/a&gt;，作为一个例子。&lt;/p&gt;</description>
      <pubDate>Mon, 16 Jun 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Create POM With LLM (GitHub Copilot) and Playwright MCP】用LLM（Github Copilot）和剧作家MCP创建POM</title>
      <link>https://dzone.com/articles/create-pom-with-llm-github-copilot-playwright-mcp</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;Test automation is a critical part of modern software development, but maintaining test scripts for dynamic web applications can be a challenge. The Page Object Model (POM) is a proven design pattern that makes test suites maintainable and scalable. When paired with GitHub Copilot, an AI-powered coding assistant, and Playwright’s Model Context Protocol (MCP), you can supercharge your automation workflow with intelligent code generation and seamless tool integration.&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;In this blog, we’ll walk through how to create a POM-based test automation framework using Playwright, leverage &lt;a href=&#34;https://github.com/features/copilot&#34; rel=&#34;noopener ugc nofollow&#34; target=&#34;_blank&#34;&gt;GitHub Copilot&lt;/a&gt; to write and optimize code, and integrate &lt;a href=&#34;https://github.com/microsoft/playwright-mcp&#34; rel=&#34;noopener ugc nofollow&#34; target=&#34;_blank&#34;&gt;Playwright MCP&lt;/a&gt; to enable AI-driven browser interactions. Whether you’re a QA engineer or a developer, this guide will help you build a robust, AI-enhanced testing solution.&lt;/p&gt;】&lt;P数据选择可选 - 段=“”&gt;测试自动化是现代软件开发的关键部分，但是维护动态Web应用程序的测试脚本可能是一个挑战。页面对象模型（POM）是一种经过验证的设计模式，可以使测试套件可维护和可扩展。当与AI驱动的编码助手和剧作家的模型上下文协议（MCP）配对时，您可以通过智能代码生成和无缝工具集成来增强自动化工作流程。&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph =“”&gt;在此博客中，我们将介绍如何使用playwright创建基于POM的测试自动化框架，杠杆&lt;a href &lt;a href =“ https://github.com/features/copilot/copilot/copilot” href =“ https://github.com/microsoft/playwright-mcp” rel =“ noopener ugc nofollow” target =“ _ black”&gt; playwright mcp &lt;/a&gt;启用AI-drive的浏览器交互。无论您是QA工程师还是开发人员，本指南都将帮助您构建强大的AI增强测试解决方案。&lt;/p&gt;</description>
      <pubDate>Fri, 13 Jun 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to Use Testcontainers With ScyllaDB】如何使用ScylladB使用测试范围</title>
      <link>https://dzone.com/articles/how-to-use-testcontainers-with-scylladb</link>
      <description>【&lt;p&gt;Setting up a full database environment for every round of integration testing can be time-consuming and complex. This post walks through how to use the &lt;a href=&#34;https://testcontainers.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Testcontainers&lt;/a&gt; library to spin up lightweight, throwaway &lt;a href=&#34;http://ScyllaDB&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;ScyllaDB&lt;/a&gt; instances for testing purposes. We’ll explore a practical example that covers initializing the database and running tests against it.&lt;/p&gt;&#xA;&lt;h2&gt;Testcontainers: A Tool for Integration Testing&lt;/h2&gt;&#xA;&lt;p&gt;You automatically unit test your code and (hopefully) integration test your system…but what about your database? To ensure that the application works as expected, you need to extend beyond unit testing. You also need to automatically test how the units interact with one another and how they interact with external services and systems (message brokers, data stores, and so on). But running those integration tests requires the infrastructure to be configured correctly, with all the components set to the proper state. You also need to confirm that the tests are isolated and don’t produce any side effects or “test pollution.” How do you reduce the pain…and get it all running in your &lt;a href=&#34;https://dzone.com/articles/everything-you-need-to-know-about-cicd-pipeline-pa&#34;&gt;CI/CD&lt;/a&gt; process?&amp;nbsp;&lt;/p&gt;】&lt;p&gt;为每轮集成测试设置完整的数据库环境可能是耗时且复杂的。这篇文章介绍了如何使用&lt;a href =“ https://testcontainers.com/” rel =“ noopener noreferrer” target =“ _ black”&gt; testContainers &lt;/a&gt;库库来旋转轻量级，throflaway &lt;a href &lt;a href =“ http：// scylladb：// target =“ _ blank”&gt; scylladb &lt;/a&gt;用于测试目的的实例。我们将探索一个实用示例，涵盖初始化数据库并针对它运行测试。&lt;/p&gt;&#xA;&lt;H2&gt;测试范围：集成测试的工具&lt;/h2&gt;&#xA;&lt;p&gt;您会自动单元测试您的代码，并（希望）集成测试您的系统……但是您的数据库呢？为了确保该应用程序按预期工作，您需要扩展超出单元测试。您还需要自动测试单位如何相互交互，以及它们如何与外部服务和系统（消息经纪人，数据存储等）进行交互。但是，运行这些集成测试需要正确配置基础架构，所有组件都设置为适当的状态。您还需要确认测试是孤立的，并且不会产生任何副作用或“测试污染”。您如何减轻疼痛……并使所有疼痛都在您的&lt;a href =“ https://dzone.com/articles/everythe-you-need-to-need-need-know-about-cicd-pipeline-pa”&gt; ci/cd/cd &lt;/a&gt;过程中？ &lt;/p&gt;</description>
      <pubDate>Mon, 16 Jun 2025 17:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>