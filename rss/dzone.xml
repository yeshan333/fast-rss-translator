<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Accelerate Your Journey to a Modern Data Platform Using Coalesce】使用 Coalesce 加速您的现代数据平台之旅</title>
      <link>https://dzone.com/articles/accelerate-your-journey-to-a-modern-data-platform</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;Most organizations face challenges while adapting to data platform modernization. The critical challenge that data platforms have faced is improving the scalability and performance of data processing due to the increased volume, variety, and velocity of data used for analytics.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;This article aims to summarize answers to the challenging questions of data platform modernization, and here are a few questions:&lt;/p&gt;】&lt;p style=&#34;text-align: left;&#34;&gt;大多数组织在适应数据平台现代化时都面临挑战。由于用于分析的数据量、种类和速度的增加，数据平台面临的关键挑战是提高数据处理的可扩展性和性能。 &lt;/p&gt;&#xA;&lt;p&gt;本文旨在总结数据平台现代化的挑战性问题的答案，以下是一些问题：&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 15:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Digital Garden】数字花园</title>
      <link>https://dzone.com/articles/digital-garden</link>
      <description>【&lt;p&gt;The topic of note-taking remains relevant today. We know the benefits it provides to the author. We are familiar with various approaches to note-taking and tools that can be used, and we have choices. Imagine you have found your approach, your tool, and your note base is growing and pleasing to the eye. What next? I want to discuss one path of development in this area.&lt;br&gt;&lt;img style=&#34;width: 506px;&#34; class=&#34;fr-fic fr-dib lazyload&#34; data-image=&#34;true&#34; data-new=&#34;false&#34; data-sizeformatted=&#34;981.3 kB&#34; data-mimetype=&#34;image/jpeg&#34; data-creationdate=&#34;1725020458568&#34; data-creationdateformatted=&#34;08/30/2024 12:20 PM&#34; data-type=&#34;temp&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/17888303-digitalgarden.jpg&#34; data-modificationdate=&#34;null&#34; data-size=&#34;981280&#34; data-name=&#34;digitalgarden.jpg&#34; data-id=&#34;17888303&#34; data-src=&#34;https://dz2cdn1.dzone.com/storage/temp/17888303-digitalgarden.jpg&#34; alt=&#34;Duck in the garden&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This article is dedicated to the concept of a digital garden — the philosophy of publicly maintaining personal notes.&lt;/p&gt;】&lt;p&gt;记笔记的话题在今天仍然具有现实意义。我们知道它为作者带来的好处。我们熟悉各种记笔记的方法和可以使用的工具，并且我们有选择。想象一下，您已经找到了自己的方法、工具和笔记库，并且正在不断增长并且令人赏心悦目。接下来怎么办？我想讨论一下这方面的发展路径。&lt;br&gt;&lt;img style=&#34;width: 506px;&#34;类=“fr-fic fr-diblazyload”data-image=“true”data-new=“false”data-sizeformatted=“981.3kB”data-mimetype=“image/jpeg”data-creationdate=“1725020458568”数据-creationdateformatted=&#34;08/30/2024 12:20 PM&#34; data-type=&#34;temp&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/17888303-digitalgarden.jpg&#34; data-modificationdate= “null”data-size=“981280”data-name=“digitalgarden.jpg”data-id=“17888303”data-src=“https://dz2cdn1.dzone.com/storage/temp/17888303-digitalgarden.jpg” &#34; alt=&#34;花园里的鸭子&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;本文致力于讨论数字花园的概念 - 公开维护个人笔记的哲学。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 14:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【REST and HTTP Semantics】REST 和 HTTP 语义</title>
      <link>https://dzone.com/articles/rest-and-http-semantics</link>
      <description>【&lt;p&gt;Roy Fielding created REST as his &lt;a href=&#34;https://ics.uci.edu/~fielding/pubs/dissertation/top.htm&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;doctorate dissertation&lt;/a&gt;. After reading it, I would boil it down to three basic elements:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;A document that describes object state&lt;/li&gt;&#xA; &lt;li&gt;A transport mechanism to transmit the object state back and forth between systems&lt;/li&gt;&#xA; &lt;li&gt;A set of operations to perform on the state&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;While Roy was focused solely on HTTP, I don&#39;t see why another transport could not be used. Here are some examples:&lt;/p&gt;】&lt;p&gt;Roy Fielding 创建了 REST 作为他的&lt;a href=&#34;https://ics.uci.edu/~fielding/pubs/dissertation/top.htm&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;博士论文&lt; /a&gt;.读完后，我将其归结为三个基本要素：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;描述对象状态的文档&lt;/li&gt;&#xA; &lt;li&gt;在系统之间来回传输对象状态的传输机制&lt;/li&gt;&#xA; &lt;li&gt;对状态执行的一组操作&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;虽然 Roy 只关注 HTTP，但我不明白为什么不能使用其他传输方式。以下是一些示例：&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 18:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Top Security Flaws Hiding in Your Code Right Now and How To Fix Them】目前隐藏在代码中的主要安全缺陷以及如何修复它们</title>
      <link>https://dzone.com/articles/top-security-flaws-hiding-in-your-code-and-fixing-them</link>
      <description>【&lt;p&gt;In 2019, a famous &lt;a href=&#34;https://medium.com/@sashni/dont-play-games-with-your-cybersecurity-c3dbea71685b&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34; title=&#34;breach in Fortnite&#34;&gt;breach in Fortnite&lt;/a&gt;, the famous game, reportedly put millions of players at risk of malware. The incident highlighted the importance of properly securing SQL databases.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;But this is not an isolated issue.&lt;/strong&gt;&lt;/p&gt;】&lt;p&gt;2019 年，著名的 &lt;a href=&#34;https://medium.com/@sashni/dont-play-games-with-your-cybersecurity-c3dbea71685b&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34; 标题据报道，著名游戏《堡垒之夜》的违规行为使数百万玩家面临遭受恶意软件攻击的风险。该事件凸显了正确保护 SQL 数据库安全的重要性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;但这不是一个孤立的问题。&lt;/strong&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 11:30:07 +0000</pubDate>
    </item>
    <item>
      <title>【How Can the Scalability of MySQL Be Improved for BenchmarkSQL TPC-C Testing?】如何提高MySQL的可扩展性以进行BenchmarkSQL TPC-C测试？</title>
      <link>https://dzone.com/articles/mysql-scalability-improvement-for-benchmarksql</link>
      <description>【&lt;h2&gt;Current State of MySQL 5.7&lt;/h2&gt;&#xA;&lt;p&gt;MySQL 5.7 is not ideal in terms of scalability. The following figure illustrates the relationship between TPC-C throughput and concurrency in MySQL 5.7.39 under a specific configuration. This includes setting the transaction isolation level to Read Committed and adjusting the &lt;code&gt;innodb_spin_wait_delay&lt;/code&gt; parameter to mitigate throughput degradation.&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: center;&#34;&gt;&lt;em&gt;Figure 1: Scalability problems in MySQL 5.7.39 during BenchmarkSQL testing&lt;/em&gt;&lt;/p&gt;】&lt;h2&gt;MySQL 5.7 的当前状态&lt;/h2&gt;&#xA;&lt;p&gt;MySQL 5.7 在可扩展性方面并不理想。下图展示了MySQL 5.7.39在特定配置下TPC-C吞吐量与并发的关系。这包括将事务隔离级别设置为“已提交读”并调整 &lt;code&gt;innodb_spin_wait_delay&lt;/code&gt; 参数以缓解吞吐量下降。&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: center;&#34;&gt;&lt;em&gt;图 1：BenchmarkSQL 测试期间 MySQL 5.7.39 中的可扩展性问题&lt;/em&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 13:00:11 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Multi-Cloud and Edge Data Synchronization: A Retail Use Case With KubeMQ’s Java SDK】掌握多云和边缘数据同步：使用 KubeMQ 的 Java SDK 的零售用例</title>
      <link>https://dzone.com/articles/multi-cloud-and-edge-data-synchronization</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In today’s rapidly evolving enterprise landscape, managing and synchronizing data across complex environments is a significant challenge. As businesses increasingly adopt multi-cloud strategies to enhance resilience and avoid vendor lock-in, they are also turning to &lt;a href=&#34;https://dzone.com/articles/exploring-edge-computing-delving-into-amazon-and-f&#34;&gt;edge computing&lt;/a&gt; to process data closer to the source. This combination of multi-cloud and edge computing offers significant advantages, but it also presents unique challenges, particularly in ensuring seamless and reliable &lt;a href=&#34;https://dzone.com/articles/what-is-why-we-need-and-how-to-do-data-synchroniza&#34;&gt;data synchronization&lt;/a&gt; across diverse environments.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;In this post, we’ll explore how the open-source &lt;a href=&#34;https://kubemq.io/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;KubeMQ&lt;/a&gt;’s Java SDK provides an ideal solution for these challenges. We’ll focus on a real-life use case involving a global retail chain that uses KubeMQ to manage inventory data across its multi-cloud and edge infrastructure. Through this example, we’ll demonstrate how the solution enables enterprises to achieve reliable, high-performance data synchronization, transforming their operations.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;在当今快速发展的企业环境中，跨复杂环境管理和同步数据是一项重大挑战。随着企业越来越多地采用多云策略来增强弹性并避免供应商锁定，他们也转向&lt;a href=&#34;https://dzone.com/articles/exploring-edge-computing-delving-into-amazon- -f&#34;&gt;边缘计算&lt;/a&gt;来处理更接近源的数据。多云和边缘计算的这种组合提供了显着的优势，但也带来了独特的挑战，特别是在确保无缝和可靠方面 &lt;a href=&#34;https://dzone.com/articles/what-is-why-we-need -and-how-to-do-data-synchroniza&#34;&gt;跨不同环境的数据同步&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;在这篇文章中，我们将探讨开源 &lt;a href=&#34;https://kubemq.io/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;KubeMQ&lt;/ a&gt; 的 Java SDK 为这些挑战提供了理想的解决方案。我们将重点关注涉及全球零售连锁店的现实用例，该连锁店使用 KubeMQ 跨其多云和边缘基础设施管理库存数据。通过这个例子，我们将展示该解决方案如何帮助企业实现可靠、高性能的数据同步，从而改变他们的运营。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 12:00:14 +0000</pubDate>
    </item>
    <item>
      <title>【Transforming Continuous Delivery With Feature Flags】使用功能标志转变持续交付</title>
      <link>https://dzone.com/articles/transforming-continuous-delivery-with-feature-flags</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;Continuous Delivery is a practice and methodology that helps you build and deploy your software faster so that it can be released to production systems at any time. It facilitates shortening the lifecycle times of various development and operations processes. Effectively applying the concepts of &lt;a href=&#34;https://dzone.com/articles/what-is-ci-cd&#34;&gt;Continuous Integration (CI) and Continuous Deployment (CD)&lt;/a&gt; helps achieve the benefits of the continuous delivery principles, also enabling faster software releases.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;We explore the challenges encountered by software teams implementing CI/CD and demonstrate how &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-feature-flags&#34;&gt;feature flags&lt;/a&gt; can help mitigate these risks.&lt;/p&gt;】&lt;p style=&#34;text-align: left;&#34;&gt;持续交付是一种实践和方法，可帮助您更快地构建和部署软件，以便随时将其发布到生产系统。它有助于缩短各种开发和运营流程的生命周期时间。有效应用&lt;a href=&#34;https://dzone.com/articles/what-is-ci-cd&#34;&gt;持续集成 (CI) 和持续部署 (CD)&lt;/a&gt; 的概念有助于实现以下优势：持续交付原则，还可以实现更快的软件发布。 &lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;我们探讨软件团队实施 CI/CD 时遇到的挑战，并演示如何&lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-feature -flags&#34;&gt;功能标志&lt;/a&gt;可以帮助减轻这些风险。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 16:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Explainable AI (XAI): How Developers Build Trust and Transparency in AI Systems】可解释的人工智能 (XAI)：开发人员如何在人工智能系统中建立信任和透明度</title>
      <link>https://dzone.com/articles/xai-building-trust-and-transparency</link>
      <description>【&lt;p&gt;Developers working on &lt;a href=&#34;https://dzone.com/articles/explainable-ai-making-the-black-box-transparent&#34;&gt;Explainable AI (XAI)&lt;/a&gt; must address several key aspects, such as the problem, boundary scope, and potential solutions of XAI, as well as some specific use cases and benefits that can enhance an organization&#39;s credibility when implementing or leveraging this technology.&lt;/p&gt;&#xA;&lt;p&gt;The more AI is incorporated into different sectors, developers play a critical role in making those systems interpretable and transparent. XAI is crucial in making AI models highly interpretable and debuggable; it also guarantees responsible use of highly complex AI technologies, which should be fair, transparent, and accountable to society&#39;s users and stakeholders.&lt;/p&gt;】&lt;p&gt;开发&lt;a href=&#34;https://dzone.com/articles/explainable-ai-making-the-black-box-transparent&#34;&gt;可解释人工智能 (XAI)&lt;/a&gt; 的开发人员必须解决几个关键方面的问题，例如 XAI 的问题、边界范围和潜在解决方案，以及在实施或利用该技术时可以增强组织可信度的一些具体用例和优势。&lt;/p&gt;&#xA;&lt;p&gt;人工智能越来越多地融入不同领域，开发人员在使这些系统可解释和透明方面发挥着关键作用。 XAI 对于使 AI 模型具有高度可解释性和可调试性至关重要；它还保证负责任地使用高度复杂的人工智能技术，这些技术应该公平、透明，并对社会用户和利益相关者负责。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 17:15:04 +0000</pubDate>
    </item>
    <item>
      <title>【Automatic 1111: Custom Sketch-To-Image API】自动 1111：自定义草图到图像 API</title>
      <link>https://dzone.com/articles/automatic-1111-custom-sketch-to-image-api</link>
      <description>【&lt;p&gt;In this article, we will develop a custom Sketch-to-Image API for converting hand-drawn or digital sketches into photorealistic images using stable diffusion models powered by a ControlNet model. We will extend the Automatic 1111&#39;s &lt;code&gt;txt2img&lt;/code&gt; API to develop this custom workflow.&lt;/p&gt;&#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;Stable Diffusion Web UI (Automatic 1111) running on your local machine. Follow the instructions here if you are starting from scratch.&lt;/li&gt;&#xA; &lt;li&gt;SD APIs Enabled. Follow the &lt;a href=&#34;https://dzone.com/articles/automatic-1111-apis&#34;&gt;instructions on this page&lt;/a&gt; (scroll down to the Enabling APIs section) to enable the APIs if you haven&#39;t already done so.&lt;/li&gt;&#xA; &lt;li&gt;ControlNet extension installed:&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt;Click on the &lt;code&gt;Extensions&lt;/code&gt; tab on Stable Diffusion Web UI.&lt;/li&gt;&#xA;   &lt;li&gt;Navigate to the &lt;code&gt;Install from URL&lt;/code&gt; tab.&lt;/li&gt;&#xA;   &lt;li&gt;Paste the following link in &lt;code&gt;URL for extension&#39;s git repository&lt;/code&gt; input field and click &lt;strong&gt;Install&lt;/strong&gt;.&lt;br&gt;&lt;img data-image=&#34;true&#34; data-new=&#34;false&#34; data-sizeformatted=&#34;105.8 kB&#34; data-mimetype=&#34;image/jpeg&#34; data-creationdate=&#34;1723427463422&#34; data-creationdateformatted=&#34;08/12/2024 01:51 AM&#34; data-type=&#34;temp&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/17848745-controlnet-installation.jpg&#34; data-modificationdate=&#34;null&#34; data-size=&#34;105768&#34; data-name=&#34;controlnet-installation.jpg&#34; data-id=&#34;17848745&#34; data-src=&#34;https://dz2cdn1.dzone.com/storage/temp/17848745-controlnet-installation.jpg&#34; class=&#34;fr-fic fr-dib lazyload&#34; style=&#34;width: 728px;&#34; alt=&#34;Paste link in URL for extension&#39;s git repository input field and click Install.&#34;&gt;&lt;/li&gt;&#xA;   &lt;li&gt;After the successful installation, restart the application by closing and reopening the &lt;code&gt;run.bat&lt;/code&gt; file if you&#39;re a PC user; Mac users may need to run &lt;code&gt;./webui.sh&lt;/code&gt; instead.&lt;/li&gt;&#xA;   &lt;li&gt;After restarting the application, the ControlNet dropdown will become visible under the Generation tab in the txt2img screen.&lt;br&gt;&lt;img data-image=&#34;true&#34; data-new=&#34;false&#34; data-sizeformatted=&#34;10.4 kB&#34; data-mimetype=&#34;image/jpeg&#34; data-creationdate=&#34;1723427606331&#34; data-creationdateformatted=&#34;08/12/2024 01:53 AM&#34; data-type=&#34;temp&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/17848746-controlnet-post-installation.jpg&#34; data-modificationdate=&#34;null&#34; data-size=&#34;10412&#34; data-name=&#34;controlnet-post-installation.jpg&#34; data-id=&#34;17848746&#34; data-src=&#34;https://dz2cdn1.dzone.com/storage/temp/17848746-controlnet-post-installation.jpg&#34; class=&#34;fr-fic fr-dib lazyload&#34; alt=&#34;ControlNet dropdown&#34;&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/li&gt;&#xA; &lt;li&gt;Download and add the following models to Automatic 1111:&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt;&lt;strong&gt;RealVisXL_V4.0_Lightning:&lt;/strong&gt; &lt;a href=&#34;https://huggingface.co/SG161222/RealVisXL_V4.0_Lightning/tree/main&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;HuggingFace: SG161222/RealVisXL_V4.0_Lightning&lt;/a&gt;. Copy this model to the Stable Diffusion models folder which is under the project root directory:&lt;code&gt;/models/Stable-diffusion&lt;/code&gt;&lt;/li&gt;&#xA;   &lt;li&gt;&lt;code&gt;diffusers_xl_canny_full&lt;/code&gt; - &lt;a href=&#34;https://huggingface.co/lllyasviel/sd_control_collection/tree/main&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;HuggingFace: lllyasviel/sd_control_collection&lt;/a&gt;&lt;br&gt;&#xA;    Copy the downloaded model to &lt;code&gt;/extensions/sd-webui-controlnet&lt;/code&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Payload&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Now that we have all our prerequisites in place, let&#39;s build the payload for the&lt;code&gt;/sdapi/v1/txt2img&lt;/code&gt; API.&lt;/p&gt;】&lt;p&gt;在本文中，我们将开发一个自定义 Sketch-to-Image API，用于使用 ControlNet 模型支持的稳定扩散模型将手绘或数字草图转换为逼真的图像。我们将扩展 Automatic 1111 的 &lt;code&gt;txt2img&lt;/code&gt; API 来开发此自定义工作流程。&lt;/p&gt;&#xA;&lt;h2&gt;先决条件&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;在本地计算机上运行的稳定 Diffusion Web UI（自动 1111）。如果您是从头开始，请按照此处的说明进行操作。&lt;/li&gt;&#xA; &lt;li&gt;SD API 已启用。如果您尚未启用 API，请按照&lt;a href=&#34;https://dzone.com/articles/automatic-1111-apis&#34;&gt;此页面上的说明&lt;/a&gt;（向下滚动到“启用 API”部分）启用 API已经这样做了。&lt;/li&gt;&#xA; &lt;li&gt;已安装 ControlNet 扩展：&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt;点击 Stable Diffusion Web UI 上的&lt;code&gt;扩展&lt;/code&gt;选项卡。&lt;/li&gt;&#xA;   &lt;li&gt;导航到&lt;code&gt;从 URL 安装&lt;/code&gt;选项卡。&lt;/li&gt;&#xA;   &lt;li&gt;将以下链接粘贴到&lt;code&gt;扩展程序 git 存储库的 URL&lt;/code&gt; 输入字段中，然后点击&lt;strong&gt;安装&lt;/strong&gt;。&lt;br&gt;&lt;img data-image=&#34;true&#34; data-new=&#34; false&#34; data-sizeformatted=&#34;105.8 kB&#34; data-mimetype=&#34;image/jpeg&#34; data-creationdate=&#34;1723427463422&#34; data-creationdateformatted=&#34;08/12/2024 01:51 AM&#34; data-type=&#34;temp&#34; data- url =“https://dz2cdn1.dzone.com/storage/temp/17848745-controlnet-installation.jpg”数据修改日期=“null”数据大小=“105768”数据名称=“controlnet-installation.jpg” data-id =“17848745”data-src =“https://dz2cdn1.dzone.com/storage/temp/17848745-controlnet-installation.jpg”class =“fr-fic fr-diblazyload”style =“宽度： 728 像素；” alt=&#34;将链接粘贴到扩展的 git 存储库输入字段的 URL 中，然后单击安装。&#34;&gt;&lt;/li&gt;&#xA;   &lt;li&gt;成功安装后，如果您是 PC 用户，请关闭并重新打开 &lt;code&gt;run.bat&lt;/code&gt; 文件来重新启动应用程序； Mac 用户可能需要运行 &lt;code&gt;./webui.sh&lt;/code&gt;。&lt;/li&gt;&#xA;   &lt;li&gt;重新启动应用程序后，ControlNet 下拉列表将在 txt2img 屏幕的“生成”选项卡下可见。&lt;br&gt;&lt;img data-image=&#34;true&#34; data-new=&#34;false&#34; data-sizeformatted=&#34;10.4 kB&#34; data-mimetype=&#34;image/jpeg&#34; data-creationdate=&#34;1723427606331&#34; data-creationdateformatted=&#34;08/12/2024 01:53 AM&#34; data-type=&#34;temp&#34; data-url=&#34;https://dz2cdn1.dzone .com/storage/temp/17848746-controlnet-post-installation.jpg&#34; data-modificationdate=&#34;null&#34; data-size=&#34;10412&#34; data-name=&#34;controlnet-post-installation.jpg&#34; data-id=&#34;17848746 “ data-src =“https://dz2cdn1.dzone.com/storage/temp/17848746-controlnet-post-installation.jpg”class =“fr-fic fr-diblazyload”alt =“ControlNet dropdown”&gt;&lt;/李&gt;&#xA;  &lt;/ul&gt;&lt;/li&gt;&#xA; &lt;li&gt;下载以下模型并将其添加到 Automatic 1111：&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt;&lt;strong&gt;RealVisXL_V4.0_Lightning：&lt;/strong&gt; &lt;a href=&#34;https://huggingface.co/SG161222/RealVisXL_V4.0_Lightning/tree/main&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;HuggingFace ：SG161222/RealVisXL_V4.0_Lightning&lt;/a&gt;。将此模型复制到项目根目录下的Stable Diffusion models文件夹中：&lt;code&gt;/models/Stable-diffusion&lt;/code&gt;&lt;/li&gt;&#xA;   &lt;li&gt;&lt;code&gt;diffusers_xl_canny_full&lt;/code&gt; - &lt;a href=&#34;https://huggingface.co/lllyasviel/sd_control_collection/tree/main&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;HuggingFace：lllyasviel/sd_control_collection&lt;/a&gt;&lt;br &gt;&#xA;    将下载的模型复制到 &lt;code&gt;/extensions/sd-webui-controlnet&lt;/code&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;&lt;strong&gt;有效负载&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;现在我们已经满足了所有先决条件，让我们为 &lt;code&gt;/sdapi/v1/txt2img&lt;/code&gt; API 构建有效负载。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 20:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Exploring Real-Time Data Ingestion Into Snowflake Using CockroachDB, Redpanda, and Kafka Connect】使用 CockroachDB、Redpanda 和 Kafka Connect 探索将实时数据引入 Snowflake</title>
      <link>https://dzone.com/articles/exploring-real-time-data-ingestion-into-snowflake</link>
      <description>【&lt;div dir=&#34;auto&#34;&gt;&#xA; &lt;h2 dir=&#34;auto&#34;&gt;Previous Articles on Snowflake&lt;/h2&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#previous-articles-on-snowflake&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;ul dir=&#34;auto&#34;&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/snowflake-ingestion-using-cockroachdb-and-redpanda&#34;&gt;Tour of Snowflake ingestion using CockroachDB and Redpanda Connect&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/integrating-snowflake-with-trino&#34;&gt;Integrating Snowflake with Trino&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div dir=&#34;auto&#34;&gt;&#xA; &lt;h2 dir=&#34;auto&#34;&gt;Previous Articles on CockroachDB CDC&lt;/h2&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#previous-articles-on-cockroachdb-cdc&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;ul dir=&#34;auto&#34;&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/emitting-protocol-buffers-using-cockroachdb-cdc-qu&#34;&gt;Emitting Protocol Buffers with CockroachDB CDC Queries&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/using-cockroachdb-cdc-with-apache-pulsar&#34;&gt;Using CockroachDB CDC with Apache Pulsar&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/using-cockroachdb-cdc-with-azure-event-hubs&#34; rel=&#34;nofollow&#34;&gt;Using CockroachDB CDC with Azure Event Hubs&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/saas-galore-integrating-cockroachdb-with-confluent&#34; rel=&#34;nofollow&#34;&gt;SaaS Galore: Integrating CockroachDB with Confluent Kafka, FiveTran, and Snowflake&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/using-cockroachdb-cdc-with-confluent-cloud-kafka-a&#34; rel=&#34;nofollow&#34;&gt;Using CockroachDB CDC with Confluent Cloud Kafka and Schema Registry&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/cockroachdb-cdc-using-minio-as-cloud-storage-sink&#34; rel=&#34;nofollow&#34;&gt;CockroachDB CDC using Minio as cloud storage sink&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/cockroachdb-cdc-with-hadoop-ozone-s3-gateway-and-d&#34; rel=&#34;nofollow&#34;&gt;CockroachDB CDC using Hadoop Ozone S3 Gateway as cloud storage sink&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;div dir=&#34;auto&#34;&gt;&#xA; &lt;h2 dir=&#34;auto&#34;&gt;Motivation&lt;/h2&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#motivation&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;p dir=&#34;auto&#34;&gt;This article builds upon the previous discussion in &#34;Tour of Snowflake ingestion using CockroachDB and Redpanda Connect,&#34; where we investigated the process of streaming changefeeds from CockroachDB to Snowflake using Redpanda Connect and Snowpipe in batch mode. Here, we will shift our focus to Kafka Connect and demonstrate how both batch and streaming modes can be utilized for data ingestion into Snowflake.&lt;/p&gt;&#xA;&lt;div dir=&#34;auto&#34;&gt;&#xA; &lt;h2 dir=&#34;auto&#34;&gt;Overview&lt;/h2&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#overview&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;ul dir=&#34;auto&#34;&gt;&#xA; &lt;li&gt;Deploy a CockroachDB cluster with enterprise changefeeds&lt;/li&gt;&#xA; &lt;li&gt;Deploy Snowflake&lt;/li&gt;&#xA; &lt;li&gt;Deploy Kafka Connect&lt;/li&gt;&#xA; &lt;li&gt;Verify&lt;/li&gt;&#xA; &lt;li&gt;Conclusion&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div dir=&#34;auto&#34;&gt;&#xA; &lt;h2 dir=&#34;auto&#34;&gt;Detailed Instructions&lt;/h2&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#detailed-instructions&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;div dir=&#34;auto&#34;&gt;&#xA; &lt;h3 dir=&#34;auto&#34;&gt;Deploy a CockroachDB Cluster With Enterprise Changefeeds&lt;/h3&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#deploy-a-cockroachdb-cluster-with-enterprise-changefeeds&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;p dir=&#34;auto&#34;&gt;Start by either launching a CockroachDB instance or utilizing a managed service.&lt;/p&gt;】&lt;div 目录=“自动”&gt;&#xA; &lt;h2 dir=&#34;auto&#34;&gt;之前关于 Snowflake 的文章&lt;/h2&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#previous-articles-on-snowflake&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;ul 目录=“自动”&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/snowflake-ingestion-using-cockroachdb-and-redpanda&#34;&gt;使用 CockroachDB 和 Redpanda Connect 进行 Snowflake 摄取之旅&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/integrating-snowflake-with-trino&#34;&gt;将 Snowflake 与 Trino 集成&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div 目录=“自动”&gt;&#xA; &lt;h2 dir=&#34;auto&#34;&gt;之前关于 CockroachDB CDC 的文章&lt;/h2&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#previous-articles-on-cockroachdb-cdc&#34;&gt;&lt;/a &gt;&#xA;&lt;/div&gt;&#xA;&lt;ul 目录=“自动”&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/emitting-protocol-buffers-using-cockroachdb-cdc-qu&#34;&gt;使用 CockroachDB CDC 查询发出协议缓冲区&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/using-cockroachdb-cdc-with-apache-pulsar&#34;&gt;将 CockroachDB CDC 与 Apache Pulsar 结合使用&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/using-cockroachdb-cdc-with-azure-event-hubs&#34; rel=&#34;nofollow&#34;&gt;将 CockroachDB CDC 与 Azure 事件中心结合使用&lt;/a&gt;&lt; /里&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/saas-galore-integrating-cockroachdb-with-confluence&#34; rel=&#34;nofollow&#34;&gt;SaaS Galore：将 CockroachDB 与 Confluence Kafka、FiveTran 和 Snowflake 集成&lt; /a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/using-cockroachdb-cdc-with-confluence-cloud-kafka-a&#34; rel=&#34;nofollow&#34;&gt;将 CockroachDB CDC 与 Confluence Cloud Kafka 和架构注册表结合使用&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/cockroachdb-cdc-using-minio-as-cloud-storage-sink&#34; rel=&#34;nofollow&#34;&gt;CockroachDB CDC 使用 Minio 作为云存储接收器&lt;/一个&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/cockroachdb-cdc-with-hadoop-ozone-s3-gateway-and-d&#34; rel=&#34;nofollow&#34;&gt;CockroachDB CDC 使用 Hadoop Ozone S3 网关作为云存储接收器&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;小时&gt;&#xA;&lt;div 目录=“自动”&gt;&#xA; &lt;h2 dir=&#34;auto&#34;&gt;动机&lt;/h2&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#motivation&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;p dir=&#34;auto&#34;&gt;本文基于之前“使用 CockroachDB 和 Redpanda Connect 进行 Snowflake 摄取之旅”中的讨论，其中我们研究了使用 Redpanda Connect 和 Snowpipe 以批处理模式将变更源从 CockroachDB 流式传输到 Snowflake 的过程。在这里，我们将把重点转移到 Kafka Connect 上，并演示如何利用批处理和流模式将数据摄取到 Snowflake 中。&lt;/p&gt;&#xA;&lt;div 目录=“自动”&gt;&#xA; &lt;h2 dir=&#34;auto&#34;&gt;概述&lt;/h2&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#overview&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;ul 目录=“自动”&gt;&#xA; &lt;li&gt;使用企业变更源部署 CockroachDB 集群&lt;/li&gt;&#xA; &lt;li&gt;部署雪花&lt;/li&gt;&#xA; &lt;li&gt;部署 Kafka Connect&lt;/li&gt;&#xA; &lt;li&gt;验证&lt;/li&gt;&#xA; &lt;li&gt;结论&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div 目录=“自动”&gt;&#xA; &lt;h2 dir=&#34;auto&#34;&gt;详细说明&lt;/h2&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#detailed-instructions&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;div 目录=“自动”&gt;&#xA; &lt;h3 dir=&#34;auto&#34;&gt;部署具有企业变更源的 CockroachDB 集群&lt;/h3&gt;&lt;a href=&#34;https://gist.github.com/dbist/3991dd83144eb20d99c6faf815a0ca94#deploy-a-cockroachdb-cluster-with-enterprise-changefeeds&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;p dir=&#34;auto&#34;&gt;首先启动 CockroachDB 实例或使用托管服务。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 19:00:06 +0000</pubDate>
    </item>
  </channel>
</rss>