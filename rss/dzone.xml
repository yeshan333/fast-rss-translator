<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Key Use Cases of the Event-Driven Ansible Webhook Module】事件驱动的Ansible Webhook模块的关键用例</title>
      <link>https://dzone.com/articles/key-use-cases-event-driven-ansible-webhook-module</link>
      <description>【&lt;p&gt;The &lt;code&gt;ansible.eda.webhook&lt;/code&gt; plugin is a powerful Event-Driven Ansible (EDA) tool that listens for incoming HTTP webhook requests and triggers automated workflows based on predefined conditions. It’s highly versatile and can be applied across various industries and IT operations.&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;Key Use Cases&lt;/h2&gt;&#xA;&lt;h3&gt;Automated Incident Response&lt;/h3&gt;&#xA;&lt;p&gt;A major use case for &lt;code&gt;ansible.eda.webhook&lt;/code&gt; is in automated incident response. When monitoring tools like Prometheus, Nagios, or Datadog spot issues or failures, they can send webhook alerts to Ansible, which then automatically runs playbooks to troubleshoot and fix the problem. This could involve restarting services, scaling up infrastructure, or rolling back recent deployments.&amp;nbsp;&lt;/p&gt;】&lt;p&gt; &lt;p&gt; &lt;code&gt; ansible.eda.webhook &lt;/code&gt;插件是一种功能强大的事件驱动的Ansible（EDA）工具，可聆听传入的HTTP Webhook请求，并触发基于预定条件的自动化工作流程。它的通用性高度可以在各个行业和IT运营中应用。 &lt;/p&gt;&#xA;&lt;H2&gt;密钥用例&lt;/h2&gt;&#xA;&lt;H3&gt;自动事件响应&lt;/h3&gt;&#xA;&lt;p&gt; &lt;code&gt; ansible.eda.webhook &lt;/code&gt;的主要用例是自动化事件响应。当监视Prometheus，Nagios或Datadog点问题或失败等工具时，它们可以将Webhook警报发送到Ansible，然后自动运行剧本以进行故障排除和解决问题。这可能涉及重新启动服务，扩大基础架构或退回最近的部署。 &lt;/p&gt;</description>
      <pubDate>Fri, 28 Feb 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Exploring IoT&#39;s Top WebRTC Use Cases】探索物联网的顶级WEBRTC用例</title>
      <link>https://dzone.com/articles/exploring-iots-top-webrtc-use-cases</link>
      <description>【&lt;p&gt;Around the world, 127 new devices are connected to the Internet every second. That translates to 329 million new devices hooked up to the Internet of Things (IoT) every month. The IoT landscape is expanding by the day, and, consequently, novel ways of running an IoT network are also evolving. An emerging area of interest is developing new ways of sharing data between IoT devices, like transmitting a video feed from a surveillance camera to a phone.&lt;/p&gt;&#xA;&lt;p&gt;One well-known way to transmit data is with &lt;a href=&#34;https://dzone.com/articles/webrtc-comprehensive-guide&#34;&gt;Web Real-Time Communication&lt;/a&gt; (WebRTC), a technology that enables web applications and physical devices to capture and stream media, as well as to exchange data between browsers and devices without requiring an intermediary. For developers creating a primarily audio- or video-based application, WebRTC is one of the best options available.&lt;/p&gt;】&lt;p&gt;在世界各地，每秒连接了127个新设备。这意味着每月连接到物联网（物联网）的3.29亿个新设备。物联网景观在一天都在扩展，因此，运行物联网网络的新颖方式也在不断发展。感兴趣的新兴领域是开发新的方法在物联网设备之间共享数据，例如将视频供稿从监视摄像机传输到手机。&lt;/p&gt;&#xA;&lt;p&gt;传输数据的一种众所周知的方法是使用&lt;a href =“ https://dzone.com/articles/webrtc-comprehens-guide”&gt; Web实时通信&lt;/a&gt;（WEBRTC），该技术可以使网络应用程序和物理设备和物理设备捕获和流媒体以及在不需要介绍的数据之间交换数据，以及不需要Intermed intermed intermed。对于创建主要基于音频或视频的应用程序的开发人员，WEBRTC是可用的最佳选项之一。&lt;/p&gt;</description>
      <pubDate>Fri, 28 Feb 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Tree of DevEx: Branching Out and Growing the Developer Experience】Devex的树：分支并增进开发人员的体验</title>
      <link>https://dzone.com/articles/developer-experience-branching-out-and-growing</link>
      <description>【&lt;p data-end=&#34;553&#34; data-start=&#34;106&#34;&gt;&lt;em&gt;Editor&#39;s Note: The following is an infographic written for and published in DZone&#39;s 2025 Trend Report,&amp;nbsp;&lt;/em&gt;&lt;a href=&#34;https://dzone.com/link/2025-tr-devex-contributor-article&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Developer Experience: The Coalescence of Developer Productivity, Process Satisfaction, and Platform Engineering&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p data-end=&#34;553&#34; data-start=&#34;106&#34;&gt;Engineering teams are recognizing the importance of &lt;strong data-end=&#34;190&#34; data-start=&#34;158&#34;&gt;developer experience (DevEx)&lt;/strong&gt; and&lt;strong data-end=&#34;190&#34; data-start=&#34;158&#34;&gt;&amp;nbsp;&lt;/strong&gt;going beyond DevOps tooling to improve workflows, invest in infrastructure, and advocate for developers&#39; needs. By prioritizing things such as internal developer platforms, process automation, platform engineering, and feedback loops, organizations can remove friction from development workflows, and developers gain more control over their systems, teams, and processes.&lt;/p&gt;】&lt;p data-end=&#34;553&#34; data-start=&#34;106&#34;&gt;&lt;em&gt;Editor&#39;s Note: The following is an infographic written for and published in DZone&#39;s 2025 Trend Report, &lt;/em&gt;&lt;a href=&#34;https://dzone.com/link/2025-tr-devex-contributor-article&#34; rel=&#34;noopener noreferrer&#34; target =“ _ blank”&gt; &lt;em&gt;开发人员体验：开发人员生产力，过程满意度和平台工程的合并&lt;/em&gt; &lt;/a&gt;。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p data-end=&#34;553&#34; data-start=&#34;106&#34;&gt;Engineering teams are recognizing the importance of &lt;strong data-end=&#34;190&#34; data-start=&#34;158&#34;&gt;developer experience (DevEx)&lt;/strong&gt; and&lt;strong data-end=&#34;190&#34; data-start=&#34;158&#34;&gt; &lt;/strong&gt;going beyond DevOps tooling to improve workflows, invest in infrastructure, and advocate for developers&#39; needs.通过优先考虑内部开发人员平台，流程自动化，平台工程和反馈循环等内容，组织可以从开发工作流中消除摩擦，并获得对其系统，团队和流程的更多控制。&lt;/p&gt;</description>
      <pubDate>Thu, 27 Feb 2025 22:45:00 +0000</pubDate>
    </item>
    <item>
      <title>【XAI for Fraud Detection Models】XAI用于欺诈检测模型</title>
      <link>https://dzone.com/articles/xai-for-fraud-detection-models</link>
      <description>【&lt;p&gt;One would question, why should I worry about what is happening behind the scenes as long as my model is able to deliver high-precision results for me?&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In this article, we dive deep into the aspect of reasoning and try to answer the question above. More importantly, we will understand how it can help us to build greater insights into evolving fraud patterns.&lt;/p&gt;】&lt;p&gt;一个人会质疑，为什么我应该担心幕后发生的事情，只要我的模型能够为我提供高精度结果？ &lt;/p&gt;&#xA;&lt;p&gt;在本文中，我们深入了解推理的方面，并尝试回答上述问题。更重要的是，我们将了解它如何帮助我们建立对不断发展的欺诈模式的更多见解。&lt;/p&gt;</description>
      <pubDate>Fri, 28 Feb 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Exploring Embeddings API With Java and Spring AI】与Java和Spring AI一起探索嵌入API</title>
      <link>https://dzone.com/articles/exploring-embeddings-api-with-java-and-spring-ai</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Hi community!&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;This is my second article in a series of introductions to Spring AI. &lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;You may find the first one, where I explained how to generate images using Spring AI and OpenAI DALL-E 3 models, &lt;a href=&#34;https://dzone.com/articles/spring-ai-generate-images-openai-dalle&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/span&gt; Today, we will create simple applications using embeddings API and Spring AI.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;嗨社区！ &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;这是我在Spring AI的一系列介绍中的第二篇文章。 &lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;You may find the first one, where I explained how to generate images using Spring AI and OpenAI DALL-E 3 models, &lt;a href=&#34;https://dzone.com/articles/spring-ai-generate-images-openai-dalle&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/span&gt; Today, we will create simple applications使用嵌入式API和弹簧AI。 &lt;/p&gt;</description>
      <pubDate>Fri, 28 Feb 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Doris Lakehouse Integration: A New Approach to Data Analysis】Doris Lakehouse整合：一种新的数据分析方法</title>
      <link>https://dzone.com/articles/doris-lakehouse-integration</link>
      <description>【&lt;p&gt;In the wave of big data, the data volume of enterprises is growing explosively, and the requirements for data processing and analysis are becoming increasingly complex. Traditional databases, data warehouses, and data lakes operate separately, resulting in a significant reduction in data utilization efficiency.&lt;/p&gt;&#xA;&lt;p&gt;At this time, the concept of lakehouse integration emerged, like a timely rain, bringing new possibilities for enterprise data management. Today, let&#39;s talk about lakehouse integration based on &lt;a href=&#34;https://dzone.com/articles/guide-to-building-and-debugging-apache-doris&#34;&gt;Doris&lt;/a&gt; and see how it solves the problems of data management and enables enterprises to play with big data!&lt;/p&gt;】&lt;p&gt;在大数据浪潮中，企业的数据量正在爆炸性增长，数据处理和分析的要求变得越来越复杂。传统的数据库，数据仓库和数据湖湖单独运行，从而大大降低了数据利用效率。&lt;/p&gt;&#xA;&lt;p&gt;目前，湖泊整合的概念像及时的降雨一样出现，为企业数据管理带来了新的可能性。今天，让我们来谈谈基于&lt;a href =“ https://dzone.com/articles/guide-to-building-and-debugging-apache-doris”&gt; doris &lt;/a&gt;的湖泊整合。</description>
      <pubDate>Fri, 28 Feb 2025 20:15:00 +0000</pubDate>
    </item>
    <item>
      <title>【Loss Functions: The Key to Improving AI Predictions】损失功能：改善AI预测的关键</title>
      <link>https://dzone.com/articles/understanding-loss-functions-the-key-to-improving-1</link>
      <description>【&lt;h2 data-end=&#34;519&#34; data-start=&#34;102&#34;&gt;How Good Is an AI Model at Forecasting?&lt;/h2&gt;&#xA;&lt;p data-end=&#34;519&#34; data-start=&#34;102&#34;&gt;We can put an actual number on it. In machine learning, a loss function tracks the degree of error in the output from an AI model by quantifying the difference or the loss between a predicted value and the actual value. If the model’s predictions are accurate, the difference between these two numbers — the loss — is small. If the predictions are inaccurate, the loss is larger.&lt;/p&gt;&#xA;&lt;p data-end=&#34;1061&#34; data-start=&#34;521&#34;&gt;For example, a colleague built an AI model to forecast how many views his videos would receive on YouTube. The model was fed YouTube titles and forecasted the number of views the video would receive in its first week. When comparing the model’s forecasts to the actual number of views, the predictions were not very accurate. The model predicted that the cold brew video would bomb and that the pour-over guide video would be a hit, but this wasn’t the case. This is a hard problem to solve, and loss functions can help improve the model.&lt;/p&gt;】&lt;h2 data-end =“ 519” data-start =“ 102”&gt;预测的AI模型如何好？&lt;/h2&gt;&#xA;&lt;p data-end =“ 519” data-start =“ 102”&gt;我们可以在其上放置一个实际号码。在机器学习中，损耗函数通过量化预测值和实际值之间的差异或损失来跟踪AI模型输出的误差程度。如果模型的预测是准确的，那么这两个数字之间的差异很小。如果预测不准确，则损失更大。&lt;/p&gt;&#xA;&lt;p data-end =“ 1061” data-start =“ 521”&gt;例如，同事构建了一个AI模型，以预测他的视频在YouTube上会收到多少视图。该模型获得了YouTube的标题，并预测了视频在第一周内将获得的观点数量。将模型的预测与实际视图数量进行比较时，预测不是很准确。该模型预测，冷啤酒视频将轰炸，并且倾倒指南视频会受到打击，但事实并非如此。这是一个很难解决的问题，损失功能可以帮助改善模型。&lt;/p&gt;</description>
      <pubDate>Fri, 28 Feb 2025 12:15:02 +0000</pubDate>
    </item>
    <item>
      <title>【Grafana Loki Fundamentals and Architecture】Grafana Loki的基础和建筑</title>
      <link>https://dzone.com/articles/grafana-loki-fundamentals-and-architecture</link>
      <description>【&lt;p&gt;Grafana Loki is a horizontally scalable, highly available log aggregation system. It is designed for simplicity and cost-efficiency. Created by Grafana Labs in 2018, Loki has rapidly emerged as a compelling alternative to traditional logging systems, particularly for cloud-native and Kubernetes environments.&lt;/p&gt;&#xA;&lt;p&gt;Loki can provide a comprehensive log journey. We can select the right log streams and then filter to focus on the relevant logs. We can then parse structured log data to be formatted for our customized analysis needs. Logs can also be transformed appropriately for presentation, for example,&lt;a&gt;&lt;/a&gt; or further pipeline processing.&lt;/p&gt;】&lt;p&gt; Grafana Loki是一种水平可扩展的，高度可用的日志聚合系统。它是为了简单和成本效率而设计的。 Loki由Grafana Labs于2018年创建，已迅速成为传统伐木系统的引人注目的替代方案，尤其是对于Cloud-Native和Kubernetes环境。&lt;/p&gt;&#xA;&lt;p&gt; loki可以提供全面的日志旅程。我们可以选择正确的日志流，然后过滤以关注相关日志。然后，我们可以解析为我们的自定义分析需求进行格式化的结构化日志数据。也可以适当地转换日志以进行演示，例如&lt;a&gt; &lt;/a&gt;或其他管道处理。&lt;/p&gt;</description>
      <pubDate>Fri, 28 Feb 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Modern ETL Architecture: dbt on Snowflake With Airflow】现代ETL体系结构：DBT在雪花上与气流</title>
      <link>https://dzone.com/articles/dbt-on-snowflake-with-airflow</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;The modern discipline of data engineering considers ETL (extract, transform, load) one of the processes that must be done to manage and transform data effectively. This article explains how to create an ETL pipeline that can scale and uses dbt (Data Build Tool) for transformation, Snowflake as a data warehouse, and Apache Airflow for orchestration.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;The article will propose the architecture of the pipeline, provide the folder structure, and describe the deployment strategy that will help optimize data flows. In the end, you will have a clear roadmap on how to implement a scalable ETL solution with these powerful tools.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;数据工程的现代学科认为ETL（提取，变换，加载）是有效管理和转换数据的过程之一。本文解释了如何创建可以扩展和使用DBT（数据构建工具）进行转换，雪花作为数据仓库的ETL管道以及用于编排的Apache气流。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;文章将提出管道架构，提供文件夹结构，并描述将有助于优化数据流的部署策略。最后，您将在如何使用这些强大的工具实现可扩展的ETL解决方案方面有一个清晰的路线图。&lt;/p&gt;</description>
      <pubDate>Thu, 27 Feb 2025 23:15:00 +0000</pubDate>
    </item>
    <item>
      <title>【Thread-Safety Pitfalls in XML Processing】XML处理中的线程安全陷阱</title>
      <link>https://dzone.com/articles/thread-safety-pitfalls-in-xml-processing</link>
      <description>【&lt;p&gt;Do you think the method &lt;code&gt;children()&lt;/code&gt; below is thread-safe?&lt;/p&gt;&#xA;&lt;div class=&#34;codeMirror-wrapper&#34; contenteditable=&#34;false&#34;&gt;&#xA; &lt;div contenteditable=&#34;false&#34;&gt;&#xA;  &lt;div class=&#34;codeHeader&#34;&gt;&#xA;   &lt;div class=&#34;nameLanguage&#34;&gt;&#xA;    Java&#xA;   &lt;/div&gt;&lt;i class=&#34;icon-cancel-circled-1 cm-remove&#34;&gt;&amp;nbsp;&lt;/i&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;codeMirror-code--wrapper&#34; data-code=&#34;import java.util.stream.Stream;&#xA;import org.w3c.dom.Node;&#xA;import org.w3c.dom.NodeList;&#xA;&#xA;public final class SafeXml {&#xA;  &#xA;  private final Node node;&#xA;  &#xA;  SafeXml(final Node node) {&#xA;    this.node = node.cloneNode(true);&#xA;  }&#xA;&#xA;  public Stream&lt;SafeXml&gt; children() {&#xA;    NodeList nodes = this.node.getChildNodes();&#xA;    int length = nodes.getLength();&#xA;    return Stream.iterate(0, idx -&gt; idx + 1)&#xA;      .limit(length)&#xA;      .map(nodes::item)&#xA;      .map(SafeXml::new);&#xA;  }&#xA;}&#34; data-lang=&#34;text/x-java&#34;&gt;&#xA;   &lt;pre&gt;&lt;code lang=&#34;text/x-java&#34;&gt;import java.util.stream.Stream;&#xA;import org.w3c.dom.Node;&#xA;import org.w3c.dom.NodeList;&#xA;&#xA;public final class SafeXml {&#xA;  &#xA;  private final Node node;&#xA;  &#xA;  SafeXml(final Node node) {&#xA;    this.node = node.cloneNode(true);&#xA;  }&#xA;&#xA;  public Stream&amp;lt;SafeXml&amp;gt; children() {&#xA;    NodeList nodes = this.node.getChildNodes();&#xA;    int length = nodes.getLength();&#xA;    return Stream.iterate(0, idx -&amp;gt; idx + 1)&#xA;      .limit(length)&#xA;      .map(nodes::item)&#xA;      .map(SafeXml::new);&#xA;  }&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&lt;br&gt;&#xA; Of course, since I’m asking this question, the answer is &lt;strong&gt;no&lt;/strong&gt;. For those who haven’t had the &lt;em&gt;pleasure&lt;/em&gt; of working with XML in Java (yes, it’s still alive), the &lt;code&gt;org.w3c.dom&lt;/code&gt; package is not thread-safe. There are no guarantees, even for just reading data from an XML document in a multi-threaded environment.&lt;/p&gt;】&lt;p&gt;您认为方法&lt;code&gt; childror（）&lt;/code&gt;是线程安全吗？&lt;/p&gt;&#xA;&lt;div class =“ codemirror-wrapper” pontrentediable =“ false”&gt;&#xA; &lt;div contenteaditable =“ false”&gt;&#xA;  &lt;div class =“ codeheader”&gt;&#xA;   &lt;div class =“ namelanguage”&gt;&#xA;    爪哇&#xA;   &lt;/div&gt; &lt;i class =“ icon-cancel-circled-1 cm-remove”&gt; &lt;/i&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class =“ codemirror-code  -  wrapper” data-code =“ import java.util.stream.stream;&#xA;导入org.w3c.dom.node;&#xA;导入org.w3c.dom.nodelist;&#xA;&#xA;公共最终类Safexml {&#xA;  &#xA;  私有最终节点节点；&#xA;  &#xA;  safexml（最终节点节点）{&#xA;    this.node = node.clonenode（true）;&#xA;  }&#xA;&#xA;  public stream &lt;safexml&gt;儿童（）{&#xA;    Nodelist节点= this.node.getChildNodes（）;&#xA;    int length = nodes.getLength（）;&#xA;    返回stream.iterate（0，idx-&gt; idx + 1）&#xA;      限制（长度）&#xA;      .map（节点::项目）&#xA;      .map（safexml :: new）;&#xA;  }&#xA;}“ data-lang =” text/x-java&gt;&#xA;   &lt;pre&gt; &lt;code lang =“ text/x-java”&gt;导入java.util.stream.stream;&#xA;导入org.w3c.dom.node;&#xA;导入org.w3c.dom.nodelist;&#xA;&#xA;公共最终类Safexml {&#xA;  &#xA;  私有最终节点节点；&#xA;  &#xA;  safexml（最终节点节点）{&#xA;    this.node = node.clonenode（true）;&#xA;  }&#xA;&#xA;  public stream &lt;safexml&gt;儿童（）{&#xA;    Nodelist节点= this.node.getChildNodes（）;&#xA;    int length = nodes.getLength（）;&#xA;    返回stream.iterate（0，idx-&gt; idx + 1）&#xA;      限制（长度）&#xA;      .map（节点::项目）&#xA;      .map（safexml :: new）;&#xA;  }&#xA;} &lt;/code&gt; &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; &lt;br&gt;&#xA; 当然，由于我问这个问题，答案是&lt;strong&gt; no &lt;/strong&gt;。对于那些没有在Java中与XML合作的人（是的，它仍然还活着），&lt;code&gt; org.w3c.dom &lt;/code&gt;软件包不是线程安全。也没有保证，即使仅在多线程环境中从XML文档中读取数据。&lt;/p&gt;</description>
      <pubDate>Fri, 28 Feb 2025 13:00:02 +0000</pubDate>
    </item>
  </channel>
</rss>