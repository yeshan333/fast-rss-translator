<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【How To Convert Common Documents to PNG Image Arrays in Java】如何在 Java 中将普通文档转换为 PNG 图像数组</title>
      <link>https://dzone.com/articles/how-to-convert-common-documents-to-png-arrays</link>
      <description>【&lt;p&gt;In this article, we’ll learn how to easily convert a wide variety of common document formats to PNG image arrays using a web API in Java. Before we get to the demonstration portion of this article, we’ll first review the common logic behind converting documents to less flexible formats, and we’ll ultimately discuss the benefits &lt;a href=&#34;https://dzone.com/articles/how-to-convert-a-pdf-to-png-or-jpg-in-java&#34;&gt;PNG format&lt;/a&gt; offers over other common formats like PDF or JPG.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Why Convert Documents To Inflexible Formats?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;File formats optimized for document editing and manipulation typically aren’t optimized for efficiency in other scenarios. There’s a long list of arguments to be made in favor of converting such documents to a static format (&lt;a href=&#34;https://dzone.com/articles/how-to-convert-odf-files-to-pdf-in-java&#34;&gt;like PDF&lt;/a&gt;) for any scenario other than document editing and manipulation.&lt;/p&gt;】&lt;p&gt;在本文中，我们将学习如何使用 Java 中的 Web API 将各种常见文档格式轻松转换为 PNG 图像数组。在进行本文的演示部分之前，我们将首先回顾一下将文档转换为不太灵活的格式背后的常见逻辑，最后我们将讨论其好处&lt;a href=&#34;https://dzone.com/articles/ how-to-convert-a-pdf-to-png-or-jpg-in-java&#34;&gt;PNG 格式&lt;/a&gt; 优于 PDF 或 JPG 等其他常见格式。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;为什么要将文档转换为不灵活的格式？&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;针对文档编辑和操作进行优化的文件格式通常不会针对其他情况下的效率进行优化。有很多论点支持将此类文档转换为静态格式（&lt;a href=&#34;https://dzone.com/articles/how-to-convert-odf-files-to-pdf-in -java&#34;&gt;像 PDF&lt;/a&gt;）适用于除文档编辑和操作之外的任何场景。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 14:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【An Introduction to GraphQL: Simplifying Data Fetching With Real-World Examples】GraphQL 简介：通过实际示例简化数据获取</title>
      <link>https://dzone.com/articles/understanding-graphql-an-introduction</link>
      <description>【&lt;h2&gt;What Is GraphQL?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/why-and-when-to-use-graphql-1&#34;&gt;GraphQL&lt;/a&gt; is a query language for your APIs, as well as a runtime for fulfilling those queries with your existing data. In simple words, you describe your data using a &lt;a href=&#34;https://dzone.com/articles/designing-your-first-graphql-schema&#34;&gt;schema&lt;/a&gt;; you ask for only what you want, and in turn, you get predictable results. By leveraging this technology, it empowers the client to request precisely what they require, according to the defined schema and query. People widely use &lt;strong&gt;GraphQL&lt;/strong&gt; as an alternative to the &lt;a href=&#34;https://dzone.com/articles/developing-rest-apis&#34;&gt;&lt;strong&gt;REST API&lt;/strong&gt;&lt;/a&gt; architecture due to its growing popularity.&lt;/p&gt;&#xA;&lt;h2&gt;Key Features of GraphQL&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;&lt;strong&gt;Strongly typed schema:&amp;nbsp;&lt;/strong&gt;GraphQL employs a schema to specify the categories of data that are queryable. This schema functions as a contractual agreement between the client and server, guaranteeing a clear understanding of the requested data and its expected return.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Single endpoint&lt;/strong&gt;: GraphQL APIs use a single endpoint for all queries and mutations, unlike REST APIs.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Hierarchical&lt;/strong&gt;: GraphQL client queries are similar to the JSON data returned by the API, making it simple and intuitive while making the network API call and understanding complex data structures.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Client-specified queries&lt;/strong&gt;: Web or mobile clients have the leverage to specify exactly what they need in terms of data, which reduces the amount of data transferred over the network and improves the overall application performance.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Real-time capabilities&lt;/strong&gt;: With GraphQL subscriptions, clients can receive real-time updates to data.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;A Simple Example of GraphQL&lt;/h2&gt;&#xA;&lt;p&gt;Here is a simple example to demonstrate how GraphQL works. Suppose we have a simple GraphQL server that manages information about books and authors.&lt;/p&gt;】&lt;h2&gt;什么是 GraphQL？&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/why-and-when-to-use-graphql-1&#34;&gt;GraphQL&lt;/a&gt; 是 API 的一种查询语言，也是一种使用现有数据完成这些查询的运行时。简而言之，您使用 &lt;a href=&#34;https://dzone.com/articles/designing-your-first-graphql-schema&#34;&gt;架构&lt;/a&gt; 描述您的数据；你只要求你想要的，反过来，你会得到可预测的结果。通过利用这项技术，它使客户能够根据定义的模式和查询准确地请求他们需要的内容。人们广泛使用 &lt;strong&gt;GraphQL&lt;/strong&gt; 作为 &lt;a href=&#34;https://dzone.com/articles/developing-rest-apis&#34;&gt;&lt;strong&gt;REST API&lt;/strong&gt;&lt;/a 的替代品&gt; 建筑由于其日益流行。&lt;/p&gt;&#xA;&lt;h2&gt;GraphQL 的主要特性&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;&lt;strong&gt;强类型架构：&lt;/strong&gt;GraphQL 使用架构来指定可查询的数据类别。该架构充当客户端和服务器之间的合同协议，保证清楚地了解所请求的数据及其预期返回。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;单一端点&lt;/strong&gt;：与 REST API 不同，GraphQL API 对所有查询和变更使用单一端点。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;分层&lt;/strong&gt;：GraphQL 客户端查询类似于 API 返回的 JSON 数据，在进行网络 API 调用和理解复杂数据结构的同时变得简单直观。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;客户端指定的查询&lt;/strong&gt;：Web 或移动客户端可以准确指定他们所需的数据，从而减少通过网络传输的数据量并提高整体应用程序性能。 &lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;实时功能&lt;/strong&gt;：通过 GraphQL 订阅，客户端可以接收数据的实时更新。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;GraphQL 的简单示例&lt;/h2&gt;&#xA;&lt;p&gt;这是一个简单的示例来演示 GraphQL 的工作原理。假设我们有一个简单的 GraphQL 服务器来管理有关书籍和作者的信息。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Feature Flag Tools to Confidently Release New Features】用于自信地发布新功能的功能标记工具</title>
      <link>https://dzone.com/articles/feature-flag-tools-to-confidently-release</link>
      <description>【&lt;p&gt;Feature flags offer an excellent way to quickly turn off and on product changes by enabling you to remove and add the code in the software quickly. Marketers or product managers can choose a time and moment to make a feature or function live to win that aha moment.&lt;/p&gt;&#xA;&lt;p&gt;The feature flags are helpful to various departments, including marketing, product, testing, CROs, and development. The number of feature flags can rise quickly as the team realizes their helpfulness and begins to utilize them. To avoid the mismanagement it may create, you need feature flag platforms. A comprehensive space where you can place all your feature flags and manage, modify, and delete them.&lt;/p&gt;】&lt;p&gt;功能标志提供了一种快速关闭和打开产品更改的绝佳方法，使您能够快速删除和添加软件中的代码。营销人员或产品经理可以选择一个时间和时刻来启用某个特性或功能，以赢得顿悟时刻。&lt;/p&gt;&#xA;&lt;p&gt;功能标志对各个部门都有帮助，包括营销、产品、测试、CRO 和开发。当团队意识到功能标志的有用性并开始使用它们时，功能标志的数量可能会迅速增加。为了避免它可能造成的管理不善，您需要功能标志平台。一个综合空间，您可以在其中放置所有功能标志并管理、修改和删除它们。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How To Use WebComponents Inside Phoenix LiveView】如何在 Phoenix LiveView 中使用 WebComponents</title>
      <link>https://dzone.com/articles/how-to-use-webcomponents-inside-phoenix-liveview</link>
      <description>【&lt;p&gt;On August 6, 1991, Berners-Lee published the first website. Yet, today — almost 33 years later, it&#39;s harder than ever to build user interfaces for web apps, and we still have no single standardized way to do that. There&#39;s a good reason for that — we simply don&#39;t know what we may need upfront. When an industrial architect designs a building, he knows his limits — they are defined by physics. But when a web designer creates and describes UI — the possibilities are limitless. And that&#39;s a problem for any standardization process.&lt;/p&gt;&#xA;&lt;p&gt;The Web is evolving so fast, that we can&#39;t get used to one set of patterns as new ones emerge, and we drop whatever we are working on to embrace new trendy ideas. In fact, the speed of evolution is so fast, that sometimes we drop projects halfway through to rewrite them using a cool new architecture, library, or framework, breaking deadlines, and failing clients and end users in the process. We are striving to provide our users with the best possible experience, be competitive in the market, and also always stay up to date with modern tech.&lt;/p&gt;】&lt;p&gt;1991 年 8 月 6 日，伯纳斯-李发布了第一个网站。然而，在近 33 年后的今天，为 Web 应用程序构建用户界面比以往任何时候都更加困难，而且我们仍然没有单一的标准化方法来做到这一点。这是有充分理由的——我们只是不知道我们预先需要什么。当工业建筑师设计一座建筑时，他知道自己的极限——它们是由物理学定义的。但是，当网页设计师创建并描述 UI 时，可能性是无限的。这对于任何标准化流程来说都是一个问题。&lt;/p&gt;&#xA;&lt;p&gt;网络发展得如此之快，当新的模式出现时，我们无法适应一套模式，我们会放弃正在做的任何事情，去拥抱新的流行想法。事实上，发展的速度是如此之快，以至于有时我们会中途放弃项目，使用很酷的新架构、库或框架重写它们，从而打破了最后期限，并在此过程中让客户和最终用户失败。我们致力于为用户提供尽可能最佳的体验，在市场上具有竞争力，并始终与现代技术保持同步。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AI Agentic 101: Understanding Artificial Intelligence Agents】AI Agentic 101：了解人工智能代理</title>
      <link>https://dzone.com/articles/ai-agentic-101-understanding-ai-agents</link>
      <description>【&lt;p&gt;What is &lt;a href=&#34;https://dzone.com/articles/AIAgents&#34;&gt;agentic AI&lt;/a&gt; and how are these autonomous systems revolutionizing industries? How does AI automation of complex tasks improve productivity and facilitate smarter decisions? Why should you need to understand this cutting-edge technology now?&lt;/p&gt;&#xA;&lt;p&gt;The emergence of the term &lt;strong&gt;&#39;Agentic AI&#39;&amp;nbsp;&lt;/strong&gt;on the internet around 2024 marks a pivotal shift in the discourse on artificial intelligence.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;什么是&lt;a href=&#34;https://dzone.com/articles/AIAgents&#34;&gt;代理人工智能&lt;/a&gt;以及这些自主系统如何彻底改变行业？复杂任务的人工智能自动化如何提高生产力并促进更明智的决策？为什么您现在就需要了解这项尖端技术？&lt;/p&gt;&#xA;&lt;p&gt;2024 年左右，&lt;strong&gt;“代理人工智能”&lt;/strong&gt;一词在互联网上的出现标志着人工智能讨论的关键转变。 &lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AWS CDK: Infrastructure as Abstract Data Types, Part 2】AWS CDK：基础设施作为抽象数据类型，第 2 部分</title>
      <link>https://dzone.com/articles/aws-cdk-infrastructure-as-abstract-data-types-pt-2</link>
      <description>【&lt;p&gt;If you&#39;re a &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; software developer and you weren&#39;t living on the planet Mars during these last years, then you certainly know what &lt;a href=&#34;https://dzone.com/refcardz/quarkus-1&#34;&gt;Quarkus&lt;/a&gt; is. And just in case you don&#39;t, you may find it out &lt;a href=&#34;https://quarkus.io/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;With Quarkus, the field of enterprise &lt;a href=&#34;https://dzone.com/refcardz/introduction-to-cloud-native-java&#34;&gt;cloud-native applications development&lt;/a&gt; has never been so comfortable and it never took advantage of such a friendly and professional working environment. The Internet abounds with posts and articles explaining why and how Quarkus is a must for the enterprise, cloud-native software developer. And of course, &lt;a href=&#34;https://dzone.com/articles/aws-cdk-infrastructure-as-abstract-data-types&#34;&gt;CDK applications&lt;/a&gt; aren&#39;t on the sidelines: on the opposite, they can greatly take advantage of the Quarkus features to become smaller, faster, and more aligned with requirements nowadays.&lt;/p&gt;】&lt;p&gt;如果您是一名 &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; 软件开发人员，并且在过去的几年里您并不生活在火星上，那么您肯定知道 &lt;a href=&#34;https://dzone.com/refcardz/quarkus-1&#34;&gt;Quarkus&lt;/a&gt; 是什么。如果您不这样做，您可以在&lt;a href=&#34;https://quarkus.io/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;此处&lt;/a&gt;找到它。&lt;/p&gt;&#xA;&lt;p&gt;有了 Quarkus，企业&lt;a href=&#34;https://dzone.com/refcardz/introduction-to-cloud-native-java&#34;&gt;云原生应用程序开发&lt;/a&gt;领域从未如此舒适而且它从未利用过如此友好和专业的工作环境。互联网上有很多帖子和文章解释 Quarkus 为何以及如何成为企业、云原生软件开发人员的必需品。当然，&lt;a href=&#34;https://dzone.com/articles/aws-cdk-infrastruct-as-abstract-data-types&#34;&gt;CDK 应用程序&lt;/a&gt;并不是袖手旁观：相反，他们可以极大地利用 Quarkus 的功能来变得更小、更快、更符合当今的需求。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【A Comprehensive Guide to MLflow for Machine Learning Lifecycle Management】用于机器学习生命周期管理的 MLflow 综合指南</title>
      <link>https://dzone.com/articles/from-novice-to-advanced-in-mlflow-a-comprehensive</link>
      <description>【&lt;p data-line=&#34;2&#34; dir=&#34;auto&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/how-to-setupinstall-mlflow-amp-get-started&#34;&gt;MLflow&lt;/a&gt; is an open-source platform tailored to handle the whole lifecycle of a &lt;a href=&#34;https://dzone.com/articles/mastering-the-art-of-building-complex-machine-lear&#34;&gt;machine learning process&lt;/a&gt;. This guide, starting from novice and ascending to advanced expert, will cover all the vital features while utilizing &lt;a href=&#34;https://dzone.com/articles/python-tutorial-for-beginners-a-comprehensive-guid&#34;&gt;Python code&lt;/a&gt;. By the end of this guide, you will have a comprehensive understanding of MLflow and will be able to manage experiments, package code, manage models, and deploy them.&lt;/p&gt;&#xA;&lt;h2 data-line=&#34;4&#34; dir=&#34;auto&#34;&gt;Introduction to MLflow&lt;/h2&gt;&#xA;&lt;h3 data-line=&#34;6&#34; dir=&#34;auto&#34;&gt;Setting up MLflow&lt;/h3&gt;&#xA;&lt;p data-line=&#34;8&#34; dir=&#34;auto&#34;&gt;From: “MLflow Tracking” to “Querying experiments”&lt;/p&gt;】&lt;p data-line=&#34;2&#34; dir=&#34;auto&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/how-to-setupinstall-mlflow-amp-get-started&#34;&gt;MLflow&lt;/a&gt;是一个开源平台，专门用于处理&lt;a href=&#34;https://dzone.com/articles/mastering-the-art-of-building-complex-machine-lear&#34;&gt;机器学习过程&lt; /a&gt;.本指南从新手开始，一直到高级专家，将涵盖使用 &lt;a href=&#34;https://dzone.com/articles/python-tutorial-for-beginners-a-compressive-guid&#34;&gt; 时的所有重要功能Python 代码&lt;/a&gt;。读完本指南后，您将全面了解 MLflow，并能够管理实验、打包代码、管理模型和部署它们。&lt;/p&gt;&#xA;&lt;h2 data-line=&#34;4&#34; dir=&#34;auto&#34;&gt;MLflow 简介&lt;/h2&gt;&#xA;&lt;h3 data-line=&#34;6&#34; dir=&#34;auto&#34;&gt;设置 MLflow&lt;/h3&gt;&#xA;&lt;p data-line=&#34;8&#34; dir=&#34;auto&#34;&gt;从：“MLflow Tracking”到“查​​询实验”&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Poetry Explained: Perils of the Unpinned Dependencies】诗歌解释：未固定依赖的危险</title>
      <link>https://dzone.com/articles/poetry-explained-perils-of-the-unpinned</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Imagine this: You are days away from a release, and your Python codebase is versioned, tagged, and marked as a Release Candidate. Hours from the release, out of nowhere appears a BUG! You set up a War Room, dig through the logs and the code, the team is struggling…and then it hits you: A DEPENDENCY UPDATE!&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;A seemingly minor version bump in a library your code depends on, introduced a breaking change, causing your cautiously crafted codebase into disarray. This problem compounds itself when our project relies on multiple libraries which in turn have their own set of dependencies. In such cases, a single incompatible update can trigger an avalanche of conflicts leading to “Dependency Hell.”&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;想象一下：距离发布还有几天，您的 Python 代码库已被版本控制、标记并标记为候选发布。发布几个小时后，突然出现一个BUG！你建立了一个作战室，挖掘日志和代码，团队正在苦苦挣扎……然后你突然意识到：依赖项更新！ &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;您的代码所依赖的库中看似次要的版本冲突引入了重大更改，导致您精心制作的代码库陷入混乱。当我们的项目依赖于多个库而这些库又具有自己的一组依赖项时，这个问题就会变得更加复杂。在这种情况下，单个不兼容的更新可能会引发大量冲突，导致“依赖地狱”。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Dynamic Watermarking With IMGProxy and Apache APISIX】使用 IMGProxy 和 Apache APISIX 进行动态水印</title>
      <link>https://dzone.com/articles/dynamic-watermarking-with-imgproxy-and-apache-apis</link>
      <description>【&lt;p&gt;Last week, I described &lt;a href=&#34;https://blog.frankel.ch/dynamic-watermarking/1/&#34;&gt;how to add a dynamic watermark to your images on the JVM&lt;/a&gt;. I didn&#39;t find any library, so I had to develop the feature, or, more precisely, an embryo of a feature, by myself. Depending on your tech stack, you must search for an existing library or roll up your sleeves. For example, Rust offers such an out-of-the-box library. Worse, this approach might be impossible to implement if you don&#39;t have access to the source image.&lt;/p&gt;&#xA;&lt;p&gt;Another alternative is to use ready-made components, namely &lt;a href=&#34;https://imgproxy.net/&#34;&gt;imgproxy&lt;/a&gt; and &lt;a href=&#34;https://apisix.apache.org/&#34;&gt;Apache APISIX&lt;/a&gt;. I already combined them to &lt;a href=&#34;https://blog.frankel.ch/resize-images-on-the-fly/&#34;&gt;resize images on-the-fly&lt;/a&gt;.&lt;/p&gt;】&lt;p&gt;上周，我描述了&lt;a href=&#34;https://blog.frankel.ch/dynamic-watermarking/1/&#34;&gt;如何向 JVM 上的图像添加动态水印&lt;/a&gt;。我没有找到任何库，所以我必须自己开发该功能，或者更准确地说，开发一个功能的雏形。根据您的技术堆栈，您必须搜索现有库或卷起袖子。例如，Rust 就提供了这样一个开箱即用的库。更糟糕的是，如果您无权访问源图像，这种方法可能无法实现。&lt;/p&gt;&#xA;&lt;p&gt;另一种选择是使用现成的组件，即 &lt;a href=&#34;https://imgproxy.net/&#34;&gt;imgproxy&lt;/a&gt; 和 &lt;a href=&#34;https://apisix.apache.org/ &#34;&gt;Apache APISIX&lt;/a&gt;。我已经将它们组合到&lt;a href=&#34;https://blog.frankel.ch/resize-images-on-the-fly/&#34;&gt;即时调整图像大小&lt;/a&gt;。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 16:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Full-Stack Development: A Comprehensive Beginner’s Guide to the MERN Stack】掌握全栈开发：MERN 堆栈综合初学者指南</title>
      <link>https://dzone.com/articles/mastering-full-stack-development-a-comprehensive</link>
      <description>【&lt;h2&gt;Introduction to MERN Stack Development&lt;/h2&gt;&#xA;&lt;p&gt;There are four technologies that, when bought together, are perfect for building robust enterprise web applications: &lt;a href=&#34;https://www.mongodb.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;,&amp;nbsp;&lt;/strong&gt;&lt;a href=&#34;https://expressjs.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Express.js&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;,&amp;nbsp;&lt;/strong&gt;&lt;a href=&#34;https://react.dev/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;, and&amp;nbsp;&lt;/strong&gt;&lt;a href=&#34;https://nodejs.org/en&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Node.js&lt;/strong&gt;&lt;/a&gt;. The combined tech stack is called the &lt;a href=&#34;https://www.mongodb.com/resources/languages/mern-stack&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;MERN&lt;/strong&gt;&lt;/a&gt; stack. The choice of these stacks makes them very powerful for architecting a full-fledged system and provides great flexibility.&lt;/p&gt;&#xA;&lt;h2&gt;Components of the MERN Stack&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;: A NoSQL database that stores data in JSON-like documents. It is highly scalable and allows for flexible and dynamic data schemas.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Express.js&lt;/strong&gt;: Express is a minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: React lets you build user interfaces out of individual pieces called components. Create your own React components like &lt;code dir=&#34;ltr&#34;&gt;Thumbnail&lt;/code&gt;, &lt;code dir=&#34;ltr&#34;&gt;LikeButton&lt;/code&gt;, and &lt;code dir=&#34;ltr&#34;&gt;Video&lt;/code&gt;. Then combine them into entire screens, pages, and apps.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: Node.js is a free, open-source, cross-platform JavaScript runtime &lt;a href=&#34;https://dzone.com/articles/watch-a-writer-learn-nodejs-part-1&#34;&gt;environment&lt;/a&gt; that lets developers create servers, web apps, command line tools, and scripts.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;Setting up a MERN Stack Application&lt;/h2&gt;&#xA;&lt;p&gt;Make sure you have Node.js and npm (&lt;a href=&#34;https://dzone.com/articles/a-beginners-guide-to-npm-the-node-package-manager&#34;&gt;Node Package Manager&lt;/a&gt;) installed on your computer before starting to work with the sample code. They are available for download on the official Node.js website.&lt;/p&gt;】&lt;h2&gt;MERN 堆栈开发简介&lt;/h2&gt;&#xA;&lt;p&gt;有四种技术，当一起购买时，非常适合构建强大的企业 Web 应用程序： &lt;a href=&#34;https://www.mongodb.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;a href=&#34;https://expressjs.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Express .js&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;a href=&#34;https://react.dev/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;React&lt;/强&gt;&lt;/a&gt;&lt;strong&gt;和&lt;/strong&gt;&lt;a href=&#34;https://nodejs.org/en&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Node.js&lt;/强&gt;&lt;/a&gt;。组合后的技术堆栈称为 &lt;a href=&#34;https://www.mongodb.com/resources/languages/mern-stack&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;MERN&lt;/strong&gt; &lt;/a&gt; 堆栈。这些堆栈的选择使它们对于构建成熟的系统非常强大，并提供了极大的灵活性。&lt;/p&gt;&#xA;&lt;h2&gt;MERN 堆栈的组件&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;：一种以类似 JSON 的文档存储数据的 NoSQL 数据库。它具有高度可扩展性，并允许灵活和动态的数据模式。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Express.js&lt;/strong&gt;：Express 是一个最小且灵活的 Node.js Web 应用程序框架，为 Web 和移动应用程序提供了一组强大的功能。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;：React 允许您使用称为组件的各个部分构建用户界面。创建您自己的 React 组件，例如 &lt;code dir=&#34;ltr&#34;&gt;Thumbnail&lt;/code&gt;、&lt;code dir=&#34;ltr&#34;&gt;LikeButton&lt;/code&gt; 和 &lt;code dir=&#34;ltr&#34;&gt;Video&lt;/code&gt;。然后将它们组合到整个屏幕、页面和应用程序中。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt;：Node.js 是一个免费、开源、跨平台的 JavaScript 运行时&lt;a href=&#34;https://dzone.com/articles/watch-a-writer -learn-nodejs-part-1&#34;&gt;允许开发人员创建服务器、Web 应用、命令行工具和脚本的环境&lt;/a&gt;。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;设置 MERN 堆栈应用程序&lt;/h2&gt;&#xA;&lt;p&gt;确保您有 Node.js 和 npm (&lt;a href=&#34;https://dzone.com/articles/a-beginners-guide-to-npm-the-node-package-manager&#34;&gt;Node 包管理器&lt;/a&gt;）在开始使用示例代码之前安装在您的计算机上。它们可以在 Node.js 官方网站上下载。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 17:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>