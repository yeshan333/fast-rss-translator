<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Improving Snowflake Performance by Mastering the Query Profile】通过掌握查询配置文件来提高 Snowflake 性能</title>
      <link>https://dzone.com/articles/improve-snowflake-performance-mastering-the-query-profile</link>
      <description>【&lt;p&gt;Having worked with over 50 Snowflake customers across Europe and the Middle East, I&#39;ve analyzed hundreds of Query Profiles and identified many issues including issues around performance and cost.&lt;/p&gt;&#xA;&lt;p&gt;In this article, I&#39;ll explain:&lt;/p&gt;】&lt;p&gt;与欧洲和中东地区的 50 多个 Snowflake 客户合作后，我分析了数百个查询配置文件并发现了许多问题，包括性能和成本方面的问题。&lt;/p&gt;&#xA;&lt;p&gt;在本文中，我将解释：&lt;/p&gt;</description>
      <pubDate>Wed, 21 Aug 2024 20:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Data Pipeline Techniques in Action】数据管道技术的实际应用</title>
      <link>https://dzone.com/articles/data-pipeline-techniques-in-action</link>
      <description>【&lt;p&gt;The topics covered are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;Data pipeline architecture&lt;/li&gt;&#xA; &lt;li&gt;High-scale data ingestion&lt;/li&gt;&#xA; &lt;li&gt;Data transformation and processing&lt;/li&gt;&#xA; &lt;li&gt;Data storage&lt;/li&gt;&#xA; &lt;li&gt;Staging data delivery&lt;/li&gt;&#xA; &lt;li&gt;Operational data&lt;/li&gt;&#xA; &lt;li&gt;Hands-on exercise&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img style=&#34;width: 743px;&#34; class=&#34;fr-fic fr-dib lazyload&#34; data-image=&#34;true&#34; data-new=&#34;false&#34; data-sizeformatted=&#34;223.0 kB&#34; data-mimetype=&#34;image/png&#34; data-creationdate=&#34;1722900214963&#34; data-creationdateformatted=&#34;08/05/2024 11:23 PM&#34; data-type=&#34;temp&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/17836876-pipeline.png&#34; data-modificationdate=&#34;null&#34; data-size=&#34;222954&#34; data-name=&#34;pipeline.png&#34; data-id=&#34;17836876&#34; data-src=&#34;https://dz2cdn1.dzone.com/storage/temp/17836876-pipeline.png&#34; alt=&#34;Data governance, orchestration, and monitoring&#34;&gt;&lt;/p&gt;】&lt;p&gt;涵盖的主题是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;数据管道架构&lt;/li&gt;&#xA; &lt;li&gt;大规模数据提取&lt;/li&gt;&#xA; &lt;li&gt;数据转换和处理&lt;/li&gt;&#xA; &lt;li&gt;数据存储&lt;/li&gt;&#xA; &lt;li&gt;暂存数据交付&lt;/li&gt;&#xA; &lt;li&gt;运营数据&lt;/li&gt;&#xA; &lt;li&gt;实践练习&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img style=&#34;宽度：743px;&#34; class =“fr-fic fr-dib lazyload”data-image =“true”data-new =“false”data-sizeformatted =“223.0 kB”data-mimetype =“image/png”data-creationdate =“1722900214963”数据-creationdateformatted=&#34;08/05/2024 11:23 PM&#34; data-type=&#34;temp&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/17836876-pipeline.png&#34; data-modificationdate= “null”data-size =“222954”data-name =“pipeline.png”data-id =“17836876”data-src =“https://dz2cdn1.dzone.com/storage/temp/17836876-pipeline.png” &#34; alt=&#34;数据治理、编排和监控&#34;&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 21 Aug 2024 18:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Automatic 1111: Sketch-to-Image Workflow】自动 1111：草图到图像工作流程</title>
      <link>https://dzone.com/articles/automatic-1111-sketch-to-image-workflow</link>
      <description>【&lt;p&gt;In this article, we will be discussing how to convert hand-drawn or digital sketches into photorealistic images using stable diffusion models with the help of ControlNet. We will be extending the &lt;a href=&#34;https://dzone.com/articles/automatic-1111-apis&#34;&gt;Automatic 1111&lt;/a&gt;&#39;s &lt;code&gt;txt2img&lt;/code&gt; feature to develop this custom workflow.&lt;/p&gt;&#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;p&gt;Before diving in, let&#39;s make sure we have the following prerequisites covered:&lt;/p&gt;】&lt;p&gt;在本文中，我们将讨论如何在 ControlNet 的帮助下使用稳定的扩散模型将手绘或数字草图转换为逼真的图像。我们将扩展 &lt;a href=&#34;https://dzone.com/articles/automatic-1111-apis&#34;&gt;Automatic 1111&lt;/a&gt; 的 &lt;code&gt;txt2img&lt;/code&gt; 功能来开发此自定义工作流程。 &lt;/p&gt;&#xA;&lt;h2&gt;先决条件&lt;/h2&gt;&#xA;&lt;p&gt;在深入研究之前，让我们确保满足以下先决条件：&lt;/p&gt;</description>
      <pubDate>Wed, 21 Aug 2024 19:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Evolution of Governance Framework With AI】人工智能治理框架的演变</title>
      <link>https://dzone.com/articles/evolution-of-governance-framework-with-ai</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;We have seen that running effective projects and conducting business both depend on the governance framework. This framework lays out the fundamentals of management. These principles assisted in bringing all of the business&#39;s top stakeholders into alignment with the guided principle objectives, such as defining performance standards, determining acceptable risk levels, and determining the manner and content of reporting. These core ideas are what all projects must adhere to. It may take a lot of work to create such frameworks but once all stakeholders are aligned on this framework, it can be leveraged throughout the &lt;a href=&#34;https://dzone.com/articles/a-complete-guide-to-project-management-life-cycle&#34;&gt;project management lifecycle&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;This framework plays an important role in managing and mitigating the risks that come throughout the project lifecycle. We have seen a lot of last-minute risk coming in the late cycle of project management where such a governance framework will be helpful. This framework will foster trust among stakeholders and enhance the decision-making ability for each risk.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;我们已经看到，运行有效的项目和开展业务都依赖于治理框架。该框架阐述了管理的基础。这些原则有助于使所有企业的最高利益相关者与指导原则目标保持一致，例如定义绩效标准、确定可接受的风险水平以及确定报告的方式和内容。这些核心思想是所有项目都必须坚持的。创建这样的框架可能需要做大量的工作，但是一旦所有利益相关者都同意这个框架，就可以在整个&lt;a href=&#34;https://dzone.com/articles/a-complete-guide-to-项目管理生命周期&#34;&gt;项目管理生命周期&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;该框架在管理和减轻整个项目生命周期中出现的风险方面发挥着重要作用。我们已经看到许多最后一刻的风险出现在项目管理的后期，这样的治理框架将会有所帮助。该框架将促进利益相关者之间的信任，并增强针对每种风险的决策能力。&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 11:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Kotlin Coroutines and OpenTelemetry Tracing】Kotlin 协程和 OpenTelemetry 跟踪</title>
      <link>https://dzone.com/articles/kotlin-coroutines-and-opentelemetry-tracing</link>
      <description>【&lt;p&gt;I recently &lt;a href=&#34;https://dzone.com/articles/opentelemetry-tracing-on-spring-boot-java-agent-vs-micrometer-testing&#34;&gt;compared three OpenTelemetry approaches&lt;/a&gt; on the JVM: Java Agent v1, v2, and Micrometer. I used Kotlin and coroutines without overthinking. I received interesting feedback on the usage of &lt;code&gt;@WithSpan&lt;/code&gt; with coroutines:&lt;/p&gt;&#xA;&lt;p&gt;Indeed, the &lt;code&gt;@WithSpan&lt;/code&gt; annotation has worked flawlessly in conjunction with coroutines &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/7124&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;for some time already&lt;/a&gt;. However, it made me think about the underlying workings of OpenTelemetry. Here are my findings.&lt;/p&gt;】&lt;p&gt;我最近&lt;a href=&#34;https://dzone.com/articles/opentelemetry-tracing-on-spring-boot-java-agent-vs-micrometer-testing&#34;&gt;比较了三种 OpenTelemetry 方法&lt;/a&gt; JVM：Java Agent v1、v2 和 Micrometer。我没有过多考虑就使用了 Kotlin 和协程。我收到了关于使用 &lt;code&gt;@WithSpan&lt;/code&gt; 与协程的有趣反馈：&lt;/p&gt;&#xA;&lt;p&gt;确实，&lt;code&gt;@WithSpan&lt;/code&gt; 注释与协程完美结合 &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/7124&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;已经有一段时间了&lt;/a&gt;。然而，它让我思考了 OpenTelemetry 的底层工作原理。这是我的发现。&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 14:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Parent Document Retrieval (PDR): Useful Technique in RAG】父文档检索 (PDR)：RAG 中的有用技术</title>
      <link>https://dzone.com/articles/parent-document-retrieval-useful-technique-in-rag</link>
      <description>【&lt;h2&gt;What Is Parent Document Retrieval (PDR)?&lt;/h2&gt;&#xA;&lt;p&gt;Parent Document Retrieval is a method implemented in state-of-the-art &lt;a href=&#34;https://dzone.com/articles/a-comparative-exploration-of-llm-and-rag&#34;&gt;RAG models&lt;/a&gt; meant to recover full parent documents from which relevant child passages or snippets can be extracted. It provides context enrichment and is passed on to the RAG model for more comprehensive, information-rich responses to complex or nuanced questions.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Major steps in parent document retrieval in RAG models include:&lt;/p&gt;】&lt;h2&gt;什么是父文档检索 (PDR)？&lt;/h2&gt;&#xA;&lt;p&gt;父文档检索是一种在最先进的 &lt;a href=&#34;https://dzone.com/articles/a-comparative-exploration-of-llm-and-rag&#34;&gt;RAG 模型中实现的方法&lt;/a&gt; 意味着恢复完整的父文档，可以从中提取相关的子段落或片段。它提供了丰富的上下文，并传递给 RAG 模型，以便对复杂或微妙的问题做出更全面、信息丰富的响应。 &lt;/p&gt;&#xA;&lt;p&gt;RAG 模型中父文档检索的主要步骤包括：&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 20:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Multicluster Gateways With Kubernetes Gateway API】具有 Kubernetes Gateway API 的多集群网关</title>
      <link>https://dzone.com/articles/multicluster-gateways-with-kubernetes-gateway-api</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Kubernetes Gateway API is the new specification released by CNCF to standardize the Kubernetes Ingress traffic. Now, what if a service is configured as High Availability (HA)? (Say it is in a different cloud environment and you have to access it from the Gateway; i.e., multicluster, multi-cloud scenario.) In this article, we will showcase how to use the Gateway API spec to configure gateways for multicluster setup.&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Multicluster Kubernetes Gateway Demo Overview&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;We have two clusters: one in EKS (primary) and the other in GKE (remote). I have deployed Istio in both the clusters and the setup is &lt;a href=&#34;https://dzone.com/articles/secure-multicloud-and-multicluster-apps-with-istio&#34;&gt;primary-remote Istio installation&lt;/a&gt;. Istio is used as the controller to implement the Gateway API resources.&amp;nbsp;&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;Kubernetes Gateway API 是 CNCF 发布的新规范，用于标准化 Kubernetes Ingress 流量。现在，如果将服务配置为高可用性 (HA) 会怎样？ （假设它位于不同的云环境中，并且您必须从网关访问它；即多集群、多云场景。）在本文中，我们将展示如何使用网关 API 规范来配置网关以进行多集群设置。 &lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;多集群 Kubernetes 网关演示概述&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;我们有两个集群：一个在 EKS（主）中，另一个在 GKE（远程）中。我已经在两个集群中部署了 Istio，并且设置是&lt;a href=&#34;https://dzone.com/articles/secure-multicloud-and-multicluster-apps-with-istio&#34;&gt;主要远程 Istio 安装&lt;/a &gt;。 Istio用作控制器来实现网关API资源。 &lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 12:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Setting Up CORS and Integration on AWS API Gateway Using CloudFormation】使用 CloudFormation 在 AWS API Gateway 上设置 CORS 和集成</title>
      <link>https://dzone.com/articles/setting-up-cors-and-integration-on-aws-api-gateway</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/what-is-cors&#34;&gt;Cross-Origin Resource Sharing (CORS)&amp;nbsp;&lt;/a&gt;is an essential security mechanism utilized by web browsers, allowing for regulated access to server resources from origins that differ in domain, protocol, or port. In the realm of APIs, especially when utilizing AWS API Gateway, configuring CORS is crucial to facilitate access for web applications originating from various domains while mitigating potential security risks.&lt;/p&gt;&#xA;&lt;p&gt;This article aims to provide a comprehensive guide on CORS and integrating AWS API Gateway through &lt;a href=&#34;https://dzone.com/articles/aws-cloudformation-getting-started-for-beginners&#34;&gt;CloudFormation&lt;/a&gt;. It will emphasize the significance of CORS, the development of authorization including bearer tokens, and the advantages of selecting optional methods in place of standard GET requests.&lt;/p&gt;】&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/what-is-cors&#34;&gt;跨源资源共享 (CORS)&lt;/a&gt;是网络浏览器使用的一种重要安全机制，允许受监管的从域、协议或端口不同的来源访问服务器资源。在 API 领域，特别是在使用 AWS API Gateway 时，配置 CORS 对于促进来自不同域的 Web 应用程序的访问并同时降低潜在的安全风险至关重要。&lt;/p&gt;&#xA;&lt;p&gt;本文旨在提供有关 CORS 以及通过 &lt;a href=&#34;https://dzone.com/articles/aws-cloudformation-getting-started-for-beginners&#34;&gt;CloudFormation 集成 AWS API Gateway 的全面指南&lt;/一个&gt;。它将强调 CORS 的重要性、包括不记名令牌在内的授权的发展，以及选择可选方法代替标准 GET 请求的优势。&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 18:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【Day in the Life of a Developer With Google’s Gemini Code Assist: Part 1】使用 Google Gemini Code Assist 的开发人员的一天：第 1 部分</title>
      <link>https://dzone.com/articles/ditl-of-a-developer-with-google-gemini-code-assist-pt1</link>
      <description>【&lt;p&gt;I started evaluating Google&#39;s Gemini Code Assist development in December 2023, almost about its launch time. The aim of this article is to cover its usage and impact beyond basic code generation on all the activities that a developer is supposed to do in his daily life (especially with additional responsibilities entrusted to developers these days with the advent of &#34;&lt;a href=&#34;https://dzone.com/articles/shift-left-a-developers-pipeline-dream&#34;&gt;Shift-Left&lt;/a&gt;&#34; and full stack development roles).&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;Gemini Code Assist&lt;/h2&gt;&#xA;&lt;p&gt;Gemini Code Assist can be tried at no cost until November 2024.&lt;/p&gt;】&lt;p&gt;我于 2023 年 12 月开始评估 Google 的 Gemini Code Assist 开发，几乎与它的发布时间差不多。本文的目的是介绍它的用法和影响，超越基本代码生成，对开发人员在日常生活中应该做的所有活动产生影响（特别是随着“&lt;a href= “https://dzone.com/articles/shift-left-a-developers-pipeline-dream&#34;&gt;Shift-Left&lt;/a&gt;”和全栈开发角色）。 &lt;/p&gt;&#xA;&lt;h2&gt;Gemini 代码辅助&lt;/h2&gt;&#xA;&lt;p&gt;2024 年 11 月之前可以免费试用 Gemini Code Assist。&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 13:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Protect Your Alerts: The Importance of Independent Incident Alert Management】保护您的警报：独立事件警报管理的重要性</title>
      <link>https://dzone.com/articles/importance-of-independent-incident-alert-management</link>
      <description>【&lt;p&gt;In a world where IT infrastructure underpins countless businesses and organizations, maintaining operational integrity during critical failures or outages is non-negotiable. A key element in achieving this is ensuring that your &lt;a href=&#34;https://dzone.com/articles/insights-from-incident-management&#34;&gt;incident alert management system&lt;/a&gt; remains active and accessible under all circumstances. Unfortunately, a significant vulnerability can arise when the incident alert management system shares the same cloud provider as your primary services. If that cloud provider experiences an outage, your alert management system could become unavailable just when it is needed the most. This could lead to delayed responses, prolonged downtimes, and potentially catastrophic consequences for your business operations.&lt;/p&gt;&#xA;&lt;h2&gt;Understanding the Role of Redundancy in Incident Management&lt;/h2&gt;&#xA;&lt;p&gt;Redundancy is a fundamental principle in IT management, especially when it comes to ensuring continuous operations. Consider a scenario where your services are hosted on a major cloud provider like Amazon Web Services (AWS), Microsoft Azure, or Google Cloud. While these platforms are indeed robust and reliable, they are not infallible. They can and have experienced failures caused by various factors such as Distributed Denial of Service (DDoS) attacks, major hardware failures, &lt;a href=&#34;https://dzone.com/articles/along-came-a-bug&#34;&gt;software bugs&lt;/a&gt;, or even human error resulting in misconfigurations. In such situations, if your incident alert management system is also hosted on the same cloud, the very tools you rely on to notify you of the outage might be compromised as well. This could leave your IT team in the dark, unaware of the issues, and unable to respond promptly.&lt;/p&gt;】&lt;p&gt;在 IT 基础设施支撑着无数企业和组织的世界中，在严重故障或中断期间保持运营完整性是不容谈判的。实现这一目标的关键要素是确保您的&lt;a href=&#34;https://dzone.com/articles/insights-from-incident-management&#34;&gt;事件警报管理系统&lt;/a&gt;在任何情况下都保持活跃且可访问。不幸的是，当事件警报管理系统与您的主要服务共享同一云提供商时，可能会出现严重漏洞。如果该云提供商遇到中断，您的警报管理系统可能会在最需要的时候变得不可用。这可能会导致响应延迟、停机时间延长，并可能给您的业务运营带来灾难性后果。&lt;/p&gt;&#xA;&lt;h2&gt;了解冗余在事件管理中的作用&lt;/h2&gt;&#xA;&lt;p&gt;冗余是 IT 管理的基本原则，特别是在确保持续运营方面。考虑这样一个场景：您的服务托管在 Amazon Web Services (AWS)、Microsoft Azure 或 Google Cloud 等主要云提供商上。虽然这些平台确实强大且可靠，但它们并非绝对可靠。他们可能并且已经经历过由各种因素引起的故障，例如分布式拒绝服务 (DDoS) 攻击、重大硬件故障、&lt;a href=&#34;https://dzone.com/articles/along-came-a-bug&#34;&gt;软件bug，甚至是人为错误导致配置错误。在这种情况下，如果您的事件警报管理系统也托管在同一云上，那么您用来通知中断的工具也可能会受到损害。这可能会让您的 IT 团队一无所知，不知道问题，并且无法及时响应。&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 16:00:04 +0000</pubDate>
    </item>
  </channel>
</rss>