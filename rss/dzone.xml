<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Simplify Authorization in Ruby on Rails With the Power of Pundit Gem】简化了Pundit Gem的力量Ruby的Ruby授权</title>
      <link>https://dzone.com/articles/ruby-rails-authorization-pundit-gem</link>
      <description>【&lt;p&gt;Hi, I&#39;m Denis, a backend developer. I’ve been recently working on building a robust all-in-one CRM system for HR and finance, website, and team management. Using the Pundit gem, I was able to build such an efficient role-based access system, and now I&#39;d like to share my experience.&lt;/p&gt;&#xA;&lt;p&gt;Managing authorization efficiently became a crucial challenge as this system expanded, requiring a solution that was both scalable and easy to maintain. In &lt;a href=&#34;https://dzone.com/articles/why-ruby-on-rails-is-still-relevant&#34;&gt;Ruby on Rails&lt;/a&gt;, handling user access can quickly become complex, but the Pundit gem.&lt;/p&gt;】&lt;p&gt;嗨，我是后端开发人员丹尼斯。我最近一直在为人力资源和金融，网站和团队管理建立强大的多合一CRM系统。使用Pundit Gem，我能够构建这样有效的基于角色的访问系统，现在我想分享我的经验。&lt;/p&gt;&#xA;随着该系统的扩展，&lt;p&gt;有效地管理授权成为一个至关重要的挑战，需要一个既可扩展又易于维护的解决方案。在&lt;a href =“ https://dzone.com/articles/why-ruby-on-rails-is-is-still-relevant”&gt; Ruby on Rails &lt;/a&gt;，处理用户访问很快就会变得复杂，但是Pundit Gem。&lt;/p&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How the Go Runtime Preempts Goroutines for Efficient Concurrency】运行时如何抢占高效的并发性</title>
      <link>https://dzone.com/articles/go-runtime-goroutine-preemption</link>
      <description>【&lt;p&gt;Go&#39;s lightweight concurrency model, built on goroutines and channels, has made it a favorite for building efficient, scalable applications. Behind the scenes, the Go runtime employs sophisticated mechanisms to ensure thousands (or even millions) of goroutines run fairly and efficiently. One such mechanism is goroutine preemption, which is crucial for ensuring fairness and responsiveness.&lt;/p&gt;&#xA;&lt;p&gt;In this article, we&#39;ll dive into how the &lt;a href=&#34;https://dzone.com/articles/golang-first-look-at-generics&#34;&gt;Go runtime&lt;/a&gt; implements goroutine preemption, how it works, and why it&#39;s critical for compute-heavy applications. We&#39;ll also use clear code examples to demonstrate these concepts.&lt;/p&gt;】&lt;p&gt; GO的轻巧并发模型建立在Goroutines和频道上，使其成为构建高效，可扩展应用程序的最爱。在幕后，Go运行时采用了复杂的机制来确保数千个（甚至数百万）的Goroutines公平有效地运行。一种这样的机制是高鲁蒂（Goroutine Preemention），这对于确保公平和响应能力至关重要。&lt;/p&gt;&#xA;&lt;p&gt;在本文中，我们将深入了解&lt;a href =“ https://dzone.com/articles/golang-first-look-at-generics”&gt; go runtime &lt;/a&gt; &lt;/a&gt;实现Goroutine Preemption，它的工作方式以及为何对计算快速应用至关重要。我们还将使用明确的代码示例来演示这些概念。&lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Building Enterprise-Ready Landing Zones: Beyond the Initial Setup】建筑企业就绪的着陆区：超出初始设置</title>
      <link>https://dzone.com/articles/build-enterprise-ready-landing-zones</link>
      <description>【&lt;h2&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Cloud providers offer baseline landing zone frameworks, but successful implementation requires strategic customization tailored to an organization’s specific security, compliance, operations, and cost-management needs. Treating a &lt;a href=&#34;https://dzone.com/articles/secure-landing-zones-guide&#34;&gt;landing zone&lt;/a&gt; as a turnkey solution can lead to security gaps and operational inefficiencies. Instead, enterprises should carefully design and continuously refine their landing zones to build a secure, scalable, and efficient foundation for cloud adoption.&lt;/p&gt;&#xA;&lt;h2&gt;Planning Factors for Enterprise Cloud Landing Zone&lt;/h2&gt;&#xA;&lt;p&gt;When designing a cloud landing zone, organizations must carefully evaluate the following key factors to establish a robust and efficient foundation before deploying business applications to the new cloud platform:&lt;/p&gt;】&lt;h2&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;云提供商提供基线着陆区框架，但是成功实施需要针对组织的特定安全性，合规性，运营和成本管理需求量身定制的战略定制。治疗A &lt;a href =“ https://dzone.com/articles/secure-landing-zones-guide”&gt;着陆区&lt;/a&gt;作为一个折扣解决方案，可以导致安全差距和操作效率低下。取而代之的是，企业应仔细设计并连续完善其着陆区，以建立一个安全，可扩展和高效的基础以采用云。&lt;/p&gt;&#xA;&lt;H2&gt;企业云着陆区的计划因素&lt;/h2&gt;&#xA;&lt;p&gt;设计云登陆区时，组织必须仔细评估以下关键因素，以在将业务应用程序部署到新的云平台之前建立强大而有效的基础：&lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2025 21:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【Cookies Revisited: A Networking Solution for Third-Party Cookies】重新审视的饼干：第三方饼干的网络解决方案</title>
      <link>https://dzone.com/articles/third-party-cookies-networking-solution</link>
      <description>【&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;Cookies are fundamental aspects of a web application that end users and developers frequently deal with. A cookie is a small piece of data that is stored in a user’s browser. The data element is used as a medium to communicate information between the web browser and the application&#39;s server-side layer.&lt;/span&gt;&lt;span data-ccp-props=&#34;{}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;Cookies serve various purposes, such as remembering a user’s credentials (not recommended), targeting advertisements (tracking cookies), or helping to maintain a user’s authentication status in a web application. Several fantastic articles on the internet have been written over the years on cookies.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt; cookies是Web应用程序的基本方面，最终用户和开发人员经常处理。 cookie是一小部分数据，存储在用户的浏览器中。数据元素用作介质，以在Web浏览器和应用程序的服务器端层之间传达信息。&lt;/span&gt; &lt;span data-ccp-props =“ {}”&gt; &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt; cookies有多种目的，例如记住用户的凭据（不建议），针对广告（跟踪cookie）或帮助维持用户在Web应用程序中的身份验证状态。多年来，互联网上的几篇很棒的文章在cookie上写了。 &lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Measuring the Impact of AI on Software Engineering Productivity】衡量AI对软件工程生产率的影响</title>
      <link>https://dzone.com/articles/impact-of-ai-on-software-engineering-productivity</link>
      <description>【&lt;p&gt;It is hard to imagine a time not long ago where AI has not been front and center of our everyday news, let alone in the software engineering world? The advent of LLMs coupled with the existing compute power catapulted the use of AI in our everyday lives and in particular so in the life of a software engineer. This article breaks down some of the use cases of AI in software engineering and suggests a path to investigate the key question: Did we actually become more productive?&lt;/p&gt;&#xA;&lt;p&gt;It has only been a few years since the inception of GitHub Copilot in 2021. Since then, AI assisted coding tools have had a significant impact on software engineering practices. As of 2024 it is estimated that &lt;a href=&#34;https://newsletter.pragmaticengineer.com/p/ai-tooling-2024&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;75% of developers use some kind of AI tool&lt;/a&gt;. Often, these tools are not fully rolled out in organizations and used on the side. However, Gartner estimates that &amp;nbsp;&lt;a href=&#34;https://webinar.gartner.com/674243/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;we will reach 90%&lt;/a&gt; enterprise adoption by 2028.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;很难想象不久前AI并不是我们日常新闻的中心和中心，更不用说在软件工程领域了吗？ LLM的出现以及现有的计算功率在我们的日常生活中弹射了AI的使用，尤其是在软件工程师的生活中。本文分解了软件工程中AI的一些用例，并提出了一个研究关键问题的途径：我们实际上是否变得更有生产力？&lt;/p&gt;&#xA;&lt;p&gt;自2021年Github Copilot成立以来只有几年的时间。从那时起，AI辅助编码工具对软件工程实践产生了重大影响。截至2024年，据估计，&lt;a href =“ https://newsletter.pragmaticengengineer.com/p/ai-tooling-2024” rel =“ noopener noreferrer” target =“ _ blank”&gt; 75％的开发人员使用某种AI工具&lt;/a&gt;。通常，这些工具不会在组织中完全推出并在侧面使用。但是，Gartner估计&lt;a href =“ https://webinar.gartner.com/674243/” rel =“ noopener noreferrer” target =“ _ blank”&gt;我们将达到90％&lt;/a&gt;企业&lt;/a&gt;企业在2028年。</description>
      <pubDate>Wed, 07 May 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Ultimate Chaos Testing Guide】终极混乱测试指南</title>
      <link>https://dzone.com/articles/ultimate-chaos-testing-guide</link>
      <description>【&lt;h2&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Ensuring system resilience and dependability has become a top goal in the quickly evolving field of software development. The complex interdependencies and unforeseen failure scenarios that occur in production contexts are frequently missed by standard testing techniques, despite their importance. Organizations can proactively identify vulnerabilities and fix them before they cause major disruptions by using the revolutionary approach that chaos testing provides.&lt;/p&gt;&#xA;&lt;h2&gt;Understanding the Chaos Testing Paradigm&amp;nbsp;&lt;/h2&gt;&#xA;&lt;p&gt;A systematic and purposeful approach to evaluating &lt;a href=&#34;https://dzone.com/articles/microservices-architectures-what-is-fault-toleranc&#34;&gt;fault tolerance&lt;/a&gt; is chaos testing, which is an integral part of Chaos engineering and involves purposefully introducing controlled failures into a system in order to observe and monitor how it behaves. By purposefully interfering with the system&#39;s regular operations, engineers are able to find elusive defects, delicate code pathways, and hidden dependencies that conventional testing techniques can miss. &amp;nbsp;By accepting the unpredictable nature of real-world situations, chaos testing gives businesses important information about the weaknesses in their systems, allowing them to create stronger and more resilient solutions.&lt;/p&gt;】&lt;h2&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;确保系统的弹性和可靠性已成为快速不断发展的软件开发领域的主要目标。尽管重要性很重要，但在生产环境中发生的复杂的相互依赖性和不可预见的失败情况经常被标准测试技术遗漏。组织可以通过使用混乱测试提供的革命性方法来主动识别漏洞并修复它们。&lt;/p&gt;&#xA;&lt;h2&gt;了解混乱测试范式&lt;/h2&gt;&#xA;&lt;p&gt;一种系统的有目的的方法来评估&lt;a href =“ https://dzone.com/articles/microservices-architectures-what-is-fault-toleranc”&gt;容忍&lt;/a&gt;是混乱的测试，这是混乱工程的一部分，并参与了有目的的对受控性的范围，以指导对受控的效果，以指导系统地介绍系统，以进行系统的范围。通过有目的地干扰系统的常规操作，工程师可以找到常规测试技术可能会错过的难以捉摸的缺陷，精致的代码途径和隐藏的依赖关系。  通过接受现实情况的不可预测性质，混乱测试为企业提供了有关其系统弱点的重要信息，从而使他们能够创建更强大，更弹性的解决方案。&lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Medallion Architecture: Why You Need It and How To Implement It With ClickHouse】奖章架构：为什么需要它以及如何使用Clickhouse实施它</title>
      <link>https://dzone.com/articles/why-you-need-medallion-architecture-clickhouse</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In today’s fast-paced, data-driven world, businesses aren’t struggling with a lack of data—they’re drowning in it. The challenge lies in managing, processing, and extracting value from this massive influx of information. Without a clear structure, data pipelines become tangled, unreliable, and hard to scale.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;This is where &lt;a href=&#34;https://dzone.com/articles/medallion-architecture-efficient-batch-and-stream&#34;&gt;medallion architecture&lt;/a&gt; steps in.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;在当今快节奏的数据驱动世界中，企业并没有在缺乏数据而苦苦挣扎，而是淹没了它。挑战在于管理，处理和从大量信息涌入中提取价值。没有明确的结构，数据管道就会纠结，不可靠且难以扩展。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;这是&lt;a href =“ https://dzone.com/articles/medallion-architecture-felcition-felcited-batch-batch-and-stream”&gt; Medallion Architection &lt;/a&gt; in。</description>
      <pubDate>Wed, 07 May 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Top Book Picks for Site Reliability Engineers】网站可靠性工程师的最高书籍选秀</title>
      <link>https://dzone.com/articles/must-read-books-for-site-reliability-engineers</link>
      <description>【&lt;p&gt;I believe reading is fundamental. site reliability engineers (SREs) need to have deep knowledge in a wide range of subjects and topics such as coding, operating systems, computer networking, large-scale distributed systems, &lt;a href=&#34;https://dzone.com/articles/site-reliability-and-engineering&#34;&gt;SRE best practices&lt;/a&gt;, and more to be successful at their job. In this article, I discuss a few books that will help SREs to become better at their job.&lt;/p&gt;&#xA;&lt;h2&gt;1. &lt;em&gt;Site Reliability Engineering,&lt;/em&gt; by the Google SRE team&lt;/h2&gt;&#xA;&lt;p&gt;Google originally coined the term &#34;Site Reliability Engineering.&#34; This book is a must read for anyone interested in site reliability engineering. It covers a wide range of topics that SREs focus on day to day such as SLOs, eliminating toil, monitoring distributed systems, release management, incident management, infrastructure, and more. This books gives an overview of the different elements that SREs work on. Although this book has many topics specific to Google, it provides a good framework and mental model about various SRE topics. The online version of this book is freely available, so there is no excuse not to read it. &amp;nbsp;&lt;a href=&#34;https://sre.google/sre-book/table-of-contents/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;The free online version of this book is available here&lt;/a&gt;.&lt;/p&gt;】&lt;p&gt;我相信阅读是基本的。 site reliability engineers (SREs) need to have deep knowledge in a wide range of subjects and topics such as coding, operating systems, computer networking, large-scale distributed systems, &lt;a href=&#34;https://dzone.com/articles/site-reliability-and-engineering&#34;&gt;SRE best practices&lt;/a&gt;, and more to be successful at their job.在本文中，我讨论了几本书，这些书将帮助SRES变得更好。&lt;/p&gt;&#xA;&lt;H2&gt; 1。 &lt;em&gt;网站可靠性工程，&lt;/em&gt;由Google SRE团队&lt;/h2&gt;&#xA;&lt;p&gt; Google最初创造了“站点可靠性工程”一词。这本书是对对网站可靠性工程感兴趣的任何人必须阅读的。它涵盖了广泛的主题，SRES日常专注于SLO，消除辛劳，监视分布式系统，发布管理，事件管理，基础设施等等。这本书概述了SRES的不同元素。尽管这本书有许多特定于Google的主题，但它提供了有关各种SRE主题的良好框架和心理模型。本书的在线版本是免费的，因此没有任何借口不阅读它。  &lt;a href =“ https://sre.google/sre-book/table-of-contents/” rel =“ noopener noreferrer” target =“ _ black”&gt;本书的免费在线版本可在此处获得&lt;/a&gt;。&lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2025 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Transforming AI-Driven Data Analytics with DeepSeek: A New Era of Intelligent Insights】使用DeepSeek转换AI驱动数据分析：智能见解的新时代</title>
      <link>https://dzone.com/articles/transforming-ai-driven-data-analytics-deepseek</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Imagine standing under a waterfall with a single bucket. That’s what modern businesses face daily. Data pours in from every direction—customer interactions, IoT sensors, social media, transactions—but turning that deluge into actionable insights feels nearly impossible.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;By 2025, &lt;a href=&#34;https://www.statista.com/statistics/871513/worldwide-data-created/&#34;&gt;global data creation&lt;/a&gt; is projected to hit 149 zettabytes, yet less than 1% of this data is ever analyzed. The problem here isn’t just volume; it’s velocity, variety, and the sheer complexity of connecting dots in real time.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;想象一下站在瀑布下，有一个水桶。这就是现代企业每天面临的。数据从各个方向涌入 - 客户相互作用，物联网传感器，社交媒体，交易 - 但是将这种洪水转化为可行的见解几乎是不可能的。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;到2025年，&lt;a href =“ https://www.statista.com/statistics/871513/871513/worldwide-data-created/”&gt;全球数据创建&lt;/a&gt;预计将击中149个Zettabytes，但少于1％的Zettabytes，而不是1％。这里的问题不只是音量；这是实时连接点的速度，多样性和纯粹的复杂性。&lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Event-Driven Architectures: Designing Scalable and Resilient Cloud Solutions】事件驱动的体系结构：设计可扩展和弹性的云解决方案</title>
      <link>https://dzone.com/articles/event-driven-architectures-cloud-solutions</link>
      <description>【&lt;p&gt;Event-driven architectures (EDA) have been a cornerstone in designing cloud systems that are future-proofed, scalable, resilient, and sustainable in nature. EDA is interested in generation, capture, and response to events and nothing more, not even in traditional systems of request-response. The paradigm is most suitable to systems that require high decoupling, elasticity, and fault tolerance.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In this article, I&#39;ll be discussing the technical details of event-driven architectures, along with snippets of code, patterns, and practical strategies of implementation. Let&#39;s get started!&lt;/p&gt;】&lt;p&gt;事件驱动的体系结构（EDA）一直是设计云系统的基石，这些云系统本质上是隔热，可扩展，弹性和可持续性的。 EDA对事件的发电，捕获和响应感兴趣，甚至不再对传统的请求响应系统。该范式最适合需要高脱钩，弹性和容错性的系统。 &lt;/p&gt;&#xA;&lt;p&gt;在本文中，我将讨论事件驱动的体系结构的技术细节，以及代码，模式和实施策略的片段。让我们开始！&lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2025 20:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>