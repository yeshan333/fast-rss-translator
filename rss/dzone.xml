<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Isolation in Testing With Kafka】Kafka 测试中的隔离</title>
      <link>https://dzone.com/articles/isolation-in-testing-with-kafka</link>
      <description>【&lt;p&gt;The experience of running Kafka in test scenarios has reached a high level of convenience thanks to the use of Test containers and enhanced support in Spring Boot 3.1 with the &lt;code&gt;@ServiceConnection&lt;/code&gt; annotation. However, writing and maintaining integration tests with Kafka remains a challenge. This article describes an approach that significantly simplifies the testing process by ensuring test isolation and providing a set of tools to achieve this goal. With the successful implementation of isolation, Kafka tests can be organized in such a way that at the stage of result verification, there is full access to all messages that have arisen during the test, thereby avoiding the need for forced waiting methods such as &lt;code&gt;Thread.sleep()&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This method is suitable for use with Test containers, Embedded Kafka, or other methods of running the Kafka service (e.g., a local instance).&lt;/p&gt;】&lt;p&gt;得益于测试容器的使用以及 Spring Boot 3.1 中通过 &lt;code&gt;@ServiceConnection&lt;/code&gt; 注解的增强支持，在测试场景中运行 Kafka 的体验达到了高度便利。然而，使用 Kafka 编写和维护集成测试仍然是一个挑战。本文介绍了一种方法，该方法通过确保测试隔离并提供一组工具来实现此目标，从而显着简化测试过程。随着隔离的成功实现，Kafka测试可以这样组织：在结果验证阶段，可以完全访问测试过程中出现的所有消息，从而避免了强制等待方法，例如&lt;code&gt; &gt;Thread.sleep()&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;此方法适合与测试容器、嵌入式 Kafka 或运行 Kafka 服务的其他方法（例如本地实例）一起使用。&lt;/p&gt;</description>
      <pubDate>Thu, 11 Jul 2024 11:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【API Implementation on AWS Serverless Architecture】AWS无服务器架构上的API实现</title>
      <link>https://dzone.com/articles/api-implementation-on-aws-serverless-architecture</link>
      <description>【&lt;p&gt;This article describes the implementation of &lt;a href=&#34;https://dzone.com/refcardz/restful-api-lifecycle-management&#34;&gt;RESTful API&lt;/a&gt; on AWS &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-serverless-application-archit&#34;&gt;serverless architecture&lt;/a&gt;. It provides a detailed overview of the architecture, data flow, and AWS services that can be used. This article also describes the benefits of the serverless architecture over the traditional approach.&lt;/p&gt;&#xA;&lt;h2&gt;What Is Serverless Architecture?&lt;/h2&gt;&#xA;&lt;p&gt;Serverless architecture, also known as serverless computing or function as a service, is a software design approach that allows developers to build and run applications without managing the underlying infrastructure. A cloud service provider is responsible for managing and scaling the cloud infrastructure, including provisioning servers to run applications, databases, and storage.&lt;/p&gt;】&lt;p&gt;本文介绍了 &lt;a href=&#34;https://dzone.com/refcardz/restful-api-lifecycle-management&#34;&gt;RESTful API&lt;/a&gt; 在 AWS &lt;a href=&#34;https:// dzone.com/refcardz/getting-started-with-serverless-application-archit&#34;&gt;无服务器架构&lt;/a&gt;。它详细概述了架构、数据流和可以使用的 AWS 服务。本文还介绍了无服务器架构相对于传统方法的优势。&lt;/p&gt;&#xA;&lt;h2&gt;什么是无服务器架构？&lt;/h2&gt;&#xA;&lt;p&gt;无服务器架构，也称为无服务器计算或功能即服务，是一种软件设计方法，允许开发人员构建和运行应用程序，而无需管理底层基础设施。云服务提供商负责管理和扩展云基础设施，包括配置服务器来运行应用程序、数据库和存储。&lt;/p&gt;</description>
      <pubDate>Fri, 12 Jul 2024 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AI: Do You Trust It?】人工智能：你相信它吗？</title>
      <link>https://dzone.com/articles/ai-do-you-trust-it</link>
      <description>【&lt;p&gt;We have lived in a period of AI shift for the past few years. AI is everywhere: searching, learning, &lt;a href=&#34;https://dzone.com/articles/how-chatgpt-is-revolutionizing-the-world-of-natura&#34;&gt;text processing&lt;/a&gt;, &lt;a href=&#34;https://dzone.com/articles/what-is-code-review-and-why-do-you-need-it&#34;&gt;code review&lt;/a&gt;, code writing assistance, and many other systems have arisen in recent years. It seems everyone is eager to apply AI wherever possible even where it might not be needed. I&#39;m not an exception. Under the influence of this wave, I decided to try to create something on my own that would help me in everyday life. So here I will tell you my own story of writing an application with the use of AI, along with some thoughts about it, of course, which are rather contradictory.&lt;/p&gt;&#xA;&lt;h2&gt;What Is the Task?&lt;/h2&gt;&#xA;&lt;p&gt;As a developer in a distributed team, I usually need to explain my weekly progress to my colleagues. I know that for some it might look contradictory, but we prefer text-based reports over face-to-face communication. All the benefits of this approach have been mentioned many times already (like &lt;a href=&#34;https://link.springer.com/article/10.1007/s10664-020-09835-6&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;, &lt;a href=&#34;https://www.yegor256.com/2015/07/13/meetings-are-legalized-robbery.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;, and &lt;a href=&#34;https://ieeexplore.ieee.org/abstract/document/1303810&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;), and it’s just how we prefer to do it. So, after a while, we came up with a particular document format and structure for our weekly reports. It is called &lt;a href=&#34;https://www.yegor256.com/2021/09/09/simba.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;SIMBA&lt;/a&gt;. This format is extremely simple:&lt;/p&gt;】&lt;p&gt;过去几年，我们生活在人工智能转变的时期。人工智能无处不在：搜索、学习、&lt;a href=&#34;https://dzone.com/articles/how-chatgpt-is-revolutionizing-the-world-of-natura&#34;&gt;文本处理&lt;/a&gt;、&lt;a href =&#34;https://dzone.com/articles/what-is-code-review-and-why-do-you-need-it&#34;&gt;代码审查&lt;/a&gt;、代码编写帮助等许多系统都出现了最近几年。似乎每个人都渴望尽可能地应用人工智能，即使是在可能不需要的地方。我也不例外。在这股浪潮的影响下，我决定尝试自己创造一些对我的日常生活有帮助的东西。所以在这里我会告诉你我自己使用人工智能编写应用程序的故事，以及对此的一些想法，当然，这是相当矛盾的。&lt;/p&gt;&#xA;&lt;h2&gt;任务是什么？&lt;/h2&gt;&#xA;&lt;p&gt;作为分布式团队中的开发人员，我通常需要向同事解释我每周的进度。我知道对于某些人来说这可能看起来很矛盾，但与面对面的交流相比，我们更喜欢基于文本的报告。这种方法的所有好处已经被多次提及（例如 &lt;a href=&#34;https://link.springer.com/article/10.1007/s10664-020-09835-6&#34; rel=&#34;noopener noreferrer&#34; target=&#34; _blank&#34;&gt;此处&lt;/a&gt;，&lt;a href=&#34;https://www.yegor256.com/2015/07/13/meetings-are-legalized-robbery.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank &#34;&gt;此处&lt;/a&gt;和&lt;a href=&#34;https://ieeexplore.ieee.org/abstract/document/1303810&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;此处&lt;/a&gt;），以及这正是我们喜欢的方式。因此，过了一段时间，我们为每周报告制定了特定的文档格式和结构。它称为 &lt;a href=&#34;https://www.yegor256.com/2021/09/09/simba.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;SIMBA&lt;/a&gt;。这种格式非常简单：&lt;/p&gt;</description>
      <pubDate>Thu, 11 Jul 2024 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Salesforce Bulk API 2.0: Streamlining Large-Scale Data Operations】Salesforce Bulk API 2.0：简化大规模数据操作</title>
      <link>https://dzone.com/articles/different-ways-to-do-data-load-in-salesforce</link>
      <description>【&lt;p&gt;Have you ever faced the challenge of managing large data operations within &lt;a href=&#34;https://dzone.com/articles/how-to-build-a-basic-salesforce-rest-api-integrati-1&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Salesforce&lt;/a&gt;, such as updating, inserting, deleting, or querying records? These operations might arise from one-time data migration projects or ongoing data integration needs with external systems. In such scenarios, Salesforce Bulk API 2.0 is your solution. This robust API is designed to handle large-scale data operations efficiently, simplifying and streamlining the process.&lt;/p&gt;&#xA;&lt;p&gt;Salesforce Bulk API 2.0 is a REST-based API, that runs the requested operation asynchronously. It is designed to simplify bulk operations within Salesforce as well as to improve the performance and reliability of bulk data processing. The following are key features of Bulk API 2.0.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;您是否曾经面临过在 &lt;a href=&#34;https://dzone.com/articles/how-to-build-a-basic-salesforce-rest-api-integrati-1&#34; 中管理大数据操作的挑战rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Salesforce&lt;/a&gt;，例如更新、插入、删除或查询记录？这些操作可能源于一次性数据迁移项目或与外部系统的持续数据集成需求。在这种情况下，Salesforce Bulk API 2.0 就是您的解决方案。这个强大的 API 旨在高效处理大规模数据操作，简化流程。&lt;/p&gt;&#xA;&lt;p&gt;Salesforce Bulk API 2.0 是基于 REST 的 API，异步运行请求的操作。它旨在简化 Salesforce 中的批量操作，并提高批量数据处理的性能和可靠性。以下是 Bulk API 2.0 的主要功能。 &lt;/p&gt;</description>
      <pubDate>Thu, 11 Jul 2024 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Optimizing MySQL Performance: Best Practices for Database Efficiency】优化 MySQL 性能：数据库效率的最佳实践</title>
      <link>https://dzone.com/articles/optimizing-mysql-performance-best-practices</link>
      <description>【&lt;div data-scroll-anchor=&#34;true&#34; data-testid=&#34;conversation-turn-3&#34; dir=&#34;auto&#34;&gt;&#xA; &lt;div data-message-author-role=&#34;assistant&#34; data-message-id=&#34;72ab4e1f-2dfe-4473-ae2f-a9e2b1687a88&#34; dir=&#34;auto&#34;&gt;&#xA;  &lt;p&gt;As a cornerstone of many web applications, &lt;a href=&#34;https://dzone.com/articles/introduction-to-mysql-1&#34;&gt;MySQL&lt;/a&gt; is a robust and reliable database management system. However, achieving optimal performance in MySQL requires a strategic approach to configuration, indexing, and query optimization. In this blog post, we’ll explore key practices to enhance MySQL performance, ensuring your database operates at peak efficiency.&lt;/p&gt;&#xA;  &lt;h2&gt;1. Fine-Tuning MySQL Configuration&lt;/h2&gt;&#xA;  &lt;p&gt;MySQL comes with a default configuration that is typically conservative to ensure it works on a wide range of systems. However, these settings might not be ideal for your specific workload. Here are some configuration parameters to adjust:&lt;/p&gt;】&lt;div data-scroll-anchor=&#34;true&#34; data-testid=&#34;conversation-turn-3&#34; dir=&#34;auto&#34;&gt;&#xA; &lt;div data-message-author-role=&#34;助理&#34; data-message-id=&#34;72ab4e1f-2dfe-4473-ae2f-a9e2b1687a88&#34; dir=&#34;auto&#34;&gt;&#xA;  &lt;p&gt;作为许多 Web 应用程序的基石，&lt;a href=&#34;https://dzone.com/articles/introduction-to-mysql-1&#34;&gt;MySQL&lt;/a&gt; 是一个强大且可靠的数据库管理系统。然而，要在 MySQL 中实现最佳性能，需要采用策略性方法来配置、索引和查询优化。在这篇博文中，我们将探讨增强 MySQL 性能的关键实践，确保您的数据库以最高效率运行。&lt;/p&gt;&#xA;  &lt;h2&gt;1。微调 MySQL 配置&lt;/h2&gt;&#xA;  &lt;p&gt;MySQL 附带了一个通常比较保守的默认配置，以确保它可以在广泛的系统上运行。但是，这些设置可能并不适合您的特定工作负载。以下是一些需要调整的配置参数：&lt;/p&gt;</description>
      <pubDate>Fri, 12 Jul 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【A Hands-On Guide To OpenTelemetry: Intro to Observability】OpenTelemetry 实践指南：可观察性简介</title>
      <link>https://dzone.com/articles/guide-to-opentelemetry-intro-to-observability</link>
      <description>【&lt;p&gt;Are you ready to start your journey on the road to collecting telemetry data from your applications? Great observability begins with great instrumentation!&lt;/p&gt;&#xA;&lt;p&gt;In this series, you&#39;ll explore how to adopt &lt;a href=&#34;https://opentelemetry.io/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;OpenTelemetry (OTel)&lt;/a&gt; and how to instrument an application to collect tracing telemetry. You&#39;ll learn how to leverage out-of-the-box automatic instrumentation tools and understand when it&#39;s necessary to explore more advanced manual instrumentation for your applications. By the end of this series, you&#39;ll have an understanding of how telemetry travels from your applications to the OpenTelemetry Collector, and be ready to bring OpenTelemetry to your future projects. Everything discussed here is supported by &lt;a href=&#34;https://o11y-workshops.gitlab.io/workshop-opentelemetry/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;a hands-on, self-paced workshop&lt;/a&gt; authored &lt;a href=&#34;https://www.linkedin.com/in/paigerduty/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;by Paige Cruze&lt;/a&gt;.&lt;/p&gt;】&lt;p&gt;您准备好开始从应用程序收集遥测数据的旅程了吗？出色的可观测性始于出色的仪器！&lt;/p&gt;&#xA;&lt;p&gt;在本系列中，您将探索如何采用&lt;a href=&#34;https://opentelemetry.io/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;OpenTelemetry (OTel)&lt;/a&gt;以及如何检测应用程序以收集跟踪遥测数据。您将学习如何利用开箱即用的自动仪表工具，并了解何时需要为您的应用探索更高级的手动仪表。在本系列结束时，您将了解遥测如何从应用程序传输到 OpenTelemetry Collector，并准备好将 OpenTelemetry 引入您未来的项目。这里讨论的所有内容均由&lt;a href=&#34;https://o11y-workshops.gitlab.io/workshop-opentelemetry/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;动手、自定进度的研讨会支持&lt; /a&gt; 作者：&lt;a href=&#34;https://www.linkedin.com/in/paigerduty/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;作者：Paige Cruze&lt;/a&gt;。&lt;/p&gt;</description>
      <pubDate>Thu, 11 Jul 2024 14:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【Implementing Micro Frontends in Angular: Step-By-Step Guide】在 Angular 中实现微前端：分步指南</title>
      <link>https://dzone.com/articles/implementing-micro-frontends-in-angular</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/micro-frontends-architecture&#34;&gt;Micro frontends&lt;/a&gt; are architectural styles in which independently deliverable frontend applications form a unified whole. This method enables teams to work independently on different parts of an application for scalability and easier maintenance. This guide will demonstrate how to implement micro frontends in &lt;a href=&#34;https://dzone.com/articles/how-to-improve-the-performance-of-angular-apps&#34;&gt;Angular&lt;/a&gt; applications, the benefits and challenges, and the steps with code samples.&lt;/p&gt;&#xA;&lt;h2&gt;Benefits of Micro Frontends&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;: Teams can develop, test, and deploy features independently, scaling the development process.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Autonomous teams&lt;/strong&gt;: Different teams can work on separate micro frontends, using their preferred tools and frameworks.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Maintainability&lt;/strong&gt;: Smaller codebases are easier to maintain, understand, and refactor.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Incremental upgrades&lt;/strong&gt;: Micro frontends can be updated incrementally without affecting the entire application.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;Challenges of Micro Frontends&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;&lt;strong&gt;Complexity&lt;/strong&gt;: Increased complexity in managing multiple repositories and coordinating deployments.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Potential performance overhead due to multiple independent bundles.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Shared state management&lt;/strong&gt;: Managing shared state across micro frontends can be challenging.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt;: Ensuring a consistent look and feel across different micro frontends requires careful planning.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;When more than one team works on various areas of an application, differences in design and user experience usually creep in. To mitigate this, a solid design system and common component library should be established across all teams. This includes defining a set of UI components, styles, and guidelines that are uniform across the application. It also requires regular communication and collaboration between teams to align on design decisions and consistency.&lt;/p&gt;】&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/micro-frontends-architecture&#34;&gt;微前端&lt;/a&gt;是一种架构风格，其中可独立交付的前端应用程序形成一个统一的整体。这种方法使团队能够在应用程序的不同部分独立工作，以实现可扩展性和更轻松的维护。本指南将演示如何在 &lt;a href=&#34;https://dzone.com/articles/how-to-improve-the-performance-of-angular-apps&#34;&gt;Angular&lt;/a&gt; 应用程序中实现微前端，优点和挑战，以及带有代码示例的步骤。&lt;/p&gt;&#xA;&lt;h2&gt;微前端的好处&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;&lt;strong&gt;可扩展性&lt;/strong&gt;：团队可以独立开发、测试和部署功能，从而扩展开发流程。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;自治团队&lt;/strong&gt;：不同的团队可以使用他们喜欢的工具和框架在单独的微前端上工作。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;可维护性&lt;/strong&gt;：较小的代码库更易于维护、理解和重构。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;增量升级&lt;/strong&gt;：微前端可以增量更新，而不会影响整个应用程序。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;微前端的挑战&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;&lt;strong&gt;复杂性&lt;/strong&gt;：管理多个存储库和协调部署的复杂性增加。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;性能&lt;/strong&gt;：多个独立捆绑包带来的潜在性能开销。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;共享状态管理&lt;/strong&gt;：管理跨微前端的共享状态可能具有挑战性。&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;一致性&lt;/strong&gt;：确保不同微前端的外观和感觉一致需要仔细规划。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;当多个团队在应用程序的各个领域工作时，设计和用户体验方面的差异通常会逐渐显现。为了缓解这种情况，应在所有团队中建立可靠的设计系统和通用组件库。这包括定义一组在整个应用程序中统一的 UI 组件、样式和指南。它还需要团队之间定期沟通和协作，以协调设计决策和一致性。&lt;/p&gt;</description>
      <pubDate>Thu, 11 Jul 2024 21:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【Revolutionizing Enterprise Testing: Overcoming Challenges】彻底改变企业测试：克服挑战</title>
      <link>https://dzone.com/articles/revolutionizing-enterprise-testing</link>
      <description>【&lt;p&gt;Software development is ever-growing, and agility and speed are paramount to ensure quick delivery time. In this fast-paced environment, continuous testing has emerged as a game changer. By integrating the testing cycle into the entire software delivery lifecycle organizations can ensure that the applications meet the highest quality standards while keeping up the pace with the ever-increasing demand for rapid releases.&lt;/p&gt;&#xA;&lt;p&gt;However, as enterprises adopt continuous testing, they often encounter multiple challenges that can obstruct progress and hinder the test effectiveness. In this article, we will walk through the challenges enterprises can face while adopting continuous testing.&lt;/p&gt;】&lt;p&gt;软件开发不断发展，敏捷性和速度对于确保快速交付时间至关重要。在这个快节奏的环境中，持续测试已经成为游戏规则的改变者。通过将测试周期集成到整个软件交付生命周期中，组织可以确保应用程序满足最高的质量标准，同时跟上快速发布不断增长的需求。&lt;/p&gt;&#xA;&lt;p&gt;然而，当企业采用持续测试时，他们经常会遇到多种挑战，这些挑战可能会阻碍进度并影响测试有效性。在本文中，我们将介绍企业在采用持续测试时可能面临的挑战。&lt;/p&gt;</description>
      <pubDate>Thu, 11 Jul 2024 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Create JWT Using DataWeave JWT Library】使用 DataWeave JWT 库创建 JWT</title>
      <link>https://dzone.com/articles/create-jwt-using-dataweave-jwt-library</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;Recently in one of my projects, there was a requirement to create &lt;a href=&#34;https://dzone.com/articles/what-is-jwt-token&#34;&gt;JWT&lt;/a&gt; within the &lt;a href=&#34;https://dzone.com/articles/mulesoft-video-tutorials-basic-to-complex&#34;&gt;MuleSoft&lt;/a&gt; application and send that as an &lt;a href=&#34;https://dzone.com/refcardz/oauth-patterns-and-anti-patterns&#34;&gt;OAuth&lt;/a&gt; token to the backend for authentication&lt;strong&gt;.&lt;/strong&gt; After doing some research, I got to know several ways to create JWT like &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; code, DataWeave code, JWT sign module, etc. Java code can be complex to implement, Dataweave code does not work for the RSA algorithm and the client didn’t want to use a custom module like the JWT sign module. Finally, I got to know about the DataWeave JWT Library available in MuleSoft Exchange.&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;In this blog, I will be describing the process of creating JWT using the Dataweave JWT Library available in Mulesoft Exchange which supports both HMAC and RSA algorithms.&lt;/p&gt;】&lt;p style=&#34;text-align: left;&#34;&gt;最近在我的一个项目中，需要创建 &lt;a href=&#34;https://dzone.com/articles/what-is-jwt-token&#34;&gt; &lt;a href=&#34;https://dzone.com/articles/mulesoft-video-tutorials-basic-to-complex&#34;&gt;MuleSoft&lt;/a&gt; 应用程序中的 JWT&lt;/a&gt; 并将其作为 &lt;a href= “https://dzone.com/refcardz/oauth-patterns-and-anti-patterns&#34;&gt;OAuth&lt;/a&gt; 令牌到后端进行身份验证&lt;strong&gt;。&lt;/strong&gt;经过一些研究后，我了解到创建 JWT 的多种方法，例如 &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; 代码、DataWeave 代码、JWT 签名模块等。Java 代码实现起来可能很复杂， Dataweave 代码不适用于 RSA 算法，并且客户端不想使用 JWT 签名模块等自定义模块。最后，我了解了 MuleSoft Exchange 中提供的 DataWeave JWT 库。&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;在本博客中，我将描述使用 Mulesoft Exchange 中提供的 Dataweave JWT 库创建 JWT 的过程，该库支持 HMAC 和 RSA 算法。&lt;/p&gt;</description>
      <pubDate>Thu, 11 Jul 2024 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How To Reduce Memory Consumption in Integration Tests With Kafka Using GraalVM】如何使用 GraalVM 减少 Kafka 集成测试中的内存消耗</title>
      <link>https://dzone.com/articles/reduce-memory-consumption-in-integration-tests-with-kafka</link>
      <description>【&lt;p&gt;In this article, I want to share my experience with creating a native image for EmbeddedKafka using GraalVM. Utilizing this image in integration tests not only speeds up the execution of test scenarios but also reduces memory consumption. Interestingly, when compared to using &lt;strong&gt;confluentinc/cp-kafka&lt;/strong&gt; in Testcontainers, there is a noticeable difference in both speed and memory usage — and it&#39;s not in favor of the latter.&lt;/p&gt;&#xA;&lt;h2&gt;EmbeddedKafka, Testcontainers, and GraalVM&lt;/h2&gt;&#xA;&lt;p&gt;A brief overview of the key components used in the project:&lt;/p&gt;】&lt;p&gt;在本文中，我想分享使用 GraalVM 为 EmbeddedKafka 创建本机映像的经验。在集成测试中使用该映像不仅可以加快测试场景的执行速度，还可以减少内存消耗。有趣的是，与在 Testcontainers 中使用 &lt;strong&gt;confluenceinc/cp-kafka&lt;/strong&gt; 相比，速度和内存使用量都有明显差异 - 并且不利于后者。&lt;/p&gt;&#xA;&lt;h2&gt;嵌入式Kafka、测试容器和 GraalVM&lt;/h2&gt;&#xA;&lt;p&gt;项目中使用的关键组件的简要概述：&lt;/p&gt;</description>
      <pubDate>Fri, 12 Jul 2024 11:00:01 +0000</pubDate>
    </item>
  </channel>
</rss>