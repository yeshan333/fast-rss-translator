<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Essential GitHub Enterprise Admin Commands】基本 GitHub Enterprise 管理命令</title>
      <link>https://dzone.com/articles/github-enterprise-admin-commands</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Managing a GitHub Enterprise Server (GHES) efficiently requires familiarity with its command-line utilities. These tools allow administrators to perform a range of critical tasks, from managing users and repositories to optimizing system performance and ensuring security compliance.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;We&#39;ll explore the top ten essential commands that are frequently used by GHES admins:&lt;/p&gt;】&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;有效管理 GitHub Enterprise Server (GHES) 需要熟悉其命令行实用程序。这些工具允许管理员执行一系列关键任务，从管理用户和存储库到优化系统性能和确保安全合规性。 &lt;/p&gt;&#xA;&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;我们将探讨 GHES 管理员经常使用的十大基本命令：&lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2025 16:00:06 +0000</pubDate>
    </item>
    <item>
      <title>【Applying ML and AI for Effective Spamhaus Email Etiquette】应用机器学习和人工智能实现有效的 Spamhaus 电子邮件礼仪</title>
      <link>https://dzone.com/articles/applying-ml-and-ai-for-effective-spamhaus-email-etiquette</link>
      <description>【&lt;p&gt;In digital communication, email remains a primary tool for both personal and business correspondence. However, as email usage has grown, so has the prevalence of spam and malicious emails. Organizations like Spamhaus work tirelessly to maintain email security, protect users from spam, and set standards for email etiquette. By using machine learning (ML) and artificial intelligence (AI), Spamhaus can improve its email filtering accuracy, better identify malicious senders, and promote responsible emailing practices.&lt;/p&gt;&#xA;&lt;p&gt;This article explores how &lt;a href=&#34;https://dzone.com/articles/the-transformative-power-of-ml-amp-ai-in-software&#34;&gt;machine learning and AI&lt;/a&gt; can be leveraged for Spamhaus email etiquette and security, highlighting techniques used for spam detection, filtering, and upholding responsible emailing standards.&lt;/p&gt;】&lt;p&gt;在数字通信中，电子邮件仍然是个人和商业通信的主要工具。然而，随着电子邮件使用量的增长，垃圾邮件和恶意电子邮件的流行也随之增加。 Spamhaus 等组织孜孜不倦地致力于维护电子邮件安全、保护用户免受垃圾邮件侵害，并制定电子邮件礼仪标准。通过使用机器学习 (ML) 和人工智能 (AI)，Spamhaus 可以提高其电子邮件过滤准确性、更好地识别恶意发件人并促进负责任的电子邮件实践。&lt;/p&gt;&#xA;&lt;p&gt;本文探讨了&lt;a href=&#34;https://dzone.com/articles/the-transformative-power-of-ml-amp-ai-in-software&#34;&gt;机器学习和人工智能&lt;/a&gt;如何用于 Spamhaus 电子邮件礼仪和安全，重点介绍用于垃圾邮件检测、过滤和维护负责任的电子邮件标准的技术。&lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2025 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Automating Twilio Recording Exports for Quality Purposes: Python Implementation Guidelines】出于质量目的自动化 Twilio 记录导出：Python 实施指南</title>
      <link>https://dzone.com/articles/automating-twilio-recording-exports</link>
      <description>【&lt;p&gt;For crucial business operations, compliance, and quality assurance call recordings are pivotal. Twilio is a call management system that provides excellent call recording capabilities, but often organizations are in need of automatically downloading and storing these recordings locally or in their preferred cloud storage. However, downloading large numbers of recordings from Twilio can be challenging. In this article, we&#39;ll explore how to build an efficient Python solution for bulk-downloading Twilio recordings while handling pagination, parallel downloads, and queue filtering.&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Use Cases&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;When &lt;a href=&#34;https://dzone.com/articles/integrating-twilio-into-my-saas-solution-in-heroku&#34;&gt;working with call management systems like Twilio&lt;/a&gt;, we might need to:&lt;/p&gt;】&lt;p&gt;对于重要的业务运营，合规性和质量保证通话录音至关重要。 Twilio 是一个呼叫管理系统，提供出色的通话录音功能，但组织通常需要自动下载这些录音并将其存储在本地或他们首选的云存储中。然而，从 Twilio 下载大量录音可能具有挑战性。在本文中，我们将探讨如何构建高效的 Python 解决方案，用于批量下载 Twilio 录音，同时处理分页、并行下载和队列过滤。 &lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;用例&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;当&lt;a href=&#34;https://dzone.com/articles/integrating-twilio-into-my-saas-solution-in-heroku&#34;&gt;使用 Twilio 等呼叫管理系统&lt;/a&gt;时，我们可能会需要：&lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【O11y Guide: Finding Observability and DevEx Tranquility With Platform Engineering】O11y 指南：通过平台工程寻找可观察性和 DevEx 宁静</title>
      <link>https://dzone.com/articles/o11y-guide-find-observability-and-devex-tranquility</link>
      <description>【&lt;p&gt;Monitoring system behavior is essential for ensuring long-term effectiveness. However, managing an end-to-end observability stack can feel like sailing stormy seas — without a clear plan, you risk blowing off course into system complexities.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;By integrating observability as a first-class citizen within your platform engineering practices, you can simplify this challenge and stay on track in the ever-evolving cloud-native landscape. &amp;nbsp;&lt;/p&gt;】&lt;p&gt;监控系统行为对于确保长期有效性至关重要。然而，管理端到端的可观测性堆栈感觉就像在波涛汹涌的大海上航行——如果没有明确的计划，您就有可能偏离航线，陷入系统复杂性。 &lt;/p&gt;&#xA;&lt;p&gt;通过将可观察性作为一等公民集成到平台工程实践中，您可以简化这一挑战，并在不断发展的云原生环境中保持正轨。  &lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【A Deep Dive on Read Your Own Writes Consistency】深入探讨“读取自己的写入”一致性</title>
      <link>https://dzone.com/articles/read-your-own-writes-consistency</link>
      <description>【&lt;p&gt;In the world of distributed systems, few things are more frustrating to users than making a change and then not seeing it immediately. Try to change your status on your favorite social network site and reload the page only to discover your previous status. This is where Read Your Own Writes (RYW) consistency becomes quite important; this is not a technical need but a core expectation from the user&#39;s perspective.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;What Is Read Your Own Writes Consistency?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/consistency-in-databases&#34;&gt;Read Your Own Writes consistency&lt;/a&gt; is an assurance that once a process, usually a user, has updated a piece of data, all subsequent reads by that same process will return the updated value. It is a specific category of session consistency along the lines of how the user interacts with their own data modification.&lt;/p&gt;】&lt;p&gt;在分布式系统的世界中，没有什么比做出更改但没有立即看到它更让用户沮丧的了。尝试更改您最喜爱的社交网站上的状态并重新加载页面，结果发现您以前的状态。这就是 Read Your Own Writes (RYW) 一致性变得非常重要的地方；这不是技术需求，而是用户角度的核心期望。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;什么是读取自己的写入一致性？&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/consistency-in-databases&#34;&gt;读取您自己的写入一致性&lt;/a&gt;是一个保证，一旦一个进程（通常是用户）更新了一个片段数据，同一进程的所有后续读取都将返回更新后的值。它是会话一致性的一个特定类别，与用户如何与其自己的数据修改进行交互有关。&lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2025 17:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Enhancing Cloud Cybersecurity for Critical Infrastructure Protection】增强云网络安全以保护关键基础设施</title>
      <link>https://dzone.com/articles/enhancing-cloud-security-in-critical-infrastructure</link>
      <description>【&lt;p&gt;Cloud computing has become one of the core building blocks for modern software development. It underpins scalable web applications and forms a foundation for national infrastructure. In turn, as more enterprises and organizations adopt the cloud, the increased efficiency and productivity also raise critical systems to significant cybersecurity risks.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;As a software developer, it is vital to understand these risks and apply best practices that provide safety and resilience. The following represents an overview of challenges in securing cloud environments, critical infrastructure weaknesses, and actionable solutions to foster safer system development.&lt;/p&gt;】&lt;p&gt;云计算已成为现代软件开发的核心构建模块之一。它支撑可扩展的网络应用程序并构成国家基础设施的基础。反过来，随着越来越多的企业和组织采用云，效率和生产力的提高也使关键系统面临重大网络安全风险。 &lt;/p&gt;&#xA;&lt;p&gt;作为软件开发人员，了解这些风险并应用提供安全性和弹性的最佳实践至关重要。以下概述了保护云环境的挑战、关键基础设施的弱点以及促进更安全的系统开发的可行解决方案。&lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Pathway to Legacy Application Retirement】遗留应用程序退役之路</title>
      <link>https://dzone.com/articles/the-pathway-to-legacy-application-retirement</link>
      <description>【&lt;p&gt;It is a continuous effort to stay competent with technological advances and stay current. Hence, there is a need for companies to continually evaluate what is obsolete or inefficient and adapt to new tools and approaches. As the data grows over time, we start to observe the operations being slowed down, and with the changes in security standards and increased amount of creative security risks, the application may become vulnerable or cost more to keep it running. Such situations call for an upgrade or replacement of inefficient applications. Choosing more modern, scalable, secure alternatives will increase performance and better fulfill the consumers&#39; demands. This article looks at application retirement from a data perspective, best practices, challenges, and how to manage and leverage data during this process.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Understanding Application Retirement&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3&gt;&lt;strong&gt;Application Retirement and Its Importance&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Application retirement is the process of shutting down outdated, redundant, or legacy software or business applications while ensuring that critical data is preserved, accessible, and compliant with regulatory standards.&lt;/p&gt;】&lt;p&gt;我们需要不断努力，以保持技术进步的能力并保持与时俱进。因此，公司需要不断评估过时或低效的内容，并适应新的工具和方法。随着数据随着时间的推移而增长，我们开始观察到操作速度正在减慢，并且随着安全标准的变化和创造性安全风险的增加，应用程序可能会变得容易受到攻击，或者保持其运行的成本更高。这种情况需要升级或更换低效的应用程序。选择更现代、可扩展、更安全的替代方案将提高性能并更好地满足消费者的需求。本文从数据角度探讨应用程序退役、最佳实践、挑战以及如何在此过程中管理和利用数据。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;了解应用程序停用&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3&gt;&lt;strong&gt;应用程序退役及其重要性&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;应用程序停用是关闭过时、冗余或遗留软件或业务应用程序，同时确保关键数据得到保留、可访问并符合监管标准的过程。&lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【On SBOMs, BitBucket, and OWASP Dependency Track】关于 SBOM、BitBucket 和 OWASP 依赖项轨道</title>
      <link>https://dzone.com/articles/on-sboms-bitbucket-and-owasp-dependency-track</link>
      <description>【&lt;p&gt;The museum of old and new architectures I am involved with forced me to look into safeguarding them. For instance, an old dependency can turn CVE or a solid open-source project can go commercial. This is where the concept of a Software Bill of Material (SBOM) came into existence to catalog the license and dependency ecosystem of systems. This build artifact, in its turn, is then analyzed to determine whether the constituting components are:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;Vulnerable to exploitation, or&lt;/li&gt;&#xA; &lt;li&gt;Licensed under unpalatable conditions, such as being too commercial or too predatory.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;This article will explain how to control such vulnerability using:&lt;/p&gt;】&lt;p&gt;我参与的新旧建筑博物馆迫使我考虑保护它们。例如，旧的依赖项可以转变为 CVE，或者可靠的开源项目可以商业化。这就是软件物料清单 (SBOM) 概念的出现，用于对系统的许可证和依赖项生态系统进行分类。然后，依次分析该构建工件以确定其构成组件是否：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA; &lt;li&gt;容易受到剥削，或者&lt;/li&gt;&#xA; &lt;li&gt;在令人不快的条件下获得许可，例如过于商业化或过于掠夺性。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;本文将解释如何使用以下方法控制此类漏洞：&lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Usage of GenAI for Personalized Customer Experience in Mobile Apps】在移动应用程序中使用 GenAI 实现个性化客户体验</title>
      <link>https://dzone.com/articles/genai-for-personalized-customer-experience-in-mobile-apps</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Personalization today is an essential part of any successful mobile app. With 89% of U.S. marketers confirming that personalization on websites and apps has led to revenue growth and 88% prioritizing it to improve customer experience, the data speaks for itself.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Thus, &lt;a href=&#34;https://dzone.com/articles/introduction-generative-ai-empowering-enterprises&#34;&gt;generative AI&lt;/a&gt; (GenAI) is proving to be a success in the mobile application segment in terms of bringing personalized experiences that users demand.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;如今，个性化是任何成功移动应用程序的重要组成部分。 89% 的美国营销人员确认网站和应用程序的个性化带来了收入增长，88% 的营销人员将其优先考虑以改善客户体验，数据不言而喻。 &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;因此，&lt;a href=&#34;https://dzone.com/articles/introduction-generative-ai-empowering-enterprises&#34;&gt;生成式 AI&lt;/a&gt; (GenAI) 被证明是在提供用户所需的个性化体验方面，移动应用程序领域取得了成功。&lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【I Built an Automatic Proposal Generation LLM and Open-Sourced It on GitHub】我构建了一个自动提案生成 LLM 并将其在 GitHub 上开源</title>
      <link>https://dzone.com/articles/ive-built-an-automatic-proposal-generation-large-l</link>
      <description>【&lt;p data-sourcepos=&#34;1:1-1:98&#34;&gt;Recently, I haven’t been updating my open-source articles as frequently — not because I’ve stopped writing, but because the progress on open-source commercialization has been great, and the endless task of drafting proposals has consumed my time.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p data-sourcepos=&#34;1:1-1:98&#34;&gt;As a native open-source commercial company, WhaleOps employs mostly engineers. Asking these open-source contributors to write proposals wastes their development time, and their proposals don’t always meet the quality standard. Unlike managing in a big company, being a startup CEO means stepping into any role the company needs. After every strategic meeting, I’m the first to roll up my sleeves and tackle the most urgent tasks. As a result, I haven’t had time to write articles, as my limited time is mostly taken up with creating proposals that follow the formal template style. Especially recently, with one bid after another, I’ve found myself questioning my own sanity.&lt;/p&gt;】&lt;p data-sourcepos=&#34;1:1-1:98&#34;&gt;最近我没有那么频繁地更新我的开源文章——不是因为我不再写了，而是因为开源商业化的进展已经太棒了，无休止的起草提案的任务消耗了我的时间。 &lt;/p&gt;&#xA;&lt;p data-sourcepos=&#34;1:1-1:98&#34;&gt;作为一家本土开源商业公司，WhaleOps 的员工主要是工程师。要求这些开源贡献者编写提案会浪费他们的开发时间，而且他们的提案并不总是符合质量标准。与大公司的管理不同，成为初创公司的首席执行官意味着担任公司需要的任何角色。每次战略会议结束后，我都会第一个卷起袖子，解决最紧迫的任务。结果，我没有时间写文章，因为我有限的时间主要花在创建遵循正式模板风格的提案上。尤其是最近，随着一次又一次的出价，我发现自己开始怀疑自己的理智。&lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2025 21:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>