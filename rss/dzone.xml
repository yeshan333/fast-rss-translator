<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Understanding the Mandelbrot Set: A Beautiful Benchmark for Computing Power】了解Mandelbrot集：计算能力的精美基准</title>
      <link>https://dzone.com/articles/compare-programming-languages-mandelbrot-set</link>
      <description>【&lt;p&gt;Imagine a mathematical object so complex that it can push computers to their limits, yet so beautiful that it has captivated mathematicians and artists alike. Welcome to the world of the Mandelbrot set—a fascinating fractal that doubles as a powerful benchmark for &lt;a href=&#34;https://dzone.com/articles/performance-optimization-strategies-in-highly-scal&#34;&gt;computing performance.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Have you ever wondered how to compare the performance of different &lt;a href=&#34;https://dzone.com/articles/top-10-programming-languages-for-software-developm&#34;&gt;programming languages&lt;/a&gt;? While there are many benchmarking tools available, the Mandelbrot set offers a uniquely compelling approach that combines mathematical elegance with computational challenge.&lt;/p&gt;】&lt;p&gt;想象一个数学对象如此复杂，以至于它可以将计算机推向其极限，但如此美丽，以至于吸引了数学家和艺术家。欢迎来到Mandelbrot套装的世界，这是一个引人入胜的分形，它可以作为&lt;a href =“ https://dzone.com/articles/performance-performance-performance-performance-strategies-strategies-ingrategies-ingy-highly-scal”&gt;计算性能的强大基准。&lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt;&#xA;&lt;p&gt;您是否曾经想过如何比较不同的&lt;a href =“ https://dzone.com/articles/top-10-programming-languages-for-software-developm”&gt;编程语言&lt;/a&gt; &lt;/a&gt;？尽管有许多基准测试工具可用，但Mandelbrot集提供了一种引人入胜的方法，将数学优雅与计算挑战相结合。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Jun 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Secure Your Oracle Database Passwords in AWS RDS With a Password Verification Function】使用密码验证功能，将Oracle数据库密码固定在AWS RD中</title>
      <link>https://dzone.com/articles/secure-oracle-passwords-aws-rds</link>
      <description>【&lt;p&gt;Protecting database access through strong password policies is a cornerstone of security in any environment. When deploying Oracle databases on AWS RDS, enforcing password complexity is essential, but the approach differs slightly from on-premises Oracle environments. AWS provides two primary ways to enforce password complexity in RDS Oracle: using the standard &lt;code&gt;ORA_STIG_VERIFY_FUNCTION&lt;/code&gt; or a custom user-defined verification function.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;This article provides a detailed, step-by-step guide for implementing both methods to help secure Oracle database passwords in AWS RDS.&lt;/p&gt;】&lt;p&gt;通过强密码策略保护数据库访问是任何环境中安全的基石。在AWS RDS上部署Oracle数据库时，执行密码复杂性是必不可少的，但是该方法与本地Oracle环境略有不同。 AWS提供了在RDS Oracle中执行密码复杂性的两种主要方法：使用标准&lt;code&gt; ora_stig_verify_function &lt;/code&gt;或自定义的用户定义的验证功能。 &lt;/p&gt;&#xA;&lt;p&gt;本文提供了一份详细的，分步的指南，用于实施两种方法，以帮助AWS RDS中的Oracle数据库密码安全。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Jun 2025 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Event Sourcing Unpacked: The What, Why, and How】活动采购打开包装：什么，原因以及如何</title>
      <link>https://dzone.com/articles/event-sourcing-unpacked-the-what-why-and-how</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;A traditional system maintains its state consistent with respective business rules. When queried, this system provides its current state &lt;em&gt;only&amp;nbsp;&lt;/em&gt;i.e. where the system is, and no information about &lt;em&gt;how&amp;nbsp;&lt;/em&gt;it got there.&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;A simple approach to track the systems’ state evolution (&lt;em&gt;how it got there&lt;/em&gt;) is by maintaining history. However, this approach is limited to providing information about state changes only. Moreover, the record-keeping becomes burdened with process details and has to evolve with all the processes that affect the state change.&lt;/p&gt;】&lt;p数​​据选择性 - 段落=“”&gt;传统系统与各自的业务规则保持一致。当查询时，该系统提供其当前状态&lt;em&gt;仅&lt;/em&gt;即。系统在哪里，没有有关&lt;em&gt;如何到达那里的信息。&lt;/p&gt;&#xA;&lt;p数​​据选择 - 段落=“”&gt;一种简单的方法来跟踪系统状态进化（&lt;em&gt;如何到达那里&lt;/em&gt;）是通过维护历史记录。但是，这种方法仅限于提供有关状态变化的信息。此外，记录保存变得负担着流程细节的负担，并且必须随着影响国家变化的所有过程而发展。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Jun 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【What They Don’t Teach You About Starting Your First IT Job】他们不教您开始您的第一个IT工作的内容</title>
      <link>https://dzone.com/articles/starting-first-it-job-tips</link>
      <description>【&lt;h2 data-pm-slice=&#34;1 1 []&#34;&gt;From Certification to Chaos&lt;/h2&gt;&#xA;&lt;p&gt;You’ve got your first tech job. You’re excited, you’re nervous—and within the first week, you’re confused.&lt;/p&gt;&#xA;&lt;p&gt;Everyone talks about sprints, blockers, Jira, and velocity. But what didn’t they mention in your certification course? Real life doesn’t run by the book. You won’t find answers for every work situation in your Scrum manual or your college lecture notes.&lt;/p&gt;】&lt;h2 data-pm-slice =“ 1 1 []”&gt;从认证到混乱&lt;/h2&gt;&#xA;&lt;p&gt;您有第一份技术工作。您很兴奋，您很紧张 - 在第一周内，您感到困惑。&lt;/p&gt;&#xA;&lt;p&gt;每个人都在谈论冲刺，阻滞剂，JIRA和速度。但是他们在您的认证课程中没有提及什么？现实生活并非由书经营。您不会在Scrum手册或大学讲义中找到所有工作状况的答案。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Jun 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Altering XML Tag Position Using Mule 4 With Basic Authentication】使用Mule 4和基本身份验证更改XML标签位置</title>
      <link>https://dzone.com/articles/shifting-the-tag-postion-using-mule-4-dwl</link>
      <description>【&lt;p data-end=&#34;438&#34; data-start=&#34;81&#34;&gt;Sometimes when working with &lt;a href=&#34;https://dzone.com/refcardz/using-xml-java&#34;&gt;XML data&lt;/a&gt;, you need to rearrange the order of elements to match a specific format the business requires. But going through each tag one by one and looping over everything can get complicated and slow. Luckily, with &lt;a href=&#34;https://dzone.com/articles/deploying-applications-on-mule-4&#34;&gt;Mule 4&lt;/a&gt; and &lt;a href=&#34;https://dzone.com/articles/dataweave-functions-learn-from-basics&#34;&gt;DataWeave 2.0&lt;/a&gt;, you can easily shift XML tags around without having to write complex loops or extra code.&lt;/p&gt;&#xA;&lt;p data-end=&#34;570&#34; data-start=&#34;440&#34;&gt;On top of that, if your service needs to be secured, basic authentication can be seamlessly added to keep things safe and simple.&lt;/p&gt;】&lt;p data-end =“ 438” data-start =“ 81”&gt;有时在使用&lt;a href =“ https://dzone.com/refcardz/refcardz/ususe-xml-java”&gt; xml data &lt;/a&gt;，您需要重新排列元素的顺序以匹配特定格式的业务。但是，逐一遍历每个标签并循环遍历所有标签会变得复杂和缓慢。幸运的是，使用&lt;a href =“ https://dzone.com/articles/deploying-applications-mule-4”&gt; mule 4 &lt;/a&gt;和&lt;a href =“ https://dzone.com/articles/articles/articles/datawaaweave-functions-learn-functions-learn-from-bassions-lot tho to Shift to to Shrive throws of tho nothy to to Shift tho nofe thoss of tho tophain&gt; date&gt;循环或额外代码。&lt;/p&gt;&#xA;&lt;p data-end =“ 570” data-start =“ 440”&gt;最重要的是，如果需要确保您的服务，则可以无缝添加基本身份验证以确保事物安全和简单。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Jun 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Rise of Self‐Service Platforms: How Cloud Development Environments Are Reshaping Dev Culture】自助服务平台的兴起：云发展环境如何重塑开发文化</title>
      <link>https://dzone.com/articles/cloud-development-environment-reshaping-dev-culture</link>
      <description>【&lt;p&gt;As software development continues to evolve, companies are reimagining how teams collaborate to build and ship applications. The emergence of &lt;a href=&#34;https://dzone.com/articles/the-need-for-secure-cloud-development-environments&#34;&gt;cloud development environments&lt;/a&gt; (CDEs) has been a major catalyst in this change, offering self‐service platforms that make it easier for developers to spin up resources on demand. Coupled with platform engineering and internal developer portals, these self‐service solutions are fundamentally altering the software development culture by reducing cognitive load and boosting productivity.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;The Shift Toward Self&lt;/strong&gt;&lt;strong&gt;‐&lt;/strong&gt;&lt;strong&gt;Service&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Traditionally, developers had to navigate complex layers of approvals and processes to get the infrastructure they needed. Each new environment or tool often meant waiting for separate teams, such as ops or security, to provision resources. This created bottlenecks, slowed innovation, and increased context-switching.&lt;/p&gt;】&lt;p&gt;随着软件开发的不断发展，公司正在重新想象团队如何合作建立和运输应用程序。 &lt;a href =“ https://dzone.com/articles/the-need-for-secure-cloud-development-envormentments”&gt;云开发环境的出现&lt;/a&gt;（CDES）一直是这种变化的主要催化剂，它为开发人员提供了更轻松的自我服务平台，使开发人员更容易销售需求的资源。加上平台工程和内部开发人员门户网站，这些自助服务解决方案从根本上通过降低认知载荷和提高生产率来改变软件开发文化。&lt;/p&gt;&#xA;&lt;h2&gt; &lt;strong&gt;向自我&lt;/strong&gt; &lt;strong&gt;  -  &lt;/strong&gt; &lt;strong&gt;服务的转变&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt;传统上，开发人员必须浏览复杂的批准和流程层，以获取所需的基础架构。每个新的环境或工具通常都意味着等待单独的团队，例如OPS或Security，以提供资源。这创造了瓶颈，减慢了创新并增加了上下文开关。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Jun 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Turbocharge Load Testing: Yandex.Tank + ghz Combo for Lightning-Fast Code Checks】涡轮增压负载测试：yandex.tank + GHz组合闪电代码检查</title>
      <link>https://dzone.com/articles/yandex-tank-ghz-load-testing</link>
      <description>【&lt;p&gt;Hi there! Occasionally, there arises a need for swift load testing, whether it be in a local environment or on a testing platform. Typically, such tasks are tackled using specialized tools that demand thorough prior comprehension. However, within enterprises and startups where rapid time-to-market and prompt hypothesis validation are paramount, excessive tool familiarization becomes a luxury.&lt;/p&gt;&#xA;&lt;p&gt;This article aims to spotlight developer-centric solutions that obviate the necessity for profound engagement, allowing for rudimentary testing without delving into pages of documentation.&lt;/p&gt;】&lt;p&gt;嗨！有时，无论是在本地环境还是在测试平台上，都需要快速负载测试。通常，使用专门的工具来解决此类任务，这些工具需要彻底的事先理解。但是，在企业和初创企业中，快速上市时间和及时假设验证至关重要，过多的工具熟悉成为一种奢侈品。&lt;/p&gt;&#xA;&lt;p&gt;本文旨在聚焦以开发人员为中心的解决方案，这些解决方案消除了深刻参与的必要性，允许在不深入研究文档的情况下进行基本测试。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Jun 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How Node.js Works Behind the Scenes (HTTP, Libuv, and Event Emitters)】node.js如何在幕后工作（http，libuv和活动发射器）</title>
      <link>https://dzone.com/articles/how-nodejs-works-http-libuv-event-emitters</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;When working with Node.js, most people just learn how to use it to build apps or run servers—but very few stop to ask how it actually works under the hood. Understanding the inner workings of Node.js helps you write better, more efficient code. It also makes debugging and optimizing your apps much easier.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;A lot of developers think &lt;a href=&#34;https://dzone.com/refcardz/nodejs&#34;&gt;Node.js&lt;/a&gt; is just &#34;JavaScript with server features&#34;. That’s not entirely true. While it uses JavaScript, Node.js is much more than that. It includes powerful tools and libraries that give JavaScript abilities it normally doesn&#39;t have—like accessing your computer’s file system or handling network requests. These extra powers come from something deeper happening behind the scenes, and that&#39;s what this blog will help you understand.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;与node.js一起工作时，大多数人只是学习如何使用它来构建应用程序或运行服务器，但是很少有人停下来询问它如何在引擎盖下实际工作。了解node.js的内部起作用，可以帮助您编写更好，更有效的代码。它还使调试和优化应用程序变得更加容易。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;许多开发人员认为&lt;a href =“ https://dzone.com/refcardz/nodejs”&gt; node.js &lt;/a&gt;只是“带有服务器功能的JavaScript”。这不是完全正确的。虽然使用JavaScript，但Node.js远不止于此。它包括功能强大的工具和库，这些工具和库具有通常没有的JavaScript功能 - 例如访问计算机的文件系统或处理网络请求。这些额外的功能来自幕后发生的更深入的事情，这就是此博客可以帮助您理解的。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Jun 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Exploring Reactive and Proactive Observability in the Modern Monitoring Landscape】探索现代监测环境中的反应性和主动可观察性</title>
      <link>https://dzone.com/articles/reactive-and-proactive-observability-in-the-modern-monitoring-landscape</link>
      <description>【&lt;h2 dir=&#34;ltr&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;The modern digital world, with its complex web of microservices, containerized apps, and cloud-native systems, demands a rethinking of how we monitor and observe these environments. From the traditional monitoring systems, there is an evident shift to two main approaches that have emerged: Reactive and Proactive observability.&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;What is Reactive and Proactive Observability?&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Organizations rely on metrics, logs, and traces to retroactively identify the underlying causes of issues, similar to treating an infection. &lt;a href=&#34;https://dzone.com/articles/how-observability-is-redefining-developer-roles&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Reactive observability&lt;/a&gt; is a conventional approach that examines system behavior after an incident has occurred. This reactive method requires organizations to have the necessary tools and expertise, which helps them detect symptoms and connect them to a solution that resolves the problem.&lt;/p&gt;】&lt;h2 dir =“ ltr”&gt;简介&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;现代数字世界，其复杂的微服务，容器化应用程序和云本地系统需要重新思考我们如何监视和观察这些环境。从传统的监测系统中，出现了两种主要方法：反应性和主动可观察性。 &lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt;什么是反应性和主动可观察性？&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;组织依靠指标，日志和痕迹来追溯识别问题的根本原因，类似于治疗感染。 &lt;a href =“ https://dzone.com/articles/how-observability-is-redefining-developer-roles” rel =“ noopener noreferrer” target =“ _ blank”&gt;反应性可观察性&lt;/a&gt;是事件发生后检查系统行为的常规方法。这种反应性方法要求组织具有必要的工具和专业知识，这有助于他们检测症状并将其连接到解决问题的解决方案中。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Jun 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Taming Billions of Rows: How Metadata and SQL Can Replace Your ETL Pipeline】驯服数十亿行：元数据和SQL如何替换您的ETL管道</title>
      <link>https://dzone.com/articles/how-metadata-sql-can-replace-etl-pipeline</link>
      <description>【&lt;p data-line=&#34;2&#34; dir=&#34;auto&#34;&gt;Many enterprises that collect large volumes of time-series data from storage, virtualization, and cloud environments often run into a known problem: retaining long-term insights (data) without overwhelming storage and compute. To solve this problem, time-series analytics platforms need to handle billions of records efficiently while still delivering actionable insights.&lt;/p&gt;&#xA;&lt;p data-line=&#34;4&#34; dir=&#34;auto&#34;&gt;The solution we will discuss here is to build a dynamic data aggregation engine directly into the platform. This article looks at a vendor-agnostic approach for aggregating, transforming, and purging time-series data effectively. The goal is to make it easier to manage growth without sacrificing data quality or performance and reducing storage needed.&lt;/p&gt;】&lt;p data-line =“ 2” dir =“ auto”&gt;许多企业从存储，虚拟化和云环境中收集大量的时间序列数据通常会遇到一个已知问题：保留长期见解（数据）而不压倒存储和计算。为了解决这个问题，时间序列分析平台需要有效地处理数十亿个记录，同时仍提供可行的见解。&lt;/p&gt;&#xA;&lt;p data-line =“ 4” dir =“ auto”&gt;我们将在这里讨论的解决方案是将动态数据聚合引擎直接构建到平台中。本文着眼于一种供应商不稳定的方法，用于有效地汇总，转换和清除时间序列数据。目标是使管理增长更容易，而无需牺牲数据质量或性能并减少所需的存储。&lt;/p&gt;</description>
      <pubDate>Tue, 10 Jun 2025 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>