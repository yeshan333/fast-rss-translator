<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Kubernetes Observability: Lessons Learned From Running Kubernetes in Production】Kubernetes 可观察性：在生产中运行 Kubernetes 的经验教训</title>
      <link>https://dzone.com/articles/kubernetes-observability-lessons-learned</link>
      <description>【&lt;p style=&#34;font-size: 17px;&#34;&gt;&lt;em&gt;Editor&#39;s Note: The following is an article written for and published in DZone&#39;s 2024 Trend Report,&amp;nbsp;&lt;/em&gt;&lt;a href=&#34;https://dzone.com/link/2024-tr-kubernetes-contributor-article&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Kubernetes in the Enterprise: Once Decade-Defining, Now Forging a Future in the SDLC&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;In recent years, observability has re-emerged as a critical aspect of DevOps and software engineering in general, driven by the growing complexity and scale of modern, cloud-native applications. The transition toward microservices architecture as well as complex cloud deployments — ranging from multi-region to multi-cloud, or even hybrid-cloud, environments — has highlighted the shortcomings of traditional methods of monitoring.&lt;/p&gt;】&lt;p style=&#34;font-size: 17px;&#34;&gt;&lt;em&gt;编者注：以下是为 DZone 2024 年趋势报告撰写并发表的文章，&lt;/em&gt;&lt;a href=&#34;https://dzone.com /link/2024-tr-kubernetes-contributor-article&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;企业中的 Kubernetes：曾经定义十年，现在在 SDLC 中打造未来&lt;/em&gt;&lt; /a&gt;.&lt;/p&gt;&#xA;&lt;小时&gt;&#xA;近年来，由于现代云原生应用程序的复杂性和规模不断增长，可观测性已重新成为 DevOps 和软件工程的一个关键方面。向微服务架构的转变以及复杂的云部署（从多区域到多云，甚至混合云环境）凸显了传统监控方法的缺点。&lt;/p&gt;</description>
      <pubDate>Tue, 01 Oct 2024 22:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Workarounds for Oracle Restrictions on the Size of Expression Lists】Oracle 对表达式列表大小的限制的解决方法</title>
      <link>https://dzone.com/articles/workarounds-for-oracle-restrictions</link>
      <description>【&lt;p&gt;When developing an enterprise system — whether it is a completely new system or simply the addition of a new feature — it is not uncommon to need to retrieve a significant volume of records (a few hundred or even thousands) from an underlying &lt;a href=&#34;https://dzone.com/articles/relational-database-structures-and-sql-tuning-tech&#34;&gt;relational database&lt;/a&gt;. &amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;A usual scenario is having a list of identifiers (user IDs, for example) and needing to retrieve a set of data from each of them. Disregarding all the ease provided by Object-Relational Mappers, among which &lt;a href=&#34;https://hibernate.org/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Hibernate&lt;/a&gt; can be underlined as a very reliable option, a straightforward way to address such a situation is to build a &lt;code&gt;SQL SELECT&lt;/code&gt; query and bind all identifiers as a comma-delimited list of expressions in combination with a &lt;code&gt;SQL IN&lt;/code&gt; operator. The snippet below shows the query structure.&lt;/p&gt;】&lt;p&gt;在开发企业系统时 - 无论是全新的系统还是只是添加新功能 - 需要从底层检索大量记录（几百甚至数千）并不罕见&lt; a href=&#34;https://dzone.com/articles/relational-database-structs-and-sql-tuning-tech&#34;&gt;关系数据库&lt;/a&gt;。  &lt;/p&gt;&#xA;&lt;p&gt;常见的场景是拥有一个标识符列表（例如用户 ID）并需要从每个标识符中检索一组数据。忽略对象关系映射器提供的所有便利，其中 &lt;a href=&#34;https://hibernate.org/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Hibernate&lt;/a&gt; 可以被强调为非常可靠的选项，解决这种情况的一种直接方法是构建一个 &lt;code&gt;SQL SELECT&lt;/code&gt; 查询，并将所有标识符绑定为逗号分隔的表达式列表，并与 &lt;code&gt;SQL IN&lt;/code&gt; 结合使用操作员。下面的代码片段显示了查询结构。&lt;/p&gt;</description>
      <pubDate>Tue, 01 Oct 2024 17:00:12 +0000</pubDate>
    </item>
    <item>
      <title>【Guarding Kubernetes From the Threat Landscape: Effective Practices for Container Security】保护 Kubernetes 免受威胁：容器安全的有效实践</title>
      <link>https://dzone.com/articles/kubernetes-and-container-security-practices</link>
      <description>【&lt;p style=&#34;font-size: 17px;&#34;&gt;&lt;em&gt;Editor&#39;s Note: The following is an article written for and published in DZone&#39;s 2024 Trend Report,&amp;nbsp;&lt;/em&gt;&lt;a href=&#34;https://dzone.com/link/2024-tr-kubernetes-contributor-article&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Kubernetes in the Enterprise: Once Decade-Defining, Now Forging a Future in the SDLC&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Kubernetes is driving the future of cloud computing, but its security challenges require us to adopt a full-scale approach to ensure the safety of our environments. Security is not a one-size-fits-all solution; security is a spectrum, influenced by the specific context in which it is applied. Security professionals in the field rarely declare anything as entirely secure, but always as more or less secure than alternatives. In this article, we are going to present various methods to brace the security of your containers.&amp;nbsp;&lt;/p&gt;】&lt;p style=&#34;font-size: 17px;&#34;&gt;&lt;em&gt;编者注：以下是为 DZone 2024 年趋势报告撰写并发表的文章，&lt;/em&gt;&lt;a href=&#34;https://dzone.com /link/2024-tr-kubernetes-contributor-article&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;企业中的 Kubernetes：曾经定义十年，现在在 SDLC 中打造未来&lt;/em&gt;&lt; /a&gt;.&lt;/p&gt;&#xA;&lt;小时&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Kubernetes 正在推动云计算的未来，但其安全挑战要求我们采取全面的方法来确保环境的安全。安全并不是一种万能的解决方案；安全性是一个范围，受到其应用的特定环境的影响。该领域的安全专业人士很少宣称任何东西是完全安全的，但总是比其他替代方案更安全或更不安全。在本文中，我们将介绍各种方法来保证容器的安全性。 &lt;/p&gt;</description>
      <pubDate>Tue, 01 Oct 2024 13:00:14 +0000</pubDate>
    </item>
    <item>
      <title>【Balance Trade-Offs in Microservices Architecture】平衡微服务架构中的权衡</title>
      <link>https://dzone.com/articles/balance-trade-offs-in-microservices-architecture</link>
      <description>【&lt;p&gt;When &lt;a href=&#34;https://dzone.com/articles/microservice-architecture-2&#34;&gt;architecting microservices&lt;/a&gt;, we deal with different non-functional requirements and their trade-offs. It&#39;s important to keep the right balance among different architectural aspects. Every architectural decision has its advantages and disadvantages, the challenge is finding a balance among them as much as possible according to what each system needs. We must balance the trade-offs in microservices architecture between various functional and non-functional elements to maximize the system efficiently.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Following are the key trade-offs you can deal with in implementing the microservices, which are discussed with different scenario-based strategies:&lt;/p&gt;】&lt;p&gt;在&lt;a href=&#34;https://dzone.com/articles/microservice-architecture-2&#34;&gt;构建微服务&lt;/a&gt;时，我们会处理不同的非功能性需求及其权衡。在不同的架构方面保持适当的平衡非常重要。每个架构决策都有其优点和缺点，挑战是根据每个系统的需求尽可能在它们之间找到平衡。我们必须平衡微服务架构中各种功能和非功能元素之间的权衡，以有效地最大化系统。 &lt;/p&gt;&#xA;&lt;p&gt;以下是您在实现微服务时可以处理的关键权衡，这些权衡是通过不同的基于场景的策略进行讨论的：&lt;/p&gt;</description>
      <pubDate>Tue, 01 Oct 2024 19:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Leveraging Artificial Intelligence for Software Testing To Test Healthcare Applications】利用人工智能进行软件测试来测试医疗保健应用程序</title>
      <link>https://dzone.com/articles/leveraging-ai-for-software-testing-in-healthcare-apps</link>
      <description>【&lt;p&gt;The healthcare domain is complex, and Medicare often undervalues the potential of patients to adapt to modern technology. Despite this, technology can significantly enhance healthcare software products. However, the acquisition of these advancements is not easy for patients, particularly those on Medicare or with chronic conditions, due to unique obstacles.&lt;/p&gt;&#xA;&lt;p&gt;To offer top-notch software products, it&#39;s necessary to stay up-to-date with technology. AI-driven solutions are on the verge of rapid evolution, offering transformative benefits. For instance, &lt;a href=&#34;https://dzone.com/guides/artificial-intelligence-machine-learning-and-predi&#34;&gt;predictive analytics that utilizes artificial intelligence&lt;/a&gt; can predict health risks based on patient data, which can lead to timely interventions. Furthermore, administrative tasks are streamlined through automated systems, resulting in improved efficiency and cost reduction.&lt;/p&gt;】&lt;p&gt;医疗保健领域很复杂，医疗保险经常低估患者适应现代技术的潜力。尽管如此，技术可以显着增强医疗保健软件产品。然而，由于独特的障碍，获得这些进步对于患者来说并不容易，特别是那些接受医疗保险或患有慢性病的患者。&lt;/p&gt;&#xA;&lt;p&gt;要提供一流的软件产品，必须紧跟最新技术。人工智能驱动的解决方案正处于快速发展的边缘，带来变革性的好处。例如，&lt;a href=&#34;https://dzone.com/guides/artificial-intelligence-machine-learning-and-predi&#34;&gt;利用人工智能的预测分析&lt;/a&gt;可以根据患者数据预测健康风险，这可以导致及时干预。此外，通过自动化系统简化了管理任务，从而提高了效率并降低了成本。&lt;/p&gt;</description>
      <pubDate>Tue, 01 Oct 2024 20:00:11 +0000</pubDate>
    </item>
    <item>
      <title>【Azure Deployment Using FileZilla】使用 FileZilla 进行 Azure 部署</title>
      <link>https://dzone.com/articles/azure-deployment-using-filezilla</link>
      <description>【&lt;p&gt;In today&#39;s digital landscape, deploying &lt;a href=&#34;https://dzone.com/articles/the-cutting-edge-of-web-application-development&#34;&gt;web applications&lt;/a&gt; to the cloud is a common practice. Azure provides various deployment options, including GitHub, &lt;a href=&#34;https://dzone.com/articles/azure-devops-insights-advantages-and-challenges&#34;&gt;Azure DevOps&lt;/a&gt;, &lt;a href=&#34;https://dzone.com/articles/bitbucket-adds-pipelines&#34;&gt;Bitbucket&lt;/a&gt;, FTP, or a local Git repository.&lt;/p&gt;&#xA;&lt;p&gt;In this step-by-step guide, we will focus on the FileZilla FTP client as a means to publish your &lt;a href=&#34;https://dzone.com/refcardz/angularjs-essentials&#34;&gt;Angular&lt;/a&gt; UI application to Azure. Follow these steps to make your Angular app accessible to the world.&lt;/p&gt;】&lt;p&gt;在当今的数字环境中，将&lt;a href=&#34;https://dzone.com/articles/the-cutting-edge-of-web-application-development&#34;&gt;网络应用程序&lt;/a&gt;部署到云端是一种常见做法。 Azure 提供各种部署选项，包括 GitHub、&lt;a href=&#34;https://dzone.com/articles/azure-devops-insights-advantages-and-challenges&#34;&gt;Azure DevOps&lt;/a&gt;、&lt;a href=&#34;https ://dzone.com/articles/bitbucket-adds-pipelines&#34;&gt;Bitbucket&lt;/a&gt;、FTP 或本地 Git 存储库。&lt;/p&gt;&#xA;&lt;p&gt;在本分步指南中，我们将重点关注 FileZilla FTP 客户端作为发布 &lt;a href=&#34;https://dzone.com/refcardz/angularjs-essentials&#34;&gt;Angular&lt;/a 的方法&gt; Azure 的 UI 应用程序。请按照以下步骤操作，让全世界都能访问您的 Angular 应用。&lt;/p&gt;</description>
      <pubDate>Tue, 01 Oct 2024 12:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Using AWS WAF Efficiently To Secure Your CDN, Load Balancers, and API Servers】高效使用 AWS WAF 保护您的 CDN、负载均衡器和 API 服务器</title>
      <link>https://dzone.com/articles/using-aws-waf-efficiently</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;The introduction of software has made remarkable changes to how business is conducted. &#34;Back then,&#34; people would meet in person, and most companies used manual methods, which were not scalable. Software has changed the game, and web applications are essential for a business&#39;s success. Software is how customers interact with businesses, share their data, and receive goods and services.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Software-as-a-service (SaaS) has become a giant industry, taking care of hosting services used by customers by upgrading, scaling, and securing customer data. With the massive proliferation of SaaS services, many are using AWS, and security is a big concern. Malicious actors seek to steal customer data or DDoS-ing the service to prevent legitimate customers from accessing the website.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;软件的引入给业务开展方式带来了显着的变化。 “那时候”，人们会亲自见面，大多数公司都使用手动方法，这种方法不具有可扩展性。软件改变了游戏规则，而 Web 应用程序对于企业的成功至关重要。软件是客户与企业互动、共享数据以及接收商品和服务的方式。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;软件即服务 (SaaS) 已成为一个巨大的行业，通过升级、扩展和保护客户数据来管理客户使用的托管服务。随着 SaaS 服务的大量涌现，许多人都在使用 AWS，安全性成为一个大问题。恶意行为者试图窃取客户数据或对服务进行 DDoS 攻击，以阻止合法客户访问网站。&lt;/p&gt;</description>
      <pubDate>Tue, 01 Oct 2024 14:00:06 +0000</pubDate>
    </item>
    <item>
      <title>【How To Improve the Developer vs. AI Relationship】如何改善开发者与人工智能的关系</title>
      <link>https://dzone.com/articles/how-to-improve-the-developer-vs-ai-relationship</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Developers are often skeptical of artificial intelligence. Count me as one of them.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;But the potential of AI tools — in the right context, of course — should outweigh our skepticism, regardless of how justified it may be. Like it or not, the path to faster releases and better products runs through AI. It’s on the &lt;a href=&#34;https://dzone.com/articles/you-can-keep-your-job-but-it-wont-be-the-same-job&#34;&gt;development community to adapt&lt;/a&gt;.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;开发人员常常对人工智能持怀疑态度。算我为其中之一吧。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;但是，人工智能工具的潜力——当然，在正确的背景下——应该胜过我们的怀疑，无论它有多么合理。不管你喜欢与否，人工智能是通往更快发布和更好产品的道路。 &lt;a href=&#34;https://dzone.com/articles/you-can-keep-your-job-but-it-wont-be-the-same-job&#34;&gt;开发社区需要适应&lt;/a &gt;.&lt;/p&gt;</description>
      <pubDate>Tue, 01 Oct 2024 18:00:07 +0000</pubDate>
    </item>
    <item>
      <title>【Using Lombok Library With JDK 23】将 Lombok 库与 JDK 23 一起使用</title>
      <link>https://dzone.com/articles/using-lombok-library-witk-jdk-23</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; 23 is finally out, and we can start migrating our project to it. The very first pitfall comes quickly when switching to the latest &lt;a href=&#34;https://jdk.java.net/23/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;JDK 23&lt;/a&gt; with compilation issues when using the &lt;a href=&#34;https://projectlombok.org/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Lombok&lt;/a&gt; library in your project. Let&#39;s begin with the symptom description first.&lt;/p&gt;&#xA;&lt;h2&gt;Description&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/introduction-to-lombok&#34;&gt;The Lombok library&lt;/a&gt; heavily relies on annotations. It&#39;s used for removing a lot of boilerplate code; e.g., getters, setters, &lt;code&gt;toString&lt;/code&gt;, loggers, etc.&lt;/p&gt;】&lt;p&gt;&lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; 23 终于发布了，我们可以开始将项目迁移到它。当切换到最新的 &lt;a href=&#34;https://jdk.java.net/23/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;JDK 23&lt;/a&gt; 并出现编译问题时，第一个陷阱很快就会出现在项目中使用 &lt;a href=&#34;https://projectlombok.org/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Lombok&lt;/a&gt; 库时。我们先从症状描述开始。&lt;/p&gt;&#xA;&lt;h2&gt;描述&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/introduction-to-lombok&#34;&gt;Lombok 库&lt;/a&gt;严重依赖注释。它用于删除大量样板代码；例如，getter、setter、&lt;code&gt;toString&lt;/code&gt;、记录器等。&lt;/p&gt;</description>
      <pubDate>Tue, 01 Oct 2024 15:00:09 +0000</pubDate>
    </item>
    <item>
      <title>【Best Practices for Market Data Replay】市场数据回放的最佳实践</title>
      <link>https://dzone.com/articles/best-practices-for-market-data-replay</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;This tutorial introduces the practical implementation of the DolphinDB’s replay feature. Based on DolphinDB’s streaming replay, distributed database architecture, and APIs, you can create a powerful tool for historical insight and model back-testing, which allows you to review situations of interest and improve future performance. By following the instructions in this tutorial, you will learn:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li data-selectable-paragraph=&#34;&#34;&gt;The workflow of constructing a market replay solution&lt;/li&gt;&#xA; &lt;li data-selectable-paragraph=&#34;&#34;&gt;The optimal data storage plan for data sources&lt;/li&gt;&#xA; &lt;li data-selectable-paragraph=&#34;&#34;&gt;The methods to process and analyze replayed data via APIs&lt;/li&gt;&#xA; &lt;li data-selectable-paragraph=&#34;&#34;&gt;The performance of the replay functionality&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;&lt;strong&gt;Note&lt;/strong&gt;: For detailed instructions on how to replay market data, refer to Tutorial: &lt;a href=&#34;https://docs.dolphindb.cn/en/Tutorials/market_data_replay.html&#34; rel=&#34;noopener ugc nofollow&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Market Data Replay&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;】&lt;p data-selectable-paragraph=&#34;&#34;&gt;本教程介绍了 DolphinDB 重放功能的实际实现。基于DolphinDB的流式重播、分布式数据库架构和API，您可以创建一个强大的历史洞察和模型回测工具，使您能够审查感兴趣的情况并提高未来的性能。通过遵循本教程中的说明，您将学习：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li data-selectable-paragraph=&#34;&#34;&gt;构建市场重放解决方案的工作流程&lt;/li&gt;&#xA; &lt;li data-selectable-paragraph=&#34;&#34;&gt;数据源的最佳数据存储计划&lt;/li&gt;&#xA; &lt;li data-selectable-paragraph=&#34;&#34;&gt;通过 API 处理和分析重播数据的方法&lt;/li&gt;&#xA; &lt;li data-selectable-paragraph=&#34;&#34;&gt;重播功能的性能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;&lt;strong&gt;注意&lt;/strong&gt;：有关如何回放行情数据的详细说明，请参考教程：&lt;a href=&#34;https://docs.dolphindb.cn/en /Tutorials/market_data_replay.html&#34; rel=&#34;noopener ugc nofollow&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;市场数据重播&lt;/em&gt;&lt;/a&gt;。&lt;/p&gt;</description>
      <pubDate>Tue, 01 Oct 2024 16:00:06 +0000</pubDate>
    </item>
  </channel>
</rss>