<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Test Smells: Cleaning up Unit Tests】测试气味：清理单元测试</title>
      <link>https://dzone.com/articles/test-smells-cleaning-up-unit-tests</link>
      <description>【&lt;p&gt;In practical terms, knowing how &lt;em&gt;not&lt;/em&gt; to write code might be as important as knowing how to write it. This goes for test code, too; and today, we&#39;re going to look at common mistakes that happen when writing unit tests.&lt;/p&gt;&#xA;&lt;p&gt;Although writing unit tests is common practice for programmers, tests are still often treated as second-class code. Writing &lt;em&gt;good&lt;/em&gt; tests isn&#39;t easy — just as in any programming field, there are patterns and anti-patterns. There are some really helpful chapters on test smells in Gerard Meszaros&#39;s &lt;a href=&#34;http://xunitpatterns.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;book about xUnit patterns&lt;/a&gt; — and more great stuff around the internet; however, it&#39;s always helpful to have practical examples.&lt;/p&gt;】&lt;p&gt;实际上，了解如何编写代码可能与了解如何编写代码同样重要。这也适用于测试代码；今天，我们将看看编写单元测试时发生的常见错误。&lt;/p&gt;&#xA;&lt;p&gt;尽管编写单元测试是程序员的常见做法，但测试仍然经常被视为二等代码。编写&lt;em&gt;好的&lt;/em&gt;测试并不容易——就像在任何编程领域一样，存在模式和反模式。 Gerard Meszaros 的&lt;a href=&#34;http://xunitpatterns.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;关于 xUnit 模式的书&lt;/a&gt;中有一些关于测试气味的非常有用的章节 - 还有更多精彩的章节互联网上的东西；然而，有实际的例子总是有帮助的。&lt;/p&gt;</description>
      <pubDate>Mon, 08 Jul 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Real-Time Testing: Best Practices Guide】实时测试：最佳实践指南</title>
      <link>https://dzone.com/articles/real-time-testing-best-practices-guide</link>
      <description>【&lt;p&gt;Real-time testing is a crucial part of the Software Development Life Cycle that involves testing software applications for their reliability and functionality in real-time. This involves simulating the real-time environment or scenarios to verify the performance of the software application under various load conditions. Due to this, real-time testing has become one of the major aspects of software testing. It has been popularized based on its ability to test the software application in its operational mode.&lt;/p&gt;&#xA;&lt;p&gt;In this fast-growing software industry, organizations struggle to maintain the pace of software application development and its release. In this process, testing application quality, performance, and functionality is the priority phase which helps ensure end-user requirements are fulfilled. However, software testing is a vast domain, and software applications have to undergo various stages of testing that vary from functional to non-functional testing as per software application requirements.&lt;/p&gt;】&lt;p&gt;实时测试是软件开发生命周期的重要组成部分，涉及实时测试软件应用程序的可靠性和功能。这涉及模拟实时环境或场景以验证软件应用程序在各种负载条件下的性能。因此，实时测试已成为软件测试的主要方面之一。它因其在操作模式下测试软件应用程序的能力而得到普及。&lt;/p&gt;&#xA;&lt;p&gt;在这个快速发展的软件行业中，组织努力保持软件应用程序开发及其发布的步伐。在此过程中，测试应用程序质量、性能和功能是优先阶段，有助于确保满足最终用户的要求。然而，软件测试是一个广阔的领域，软件应用程序必须根据软件应用程序的要求经历从功能测试到非功能测试的各个阶段的测试。&lt;/p&gt;</description>
      <pubDate>Mon, 08 Jul 2024 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Rise of Kubernetes: Reshaping the Future of Application Development】Kubernetes 的崛起：重塑应用程序开发的未来</title>
      <link>https://dzone.com/articles/the-rise-of-kubernetes-reshaping-the-future</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/scaling-up-with-kubernetes&#34;&gt;Kubernetes&lt;/a&gt; has emerged as the de facto standard for container orchestration, revolutionizing how developers build, deploy, and manage applications. A recent report by Pure Storage&#39;s &lt;a href=&#34;https://portworx.com/&#34;&gt;Portworx&lt;/a&gt; division reveals that 80% of respondents plan to build most of their new applications on cloud-native platforms in the next five years. This shift is not just a trend; it&#39;s a fundamental change in the way we approach software development and infrastructure management.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;The Kubernetes Advantage for Developers&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/kalyanramanathan/&#34;&gt;Kalyan Ramanathan&lt;/a&gt;, VP of Marketing at Portworx, emphasizes that Kubernetes is built with developers in mind. It offers three key advantages:&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/scaling-up-with-kubernetes&#34;&gt;Kubernetes&lt;/a&gt; 已成为容器编排的事实标准，彻底改变了编排方式开发人员构建、部署和管理应用程序。 Pure Storage 的 &lt;a href=&#34;https://portworx.com/&#34;&gt;Portworx&lt;/a&gt; 部门最近的一份报告显示，80% 的受访者计划在未来五年内在云原生平台上构建大部分新应用程序年。这种转变不仅是一种趋势，而且是一种趋势。这是我们软件开发和基础设施管理方式的根本性改变。&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Kubernetes 对开发人员的优势&lt;/h2&gt;&#xA;Portworx 营销副总裁 &lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/kalyanramanathan/&#34;&gt;Kalyan Ramanathan&lt;/a&gt; 强调 Kubernetes 是与开发人员一起构建的头脑。它具有三个关键优势：&lt;/p&gt;</description>
      <pubDate>Mon, 08 Jul 2024 11:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【Exploring Cross-Chain Compatibility in dApp Development】探索 dApp 开发中的跨链兼容性</title>
      <link>https://dzone.com/articles/exploring-cross-chain-compatibility</link>
      <description>【&lt;p data-block-id=&#34;0c65d9b0-7408-428f-9c97-e00b28b67f94&#34; data-pm-slice=&#34;1 1 []&#34;&gt;The use of &lt;a href=&#34;https://dzone.com/articles/why-blockchain-technology-is-the-future-of-data-st-1&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Blockchain technology&lt;/a&gt; is growing rapidly. The creation of decentralized applications is rising. The issues that need solving include cross-chain interoperability. It lets dApps easily connect and work with different blockchains. Improvement of the dApps is also needed. This includes their features, size, and user acceptance. This article will introduce readers to cross-chain compatibility in dApp development. It will cover the benefits of using this concept and the role of dApp developers in this area.&lt;/p&gt;&#xA;&lt;h2 data-block-id=&#34;a961d7c7-bc62-4d67-8da1-449aeeee05a4&#34;&gt;Understanding Cross-Chain Compatibility&lt;/h2&gt;&#xA;&lt;p data-block-id=&#34;bf1d5465-ba2c-448e-9431-d49d74960b3a&#34;&gt;Inter-chain communication is the process of how different blockchain networks share and work with each other. It can include the exchange of assets, information, or smart contracts. This all happens across different blockchains. The idea is to create an organic environment in which stakeholders use others&#39; solutions. They are not limited to one blockchain protocol.&lt;/p&gt;】&lt;p data-block-id=&#34;0c65d9b0-7408-428f-9c97-e00b28b67f94&#34; data-pm-slice=&#34;1 1 []&#34;&gt;使用&lt;a href=&#34;https://dzone.com/articles/ Why-blockchain-technology-is-the-future-of-data-st-1&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;区块链技术&lt;/a&gt;正在迅速发展。去中心化应用程序的创建正在兴起。需要解决的问题包括跨链互操作性。它让 dApp 可以轻松连接并与不同的区块链配合使用。还需要改进 dApp。这包括它们的功能、尺寸和用户接受度。本文将为读者介绍dApp开发中的跨链兼容性。它将涵盖使用此概念的好处以及 dApp 开发人员在该领域的作用。&lt;/p&gt;&#xA;&lt;h2 data-block-id=&#34;a961d7c7-bc62-4d67-8da1-449aeeee05a4&#34;&gt;了解跨链兼容性&lt;/h2&gt;&#xA;&lt;p data-block-id=&#34;bf1d5465-ba2c-448e-9431-d49d74960b3a&#34;&gt;链间通信是不同区块链网络相互共享和协作的过程。它可以包括资产、信息或智能合约的交换。这一切都发生在不同的区块链上。这个想法是创建一个有机的环境，让利益相关者可以使用其他人的解决方案。它们不限于一种区块链协议。&lt;/p&gt;</description>
      <pubDate>Mon, 08 Jul 2024 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Writing a Simple Pulumi Provider for Airbyte】为 Airbyte 编写一个简单的 Pulumi Provider</title>
      <link>https://dzone.com/articles/writing-a-simple-pulumi-provider-for-airbyte</link>
      <description>【&lt;p&gt;In this quick tutorial, I will go over &lt;a href=&#34;https://www.pulumi.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Pulumi&lt;/a&gt; by writing a very simple Provider for &lt;a href=&#34;https://airbyte.com/product/airbyte-open-source&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Airbyte&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The simplified use case is as follows: I want to programmatically (Infrastructure as Code) create, update, and delete &lt;strong&gt;Sources&lt;/strong&gt;, &lt;strong&gt;Destinations,&lt;/strong&gt; and &lt;strong&gt;Connections&lt;/strong&gt; in &lt;strong&gt;Airbyte&lt;/strong&gt; instead of using the UI.&lt;/p&gt;】&lt;p&gt;在这个快速教程中，我将通过编写一个非常简单的代码来回顾&lt;a href=&#34;https://www.pulumi.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Pulumi&lt;/a&gt; &lt;a href=&#34;https://airbyte.com/product/airbyte-open-source&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Airbyte&lt;/a&gt; 的提供商。&lt;/p&gt;&#xA;&lt;p&gt;简化的用例如下：我想以编程方式（基础架构即代码）创建、更新和删除&lt;strong&gt;源&lt;/strong&gt;、&lt;strong&gt;目标&lt;/strong&gt;和&lt;strong&gt;连接&lt; /strong&gt; 在 &lt;strong&gt;Airbyte&lt;/strong&gt; 中，而不是使用 UI。&lt;/p&gt;</description>
      <pubDate>Mon, 08 Jul 2024 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How To Perform JSON Schema Validation in API Testing Using Rest-Assured Java?】如何使用 Rest-Assured Java 在 API 测试中执行 JSON 模式验证？</title>
      <link>https://dzone.com/articles/how-to-perform-json-schema-validation-in-api</link>
      <description>【&lt;p&gt;Have you ever come across a situation in automated API testing where you were not able to identify the issue in the test failure and after debugging for multiple hours, you noticed that the data type of the value supplied in the response of the API had changed. Did you then notice that this was the core reason for the test failure?&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;This type of scenario can generally happen when you have third-party APIs integrated into your application. A real-time example of such a scenario would be integrating with the Bank APIs for making a payment for your e-commerce application or integrating with third-party API which provides the registration and login functionality using two-factor authentication.&lt;/p&gt;】&lt;p&gt;您是否在自动化 API 测试中遇到过这样的情况：您无法识别测试失败中的问题，并且在调试多个小时后，您注意到 API 响应中提供的值的数据类型已经改变。您是否注意到这是测试失败的核心原因？&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;当您将第三方 API 集成到应用程序中时，通常会发生这种类型的情况。此类场景的一个实时示例是与银行 API 集成，以便为您的电子商务应用程序进行付款，或者与第三方 API 集成，后者使用双因素身份验证提供注册和登录功能。&lt;/p&gt;</description>
      <pubDate>Mon, 08 Jul 2024 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AWS: Metric Filter vs. Subscription Filter】AWS：指标过滤器与订阅过滤器</title>
      <link>https://dzone.com/articles/aws-metric-filter-vs-subscription-filter</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;In this blog on AWS, let’s do a comparison study between two filter tools available with &lt;strong&gt;Amazon CloudWatch Logs&lt;/strong&gt; — &lt;strong&gt;Metric Filter&lt;/strong&gt;&amp;nbsp;and&amp;nbsp;&lt;strong&gt;Subscription Filter&lt;/strong&gt;, which play a crucial role in log data management, allowing you to analyze, monitor, and act on log data effectively.&lt;/p&gt;&#xA;&lt;h2 data-selectable-paragraph=&#34;&#34; style=&#34;text-align: left;&#34;&gt;Metric Filter&lt;/h2&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34; style=&#34;text-align: left;&#34;&gt;&lt;strong&gt;Metric Filters&lt;/strong&gt; define the terms and patterns to look for in log data as it is sent to CloudWatch Logs. CloudWatch Logs uses these metric filters to turn log data into numerical CloudWatch metrics that you can graph or set an alarm on.&amp;nbsp;&lt;strong&gt;For eg&lt;/strong&gt;., you can create a metric to count the occurrences of the word “ERROR” in your logs &amp;amp; set an alarm if the count goes beyond a certain threshold.&lt;/p&gt;】&lt;p style=&#34;text-align: left;&#34;&gt;在此 AWS 博客中，我们对 &lt;strong&gt;Amazon CloudWatch Logs&lt;/strong&gt; 提供的两种筛选工具进行比较研究 - &lt;strong&gt;指标筛选器&lt;/strong&gt;和&lt;strong&gt;订阅过滤器&lt;/strong&gt;，它们在日志数据管理中发挥着至关重要的作用，使您能够有效地分析、监控日志数据并对其采取行动。&lt;/p&gt;&#xA;&lt;h2 data-selectable-paragraph=&#34;&#34; style=&#34;text-align: left;&#34;&gt;指标过滤器&lt;/h2&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34; style=&#34;text-align: left;&#34;&gt;&lt;strong&gt;指标过滤器&lt;/strong&gt;定义在日志数据发送到 CloudWatch Logs 时要在日志数据中查找的术语和模式。 CloudWatch Logs 使用这些指标过滤器将日志数据转换为数字 CloudWatch 指标，您可以绘制图表或设置警报。 &lt;strong&gt;例如&lt;/strong&gt;，您可以创建一个指标来计算日志中单词“ERROR”的出现次数，并在计数超出特定阈值时设置警报。&lt;/p&gt;</description>
      <pubDate>Mon, 08 Jul 2024 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Enhancing Cloud Security: Integrating DevSecOps Practices Into Monitoring】增强云安全：将 DevSecOps 实践集成到监控中</title>
      <link>https://dzone.com/articles/enhancing-cloud-security-integrating-devsecops</link>
      <description>【&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;In the fast-changing world of tech, companies must get their apps out quickly but can&#39;t forget to keep them safe. Gone are the days when security checks happened only after making the app. Now, there&#39;s an intelligent way called DevSecOps that ties together software development lifecycle, security, and operations into one smooth process. Prolific DevSecOps practices ensure safety measures are part of every step in getting an app from idea to user&#39;s hands through continuous integration (CI) and delivery (CD), covering everything before launch and after it goes live.&lt;/span&gt;&lt;span data-ccp-props=&#34;{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559739&amp;quot;:160,&amp;quot;335559740&amp;quot;:240}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;DevSecOps&amp;nbsp;isn&#39;t&amp;nbsp;just a fad; it marks a&amp;nbsp;significant change&amp;nbsp;in the overall production environment and in how people think about building and sending out software. By weaving security into each phase of app development cycle,&amp;nbsp;devsecops&amp;nbsp;teams can release secure software quicker than ever.&amp;nbsp;They&#39;re&amp;nbsp;better at finding and fixing security flaws early on, enhancing the traditional software development cycle and staying on top of legal rules for protecting data.&lt;/span&gt;&lt;span data-ccp-props=&#34;{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559739&amp;quot;:160,&amp;quot;335559740&amp;quot;:240}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;】&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;在瞬息万变的科技世界中，公司必须快速推出应用程序，但不能忘记保证它们的安全。仅在制作应用程序后才进行安全检查的日子已经一去不复返了。现在，有一种称为 DevSecOps 的智能方法，可以将软件开发生命周期、安全性和操作整合到一个流畅的流程中。丰富的 DevSecOps 实践可确保通过持续集成 (CI) 和交付 (CD) 将安全措施纳入应用从创意到用户手中的每一步，涵盖发布前和上线后的所有内容。&lt;/span&gt;&lt;span data- ccp-props=&#34;{&#34;134233117&#34;:true,&#34;134233118&#34;:true,&#34;201341983&#34;:0,&#34;335559739&#34;:160,&#34;335559740&#34;:240}&#34;&gt; &lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;DevSecOps 不仅仅是一种时尚；它是一种时尚。它标志着整个生产环境以及人们对构建和发送软件的看法发生了重大变化。通过将安全性融入应用开发周期的每个阶段，devsecops 团队可以比以往更快地发布安全软件。 他们更擅长尽早发现并修复安全缺陷，从而增强传统软件开发周期并掌握保护数据的法律规则。&lt;/span&gt;&lt;span data-ccp-props=&#34;{&#34;134233117&#34;:true, &#34;134233118&#34;:true,&#34;201341983&#34;:0,&#34;335559739&#34;:160,&#34;335559740&#34;:240}&#34;&gt; &lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 08 Jul 2024 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Using Zero-Width Assertions in Regular Expressions】在正则表达式中使用零宽度断言</title>
      <link>https://dzone.com/articles/using-zero-width-assertions-in-regular-expressions</link>
      <description>【&lt;h2&gt;Anchors ^ $ \b \A \Z&lt;/h2&gt;&#xA;&lt;p&gt;Anchors in regular expressions allow you to specify the context in a string where your pattern should be matched. There are several types of anchors:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;&lt;code&gt;^&lt;/code&gt; matches the start of a line (in multiline mode) or the start of the string (by default).&lt;/li&gt;&#xA; &lt;li&gt;&lt;code&gt;$&lt;/code&gt; matches the end of a line (in multiline mode) or the end of the string (by default).&lt;/li&gt;&#xA; &lt;li&gt;&lt;code&gt;\A&lt;/code&gt; matches the start of the string.&lt;/li&gt;&#xA; &lt;li&gt;&lt;code&gt;\Z&lt;/code&gt; or &lt;code&gt;\z&lt;/code&gt; matches the end of the string.&lt;/li&gt;&#xA; &lt;li&gt;&lt;code&gt;\b&lt;/code&gt; matches a word boundary (before the first letter of a word or after the last letter of a word).&lt;/li&gt;&#xA; &lt;li&gt;&lt;code&gt;\B&lt;/code&gt; matches a position that is not a word boundary (between two letters or between two non-letter characters).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;These anchors are supported in &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#bounds&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Java&lt;/a&gt;, &lt;a href=&#34;https://www.php.net/manual/en/regexp.reference.anchors.php&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;PHP&lt;/a&gt;, Python, &lt;a href=&#34;https://docs.ruby-lang.org/en/master/Regexp.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Ruby&lt;/a&gt;, &lt;a href=&#34;https://learn.microsoft.com/en-us/dotnet/standard/base-types/anchors-in-regular-expressions&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;C#&lt;/a&gt;, and Go. In JavaScript, &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\Z&lt;/code&gt; are not supported, but you can use &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; instead of them; just remember to keep the multiline mode disabled.&amp;nbsp;&lt;/p&gt;】&lt;h2&gt;锚点 ^ $ \b \A \Z&lt;/h2&gt;&#xA;&lt;p&gt;正则表达式中的锚点允许您指定字符串中应匹配模式的上下文。锚点有几种类型：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;&lt;code&gt;^&lt;/code&gt; 匹配行的开头（在多行模式下）或字符串的开头（默认情况下）。&lt;/li&gt;&#xA; &lt;li&gt;&lt;code&gt;$&lt;/code&gt; 匹配行的结尾（在多行模式下）或字符串的结尾（默认情况下）。&lt;/li&gt;&#xA; &lt;li&gt;&lt;code&gt;\A&lt;/code&gt; 匹配字符串的开头。&lt;/li&gt;&#xA; &lt;li&gt;&lt;code&gt;\Z&lt;/code&gt; 或 &lt;code&gt;\z&lt;/code&gt; 匹配字符串结尾。&lt;/li&gt;&#xA; &lt;li&gt;&lt;code&gt;\b&lt;/code&gt; 匹配单词边界（单词的第一个字母之前或单词的最后一个字母之后）。&lt;/li&gt;&#xA; &lt;li&gt;&lt;code&gt;\B&lt;/code&gt; 匹配非单词边界的位置（两个字母之间或两个非字母字符之间）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#bounds&#34; rel=&#34;noopener noreferrer&#34; 目标支持这些锚点=&#34;_blank&#34;&gt;Java&lt;/a&gt;，&lt;a href=&#34;https://www.php.net/manual/en/regexp.reference.anchors.php&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt; PHP&lt;/a&gt;、Python、&lt;a href=&#34;https://docs.ruby-lang.org/en/master/Regexp.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Ruby&lt;/a&gt; , &lt;a href=&#34;https://learn.microsoft.com/en-us/dotnet/standard/base-types/anchors-in-regular-expressions&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;C#&lt; /a&gt;，然后开始。在 JavaScript 中，不支持 &lt;code&gt;\A&lt;/code&gt; 和 &lt;code&gt;\Z&lt;/code&gt;，但您可以使用 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 代替它们;只需记住禁用多行模式即可。 &lt;/p&gt;</description>
      <pubDate>Mon, 08 Jul 2024 18:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【Understanding and Mitigating IP Spoofing Attacks】了解并减轻 IP 欺骗攻击</title>
      <link>https://dzone.com/articles/ip-spoofing-how-it-works-and-how-to-prevent-it</link>
      <description>【&lt;p&gt;Spoofing is a type of cyber-attack used by hackers to gain unauthorized access to a computer or a network, IP spoofing is the most common type of spoofing out of the other spoofing method. With IP Spoofing the attacker can hide the true source of the IP packets to make it difficult to know the origin of the attack. Once access to a network or a device/host is achieved, cybercriminals usually mine them for sensitive data, with computers they can turn into zombies and can be used to launch Denial-of-Service (&lt;a href=&#34;https://dzone.com/articles/distributed-denial-of-service-ddos-attacks-what-yo&#34;&gt;DoS&lt;/a&gt;) attacks.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;What Is IP Spoofing?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;IP addresses are used for communication between devices on the internet. Cybercriminals use a false source IP address to hide and impersonate another system. Essentially making it harder for the destination system to detect. Such attacks come with the intent to steal &lt;a href=&#34;https://dzone.com/articles/data-privacy-mechanisms-and-attacks&#34;&gt;sensitive data&lt;/a&gt;, infect your computer with malware or viruses, or even crash your server.&lt;/p&gt;】&lt;p&gt;欺骗是黑客用来未经授权访问计算机或网络的一种网络攻击，IP 欺骗是其他欺骗方法中最常见的欺骗类型。通过 IP 欺骗，攻击者可以隐藏 IP 数据包的真实来源，从而难以了解攻击的来源。一旦实现对网络或设备/主机的访问，网络犯罪分子通常会挖掘它们以获取敏感数据，他们可以将计算机变成僵尸并可用于启动拒绝服务（&lt;a href=&#34;https://dzone .com/articles/distributed-denial-of-service-ddos-attacks-what-yo&#34;&gt;DoS&lt;/a&gt;）攻击。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;什么是 IP 欺骗？&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;IP 地址用于互联网上设备之间的通信。网络犯罪分子使用虚假源 IP 地址来隐藏和冒充另一个系统。本质上使目标系统更难检测到。此类攻击的目的是窃取&lt;a href=&#34;https://dzone.com/articles/data-privacy-mechanisms-and-attacks&#34;&gt;敏感数据&lt;/a&gt;、用恶意软件或病毒感染您的计算机，或者甚至使您的服务器崩溃。&lt;/p&gt;</description>
      <pubDate>Mon, 08 Jul 2024 19:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>