<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【How to Build an MCP Server With Java SDK】如何使用Java SDK构建MCP服务器</title>
      <link>https://dzone.com/articles/how-to-build-an-mcp-server-with-java-sdk</link>
      <description>【&lt;p&gt;A previous article [Resource 1] described how an open-source &lt;a href=&#34;https://dzone.com/articles/natural-language-sql-queries-with-mcp&#34;&gt;PostgreSQL Model Context Protocol server&lt;/a&gt; can be plugged into an AI host and provide additional database context to the interacting LLM. Moreover, quite a few interesting insights on the considered data were inferred by the LLM when natural language prompts were written and responded to.&lt;/p&gt;&#xA;&lt;p&gt;The current article uses the exact same database schema and does a similar experiment, the only significant difference being that the MCP Server is developed from scratch, using the available Java SDK, without involving any additional frameworks.&lt;/p&gt;】&lt;p&gt;上一篇文章[Resource 1]描述了如何开放源&lt;a href =“ https://dzone.com/articles/natural-language-sql-sql-quelies-with-mcp”&gt; PostgreSQL模型上下文协议服务器&lt;/a&gt;可以将其插入AI主机并提供其他数据库上下文来交互llm。此外，当自然语言提示被编写和回应时，LLM推断出了很多关于所考虑数据的有趣见解。&lt;/p&gt;。&#xA;&lt;p&gt;当前文章使用完全相同的数据库架构并进行类似的实验，唯一的重要区别在于，使用可用的Java SDK从头开始开发MCP服务器，而无需涉及任何其他框架。&lt;/p&gt;。&lt;/p&gt;</description>
      <pubDate>Mon, 04 Aug 2025 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Fine-Tuning LLMs Locally Using MLX LM: A Comprehensive Guide】使用MLX LM在本地进行微调LLM：综合指南</title>
      <link>https://dzone.com/articles/fine-tuning-llms-locally-using-mlx-lm-guide</link>
      <description>【&lt;p&gt;Fine-tuning large language models has traditionally required expensive cloud GPU resources and complex infrastructure setups. &lt;a href=&#34;https://dzone.com/articles/vision-ai-apple-silicon-guide-mlx-vlm&#34;&gt;Apple&#39;s MLX framework&lt;/a&gt; changes this paradigm by enabling efficient local fine-tuning on Apple Silicon hardware using advanced techniques like &lt;a href=&#34;https://dzone.com/articles/how-to-fine-tune-large-language-models-a-step-by-s&#34;&gt;LoRA&lt;/a&gt; and &lt;a href=&#34;https://dzone.com/articles/architectural-patterns-for-genai-dsft-rag-raft-graphrag&#34;&gt;QLoRA&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In this comprehensive guide, we&#39;ll explore how to leverage MLX LM to fine-tune state-of-the-art language models directly on your Mac, making custom AI development accessible to developers and researchers working with limited computational resources.&lt;/p&gt;】&lt;p&gt;微调大语模型传统上需要昂贵的云GPU资源和复杂的基础架构设置。 &lt;a href =“ https://dzone.com/articles/vision-ai-aple-silicon-guide-mlx-vlm”&gt;苹果的MLX框架&lt;/a&gt;通过使用&lt;a apple silicon hardwares上的高效技术来改变此范式href =“ https://dzone.com/articles/how-to-fine-tune-tune-lange-lange-models-models-a-step-by-s”&gt; lora &lt;/a&gt;和&lt;a href =“ https://dzone.com/articles.com/articles/articles/articles/articles/architectural-patterns-forral-patterns-for-genai-dsft-genai-dsft-rag-rag-rag-rag--rag--ragp-ragp-rapp-ragp p.lora &lt;/a&gt;&#xA;&lt;p&gt;在本综合指南中，我们将探讨如何直接在Mac上使用MLX LM来微调最先进的语言模型，从而使开发人员和使用有限计算资源的研究人员可以访问自定义AI开发。&lt;/p&gt;。&lt;/p&gt;</description>
      <pubDate>Mon, 04 Aug 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why Developers Should Pay Attention to Internal Directory Security】为什么开发人员应该注意内部目录安全性</title>
      <link>https://dzone.com/articles/why-developers-should-pay-attention-to-internal-di</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Most developers don’t start their day thinking, “Is our internal directory secure?” They’ve got builds to run, bugs to squash, maybe a pull request or five to review. But internal directories (like &lt;a href=&#34;https://dzone.com/articles/how-to-fix-the-three-most-common-ad-security-issue&#34;&gt;Active Directory&lt;/a&gt; or &lt;a href=&#34;https://dzone.com/articles/microsoft-azure-active-directory-1&#34;&gt;Azure AD&lt;/a&gt;) aren’t just a concern for IT admins.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;They’re the nervous system of any organization with more than, say, a handful of people and passwords.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;大多数开发人员都不会开始思考“我们的内部目录安全吗？”他们有跑步的构建，壁板的虫子，也许是一个拉动请求或五个要审查。但是内部目录（例如&lt;a href =” https://dzone.com/articles/how-to-fet-te-fix-the-three-most-common-ad-security-issue-secue-.active directory &lt;/a&gt; or &lt;/a&gt; or &lt;a href =“管理员。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;它们是任何组织的神经系统，例如少数人和密码。&lt;/p&gt;</description>
      <pubDate>Mon, 04 Aug 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Self-Managed Keycloak for App Connect Dashboard and Designer Authoring】用于应用程序连接仪表板和设计师创作的自我管理的KeyCloak</title>
      <link>https://dzone.com/articles/self-managed-keycloak-app-connect-authoring</link>
      <description>【&lt;p&gt;With the release of the &lt;a href=&#34;https://dzone.com/articles/ibm-app-connect-operators&#34;&gt;IBM® App Connect Operator&lt;/a&gt; version 12.1.0, you can now use your existing Keycloak instance to configure authentication and authorization for App Connect Dashboard and Designer Authoring.&lt;/p&gt;&#xA;&lt;p&gt;Building on top of the capability to use &lt;a href=&#34;https://dzone.com/articles/keycloak-mcp-server-tools-quarkus&#34;&gt;Keycloak&lt;/a&gt;, which was first available in IBM® App Connect Operator version 11.0.0, this feature extends the supported platforms from Red Hat® OpenShift® Container Platform (OCP) only to also include &lt;a href=&#34;https://dzone.com/articles/5-important-kubernetes-concepts-made-easy&#34;&gt;Kubernetes&lt;/a&gt;. It has in addition removed the dependencies on the IBM® Cloud Pak foundational services and IBM® Cloud Pak for Integration operators. It is worth noting that this new feature is only available with App Connect licenses.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;发布&lt;a href =“ https://dzone.com/articles/ibm-app-connect-operators”&gt;IBM®AppConnect Connect Operator &lt;/a&gt;版本12.1.0，您现在可以使用现有的KeyCloak实例来配置App connect and for App Connect connect connect connect connect connect connect connect connect dash dash dashboard and designer futorutition。&#xA;&lt;p&gt;Building on top of the capability to use &lt;a href=&#34;https://dzone.com/articles/keycloak-mcp-server-tools-quarkus&#34;&gt;Keycloak&lt;/a&gt;, which was first available in IBM® App Connect Operator version 11.0.0, this feature extends the supported platforms from Red Hat® OpenShift® Container Platform (OCP) only to also include &lt;a href =“ https://dzone.com/articles/5-important-kubernetes-concepts-made-easy”&gt; kubernetes &lt;/a&gt;。此外，它还消除了IBM®CloudPak基础服务的依赖项和集成运营商的IBM®CloudPak。值得注意的是，此新功能仅适用于App Connect许可证。 &lt;/p&gt;</description>
      <pubDate>Mon, 04 Aug 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Beyond 200 OK: Full-Stack Observability for Developers】超过200个好：开发人员的全堆栈可观察性</title>
      <link>https://dzone.com/articles/beyond-200-ok-full-stack-observability-for-developers</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;You may remember coming out of a feature meeting and saying to yourself, &#34;My React frontend is working fine, the API goes &lt;a href=&#34;https://dzone.com/articles/a-break-down-of-http-statusnbspcode&#34;&gt;200 OK&lt;/a&gt;, I am done!&#34;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Then, a few days later, we get a user complaint: &#34;It&#39;s slow. Sometimes I get errors.&#34;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;您可能还记得从一个功能会议中出来并对自己说：“我的React Frontend正常工作，API &lt;a href =“ https://dzone.com/articles/ARTICEN/ATECLICS/ARTICS/A-BRABREAK-DOWN--DOWN--DOWN-of-http-statusnbsnbsnbsnbspcode”&#xA;&lt;p dir =“ ltr”&gt;然后，几天后，我们收到一个用户投诉：“这很慢。有时我会遇到错误。” &lt;/p&gt;</description>
      <pubDate>Mon, 04 Aug 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【WebAssembly: From Browser Plugin to the Next Universal Runtime】WebAssembly：从浏览器插件到下一个通用运行时</title>
      <link>https://dzone.com/articles/webassembly-from-browser-plugin-to-the-next-univer</link>
      <description>【&lt;p&gt;For decades, the digital world has converged on a single, universal computing platform: the web browser. This remarkable piece of software, present on nearly every device, promised a &#34;write once, run anywhere&#34; paradigm, but with a crucial limitation, it only spoke one language natively: JavaScript. While incredibly versatile, JavaScript&#39;s nature as a dynamically typed, interpreted language created a performance ceiling. For computationally intensive tasks, developers often hit a wall, unable to achieve the raw speed of native applications. This limitation also meant that the vast, mature ecosystems of code written in languages like C++, C, and Rust were largely inaccessible on the web without cumbersome and often inefficient cross-compilation to JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;Into this landscape emerged &lt;a href=&#34;https://dzone.com/articles/what-is-webassembly&#34;&gt;&lt;strong&gt;WebAssembly&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&amp;nbsp;(Wasm)&lt;/strong&gt;. Often referred to as a fourth standard language for the web alongside HTML, CSS, and JavaScript, Wasm was not designed to replace JavaScript but to be its powerful companion. It is a binary instruction format, a low-level, assembly-like language that &lt;strong&gt;serves as a portable compilation target&lt;/strong&gt;. This simple yet profound idea meant that developers could take existing code written in high-performance languages, compile it into a compact Wasm binary, and run it directly within the browser at near-native speeds. This breakthrough unlocked a new class of applications that were previously impractical for the web, from sophisticated in-browser tools to full-fledged 3D gaming engines.&lt;/p&gt;】&lt;p&gt;数十年来，数字世界一直在一个通用的通用计算平台上融合：Web浏览器。这件出色的软件几乎在每个设备上都存在，答应了“一次写，在任何地方运行”范式，但是在关键的限制下，它只能用一种语言来定性：JavaScript。 JavaScript的性质令人难以置信，但动态键入，解释的语言创造了表演上限。对于计算密集的任务，开发人员经常撞到墙壁，无法达到本机应用程序的原始速度。该限制还意味着，用C ++，C和Rust等语言编写的庞大而成熟的生态系统在网络上基本上无法访问，而没有麻烦且通常效率低下的JavaScript。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;进入了这个景观&lt;a href =“ https://dzone.com/articles/what-is-webassembly”&gt; &lt;strong&gt; webAssembly &lt;/strong&gt; &lt;/a&gt; &lt;/a&gt; &lt;strong&gt; &lt;strong&gt;（wasm）&lt;/strong&gt;。 Wasm通常被称为网络的第四个标准语言，并非旨在替换JavaScript，而是设计为其强大的伴侣。这是一种二进制指令格式，一种低级，类似组装的语言，&lt;strong&gt;是一种便携式编译目标&lt;/strong&gt;。这个简单而深刻的想法意味着开发人员可以采用以高性能语言编写的现有代码，将其编译成紧凑的WASM二进制，并以近乎本地的速度直接在浏览器中运行。这一突破解锁了以前对网络不切实际的新应用程序，从复杂的浏览器工具到成熟的3D游戏引擎。&lt;/p&gt;</description>
      <pubDate>Mon, 04 Aug 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Is Your Team AI-Ready? 5 Strategies to Upskill Your Engineers】您的团队已经准备好了吗？提高工程师的5种策略</title>
      <link>https://dzone.com/articles/ai-ready-5-strategies-to-upskill-your-engineers</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;The pressure is on. Every leader, from startups to Fortune 100s, is being asked the same question: &#34;What&#39;s our AI strategy?&#34; But behind that question is a more fundamental one that keeps engineering leaders like us up at night: &#34;Is my &lt;em&gt;team&lt;/em&gt; ready for AI?&#34;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;It’s one thing to buy a new tool or spin up a new service; it’s another thing entirely to transform a team’s skills and mindset. The truth is, most engineering teams aren&#39;t AI-ready out of the box. And that&#39;s okay. The journey from a traditional software team to one that can confidently build, deploy, and manage AI-powered features is a marathon, not a sprint.&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt;压力已经打开。从初创企业到《财富100强》的每个领导者都被问到同样的问题：“我们的AI策略是什么？”但是这个问题的背后是一个更根本的问题，它使像我们这样的工程领导者在晚上保持不变：“我的&lt;em&gt; Team &lt;/em&gt;为AI准备好了吗？” &lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;购买新工具或旋转新服务是一回事；完全改变团队的技能和心态是另一回事。事实是，大多数工程团队并没有开箱即用。没关系。从传统的软件团队到可以自信地建立，部署和管理AI驱动功能的软件团队的旅程是马拉松，而不是冲刺。&lt;/p&gt;</description>
      <pubDate>Mon, 04 Aug 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Deep Observability in Node.js Using OpenTelemetry and Pino】使用opentelemetry和pino在Node.js中的深度可观察性</title>
      <link>https://dzone.com/articles/observability-nodejs-opentelemetry-pino</link>
      <description>【&lt;p&gt;As applications become increasingly distributed, debugging performance issues or locating failures in a Node.js backend can be challenging. Logging by itself usually provides limited context to comprehend how a request navigates through many layers of your system. Similarly, you cannot correlate trace data with application-specific events if you use tracing without structured logging.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;That is where OpenTelemetry (OTel) for tracing and Pino for structured logging come in. By combining the two, you get deep observability — blending logs and traces together for an unobstructed view of your system&#39;s behavior, thereby speeding up debugging, monitoring, and root cause analysis.&lt;/p&gt;】&lt;p&gt;随着应用程序的分布越来越多，调试性能问题或在节点后端定位失败可能具有挑战性。登录本身通常提供有限的上下文，以理解请求如何通过系统的许多层导航。同样，如果您在没有结构化日志记录的情况下使用跟踪，则无法将跟踪数据与特定于应用程序的事件相关联。 &lt;/p&gt;&#xA;&lt;p&gt;That is where OpenTelemetry (OTel) for tracing and Pino for structured logging come in. By combining the two, you get deep observability — blending logs and traces together for an unobstructed view of your system&#39;s behavior, thereby speeding up debugging, monitoring, and root cause analysis.&lt;/p&gt;</description>
      <pubDate>Mon, 04 Aug 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AI for AI: How Intelligent Systems Are Shaping Their Own Evolution】AI的AI：智能系统如何塑造自己的进化</title>
      <link>https://dzone.com/articles/ai-for-ai-systems-automation</link>
      <description>【&lt;p data-id=&#34;0e347d50-948c-442d-9eb5-73753efce69a&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/ai-explained-for-curious-minds&#34;&gt;AI&lt;/a&gt; for AI, also referred to as AI4AI, is a rapidly growing field that focuses on using artificial intelligence to improve the development, performance, and management of other AI systems. It involves applying AI techniques to automate and optimize various stages of the AI lifecycle, including model selection, training, deployment, and ongoing adaptation. This approach enables AI systems to operate more autonomously and efficiently, reducing the need for constant human intervention while improving scalability and performance across a wide range of domains.&lt;/p&gt;&#xA;&lt;h2 data-id=&#34;98a571dd-0bf0-417c-bc28-63e47a0d16ec&#34; data-toc-id=&#34;98a571dd-0bf0-417c-bc28-63e47a0d16ec&#34;&gt;&lt;strong&gt;Key Aspects of AI for AI&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p data-id=&#34;f6cf395e-bdce-46ac-9037-b1fbb0bbd0cf&#34;&gt;&lt;span style=&#34;background-color: transparent;&#34;&gt;AI4AI achieves its goals through powerful techniques that fundamentally transform how intelligent systems are built. Key aspects include:&lt;/span&gt;&lt;/p&gt;】&lt;p data-id =“ 0E347D50-948C-442D-9EB5-73753EFCE69A”&gt; &lt;a href =“ https:/ https://dzone.com/articles/articles/articles/ai-explaining-for-for-for-curious-minds”其他AI系统的开发，性能和管理。它涉及应用AI技术来自动化和优化AI生命周期的各个阶段，包括模型选择，培训，部署和持续的适应性。这种方法使AI系统能够更自主，更有效地运行，从而减少了持续的人类干预的需求，同时改善了各个领域的可伸缩性和性能。&lt;/p&gt;&#xA;&lt;h2 data-id =“ 98A571DD-0BF0-417C-BC28-63E47A0D16EC” data-toc-id =“ 98a571dd-0bf0-0bf0-417c-bc28-63e47a0abc28-63e47a0d16ec”&#xA;&lt;p data-id =“ F6CF395E-BDCE-46AC-9037-B1FBB0BBD0CF”&gt; &lt;span style =“ backick-color：prackarent;”&gt; ai4ai通过从根本上改变智能系统的强大技术来实现其目标。关键方面包括：&lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Mon, 04 Aug 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Real-Time Flight Schedule Changes at Scale: Event-Driven Pipelines With gRPC】实时飞行时间表按大规模更改：与GRPC的事件驱动管道</title>
      <link>https://dzone.com/articles/real-time-flight-schedule-updates-event-driven-grpc</link>
      <description>【&lt;h2 dir=&#34;ltr&#34;&gt;Introduction: The Challenge of Flight Schedule Changes&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Travel aggregators (like online travel agencies or fare comparison platforms) handle data from hundreds of airlines, including frequent flight schedule changes — delays, cancellations, gate changes, etc. Managing these updates in real-time for millions of users is a massive challenge. Traditional approaches (like periodic polling or manual updates) can’t keep up with the volume and immediacy required. For example, if a flight is canceled or delayed, customers and downstream systems expect to know within seconds, not hours. As one source notes, use cases like airline flight cancellations or package delivery updates demand immediate notifications upon any upstream change.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;To tackle this, modern travel platforms are embracing event-driven architecture (EDA) and pipeline patterns to process flight schedule changes in real-time. In an EDA, changes (events) propagate through a pipeline of microservices that react asynchronously. This decoupled design can scale to millions of events and deliver updates instantly to all interested components. A key enabler in this architecture is gRPC — a high-performance RPC framework — which, alongside message brokers, helps services communicate efficiently and reliably.&lt;/p&gt;】&lt;h2 dir =“ ltr”&gt;简介：飞行时间表的挑战更改&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;旅行聚合器（例如在线旅行代理商或票价比较平台）处理来自数百家航空公司的数据，包括频繁的飞行时间表更改 - 延迟，取消，门更改等。为数百万用户实时管理这些更新是一个巨大的挑战。传统方法（例如定期投票或手动更新）无法跟上所需的数量和即时性。例如，如果航班被取消或延迟，客户和下游系统期望在几秒钟内而不是数小时内知道。正如一个消息来源所指出的那样，诸如航空公司飞行取消或包装交付更新之类的用例要求在上游更改时立即通知。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;为了解决这个问题，现代旅行平台正在拥抱事件驱动的建筑（EDA）和管道模式，以实时处理飞行时间表的变化。在EDA中，（事件）通过一系列不同步反应的微服务管道进行了变化（事件）。这种脱钩的设计可以扩展到数百万事件，并立即为所有感兴趣的组件提供更新。该体系结构中的一个关键推动器是GRPC  - 高性能RPC框架 - 与消息经纪人一起，可帮助服务有效，可靠地交流。&lt;/p&gt;</description>
      <pubDate>Mon, 04 Aug 2025 11:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>