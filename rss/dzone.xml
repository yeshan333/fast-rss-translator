<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Unlocking AI Coding Assistants Part 1: Real-World Use Cases】解锁AI编码助手第1部分：现实世界用例</title>
      <link>https://dzone.com/articles/ai-coding-assistant-use-case</link>
      <description>【&lt;div&gt;&#xA; &lt;p&gt;Do you think that AI coding assistants are not working for you? Do you constantly get the wrong responses and now you have given up using them? This blog will cover some use cases where AI coding assistants are helpful and will help you during your daily work. Enjoy!&lt;/p&gt;&#xA; &lt;h2&gt;Introduction&lt;/h2&gt;&#xA; &lt;p&gt;Nowadays, many &lt;a href=&#34;https://dzone.com/articles/agentic-ai-and-generative-ai&#34;&gt;AI coding &lt;/a&gt;assistants are available. These are demonstrated during conferences, in videos, described in blogs, etc. The demos are often impressive and it seems that AI is able to generate almost all of the source code for you, and all you need to do is review it. However, when you start using AI coding assistants at work, it just seems that it is not working for you and it only costs you more time. The truth lies somewhere in between. AI coding assistants can save you a lot of time for certain tasks, but they also have some limitations. It is important to learn which tasks will help you and how to recognize when you hit the limits of AI. Be aware that AI is evolving at a fast pace, so the limitations of today may be resolved in the near future.&lt;/p&gt;】&lt;div&gt;&#xA; &lt;p&gt;您认为AI编码助手不为您工作吗？您是否经常得到错误的响应，现在您已经放弃了使用它们？该博客将涵盖AI编码助手有帮助的一些用例，并在您的日常工作中为您提供帮助。享受！&lt;/p&gt;&#xA; &lt;h2&gt;简介&lt;/h2&gt;&#xA; &lt;p&gt;如今，许多&lt;a href =“ https://dzone.com/articles/agentic-aiai-ai-and-and-generative-ai”&gt; ai编码&lt;/a&gt;助理。这些在会议期间，在博客等中描述的视频中证明了这些。演示通常令人印象深刻，并且似乎AI能够为您生成几乎所有的源代码，而您需要做的就是查看它。但是，当您开始使用工作中的AI编码助手时，似乎它对您不起作用，只花费您更多的时间。真相在介于两者之间。 AI编码助手可以为您节省大量时间来完成某些任务，但他们也有一些局限性。了解哪些任务将帮助您以及如何识别您何时达到AI的限制，这一点很重要。请注意，AI正在快速发展，因此今天的局限性可能会在不久的将来解决。&lt;/p&gt;</description>
      <pubDate>Mon, 21 Apr 2025 21:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Platform Engineering for Cloud Teams】云团队的平台工程</title>
      <link>https://dzone.com/articles/platform-engineering-for-cloud-teams</link>
      <description>【&lt;p&gt;Platform engineering has emerged as a key practice for cloud teams, providing self-service capabilities, automation, and governance to streamline software delivery. This practice has evolved out of scaling out DevOps at a large scale. In this blog, we will explore the role of platform engineering, its benefits, and how Cloud teams can successfully implement it.&lt;/p&gt;&#xA;&lt;h2&gt;What Is Platform Engineering?&lt;/h2&gt;&#xA;&lt;p&gt;Platform engineering is the practice of designing and building &lt;a href=&#34;https://dzone.com/articles/is-2021-the-year-of-the-internal-developer-platfor&#34;&gt;internal developer platforms&lt;/a&gt; (IDPs) that enable software teams to develop, deploy, and manage applications efficiently. These platforms integrate tools, infrastructure, and workflows to reduce cognitive load on developers, allowing them to focus on writing code rather than managing complex cloud environments and learning the processes to manage them.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;平台工程已成为云团队的关键实践，提供了自助功能，自动化和治理来简化软件交付。这种做法已经大规模地扩大了Devops的发展。在此博客中，我们将探讨平台工程的作用，其好处以及云团队如何成功实施它。&lt;/p&gt;&#xA;&lt;h2&gt;什么是平台工程？&lt;/h2&gt;&#xA;&lt;p&gt;平台工程是设计和构建&lt;a href =“ https://dzone.com/articles/is-2021-the-of-the-of-the--the-internal-developer-platfor”&gt;内部开发人员平台&lt;/a&gt;（IDPS）&lt;/a&gt; IDPS &lt;/a&gt; IDPS &lt;/a&gt; IDPS &lt;/a&gt; IDPS &lt;/a&gt; IDPS &lt;/a&gt; IDPS &lt;/a&gt; IDPS &lt;/a&gt; IDPS &lt;/a&gt; IDPS &lt;/a&gt; IDPS（IDPS），可以高效地开发，部署和管理应用程序。这些平台集成了工具，基础架构和工作流程，以减少开发人员的认知负担，从而使他们专注于编写代码，而不是管理复杂的云环境并学习管理这些过程以管理它们。 &lt;/p&gt;</description>
      <pubDate>Mon, 21 Apr 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Stateless vs Stateful Stream Processing With Kafka Streams and Apache Flink】带有Kafka流和Apache Flink的无状态与状态流处理</title>
      <link>https://dzone.com/articles/stateless-vs-stateful-stream-processing-with-kafka</link>
      <description>【&lt;p&gt;In data-driven applications, the rise of stream processing has changed how we handle and act on data. While traditional databases, data lakes, and warehouses are effective for many batch-based use cases, they fall short in scenarios demanding low latency, scalability, and real-time decision-making.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;This post explores the key concepts of &lt;strong&gt;stateless&lt;/strong&gt; and &lt;strong&gt;stateful stream processing&lt;/strong&gt;, using &lt;strong&gt;Kafka Streams&lt;/strong&gt; and &lt;strong&gt;Apache Flink&lt;/strong&gt; as examples. These principles apply to any stream processing engine, whether open-source or a cloud service.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;在数据驱动的应用程序中，流处理的兴起改变了我们处理和对数据的作用。尽管传统的数据库，数据湖泊和仓库对于许多基于批处理的用例都有效，但它们在要求低潜伏期，可扩展性和实时决策的情况下跌落。 &lt;/p&gt;&#xA;&lt;p&gt;使用&lt;strong&gt; &lt;strong&gt; &lt;strong&gt; kafka流&lt;/strong&gt;和&lt;strong&gt; apache flink &lt;/strong&gt;作为示例，这篇文章探讨了&lt;strong&gt;无状态&lt;/strong&gt;和&lt;strong&gt;状态流处理&lt;/strong&gt;的关键概念。这些原理适用于任何流处理引擎，无论是开源还是云服务。 &lt;/p&gt;</description>
      <pubDate>Mon, 21 Apr 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Fluent Bit: Installing and Configuring Fluent Bit Using Container Images (Part 2)】掌握流利位：使用容器图像安装和配置流利位（第2部分）</title>
      <link>https://dzone.com/articles/install-fluent-bit-from-source-part-two</link>
      <description>【&lt;p&gt;This series is a general-purpose getting-started guide for those of us wanting to learn about the Cloud Native Computing Foundation (CNCF) project Fluent Bit.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Each article in this series addresses a single topic by providing insights into &lt;em&gt;what&lt;/em&gt; the topic is, &lt;em&gt;why&lt;/em&gt; we are interested in exploring that topic, &lt;em&gt;where&lt;/em&gt; to get started with the topic, and &lt;em&gt;how&amp;nbsp;&lt;/em&gt;to get hands-on with learning about the topic as it relates to the Fluent Bit project.&lt;/p&gt;】&lt;p&gt;本系列是我们想要了解Cloud Native Computing Foundation（CNCF）项目Fluent Fluent Pluent Pluent lit的通用指南。 &lt;/p&gt;&#xA;&lt;p&gt;本系列中的每篇文章都通过向&lt;em&gt;提供洞察力来解决一个主题。</description>
      <pubDate>Tue, 22 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Python curses, Part 2: How to Create a Python curses-Enabled Application】Python诅咒，第2部分：如何创建python cursses的应用程序</title>
      <link>https://dzone.com/articles/python-curses-library-example</link>
      <description>【&lt;p&gt;In the first part of this programming tutorial series, &#34;&lt;a href=&#34;https://dzone.com/articles/python-curses-drawing-text&#34;&gt;Python curses, Part 1: Drawing With Text&lt;/a&gt;,&#34; we learned how to install and setup the Python &lt;code&gt;curses&lt;/code&gt; module, which is related to the &lt;em&gt;C&lt;/em&gt; &lt;code&gt;ncurses&lt;/code&gt; library. Today, we will continue that discussion as we create our first “Hello, World!” example using the &lt;code&gt;curses&lt;/code&gt; library.&lt;/p&gt;&#xA;&lt;h2&gt;Creating a Hello, World! Application With Python &lt;code&gt;curses&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;With all of the formalities concluded, it is now time to create a simple program that will demonstrate basic &lt;code&gt;ncurses&lt;/code&gt; functionality via a &lt;a href=&#34;https://dzone.com/articles/modern-python-patterns-features-and-strategies&#34;&gt;Python&lt;/a&gt; &lt;code&gt;curses&lt;/code&gt;-enabled program. The code below will write a customary “Hello, world!” message to the terminal:&lt;/p&gt;】&lt;p&gt;在本编程教程系列的第一部分中，“ &lt;a href =” https://dzone.com/articles/python-curses-drawing-text-- python诅咒，第1部分：用文本绘制&lt;/a&gt; &lt;/a&gt;，我们如何安装和设置Python &lt;code&gt; ncurses &lt;/code&gt;库。今天，我们将在创建第一个“你好，世界！”时继续进行讨论。示例使用&lt;code&gt;诅咒&lt;/code&gt;库。&lt;/p&gt;&#xA;&lt;h2&gt;创建一个Hello，World！使用Python &lt;code&gt;诅咒&lt;/code&gt; &lt;/h2&gt;&#xA;&lt;p&gt;结束了所有手续，现在是时候创建一个简单的程序，该程序将通过A &lt;a href =“ https://dzone.com/articles/modern-python-python-patterns-features---features-and-strategies-and-strategies-------- &lt;/python &lt;/a&gt; python &lt;/a&gt; cursessepondration &lt;/codes &lt;/codsecoplage&gt;下面的代码将写一个习惯的“你好，世界！”给终端的消息：&lt;/p&gt;</description>
      <pubDate>Tue, 22 Apr 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why Documentation Matters More Than You Think】为什么文档比您想象的重要</title>
      <link>https://dzone.com/articles/why-documentation-matters-more-than-you-think</link>
      <description>【&lt;p&gt;Software engineers love to ship. There’s something exhilarating about writing code, pushing it to production, and watching it solve real-world problems. But in the rush to build, we often overlook one of the most powerful tools in our engineering toolbox: &lt;strong&gt;documentation&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Documentation isn’t just about writing things down. It’s about building a system that others can understand, improve, and trust — even when the original developers have moved on. And when documentation is missing or poorly maintained, the consequences can be devastating.&lt;/p&gt;】&lt;p&gt;软件工程师喜欢发货。写代码，将其推向生产以及观看它解决了现实世界中的问题，这是令人振奋的。但是，在急于建造的过程中，我们经常忽略工程工具箱中最强大的工具之一：&lt;strong&gt;文档&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;文档不仅仅是写下来。这是关于建立其他人可以理解，改进和信任的系统 - 即使原始开发人员继续前进。当缺少文档或维护不佳时，后果可能是毁灭性的。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Apr 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【From Concept to Cloud: Building With Cursor and the Heroku MCP Server】从概念到云：使用光标和Heroku MCP服务器构建</title>
      <link>https://dzone.com/articles/building-with-cursor-heroku-mcp-server</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;I’ve been experimenting with Cursor as a development tool, and it’s been surprisingly helpful in my day-to-day workflow. It’s not just that it writes code — it understands context, offers suggestions in the right moments, and even anticipates what I’m about to do next.&lt;/p&gt;&#xA;&lt;p&gt;When I saw the &lt;a href=&#34;https://blog.heroku.com/introducing-official-heroku-mcp-server&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;announcement&lt;/a&gt; about the Heroku MCP Server, I got curious. &lt;span style=&#34;margin: 0px; padding: 0px;&#34;&gt;Could I use &lt;a href=&#34;https://www.cursor.com/&#34; target=&#34;_blank&#34;&gt;Cursor&lt;/a&gt; to go beyond just writing code, and actually build and deploy an app to Heroku, primarily via chat prompts and responses?&lt;/span&gt; I decided to try it out.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;我一直在将光标作为开发工具进行实验，这对我的日常工作流程非常有帮助。它不仅是编写代码 - 它可以理解上下文，在正确的时刻提供建议，甚至预期我接下来要做的事情。&lt;/p&gt;&#xA;&lt;p&gt;当我看到&lt;a href =“ https://blog.heroku.com/introducing-fincial-heroku-mcp-server” rel =“ noopener noreferrer” target =“ _ black”&gt;公告&lt;/a&gt;关于heroku mcp服务器的宣布，我很刺激。 &lt;span style =“边距：0px; padding：0px;“&gt;我可以使用&lt;a href =“ https：//www.cursor.com/” target =“ _ black”&gt;游标&lt;/a&gt;超越仅仅编写代码，并且实际上是通过聊天和响应来构建和部署一个应用程序，主要是通过聊天和响应来构建和部署应用程序？</description>
      <pubDate>Tue, 22 Apr 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to Restore a Transaction Log Backup in SQL Server】如何在SQL Server中还原事务日志</title>
      <link>https://dzone.com/articles/restore-transaction-log-backup-sql-server</link>
      <description>【&lt;p&gt;Restoring a transaction log backup in SQL Server is a crucial step in database recovery. It allows us to roll forward changes to a specific point in time. Whether you&#39;re recovering from failure, migrating data, or testing scenarios, the transaction log restore process ensures data consistency by applying committed transactions up to a specific point in time. &amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In this article, we will learn the key steps, common errors, and best practices to &lt;a href=&#34;https://www.stellarinfo.com/blog/rebuild-sql-database-with-corrupted-or-deleted-log-file/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;restore transaction log backups in SQL Server&lt;/a&gt; successfully.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;在SQL Server中恢复事务日志备份是数据库恢复中的关键步骤。它使我们能够向前更改到特定的时间点。无论您是从失败，迁移数据还是测试方案中恢复过来，事务日志还原过程都可以通过将承诺的交易应用于特定时间点来确保数据一致性。  &lt;/p&gt;&#xA;&lt;p&gt;在本文中，我们将学习关键步骤，常见错误和最佳实践，以&lt;a href =“ https://www.stellarinfo.com/blog/blog/rebuild/rebuild-sql-database-with-corrupted-corrupted-corrupted-corrupted-corrupt--------------- 成功地。 &lt;/p&gt;</description>
      <pubDate>Tue, 22 Apr 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Build Your First AI Model in Python: A Beginner&#39;s Guide (1 of 3)】在Python中构建您的第一个AI模型：初学者指南（第3个）</title>
      <link>https://dzone.com/articles/build-ai-model-python-beginner</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/ai-in-2024-year-in-review-and-predictions-for-2025&#34;&gt;Artificial Intelligence&lt;/a&gt; (AI) brings fundamental changes to healthcare, finance, manufacturing and customer service through automatic information processing and data-driven insights that lead to smarter business decisions. Artificial learning systems and &lt;a href=&#34;https://dzone.com/articles/explainability-of-machine-learning-models-increasi&#34;&gt;machine learning models&lt;/a&gt; power this shift, identifying patterns and large datasets even without direct human intervention.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;In order to enhance AI models and optimize solutions, it is important to grasp the fundamentals of AI model development and have a basic understanding of pre-trained AI models. Hands-on experience in building AI systems allows professionals and aspiring AI developers like you to refine your skills, enabling you to customize models based on specific needs or requirements, solve problems more efficiently and achieve better model performance.&lt;/p&gt;】&lt;p dir =“ ltr”&gt; &lt;a href =“ https://dzone.com/articles/ai-in-in-2024-年 -  in-review-and-predictions-for-2025”&gt;人工智能&lt;/a&gt;（ai）通过自动处理，通过自动进行信息处理和数据处理，将基本变化带入医疗保健，金融，制造和客户服务的基本变化。人工学习系统和&lt;a href =“ https://dzone.com/articles/explainability-of-machine-learning-models-increasi”&gt;机器学习模型&lt;/a&gt;即使没有直接人类干预，也可以识别这种转变，识别模式和大型数据集。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;为了增强AI模型并优化解决方案，重要的是要掌握AI模型开发的基本原理并对预训练的AI模型有基本的理解。实践AI系统方面的动手经验使专业人士和有抱负的AI开发人员能够完善自己的技能，使您能够根据特定需求或需求自定义模型，更有效地解决问题并实现更好的模型性能。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Apr 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Software Bill of Materials (SBOM): Enhancing Software Transparency and Security】软件材料清单（SBOM）：增强软件透明度和安全性</title>
      <link>https://dzone.com/articles/software-bill-of-materials</link>
      <description>【&lt;h2 dir=&#34;ltr&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;This article explores the concept of a Software Bill of Materials (SBOM) as an essential tool in modern software development and cybersecurity frameworks. The SBOM acts as a detailed inventory of all software components, dependencies, and associated metadata within an application. By providing transparency, facilitating risk mitigation, and supporting regulatory compliance—particularly for software products intended for U.S. federal agencies—the SBOM strengthens software security. Through a detailed examination of SBOM implementation, benefits, and associated technologies—such as composition analysis and binary detonation—this article highlights the SBOM&#39;s role in fostering a secure development environment.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;The &lt;a href=&#34;https://dzone.com/articles/guide-secure-software-supply-chain-sbom-devsecops&#34;&gt;Software Bill of Materials (SBOM)&amp;nbsp;&lt;/a&gt;is a comprehensive list detailing every software component, dependency, and metadata associated with an application. By cataloging software parts, it enables organizations to manage software more effectively and enhances visibility into potential security risks. The significance of SBOMs lies in their ability to offer transparency, build trustworthy software, and address cybersecurity challenges—especially relevant in compliance-heavy environments. This article aims to provide an in-depth analysis of SBOMs, their roles in cybersecurity and compliance, and how they integrate into modern software frameworks.&lt;/p&gt;】&lt;h2 dir =“ ltr”&gt;摘要&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;本文探讨了软件材料清单（SBOM）作为现代软件开发和网络安全框架中必不可少的工具的概念。 SBOM充当应用程序中所有软件组件，依赖项和相关元数据的详细清单。通过提供透明度，促进风险降低和支持监管合规性（尤其是针对美国联邦机构的软件产品），SBOM可以加强软件安全性。通过对SBOM实施，福利和相关技术（例如组成分析和二进制爆炸）的详细检查，这篇文章强调了SBOM在促进安全开发环境中的作用。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt;简介&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt; &lt;a href =“ https://dzone.com/articles/guide-secure-software-software-supply-chain-sbom-devsecops”&gt;软件材料清单（SBOM）&lt;/a&gt;是一个全面的列表，详细介绍了与应用程序相关的每个软件组件，依赖性和元数据。通过对软件零件进行分类，它使组织能够更有效地管理软件并增强对潜在安全风险的可见性。 SBOM的意义在于它们具有透明度，建立可信赖的软件并应对网络安全挑战的能力，尤其是在合规性的环境中相关。本文旨在对SBOM进行深入分析，它们在网络安全和合规性中的作用以及它们如何集成到现代软件框架中。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Apr 2025 15:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>