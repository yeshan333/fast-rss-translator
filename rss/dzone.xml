<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Secure DevOps in Serverless Architecture】在无服务器体系结构中保护DevOps</title>
      <link>https://dzone.com/articles/secure-devops-in-serverless-architecture</link>
      <description>【&lt;p&gt;Serverless computing, app development, and deployment have been completely revolutionized by its unparalleled scalability and cost efficiency. Infrastructure management abstraction, which is provided by serverless platforms like AWS Lambda, Google Cloud Functions, and Azure Functions, allows developers to concentrate on building their functionality while the cloud provider takes care of scaling, patching, and maintenance.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;However, as you might imagine, with something as convenient as this, there are unique security challenges introduced, especially for event-driven workflows where triggers and integrations run rampant at creating complex attack surfaces.&lt;/p&gt;】&lt;p&gt;无服务器计算，应用程序开发和部署已通过其无与伦比的可扩展性和成本效率完全彻底改变了。基础架构管理抽象是由AWS Lambda，Google Cloud功能和Azure功能等无服务器平台提供的，使开发人员可以专注于构建其功能，而云提供商负责扩展，修补和维护。 &lt;/p&gt;&#xA;但是，正如您可能想象的那样，在这样的方便的情况下，引入了独特的安全挑战，尤其是对于事件驱动的工作流程，触发器和集成在创建复杂的攻击表面方面越来越庞大。&lt;/p&gt;。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Jun 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【It’s Not Magic. It’s AI. And It’s Brilliant.】这不是魔术。是AI。而且很棒。</title>
      <link>https://dzone.com/articles/ai-explained-for-curious-minds</link>
      <description>【&lt;p&gt;A few weeks ago, I floated a Google Form with a simple, almost laughable question:&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&#34;Post your silliest AI-related doubts, as silly as: &lt;a href=&#34;https://dzone.com/articles/artificial-intelligence-everything-you-need-to-kno-1&#34;&gt;What even is AI&lt;/a&gt;?&#34;&lt;/p&gt;】&lt;p&gt;几周前，我以一个简单而几乎可笑的问题浮动了Google表格：&lt;/p&gt;&#xA;&lt;p&gt;“发表您最愚蠢的AI相关疑问，如：&lt;a href =“ https://dzone.com/articles/artcover-covery-intelligence-everyther-everything-everything-you-need-need-to-kno-1”&gt;什么是AI &lt;/a&gt;？</description>
      <pubDate>Wed, 18 Jun 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Building Scalable and Resilient UI/UX With Angular and Node.js】构建可扩展且具有弹性的UI/UX，具有Angular和Node.js</title>
      <link>https://dzone.com/articles/how-tech-giants-build-scalable-and-resilient-uiux</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;In large-scale applications, the synergy of a robust frontend and a high-performance backend is essential. By leveraging Angular for rich, maintainable UIs and &lt;a href=&#34;https://dzone.com/refcardz/nodejs&#34;&gt;Node.js&lt;/a&gt; (often with frameworks like Express or NestJS) on the backend, teams can ensure both high throughput and responsive user experiences. &lt;a href=&#34;https://dzone.com/articles/modern-authentication-on-dotnet&#34;&gt;Modern SPAs&lt;/a&gt; (Single-Page Applications) by default offload much rendering to the browser, which can slow initial load and SEO. Therefore, tech leaders increasingly adopt hybrid rendering strategies – for example, using Angular Universal for server-side rendering (SSR) – to pre-render pages on Node.js servers. This approach boosts Core Web Vitals (e.g. FCP, LCP) by delivering HTML content to the browser immediately. In turn, heavy client-side JavaScript can “hydrate” that HTML into a fully interactive app. Careful choice of rendering model (CSR vs SSR vs SSG vs ISR) is a foundational performance strategy.&lt;/p&gt;&#xA;&lt;h2 data-end=&#34;862&#34; data-start=&#34;824&#34;&gt;&lt;img style=&#34;width: 500px;&#34; class=&#34;fr-fic fr-dib lazyload&#34; data-image=&#34;true&#34; data-new=&#34;false&#34; data-sizeformatted=&#34;76.7 kB&#34; data-mimetype=&#34;image/png&#34; data-creationdate=&#34;1747192860102&#34; data-creationdateformatted=&#34;05/14/2025 03:21 AM&#34; data-type=&#34;temp&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/18401783-1747192859717.png&#34; data-modificationdate=&#34;null&#34; data-size=&#34;76670&#34; data-name=&#34;1747192859717.png&#34; data-id=&#34;18401783&#34; data-src=&#34;https://dz2cdn1.dzone.com/storage/temp/18401783-1747192859717.png&#34; alt=&#34;A typical Single-Page Application (SPA) rendering flow. &#34;&gt;&lt;/h2&gt;&#xA;&lt;p data-end=&#34;862&#34; data-start=&#34;824&#34; style=&#34;text-align: center;&#34;&gt;&lt;em&gt;A typical Single-Page Application (SPA) rendering flow.&lt;/em&gt;&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt;在大规模应用中，坚固前端的协同作用和高性能后端是必不可少的。通过利用Angular来获得丰富的，可维护的UI和&lt;a href =“ https://dzone.com/refcardz/nodejs”&gt; node.js &lt;/a&gt;（通常在后端具有诸如Express或Nestjs之类的框架）上，团队可以确保高吞吐量和响应式用户体验。 &lt;a href =“ https://dzone.com/articles/modern-authentication-on-dotnet”&gt; Modern spas &lt;/a&gt;（单层应用程序）（默认情况下）通过向浏览器进行大量渲染，这可以减慢初始负载和SEO。因此，技术领导者越来越多地采用混合渲染策略（例如，使用Angular Universal用于服务器端渲染（SSR））在Node.js服务器上预渲染页面。这种方法通过立即向浏览器传递HTML内容来增强核心Web生命力（例如FCP，LCP）。反过来，繁重的客户端JavaScript可以将HTML“补充”为完全交互的应用程序。仔细选择渲染模型（CSR vs SSR vs SSG与ISR）是一种基本绩效策略。&lt;/p&gt;&#xA;&lt;h2 data-end =“ 862” data-start =“ 824”&gt; &lt;img style =“ width：500px;” class =“ fr-fic fr-dib懒负载” data-image =“ true” data-new =“ false” data-sizeFormatted =“ 76.7 kb” data-mimetype =“ image/png” data-creationdate =“ 17471928602 data-url =“ https://dz2cdn1.dzone.com/storage/temp/18401783-174192859717.png” data-modificationdate =“ nul nul data null” data-size =“ 76670” 76670“ data-name” data-name =“ 1747192859285928597.PNAD =” data-src =“ https://dz2cdn1.dzone.com/storage/temp/18401783-174192859717.png” alt =“典型的单页应用程序（SPA）呈现（SPA）呈现流程。&#xA;&lt;p data-end =“ 862” data-start =“ 824”样式=“ text-align：center;”&gt; &lt;em&gt; &lt;em&gt;典型的单页应用程序（SPA）渲染流。&lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 18 Jun 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why Whole-Document Sentiment Analysis Fails and How Section-Level Scoring Fixes It】为什么整个文档的观点分析失败以及如何将部分得分解决</title>
      <link>https://dzone.com/articles/section-level-sentiment-analysis</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Have you ever tried to analyze the sentiment of a long-form document like a financial report, technical whitepaper or regulatory filing? You probably noticed that the sentiment score often feels way off. That’s because most sentiment analysis tools return a single, aggregated sentiment score—usually positive, negative, or neutral—for the entire document. This approach completely misses the complexity and nuance embedded in long-form content.&lt;/p&gt;&#xA;&lt;p&gt;I encountered this challenge while analyzing annual reports in the finance industry. These documents are rarely uniform in tone. The CEO’s message may sound upbeat, while the “Risk Factors” section could be steeped in caution. A single sentiment score doesn’t do justice to this mix.&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt;您是否曾经尝试过分析诸如财务报告，技术白皮书或监管文件之类的长期文档的情感？您可能会注意到，情感得分通常会感觉不错。这是因为大多数情感分析工具返回整个文档的单个，汇总的情感评分（通常是正面，负面或中立）。这种方法完全错过了长期含量中的复杂性和细微差别。&lt;/p&gt;&#xA;&lt;p&gt;我在分析金融行业的年度报告时遇到了这一挑战。这些文档的语气很少统一。首席执行官的信息听起来可能很乐观，而“风险因素”部分可能会谨慎地浸入。单个情感分数对此组合并不公正。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Jun 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to Master a DevSecOps Pipeline that Devs and AppSec Love】如何掌握Dev和Appsec爱的DevSecops管道</title>
      <link>https://dzone.com/articles/how-to-master-a-devsecops-pipeline-appsec</link>
      <description>【&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;When you became a developer, you didn’t imagine you’d be spending a big chunk of your time parsing vulnerability reports, getting stuck in security review cycles, or rerunning CI jobs because the pipeline flagged a dozen “&lt;strong&gt;critical issues,&lt;/strong&gt;” half of which are false positives.&lt;/span&gt;&lt;span data-ccp-props=&#34;{&amp;quot;134233117&amp;quot;:false,&amp;quot;134233118&amp;quot;:false,&amp;quot;335551550&amp;quot;:1,&amp;quot;335551620&amp;quot;:1,&amp;quot;335559738&amp;quot;:240,&amp;quot;335559739&amp;quot;:240}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;You&amp;nbsp;didn’t&amp;nbsp;sign up&amp;nbsp;for this.&amp;nbsp;You&amp;nbsp;weren’t&amp;nbsp;even given a choice,&amp;nbsp;but here you are:&lt;/span&gt;&lt;span data-ccp-props=&#34;{&amp;quot;134233117&amp;quot;:false,&amp;quot;134233118&amp;quot;:false,&amp;quot;335551550&amp;quot;:1,&amp;quot;335551620&amp;quot;:1,&amp;quot;335559738&amp;quot;:240,&amp;quot;335559739&amp;quot;:240}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;】&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-US&#34;&gt;When you became a developer, you didn’t imagine you’d be spending a big chunk of your time parsing vulnerability reports, getting stuck in security review cycles, or rerunning CI jobs because the pipeline flagged a dozen “&lt;strong&gt;critical issues,&lt;/strong&gt;” half of which are false positives.&lt;/span&gt;&lt;span data-ccp-props =“ {” 134233117“：false，” 1342333118“：false，” 335551550“：1，” 335551620“：1，” 335559738“：” 335559738“：240，”：240，“ 335559739”：3355559739“：240}”：240}：240}“&gt; &lt;/pass&gt; &lt;/pass&gt; &lt;/pass&gt;&#xA;&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ en-us”&gt;您没有为此注册。 您甚至都没有选择，但是您是：&lt;/span&gt; &lt;span data-ccp-props =“ {” 134233117“：false，” 1342333118“：false，” 335551550“：1，” 335551620“：1，” 335559738“：” 335559738“：240，”：240，“ 335559739”：3355559739“：240}”：240}：240}“&gt; &lt;/pass&gt; &lt;/pass&gt; &lt;/pass&gt;</description>
      <pubDate>Wed, 18 Jun 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Top Trends for Data Streaming with Apache Kafka and Flink】使用Apache Kafka和Flink的数据流的最佳趋势</title>
      <link>https://dzone.com/articles/future-of-data-streaming-kafka-flink-trends</link>
      <description>【&lt;p&gt;The evolution of data streaming has transformed modern business infrastructure, establishing real-time data processing as a critical asset across industries. At the forefront of this transformation, &lt;a href=&#34;https://dzone.com/articles/sass-pass-data-streaming-kafka-flink-streaming&#34;&gt;Apache Kafka and Apache Flink&lt;/a&gt; stand out as leading open-source frameworks that serve as the foundation for cloud services, enabling organizations to unlock the potential of real-time data. Over recent years, trends have shifted from batch-based data processing to real-time analytics, scalable cloud-native architectures, and improved data governance powered by these technologies. Looking ahead, the data streaming ecosystem is set to undergo even greater changes. Here are the top trends shaping the future of data streaming for businesses.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;auto&#34;&gt;The Top Data Streaming Trends&lt;/h2&gt;&#xA;&lt;p&gt;I recently explored the &lt;a href=&#34;https://dzone.com/articles/the-past-present-and-future-of-stream-processing&#34; rel=&#34;noopener&#34; target=&#34;_blank&#34;&gt;past, present, and future of data streaming tools and strategies&lt;/a&gt; from the past decades. Data streaming is becoming more and more mature and standardized, but also innovative.&lt;/p&gt;】&lt;p&gt;数据流的演变已经改变了现代业务基础架构，将实时数据处理作为整个行业的关键资产。在这种转变的最前沿，&lt;a href =“ https://dzone.com/articles/sass-pass-data-streaming-kafka-flink-streaming-&gt; apache kafka and apache flink &lt;/a&gt;是作为领导开放式服务框架，是为云服务提供基础，可以实现无效组织的基础。近年来，趋势已从基于批处理的数据处理转变为实时分析，可扩展的云构建体以及改进这些技术支持的数据治理。展望未来，数据流生态系统设置为更大的变化。以下是塑造企业数据流的未来的主要趋势。&lt;/p&gt;&#xA;&lt;h2 dir =“ auto”&gt;顶级数据流趋势&lt;/h2&gt;&#xA;&lt;p&gt;我最近探索了&lt;a href =“ https://dzone.com/articles/the-past-present-present-present-al-future-future-of-stream-processing” rel =“ noopener” target =“ _ blank”&gt;过去，现在，现在以及数据流工具和策略的未来&lt;/a&gt;在过去的几十年中。数据流正在变得越来越成熟和标准化，但也变得创新。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Jun 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【A New Era of Unified Lakehouse: Who Will Reign? A Deep Dive into Apache Doris vs. ClickHouse】统一湖豪斯的新时代：谁将统治？深入研究Apache Doris vs. Clickhouse</title>
      <link>https://dzone.com/articles/apache-doris-vs-clickhouse-real-time-analytics</link>
      <description>【&lt;p&gt;With the explosive growth of data, the demand for real-time analytics across industries is more urgent than ever. High-performance data warehouses are the backbone of real-time analysis, enabling enterprises to quickly gain insights and drive decision-making. Among many open-source solutions, &lt;a href=&#34;https://dzone.com/articles/introduction-to-apache-doris-a-next-generation-rea&#34;&gt;Apache Doris&lt;/a&gt; and ClickHouse stand out as two of the most noteworthy contenders. This article provides an in-depth &lt;a href=&#34;https://dzone.com/articles/how-to-choose-between-doris-and-clickhouse&#34;&gt;comparison between Apache Doris and ClickHouse&lt;/a&gt;, aiming to offer valuable insights for technical professionals and decision-makers when selecting real-time analytics solutions.&lt;/p&gt;&#xA;&lt;h2&gt;Apache Doris&lt;/h2&gt;&#xA;&lt;p&gt;Apache Doris is a modern open-source data warehouse based on a &lt;a href=&#34;https://dzone.com/articles/mastering-the-art-of-data-engineering&#34;&gt;massively parallel processing (MPP) architecture&lt;/a&gt;, renowned for its exceptionally high query performance. Designed to provide sub-second query responses, Doris can effortlessly handle both high-concurrency point queries and complex, high-throughput analytical workloads. Its architecture consists of two main components: the Frontend (FE) and the Backend (BE). The FE handles user requests, query parsing, metadata management, and node management, while the BE is responsible for data storage and query execution—with data partitioned and stored in multiple replicas across different nodes. This design supports horizontal scaling, allowing a single Doris cluster to manage hundreds of machines and petabytes of data, all while supporting compute-storage separation for elastic scaling and efficient resource utilization.&lt;/p&gt;】&lt;p&gt;随着数据的爆炸性增长，整个行业对实时分析的需求比以往任何时候都更加紧迫。高性能数据仓库是实时分析的骨干，使企业能够快速获得见解并推动决策。在许多开源解决方案中，&lt;a href =“ https://dzone.com/articles/introduction-to-to-to-parce-apache-doris-a-next-generation-rea-&gt; apache doris &lt;/a&gt;和Clickhouse脱颖而出，并且是两个最值得注意的竞争者。本文提供了一个内向&lt;a href =“ https://dzone.com/articles/how-to-to-choose-betweewnee-doris-and-and-clickhouse”&gt; Apache Doris和Clickhouse之间的比较&lt;/a&gt;，旨在为选择实时分析解决方案时，旨在为技术专业人士和决策者提供宝贵的见解。&#xA;&lt;h2&gt; apache doris &lt;/h2&gt;&#xA;&lt;p&gt; Apache Doris是一个现代的开源数据仓库，基于A &lt;a href =“ https://dzone.com/articles/mastering-the-the-art--the-art-oart-of-data-weendegring”&gt;大量并行处理（MPP）架构&lt;/a&gt; &lt;/a&gt; &lt;/a&gt;以其出色的质量质量性能而闻名。 Doris旨在提供后秒的查询响应，可以毫不费力地处理高急性点查询和复杂的高通量分析工作负载。它的架构包括两个主要组成部分：前端（Fe）和后端（BE）。 FE处理用户请求，查询解析，元数据管理和节点管理，而BE负责数据存储和查询执行，并在不同节点的多个副本中进行了分区并存储数据。该设计支持水平缩放，允许单个Doris群集管理数百台机器和数据的数据，同时支持弹性缩放和有效资源利用的计算存储分离。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Jun 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【TIOBE Programming Index News June 2025: SQL Falls to Record Low Popularity】TIOBE编程索引新闻2025年6月：SQL跌倒以记录低受欢迎程度</title>
      <link>https://dzone.com/articles/tiobe-programming-index-news</link>
      <description>【&lt;p&gt;The programming language SQL hit 12th place in the TIOBE Programming Community Index, its lowest position since the rankings began in 2001. Although SQL remains a critical language for working with databases, the increased use of &lt;a href=&#34;https://dzone.com/articles/embracing-nosql-the-future-of-data-storage&#34;&gt;NoSQL databases&lt;/a&gt; for AI applications has begun to take its market share.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://www.techrepublic.com/article/tiobe-index-language-rankings/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;TIOBE Programming Community Index&lt;/a&gt; shows trends in programming languages based on search engine volume.&lt;/p&gt;】&lt;p&gt;编程语言SQL在TIOBE编程社区指数中排名第12位，这是自2001年开始以来最低的位置。尽管SQL仍然是使用数据库的关键语言，但使用&lt;a href =” https：///dzone.com/articles/articles/Articles/embracing-nosbracing-nosql-the-future-future-data apatiations for aimbracing-noseperiation &lt;a href =开始占据市场份额。&lt;/p&gt;&#xA;&lt;p&gt; &lt;a href =“ https://www.techrepublic.com/article/tiobe-index-language-rankings/” rel =“ noopener noreferrer” target =“ _ black”&gt; tiobe计划社区索引&lt;/</description>
      <pubDate>Wed, 18 Jun 2025 20:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【SBOM Essentials】SBOM必需品</title>
      <link>https://dzone.com/refcardz/sbom-essentials</link>
      <description>【As organizations rely more on open-source and third-party components, software supply chain security has become more crucial than ever before. Software bills of materials (SBOMs) are a practical solution for gaining visibility into software components, identifying vulnerabilities, and ensuring license compliance. This Refcard covers the essential elements of SBOMs, their key formats, open-source tools for automating SBOM generation and attestation, and how to integrate SBOMs into development workflows.】随着组织更多地依赖开源和第三方组件，软件供应链安全变得比以往任何时候都变得更加重要。软件材料账单（SBOM）是一种实用解决方案，用于吸收软件组件，识别漏洞并确保遵守许可证合规性。此避难所涵盖了SBOM的基本要素，其关键格式，用于自动化SBOM生成和证明的开源工具，以及如何将SBOM集成到开发工作流程中。</description>
      <pubDate>Wed, 18 Jun 2025 16:19:32 +0000</pubDate>
    </item>
    <item>
      <title>【The Shift of DevOps From Automation to Intelligence】DevOps从自动化转移到智能</title>
      <link>https://dzone.com/articles/the-shift-of-devops-from-automation-to-intelligenc</link>
      <description>【&lt;p&gt;When you think about human evolution, it&#39;s astonishing how far we have come. From hunters and gatherers to a world where we can now order food with a tap, get one-day delivery, and call a taxi instantly. Part of the story here is how cognitive evolution led to the invention of tools and technology that transformed the way we live today.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;As humans evolved, Technology has evolved through different eras as well, each redefining what engineers build and how they build it. From the first personal computing experiments at Xerox PARC in the 1970s to today’s wave of &lt;a href=&#34;https://dzone.com/articles/introduction-generative-ai-empowering-enterprises&#34;&gt;generative artificial intelligence&lt;/a&gt; (GenAI), the pace of innovation has continually reshaped software engineering practices. By the 1980s, foundational protocols for global connectivity emerged. On January 1, 1983, the ARPANET permanently switched to the TCP/IP protocol suite, marking the moment TCP/IP became the standard for internetworking. This gave birth to the modern Internet.&lt;/p&gt;】&lt;p&gt;当您考虑人类进化时，这令人惊讶地走了多远。从猎人和收集者到一个世界，我们现在可以用水龙头订购食物，一日送货，并立即致电出租车。故事的一部分是认知进化如何导致工具和技术的发明，从而改变了我们今天的生活方式。 &lt;/p&gt;&#xA;&lt;p&gt;随着人类的发展，技术也通过不同的时代发展，每个时代都重新定义了工程师的构建及其构建方式。 From the first personal computing experiments at Xerox PARC in the 1970s to today’s wave of &lt;a href=&#34;https://dzone.com/articles/introduction-generative-ai-empowering-enterprises&#34;&gt;generative artificial intelligence&lt;/a&gt; (GenAI), the pace of innovation has continually reshaped software engineering practices.到1980年代，出现了全球连通性的基础协议。 1983年1月1日，ARPANET永久切换到TCP/IP协议套件，标志着TCP/IP成为Internet工作的标准。这产生了现代互联网。&lt;/p&gt;</description>
      <pubDate>Wed, 18 Jun 2025 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>