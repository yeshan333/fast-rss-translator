<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【LLMs for Debugging Code】调试代码的LLM</title>
      <link>https://dzone.com/articles/llms-for-debugging-code</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Large language models (LLMs) are transforming software development lifecycles, with their utility in code understanding, code generation, debugging, and many more. This article provides insights into how LLMs can be utilized to debug codebases, detailing their core capabilities, the methodologies used for training, and how the applications might evolve further in the future. Despite the issues with LLMs like hallucinations, the integration of LLMs into development environments through sophisticated, agentic debugging frameworks proves to improve developers’ efficiency.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;h3 dir=&#34;ltr&#34;&gt;The Evolving Role of LLMs in Coding&lt;/h3&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;LLMs have already proven their capabilities beyond their initial applications in &lt;a href=&#34;https://dzone.com/articles/natural-language-processing-nlp-in-software-testin&#34;&gt;natural language processing&lt;/a&gt; to achieve remarkable performance in diverse code-related tasks, including code generation and translation. They power AI coding assistants like GitHub Copilot and Cursor, and have demonstrated near-human-level performance on standard benchmarks such as HumanEval and MBPP.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;大语言模型（LLMS）正在转换软件开发生命周期，并在代码理解，代码生成，调试等方面的实用性。本文提供了有关如何利用LLM来调试代码库的洞察力，详细介绍了其核心功能，用于培训的方法以及应用程序将来如何进一步发展。尽管LLM等幻觉等问题，但通过复杂的，代理的调试框架将LLMS整合到开发环境中，证明可以提高开发人员的效率。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt;简介&lt;/h2&gt;&#xA;&lt;h3 dir =“ ltr”&gt; LLM在编码&lt;/h3&gt;中的不断发展的作用&#xA;&lt;p dir =“ ltr”&gt; llms在&lt;a href =“ https：//dzone.com/articles/naturalalallanguage-processing-nlp-in-software-testin”&gt;自然语言处理&lt;/a&gt;中，已经证明了其最初应用的能力，以在不同的代码代码中实现相似的代码，包括代码销售的代码，包括代码生成代码，包括代码和翻译。他们为诸如Github副副总片和光标等AI编码助手提供了供电，并在HumaneVal和MBPP等标准基准测试中表现出了几乎人类级别的性能。 &lt;/p&gt;</description>
      <pubDate>Thu, 18 Sep 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Disabling UseNUMA Flag When CPU and Memory Node Misalign in JDK】jdk中的CPU和内存节点错位时禁用Usenuma标志</title>
      <link>https://dzone.com/articles/usenuma-flag-misalignment-jdk</link>
      <description>【&lt;p&gt;Today, Java is still one of the widely used languages to build and run applications, and for the same reason, organizations prioritize measuring its performance.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;When running a Java application on a multi-NUMA (Non-Uniform Memory Access) memory node, we need to pay attention to the remote accesses, if any, otherwise, that can result in increased latencies and hence result in reduced performance. The libnuma kernel library provides several policies, including localalloc, preferred, membind, and interleave, which enable users to affinitize their applications and run them with optimal utilization of the server nodes as per their requirements. &amp;nbsp;&lt;/p&gt;】&lt;p&gt;今天，Java仍然是广泛使用的语言之一，用于构建和运行应用程序，出于相同的原因，组织优先考虑衡量其性能。 &lt;/p&gt;&#xA;&lt;p&gt;在多-NUMA（非均匀内存访问）内存节点上运行Java应用程序时，我们需要注意远程访问（如果有的话，否则）会导致潜伏期增加并因此导致性能降低。 Libnuma内核库提供了多种策略，包括Localalloc，Preferred，Membind和Interleave，这使用户能够按照其要求对服务器节点进行最佳利用来实现其应用程序。  &lt;/p&gt;</description>
      <pubDate>Thu, 18 Sep 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Blueprint for Agentic AI: Azure AI Foundry, AutoGen, and Beyond】代理AI的蓝图：Azure AI铸造厂，Autogen及其他</title>
      <link>https://dzone.com/articles/blueprint-agentic-ai-azure-foundry-autogen</link>
      <description>【&lt;p&gt;In 2025, AI isn’t just about individual models doing one thing at a time, but it’s about intelligent agents working together like a well-coordinated team. Picture this: a group of AI systems, each with its own specialty, teaming up to solve complex problems in real time. Sounds futuristic? It’s already happening — thanks to multi-agent systems.&lt;/p&gt;&#xA;&lt;p&gt;Two tools that are making this possible in a big way are Azure AI Foundry and &lt;a href=&#34;https://dzone.com/articles/multi-agent-conversation-with-autogen-ai&#34;&gt;AutoGen&lt;/a&gt;.&lt;/p&gt;】&lt;p&gt;在2025年，AI不仅仅是一个单个模型一次做一件事，而且是关于智能的代理商像一个协调良好的团队一样一起工作。想象以下图片：一组AI系统，每个系统都有自己的专业，共同解决了复杂的问题。听起来有未来派？这已经发生了 - 多亏了多机构系统。&lt;/p&gt;&#xA;&lt;p&gt;两种使它以很大的方式成为可能的工具是Azure AI Foundry和&lt;A href =“ https://dzone.com/articles/multi-agent-conversation-with-autogen-aigogen-ai-aigogen-ai-</description>
      <pubDate>Thu, 18 Sep 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Remote Android Management: A Step-by-Step Guide】远程Android管理：逐步指南</title>
      <link>https://dzone.com/articles/remote-android-management-guide</link>
      <description>【&lt;h2 dir=&#34;ltr&#34;&gt;The Problem No One Talks About&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;In an era where screens dominate bedtime routines, millions now fall asleep to YouTube videos, podcasts, or streaming apps. However, this habit has a hidden cost: uncontrolled volume exposure, especially for children. As a parent and developer, I faced this problem firsthand — my child’s late-night YouTube binges led to restless sleep and morning irritability.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Free apps in the Google Play Store, like Volume Limiter and Volume Control, were a failure: They crashed, had no settings, or were too intrusive. Perhaps commercial apps would be better, but I haven&#39;t tested this since they cost money, often quite a bit.&lt;/p&gt;】&lt;h2 dir =“ ltr”&gt;问题没有人谈论&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;在一个屏幕占主导地位的睡前例程，数以百万计的YouTube视频，播客或流式应用程序的时代。但是，这种习惯具有隐藏的成本：不受控制的体积暴露，尤其是对于儿童。作为父母和开发人员，我亲眼遇到了这个问题 - 我孩子的深夜YouTube binges导致睡眠不安和早晨烦躁。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;在Google Play商店中的免费应用程序，例如音量限制器和音量控制，都是故障：它们崩溃了，没有设置或太侵入性。也许商业应用程序会更好，但是我还没有对此进行测试，因为它们花了钱，通常很多。&lt;/p&gt;</description>
      <pubDate>Thu, 18 Sep 2025 15:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【FOSDEM 2025 Recap: Open Source Contributors Unite to Collaborate and Help Advance Apache Software Projects】Fosdem 2025回顾：开源贡献者团结起来协作和帮助Apache软件项目</title>
      <link>https://dzone.com/articles/fosdem-2025-recap-apache-software</link>
      <description>【&lt;p&gt;FOSDEM 2025 has come to a close, and it certainly was not without a lot of content and participation from Apache Software Foundation (ASF) members, committers, and contributors! We asked ASF participants to provide summaries and observations from this year’s premier free software event, to share a small part of the work that ASF community members do for open-source software development. This blog provides a brief overview of their talks, including links to the video recordings.&lt;/p&gt;&#xA;&lt;h2&gt;Apache NuttX RTOS&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Talk:&lt;/strong&gt; &#34;SBOM Journey for an Open Source Project - Apache NuttX RTOS&#34; (&lt;a href=&#34;https://video.fosdem.org/2025/h2213/fosdem-2025-4528-sbom-journey-for-an-open-source-project-apache-nuttx-rtos.av1.webm&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;video&lt;/a&gt;)&lt;/p&gt;】&lt;p&gt; Fosdem 2025即将结束，当然，Apache Software Foundation（ASF）成员，提交者和贡献者的内容和参与肯定并非如此！我们要求ASF参与者提供今年主要免费软件活动的摘要和观察结果，以分享ASF社区成员为开源软件开发所做的一小部分工作。该博客简要概述了他们的演讲，包括指向视频录制的链接。&lt;/p&gt;&#xA;&lt;h2&gt; apache nuttx rtos &lt;/h2&gt;&#xA;&lt;p&gt; &lt;strong&gt;谈话：&lt;/strong&gt;“开源项目的SBOM旅程-Apache nuttx rtos”（&lt;a href =“ https://video.fosdem.org/2025/h2213/fosdem-2025-4528-sbom-journey-for-an-open-source-source-project-source-project-prohack-nuttx-nuttx-rtos.av1.webm”</description>
      <pubDate>Thu, 18 Sep 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Unified Checkout Experience Through Micro Frontend Architecture】通过微观前端体系结构进行统一的结帐体验</title>
      <link>https://dzone.com/articles/unified-checkout-experience-microfrontend-architecture</link>
      <description>【&lt;p data-end=&#34;605&#34; data-start=&#34;264&#34;&gt;Large retail systems today, much like Walmart, operate multiple types of checkout registers across various services — pharmacy, auto care, fuel stations, photo centers, and more. These checkout points are not just limited to traditional frontend registers for scanning and payment, but encompass a broad array of service-specific interfaces.&lt;/p&gt;&#xA;&lt;p data-end=&#34;1038&#34; data-start=&#34;607&#34;&gt;As the breadth of services grows, retailers are often left managing fragmented checkout solutions. This fragmentation leads to inconsistent user experiences, higher training overhead for staff, and slower development cycles. The need for a unified checkout experience across microapps — one that abstracts underlying service complexity and presents a consistent interface to customers and associates — has never been more critical.&lt;/p&gt;】&lt;p data-end =“ 605” data-start =“ 264”&gt;当今大型零售系统，就像沃尔玛一样，在各种服务中运行多种类型的结帐登记册 - 药房，汽车护理，燃料站，燃料站，照相中心等。这些结帐点不仅限于传统的前端登记簿进行扫描和付款，而且包括各种特定于服务的接口。&lt;/p&gt;&#xA;&lt;p data-end =“ 1038” data-start =“ 607”&gt;随着服务的广度增长，零售商通常会管理零散的结帐解决方案。这种分裂导致用户体验不一致，员工的较高培训开销以及较慢的开发周期。需要在Microapp上获得统一的结帐体验（一种摘要服务复杂性并向客户和员工提出一致的界面）从来都不是至关重要的。&lt;/p&gt;</description>
      <pubDate>Thu, 18 Sep 2025 13:00:11 +0000</pubDate>
    </item>
    <item>
      <title>【Creating a Distributed Computing Cluster for a Data Base Management System: Part 1】为数据库管理系统创建一个分布式计算集群：第1部分</title>
      <link>https://dzone.com/articles/creating-dcc-for-dbms-part-1</link>
      <description>【&lt;p&gt;Ideas of creating a distributed computing cluster (DCC) for database management systems (DBMS) have been striking me for quite a long time. If simplified, the DCC software makes it possible to combine many servers into one super server (cluster), performing an even balancing of &lt;em&gt;all&lt;/em&gt; queries between individual servers. In this case, everything will appear for the application running on the DCC as if it was running with one server and one database (DB). It will not be dispersed databases on distributed servers, but work as one virtual one. All network protocols, replication exchanges, and proxy redirections will be concealed inside the DCC. At the same time, all resources of distributed servers, in particular RAM and CPU time, will be utilized evenly and in an efficient fashion.&lt;/p&gt;&#xA;&lt;p&gt;For example, in a cloud data processing center (DPC), it is possible to take one physical super server and divide it into a number of virtual DBMS servers. But the reverse procedure was not possible until now, i.e., it is not possible to take a number of physical servers and merge them into a single virtual DBMS super server. In some specified sense, DCC is a technology that makes it possible to merge physical servers into one virtual DBMS super server.&lt;/p&gt;】&lt;p&gt;为数据库管理系统（DBMS）创建分布式计算群集（DCC）的想法已经为我打动了很长时间。如果简化了DCC软件，则可以将许多服务器组合到一个超级服务器（群集）中，并在单个服务器之间执行所有&lt;em&gt; All &lt;/em&gt;查询的平衡。在这种情况下，在DCC上运行的应用程序将出现所有内容，就好像它使用一台服务器和一个数据库（DB）一起运行。它不会在分布式服务器上分散数据库，而是一个虚拟的数据库。所有网络协议，复制交换和代理重定向都将隐藏在DCC内。同时，分布式服务器的所有资源，尤其是RAM和CPU时间，都将以有效的方式均匀利用。&lt;/p&gt;&#xA;&lt;p&gt;例如，在云数据处理中心（DPC）中，可以使用一个物理超级服务器并将其分为许多虚拟DBMS服务器。但是直到现在才不可能进行反向过程，即，不可能使用许多物理服务器并将它们合并到单个虚拟DBMS超级服务器中。从某种意义上说，DCC是一项技术，可以将物理服务器合并到一个虚拟DBMS Super Server中。&lt;/p&gt;</description>
      <pubDate>Thu, 18 Sep 2025 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Development of System Configuration Management: Summary and Reflections】系统配置管理的开发：摘要和反思</title>
      <link>https://dzone.com/articles/system-configuration-management-summary-reflections</link>
      <description>【&lt;h2&gt;Series Overview&lt;/h2&gt;&#xA;&lt;p&gt;This article is Part 4 of a multi-part series: &#34;Development of system configuration management.&#34;&lt;/p&gt;&#xA;&lt;p&gt;The complete series:&lt;/p&gt;】&lt;H2&gt;系列概述&lt;/h2&gt;&#xA;&lt;p&gt;本文是多部分系列的第4部分：“系统配置管理的开发。” &lt;/p&gt;&#xA;&lt;p&gt;完整系列：&lt;/p&gt;</description>
      <pubDate>Thu, 18 Sep 2025 11:00:12 +0000</pubDate>
    </item>
    <item>
      <title>【Enable AWS Budget Notifications With SNS Using AWS CDK】使用AWS CDK启用AWS预算通知</title>
      <link>https://dzone.com/articles/aws-budget-notifications-sns-cdk</link>
      <description>【&lt;p&gt;Keeping track of AWS spend is very important. Especially since it’s so easy to create resources, you might forget to turn off an EC2 instance or container you started, or remove a CDK stack for a specific experiment. Costs can creep up fast if you don’t put guardrails in place.&lt;/p&gt;&#xA;&lt;p&gt;Recently, I had to set up budgets across multiple AWS accounts for my team. Along the way, I learned a few gotchas (especially around SNS and KMS policies) that weren’t immediately clear to me as I started out writing AWS CDK code. In this post, we’ll go through how to:&lt;/p&gt;】&lt;p&gt;跟踪AWS支出非常重要。尤其是由于创建资源非常容易，因此您可能会忘记关闭启动的EC2实例或容器，或删除CDK堆栈以进行特定实验。如果您不放置护栏，成本可能会很快爬升。&lt;/p&gt;&#xA;&lt;p&gt;最近，我不得不为我的团队跨多个AWS帐户设置预算。一路上，我学到了一些陷阱（尤其是围绕SNS和KMS政策），当我开始编写AWS CDK代码时，我并没有立即清楚这些陷阱。在这篇文章中，我们将详细介绍：&lt;/p&gt;</description>
      <pubDate>Wed, 17 Sep 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Building a Platform Abstraction for EKS Cluster Using Crossplane】使用交叉平面为EKS集群构建平台抽象</title>
      <link>https://dzone.com/articles/platform-abstraction-eks-cluster-crossplane</link>
      <description>【&lt;p&gt;Building on what we started earlier in an earlier article, here we’re going to learn how to extend our platform and create a platform abstraction for provisioning an AWS EKS cluster. EKS is AWS’s managed Kubernetes offering.&lt;/p&gt;&#xA;&lt;h2&gt;Quick Refresher&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/build-platform-abstraction-for-aws-netw&#34;&gt;Crossplane&lt;/a&gt; is a Kubernetes CRD-based add-on that abstracts cloud implementations and lets us manage Infrastructure as code.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;构建了我们早些时候在一篇文章中开始的内容，在这里我们将学习如何扩展平台并创建一个平台抽象来提供AWS EKS群集。 EKS是AWS的托管Kubernetes产品。&lt;/p&gt;&#xA;&lt;H2&gt;快速刷新&lt;/h2&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/articles/build-platform-abstraction-for-aws-netw”&gt; crossplane &lt;/a&gt;是一个基于kubernetes crd的附加组件，可以抽象云实现，并让我们让我们管理基础结构为代码。 &lt;/p&gt;</description>
      <pubDate>Wed, 17 Sep 2025 18:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>