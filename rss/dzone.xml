<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【The Full-Stack Developer&#39;s Blind Spot: Why Data Cleansing Shouldn&#39;t Be an Afterthought】全栈开发人员的盲点：为什么数据清理不应该是事后才想到的</title>
      <link>https://dzone.com/articles/full-stack-developer-blind-spot-data-cleansing</link>
      <description>【&lt;p&gt;My development team lead was three weeks into building a slick React dashboard for a client when everything fell apart. The app looked great in demos with test data. We were ready to connect it to our production database.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Then all hell broke loose.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;我的开发团队负责人在一切崩溃时为客户建造光滑的反应仪表板三个星期。该应用在演示中看起来很棒，并带有测试数据。我们准备将其连接到我们的生产数据库。 &lt;/p&gt;&#xA;&lt;p&gt;然后，所有的地狱都松开了。 &lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Using Python Libraries in Java】在Java中使用Python库</title>
      <link>https://dzone.com/articles/using-python-libraries-in-java</link>
      <description>【&lt;h2&gt;Advantages and Disadvantages of Python and Java&lt;/h2&gt;&#xA;&lt;p&gt;Java and Python are among the most widely used languages in the world (see Figure 1 below).&lt;/p&gt;&#xA;&lt;figcaption class=&#34;fr-inner&#34; contenteditable=&#34;true&#34;&gt;&#xA; &lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;Figure 1: Overview of programming languages from statista.com&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&#xA;&lt;/figcaption&gt;&#xA;&lt;figcaption class=&#34;fr-inner&#34; contenteditable=&#34;true&#34;&gt;&#xA; &lt;br&gt;&#xA;&lt;/figcaption&gt;&#xA;&lt;p&gt;Both languages have their strengths and weaknesses and are popular in different fields. Unlike other articles, such as those from &lt;a href=&#34;https://dzone.com/articles/python-vs-java-duck-typing-parsing-on-whitespace-a&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&amp;nbsp;Tom Radcliffe&amp;nbsp;&lt;/a&gt;which analyzes which language is technically better implemented, this article focuses on presenting practical use cases with explicit examples. Let us check the following table that provides a brief overview, of which language is best suited for which field (✅ = advantage, and ❌ = disadvantage).&amp;nbsp;&lt;/p&gt;】&lt;h2&gt; Python和Java的优点和缺点&lt;/h2&gt;&#xA;&lt;p&gt; Java和Python是世界上使用最广泛的语言之一（请参见下面的图1）。&lt;/p&gt;&#xA;&lt;figcaption class =“ fr-inner” contenteaditable =“ true”&gt;&#xA; &lt;strong&gt; &lt;strong&gt; &lt;strong&gt; &lt;strong&gt;图1：statista.com的编程语言概述&lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/strong&gt;&#xA;&lt;/figcaption&gt;&#xA;&lt;figcaption class =“ fr-inner” contenteaditable =“ true”&gt;&#xA; &lt;br&gt;&#xA;&lt;/figcaption&gt;&#xA;&lt;p&gt;两种语言都有其优点和劣势，并且在不同领域都很受欢迎。 Unlike other articles, such as those from &lt;a href=&#34;https://dzone.com/articles/python-vs-java-duck-typing-parsing-on-whitespace-a&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt; Tom Radcliffe &lt;/a&gt;which analyzes which language is technically better implemented, this article focuses on presenting practical use cases with明确的例子。让我们检查下表提供简要概述，哪种语言最适合哪种字段（✅=优势，❌=不利）。 &lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2025 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Building Resilient Networks: Limiting the Risk and Scope of Cyber Attacks】建筑弹性网络：限制网络攻击的风险和范围</title>
      <link>https://dzone.com/articles/building-resilient-networks-limiting-the-risk-and</link>
      <description>【&lt;p&gt;In the current era of nearly ubiquitous computing, security threats are growing, especially for large organizations that have to maintain complex networks and safeguard sensitive data. While this complexity has also led to the proliferation of a wide range of tools available to organizations to boost network security, a foundational strategy still remains one of the most effective ways to protect organizational networks: that of network segmentation. However, network segmentation as a tool has stayed far from stagnant, with recent developments and innovations turning it into a more complex and sometimes misunderstood topic. In this article, we will explore what network segmentation is, why it&#39;s important, and how it can be applied to optimize network performance and security.&amp;nbsp;&lt;/p&gt;&#xA;&lt;figcaption class=&#34;fr-inner&#34; contenteditable=&#34;true&#34;&gt;&#xA; &lt;p style=&#34;text-align: center;&#34;&gt;&lt;em&gt;Figure 1.&amp;nbsp;&lt;/em&gt;&lt;em&gt;Network segmentation, a conceptual diagram&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;在当前几乎普遍存在的计算时代，安全威胁正在增长，尤其是对于必须维护复杂网络和保护敏感数据的大型组织。尽管这种复杂性也导致组织可用的广泛工具扩散，以提高网络安全性，但基础策略仍然仍然是保护组织网络的最有效方法之一：网络细分。但是，网络细分作为一种工具远没有停滞，最近的发展和创新将其变成了一个更复杂的话题，有时甚至被误解了。在本文中，我们将探讨什么是网络细分，为什么重要的原因以及如何应用它来优化网络性能和安全性。 &lt;/p&gt;&#xA;&lt;figcaption class =“ fr-inner” contenteaditable =“ true”&gt;&#xA; &lt;p style =“ text-align：中心;”&gt; &lt;em&gt;图1. &lt;/em&gt; &lt;em&gt;网络分割，概念图&lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2025 13:00:01 +0000</pubDate>
    </item>
    <item>
      <title>【Secure by Design: Modernizing Authentication With Centralized Access and Adaptive Signals】设计：通过集中式访问和自适应信号进行现代化身份验证</title>
      <link>https://dzone.com/articles/centralized-authentication-access</link>
      <description>【&lt;h2&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Managing identity and access management (IAM) for large-scale enterprises is a complex challenge, particularly when dealing with legacy systems that cannot be transitioned from overnight to modern authentication. Traditional migration often spans years, leaving enterprises burdened with technical debts and inconsistent authentication systems. This study introduces a scalable architecture that accelerates the migration process, enabling thousands of legacy applications to transition to modern authentication.&lt;/p&gt;&#xA;&lt;p&gt;The challenge becomes even more intricate when organizations rely on a combination of internal and third-party platforms. The proposed solution simplifies and centralizes authentication processes, making it adaptable to any &lt;a href=&#34;https://dzone.com/articles/authenticate-with-openid-connect-and-apache-apisix&#34;&gt;OpenID Connect (OIDC)&lt;/a&gt; provider while seamlessly integrating with internal engineering systems. By addressing these complexities, this architecture enhances the security, eliminates technical debts, and ensures operational scalability.&lt;/p&gt;】&lt;h2&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;管理大规模企业的身份和访问管理（IAM）是一个复杂的挑战，尤其是在处理无法从一夜之间过渡到现代身份验证的旧系统时。传统移民通常会跨越数年，这使企业承受着技术债务和不一致的身份验证系统。这项研究介绍了一种可扩展的体系结构，该体系结构加速了迁移过程，使成千上万的旧应用程序可以过渡到现代身份验证。&lt;/p&gt;&#xA;&lt;p&gt;当组织依靠内部和第三方平台的组合时，挑战就变得更加复杂。所提出的解决方案简化并集中了身份验证过程，使其适应任何&lt;a href =“ https://dzone.com/articles/authenticate-with-with-popenid-connect-connect-connect-and-apache-apache-apisix”&gt; openID connect（oidc）&lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt;在内部设备上集成了内部设备。通过解决这些复杂性，该体系结构增强了安全性，消除了技术债务并确保运营可扩展性。&lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Debugging With Confidence in the Age of Observability-First Systems】对可观察性优先系统充满信心地调试</title>
      <link>https://dzone.com/articles/debugging-observability-first-systems</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Enterprises are embracing cloud-native architectures in today’s era. The boundaries between development, testing and production environments are dissolving at a rapid pace. Organizations strive to release software at an accelerated pace due to market demands. The conventional QA mindset of bug prevention before they go to production is evolving into a more proactive approach. This shift brings in the need for observability to converge and empower engineering teams to perform debugging in production confidently. Let’s look at how test automation strategies complement observability and how they can empower teams to debug smarter, efficiently and quicker with fewer sleepless nights.&lt;/p&gt;&#xA;&lt;h3 dir=&#34;ltr&#34;&gt;The Rise of Observability-First Engineering&lt;/h3&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Today’s engineering landscape is complex with the rise of distributed ecosystems and cloud native micro-service architectures. In such environments, conventional log validations and reactive monitoring approaches are no longer sufficient. Observability - measuring systems state based on the external performance has become critical.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;企业在当今时代拥抱云原始建筑。开发，测试和生产环境之间的界限正在快速溶解。由于市场需求，组织努力以加速的速度发布软件。在虫子进行生产之前，常规的质量检查心态正在发展为一种更加主动的方法。这种转变使人们有必要可观察性融合并授权工程团队自信地进行调试。让我们看一下测试自动化策略如何补充可观察性，以及如何使团队更智能地调试，更有效，更快地使用不眠之夜更快。&lt;/p&gt;&#xA;&lt;h3 dir =“ ltr”&gt;可观察性 - 优先工程的兴起&lt;/h3&gt;&#xA;&lt;p dir =“ ltr”&gt;当今的工程领域很复杂，分布式生态系统和云本机微服务架构的兴起。在这样的环境中，常规日志验证和反应性监视方法不再足够。可观察性 - 基于外部性能的测量系统状态已变得至关重要。 &lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Endpoint Security Controls: Designing a Secure Endpoint Architecture, Part 2】端点安全控制：设计安全端点体系结构，第2部分</title>
      <link>https://dzone.com/articles/endpoint-security-controls-part-two</link>
      <description>【&lt;p data-end=&#34;838&#34; data-start=&#34;0&#34;&gt;As we understood the foundational principles for designing and reviewing endpoint security controls in &lt;a href=&#34;https://dzone.com/articles/endpoint-security-controls&#34;&gt;Part 1&lt;/a&gt;, we also covered key topics such as standardizing and enrolling approved devices and operating systems, enforcing strong authentication and centralized identity management, and validating trusted network access.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p data-end=&#34;838&#34; data-start=&#34;0&#34;&gt;We explored endpoint configuration hardening — including secure boot, BIOS/UEFI settings, app whitelisting, and drift monitoring — as well as privilege management &lt;a href=&#34;https://dzone.com/articles/what-is-roles-based-access-control-rbac&#34;&gt;using RBAC&lt;/a&gt; and &lt;a href=&#34;https://dzone.com/articles/just-in-time-jit-compilation-advantages-disadvanta&#34;&gt;Just-in-Time&lt;/a&gt; access. Additionally, we discussed patch and vulnerability management, malware protection through EDR, software installation controls, restrictions on removable media, secure local data storage practices, and enforcing encryption across devices and media — all supported by strong auditing, compliance, and user awareness measures.&lt;/p&gt;】&lt;p data-end =“ 838” data-start =“ 0”&gt;，因为我们理解了在&lt;a href =“ https：//dzone.com/articles/endpoint-security-controls”中设计和审查端点安全控制的基础原理，并验证受信任的网络访问。 &lt;/p&gt;&#xA;&lt;p data-end =“ 838” data-start =“ 0”&gt;我们探索了端点配置硬化 - 包括安全启动，BIOS/UEFI设置，应用程序WhiteListing和Drift Monoluting-以及特权管理&lt;​​ahref =“ href =“ https://dzone.com/articles/just-in time-jit-compilation-compilation-andvantages-disadvanta”&gt; Just-In-time &lt;/a&gt;访问。此外，我们讨论了补丁程序和漏洞管理，通过EDR进行恶意软件保护，软件安装控件，可移动媒体的限制，安全的本地数据存储实践以及跨设备和媒体的加密，所有这些都得到了强大的审核，合规性和用户的认识度量。&lt;/p&gt;。&lt;/p&gt;。&lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Accelerating Debugging in Integration Testing: An Efficient Search-Based Workflow for Impact Localization】在集成测试中加速调试：有效的基于搜索的工作流程用于影响本地化</title>
      <link>https://dzone.com/articles/accelerating-debugging-integration-testing</link>
      <description>【&lt;h2 dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;&lt;strong&gt;The Problem: Debugging at Scale&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;With frequent software releases, one of the challenges faced in software debugging is localizing potential impact-causing changes. However, testing every change one by one is impractical, especially when dealing with a large set of changes over time.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;Here I refer to a &lt;strong&gt;group of commits or changes as a &#34;build.&#34;&lt;/strong&gt; Each build has a number associated with it&lt;/p&gt;】&lt;h2 dir =“ ltr” style =“ text-align：left;”&gt; &lt;strong&gt;问题：比例调试&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p dir =“ ltr” style =“ text-align：left;”&gt;经常发行的软件，软件调试中面临的挑战之一是本地化潜在的引起影响的变化。但是，对每一个更改进行测试是不切实际的，尤其是在处理一系列随时间变化时。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr” style =“ text-align：left;”&gt;在这里，我将&lt;strong&gt;的提交或更改为“构建”。&lt;/strong&gt;每个构建都有与之相关的数字&lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Infrastructure as Code (IaC) Beyond the Basics】基础架构以外的基础架构（IAC）</title>
      <link>https://dzone.com/articles/infrastructure-as-code-iac-beyond-the-basics</link>
      <description>【&lt;p&gt;Infrastructure as Code, or IaC, is now an inalienable part of the majority of modern cloud-native projects. Previously, generation of scripts for configuration and using your environments as a moving target has been tiresome. Then came advanced tooling with even stronger assurance for a standardized, stable, and scalable setup.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Nevertheless, most teams are still at the ‘hello world’ stage of IaC, with little understanding of how to level up and manage, organize, and govern it as the work progresses. This article aims to discuss how to maximize the use of IaC — focusing on the organization of modules, versioning, and policy.&lt;/p&gt;】&lt;p&gt;基础架构作为代码（或IAC）现在已成为大多数现代云本地项目的不可剥夺的一部分。以前，生成用于配置和使用环境作为移动目标的脚本很累人。然后，进行了高级工具，并为标准化，稳定和可扩展的设置提供了更强的保证。 &lt;/p&gt;&#xA;&lt;p&gt;尽管如此，大多数团队仍处于IAC的“ Hello World”阶段，几乎没有了解如何随着工作的进展，如何升级和管理，组织和管理它。本文旨在讨论如何最大化IAC的使用 - 专注于模块，版本管理和策略的组织。&lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Unit Testing Large Codebases: Principles, Practices, and C++ Examples】单位测试大型代码库：原理，实践和C ++示例</title>
      <link>https://dzone.com/articles/unit-testing-codebases-principles-practices</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Unit tests are often overlooked in the software development process but there are a lot of nice side effects of writing unit tests. After writing production software code for more than a decade, which has served billions of users for planet scale applications, I can confidently say that unit tests hold a critical place in software development lifecycle.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Despite the importance of unit tests, many engineers often overlook them due to timeline constraints or their over reliance on manual testing. There is also a misconception that unit tests slow down software development which is not necessarily true. As a matter of fact, &lt;a href=&#34;https://link.springer.com/chapter/10.1007/978-3-540-75381-0_18#citeas&#34;&gt;study&lt;/a&gt; reveals that test driven development (TDD) may have a positive impact on software development productivity. In the long run, unit tests make iterating on code easier and faster.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;单元测试在软件开发过程中经常被忽略，但是编写单元测试的副作用很多。在编写了十多年的生产软件代码之后，已经为数十亿用户提供了用于行星规模应用的用户，我可以自信地说，单位测试在软件开发生命周期中占有重要地位。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;尽管单位测试很重要，但由于时间轴限制或过度依赖手动测试，许多工程师经常忽略它们。还有一个误解，即单位测试会减慢软件开发的速度，这不一定是正确的。事实上，&lt;a href =“ https://link.springer.com/chapter/10.1007/978-3-540-75381-75381-0_18#citeas”&gt;研究&lt;/a&gt; &lt;/a&gt; &lt;/a&gt;显示，测试驱动的开发（TDD）可能对软件开发产生积极影响。从长远来看，单元测试使迭代代码更加容易，更快。&lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Data Quality: A Novel Perspective for 2025】数据质量：2025年的新颖观点</title>
      <link>https://dzone.com/articles/data-quality-a-novel-perspective-for-2025</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Data quality is no longer a back-office function; it has become a strategic imperative for organizations leveraging data to drive decision-making, analytics, and AI. As data volumes grow exponentially and applications become more sophisticated, ensuring high-quality data is critical for operational success. This article explores novel approaches to data quality in 2025, focusing on emerging trends, techniques, and tools that redefine the landscape.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Data Quality as a Strategic Asset&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Traditionally, data quality was seen as a compliance-driven task aimed at cleaning up datasets for reporting purposes. In 2025, this perspective has shifted dramatically. Organizations now treat data quality as a strategic asset that directly impacts business outcomes. High-quality data fuels reliable AI models, accelerates decision-making, and enhances customer experiences.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;数据质量不再是后台功能；对于利用数据来推动决策，分析和AI的组织，这已成为战略当务之急。随着数据量呈指数增长并变得更加复杂，确保高质量数据对于运营成功至关重要。本文探讨了2025年数据质量的新颖方法，重点是重新定义景观的新兴趋势，技术和工具。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt;作为战略资产的数据质量&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;传统上，数据质量被视为合规驱动的任务，旨在清理数据集以进行报告。在2025年，这种观点发生了巨大变化。现在，组织将数据质量视为直接影响业务成果的战略资产。高质量的数据为可靠的AI模型提供了可靠的模型，加速了决策并增强了客户体验。&lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2025 14:00:03 +0000</pubDate>
    </item>
  </channel>
</rss>