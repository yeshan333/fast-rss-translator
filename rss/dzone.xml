<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Memory Management in Couchbase’s Query Service】Couchbase的查询服务中的内存管理</title>
      <link>https://dzone.com/articles/memory-management-in-couchbases-query-service</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In Couchbase, memory management in the Query Service is key to keeping the service efficient and responsive, especially as the service handles an increasing number of queries simultaneously. Without proper memory management, things can go awry — greedy queries can hog memory, and the combined memory usage of multiple concurrent queries can overwhelm the service, leading to degraded performance.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Fortunately, the Query Service has several features that allow users to manage the memory usage of queries and the overall service.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;在Couchbase中，查询服务中的内存管理是保持服务有效和响应迅速的关键，尤其是当服务同时处理越来越多的查询时。如果没有适当的内存管理，情况可能会出现问题 - 贪婪的查询可能会猪内存，并且多个并发查询的组合内存使用可能会淹没服务，从而导致性能退化。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;幸运的是，查询服务具有多个功能，允许用户管理查询的内存使用和整体服务。&lt;/p&gt;</description>
      <pubDate>Wed, 19 Mar 2025 22:45:00 +0000</pubDate>
    </item>
    <item>
      <title>【AI-Driven Kubernetes Troubleshooting With DeepSeek and k8sgpt】AI驱动的Kubernetes与DeepSeek和K8SGPT进行故障排除</title>
      <link>https://dzone.com/articles/ai-driven-kubernetes-troubleshooting-deepseek-k8sgpt</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Kubernetes Site Reliability Engineers (SREs) frequently encounter complex scenarios demanding swift and effective troubleshooting to maintain the stability and reliability of clusters. Traditional debugging methods, including manual inspection of logs, event streams, configurations, and system metrics, can be painstakingly slow and prone to human error, particularly under pressure.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;This manual approach often leads to extended downtimes, delayed issue resolution, and increased operational overhead, significantly impacting both the user experience and organizational productivity.&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt; kubernetes站点可靠性工程师（SRES）经常遇到复杂的场景，要求快速有效的故障排除以保持簇的稳定性和可靠性。传统的调试方法，包括对日志，事件流，配置和系统指标的手动检查，可能会慢慢慢，容易出现人为错误，尤其是在压力下。 &lt;/p&gt;&#xA;&lt;p data-pm-slice =“ 1 1 []&gt;这种手动方法通常会导致较长的下降，延迟的发行问题和增加的操作开销，从而极大地影响了用户体验和组织生产力。&lt;/p&gt;</description>
      <pubDate>Wed, 19 Mar 2025 12:00:11 +0000</pubDate>
    </item>
    <item>
      <title>【Building an Agentic RAG System from Scratch】从头开始构建代理抹布系统</title>
      <link>https://dzone.com/articles/agentic-rag-system-from-scratch</link>
      <description>【&lt;p&gt;In this post, we’ll explore the concept of Agentic RAG, its architecture, and why this powerful combination is reshaping the future of AI systems. Plus, we’ll walk through implementing a basic version of an Agentic RAG system from scratch!&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;What Is RAG and Agentic RAG?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;To start, let&#39;s clarify what RAG is. &lt;a href=&#34;https://dzone.com/articles/introduction-to-retrieval-augmented-generation-rag&#34;&gt;Retrieval-augmented generation&lt;/a&gt;&lt;strong&gt;&amp;nbsp;(&lt;/strong&gt;RAG&lt;strong&gt;)&lt;/strong&gt; is a technique that enhances LLMs by connecting them to external data sources, enabling more accurate and reliable responses. With RAG, the system first retrieves relevant information from a database and then uses it to generate an answer.&lt;/p&gt;】&lt;p&gt;在这篇文章中，我们将探讨代理抹布，其体系结构的概念，以及为什么这种强大的组合正在重塑AI系统的未来。另外，我们将逐步浏览从头开始实现代理抹布系统的基本版本！&lt;/p&gt;&#xA;&lt;h2&gt; &lt;strong&gt;什么是抹布和代理抹布？&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt;开始，让我们澄清什么是抹布。 &lt;a href =“ https://dzone.com/articles/introduction-tocult-to-to-to--retrieval-aig--gener-generation-rag”&gt; retiereval-augmented Generatiged &lt;/a&gt; &lt;gront&gt;（&lt;/strong&gt; rag &lt;/strong&gt;）是一种通过将它们连接到外部数据来源的技术，可以增强它们，并获得更高的可靠性。使用RAG，系统首先从数据库中检索相关信息，然后使用它来生成答案。&lt;/p&gt;</description>
      <pubDate>Wed, 19 Mar 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Stream Gatherers: Intro to Intermediate Operations Modeler】溪流收集者：中间操作建模介绍者</title>
      <link>https://dzone.com/articles/stream-gatherers-intermediate-operations-modeler</link>
      <description>【&lt;p name=&#34;879c&#34;&gt;Java is a programming language with many language features, specifications, and APIs. Even among experienced Java developers, being aware of all of these is quite rare. If a study were conducted, we might come across Java developers who have never worked with Threads, never used JPA, or never developed custom annotations. However, is there a Java developer who has worked with Java 8 or later but has never used the Stream API? I highly doubt it.&lt;/p&gt;&#xA;&lt;p name=&#34;0083&#34;&gt;Gatherers is a powerful extension of the Stream API that introduces support for customized intermediate operations. Initially introduced as a &lt;a href=&#34;https://dzone.com/articles/jdk-22-gatherer&#34;&gt;preview feature in JDK 22&lt;/a&gt;, it became a standard feature in JDK 24.&lt;/p&gt;】&lt;p name =“ 879c”&gt; Java是一种编程语言，具有许多语言功能，规格和API。即使在经验丰富的Java开发人员中，也很少了解所有这些。如果进行了研究，我们可能会遇到从未使用过线程，从未使用过JPA或从未开发自定义注释的Java开发人员。但是，是否有Java开发人员与Java 8或更高版本合作，但从未使用过流API？我非常怀疑。&lt;/p&gt;&#xA;&lt;p name =“ 0083”&gt;收集者是流API的强大扩展，它引入了对定制中间操作的支持。最初以a &lt;a href =“ https://dzone.com/articles/jdk-22-gatherer”&gt; jdk 22 &lt;/a&gt;中的预览功能引入，它成为JDK 24的标准功能。&lt;/p&gt;。</description>
      <pubDate>Wed, 19 Mar 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Designing and Maintaining Event-Driven Architectures】设计和维护事件驱动的体系结构</title>
      <link>https://dzone.com/articles/design-and-maintain-event-driven-architectures</link>
      <description>【&lt;p&gt;Event-driven architecture (EDA) gives your system the ability to receive and respond to changes in real time, making it easier to scale. Decoupling components is the core theme of EDA, which makes it flexible, allowing it to scale asynchronously based on events. This approach makes systems reactive, scalable, and resilient to failures. Designing and maintaining, like any other large-scale framework, requires deep thinking and constant monitoring.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Understanding EDA&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;At its core, EDA is &lt;a href=&#34;https://dzone.com/articles/building-an-event-driven-architecture-using-kafka&#34;&gt;primarily about reacting to events&lt;/a&gt;. A moment that signals a significant change, such as a user signing up or a sensor detecting temperature changes. Events are generated by producers, routed by intermediaries like message brokers or event buses, and consumed by services that act on them. This design keeps the components independent of each other, making the system easier to scale and maintain.&lt;/p&gt;】&lt;p&gt;事件驱动的体系结构（EDA）使您的系统能够实时接收和响应更改，从而更易于扩展。去耦组件是EDA的核心主题，它使其灵活，可以根据事件进行异步扩展。这种方法使系统具有反应性，可扩展性和弹性的故障。与任何其他大型框架一样，设计和维护需要深入思考和持续的监控。&lt;/p&gt;&#xA;&lt;H2&gt; &lt;strong&gt;了解EDA &lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt;在其核心上，eDA是&lt;a href =“ https://dzone.com/articles/building-an-event-driven-driven-architecture-using-kafka”&gt;主要是关于对事件的反应&lt;/a&gt;。标志着重大变化的时刻，例如用户注册或传感器检测温度变化。事件是由生产者生成的，由消息经纪人或事件总线等中介机构进行路由，并由对其行动的服务消费。该设计使组件彼此独立，使系统易于扩展和维护。&lt;/p&gt;</description>
      <pubDate>Wed, 19 Mar 2025 14:45:00 +0000</pubDate>
    </item>
    <item>
      <title>【Unlocking Oracle 23 AI&#39;s JSON Relational Duality】解锁Oracle 23 AI的JSON关系双重性</title>
      <link>https://dzone.com/articles/unlocking-oracle-23c-ais-json-relational-duality</link>
      <description>【&lt;p&gt;Oracle 23ai&#39;s &lt;strong&gt;JSON Relational Duality&amp;nbsp;&lt;/strong&gt;bridges the gap between JSON and relational data, which allows seamless querying and updating of data in both formats. This feature allows developers to efficiently manage hybrid data models, simplify application workflows, and reduce data transformation overhead.&amp;nbsp;&lt;/p&gt;&#xA;&lt;div data-message-author-role=&#34;assistant&#34; data-message-id=&#34;50f99fab-4e0d-4c5e-8be5-cf5efbe0884b&#34; data-message-model-slug=&#34;gpt-4o&#34; dir=&#34;auto&#34;&gt;&#xA; &lt;p&gt;It also allows them to query and update data in &lt;a href=&#34;https://dzone.com/articles/introduction-to-json-with-java&#34;&gt;JSON&lt;/a&gt; and relational formats seamlessly, simplifying data handling for modern applications.&amp;nbsp;&lt;/p&gt;】&lt;p&gt; Oracle 23ai的&lt;strong&gt; JSON关系双重性&lt;/strong&gt;桥接JSON和关系数据之间的差距，该数据允许以两种格式的数据进行无缝查询和更新。此功能使开发人员可以有效地管理混合数据模型，简化应用程序工作流程并减少数据转换开销。 &lt;/p&gt;&#xA;&lt;div div data-message-author-role =“助手” data-message-id =“ 50F99FAB-4E0D-4C5E-8BE5-CF5EFBE0884B” data-message-model-slug =“ gpt-4o&#xA; &lt;p&gt;它还允许他们在&lt;a href =“ https://dzone.com/articles/introduction-to-json-with-java”&gt; json&gt; json &lt;/a&gt;中查询和更新数据。 &lt;/p&gt;</description>
      <pubDate>Wed, 19 Mar 2025 14:15:00 +0000</pubDate>
    </item>
    <item>
      <title>【AI-Powered Observability With OpenTelemetry and Prometheus】AI驱动的可观察性具有Opentelemetry和Prometheus</title>
      <link>https://dzone.com/articles/ai-powered-observability-opentelemetry-prometheus</link>
      <description>【&lt;p&gt;When it comes to customer satisfaction, providing excellent service isn’t optional anymore — it’s essential for success. With this, traditional monitoring tools are struggling to keep up as IT systems grow more complex with microservices, dynamic setups, and distributed networks.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;At the next level, the concept of observability is introduced, whereby people become aware of it as a solution. Besides, as AI technology advances and artificial intelligence is introduced, the public no longer sees observability merely as a measure of root cause analysis but also as an issue prediction, system optimization, and the overall keeping of the business the best.&lt;/p&gt;】&lt;p&gt;在客户满意度方面，提供优质的服务不再是可选的 - 这对于成功至关重要。这样，随着IT系统与微服务，动态设置和分布式网络变得越来越复杂，传统的监视工具正在努力跟上。 &lt;/p&gt;&#xA;&lt;p&gt;在下一个层面上，引入了可观察性的概念，人们将其视为解决方案。此外，随着AI技术的进步和人工智能的引入，公众不再仅将观察力视为衡量根本原因分析的量度，而是作为问题的预测，系统优化和业务的总体保留。&lt;/p&gt;&gt; &lt;/p&gt;。</description>
      <pubDate>Wed, 19 Mar 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Comparing DuckDB, Snowflake, and Databricks】比较DuckDB，Snowflake和Databricks</title>
      <link>https://dzone.com/articles/duckdb-vs-snowflake-vs-databricks</link>
      <description>【&lt;p&gt;The exponential growth of data in recent years has improved how businesses operate and make decisions. From small start-ups to large enterprises, organizations across industries are leveraging data to gain competitive advantages, optimize operations, and drive innovation. However, with this data surge comes the challenge of efficiently storing, processing, and retrieving vast amounts of information.&lt;/p&gt;&#xA;&lt;p&gt;While traditional solutions like SQLite and MySQL have their place, modern data platforms like DuckDB, Snowflake, and Databricks are reshaping the landscape of data processing.&lt;/p&gt;】&lt;p&gt;近年来数据的指数增长改善了企业的运作方式和决策。从小型初创企业到大型企业，各个行业的组织都利用数据来获得竞争优势，优化运营并推动创新。但是，随着这种数据激增，带来了有效存储，处理和检索大量信息的挑战。&lt;/p&gt;&#xA;&lt;p&gt;虽然SQLite和MySQL等传统解决方案有其位置，但如DuckDB，Snowflake和Databrick等现代数据平台正在重塑数据处理的景观。&lt;/p&gt;</description>
      <pubDate>Wed, 19 Mar 2025 11:00:12 +0000</pubDate>
    </item>
    <item>
      <title>【OpenAI vs Ollama Using LangChain&#39;s SQLDatabaseToolkit】使用Langchain的SQLDATABASETOOLKIT OPENAI vs OLLAMA</title>
      <link>https://dzone.com/articles/openai-vs-ollama-langchain-sqldatabasetoolkit</link>
      <description>【&lt;h2&gt;Disclaimer&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA; &lt;p&gt;The stock data used in this article is entirely fictitious. It is purely for demo purposes. Please do not use this data for making any financial decisions.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;In a &lt;a href=&#34;https://dzone.com/articles/how-to-build-local-llm-apps-with-ollama&#34; target=&#34;_blank&#34;&gt;previous article&lt;/a&gt;, we saw the benefits of using Ollama locally for a RAG application. In this article, we&#39;ll extend our evaluation of Ollama by testing natural language (NL) queries against a database system, using LangChain&#39;s &lt;code&gt;SQLDatabaseToolkit&lt;/code&gt;. SQL will serve as the baseline system for comparison as we explore the quality of results provided by OpenAI and Ollama.&lt;/p&gt;】&lt;h2&gt;免责声明&lt;/h2&gt;&#xA;&lt;BlockQuote&gt;&#xA; &lt;p&gt;本文中使用的库存数据完全是虚构的。它纯粹是出于演示目的。请不要使用这些数据来做出任何财务决策。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;在A &lt;a href =“ https://dzone.com/articles/how-to-build-local-local-local-llm-apps-with-olama-------------------------------------------在本文中，我们将使用Langchain的&lt;code&gt; sqldatabasetoolkit &lt;/code&gt;来测试针对数据库系统的自然语言（NL）查询来扩展对Ollama的评估。当我们探索Openai和Ollama提供的结果质量时，SQL将作为比较的基线系统。&lt;/p&gt;</description>
      <pubDate>Wed, 19 Mar 2025 15:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Serverless Sign-In Solution Based on Next.js on CloudFare】基于Next.js上的无服务器登录解决方案</title>
      <link>https://dzone.com/articles/serverless-sign-in-nextjs-cloudflare</link>
      <description>【&lt;p&gt;If you would like to run your own solution without any costs and get familiar with serverless architecture, I&#39;d encourage you to look at CloudFare.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;background-color: transparent;&#34;&gt;Recently, I tried to assemble all the pieces together to make&amp;nbsp;&lt;/span&gt;the Next.js&lt;span style=&#34;background-color: transparent;&#34;&gt;&amp;nbsp;application authorization work on&amp;nbsp;&lt;/span&gt;Cloudflare&lt;span style=&#34;background-color: transparent;&#34;&gt;&amp;nbsp;and faced a lot of issues.&lt;/span&gt; Provided examples on the official site and demos on other sources were working only partially. After some digging and combining the pieces together, it finally started working.&lt;/p&gt;】&lt;p&gt;如果您想不需要任何费用就可以运行自己的解决方案并熟悉无服务器体系结构，我鼓励您查看CloudFare。 &lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;background-color: transparent;&#34;&gt;Recently, I tried to assemble all the pieces together to make &lt;/span&gt;the Next.js&lt;span style=&#34;background-color: transparent;&#34;&gt; application authorization work on &lt;/span&gt;Cloudflare&lt;span style=&#34;background-color: transparent;&#34;&gt; and faced a lot of issues.&lt;/span&gt; Provided examples on the official site and demos on other sources were working only partially.挖掘并将碎片结合在一起后，它终于开始工作了。&lt;/p&gt;</description>
      <pubDate>Wed, 19 Mar 2025 22:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>