<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Optimizing Legacy Systems Through Advanced Scalable Architectures】通过先进的可扩展架构优化遗留系统</title>
      <link>https://dzone.com/articles/optimizing-legacy-systems-through-scalable-architectures</link>
      <description>【&lt;p&gt;There are a number of legacy systems being used in different industries. These range from government entities to the financial sector, healthcare, transportation, manufacturing, and more. &amp;nbsp; Many systems adopted in these industries were developed in the late 20th century and, therefore, face inherent limitations. The monolithic architectures and tightly coupled components they adopt are the prime reason for this.&lt;/p&gt;&#xA;&lt;p&gt;But that’s not the end of it, though. Previous-century development aside, some systems built using relatively more recent technologies also present several legacy issues. This is because of the rigid, stateful sessions and the management nature of these platforms.&lt;/p&gt;】&lt;p&gt;不同行业正在使用许多遗留系统。这些范围从政府实体到金融部门、医疗保健、运输、制造等。   这些行业采用的许多系统都是在 20 世纪末开发的，因此面临着固有的局限性。他们采用的整体架构和紧密耦合的组件是其主要原因。&lt;/p&gt;&#xA;&lt;p&gt;但这还不是结束。除了上世纪的发展之外，一些使用相对较新的技术构建的系统也存在一些遗留问题。这是因为这些平台具有严格的、有状态的会话和管理性质。&lt;/p&gt;</description>
      <pubDate>Tue, 17 Dec 2024 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Charge Vertical Scaling With the Latest Java GCs】使用最新的 Java GC 进行垂直扩展</title>
      <link>https://dzone.com/articles/charge-vertical-scaling-with-the-latest-java-gcs</link>
      <description>【&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;In the dynamic landscape of &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; ecosystem enhancements, one could miss an important progress that has been made in &lt;a href=&#34;https://dzone.com/articles/java-garbage-collection-3&#34;&gt;Java Garbage Collection (GC)&lt;/a&gt; in recent years. Meanwhile, the latest generations of GC bring far-reaching consequences for running Java applications. This article intends to highlight the significant effects brought to us by ZGC and Shenandoah.&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;Garbage Collection&amp;nbsp;&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/what-is-garbage-collection-log-thread-dump-heap-du&#34;&gt;Garbage Collection&lt;/a&gt; is a feature that distinguishes Java from many other programming languages. The GC mechanism exempts manual memory management from development routine via finding and removing objects no longer used by an application automatically.&amp;nbsp;&lt;/p&gt;】&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;在&lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt;生态系统增强的动态格局中，人们可能会错过 &lt;a href=&#34;https://dzone.com/articles/java-garbage-collection-3&#34;&gt;Java 垃圾收集 (GC)&lt;/a&gt; 近年来取得的一项重要进展。同时，最新一代的 GC 给运行 Java 应用程序带来了深远的影响。本文旨在重点介绍ZGC和Shenandoah给我们带来的重大影响。 &lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;垃圾收集&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/what-is-garbage-collection-log-thread-dump-heap-du &#34;&gt;垃圾收集&lt;/a&gt;是 Java 区别于许多其他编程语言的一项功能。 GC 机制通过自动查找和删除应用程序不再使用的对象，使手动内存管理免于开发例程。 &lt;/p&gt;</description>
      <pubDate>Tue, 17 Dec 2024 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to Optimize Edge Devices for AI Processing】如何优化边缘设备以进行人工智能处理</title>
      <link>https://dzone.com/articles/how-to-optimize-edge-devices-for-ai-processing</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/refcardz/edge-computing-2&#34;&gt;Edge computing&lt;/a&gt; allows data to be processed on devices rather than transferred to the cloud. Besides offering security-related benefits, this option can overcome the latency associated with moving information. As artificial intelligence (AI) has become more prominent in various industries, more people are interested in meeting edge AI computing goals by combining the two technologies for mutual benefits. Many are also exploring how to design for edge AI, making careful tweaks that result in the desired optimization. How can you follow their lead?&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Take an All-Encompassing Design Approach&amp;nbsp;&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Creating edge devices to process AI content requires evaluating all design aspects, from hardware and software to power sources. Many artificial intelligence processing tasks are already resource-intensive, so those who want to make AI-friendly edge devices must apply forward-thinking decision-making to overcome known challenges.&amp;nbsp;&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/refcardz/edge-computing-2&#34;&gt;边缘计算&lt;/a&gt;允许在设备上处理数据而不是传输到云端。除了提供与安全相关的好处外，此选项还可以克服与移动信息相关的延迟。随着人工智能 (AI) 在各个行业中的地位越来越突出，越来越多的人有兴趣通过结合两种技术以实现互利共赢来实现边缘 AI 计算目标。许多人还在探索如何针对边缘人工智能进行设计，进行仔细的调整以实现所需的优化。你如何跟随他们的领导？ &lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;采用全方位的设计方法&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;创建边缘设备来处理人工智能内容需要评估从硬件、软件到电源的所有设计方面。许多人工智能处理任务已经是资源密集型的，因此那些想要制造人工智能友好型边缘设备的人必须运用前瞻性决策来克服已知的挑战。 &lt;/p&gt;</description>
      <pubDate>Tue, 17 Dec 2024 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Using the Log Node in IBM App Connect Enterprise】使用 IBM App Connect Enterprise 中的日志节点</title>
      <link>https://dzone.com/articles/using-the-log-node-in-ibm-app-connect-enterprise</link>
      <description>【&lt;p&gt;In the world of IBM App Connect Enterprise (ACE), effective logging is crucial for monitoring and troubleshooting. With the introduction of the Log node, it&#39;s now easier than ever to log &lt;code&gt;ExceptionList&lt;/code&gt; inserts directly into the activity log, which can be viewed from the WebUI. The &lt;code&gt;Log&lt;/code&gt; node can be especially valuable, often replacing the &lt;code&gt;Trace&lt;/code&gt; node in various scenarios.&lt;/p&gt;&#xA;&lt;p&gt;This article contains two sections: the first will guide you through the process of using the &lt;code&gt;Log&lt;/code&gt; node to log these inserts, helping you streamline your debugging and monitoring processes. The second section explores some scenarios that provide &lt;code&gt;Log&lt;/code&gt; node hints and tips around default values.&lt;/p&gt;】&lt;p&gt;在 IBM App Connect Enterprise (ACE) 领域，有效的日志记录对于监控和故障排除至关重要。随着日志节点的引入，现在比以往更容易将 &lt;code&gt;ExceptionList&lt;/code&gt; 插入直接记录到活动日志中，可以从 WebUI 中查看该日志。 &lt;code&gt;Log&lt;/code&gt; 节点尤其有价值，通常在各种场景中取代 &lt;code&gt;Trace&lt;/code&gt; 节点。&lt;/p&gt;&#xA;&lt;p&gt;本文包含两个部分：第一部分将指导您完成使用&lt;code&gt;Log&lt;/code&gt; 节点记录这些插入的过程，帮助您简化调试和监视过程。第二部分探讨了一些提供 &lt;code&gt;Log&lt;/code&gt; 节点提示和默认值提示的场景。&lt;/p&gt;</description>
      <pubDate>Tue, 17 Dec 2024 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Deploying LLMs Securely With OWASP Top 10】使用 OWASP Top 10 安全地部署法学硕士</title>
      <link>https://dzone.com/articles/deploying-llms-securely-with-owasp-top-10</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Generative Artificial Intelligence (GenAI) adoption is picking up pace. According to &lt;a class=&#34;fr-strong&#34; href=&#34;https://www.mckinsey.com/capabilities/quantumblack/our-insights/the-state-of-ai&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;McKinsey&lt;/a&gt;, the rate of implementation has doubled compared to just ten months prior, with 65 percent of respondents saying their companies regularly use GenAI. The promise of disruptive impact to existing businesses — or delivering services into markets in new and more profitable ways — is driving much of this interest. Yet many adopters aren’t aware of the security risks at hand.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Earlier this year, the Open Worldwide Application Security Project (OWASP) released a &lt;a class=&#34;fr-strong&#34; href=&#34;https://owasp.org/www-project-top-10-for-large-language-model-applications/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Top 10 for Large Language Model (LLM) applications&lt;/a&gt;. Designed to provide hands-on guidance to software developers and security architects, the OWASP Top 10 guide lays out best practices for securely implementing GenAI applications that rely on LLMs. By explicitly naming the most critical vulnerabilities seen in LLMs thus far, prevention becomes a simpler task.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;生成人工智能 (GenAI) 的采用正在加快。根据 &lt;a class=&#34;fr-strong&#34; href=&#34;https://www.mckinsey.com/capability/quantumblack/our-insights/the-state-of-ai&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank &#34;&gt;麦肯锡&lt;/a&gt;表示，与十个月前相比，实施率翻了一番，65% 的受访者表示他们的公司经常使用 GenAI。对现有业务产生颠覆性影响的承诺——或者以新的、更有利可图的方式向市场提供服务——在很大程度上推动了这种兴趣。然而许多采用者并没有意识到眼前的安全风险。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;今年早些时候，开放全球应用程序安全项目 (OWASP) 发布了&lt;a class=&#34;fr-strong&#34; href=&#34;https://owasp.org/www-project-top-10 -for-large-language-model-applications/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;大型语言模型 (LLM) 应用程序的前 10 名&lt;/a&gt;。 OWASP Top 10 指南旨在为软件开发人员和安全架构师提供实践指导，列出了安全实施依赖于法学硕士的 GenAI 应用程序的最佳实践。通过明确命名迄今为止在法学硕士中发现的最关键的漏洞，预防变得更加简单。&lt;/p&gt;</description>
      <pubDate>Tue, 17 Dec 2024 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Observability 2.0: The Best Thing Since Sliced Bread】可观察性 2.0：自切片面包以来最好的事情</title>
      <link>https://dzone.com/articles/observability-2point0-the-best-thing-since-sliced-bread</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Traditional monitoring is not enough. We need developer-centric solutions that only Observability 2.0 can give us. Read on to see why.&lt;/p&gt;&#xA;&lt;h2&gt;Beyond Traditional Monitoring&lt;/h2&gt;&#xA;&lt;p&gt;In today&#39;s software development landscape, creating cutting-edge applications requires an acute focus on the developers who craft these digital experiences from start to finish; henceforth, contemporary tools are not just expected but demanded to be inherently developer-centric-offering environments that promote efficiency and creativity. Observability 2.0 goes beyond traditional monitoring paradigms by embedding a continuous feedback mechanism directly into the development lifecycle itself rather than as an afterthought or separate process, demanding transparency across every phase of software production to maintain system health at all times while ensuring that code quality and application performance adhere strictly to enterprise standards.&lt;/p&gt;】&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;传统监控是不够的。我们需要以开发人员为中心的解决方案，只有 Observability 2.0 才能为我们提供。请继续阅读以了解原因。&lt;/p&gt;&#xA;&lt;h2&gt;超越传统监控&lt;/h2&gt;&#xA;&lt;p&gt;在当今的软件开发环境中，创建尖端应用程序需要高度关注从头到尾打造这些数字体验的开发人员；今后，现代工具不仅被期望而且被要求本质上是以开发人员为中心的提供环境，以提高效率和创造力。 Observability 2.0 超越了传统的监控范式，将持续反馈机制直接嵌入到开发生命周期本身，而不是作为事后的想法或单独的过程，要求软件生产的每个阶段都保持透明，以始终保持系统健康，同时确保代码质量和应用程序性能严格遵循企业标准。&lt;/p&gt;</description>
      <pubDate>Tue, 17 Dec 2024 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why GitOps Is Gaining Popularity in DevOps: A Deep Dive Into the Future of Infrastructure Management】为什么 GitOps 在 DevOps 中越来越受欢迎：深入探讨基础设施管理的未来</title>
      <link>https://dzone.com/articles/why-gitops-is-gaining-popularity</link>
      <description>【&lt;h2&gt;&lt;strong&gt;What’s GitOps All About?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/refcardz/the-essentials-of-gitops&#34;&gt;GitOps&lt;/a&gt; is a way to manage infrastructure and applications through Git, using it as a single source of truth. In simple terms, you treat infrastructure configurations the same way you treat code: everything is defined, versioned, and stored in Git. By using Git’s familiar workflows (pull requests, commits, reviews), you make infrastructure changes with full visibility and control.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;The magic of GitOps lies in automation. With &lt;a href=&#34;https://dzone.com/articles/guide-to-selecting-the-right-gitops-tool-argo-cd-o&#34;&gt;tools like Flux or ArgoCD&lt;/a&gt;, every change committed to Git triggers updates to the live environment. These tools constantly monitor for any drift between what’s in Git and what’s live, and they reconcile the differences automatically, keeping your systems aligned with your intended setup.&lt;/p&gt;】&lt;h2&gt;&lt;strong&gt;GitOps 是什么？&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/refcardz/the-essentials-of-gitops&#34;&gt;GitOps&lt;/a&gt; 是一种通过 Git 管理基础设施和应用程序的方法，将其用作单一来源真相。简单来说，您对待基础设施配置的方式与对待代码的方式相同：一切都在 Git 中定义、版本化和存储。通过使用 Git 熟悉的工作流程（拉取请求、提交、审查），您可以在完全可见性和控制的情况下进行基础架构更改。 &lt;/p&gt;&#xA;&lt;p&gt;GitOps 的魔力在于自动化。借助&lt;a href=&#34;https://dzone.com/articles/guide-to-selecting-the-right-gitops-tool-argo-cd-o&#34;&gt;Flux 或 ArgoCD&lt;/a&gt; 等工具，提交的每项更改Git 触发对实时环境的更新。这些工具不断监控 Git 中的内容和实时内容之间的任何偏差，并自动协调差异，使您的系统与您的预期设置保持一致。&lt;/p&gt;</description>
      <pubDate>Tue, 17 Dec 2024 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Back-End Design Patterns for Scalable and Maintainable Systems】掌握可扩展和可维护系统的后端设计模式</title>
      <link>https://dzone.com/articles/key-back-end-design-patterns-for-scalability-and-maintenance</link>
      <description>【&lt;p&gt;&lt;span data-teams=&#34;true&#34;&gt;Back-end development can feel like you’re constantly putting out fires — one messy query here, a crashing API call there. But it doesn’t have to be that way! By using well-established design patterns, you can make your codebase more organized, scalable, and easier to maintain. Plus, it’ll keep your boss impressed and your weekends stress-free.&lt;br&gt;&lt;br&gt;&#xA;  Here are some essential back-end patterns every developer should know, with examples in Java to get you started.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2&gt;&lt;span data-teams=&#34;true&#34;&gt;&lt;strong&gt;1. Repository Pattern: Tidy Up Your Data Layer&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;span data-teams=&#34;true&#34;&gt;&lt;span data-teams=&#34;true&#34;&gt;If your application’s data access logic is scattered across your codebase, debugging becomes a nightmare. The&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/differences-between-repository-and-dao&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;span data-teams=&#34;true&#34;&gt;&lt;span data-teams=&#34;true&#34;&gt;Repository Pattern&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span data-teams=&#34;true&#34;&gt;&lt;span data-teams=&#34;true&#34;&gt;&amp;nbsp;organizes this mess by acting as an intermediary between the business logic and the database. It abstracts data access so you can switch databases or frameworks without rewriting your app logic.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;】&lt;p&gt;&lt;span data-teams=&#34;true&#34;&gt;后端开发感觉就像是在不断地救火——这里有一个混乱的查询，那里有一个崩溃的 API 调用。但事实并非一定如此！通过使用完善的设计模式，您可以使代码库更有组织性、可扩展性并且更易于维护。此外，它还能让您的老板留下深刻的印象，让您的周末轻松无忧。&lt;br&gt;&lt;br&gt;&#xA;  以下是每个开发人员都应该了解的一些基本后端模式，并提供了 Java 示例来帮助您入门。&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2&gt;&lt;span data-teams=&#34;true&#34;&gt;&lt;strong&gt;1。存储库模式：整理数据层&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;span data-teams=&#34;true&#34;&gt;&lt;span data-teams=&#34;true&#34;&gt;如果应用程序的数据访问逻辑分散在代码库中，那么调试将成为一场噩梦。 &lt;/span&gt;&lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/differences- Between-repository-and-dao&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;span data- team=&#34;true&#34;&gt;&lt;span data-teams=&#34;true&#34;&gt;存储库模式&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span data-teams=&#34;true&#34;&gt;&lt;span data-teams=&#34;true&#34;&gt;组织这个通过充当业务逻辑和数据库之间的中介来搞乱。它抽象了数据访问，因此您可以切换数据库或框架，而无需重写应用逻辑。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 17 Dec 2024 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Managing AWS Managed Microsoft Active Directory Objects With AWS Lambda Functions】使用 AWS Lambda 函数管理 AWS 托管 Microsoft Active Directory 对象</title>
      <link>https://dzone.com/articles/managing-aws-managed-microsoft-active-directory-objects</link>
      <description>【&lt;p&gt;AWS &lt;a href=&#34;https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Managed Microsoft Active Directory&lt;/a&gt; provides the ability to run directory-aware workloads in the &lt;a href=&#34;https://dzone.com/articles/aws-basics&#34;&gt;AWS Cloud&lt;/a&gt;, including Microsoft SharePoint and custom &lt;a href=&#34;https://dzone.com/refcardz/coredotnet&#34;&gt;.NET&lt;/a&gt; and SQL Server-based applications. AWS Managed Microsoft Active Directory also provides the ability to access AWS resources through Identities stored in on-premise or self-managed Active Directory through Trusts.&lt;/p&gt;&#xA;&lt;p&gt;AWS &lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/welcome.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Lambda&lt;/a&gt; runs code on a high-availability compute infrastructure and performs all of the administration of the compute resources, including server and operating system maintenance, capacity provisioning, automatic scaling, and logging.&lt;/p&gt;】&lt;p&gt;AWS &lt;a href=&#34;https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;托管 Microsoft Active Directory&lt; /a&gt; 提供在 &lt;a href=&#34;https://dzone.com/articles/aws-basics&#34;&gt;AWS 云&lt;/a&gt; 中运行目录感知工作负载的能力，包括 Microsoft SharePoint 和自定义 &lt;a href=&#34;https://dzone.com/refcardz/coredotnet&#34;&gt;.NET&lt;/a&gt; 和基于 SQL Server 的应用程序。 AWS Managed Microsoft Active Directory 还提供通过本地存储的身份或通过信任自行管理的 Active Directory 访问 AWS 资源的能力。&lt;/p&gt;&#xA;&lt;p&gt;AWS &lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/welcome.html&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Lambda&lt;/a&gt; 运行代码在高可用性计算基础设施上执行计算资源的所有管理，包括服务器和操作系统维护、容量配置、自动扩展和日志记录。&lt;/p&gt;</description>
      <pubDate>Tue, 17 Dec 2024 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Implementing OneLake With Medallion Architecture in Microsoft Fabric】在 Microsoft Fabric 中使用 Medallion 架构实现 OneLake</title>
      <link>https://dzone.com/articles/implementing-onelake-with-medallion-architecture</link>
      <description>【&lt;p&gt;OneLake in &lt;a href=&#34;https://dzone.com/articles/empowering-insights-unleashing-the-potential-of-mi&#34;&gt;Microsoft Fabric&lt;/a&gt; aims to provide an enterprise with a consolidated analytical approach by developing its data and tools into one logical base. OneLake, which is automatically available across all Microsoft Fabric tenants, enables users to manage large volumes of data without the need to build separate databases or overlays, encouraging data usage across the dimensions of the analytical ecosystem.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Overview of Medallion Architecture&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Medallion Architecture, a systematic data management approach, offers a three-tier structure for data processing: Bronze, Silver, and Gold.&lt;/p&gt;】&lt;p&gt;Microsoft Fabric 中的 OneLake 旨在为企业提供综合分析一种方法，将其数据和工具开发成一个逻辑基础。 OneLake 可在所有 Microsoft Fabric 租户中自动使用，使用户能够管理大量数据，而无需构建单独的数据库或覆盖层，从而鼓励跨分析生态系统各个维度的数据使用。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;奖章架构概述&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Medallion 架构是一种系统数据管理方法，提供三层数据处理结构：铜牌、银牌和金牌。&lt;/p&gt;</description>
      <pubDate>Tue, 17 Dec 2024 16:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>