<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Memory Leak Due to Time-Taking finalize() Method】由于时间限制最终确定（）方法导致内存泄漏</title>
      <link>https://dzone.com/articles/memory-leak-due-to-time-taking-finalize-method</link>
      <description>【&lt;p&gt;All objects in Java implicitly inherit from &lt;code&gt;java.lang.Object&lt;/code&gt;. This class contains multiple methods, which can be overridden in the child class.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;One such overridable method is &lt;code&gt;finalize()&lt;/code&gt;. Before objects get garbage collected from memory, the JVM will execute the &lt;code&gt;finalize()&lt;/code&gt;. So, if you need to close any resources that were opened in the class (like backend connections, Files…), it can be done in this method.&amp;nbsp;&lt;/p&gt;】&lt;p&gt; Java中的所有对象都隐含地从&lt;code&gt; java.lang.object &lt;/code&gt;继承。该类包含多种方法，可以在子类中覆盖。 &lt;/p&gt;&#xA;&lt;p&gt;这样的方法是&lt;code&gt; finalize（）&lt;/code&gt;。在对象从内存中收集垃圾之前，JVM将执行&lt;code&gt; finalize（）&lt;/code&gt;。因此，如果您需要关闭类中打开的任何资源（例如后端连接，文件…），则可以在此方法中完成。 &lt;/p&gt;</description>
      <pubDate>Thu, 15 May 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Integrating Google BigQuery With Amazon SageMaker】将Google Bigquery与Amazon SageMaker集成</title>
      <link>https://dzone.com/articles/integrating-bigquery-and-amazon-sagemaker</link>
      <description>【&lt;p&gt;Today, organizations often need to leverage services across different cloud platforms to maximize their data science capabilities. One common scenario is analyzing data stored in Google BigQuery using Amazon SageMaker&#39;s advanced machine learning tools.&lt;/p&gt;&#xA;&lt;p&gt;This article presents a comprehensive guide to establishing a direct connection between Google BigQuery and Amazon SageMaker Studio through Data Wrangler, offering a cost-effective and secure solution that eliminates the need for data duplication and reduces data transfer overhead.&lt;/p&gt;】&lt;p&gt;今天，组织通常需要利用各种云平台上的服务来最大化其数据科学能力。一种常见的情况是使用Amazon Sagemaker的高级机器学习工具分析Google BigQuery中存储的数据。&lt;/p&gt;&#xA;&lt;p&gt;本文介绍了通过数据Wrangler建立Google BigQuery和Amazon Sagemaker Studio之间直接联系的综合指南，提供了一种具有成本效益且安全的解决方案，消除了数据重复的需求并减少了数据传输的需求。&lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 15 May 2025 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Vibe Coding With GitHub Copilot: Optimizing API Performance in Fintech Microservices】使用GitHub Copilot编码的氛围：在金融科技微服务中优化API性能</title>
      <link>https://dzone.com/articles/vibe-coding-github-copilot-fintech-apis</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;In fintech, APIs power everything. Starting from payments to trading to real-time customer experiences, the API takes care of everything. Performance isn&#39;t optional, but it&#39;s critical for user trust and business success.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;As a fintech API and cloud optimization expert, I constantly face the challenge of balancing quick development with high performance. When Microsoft announced GitHub Copilot for free, I asked myself a real-world question:&lt;em&gt;&amp;nbsp;Can GitHub Copilot go beyond writing boilerplate code and help optimize fintech Microservice APIs?&lt;/em&gt;&lt;/p&gt;】&lt;p style =“ text-align：left;”&gt;在金融科技中，apis为所有内容供电。从付款到交易再到实时客户体验，API都会照顾一切。性能不是可选的，但对于用户信任和业务成功至关重要。 &lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;作为金融科技API和云优化专家，我不断面临平衡快速发展与高性能的挑战。当Microsoft免费宣布GitHub Copilot时，我问自己一个现实世界中的问题：&lt;em&gt; Github Copilot可以超越编写样板代码并帮助优化Fintech Microservice API？&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 15 May 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Designing a Java Connector for Software Integrations】设计用于软件集成的Java连接器</title>
      <link>https://dzone.com/articles/designing-java-connector-software-integrations</link>
      <description>【&lt;p&gt;IT systems need integration to achieve seamless data flow alongside enhanced operational efficiency. The expansion of businesses creates independent operational systems that restrict performance through object isolation and restrict time-sensitive information acquisition. The system&#39;s functions become oriented for better workflow coordination, which minimizes both repetition and creates unified operations.&lt;/p&gt;&#xA;&lt;p&gt;The creation of such connections necessitates comprehensive knowledge about technical and business needs, which include format patterns along with protocol standards. Java provides robust libraries alongside &lt;a href=&#34;https://dzone.com/articles/top-5-java-frameworks-for-web-application-developm&#34;&gt;outstanding frameworks&lt;/a&gt; that lead organizations to choose Java when building scalable, customized solutions. A strategically developed connector fulfills present requirements while enabling future technology adjustments, thus becoming a sustainable factor that supports successful IT system integration.&lt;/p&gt;】&lt;p&gt; IT系统需要集成以实现无缝的数据流以及增强的操作效率。企业的扩展创建了独立的操作系统，这些系统通过对象隔离并限制了时间敏感的信息获取来限制性能。该系统的功能成为更好的工作流程协调，从而最大程度地减少重复并创建统一的操作。&lt;/p&gt;&#xA;&lt;p&gt;建立这种联系需要有关技术和业务需求的全面知识，其中包括格式模式以及协议标准。 Java与&lt;a href =“ https://dzone.com/articles/top-5-java-frameworks-for-web-application-developm”一起提供了强大的库。战略性开发的连接器满足了当前的要求，同时可以实现未来的技术调整，从而成为支持成功的IT系统集成的可持续因素。&lt;/p&gt;</description>
      <pubDate>Thu, 15 May 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Detection and Mitigation of Lateral Movement in Cloud Networks】云网络中横向运动的检测和缓解</title>
      <link>https://dzone.com/articles/detection-mitigation-lateral-movement-cloud-networks</link>
      <description>【&lt;h2 style=&#34;text-align: left;&#34;&gt;How Hackers Bypass Lateral Movement Detection (And How to Stop Them)&lt;/h2&gt;&#xA;&lt;p&gt;Detecting lateral movement has emerged as a crucial cybersecurity challenge today. Attackers who breach network perimeters follow a five-step process. They start with reconnaissance, move to their original compromise, spread laterally, establish persistence, and finally achieve their objectives. This systematic approach lets them quietly move through systems while they hunt for sensitive data and expand their control.&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;Security teams must understand hackers&#39; techniques to spot lateral movement quickly. Attackers commonly use pass-the-hash attacks, remote execution, privilege escalation, Kerberoasting, and targeted phishing campaigns. Traditional security measures struggle to stop these sophisticated lateral movement techniques. Most organizations only spot breaches after attackers have caused substantial damage.&lt;/p&gt;】&lt;h2 style =“ text-align：left;”&gt;黑客如何绕过横向运动检测（以及如何停止它们）&lt;/h2&gt;&#xA;&lt;p&gt;检测横向运动已成为当今至关重要的网络安全挑战。违反网络周围的攻击者遵循五步过程。他们从侦察开始，转到其原始妥协，横向传播，建立持久性并最终实现其目标。这种系统的方法使他们可以在寻找敏感数据并扩大控制的同时悄悄地通过系统。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p style =“ text-align：left;”&gt;安全团队必须了解黑客的技术，以迅速发现横向运动。攻击者通常会使用障碍攻击，远程执行，特权升级，kerberoasting和有针对性的网络钓鱼活动。传统的安全措施难以阻止这些复杂的侧向运动技术。大多数组织仅在攻击者造成重大损害后发现漏洞。&lt;/p&gt;</description>
      <pubDate>Thu, 15 May 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Integration Isn’t a Task — It’s an Architectural Discipline】集成不是一项任务 - 这是一门建筑学科</title>
      <link>https://dzone.com/articles/integration-as-architectural-discipline</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Let’s talk about integration. Not the glossy vendor slide-deck version, but the messy, deeply architectural reality of connecting systems in the enterprise.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Despite all our advances in tooling and frameworks, the way many organizations approach integration still hasn’t changed. Too often, we default to short-term fixes — point-to-point links, overstuffed middleware, or bespoke connectors — because they’re “fast.” But that speed comes at a price: brittle systems, tight coupling, and long-term technical debt that can paralyze change.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;让我们谈谈集成。不是光滑的供应商幻灯片版本，而是企业中连接系统的混乱，深层建筑现实。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;尽管我们在工具和框架方面取得了一切进步，但许多组织的使用方式仍未改变。我们常常默认为短期修复程序 - 点对点链接，填充的中间件或定制连接器 - 因为它们是“快速”的。但是这种速度是有代价的：脆性系统，紧密的耦合和长期的技术债务，可能会使变化瘫痪。&lt;/p&gt;</description>
      <pubDate>Thu, 15 May 2025 16:00:06 +0000</pubDate>
    </item>
    <item>
      <title>【Customer 360: Fraud Detection in Fintech With PySpark and ML】客户360：与Pyspark和ML的Fintech中的欺诈检测</title>
      <link>https://dzone.com/articles/fraud-detection-fintech-pyspark-ml</link>
      <description>【&lt;p&gt;Every bank uses Customer 360 to maintain its customer records in a unified way, and it can also be used for fraud detection.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;auto&#34;&gt;What Is Customer 360?&lt;/h2&gt;&#xA;&lt;p dir=&#34;auto&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/integrating-customer-360-systems-with-gpt-apis-a-t&#34;&gt;Customer 360&lt;/a&gt; is like creating a complete picture of a customer by pulling together all the data you have about them — think of it as a &#34;comprehensive profile.&#34; Imagine a bank with data from accounts, transactions, and customer service calls. Instead of having &amp;nbsp;different/diverse data of the same customer, Customer 360 links them to say, “ This data in various ways belongs to customer John Doe.” It helps businesses understand customers better, personalize services, and figure out customer data patterns.&lt;/p&gt;】&lt;p&gt;每个银行使用客户360以统一的方式维护其客户记录，也可以用于欺诈检测。&lt;/p&gt;&#xA;&lt;h2 dir =“ auto”&gt;什么是客户360？&lt;/h2&gt;&#xA;&lt;p dir =“ auto”&gt; &lt;a href =“ https://dzone.com/articles/integrating-customer-360-systems-with-gpt-ppt-apis-a-t”&gt; customer 360 &lt;/a&gt;就像是通过将所有数据拼凑而成的所有数据来创建一个客户的完整图片 - 想想它们 - 想想它是一个全面的个人资料。”想象一家带有来自帐户，交易和客户服务电话的数据的银行。客户360没有拥有同一客户的不同/多样数据，而是将他们链接出来：“这些数据以各种方式属于客户约翰·杜伊（John Doe）。”它可以帮助企业更好地了解客户，个性化服务并找出客户数据模式。&lt;/p&gt;</description>
      <pubDate>Thu, 15 May 2025 13:00:07 +0000</pubDate>
    </item>
    <item>
      <title>【Endpoint Security Controls: Designing a Secure Endpoint Architecture, Part 1】端点安全控制：设计安全端点体系结构，第1部分</title>
      <link>https://dzone.com/articles/endpoint-security-controls</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;As organizations embrace digital transformation and hybrid work, the endpoint becomes both a critical productivity enabler and a significant security liability. Laptops, desktops, smartphones, and even IoT devices form the frontline in the battle for data integrity and organizational resilience. To secure this diverse landscape, endpoint security must be viewed not as a single product, but as a multi-layered architectural discipline.&lt;/p&gt;&#xA;&lt;p data-end=&#34;40&#34; data-start=&#34;0&#34;&gt;This article is structured in two parts:&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt;当组织接受数字化转型和混合工作时，端点既成为重要的生产力启用器，又是重大的安全责任。笔记本电脑，台式机，智能手机甚至物联网设备都构成了数据完整性和组织弹性之战。为了确保这种多样化的景观，必须将端点安全性视为单一产品，而是一个多层建筑学科。&lt;/p&gt;&#xA;&lt;p data-end =“ 40” data-start =“ 0”&gt;本文以两个部分结构：&lt;/p&gt;</description>
      <pubDate>Thu, 15 May 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AWS to Azure Migration: A Cloudy Journey of Challenges and Triumphs】AWS到Azure迁移：挑战和胜利的多云之旅</title>
      <link>https://dzone.com/articles/aws-to-azure-migration-challenges-and-success</link>
      <description>【&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-IN&#34;&gt;So, you are considering migrating your infrastructure from AWS to Azure? Congratulations! You have officially joined the ranks of people who thought a simple cloud swap was a quick weekend project — and now you’re probably questioning your life choices. But don’t worry, it is not as crazy as it sounds. In fact, it can be a pretty smooth ride if you know what you’re getting into (or at least, if you have a strong coffee supply).&lt;/span&gt;&lt;span data-ccp-props=&#34;{}&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-IN&#34;&gt;The cloud wars are heating up. AWS has been the big player for years, and Azure has been right there, lurking, always trying to steal the spotlight. But sometimes, you realize the place you have been renting is just not quite the right fit anymore. Maybe AWS is too complicated. Or maybe Azure just offers a few things that AWS cannot (no, really, it happens). Whatever the reason, migrating from&amp;nbsp;&lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/aws-vs-azure-which-is-better-for-cloud-computing&#34;&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-IN&#34;&gt;AWS to Azure&lt;/span&gt;&lt;/a&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-IN&#34;&gt;&amp;nbsp;is not something to shy away from — unless, of course, you have something else to do like binge-watch an entire season of your favorite show.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ in-in”&gt;因此，您正在考虑将基础架构从AWS迁移到Azure？恭喜！您已经正式加入了人们认为简单的云交换是一个快速周末项目的人，现在您可能会质疑自己的生活选择。但是不用担心，听起来并不像疯狂。实际上，如果您知道自己进入什么（或至少，如果您的咖啡供应量很强）。&#xA;&lt;p&gt; &lt;span data-contrast =“ auto” lang =“ in-in”&gt;云战争正在加热。多年来，AWS一直是一名大型球员，而Azure一直在那里，潜伏在那儿，总是试图抢下聚光灯。但是有时候，您意识到自己租房的地方不再是正确的。也许AWS太复杂了。也许Azure提供了一些AWS无法的东西（不，它发生了）。 Whatever the reason, migrating from &lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/aws-vs-azure-which-is-better-for-cloud-computing&#34;&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-IN&#34;&gt;AWS to Azure&lt;/span&gt;&lt;/a&gt;&lt;span data-contrast=&#34;auto&#34; lang=&#34;EN-IN&#34;&gt; is not something to回避 - 当然，除非您还有其他事情要做，例如您最喜欢的节目的整个季节。 &lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 15 May 2025 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Optimizing Integration Workflows With Spark Structured Streaming and Cloud Services】使用火花结构化流和云服务优化集成工作流程</title>
      <link>https://dzone.com/articles/streaming-integration-workflows-spark-cloud</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Data is everywhere and moving faster than ever before. If you are processing logs from millions of IoT devices, tracking customer behavior on an e-commerce site, or monitoring stock market changes in real time, your ability to integrate and process this data quickly and efficiently can mean the difference between your business succeeding or failing.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/spark-structured-streaming-using-java&#34;&gt;Spark Structured Streaming&lt;/a&gt; comes in handy here. The combination of scalability offered by cloud services and the ability to handle real-time data streams makes it a powerful tool for optimizing integration workflows. Let&#39;s see how these two technologies can be used to design robust, high-performing data pipelines and how to deal with the actual world scenario of dealing with continuous data.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;数据无处不在，移动速度比以往任何时候都快。如果您正在处理数百万个IoT设备的日志，在电子商务网站上跟踪客户行为或实时监控股票市场的变化，那么您快速有效地集成和处理此数据的能力可能意味着您的业务成功或失败之间的差异。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/articles/spark-sonstructred-streaming-using-java”&gt; spark结构化流&lt;/a&gt;在这里派上用场。云服务提供的可扩展性和处理实时数据流的能力的结合使其成为优化集成工作流的强大工具。让我们看看这两种技术如何用于设计出色的，高性能的数据管道以及如何处理处理连续数据的实际世界情景。&lt;/p&gt;</description>
      <pubDate>Thu, 15 May 2025 18:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>