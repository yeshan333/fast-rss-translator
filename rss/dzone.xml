<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【GenAI: From Prompt to Production】Genai：从提示到生产</title>
      <link>https://dzone.com/articles/genai-prompt-to-production</link>
      <description>【&lt;h2 dir=&#34;ltr&#34;&gt;The Idea&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;A project time-tracking system should allow entry of:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li dir=&#34;ltr&#34;&gt;Clients have one or more projects consisting of one or more tasks.&lt;/li&gt;&#xA; &lt;li dir=&#34;ltr&#34;&gt;Tasks have timesheet entries, completed by persons entering hours working for a client.&amp;nbsp;&lt;/li&gt;&#xA; &lt;li dir=&#34;ltr&#34;&gt;Invoices are created by adding invoice items linked to billable timesheet lines. &amp;nbsp;&lt;/li&gt;&#xA; &lt;li dir=&#34;ltr&#34;&gt;Once the invoice is marked as ready, send the information to Kafka for invoice processing.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;The Prompt&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://www.genai-logic.com/why-genai-logic/for-developers&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;GenAI Logic&lt;/a&gt; is a web page, like many chatbots, that allows the user to enter a prompt. The more details provided, the better the result (although you can iterate to add or change the outcome using the “Iterate” button). &amp;nbsp;&lt;/p&gt;】&lt;h2 dir =“ ltr”&gt; IDEA &lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt;项目时间跟踪系统应允许输入：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li dir =“ ltr”&gt;客户有一个或多个由一个或多个任务组成的项目。&lt;/li&gt;&#xA; &lt;li dir =“ ltr”&gt;任务具有时间表条目，由进入客户工作时间的人完成。 &lt;/li&gt;&#xA; &lt;li dir =“ ltr”&gt;发票是通过添加链接到计费时间表行的发票项目创建的。  &lt;/li&gt;&#xA; &lt;li dir =“ ltr”&gt;发票被标记为准备就绪后，将信息发送到kafka进行发票处理。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 dir =“ ltr”&gt;提示&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt; &lt;a href =“ https://www.genai-logic.com/why-genai-logic/for-developers” rel =“ noopener noreferrer” target =“ _ black”&gt; genai逻辑&lt;/a&gt;像许多chatbots一样，允许使用访问者，可以输入提示符。提供的细节越多，结果越好（尽管您可以使用“迭代”按钮迭代添加或更改结果）。  &lt;/p&gt;</description>
      <pubDate>Tue, 25 Mar 2025 21:45:00 +0000</pubDate>
    </item>
    <item>
      <title>【Agentic AI and Generative AI: Revolutionizing Decision Making and Automation】代理AI和生成的AI：革命性的决策和自动化</title>
      <link>https://dzone.com/articles/agentic-ai-and-generative-ai</link>
      <description>【&lt;p&gt;&lt;em&gt;Editor&#39;s Note: The following is an article written for and published in DZone&#39;s 2025 Trend Report,&amp;nbsp;&lt;/em&gt;&lt;a href=&#34;https://dzone.com/link/2025-tr-genai-contributor-article&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Generative AI: The Democratization of Intelligent Systems&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;The rapid advancement of artificial intelligence (AI) creates breakthroughs that span multiple industries. Among many developments, &lt;strong&gt;agentic AI&lt;/strong&gt; and &lt;strong&gt;generative AI&lt;/strong&gt; stand out as two transformative powers. Although these systems work differently because they serve distinct functions, they bring substantial benefits when used together. Generative AI focuses on content creation through deep learning transformer models that learn from extensive datasets. This technology enables increased human productivity in content creation tasks as well as design, marketing activities, and software development by delivering text, images, code, and music outputs.&lt;/p&gt;】&lt;p&gt; &lt;em&gt;编辑器注：以下是为Dzone的2025趋势报告编写并发表的文章，&lt;/em&gt; &lt;a href =“ https://dzone.com/link/link/link/2025-tr-genai-contributor-tributor-tributor-tributor-article- Systems &lt;/em&gt; &lt;/a&gt; &lt;em&gt;。&lt;/em&gt; &lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;人工智能（AI）的快速发展创造了跨越多个行业的突破。在许多发展中，&lt;strong&gt;代理AI &lt;/strong&gt;和&lt;strong&gt;生成的AI &lt;/strong&gt;脱颖而出。尽管这些系统的起作用是因为它们具有不同的功能，但它们在一起使用时会带来可观的好处。生成的AI通过深度学习变压器模型从广泛的数据集中学习。该技术通过提供文本，图像，代码和音乐输出来提高人类在内容创建任务以及设计，营销活动和软件开发的生产率。&lt;/p&gt;</description>
      <pubDate>Tue, 25 Mar 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【A Systematic Approach for Java Software Upgrades】Java软件升级的系统方法</title>
      <link>https://dzone.com/articles/a-systematic-approach-for-java-software-upgrades</link>
      <description>【&lt;p&gt;The amount of business logic embedded in the form of code in software systems is so huge and valuable that you don’t always need to think in terms of replacing them with entirely new systems. Rather, software systems should facilitate evolution both in terms of functionality and in terms of technological upgrades.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;This is truer in transactional systems, especially in domains including, but not limited to, finance, travel, transportation, logistics (TTL), and e-commerce. While much literature has been written about how to manage functional changes in software applications, technology upgrades are non-trivial, and many times, developers are left out to try and test their own intuition.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;软件系统中以代码形式嵌入的业务逻辑量是如此巨大和有价值，以至于您不一定需要考虑用全新的系统代替它们。相反，软件系统应以功能性和技术升级方面促进进化。 &lt;/p&gt;&#xA;&lt;p&gt;这在交易系统中是真实的，尤其是在包括但不限于金融，旅行，运输，物流（TTL）和电子商务的领域。尽管已经写了很多有关如何管理软件应用程序功能变化的文献，但技术升级是非平底的，而且很多时候，开发人员被抛弃了尝试测试自己的直觉。 &lt;/p&gt;</description>
      <pubDate>Tue, 25 Mar 2025 21:15:00 +0000</pubDate>
    </item>
    <item>
      <title>【Lakehouse: Starting With Apache Doris + S3 Tables】Lakehouse：从Apache Doris + S3桌开始</title>
      <link>https://dzone.com/articles/lakehouse-starting-with-apache-doris-s3-table</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;Among the numerous AI products launched at the AWS re:Invent 2024 conference, Amazon S3 Tables might have seemed inconspicuous. However, for database professionals, the emergence of S3 Tables signifies that the era of modular data analytics has arrived.&lt;/p&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;S3 Tables are a special type of S3 Bucket with built-in support for &lt;a href=&#34;https://dzone.com/articles/the-future-of-data-lakehouses-apache-iceberg&#34; rel=&#34;noopener ugc nofollow&#34; target=&#34;_blank&#34;&gt;Apache Iceberg&lt;/a&gt;. They stand alongside the previously introduced &lt;strong&gt;General Purpose Bucket&lt;/strong&gt; and &lt;strong&gt;Directory Bucket&lt;/strong&gt;, collectively referred to as &lt;strong&gt;Table Bucket&lt;/strong&gt;. This means you can now create a table bucket as easily as you would create a standard S3 Bucket.&lt;/p&gt;】在AWS RE：Invent 2024会议上推出的众多AI产品中，Amazon S3表似乎不显眼。但是，对于数据库专业人员而言，S3表的出现表示模块化数据分析的时代已经到来。&lt;/p&gt;&#xA;&lt;P Data-Selectable-paragraph =“”&gt; S3表是一种特殊类型的S3桶类型，内置支持&lt;a href =“ https://dzone.com/articles/the-future-of-data-lakees-lakees-apache-apache-acebace-icebache-iceberg-它们与先前引入的&lt;strong&gt;通用存储桶&lt;/strong&gt;和&lt;strong&gt;目录存储桶&lt;/strong&gt;一起，共同称为&lt;strong&gt; table bucket &lt;/strong&gt;。这意味着您现在可以像创建标准S3存储桶一样轻松地创建一个表存储桶。&lt;/p&gt;</description>
      <pubDate>Tue, 25 Mar 2025 17:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Recursive Feature Elimination in Practice】实践中消除递归功能</title>
      <link>https://dzone.com/articles/recursive-feature-elimination-in-practice</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;The effectiveness of machine learning models often hinges on a deceptively simple question: Which features actually matter? The challenge becomes particularly evident as datasets grow larger and more complex. Modern data collection gives us access to hundreds or even thousands of features, but quantity doesn&#39;t always translate to quality. Processing all these features wastes computational resources and disrupts your model&#39;s performance.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Feature selection addresses this challenge by identifying the subset of features that contribute most meaningfully to your model&#39;s predictions. While several approaches exist for tackling this problem, Recursive Feature Elimination (RFE) stands out for its systematic and interpretable approach. By iteratively removing less important features, RFE helps you build models that are both more efficient and more accurate.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;机器学习模型的有效性通常会呈现在一个看似简单的问题上：哪个功能实际上重要？随着数据集的增长越来越大，挑战变得尤为明显。现代数据收集使我们可以访问数百甚至数千个功能，但数量并不总是转化为质量。处理所有这些功能浪费了计算资源并破坏模型的性能。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;特征选择通过识别最有意义地贡献模型预测的功能的子集来解决这一挑战。尽管存在几种解决此问题的方法，但递归功能消除（RFE）在系统的和可解释的方法方面脱颖而出。通过迭代删除不太重要的功能，RFE可以帮助您构建更有效且更准确的模型。&lt;/p&gt;</description>
      <pubDate>Tue, 25 Mar 2025 18:45:00 +0000</pubDate>
    </item>
    <item>
      <title>【Using KRaft Kafka for Development and Kubernetes Deployment】使用Kraft Kafka进行开发和Kubernetes部署</title>
      <link>https://dzone.com/articles/kraft-kafka-development-kubernetes-deployment</link>
      <description>【&lt;p&gt;With KRaft for Kafka ZooKeeper is no longer needed. KRaft is a protocol to select a leader among several server instances. That makes the Kafka setup much easier.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;The new configuration is shown on the example of the &lt;a href=&#34;https://github.com/Angular2Guy/MovieManager&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;MovieManager&lt;/a&gt; project.&lt;/p&gt;】&lt;p&gt;不再需要使用Kraft for Kafka Zookeeper。 KRAFT是在几个服务器实例中选择领导者的协议。这使Kafka设置更加容易。 &lt;/p&gt;&#xA;&lt;p&gt;新配置显示在&lt;a href =“ https://github.com/angular2guy/moviemanager”的示例上</description>
      <pubDate>Tue, 25 Mar 2025 14:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Video Generation With Java: Leverage Nova and Amazon Bedrock】Java的视频生成：利用Nova和Amazon Bedrock</title>
      <link>https://dzone.com/articles/video-generation-java-nova-amazon-bedrock</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Amazon Nova is a new generation of state-of-the-art (SOTA) foundation models (FMs) that deliver frontier intelligence and industry-leading price performance, released on December 24. It is available exclusively on Amazon Bedrock.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;As this model is quite new, there are not a lot of examples of its use, especially in Java. As of this writing, the official AWS docs contain only Python code examples, and there are a couple.&lt;/p&gt;】&lt;p dir =“ ltr”&gt; Amazon Nova是一种新一代的最先进的（SOTA）基金会模型（FMS），可在12月24日发行，可提供边境智能和行业领先的价格性能。它专门在亚马逊Bedrock上发行。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;由于此模型是非常新的，因此没有太多的使用示例，尤其是在Java中。在撰写本文时，官方的AWS文档仅包含Python代码示例，并且有几个。&lt;/p&gt;</description>
      <pubDate>Tue, 25 Mar 2025 13:45:00 +0000</pubDate>
    </item>
    <item>
      <title>【Make ML Models Work: A Real-World Take on Size and Imbalance】使ML模型起作用：实现大小和不平衡的现实世界</title>
      <link>https://dzone.com/articles/taming-model-size-and-class-imbalance-in-nlp-class</link>
      <description>【&lt;h2&gt;The Initial Hurdle&lt;/h2&gt;&#xA;&lt;p&gt;In NLP classification tasks, especially those involving text descriptions, it&#39;s common to encounter two significant hurdles: large model sizes and imbalanced datasets. A large model can be difficult to deploy and manage, while class imbalance can lead to poor predictive performance, particularly for minority classes.&lt;/p&gt;&#xA;&lt;p&gt;Imagine you are building a system to automatically categorize product descriptions into various product categories. The project began with a dataset of close to 40,000 records, where each record contained a short product title and a longer product description, along with its corresponding category. The initial &lt;a href=&#34;https://dzone.com/articles/a-comprehensive-guide-to-random-forest-in-r&#34;&gt;Random Forest model&lt;/a&gt;, while achieving a decent accuracy of around 70%, ballooned to a whopping 11 GB size.&amp;nbsp;&lt;/p&gt;】&lt;h2&gt;初始障碍&lt;/h2&gt;&#xA;&lt;p&gt;在NLP分类任务中，尤其是涉及文本说明的任务中，通常会遇到两个重要的障碍：大型模型大小和不平衡数据集。大型模型可能很难部署和管理，而班级失衡会导致预测性能差，尤其是对于少数族裔班。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt;想象您正在建立一个系统，将产品描述自动分为各种产品类别。该项目始于一个接近40,000个记录的数据集，每个记录都包含一个简短的产品标题和更长的产品描述，以及其相应的类别。最初的&lt;a href =“ https://dzone.com/articles/a-comprehens-guide-guide-to-random-forest-in-r------------------ r”&gt;随机森林模型&lt;/a&gt;，同时达到了约70％的体面准确性，却激增至11 GB大小。 &lt;/p&gt;</description>
      <pubDate>Tue, 25 Mar 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Async Context Manager Mocking in Python Tests】掌握异步上下文经理在Python测试中嘲笑</title>
      <link>https://dzone.com/articles/mastering-async-context-manager-mocking-in-python</link>
      <description>【&lt;p data-selectable-paragraph=&#34;&#34;&gt;Testing asynchronous Python code can be challenging, especially when dealing with nested context managers. In this tutorial, we’ll explore how to effectively mock nested async context managers to create clean, reliable tests for complex async code structures.&lt;/p&gt;&#xA;&lt;h2 data-selectable-paragraph=&#34;&#34;&gt;The Challenge of Testing Nested Async Context Managers&lt;/h2&gt;&#xA;&lt;p data-selectable-paragraph=&#34;&#34;&gt;Modern Python codebases often use asynchronous context managers (using &lt;code&gt;async with&lt;/code&gt;) for resource management in &lt;a href=&#34;https://dzone.com/articles/how-to-interact-with-a-database-using-async-functi&#34;&gt;async functions&lt;/a&gt;. When these context managers are nested, testing becomes complicated. Consider a client that uses nested context managers to manage HTTP sessions and requests:&lt;/p&gt;】&lt;p数​​据选择性 - 段落=“”&gt;测试异步python代码可能具有挑战性，尤其是在与嵌套上下文经理打交道时。在本教程中，我们将探讨如何有效模拟嵌套的异步上下文经理，以创建复杂的异步代码结构的清洁，可靠的测试。&lt;/p&gt;&#xA;&lt;H2数据选择 - 段落=“”&gt;测试嵌套异步上下文经理的挑战&lt;/h2&gt;&#xA;&lt;p data-selectable-paragraph =“”&gt;现代的python代码库通常在&lt;a href =“ https://dzone.com/articles/articlection/how-to-to-interact/how-to-interact-with-with-with-with-with-with-with-with-with-a-database-usun--sus------------------------ use---async-funtiri &lt;/a href =”中使用异步上下文管理器（使用&lt;/code&gt; &lt;/code&gt; &lt;/code&gt; &lt;/code&gt;）进行资源管理。当这些上下文经理嵌套时，测试就会变得复杂。考虑使用嵌套上下文经理来管理HTTP会话和请求的客户端：&lt;/p&gt;</description>
      <pubDate>Tue, 25 Mar 2025 15:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Java Reborn: Conquering Cloud-Native and Next-Gen Concurrency】Java重生：征服云原生和下一代并发</title>
      <link>https://dzone.com/articles/java-cloud-native-next-gen-concurrency</link>
      <description>【&lt;p&gt;Although Java has been around for long time, the future looks exciting. Historically being the go to language for building enterprise applications, the language has grown to match the speed of development of the cloud development technology.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In this article, we take a closer look as to how Java keeps on evolving with focus on cloud native designs, improving concurrency, microservices architecture, and new initiatives that promise to change the way Java is seen and used.&lt;/p&gt;】&lt;p&gt;尽管Java已经存在了很长时间，但未来看起来令人兴奋。从历史上看，该语言已经成为构建企业应用程序的语言，该语言已经发展起来符合云发展技术的发展速度。 &lt;/p&gt;&#xA;&lt;p&gt;在本文中，我们仔细研究了Java如何继续关注云本机设计，改进并发，微服务体系结构以及有望改变Java的方式。&lt;/p&gt;的新计划。&lt;/p&gt;</description>
      <pubDate>Tue, 25 Mar 2025 19:30:05 +0000</pubDate>
    </item>
  </channel>
</rss>