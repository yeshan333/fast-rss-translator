<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Automate Web Portal Deployment in Minutes Using GitHub Actions】使用 GitHub Actions 在几分钟内自动化 Web 门户部署</title>
      <link>https://dzone.com/articles/automate-web-portal-deployment-with-gitub-actions</link>
      <description>【&lt;p&gt;In today&#39;s fast-paced development environment, automating the deployment process is crucial for maintaining efficiency and reducing human error. &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-github-actions&#34;&gt;GitHub Actions&lt;/a&gt; has emerged as a powerful tool for implementing &lt;a href=&#34;https://dzone.com/articles/how-to-build-an-effective-cicd-pipeline&#34;&gt;continuous integration and continuous deployment (CI/CD) pipelines&lt;/a&gt;, particularly for web applications. This article explores how to leverage GitHub Actions to deploy a feedback portal seamlessly and efficiently.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;The Power of GitHub Actions&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;GitHub Actions is more than just a &lt;a href=&#34;https://dzone.com/articles/what-is-ci-cd&#34;&gt;CI/CD&lt;/a&gt; tool; it&#39;s a complete automation platform that allows developers to create custom workflows for building, testing, and deploying their applications. These workflows are triggered by specific events in your GitHub repository, such as pushes, pull requests, or scheduled tasks.&lt;/p&gt;】&lt;p&gt;在当今快节奏的开发环境中，自动化部署过程对于保持效率和减少人为错误至关重要。 &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-github-actions&#34;&gt;GitHub Actions&lt;/a&gt; 已成为实现 &lt;a href=&#34;https://dzone 的强大工具.com/articles/how-to-build-an- effective-cicd-pipeline&#34;&gt;持续集成和持续部署 (CI/CD) 管道&lt;/a&gt;，特别是对于 Web 应用程序。本文探讨了如何利用 GitHub Actions 无缝高效地部署反馈门户。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;GitHub Actions 的力量&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;GitHub Actions 不仅仅是一个 &lt;a href=&#34;https://dzone.com/articles/what-is-ci-cd&#34;&gt;CI/CD&lt;/a&gt; 工具；它是一个完整的自动化平台，允许开发人员创建自定义工作流程来构建、测试和部署其应用程序。这些工作流程由 GitHub 存储库中的特定事件触发，例如推送、拉取请求或计划任务。&lt;/p&gt;</description>
      <pubDate>Wed, 23 Oct 2024 19:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Accelerating Connection Handshakes in Trusted Network Environments】加速可信网络环境中的连接握手</title>
      <link>https://dzone.com/articles/accelerating-connection-handshakes</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In this article, I aim to discuss modern approaches used to reduce the time required to establish a data transmission channel between two nodes. I will be examining both plain TCP and TLS-over-TCP.&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;What Is a Handshake?&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;First, let’s define what a handshake is, and for that, an illustration of the TCP handshake serves very well:&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;在本文中，我的目标是讨论用于减少在两个节点之间建立数据传输通道所需时间的现代方法。我将研究普通 TCP 和 TLS-over-TCP。 &lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;什么是握手？&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;首先，让我们定义什么是握手，为此，TCP 握手的说明非常有用：&lt;/p&gt;</description>
      <pubDate>Thu, 24 Oct 2024 14:15:06 +0000</pubDate>
    </item>
    <item>
      <title>【Data Architectures With Emphasis on Emerging Trends】强调新兴趋势的数据架构</title>
      <link>https://dzone.com/articles/data-architectures-emphasis-on-emerging-trends</link>
      <description>【&lt;p&gt;In this emerging Generative AI era as a data architect, it is your responsibility to keep a tap on the emerging architectures that cater to Generative AI. From data management to data governance to data lineage, architectures need to emerge to handle volumes of data.&lt;/p&gt;&#xA;&lt;p&gt;In this article, you learn about emerging data architectures like data mesh, Generative AI, and Quantum-based along with the existing architectures like Data Fabric. The article will conclude by showing the key differences between the existing and the emerging data architectures.&lt;/p&gt;】&lt;p&gt;在这个新兴的生成式 AI 时代，作为数据架构师，您有责任把握适合生成式 AI 的新兴架构。从数据管理到数据治理再到数据沿袭，需要出现架构来处理大量数据。&lt;/p&gt;&#xA;&lt;p&gt;在本文中，您将了解数据网格、生成式 AI 和基于量子的新兴数据架构，以及 Data Fabric 等现有架构。本文最后将展示现有数据架构和新兴数据架构之间的主要差异。&lt;/p&gt;</description>
      <pubDate>Wed, 23 Oct 2024 18:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【Summary of the AJAX Frameworks Comparison】AJAX 框架比较总结</title>
      <link>https://dzone.com/articles/summary-of-the-ajax-frameworks-comparison</link>
      <description>【&lt;p&gt;In previous weeks, I&#39;ve analyzed several libraries and frameworks that augment the client with AJAX capabilities.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/augmenting-the-client-with-vuejs&#34;&gt;Vue.js&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/augmenting-the-client-with-alpinejs&#34;&gt;Alpine.js&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/augmenting-the-client-with-htmx&#34;&gt;HTMX&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/vaadin-the-battery-included-server-side-ajax-frame&#34;&gt;Vaadin&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In this post, I&#39;ll compare them across several axes.&lt;/p&gt;】&lt;p&gt;在前几周，我分析了几个通过 AJAX 功能增强客户端的库和框架。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/augmenting-the-client-with-vuejs&#34;&gt;Vue.js&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/augmenting-the-client-with-alpinejs&#34;&gt;Alpine.js&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/augmenting-the-client-with-htmx&#34;&gt;HTMX&lt;/a&gt;&lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/vaadin-the-battery-included-server-side-ajax-frame&#34;&gt;Vaadin&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在这篇文章中，我将在多个轴上对它们进行比较。&lt;/p&gt;</description>
      <pubDate>Thu, 24 Oct 2024 18:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Ending Microservices Chaos: How Architecture Governance Keeps Your Microservices on Track】结束微服务混乱：架构治理如何让您的微服务步入正轨</title>
      <link>https://dzone.com/articles/ending-microservices-chaos-architecture-governance</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;A &lt;a href=&#34;https://dzone.com/articles/microservice-architecture-2&#34;&gt;microservices architecture&lt;/a&gt; is the gold standard for building scalable web applications. Gartner estimates that &lt;a href=&#34;https://www.gartner.com/peer-community/oneminuteinsights/microservices-architecture-have-engineering-organizations-found-success-u6b&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;74% of organizations use microservices for their web applications&lt;/a&gt;, with another 23% planning to use them soon.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;If you’re an IT leader, architect, or developer, you might have experienced the faster deployments, better fault isolation, and easier scaling that come with microservices.&amp;nbsp;&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/microservice-architecture-2&#34;&gt;微服务架构&lt;/a&gt;是构建可扩展 Web 应用程序的黄金标准。 Gartner 估计 &lt;a href=&#34;https://www.gartner.com/peer-community/onemillioninsights/microservices-architecture-have-engineering-organizations-found-success-u6b&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank &#34;&gt;74% 的组织在其 Web 应用程序中使用微服务&lt;/a&gt;，另外 23% 的组织计划很快使用它们。 &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;如果您是 IT 领导者、架构师或开发人员，您可能已经体验过微服务带来的更快的部署、更好的故障隔离和更轻松的扩展。 &lt;/p&gt;</description>
      <pubDate>Thu, 24 Oct 2024 12:00:09 +0000</pubDate>
    </item>
    <item>
      <title>【Will GenAI Force Coders to Switch Careers?】GenAI 会迫使程序员转行吗？</title>
      <link>https://dzone.com/articles/will-genai-force-coders-to-switch-careers</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;The world of software engineering is on the cusp of a transformation, driven largely by the rapid advancement of &lt;a href=&#34;https://dzone.com/articles/introduction-generative-ai-empowering-enterprises&#34;&gt;Generative AI (GenAI)&lt;/a&gt;. The AWS CEO recently suggested that developers might stop coding within two years as AI takes over coding tasks. Is this an accurate prediction? Will GenAI really force coders to abandon their careers?&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;The answer isn&#39;t straightforward. GenAI will no doubt automate many coding jobs, which will cut down the need for some positions. However, it won&#39;t make software engineers a thing of the past. It&#39;s similar to how automation changed fields like manufacturing. GenAI will cause a shift, but not a total replacement. We&#39;ll still need software engineers — though in a more advanced and specialized way. They&#39;ll focus on jobs that AI can&#39;t handle by itself.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;软件工程世界正处于变革的风口浪尖，这在很大程度上是由 &lt;a href=&#34;https://dzone.com/articles/introduction-generative-ai-empowering 的快速发展推动的-enterprises&#34;&gt;生成式人工智能 (GenAI)&lt;/a&gt;。 AWS 首席执行官最近建议，随着人工智能接管编码任务，开发人员可能会在两年内停止编码。这是一个准确的预测吗？ GenAI 真的会迫使程序员放弃他们的职业吗？ &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;答案并不简单。 GenAI 无疑将使许多编码工作实现自动化，这将减少对某些职位的需求。然而，它不会让软件工程师成为过去。这类似于自动化如何改变制造业等领域。 GenAI 将带来转变，但不会完全替代。我们仍然需要软件工程师——尽管以更先进和专业的方式。他们将专注于人工智能本身无法处理的工作。&lt;/p&gt;</description>
      <pubDate>Wed, 23 Oct 2024 20:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Understanding the Differences Between Repository and Data Access Object (DAO)】了解存储库和数据访问对象 (DAO) 之间的差异</title>
      <link>https://dzone.com/articles/differences-between-repository-and-dao</link>
      <description>【&lt;p data-line-end=&#34;3&#34; data-line-start=&#34;2&#34;&gt;Repository and Data Access Object (DAO) play crucial roles in software development and data handling. However, their purposes and contexts differ, especially when we consider how they relate to the business logic of an application. Let’s explore the key differences between these concepts, where they originate, and when you should choose one.&lt;/p&gt;&#xA;&lt;h2 data-line-end=&#34;3&#34; data-line-start=&#34;2&#34;&gt;About Repository and Data Access Object (DAO) Patterns&lt;/h2&gt;&#xA;&lt;p data-line-end=&#34;6&#34; data-line-start=&#34;5&#34;&gt;The &lt;strong&gt;Repository&lt;/strong&gt; pattern originates from &lt;a href=&#34;https://dzone.com/refcardz/getting-started-domain-driven&#34;&gt;Domain-Driven Design (DDD)&lt;/a&gt;, as described by Eric Evans in his book, &#34;&lt;em&gt;Domain-Driven Design: Tackling Complexity in the Heart of Software&lt;/em&gt;.&#34; Repositories are not just about managing data; they encapsulate business logic, ensuring that operations adhere to the Ubiquitous Language of the domain.&lt;/p&gt;】&lt;p data-line-end=&#34;3&#34; data-line-start=&#34;2&#34;&gt;存储库和数据访问对象 (DAO) 在软件开发和数据处理中发挥着至关重要的作用。然而，它们的目的和上下文不同，特别是当我们考虑它们与应用程序的业务逻辑如何相关时。让我们探讨一下这些概念之间的主要区别、它们的起源以及何时应该选择一个。&lt;/p&gt;&#xA;&lt;h2 data-line-end=&#34;3&#34; data-line-start=&#34;2&#34;&gt;关于存储库和数据访问对象 (DAO) 模式&lt;/h2&gt;&#xA;&lt;p data-line-end=&#34;6&#34; data-line-start=&#34;5&#34;&gt;&lt;strong&gt;存储库&lt;/strong&gt;模式源自&lt;a href=&#34;https://dzone.com/refcardz/getting- start-domain-driven&#34;&gt;领域驱动设计 (DDD)&lt;/a&gt;，如 Eric Evans 在他的著作“领域驱动设计：解决软件核心的复杂性&lt;/em&gt;”中所述。存储库不仅仅用于管理数据；还用于管理数据。它们封装了业务逻辑，确保操作遵循域的通用语言。&lt;/p&gt;</description>
      <pubDate>Thu, 24 Oct 2024 20:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【High-Speed Real-Time Streaming Data Processing】高速实时流数据处理</title>
      <link>https://dzone.com/articles/high-speed-real-time-streaming-data-processing</link>
      <description>【&lt;p style=&#34;text-align: left;&#34;&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;From&amp;nbsp;&lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/data-ingestion-the-definitive-guide&#34;&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;data ingestion&lt;/span&gt;&lt;/a&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;&amp;nbsp;to reporting, the primary goal is to convert data into actionable information. Online data is growing at a much faster rate than data processing speeds. For businesses to stay competitive, data must be readily available for making informed decisions as early as possible. Live data streaming software is becoming a vital part of data infrastructures to get data to processing systems as early as possible. While different streaming software are available, it is crucial to understand the domain context and available infrastructure.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;Each business use case is unique and should be treated with white-glove treatment. The critical thing to remember is that cheap, fast, and good will never make a feasible combination. The affordable solution may be quick but not good; a fast solution may be good but not cheap, and so on. An ideal example of this concept would be real-time streaming data processing.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;】&lt;p style=&#34;text-align: left;&#34;&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;来自&lt;/span&gt;&lt;a href=&#34;https://dzone.com/articles/data-ingestion-the -definitive-guide&#34;&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;数据提取&lt;/span&gt;&lt;/a&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt; 到报告，主要目标是转换数据转化为可操作的信息。在线数据的增长速度远远快于数据处理速度。为了让企业保持竞争力，必须随时提供数据，以便尽早做出明智的决策。实时数据流软件正在成为数据基础设施的重要组成部分，以尽早将数据传输到处理系统。虽然可以使用不同的流媒体软件，但了解领域上下文和可用的基础设施至关重要。&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;&lt;span data-preserver-spaces=&#34;true&#34;&gt;每个业务用例都是独一无二的，应该谨慎对待。需要记住的关键一点是，廉价、快速和优质永远不会成为可行的组合。经济实惠的解决方案可能会很快，但效果并不好；快速的解决方案可能很好，但并不便宜，等等。这个概念的一个理想例子是实时流数据处理。 &lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 24 Oct 2024 16:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Good Refactoring vs Bad Refactoring】好的重构与坏的重构</title>
      <link>https://dzone.com/articles/good-refactoring-vs-bad-refactoring</link>
      <description>【&lt;p&gt;I&#39;ve hired a lot of developers over the years. More than a few of them have come in with a strong belief that our code needed heavy refactoring. But here&#39;s the thing: in almost every case, their newly refactored code was found by the other developers to be harder to understand and maintain. It also was generally slower and buggier too.&lt;/p&gt;&#xA;&lt;p&gt;Now, don&#39;t get me wrong. Refactoring isn&#39;t inherently bad. It&#39;s a crucial part of keeping a codebase healthy. The problem is that bad refactoring is, well, bad. And it&#39;s surprisingly easy to fall into the trap of making things worse while trying to make them better.&lt;/p&gt;】&lt;p&gt;这些年来我雇佣了很多开发人员。他们中的不少人都坚信我们的代码需要大量重构。但事情是这样的：几乎在所有情况下，其他开发人员都发现他们新重构的代码更难理解和维护。它通常也更慢且错误更多。&lt;/p&gt;&#xA;&lt;p&gt;现在，请不要误会我的意思。重构本质上并不是坏事。这是保持代码库健康的关键部分。问题是糟糕的重构是非常糟糕的。而且在试图让事情变得更好的同时，很容易陷入让事情变得更糟的陷阱。&lt;/p&gt;</description>
      <pubDate>Wed, 23 Oct 2024 21:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【How Federal Agencies Are Achieving Zero Trust With Automation】联邦机构如何通过自动化实现零信任</title>
      <link>https://dzone.com/articles/how-federal-agencies-are-achieving-zero-trust</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;“Never trust, always verify.” This key principle has been ingrained into the cybersecurity lexicon since Forrester first popularized the concept of zero trust in 2009. Since then, zero trust has emerged as one of the most important frameworks in modern cybersecurity programs.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;For government agencies, the shift to zero trust is both crucial and inevitable. Tasked with protecting vital national infrastructure and driving scientific innovation, agencies are increasingly waking up to the fact that traditional security practices no longer cut it in today’s escalating, and increasingly complex, threat landscape.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;“永远不要相信，永远要验证。”自 Forrester 于 2009 年首次推广零信任概念以来，这一关键原则已深入网络安全词汇中。从那时起，零信任已成为现代网络安全计划中最重要的框架之一。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;对于政府机构而言，向零信任的转变至关重要且不可避免。担负着保护重要国家基础设施和推动科学创新的任务的各机构越来越意识到，在当今不断升级且日益复杂的威胁形势下，传统的安全实践已不再有效。&lt;/p&gt;</description>
      <pubDate>Wed, 23 Oct 2024 17:00:07 +0000</pubDate>
    </item>
  </channel>
</rss>