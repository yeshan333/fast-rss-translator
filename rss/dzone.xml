<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Simulating Events in Ansible EDA: A Practical Use Case of ansible.eda.generic】模拟Ansible EDA中的事件：Ansible.eda.generic的实际用例</title>
      <link>https://dzone.com/articles/simulating-events-in-ansible-eda</link>
      <description>【&lt;p&gt;When developing an &lt;a href=&#34;https://dzone.com/articles/using-event-driven-ansible-to-monitor-your-web-app&#34;&gt;Event-Driven Ansible&lt;/a&gt; rulebook to automate tasks like handling a server outage or responding to a failed CI/CD job, testing the logic can be tricky if we don’t have a live system constantly generating events. That’s where the &lt;code&gt;ansible.eda.generic&lt;/code&gt; source plugin comes in handy. It allows us to define mock events and inject them directly into the EDA workflow. This makes it easy to simulate real-time scenarios, test the rule conditions, and ensure the playbooks run as expected in a safe and controlled environment.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;In this article, I’ll walk you through how to include payloads directly within an Ansible EDA rulebook, as well as how to read payloads from an external file and use that data in rule conditions. I’ll also include some of the parameters like &lt;code&gt;loop_count&lt;/code&gt; and &lt;code&gt;loop_delay&lt;/code&gt;, which will help to control the number of times an event is triggered and the delay between each trigger. These features are especially helpful for simulating and managing event flow effectively during testing and development.&lt;/p&gt;】&lt;p&gt;When developing an &lt;a href=&#34;https://dzone.com/articles/using-event-driven-ansible-to-monitor-your-web-app&#34;&gt;Event-Driven Ansible&lt;/a&gt; rulebook to automate tasks like handling a server outage or responding to a failed CI/CD job, testing the logic can be tricky if we don’t have a live system constantly generating events.这就是&lt;code&gt; ansible.eda.generic &lt;/code&gt;源插件的派遣。它使我们能够定义模拟事件并将其直接注入EDA工作流程。这使得可以轻松模拟实时场景，测试规则条件并确保在安全和受控的环境中按预期运行这些剧本。 &lt;/p&gt;&#xA;&lt;p&gt;在本文中，我将介绍如何直接在Ansible EDA规则手册中包含有效载荷，以及如何从外部文件中读取有效负载并在规则条件下使用该数据。我还将包括一些参数，例如&lt;code&gt; loop_count &lt;/code&gt;和&lt;code&gt; loop_delay &lt;/code&gt;，这些参数将有助于控制事件触发的次数以及每个触发器之间的延迟。这些功能特别有助于在测试和开发过程中有效地模拟和管理事件流。&lt;/p&gt;</description>
      <pubDate>Wed, 09 Apr 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Unlocking the Power of Serverless AI/ML on AWS: Expert Strategies for Scalable and Secure Applications】在AWS上解锁无服务器AI/ML的功能：可扩展和安全应用程序的专家策略</title>
      <link>https://dzone.com/articles/serverless-ai-aws-strategies</link>
      <description>【&lt;p&gt;Amazon Web Services (AWS) provides an expansive suite of tools to help developers build and manage serverless applications with ease. By abstracting the complexities of infrastructure, AWS enables teams to focus on innovation. When combined with the transformative capabilities of artificial intelligence (AI) and machine learning (ML), serverless architectures become a powerhouse for creating intelligent, scalable, and cost-efficient solutions. In this article, we delve into serverless AI/ML on AWS, exploring best practices, implementation strategies, and an example to illustrate these concepts in action.&lt;/p&gt;&#xA;&lt;h2&gt;Why Combine AI, ML, and Serverless Computing?&amp;nbsp;&lt;/h2&gt;&#xA;&lt;p&gt;The fusion of serverless computing with AI and ML represents a significant leap forward for modern application development. Serverless systems scale automatically, simplify operational overhead, and use a pay-per-use model that keeps costs in check. On the other hand, AI brings capabilities like natural language processing (NLP), image recognition, and data analytics, while ML enables predictive modeling, dynamic decision making, and personalization. Together, AI and ML unlock opportunities to &lt;a href=&#34;https://dzone.com/articles/building-ai-driven-intelligent-applications-a-guide&#34;&gt;build intelligent applications&lt;/a&gt; that are not only efficient but also responsive to real-world challenges.&lt;/p&gt;】&lt;p&gt; Amazon Web Services（AWS）提供了一套宽敞的工具，可轻松地帮助开发人员构建和管理无服务器应用程序。通过抽象基础架构的复杂性，AWS使团队能够专注于创新。当与人工智能（AI）和机器学习（ML）的变革能力结合使用时，无服务器体系结构成为创建智能，可扩展和成本效益的解决方案的强大力量。在本文中，我们深入研究了AWS的无服务器AI/ML，探索最佳实践，实施策略以及一个在行动中说明这些概念的示例。&lt;/p&gt;&#xA;&lt;h2&gt;为什么组合AI，ML和无服务器计算？ &lt;/h2&gt;&#xA;&lt;p&gt;无服务器计算与AI和ML的融合代表了现代应用程序开发的重大飞跃。无服务器系统会自动扩展，简化操作开销，并使用每次使用付费模型，以保持费用。另一方面，AI带来了自然语言处理（NLP），图像识别和数据分析等功能，而ML可以实现预测性建模，动态决策和个性化。 AI和ML解释了&lt;a href =“ https://dzone.com/articles/building-ai-driven-indelligent-intelligent-applications-a-guide”&gt;构建智能应用程序&lt;/a&gt;不仅有效，而且对现实世界中的挑战有效。&lt;/p&gt;&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 09 Apr 2025 20:45:00 +0000</pubDate>
    </item>
    <item>
      <title>【Spring Boot Sample Application Part 1: Introduction and Configuration】春季启动样本应用程序第1部分：简介和配置</title>
      <link>https://dzone.com/articles/spring-h2-tutorial</link>
      <description>【&lt;p&gt;The application built after the completion of this tutorial provides APIs that allow users to manage a digital library.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Users can list all books stored, search any specific book using the filters provided, add new books, update the book&#39;s genre, and delete books.&lt;/p&gt;】&lt;p&gt;本教程完成后构建的应用程序提供了允许用户管理数字库的API。 &lt;/p&gt;&#xA;&lt;p&gt;用户可以列出存储的所有书籍，使用提供的过滤器搜索任何特定书籍，添加新书，更新本书的类型并删除书籍。&lt;/p&gt;</description>
      <pubDate>Wed, 09 Apr 2025 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Why State Management Is the #1 Challenge for Agentic AI】为什么国家管理是代理AI的第一挑战</title>
      <link>https://dzone.com/articles/agentic-ai-state-management-challenges</link>
      <description>【&lt;p&gt;When you have a conversation with a chatbot, you want it to remember previous interactions within that conversation. That’s what it means to have a conversation, after all.&lt;/p&gt;&#xA;&lt;p&gt;When you use generative AI (genAI) to perform some analysis task beyond a single response to a prompt, you want it to retain the context of earlier prompts within that task.&lt;/p&gt;】&lt;p&gt;当您与聊天机器人进行对话时，您希望它记住该对话中的先前互动。毕竟，这就是进行对话的意思。&lt;/p&gt;&#xA;&lt;p&gt;当您使用生成AI（Genai）执行一些分析任务以外的提示以外的单个响应时，您希望它保留在该任务中的早期提示的上下文。&lt;/p&gt;</description>
      <pubDate>Wed, 09 Apr 2025 21:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【How AI Automation Increases Research Productivity】AI自动化如何提高研究生产率</title>
      <link>https://dzone.com/articles/how-ai-automation-increases-research-productivity</link>
      <description>【&lt;p&gt;Scientific research is about finding quick, dependable, and efficient ways to accomplish goals. As the demand for high-quality data is essential for making accurate analysis, automation has become a necessity for streamlining the workflow.&lt;/p&gt;&#xA;&lt;div data-cy=&#34;blog-post-article&#34;&gt;&#xA; &lt;p&gt;Automation is transforming research in many fields, helping with everything from collecting data to managing workflows, making research faster and more productive. We explore real-life examples of automated systems that are helping businesses and researchers innovate and accelerate discoveries.&lt;/p&gt;】&lt;p&gt;科学研究是关于找到实现目标的快速，可靠和有效的方法。由于对高质量数据的需求对于进行准确的分析至关重要，因此自动化已成为简化工作流程的必要性。&lt;/p&gt;&#xA;&lt;div data-cy =“ blog-post-article”&gt;&#xA; &lt;p&gt;自动化正在改变许多领域的研究，从收集数据到管理工作流程，使研究更快，更有生产力。我们探讨了自动化系统的现实示例，这些系统正在帮助企业和研究人员进行创新和加速发现。&lt;/p&gt;</description>
      <pubDate>Wed, 09 Apr 2025 18:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Building Scalable and Efficient Architectures With ECS Serverless and Event-Driven Design】使用ECS无服务器和事件驱动的设计来构建可扩展有效的体系结构</title>
      <link>https://dzone.com/articles/efficient-ecs-serverless-event-driven-design</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In modern cloud-native application development, scalability, efficiency, and flexibility are paramount. As organizations increasingly migrate their workloads to the cloud, architects are embracing innovative technologies and design patterns to meet the growing demands of their systems. Two such technologies—Amazon Elastic Container Service (ECS) with serverless computing and event-driven architectures—offer powerful tools for building scalable and efficient systems. This article explores the key concepts, benefits, and best practices for designing architectures that leverage ECS with serverless capabilities and event-driven design patterns.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Understanding ECS and Serverless&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Amazon ECS&amp;nbsp;is a powerful, fully managed container orchestration service that lets developers run Docker containers on a&amp;nbsp;scalable,&amp;nbsp;secure infrastructure—without the hassle of managing clusters or scaling containers. Say goodbye to infrastructure headaches and focus on building your application logic.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;在现代云本地应用程序的开发中，可伸缩性，效率和灵活性至关重要。随着组织越来越多地将其工作量迁移到云中，建筑师正在拥抱创新的技术和设计模式，以满足其系统不断增长的需求。两种这样的技术（包括无服务器计算和事件驱动的架构）为构建可扩展和高效系统的强大工具提供了两种此类技术，包括无服务器计算和事件驱动的架构。本文探讨了设计具有无服务器功能和事件驱动设计模式的架构的关键概念，好处和最佳实践。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt;了解EC和无服务器&lt;/h2&gt;&#xA;&lt;p dir =“ ltr”&gt; Amazon ECS是一款功能强大的，完全管理的容器编排服务，可以使开发人员在可扩展，安全的基础架构上运行Docker容器，而无需管理集群或缩放容器的麻烦。告别基础设施头痛，专注于构建应用程序逻辑。&lt;/p&gt;</description>
      <pubDate>Wed, 09 Apr 2025 11:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Understanding the Identity Bridge Framework】了解身份桥梁框架</title>
      <link>https://dzone.com/articles/identity-bridge-framework</link>
      <description>【&lt;p&gt;Modern authentication protocols, such as SAML and OpenID Connect (OIDC), rely heavily upon federation as the guiding principle to secure front-door authentication. Federation is an elegant approach for web-based applications to isolate authentication from the application using a trust established between the centralized identity provider (&lt;strong&gt;IDP&lt;/strong&gt;) and a subscribing application. Armed with asymmetric key-based digital certificates, federation ensures that an application can securely leverage an external IDP service for authentication and free itself from the burden of handling user interaction during the authentication process.&lt;/p&gt;&#xA;&lt;p&gt;With federation comes the concept of &lt;a href=&#34;https://dzone.com/articles/what-is-sso-and-why-do-you-need-it&#34;&gt;single sign-on&lt;/a&gt; (&lt;strong&gt;SSO&lt;/strong&gt;). Suppose the centralized IDP has already established a secure authentication session. In that case, multiple applications can benefit from being able to single sign-on and bypass redundant login, improving user experience and reducing authentication frictions.&lt;/p&gt;】&lt;p&gt;现代身份验证协议，例如SAML和OpenID Connect（OIDC），在很大程度上依赖联邦作为指导原则来确保前门身份验证。联邦是一种基于Web的应用程序的优雅方法，可以使用集中式身份提供商（&lt;strong&gt; iDP &lt;/strong&gt;）和订阅应用程序之间建立的信任来隔离应用程序的身份验证。联合会拥有非对称基于密钥的数字证书，可确保应用程序可以安全地利用外部IDP服务进行身份验证，并在身份验证过程中自行摆脱处理用户互动的负担。&lt;/p&gt;&#xA;&lt;p&gt;随着联邦的发展，&lt;a a href =“ https://dzone.com/articles/what-is-sso-and-why-do-you-need-it-it-it-”&gt;单个签名&lt;/a&gt;（&lt;strong&gt; sso &lt;/strong&gt;）。假设集中式IDP已经建立了安全的身份验证会话。在这种情况下，多个应用程序可以受益于单次登录和绕过冗余登录，改善用户体验并减少身份验证摩擦。&lt;/p&gt;</description>
      <pubDate>Wed, 09 Apr 2025 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Achieving High Genericity in Code】在代码中实现高通用性</title>
      <link>https://dzone.com/articles/achieving-high-genericity-in-code</link>
      <description>【&lt;h2&gt;Building a Highly Generic Tool for Copying Transactional Data&lt;/h2&gt;&#xA;&lt;p&gt;Years ago, I set out to build a tool to copy transactional data from one environment to another. A single transaction could span 350+ tables, though not all transactions used all tables. Different transaction types would touch different subsets of these tables.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Given this complexity, coding this in &lt;a href=&#34;https://dzone.com/articles/the-reason-java-is-still-popular&#34;&gt;Java&lt;/a&gt; seemed like a massive undertaking. It was my pet project that I wanted to do during weekends, etc., besides my other important projects, so I had to find shortcuts and ensure high reusability of code.&lt;/p&gt;】&lt;h2&gt;构建用于复制交易数据的高通用工具&lt;/h2&gt;&#xA;&lt;p&gt;几年前，我着手构建一个工具，将交易数据从一个环境复制到另一个环境。单个交易可以跨越350个表，尽管并非所有交易都使用了所有表。不同的交易类型会触及这些表的不同子集。 &lt;/p&gt;&#xA;&lt;p&gt;鉴于这种复杂性，在&lt;a href =“ https://dzone.com/articles/the-reason-java-is-still-popular”&gt; java &lt;/a&gt;中对此进行编码。除了我的其他重要项目之外，我想在周末等要做的宠物项目，因此我必须找到捷径并确保高度可重复使用代码。&lt;/p&gt;</description>
      <pubDate>Wed, 09 Apr 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Context Search With AWS Bedrock, Cohere Model, and Spring AI】与AWS基石，Cohere模型和Spring AI一起搜索上下文搜索</title>
      <link>https://dzone.com/articles/context-search-aws-bedrock-cohere-spring-ai</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Today, we will create simple applications using the Cohere Embed Multilingual v3 model via Amazon Bedrock and Spring AI.&lt;/p&gt;&#xA;&lt;p data-end=&#34;366&#34; data-start=&#34;197&#34;&gt;We’ll skip over basic Spring concepts like bean management and starters, as the main goal of this article is to explore the capabilities of Spring AI and Amazon Bedrock.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;今天，我们将使用Amazon Bedrock和Spring AI使用Cohere嵌入的多语言V3模型来创建简单的应用程序。&lt;/p&gt;&#xA;&lt;p data-end =“ 366” data-start =“ 197”&gt;我们将跳过基本的春季概念，例如豆类管理和起动器，因为本文的主要目标是探索Spring AI和Amazon Bedrock的功能。&lt;/p&gt;。&lt;/p&gt;</description>
      <pubDate>Wed, 09 Apr 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【It&#39;s 2025: How Do You Choose Between Doris and ClickHouse?】是2025年：您如何在Doris和Clickhouse之间进行选择？</title>
      <link>https://dzone.com/articles/how-to-choose-between-doris-and-clickhouse</link>
      <description>【&lt;p&gt;Database selection is a challenge every data engineer faces.&lt;/p&gt;&#xA;&lt;p&gt;Among the many databases available, Apache Doris and ClickHouse, as two mainstream analytical databases, are often compared. Each has its strengths and is suited to different scenarios, making the choice difficult.&lt;/p&gt;】&lt;p&gt;数据库选择是每个数据工程师面对的挑战。&lt;/p&gt;&#xA;&lt;p&gt;在许多可用数据库中，Apache Doris和Clickhouse（作为两个主流分析数据库）经常被比较。每个人都有其优势，适合不同的情况，因此很难选择。&lt;/p&gt;</description>
      <pubDate>Wed, 09 Apr 2025 15:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>