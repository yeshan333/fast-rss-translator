<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Building a Platform Abstraction for AWS Networks Using Crossplane】使用交叉平面为AWS网络构建平台抽象</title>
      <link>https://dzone.com/articles/build-platform-abstraction-for-aws-networks-using-crossplane</link>
      <description>【&lt;p data-end=&#34;349&#34; data-start=&#34;162&#34;&gt;Crossplane helps platform engineers develop abstractions for developers. It is an open-source, multicloud control plane that handles interactions with cloud providers’ APIs for you.&lt;/p&gt;&#xA;&lt;p data-end=&#34;496&#34; data-start=&#34;351&#34;&gt;In this post, I’ll show how developers can create an AWS network (&lt;code data-end=&#34;422&#34; data-start=&#34;417&#34;&gt;VPC&lt;/code&gt;, &lt;code data-end=&#34;432&#34; data-start=&#34;424&#34;&gt;Subnet&lt;/code&gt;, etc.) with just a single YAML request to the Kubernetes API.&lt;/p&gt;】&lt;p data-end =“ 349” data-start =“ 162”&gt; CrossPlane帮助平台工程师为开发人员开发抽象。这是一个开源的多云控制平面，可为您处理与云提供商的API的交互。&lt;/p&gt;&#xA;&lt;p data-end =“ 496” data-start =“ 351”&gt;在这篇文章中，我将展示开发人员如何创建AWS网络（&lt;代码data-end =“ 422” data-start =“ 417”&gt; vpc &lt;/code&gt;，&lt;代码data-end-end =“ 432” data start =“ data start =” data start =“ 424” 424“&gt; subnet”&gt; subnet &lt;/coder yam yam） API。&lt;/p&gt;</description>
      <pubDate>Fri, 05 Sep 2025 20:00:12 +0000</pubDate>
    </item>
    <item>
      <title>【How to Run Selenium Tests on Selenium Grid 4 With Jenkins and Docker Compose】如何与Jenkins和Docker组成的硒网格4进行硒测试</title>
      <link>https://dzone.com/articles/selenium-grid-testing-jenkins-docker-compose</link>
      <description>【&lt;p&gt;Selenium WebDriver, Selenium Grid 4, Jenkins, and Docker Compose are popular and well-known tools. When combined, these tools are a powerful combination for web automation testing. The combination of these tools can help us set up an on-demand local infrastructure, enabling us to spin up the environment as needed for running our web automation tests at scale.&lt;/p&gt;&#xA;&lt;p&gt;Consider a scenario where we need to run multiple web automation tests on different browsers to verify the functionality and stability of the web application. Combining Selenium Grid 4 with Docker Compose can help set up browsers with a single command, allowing us to perform the required test execution smoothly with Jenkins Jobs.&lt;/p&gt;】&lt;p&gt; Selenium Webdriver，Selenium Grid 4，Jenkins和Docker Compose是受欢迎且著名的工具。合并后，这些工具是Web自动化测试的强大组合。这些工具的组合可以帮助我们建立按需本地基础架构，从而使我们能够根据需要按需要进行环境进行大规模运行我们的Web自动化测试。&lt;/p&gt;&#xA;&lt;p&gt;考虑一个方案，我们需要在不同的浏览器上运行多个Web自动化测试，以验证Web应用程序的功能和稳定性。将硒环4与Docker组合结合可以帮助通过一个命令设置浏览器，从而使我们能够通过Jenkins作业顺利执行所需的测试执行。&lt;/p&gt;</description>
      <pubDate>Fri, 05 Sep 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Meta Prompting for Agile Practitioners】元素提示敏捷从业者</title>
      <link>https://dzone.com/articles/meta-prompting-for-agile-practitioners</link>
      <description>【&lt;h2&gt;TL; DR: Meta Prompting&lt;/h2&gt;&#xA;&lt;p&gt;We’ve all been there: You’re preparing for the next Retrospective, and you turn to ChatGPT for help. “Give me some Retrospective ideas,” you type. What do you get back? Generic templates you’ve seen a hundred times before: Set the Stage, Gather Data, Generate Insights, Decide What to Do, and Close the Retrospective. (Kudos to Esther Derby and Diana Larsen for the format!)&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;The problem isn’t the AI.&amp;nbsp;&lt;/p&gt;】&lt;H2&gt; TL; DR：元提示&lt;/h2&gt;&#xA;&lt;p&gt;我们都去过那里：您正在准备下一个回顾展，然后求助于Chatgpt寻求帮助。 “给我一些回顾性的想法，”您输入。你回来什么？您以前看过一百次的通用模板：设置舞台，收集数据，生成洞察力，决定该做什么并关闭回顾展。 （格式的Esther Derby和Diana Larsen的荣誉！）&lt;/p&gt;&#xA;&lt;p&gt;问题不是AI。 &lt;/p&gt;</description>
      <pubDate>Fri, 05 Sep 2025 18:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Making String Search Easier Across Databases】使字符串搜索更轻松</title>
      <link>https://dzone.com/articles/making-string-search-easier-across-databases</link>
      <description>【&lt;p data-end=&#34;690&#34; data-start=&#34;255&#34;&gt;Searching for information in applications is rarely as simple as matching an exact string. Users don’t always remember the full text; instead, they rely on fragments. When buying a product online, for instance, they might type only the &lt;strong data-end=&#34;500&#34; data-start=&#34;491&#34;&gt;brand&lt;/strong&gt; (&lt;em data-end=&#34;513&#34; data-start=&#34;502&#34;&gt;“Samsung”&lt;/em&gt;) or only the &lt;strong data-end=&#34;536&#34; data-start=&#34;527&#34;&gt;model&lt;/strong&gt; (&lt;em data-end=&#34;552&#34; data-start=&#34;538&#34;&gt;“Galaxy S24”&lt;/em&gt;), but rarely both together. In financial systems, the same happens when looking up a transaction by just part of the description.&lt;/p&gt;&#xA;&lt;p data-end=&#34;1133&#34; data-start=&#34;692&#34;&gt;This type of partial search has become crucial for modern systems. In e-commerce, it drives product discovery. In finance, it helps locate records quickly. And in countless other domains, it shapes how people interact with data. To meet this demand, databases have evolved to provide capabilities that go beyond strict equality, allowing queries that can check whether text &lt;strong data-end=&#34;1078&#34; data-start=&#34;1066&#34;&gt;contains&lt;/strong&gt;, &lt;strong data-end=&#34;1095&#34; data-start=&#34;1080&#34;&gt;starts with&lt;/strong&gt;, or &lt;strong data-end=&#34;1113&#34; data-start=&#34;1100&#34;&gt;ends with&lt;/strong&gt; a given fragment.&lt;/p&gt;】&lt;p data-end =“ 690” data-start =“ 255”&gt;在应用程序中搜索信息很少就像匹配精确的字符串一样简单。用户并不总是记得全文；相反，他们依靠碎片。例如，当在线购买产品时，它们可能仅键入&lt;strong data-end =“ 500” data-start =“ 491”&gt; brand &lt;/strong&gt;（&lt;em data-end =“ 513” data data-start =“ 502”&gt;“ samsung” &lt;/em&gt;）或仅&lt;strong data-end =“ 536” 536“ data data-start start =” 527&gt; &lt;/strong &lt;/emtter &lt;/emtt = em em &lt;/em em &lt;/em em &lt;/em em &lt;/em&gt; data-start =“ 538”&gt;“ Galaxy S24” &lt;/em&gt;），但很少一起。在金融系统中，仅在描述的一部分查找交易时也会发生同样的事情。&lt;/p&gt;&#xA;&lt;p data-end =“ 1133” data-start =“ 692”&gt;这种类型的部分搜索对于现代系统至关重要。在电子商务中，它推动了产品发现。在金融中，它有助于快速找到记录。在无数其他域中，它塑造了人们与数据互动的方式。为了满足这一需求，数据库已经发展为提供超出严格平等的功能，允许查询可以检查文本&lt;strong data-end =“ 1078” data-start =“ 1066”&gt;包含&lt;/strong&gt; &lt;/strong&gt;，&lt;strong data-end =“ 1095” data data-data start =“ 1080” 1080“ 1080”&gt;与&lt;/strong&gt;“ strong&gt;” &lt;/strong &lt;strong data-eng &lt;strong data-eng &lt;strong data-eng &lt;strong data-engt = strong &lt;strong data-engt =“ 1113”给定片段。&lt;/p&gt;</description>
      <pubDate>Fri, 05 Sep 2025 17:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Measuring What Matters: A Strategic Lens on Transformation Metrics】衡量重要的事情：转换指标的战略视角</title>
      <link>https://dzone.com/articles/measuring-agile-ai-transformations-metrics</link>
      <description>【&lt;p&gt;&lt;em&gt;&#34;Only 16% of digital transformations improve performance and sustain gains in the long term.&#34;&lt;/em&gt; — &lt;a href=&#34;https://www.mckinsey.com/capabilities/transformation/our-insights/how-to-gain-and-sustain-a-competitive-edge-through-transformation&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;McKinsey, 2021&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Transformation efforts often falter not for lack of ambition but for lack of clarity. Metrics—when used well—serve as navigational tools that align teams, validate progress, and reveal true impact. When misused, they become noise, breeding vanity and confusion.&lt;/p&gt;】&lt;p&gt; &lt;em&gt;“从长远来看，只有16％的数字转换可以提高性能并维持增长。 target =“ _ blank”&gt; &lt;em&gt; McKinsey，2021 &lt;/em&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;转型工作通常不是因为缺乏野心而动摇，而是因为缺乏清晰度而步履蹒跚。指标 - 当使用良好时 - 将其作为导航工具，可以使团队保持一致，验证进度并揭示真正的影响。滥用时，它们会变成噪音，繁殖虚荣和混乱。&lt;/p&gt;</description>
      <pubDate>Fri, 05 Sep 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Role of Data Governance in Data Strategy: Part 4】数据治理在数据策略中的作用：第4部分</title>
      <link>https://dzone.com/articles/role-of-data-governance-in-data-strategy-part-4</link>
      <description>【&lt;p data-end=&#34;494&#34; data-start=&#34;145&#34;&gt;In the previous articles of this series, we explored the &lt;a href=&#34;https://dzone.com/articles/the-role-of-data-governance-in-data-strategy-part&#34;&gt;importance of data governance&lt;/a&gt; in managing enterprise data effectively (Part 1), &lt;a href=&#34;https://dzone.com/articles/the-role-of-data-governance-in-data-strategy-part-1&#34;&gt;how BigID supports data governance&lt;/a&gt;, particularly for data privacy, security, and classification (Part 2), and the &lt;a href=&#34;https://dzone.com/articles/the-role-of-data-governance-in-data-strategy-part-3&#34;&gt;role of Data Subject Access Rights (DSAR)&lt;/a&gt; in protecting individual privacy (Part 3). Together, these concepts emphasized the importance of visibility, control, and accountability in modern data governance.&lt;/p&gt;&#xA;&lt;p data-end=&#34;976&#34; data-start=&#34;496&#34;&gt;In this fourth installment, we shift focus to another critical pillar of data governance: Data Retention. While organizations often think of retention simply as storing data for later use, the reality is far more complex. Done right, data retention ensures compliance, cost efficiency, and stronger security. Done poorly, it creates unnecessary risks, ranging from legal exposure and privacy violations to spiraling storage costs and an expanded cybersecurity attack surface.&lt;/p&gt;】&lt;p data-end =“ 494” data-start =“ 145”&gt;在本系列的先前文章中，我们探索了&lt;a href =“ https://dzone.com/articles/the----------governance-inda-governance-in-data-nance-in-data-stata-stata-stata-strategy-part，- href =“ https://dzone.com/articles/the-role-of-data-governance-inda-data-nata-strategy-part-part-1”&gt; bigId如何支持数据治理&lt;/a&gt;，尤其是用于数据隐私，安全性和分类（第2部分）和&lt;a &lt;a href =“ https://dzone.com/articles/the-role-of-data-governance-inda-data-strategy-part-3”&gt;数据主题访问权利（DSAR）的作用&lt;/a&gt;在保护个人隐私方面（第3部分）。这些概念一起强调了现代数据治理中可见性，控制和问责制的重要性。&lt;/p&gt;&#xA;&lt;p data-end =“ 976” data-start =“ 496”&gt;在第四期，我们将重点转移到了数据治理的另一个关键支柱：数据保留。尽管组织通常将保留只是存储以供以后使用的数据，但现实却更为复杂。正确完成，数据保留可确保合规性，成本效率和更强的安全性。做得不好，它会造成不必要的风险，从法律侵犯和侵犯隐私的侵犯到螺旋式存储成本以及扩大的网络安全攻击面。&lt;/p&gt;</description>
      <pubDate>Fri, 05 Sep 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Change Data Capture for Apache Phoenix Stream】更改Apache Phoenix流的数据捕获</title>
      <link>https://dzone.com/articles/change-data-capture-for-apache-phoenix-stream</link>
      <description>【&lt;p data-end=&#34;602&#34; data-start=&#34;266&#34;&gt;Apache Phoenix is an open-source, SQL skin over &lt;a href=&#34;https://dzone.com/refcardz/hbase&#34;&gt;Apache HBase&lt;/a&gt; that enables lightning-fast OLTP (Online Transactional Processing) operations on petabytes of data using standard SQL queries. Phoenix helps combine the scalability of &lt;a href=&#34;https://dzone.com/articles/embracing-nosql-the-future-of-data-storage&#34;&gt;NoSQL&lt;/a&gt; with the familiarity and power of SQL - the best of both worlds.&lt;/p&gt;&#xA;&lt;p&gt;Apache Phoenix provides &lt;a href=&#34;https://dzone.com/articles/consistent-change-data-capture-across-multiple-tab?fromrel=true&#34;&gt;Change Data Capture&lt;/a&gt; (CDC) with&lt;a href=&#34;https://issues.apache.org/jira/browse/PHOENIX-7001&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt; PHOENIX-7001&lt;/a&gt;. The CDC design in Phoenix leverages the write-optimized Uncovered Index as well as Max Lookback features. The changes are captured in the time-ordered event of row level modifications.&lt;/p&gt;】&lt;p data-end =“ 602” data-start =“ 266”&gt; apache phoenix是&lt;a href =“ https://dzone.com/refcardz/hbase”&gt; apache hbase &lt;/a&gt;的开放式SQL皮肤&lt;/a&gt; &lt;/a&gt;使用petabytaby petabytaby petabytions persies persies petaby petabytions petaby petabytions &lt;/a&gt;凤凰有助于将&lt;a href =“ https://dzone.com/articles/embracing-nosql-the-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-future-of-data-storage”&gt; Nosql &lt;/a&gt;与SQL的熟悉和力量相结合，这是两全其美。&lt;/p&gt; &lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt; Apache Phoenix提供&lt;a href =“ https://dzone.com/articles/consistent-change-change-data-capture-capture-across-multiple-tab?fromrel=true”&gt;更改数据捕获&lt;/a&gt;（cdc）带有&lt;a href =“ href =” rel =“ noopener noreferrer” target =“ _ blank”&gt; phoenix-7001 &lt;/a&gt;。 Phoenix中的CDC设计利用了特优化的未透明索引以及最大回忆功能。这些更改是在行级修改的时序事件中捕获的。&lt;/p&gt;</description>
      <pubDate>Fri, 05 Sep 2025 14:00:05 +0000</pubDate>
    </item>
    <item>
      <title>【Build a RAG Application With LangChain and Local LLMs Powered by Ollama】使用Langchain和由Ollama提供动力的Langchain和Local LLMS构建RAG应用程序</title>
      <link>https://dzone.com/articles/rag-app-langchain-local-llms-ollama</link>
      <description>【&lt;p&gt;Local large language models (LLMs) provide significant advantages for developers and organizations. Key benefits include enhanced &lt;strong&gt;data privacy&lt;/strong&gt;, as sensitive information remains entirely within your own infrastructure, and &lt;strong&gt;offline functionality&lt;/strong&gt;, enabling uninterrupted work even without internet access. While cloud-based LLM services are convenient, running models locally gives you full control over model behavior, performance tuning, and potential cost savings. This makes them ideal for experimentation before running production workloads.&lt;/p&gt;&#xA;&lt;p&gt;The ecosystem for local LLMs has matured significantly, with several excellent options available, such as &lt;a href=&#34;https://ollama.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Ollama&lt;/a&gt;, &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/ai-foundry/foundry-local/get-started&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Foundry Local&lt;/a&gt;, &lt;a href=&#34;https://docs.docker.com/ai/model-runner/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Docker Model Runner&lt;/a&gt;, and more. &lt;span style=&#34;background-color: transparent;&#34;&gt;Most popular AI/agent frameworks, including&amp;nbsp;&lt;/span&gt;&lt;a href=&#34;https://python.langchain.com/docs/how_to/local_llms/&#34; target=&#34;_blank&#34;&gt;LangChain&lt;/a&gt;&lt;span style=&#34;background-color: transparent;&#34;&gt;&amp;nbsp;and&amp;nbsp;&lt;/span&gt;&lt;a href=&#34;https://langchain-ai.github.io/langgraph/tutorials/rag/langgraph_self_rag_local&#34; target=&#34;_blank&#34;&gt;LangGraph,&lt;/a&gt;&lt;span style=&#34;background-color: transparent;&#34;&gt;&amp;nbsp;provide integration with these local model runners, making it easier to integrate them into your projects.&lt;/span&gt;&lt;/p&gt;】&lt;p&gt;本地大型语言模型（LLMS）为开发人员和组织提供了重要的优势。关键好处包括增强&lt;strong&gt;数据隐私&lt;/strong&gt;，因为敏感信息完全保留在您自己的基础架构中，并且&lt;strong&gt;离线功能&lt;/strong&gt;，即使没有互联网访问，也可以实现不间断的工作。尽管基于云的LLM服务很方便，但在本地运行模型可以使您完全控制模型行为，性能调整和潜在的成本节省。这使其成为在运行生产工作负载之前实验的理想选择。&lt;/p&gt;&#xA;&lt;p&gt;本地LLM的生态系统已经显着成熟，有几种出色的选择，例如&lt;a href =“ https://ollama.com/” rel =“ noopener noreferrer” target =“ _ _ _ blank”&gt; ollama &lt;/a&gt;，&lt;a&gt;，&lt;a&gt;，&lt;a href =“ https://learn.microsoft.com/en-us/azure/ai-foundry/foundry/foundry-local/get-started” noreferrer“ target =” _ blank“&gt; docker模型跑步者&lt;/a&gt;等等。 &lt;span style =“背景彩色：透明;”&gt;最流行的AI/代理框架，包括&lt;/span&gt; &lt;a href =“ https：///python.langchain.com/docs/how_to/local_llms/” target =“ _ _ black”&gt; langchain&gt; langchain &lt;/a&gt; langchain &lt;/a&gt; &lt;/sparter =“ spectarent =” spectarent &lt;/sparent &lt;/sparent &lt;/sparenent &lt;/caster &lt;/and and partarent &lt;/casper &lt;/and &lt;/and &lt;/and &lt;/clast; href=&#34;https://langchain-ai.github.io/langgraph/tutorials/rag/langgraph_self_rag_local&#34; target=&#34;_blank&#34;&gt;LangGraph,&lt;/a&gt;&lt;span style=&#34;background-color: transparent;&#34;&gt; provide integration with these local model runners, making it easier to integrate them into your projects.&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 05 Sep 2025 13:00:07 +0000</pubDate>
    </item>
    <item>
      <title>【DevOps as a Platform: How to Help Developers Ship Faster Without the Chaos】DevOps作为一个平台：如何帮助开发人员在没有混乱的情况下更快地运送</title>
      <link>https://dzone.com/articles/devops-as-a-platform-how-to-help-developers-ship-f</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Imagine you&#39;re an engineer trying to ship a new feature. You need a pipeline to build, deploy, and test your code. You need infrastructure to run it. You need to check permissions, secrets, and compliance boxes. If your company doesn’t have a standardized DevOps setup, you’re probably setting all that up yourself — or copying it from the last project and hoping for the best.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Now multiply that by 50 teams. Welcome to DevOps chaos.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;想象您是一名工程师，试图运送新功能。您需要一条管道来构建，部署和测试代码。您需要基础架构来运行它。您需要检查权限，秘密和合规框。如果您的公司没有标准化的DevOps设置，则您可能自己设置了所有这些设置 - 或从上一个项目中复制它并希望获得最好的。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;现在将其乘以50个团队。欢迎来到Devops混乱。&lt;/p&gt;</description>
      <pubDate>Fri, 05 Sep 2025 12:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Toward Explainable AI (Part 7): Bridging Theory and Practice—SHAP: Bringing Clarity to Financial Decision-Making】迈向可解释的AI（第7部分）：桥接理论和实践 - 划分：使财务决策清晰</title>
      <link>https://dzone.com/articles/explainable-ai-shap-financial-decision-making</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;&lt;em&gt;Series reminder: This series explores how explainability in AI helps build trust, ensure accountability, and align with real-world needs, from foundational principles to practical use cases.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;em&gt;Previously, in Part VI: &lt;/em&gt;&lt;a href=&#34;https://dzone.com/articles/explainable-ai-what-lime-shows&#34;&gt;&lt;em&gt;What LIME Shows, and What It Leaves Out, Strengths and limits of local explanations&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;】&lt;p dir =“ ltr”&gt; &lt;em&gt;系列提醒：该系列探讨了AI中的解释性如何帮助建立信任，确保问责制并与现实需求保持一致，从基本原理到实际用例。&lt;/em&gt; &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt; &lt;em&gt;以前，在第六部分：&lt;/em&gt; &lt;a href =“ https://dzone.com/articles/explainable-whate-whate-what-what-whath-what-lime-shows”&gt; &lt;em&gt; &lt;em&gt; lime显示了什么，以及它忽略了什么，它忽略了地方的优势和限制，</description>
      <pubDate>Fri, 05 Sep 2025 11:00:08 +0000</pubDate>
    </item>
  </channel>
</rss>