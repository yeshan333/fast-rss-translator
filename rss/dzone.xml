<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【How to Enable Sybil Resistance in Your dApps on Avalanche】如何在雪崩中启用sybil抗性</title>
      <link>https://dzone.com/articles/how-to-enable-sybil-resistance-in-dapps-on-avalanche</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;If there’s one thing Web3 devs can agree on, it’s that Sybils suck. Bots and fake accounts are ruining airdrops, gaming economies, DAOs, and DeFi incentives. Everyone’s trying to fight them, but the solutions are either too centralized and non-private (KYC) or too easy to game (staking-based anti-Sybil tricks).&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;That’s where Biomapper comes in handy — an on-chain tool that links one EVM account to one human for verifying that users are real, unique humans without KYC or exposing personal data.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;如果Web3开发人员可以同意一件事，那就是Sybils很烂。机器人和虚假帐户破坏了气水，游戏经济体，Daos和Defi激励措施。每个人都在试图与之抗争，但是解决方案要么太集中和非私有化（KYC），要么太容易玩游戏（基于固定的反间隔者技巧）。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;这就是生物应用程序派上用场的地方 - 一种链上的工具，它将一个EVM帐户链接到一个人，以验证用户是真正，独特的人，而无需KYC或公开个人数据。 &lt;/p&gt;</description>
      <pubDate>Wed, 19 Feb 2025 22:15:00 +0000</pubDate>
    </item>
    <item>
      <title>【Bitwise Operators in Go】GO中的钻头操作员</title>
      <link>https://dzone.com/articles/bitwise-operators-in-go</link>
      <description>【&lt;p&gt;In low-level programming, it is common to work at the bit level. This was true in earlier days of computing and is even relevant today. Most popular languages keep provisions for bit-level operations, not only as a legacy but also as a frequently used feature in their arsenal. Direct bit-level operations are used in cryptography, system-level programming, image processing, etc. In this Golang programming tutorial, we will go into the details of bitwise operators and how to work with them in Go.&lt;/p&gt;&#xA;&lt;h2&gt;Golang Bitwise Operators&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/golang-tutorial-learn-golang-by-examples&#34;&gt;Go&lt;/a&gt; provides the following bitwise operators:&lt;/p&gt;】&lt;p&gt;在低级编程中，通常可以在位级别工作。在计算的早期，这是正确的，今天甚至很重要。大多数流行的语言都保留了比特级操作的规定，这不仅是遗产，而且是其武器库中经常使用的功能。直接的位级操作用于密码学，系统级编程，图像处理等。在本Golang编程教程中，我们将介绍钻头运营商的详细信息，以及如何与他们一起使用。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;H2&gt; Golang Bitwise Operators &lt;/h2&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/articles/golang-tutorial-learn-golang-by-examples”&gt; go &lt;/a&gt;提供以下位置操作员：&lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2025 22:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Solving Interface Challenges With the BFF Pattern】通过BFF模式解决界面挑战</title>
      <link>https://dzone.com/articles/from-complexity-to-clarity-solving-interface-chall</link>
      <description>【&lt;p&gt;Modern software applications often need to support multiple frontend UI like Web, Android, IOS, TV, and VR, each with unique requirements. Traditionally, developers have dependent on a single backend to serve all clients. However, the complexity of serving different frontends needs using a monolithic backend can result in performance bottlenecks, complicated APIs, and unnecessary data interactions.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://dzone.com/articles/backend-for-frontend-bff-pattern&#34;&gt;Backend for Frontend (BFF) architecture&lt;/a&gt; helps answer these challenges by creating a dedicated back-end service for each frontend type. Each BFF is dedicated to a specific UI kind, improving performance, UX, and overall system stability and maintainability.&lt;/p&gt;】&lt;p&gt;现代软件应用程序通常需要支持多个前端UI，例如Web，Android，iOS，TV和VR，每个UI都有独特的要求。传统上，开发人员依靠单个后端来为所有客户服务。但是，使用单片后端满足不同前端需求的复杂性可能会导致性能瓶颈，复杂的API和不必要的数据交互。&lt;/p&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/articles/backend-for-frontend-bff-pattern”&gt; Frontend（BFF）架构的后端 - 每种前端类型的端端服务。每个BFF专用于特定的UI类型，提高性能，UX和整体系统稳定性和可维护性。&lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2025 23:15:00 +0000</pubDate>
    </item>
    <item>
      <title>【Kata Containers: From Kubernetes Pods to Secure VMs】Kata容器：从Kubernetes Pods固定VM</title>
      <link>https://dzone.com/articles/kata-containers-from-kubernetes-pods-to-secure-vms</link>
      <description>【&lt;h2&gt;Introduction to Kata Containers&lt;/h2&gt;&#xA;&lt;p&gt;Kata Containers is an open-source project designed to deliver a secure container runtime environment by utilizing the virtualization layer provided by the server instance. Unlike traditional containers, Kata containers run within lightweight virtual machines (VMs) created using virtualization capabilities. This approach ensures robust isolation between the host operating system (OS) and the containers, making them a powerful choice for scenarios demanding heightened security.&lt;/p&gt;&#xA;&lt;h2&gt;The Core Difference: Kata vs. Conventional Containers&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/container-types-and-use-cases&#34;&gt;Conventional containers&lt;/a&gt; are software packages that share the host OS kernel for isolated execution. They achieve isolation using Linux technologies such as network namespaces and c-groups.&amp;nbsp;&lt;/p&gt;】&lt;H2&gt; kata容器简介&lt;/h2&gt;&#xA;&lt;p&gt; KATA容器是一个开源项目，旨在通过使用服务器实例提供的虚拟化层来提供安全的容器运行时环境。与传统容器不同，Kata容器在使用虚拟化功能创建的轻质虚拟机（VM）中运行。这种方法可确保主机操作系统（OS）和容器之间的稳健隔离，使其成为需要增强安全性的方案的有力选择。&lt;/p&gt;&#xA;&lt;H2&gt;核心差异：Kata与常规容器&lt;/H2&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/articles/container-types-and-use-cases”&gt;常规容器&lt;/a&gt;是共享主机OS内核的软件包。他们使用Linux技术（例如网络名称空间和C组）实现隔离。 &lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2025 19:15:02 +0000</pubDate>
    </item>
    <item>
      <title>【Implementing SOLID Principles in Android Development】在Android开发中实施坚实的原则</title>
      <link>https://dzone.com/articles/solid-principles-in-android-development</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Writing software is an act of creation, and Android development is no exception. It’s about more than just making something work. It’s about designing applications that can grow, adapt, and remain manageable over time.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;As an Android developer who has faced countless architectural challenges, I’ve discovered that adhering to the SOLID principles can transform even the most tangled codebases into clean systems. These are not abstract principles, but result-oriented and reproducible ways to write robust, scalable, and maintainable code.&lt;/p&gt;】&lt;p dir =“ ltr”&gt;写作软件是创建的行为，而Android开发也不例外。这不仅仅是使某些工作。这是关于设计可以随着时间的推移而增长，适应和保持易于管理的应用程序。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;作为面临无数体系结构挑战的Android开发人员，我发现遵守坚实的原理可以将最纠结的代码库转换为干净的系统。这些不是抽象的原则，而是以结果为导向和可再现的方法来编写强大，可扩展和可维护的代码。&lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2025 21:45:00 +0000</pubDate>
    </item>
    <item>
      <title>【AI Agents: Future of Automation or Overhyped Buzzword?】AI代理：自动化的未来还是夸张的流行语？</title>
      <link>https://dzone.com/articles/ai-agents-future-of-automation-or-overhyped-buzzword</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;In a world obsessed with artificial intelligence, there&#39;s a new player in town — AI agents. But before you roll your eyes and think, &#34;Great, another tech term to pretend I understand at meetings,&#34; let’s break it down.&lt;/p&gt;&#xA;&lt;h2 data-pm-slice=&#34;1 1 []&#34;&gt;&lt;strong&gt;What the Heck Are AI Agents?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Imagine you have a really smart assistant — not just one that tells you the weather or suggests a new Netflix show — but one that thinks, plans, and acts &lt;em&gt;without you having to spell everything out.&lt;/em&gt; That’s what AI agents are all about. Unlike simple chatbots or automation scripts that follow rigid, predefined paths, AI agents are designed to be &lt;strong&gt;autonomous&lt;/strong&gt;. They don’t just react; they perceive, decide, and take action based on goals.&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt;在一个迷恋人工智能的世界中，镇上有一个新玩家 -  AI代理商。但是，在您翻白眼之前，“太好了，“很棒，要假装我在会议上理解的另一个技术术语”，让我们分解一下。&lt;/p&gt;&#xA;&lt;h2 data-pm-slice =“ 1 1 []&gt; &lt;strong&gt; AI代理是什么？&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p data-pm-slice =“ 1 1 []&gt;想象您有一个非常聪明的助手 - 不仅是告诉您天气或暗示新的Netflix展览的助手 - 而且一个思考，计划和行动&lt;em&gt;的助手&lt;/em&gt; &lt;/em&gt;，这就是AI代理的全部内容。与遵循严格的预定义路径的简单聊天机器人或自动化脚本不同，AI代理被设计为&lt;strong&gt;自主&lt;/strong&gt;。他们不仅反应；他们认为，决定并根据目标采取行动。&lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2025 20:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Scaling Image Deduplication: Finding Needles in a Haystack】缩放图像重复数据删除：在干草堆中查找针头</title>
      <link>https://dzone.com/articles/scaling-image-deduplication-finding-needles-in-a-haystack</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In the current AI generation, where organizations deal with a vast inventory of images, identifying duplicates can be a daunting task. Distributed deduplication at scale is essential for optimizing storage, reducing redundancy, and maintaining data integrity. This article provides insight into the architectural design and practical implementation for deduplicating 100 million images efficiently using state-of-the-art tools and approaches.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;Challenges in Image Deduplication&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 dir=&#34;ltr&#34;&gt;Scale&lt;/h3&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Processing millions or even billions of images demands:&lt;/p&gt;】&lt;p dir =“ ltr”&gt;在当前的AI一代中，组织处理大量图像库存，识别重复项可能是一项艰巨的任务。大规模分布式重复数据删除对于优化存储，降低冗余和维持数据完整性至关重要。本文提供了有关使用最先进的工具和方法有效地重复设计1亿张图像的建筑设计和实践实施的见解。&lt;/p&gt;&#xA;&lt;H2&gt; &lt;strong&gt;图像重复数据删除中的挑战&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;h3 dir =“ ltr”&gt;比例&lt;/h3&gt;&#xA;&lt;p dir =“ ltr”&gt;处理数百万甚至数十亿图像的处理：&lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【An Introduction to Object Mutation in JavaScript】JavaScript中对象突变的简介</title>
      <link>https://dzone.com/articles/an-introduction-to-object-mutation-in-javascript</link>
      <description>【&lt;p&gt;In programming, object mutation implies that an object&#39;s state or data is mutated after creation. In other words, the operation that changes the attributes of an object in JavaScript is known as object mutation. Object mutation alters an object&#39;s values directly, making it challenging, particularly in applications where multiple operations may try to read from or write to an object simultaneously.&lt;/p&gt;&#xA;&lt;p&gt;This article presents a discussion on object mutation in JavaScript with relevant code examples wherever necessary.&lt;/p&gt;】&lt;p&gt;在编程中，对象突变意味着对象的状态或数据在创建后被突变。换句话说，更改JavaScript中对象属性的操作称为对象突变。对象突变直接改变对象的值，使其具有挑战性，尤其是在多个操作可能尝试同时读取或写入对象的应用程序中。&lt;/p&gt;&#xA;&lt;p&gt;本文在JavaScript中与相关代码示例中的对象突变进行了讨论。&lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2025 15:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【How Open Source Can Elevate Your Career as a Software Engineer】开源如何提升您作为软件工程师的职业</title>
      <link>https://dzone.com/articles/open-source-software-engineer-career</link>
      <description>【&lt;p data-pm-slice=&#34;1 1 []&#34;&gt;Advancing in a software engineering career can be a daunting challenge. Many engineers find themselves stuck, unsure of what steps to take to move from a mid-level role to senior positions such as staff, principal, or distinguished engineer. While technical knowledge is essential, the real differentiators are the skills that allow engineers to build scalable, maintainable, and collaborative software solutions.&lt;/p&gt;&#xA;&lt;p&gt;Open source provides an ideal platform for mastering these crucial skills. It forces engineers to write clean, maintainable code, work within distributed teams, document effectively, and apply industry best practices that lead to software longevity. Some of the most successful open-source projects have been maintained for decades, demonstrating principles that can be used in any professional setting.&lt;/p&gt;】&lt;p data-pm-slice =“ 1 1 []&gt;在软件工程职业中前进可能是一个艰巨的挑战。许多工程师发现自己陷入困境，不确定要从中级角色到高级职位（例如员工，校长或杰出工程师）采取哪些步骤。尽管技术知识是必不可少的，但真正的差异化者是允许工程师构建可扩展，可维护和协作软件解决方案的技能。&lt;/p&gt;&#xA;&lt;p&gt;开源提供了掌握这些关键技能的理想平台。它迫使工程师编写清洁，可维护的代码，在分布式团队中工作，有效地文件以及应用行业最佳实践，从而导致软件寿命。几十年来一直维护了一些最成功的开源项目，证明了可以在任何专业环境中使用的原则。&lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2025 16:15:00 +0000</pubDate>
    </item>
    <item>
      <title>【Convert Stored Procedures and Functions From SQL Server to PostgreSQL】将存储过程和功能从SQL Server转换为PostgreSQL</title>
      <link>https://dzone.com/articles/convert-stored-procedures-sql-server-to-postgresql</link>
      <description>【&lt;p&gt;&lt;span&gt;Stored procedures and functions are implementing the business logic of the database. When migrating the SQL Server database to PostgreSQL, you will need to convert stored procedures and functions properly, paying attention to parameter handling, rowset retrieval, and other specific syntax constructions.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dzone.com/whitepapers/ms-sql-server-simplified-performance-security-amp&#34;&gt;&lt;span&gt;SQL Server&lt;/span&gt;&lt;/a&gt;&lt;span&gt; uses a dialect of SQL called Transact-SQL (or T-SQL) for stored procedures and functions, while PostgreSQL uses Procedural Language/PostgreSQL (or PL/pgSQL) for the same. These languages have significantly different syntax and capabilities, so stored procedures and functions must be carefully analyzed and converted.&lt;/span&gt;&lt;/p&gt;】&lt;p&gt; &lt;span&gt;存储的过程和功能正在实现数据库的业务逻辑。将SQL Server数据库迁移到PostgreSQL时，您需要正确转换存储过程和功能，并注意参数处理，Rowset检索和其他特定的语法构造。 &lt;/span&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;a href =“ https://dzone.com/whitepapers/mss-sql-server-simplified-performance-security-amp”&gt; &lt;span&gt; sql server &lt;/span&gt; &lt;/a&gt; &lt;span&gt;使用用于存储过程和函数的称为Transact-SQL（或T-SQL）的SQL的方言，而PostgreSQL使用程序语言/PostgreSQL（或pl/pgsql）相同。这些语言具有明显不同的语法和功能，因此必须仔细分析和转换存储过程和功能。&lt;/span&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2025 18:30:00 +0000</pubDate>
    </item>
  </channel>
</rss>