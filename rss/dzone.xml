<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【An Interview About Navigating the Cloud-Native Ecosystem】关于云原生生态系统的采访</title>
      <link>https://dzone.com/articles/navigating-the-cloud-native-ecosystem</link>
      <description>【&lt;p&gt;In this interview with Julian Fischer, CEO of the cloud computing and automation company &lt;a href=&#34;https://anynines.com&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;anynines GmbH&lt;/a&gt;, we explore the evolving landscape of cloud-native technologies with a strong focus on the roles of Kubernetes and Cloud Foundry in modern enterprise environments.&lt;/p&gt;&#xA;&lt;h2&gt;About the Interviewee&lt;/h2&gt;&#xA;&lt;p&gt;The interviewee, Julian Fischer, has extensive experience in Cloud Foundry and Kubernetes ops. Julian leads anynines in helping organizations operate applications at scale. Under his guidance, they&#39;re also pioneering advancements in managing data services across many Kubernetes clusters via the open-source &lt;a href=&#34;https://klutch.io&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Klutch project&lt;/a&gt;.&lt;/p&gt;】&lt;p&gt;在对云计算和自动化公司 &lt;a href=&#34;https://anynines.com&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;anynines GmbH&lt;/a&gt; 首席执行官 Julian Fischer 的采访中，我们探索云原生技术不断发展的前景，重点关注 Kubernetes 和 Cloud Foundry 在现代企业环境中的作用。&lt;/p&gt;&#xA;&lt;h2&gt;关于受访者&lt;/h2&gt;&#xA;&lt;p&gt;受访者 Julian Fischer 在 Cloud Foundry 和 Kubernetes 运营方面拥有丰富的经验。 Julian 在帮助组织大规模运营应用程序方面处于领先地位。在他的指导下，他们还通过开源 &lt;a href=&#34;https://klutch.io&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Klutch 项目在跨多个 Kubernetes 集群管理数据服务方面取得了开创性进展&lt;/a&gt;.&lt;/p&gt;</description>
      <pubDate>Wed, 16 Oct 2024 17:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Automate Azure Databricks Unity Catalog Permissions at the Catalog Level】在目录级别自动化 Azure Databricks Unity 目录权限</title>
      <link>https://dzone.com/articles/automate-databricks-unity-catalog-permissions</link>
      <description>【&lt;p&gt;&lt;strong&gt;&lt;em&gt;Disclaimer:&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;&amp;nbsp;All the views and opinions expressed in the blog belong&amp;nbsp;&lt;/em&gt;&lt;strong&gt;&lt;em&gt;solely&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;&amp;nbsp;to the author and not necessarily to the author&#39;s employer or any other group or individual. This article is&amp;nbsp;&lt;/em&gt;&lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;&amp;nbsp;a promotion for any cloud/data management platform. All the images and code snippets are publicly available on the Azure/Databricks website&lt;/em&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2&gt;What Is Unity Catalog in Databricks?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.databricks.com/product/unity-catalog&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Databricks Unity Catalog&lt;/a&gt; is a data cataloging tool that helps manage and organize data across an organization in a simple, secure way. It allows companies to keep track of all their data, making it easier to find, share, and control who can access it. Unity Catalog works across different cloud storage systems and lets teams manage permissions, governance, and data access from one place, ensuring data is used safely and efficiently.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;&lt;strong&gt;&lt;em&gt;免责声明：&lt;/em&gt;&lt;/strong&gt;&lt;em&gt; 博客中表达的所有观点和意见&lt;/em&gt;&lt;strong&gt;&lt;em&gt;仅代表&lt;/em&gt;&lt;/strong &gt;&lt;em&gt; 向作者提供，但不一定向作者的雇主或任何其他团体或个人提供。本文并非针对任何云/数据管理平台的宣传。&lt;/em&gt;&lt;strong&gt;&lt;em&gt;并非&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;。所有图像和代码片段均可在 Azure/Databricks 网站上公开获取&lt;/em&gt;&lt;em&gt;。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Databricks 中的 Unity 目录是什么？&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.databricks.com/product/unity-catalog&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Databricks Unity Catalog&lt;/a&gt; 是一个数据编目工具，可帮助以简单、安全的方式管理和组织整个组织的数据。它允许公司跟踪所有数据，从而更轻松地查找、共享和控制谁可以访问这些数据。 Unity Catalog 可以跨不同的云存储系统工作，让团队可以从一个地方管理权限、治理和数据访问，确保安全高效地使用数据。 &lt;/p&gt;</description>
      <pubDate>Wed, 16 Oct 2024 23:15:07 +0000</pubDate>
    </item>
    <item>
      <title>【Enhancing Agile Software Development Through Effective Visual Content】通过有效的视觉内容增强敏捷软件开发</title>
      <link>https://dzone.com/articles/enhancing-agile-software-development-through-effec</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Agile has emerged as one of the go-to approaches for software development teams worldwide in recent years. &lt;a href=&#34;https://www.statista.com/statistics/1233917/software-development-methodologies-practiced/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;According to Statista&lt;/a&gt;, it’s second only to DevOps/DevSecOps and beats other approaches like Waterfall and Lean methodology.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;This is not unsurprising. Organizations are increasingly looking to stay competitive, and Agile’s emphasis on collaboration, iteration, customer involvement, and delivering value early resonates with fast-paced teams.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;近年来，敏捷已成为全球软件开发团队的首选方法之一。 &lt;a href=&#34;https://www.statista.com/statistics/1233917/software-development-methodologies-practiced/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;根据 Statista&lt;/a&gt;，排名第二仅适用于 DevOps/DevSecOps，并且击败了瀑布和精益方法等其他方法。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;这并不奇怪。组织越来越希望保持竞争力，敏捷对协作、迭代、客户参与和尽早交付价值的重视与快节奏的团队产生了共鸣。&lt;/p&gt;</description>
      <pubDate>Wed, 16 Oct 2024 18:45:07 +0000</pubDate>
    </item>
    <item>
      <title>【Vaadin: The Battery-Included, Server-Side AJAX Framework】Vaadin：包含电池的服务器端 AJAX 框架</title>
      <link>https://dzone.com/articles/vaadin-the-battery-included-server-side-ajax-frame</link>
      <description>【&lt;p&gt;I&#39;ve written a lot about &lt;a href=&#34;https://vaadin.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Vaadin&lt;/a&gt;. I was so enthusiastic that I wrote the &lt;a href=&#34;https://www.amazon.fr/Learning-Vaadin-Nicolas-Frankel/dp/1849515220&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;first book&lt;/a&gt; about it (besides the Book of Vaadin), its &lt;a href=&#34;https://www.amazon.fr/Learning-Vaadin-Second-Nicolas-Frankel/dp/1782169776&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;updated edition&lt;/a&gt; for Vaadin 7, and a &lt;a href=&#34;https://morevaadin.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;companion website&lt;/a&gt;. Still, I&#39;m amazed that so many people in the JVM world have never heard of it.&lt;/p&gt;&#xA;&lt;p&gt;In this post, I&#39;d like to introduce Vaadin in the context of AJAX and SSR.&lt;/p&gt;】&lt;p&gt;我写了很多关于 &lt;a href=&#34;https://vaadin.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Vaadin&lt;/a&gt; 的文章。我非常热情，以至于写了&lt;a href=&#34;https://www.amazon.fr/Learning-Vaadin-Nicolas-Frankel/dp/1849515220&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;第一本书&lt; /a&gt; 关于它（除了 Vaadin 之书），它的 &lt;a href=&#34;https://www.amazon.fr/Learning-Vaadin-Second-Nicolas-Frankel/dp/1782169776&#34; rel=&#34;noopener noreferrer&#34; 目标=&#34;_blank&#34;&gt;Vaadin 7 的更新版本&lt;/a&gt;，以及&lt;a href=&#34;https://morevaadin.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;配套网站&lt;/a&gt;。尽管如此，令我惊讶的是 JVM 世界中有这么多人从未听说过它。&lt;/p&gt;&#xA;&lt;p&gt;在这篇文章中，我想在 AJAX 和 SSR 的背景下介绍 Vaadin。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Oct 2024 14:45:13 +0000</pubDate>
    </item>
    <item>
      <title>【Containers vs. Virtual Machines: Key Differences and Use Cases】容器与虚拟机：主要区别和用例</title>
      <link>https://dzone.com/articles/containers-vs-virtual-machines</link>
      <description>【&lt;p&gt;With all this buzz around technology, there is a discussion around containers versus virtual machines (VMs). Containers and VMs are both virtualization technologies that package computing environments housing various IT components and isolate them from the underlying system. However, these tools have separate strengths and weaknesses, making them suitable for different applications.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;By distinguishing between containers and VMs, you can deploy applications faster, streamline troubleshooting processes, allocate resources more efficiently, and maintain system security.&lt;/p&gt;】&lt;p&gt;随着围绕技术的所有讨论，围绕容器与虚拟机 (VM) 展开了讨论。容器和虚拟机都是虚拟化技术，将容纳各种IT组件的计算环境打包起来，并将其与底层系统隔离。然而，这些工具都有各自的优点和缺点，使它们适合不同的应用程序。 &lt;/p&gt;&#xA;&lt;p&gt;通过区分容器和虚拟机，您可以更快地部署应用程序、简化故障排除流程、更有效地分配资源并维护系统安全。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Oct 2024 11:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【GitHub Copilot Security and Privacy Concerns: Understanding the Risks and Best Practices】GitHub Copilot 安全和隐私问题：了解风险和最佳实践</title>
      <link>https://dzone.com/articles/github-copilot-security-and-privacy-concerns-under</link>
      <description>【&lt;p&gt;AI-powered code completion tools like &lt;a href=&#34;https://blog.gitguardian.com/crappy-code-crappy-copilot/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub Copilot&lt;/a&gt;, co-developed by GitHub and OpenAI, likely need no introduction. Developers are rapidly embracing this evolving technology to aid them in their work. Copilot and other Large Language Model (LLM) based coding assistants suggest lines of code and entire functions, saving a lot of time looking up specific formulations or helping scaffold common structures in the code. It is also great for helping a team write documentation.&lt;/p&gt;&#xA;&lt;p&gt;However, is Copilot secure? As beneficial as it may be, it also comes with significant security and privacy concerns that individual developers and organizations must be aware of. As &lt;a href=&#34;https://en.wikipedia.org/wiki/God_Emperor_of_Dune?ref=blog.gitguardian.com&#34; target=&#34;_blank&#34;&gt;Frank Herbert put it in &#34;God Emperor of Dune&lt;/a&gt;&#34; (the 4th book in the Dune saga):&lt;/p&gt;】&lt;p&gt;人工智能驱动的代码完成工具，例如 &lt;a href=&#34;https://blog.gitguardian.com/crappy-code-crappy-copilot/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub Copilot&lt;/ a&gt;，由 GitHub 和 OpenAI 共同开发，可能不需要介绍。开发人员正在迅速采用这种不断发展的技术来帮助他们的工作。 Copilot 和其他基于大型语言模型 (LLM) 的编码助手会建议代码行和整个函数，从而节省大量查找特定公式或帮助构建代码中常见结构的时间。它也非常适合帮助团队编写文档。&lt;/p&gt;&#xA;&lt;p&gt;但是，Copilot 安全吗？尽管它可能是有益的，但它也带来了个人开发人员和组织必须意识到的重大安全和隐私问题。正如弗兰克·赫伯特在《沙丘神皇》中所说的那样（沙丘传奇的第四本书）：&lt;/p&gt;</description>
      <pubDate>Thu, 17 Oct 2024 18:00:10 +0000</pubDate>
    </item>
    <item>
      <title>【Three Habits of Highly Effective Observability Teams】高效可观察团队的三个习惯</title>
      <link>https://dzone.com/articles/habits-of-effective-observability-teams</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;As organizations adopt microservices and containerized architectures, they often realize that they need to rethink their approach to basic operational tasks like security or observability. It makes sense: in a world where developers – rather than operations teams – are keeping applications up and running, and where systems are highly distributed, ephemeral, and interconnected, how can you take the same approach you have in the past? From a technology perspective, there has been a clear shift to open source standards, especially in the realm of observability. Protocols like OpenTelemetry and Prometheus, and agents like &lt;a href=&#34;https://chronosphere.io/fluent-bit/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Fluent Bit&lt;/a&gt;, are now the norm – according to the &lt;a href=&#34;https://www.cncf.io/reports/cncf-annual-survey-2023/#findings&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;2023 CNCF survey&lt;/a&gt;, Prometheus usage increased to 57% adoption in production workloads, with OpenTelemetry and Fluent both at 32% adoption in production.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;But open source tools alone can’t help organizations transform their observability practices. As I’ve had the opportunity to work with organizations who have solved the challenge of observability at scale, I’ve seen a few common trends in how these companies operate their observability practices. Let&#39;s dig in.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;当组织采用微服务和容器化架构时，他们常常意识到需要重新考虑处理安全性或可观察性等基本操作任务的方法。这是有道理的：在一个由开发人员（而不是运营团队）负责保持应用程序正常运行，并且系统高度分布式、短暂且互连的世界中，您如何才能采取与过去相同的方法？从技术角度来看，已经明显转向开源标准，特别是在可观察性领域。像 OpenTelemetry 和 Prometheus 这样的协议，以及像 &lt;a href=&#34;https://chronosphere.io/fluent-bit/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Fluent Bit&lt;/a&gt; 这样的代理，现在已经成为常态– 根据&lt;a href=&#34;https://www.cncf.io/reports/cncf-annual-survey-2023/#findings&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;2023 CNCF 调查&lt;/a &gt;，Prometheus 在生产工作负载中的使用率增加到 57%，而 OpenTelemetry 和 Fluent 在生产中的采用率均为 32%。 &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;但仅靠开源工具无法帮助组织转变其可观察性实践。由于我有机会与大规模解决可观察性挑战的组织合作，我看到了这些公司如何运作可观察性实践的一些共同趋势。让我们深入研究一下。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Oct 2024 20:00:09 +0000</pubDate>
    </item>
    <item>
      <title>【Web GenAI Microservices Creation: An Overview】Web GenAI 微服务创建：概述</title>
      <link>https://dzone.com/articles/web-genai-microservice-creation</link>
      <description>【&lt;ol&gt;&#xA; &lt;li&gt;This article will show you how to use GenAI from your browser to create and run a microservice in about a minute. Here is what you&#39;ll learn:&amp;nbsp;&lt;/li&gt;&#xA; &lt;li&gt;Provide a &lt;strong&gt;prompt&lt;/strong&gt; to a cloud-based microservice appliance, and you get a system with a running database, a web app, and an API.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Collaborate&lt;/strong&gt; with stakeholders using the web app.&lt;/li&gt;&#xA; &lt;li&gt;&lt;strong&gt;Iterate&lt;/strong&gt; instantly, to get the requirements right.&lt;/li&gt;&#xA; &lt;li&gt;Download the created project, and &lt;strong&gt;customize it in your IDE&amp;nbsp;&lt;/strong&gt;to build out the system using &lt;strong&gt;Python and Rules&lt;/strong&gt; — 40x more concise than code. &amp;nbsp;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;All of this is open source. &amp;nbsp;No runtime or license fees.&lt;/p&gt;&#xA;&lt;h2&gt;Microservices Creation: Get the Requirements Right&lt;/h2&gt;&#xA;&lt;p&gt;We&#39;ve all seen many projects fail due to difficulties in getting the requirements right. Let&#39;s explore that.&lt;/p&gt;】&lt;ol&gt;&#xA; &lt;li&gt;本文将向您展示如何在浏览器中使用 GenAI 在大约一分钟内创建和运行微服务。您将学到以下内容：&lt;/li&gt;&#xA; &lt;li&gt;向基于云的微服务设备提供&lt;strong&gt;提示&lt;/strong&gt;，您将获得一个包含正在运行的数据库、网络应用和 API 的系统。&lt;/li&gt;&#xA; &lt;li&gt;使用网络应用与利益相关者&lt;strong&gt;协作&lt;/strong&gt;。&lt;/li&gt;&#xA; &lt;li&gt;立即迭代&lt;/strong&gt;，以获得正确的需求。&lt;/li&gt;&#xA; &lt;li&gt;下载创建的项目，并&lt;strong&gt;在 IDE 中对其进行自定义&lt;/strong&gt;，以使用 &lt;strong&gt;Python 和规则&lt;/strong&gt;构建系统 - 比代码简洁 40 倍。  &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;所有这些都是开源的。  没有运行时间或许可费用。&lt;/p&gt;&#xA;&lt;h2&gt;微服务创建：满足需求&lt;/h2&gt;&#xA;&lt;p&gt;我们都见过许多项目由于难以满足正确的需求而失败。让我们来探讨一下。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Oct 2024 17:00:09 +0000</pubDate>
    </item>
    <item>
      <title>【8 Best Practices for Automation Testing】自动化测试的 8 个最佳实践</title>
      <link>https://dzone.com/articles/8-best-practices-for-automation-testing</link>
      <description>【&lt;p&gt;Automated testing has emerged as a reliable and efficient alternative to manual testing. We heard testers vouching for a less time-consuming and more accurate testing option, which would help them excel timely delivery of quality products.&lt;/p&gt;&#xA;&lt;p&gt;Automation testing is not just an automated approach to testing, it has also been recognized as a viable solution for enhancing reliability and efficiency in the software domain.&lt;/p&gt;】&lt;p&gt;自动化测试已成为手动测试的可靠且高效的替代方案。我们听到测试人员保证有一种更省时、更准确的测试选项，这将有助于他们及时交付优质产品。&lt;/p&gt;&#xA;&lt;p&gt;自动化测试不仅仅是一种自动化测试方法，它还被认为是提高软件领域可靠性和效率的可行解决方案。&lt;/p&gt;</description>
      <pubDate>Thu, 17 Oct 2024 16:15:03 +0000</pubDate>
    </item>
    <item>
      <title>【Should You Use AI Code Review Tools?】你应该使用人工智能代码审查工具吗？</title>
      <link>https://dzone.com/articles/should-you-use-ai-code-review-tools</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Artificial intelligence (AI) is entering various industries, offering numerous advantages to fields like software coding and development. Today, many development teams have adopted AI code review tools and noticed how much faster they catch errors and improve code quality. Yet, with any new technology, there are questions about its limitations, especially with security and accuracy.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Understanding AI Code Review Tools&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/comparison-of-various-ai-code-generation-tools-ava&#34;&gt;AI coding tools&lt;/a&gt; are software solutions that leverage artificial intelligence to analyze and improve code. Traditionally, code reviews require peers or senior developers to conduct this process manually, but it can be time-consuming and prone to human oversight.&amp;nbsp;&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;人工智能 (AI) 正在进入各个行业，为软件编码和开发等领域提供众多优势。如今，许多开发团队已经采用了人工智能代码审查工具，并注意到它们发现错误和提高代码质量的速度有多快。然而，任何新技术都存在其局限性的问题，特别是在安全性和准确性方面。&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;了解 AI 代码审查工具&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/comparison-of-various-ai-code- Generation-tools-ava&#34;&gt;AI 编码工具&lt;/a&gt;是软件解决方案利用人工智能来分析和改进代码。传统上，代码审查需要同行或高级开发人员手动执行此过程，但这可能非常耗时并且容易受到人为监督。 &lt;/p&gt;</description>
      <pubDate>Thu, 17 Oct 2024 19:00:11 +0000</pubDate>
    </item>
  </channel>
</rss>