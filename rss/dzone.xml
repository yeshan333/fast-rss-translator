<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【PHP Opcode: Improve Application Performance Without Changing Your Code】PHP Opcode：在不更改代码的情况下提高应用程序性能</title>
      <link>https://dzone.com/articles/php-opcode-improve-application-performance</link>
      <description>【&lt;p&gt;The PHP opcode generated by the PHP engine is strongly influenced by the way you write your code, not only in terms of the number of statements to accomplish a task. Clearly, it matters a lot, and I think it’s obvious to you.&lt;/p&gt;&#xA;&lt;p&gt;What could be less obvious is that even the syntax of the code can completely change the generated opcode causing a lot of overhead for the machine’s CPU to execute the exact same code.&lt;/p&gt;】&lt;p&gt;PHP 引擎生成的 PHP 操作码很大程度上受到编写代码的方式的影响，而不仅仅是完成任务的语句数量。显然，这很重要，我认为这对您来说是显而易见的。&lt;/p&gt;&#xA;&lt;p&gt;不太明显的是，即使代码的语法也可以完全改变生成的操作码，从而导致机器的 CPU 执行完全相同的代码产生大量开销。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Oct 2024 16:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Languages for Domain Experts, Not Just for Programmers】适合领域专家的语言，而不仅仅是程序员的语言</title>
      <link>https://dzone.com/articles/languages-for-domain-experts-not-just-programmers</link>
      <description>【&lt;p&gt;Productivity has improved each time programming languages have raised the level of abstraction. This trend continues today with languages that narrow the scope they address — referred to as &lt;a href=&#34;https://dzone.com/articles/evolving-domain-specific-languages&#34;&gt;domain-specific languages (DSLs)&lt;/a&gt;. However, many of these DSLs are built by developers for developers and tend to concentrate on the solution domain, like code.&lt;/p&gt;&#xA;&lt;p&gt;Even better results can be achieved when a DSL is closely aligned with the problem domain — raising abstraction beyond the code. Such languages foster collaboration, enable domain experts to verify and validate their designs, and, in many cases, allow the generation of code, configurations, tests, reports, and more.&lt;/p&gt;】&lt;p&gt;每当编程语言提高抽象级别时，生产力就会提高。如今，这种趋势仍在继续，语言缩小了其处理范围，称为&lt;a href=&#34;https://dzone.com/articles/evolving-domain-specific-languages&#34;&gt;特定领域语言 (DSL)&lt;/a &gt;。然而，其中许多 DSL 是由开发人员为开发人员构建的，并且往往专注于解决方案领域，例如代码。&lt;/p&gt;&#xA;&lt;p&gt;当 DSL 与问题域紧密结合时，甚至可以取得更好的结果——将抽象提升到代码之外。此类语言促进协作，使领域专家能够验证和验证他们的设计，并且在许多情况下，允许生成代码、配置、测试、报告等。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Oct 2024 18:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【Close Site Search Indexing via Kubernetes HAProxy Ingress】通过 Kubernetes HAProxy Ingress 关闭站点搜索索引</title>
      <link>https://dzone.com/articles/close-site-search-indexing-via-kubernetes-haproxy</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In &lt;a href=&#34;https://dzone.com/refcardz/getting-started-kubernetes&#34;&gt;Kubernetes&lt;/a&gt;, Ingress resources are frequently used as traffic controllers, providing external access to services within the cluster. Ingress is essential for routing incoming traffic to your service; however, there may be scenarios in which you want to prevent search engines from indexing your service&#39;s content: it might be a development environment or something else.&lt;br&gt;&lt;br&gt;&lt;img data-new=&#34;false&#34; data-mimetype=&#34;image/png&#34; data-creationdateformatted=&#34;10/22/2024 06:16 PM&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/17998007-1729621006889.png&#34; data-size=&#34;269978&#34; data-id=&#34;17998007&#34; class=&#34;fr-fic fr-dib lazyload&#34; data-image=&#34;true&#34; data-sizeformatted=&#34;270.0 kB&#34; data-creationdate=&#34;1729621007697&#34; data-type=&#34;temp&#34; data-modificationdate=&#34;null&#34; data-name=&#34;1729621006889.png&#34; style=&#34;width: 533px;&#34; alt=&#34;Title image&#34; data-src=&#34;https://dz2cdn1.dzone.com/storage/temp/17998007-1729621006889.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;This blog post will walk you through the process of blocking your site&#39;s indexing on Kubernetes Ingress using robots.txt file, preventing search engine bots from crawling and indexing your content.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;在 &lt;a href=&#34;https://dzone.com/refcardz/getting-started-kubernetes&#34;&gt;Kubernetes&lt;/a&gt; 中，Ingress 资源经常用作流量控制器，提供外部访问集群内的服务。 Ingress 对于将传入流量路由到您的服务至关重要；但是，在某些情况下，您可能希望阻止搜索引擎对您的服务内容建立索引：它可能是开发环境或其他环境。&lt;br&gt;&lt;br&gt;&lt;img data-new=&#34;false&#34; data-mimetype=&#34;图片/png&#34; data-creationdateformatted=&#34;10/22/2024 06:16 PM&#34; data-url=&#34;https://dz2cdn1.dzone.com/storage/temp/17998007-1729621006889.png&#34; data-size=&#34;269978 “ data-id =“ 17998007” class =“ fr-fic fr-dib 延迟加载” data-image =“ true” data-sizeformatted =“ 270.0 kB” data-creationdate =“ 1729621007697” data-type =“ temp” data-修改日期=“空”数据名称=“1729621006889.png”样式=“宽度：533px;” alt=&#34;标题图片&#34; data-src=&#34;https://dz2cdn1.dzone.com/storage/temp/17998007-1729621006889.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;这篇博文将引导您完成使用 robots.txt 文件在 Kubernetes Ingress 上阻止网站索引的过程，从而防止搜索引擎机器人抓取您的内容并将其编入索引。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Oct 2024 20:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【Fast Flow Conf 2024: Shaping the Future of Platforms and Teams】Fast Flow Conf 2024：塑造平台和团队的未来</title>
      <link>https://dzone.com/articles/fast-flow-conf-future-of-platforms-and-teams</link>
      <description>【&lt;div data-breakout=&#34;normal&#34;&gt;&#xA; &lt;p dir=&#34;auto&#34;&gt;I had great fun at the recent Fast Flow Conference. This conference focuses on the approach and methodologies described in Team Topologies by Matthew Skelton and Manuel Pais, and it brings together an eclectic mix of folks from platform engineering, product management, engineering management, business analysis, agile coaching, and more.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div data-hook=&#34;rcv-block1&#34; type=&#34;paragraph&#34;&gt;&#xA; &lt;p dir=&#34;auto&#34;&gt;The presentations were amazing, and all our chats at the booth and around the venue were super interesting. I’ve tried to summarise my key learning below, and you can find links to all of the talk recordings via the &lt;a data-hook=&#34;WebLink&#34; href=&#34;https://www.fastflowconf.com/&#34; rel=&#34;noopener&#34; target=&#34;_blank&#34;&gt;Fast Flow Conf website&lt;/a&gt;.&lt;/p&gt;】&lt;div data-breakout=&#34;正常&#34;&gt;&#xA; &lt;p dir=&#34;auto&#34;&gt;我在最近的 Fast Flow 会议上玩得很开心。本次会议重点讨论 Matthew Skelton 和 Manuel Pais 在《团队拓扑》中描述的方法和方法，汇集了来自平台工程、产品管理、工程管理、业务分析、敏捷辅导等领域的各种人士。&lt;/p &gt;&#xA;&lt;/div&gt;&#xA;&lt;div data-hook=&#34;rcv-block1&#34; type=&#34;paragraph&#34;&gt;&#xA; &lt;p dir=&#34;auto&#34;&gt;演示非常精彩，我们在展位和会场周围的所有聊天都非常有趣。我尝试在下面总结我的主要学习内容，您可以通过 &lt;a data-hook=&#34;WebLink&#34; href=&#34;https://www.fastflowconf.com/&#34; rel=&#34; 找到所有演讲录音的链接noopener&#34; target=&#34;_blank&#34;&gt;Fast Flow Conf 网站&lt;/a&gt;。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Oct 2024 15:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【Symbolic and Connectionist Approaches: A Journey Between Logic, Cognition, and the Future Challenges of AI】符号和联结主义方法：逻辑、认知和人工智能未来挑战之间的旅程</title>
      <link>https://dzone.com/articles/symbolic-and-connectionist-ai</link>
      <description>【&lt;p&gt;This article explores two major approaches to artificial intelligence: &lt;strong&gt;symbolic AI&lt;/strong&gt;, based on logical rules, and &lt;strong&gt;connectionist AI&lt;/strong&gt;, inspired by &lt;a href=&#34;https://dzone.com/refcardz/neural-network-essentials&#34;&gt;neural networks&lt;/a&gt;. Beyond the technical aspects, the aim is to question concepts such as perception and cognition and to reflect on the challenges that AI must take up to better manage contradictions and aim to imitate human thought.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Preamble&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;French researcher Sébastien Konieczny was recently named EuAI Fellow 2024 for his groundbreaking work on belief fusion and inconsistency management in artificial intelligence. His research, focused on reasoning modeling and knowledge revision, opens up new perspectives to enable AI systems to tend to reason even more reliably in the face of contradictory information, and thus better manage the complexity of the real world.&lt;/p&gt;】&lt;p&gt;本文探讨了人工智能的两种主要方法：基于逻辑规则的&lt;strong&gt;符号人工智能&lt;/strong&gt;和受&lt;a href=&#34;https://”启发的&lt;strong&gt;连接主义人工智能&lt;/strong&gt; dzone.com/refcardz/neural-network-essentials&#34;&gt;神经网络&lt;/a&gt;。除了技术方面之外，其目的还在于对感知和认知等概念提出质疑，并反思人工智能必须应对的挑战，以更好地管理矛盾并模仿人类思维。&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;法国研究员 Sébastien Konieczny 最近因其在人工智能信念融合和不一致性管理方面的开创性工作而被任命为 2024 年 EuAI 院士。他的研究重点是推理建模和知识修正，开辟了新的视角，使人工智能系统在面对矛盾信息时能够更加可靠地进行推理，从而更好地管理现实世界的复杂性。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Oct 2024 13:00:07 +0000</pubDate>
    </item>
    <item>
      <title>【Calling a Client Via Spring @schedule Cron Job】通过 Spring @schedule Cron Job 调用客户端</title>
      <link>https://dzone.com/articles/calling-a-client-via-spring-schedule-cron-job</link>
      <description>【&lt;p&gt;In this article, a cron job will be set up that will run parametrically in a certain period using &lt;a href=&#34;https://dzone.com/articles/a-guide-to-spring-boot-scheduling&#34;&gt;Spring&#39;s scheduling feature&lt;/a&gt;. Period information will be adjustable parametrically from the &lt;strong&gt;application.properties&lt;/strong&gt; file.&lt;/p&gt;&#xA;&lt;h2&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;In the example, parameter information is given to run every minute.&lt;/p&gt;】&lt;p&gt;在本文中，将设置一个 cron 作业，该作业将使用 &lt;a href=&#34;https://dzone.com/articles/a-guide-to-spring-boot-scheduling&#34; 在特定时间段内以参数方式运行&gt;Spring的调度功能&lt;/a&gt;。周期信息可以通过 &lt;strong&gt;application.properties&lt;/strong&gt; 文件进行参数调整。&lt;/p&gt;&#xA;&lt;h2&gt;概述&lt;/h2&gt;&#xA;&lt;p&gt;示例中给出了每分钟运行一次的参数信息。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Oct 2024 17:00:06 +0000</pubDate>
    </item>
    <item>
      <title>【“Let’s Cook!”: A Beginner&#39;s Guide to Making Tasty Web Projects】“让我们做饭吧！”：制作美味网络项目的初学者指南</title>
      <link>https://dzone.com/articles/lets-cook-beginners-guide-to-web-projects</link>
      <description>【&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;When I was a child, I loved making pancakes with my grandmother. As time went on, I became a web developer, and now, instead of pancakes, I create various web projects with my colleagues. Every time I start a new project, I’m haunted by one question: How can I make this development &#34;tasty&#34; not only for the user but also for my colleagues who will work on it? This is a crucial question because over time, the development team may change, or you might decide to leave the project and hand it over to someone else. The code you create should be clear and engaging for those who join the project later. Moreover, you should avoid a situation where the current developers are dissatisfied with the final product yet have to keep adding new &#34;ingredients&#34; (read: functions) to satisfy the demands of the &#34;restaurant owner.&#34;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;Important note: Before I describe my recipe, I want to point out that methods can vary across different teams and, of course, they depend on their preferences. However, as we know, some people have rather peculiar tastes, so I believe it&#39;s essential to reiterate even the simplest truths.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Selecting the Ingredients: Choose Your Technology Stack&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;Before you start cooking a dish, you usually check what ingredients you already have. If something is missing, you go to the store or look for alternative ways to acquire them, like venturing out to pick them up in the woods. The web development process is similar: before starting your work on a new project, you need to understand what resources you currently have and what you want to achieve in the end. To prepare for creating your technological masterpiece, it helps to answer a series of questions:&lt;/p&gt;】&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;小时候，我喜欢和奶奶一起做煎饼。随着时间的推移，我成为了一名 Web 开发人员，现在我不再做煎饼，而是与同事一起创建各种 Web 项目。每当我开始一个新项目时，我都会被一个问题所困扰：如何才能使这个开发不仅对用户而且对从事该项目的同事来说“美味”？这是一个至关重要的问题，因为随着时间的推移，开发团队可能会发生变化，或者您可能决定离开该项目并将其移交给其他人。您创建的代码对于后来加入该项目的人来说应该是清晰且有吸引力的。而且，你应该避免出现这样的情况：当前的开发人员对最终产品不满意，但又必须不断添加新的“成分”（即功能）来满足“餐馆老板”的需求。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;重要说明：在描述我的食谱之前，我想指出不同团队的方法可能有所不同，当然，这取决于他们的偏好。然而，正如我们所知，有些人的品味相当奇特，所以我认为有必要重申即使是最简单的事实。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;选择成​​分：选择您的技术堆栈&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;在开始烹饪菜肴之前，您通常会检查已有的食材。如果缺少某些东西，您可以去商店或寻找其他方式来获取它们，例如冒险去树林里取它们。 Web开发过程类似：在开始新项目之前，您需要了解您当前拥有哪些资源以及最终想要实现什么。为了准备创造您的技术杰作，它有助于回答一系列问题：&lt;/p&gt;</description>
      <pubDate>Tue, 22 Oct 2024 14:00:10 +0000</pubDate>
    </item>
    <item>
      <title>【Implement Hibernate Second-Level Cache With NCache】使用NCache实现Hibernate二级缓存</title>
      <link>https://dzone.com/articles/implement-hibernate-second-level-cache-with-ncache</link>
      <description>【&lt;p&gt;In this tutorial, we&#39;ll explore implementing a second-level cache in &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-hibernate&#34;&gt;Hibernate&lt;/a&gt; using NCache.&lt;/p&gt;&#xA;&lt;p&gt;We&#39;ll set up a &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; application with Hibernate. Then we&#39;ll configure NCache as the second-level cache. Finally, we&#39;ll test the implementation to see how caching reduces the database load and improves performance.&lt;/p&gt;】&lt;p&gt;在本教程中，我们将探索使用 NCache 在 &lt;a href=&#34;https://dzone.com/refcardz/getting-started-with-hibernate&#34;&gt;Hibernate&lt;/a&gt; 中实现二级缓存。 &lt;/p&gt;&#xA;&lt;p&gt;我们将使用 Hibernate 设置一个 &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; 应用程序。然后我们将NCache配置为二级缓存。最后，我们将测试实现，看看缓存如何减少数据库负载并提高性能。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Oct 2024 19:00:08 +0000</pubDate>
    </item>
    <item>
      <title>【How to Use Retrieval-Augmented Generation (RAG) Locally】如何在本地使用检索增强生成 (RAG)</title>
      <link>https://dzone.com/articles/how-to-use-rag-locally</link>
      <description>【&lt;p&gt;In this blog post, we&#39;ll explore how to use Retrieval-Augmented Generation (RAG) for building more effective and engaging conversational AI applications. We&#39;ll cover the basics of RAG, its benefits, and provide step-by-step instructions on how to develop your own RAG mechanism for local use.&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;What Is RAG?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;RAG (Reinforcement-based Generation) combines the strengths of two prominent approaches in natural language processing (NLP): retrieval-based models and generation-based models. In traditional generation-based methods, AI systems generate text from scratch using pre-trained patterns and rules. However, this approach often leads to limited creativity, a lack of context-specific knowledge, and poor coherence.&lt;/p&gt;】&lt;p&gt;在这篇博文中，我们将探讨如何使用检索增强生成 (RAG) 来构建更有效、更有吸引力的对话式 AI 应用程序。我们将介绍 RAG 的基础知识及其优点，并提供有关如何开发您自己的 RAG 机制以供本地使用的分步说明。&lt;/p&gt;&#xA;&lt;h2&gt;&lt;strong&gt;什么是 RAG？&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;RAG（基于强化的生成）结合了自然语言处理 (NLP) 中两种重要方法的优势：基于检索的模型和基于生成的模型。在传统的基于生成的方法中，人工智能系统使用预先训练的模式和规则从头开始生成文本。然而，这种方法往往会导致创造力有限、缺乏特定背景的知识以及连贯性差。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Oct 2024 21:00:03 +0000</pubDate>
    </item>
    <item>
      <title>【Platform Engineering: A Strategic Response to the Growing Complexity of Modern Software Architectures】平台工程：对现代软件架构日益复杂的战略响应</title>
      <link>https://dzone.com/articles/platform-engineering-a-strategic-response</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;From &lt;a href=&#34;https://dzone.com/articles/breaking-down-the-monolith-1&#34;&gt;monolithic applications to microservices&lt;/a&gt; and cloud-based architectures, the software development landscape is in constant change. These transitions have brought unprecedented opportunities but have also introduced significant complexities. Enter &lt;a href=&#34;https://dzone.com/articles/revealing-the-core-of-platform-engineering&#34;&gt;platform engineering&lt;/a&gt;: a strategic approach to managing the intricate infrastructure requirements of modern software systems. This opinion piece will explore how platform engineering is solving the challenges of today’s software architectures, its evolution, and the way industry giants like Netflix, Google, Microsoft, and Apple are leveraging it to streamline their operations. Finally, we’ll take a look at what the future holds for platform engineering.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;The Evolution of Software Architectures: From Monoliths to Microservices&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Software engineering has come a long way since the days of monolithic applications, where a single, unified codebase governed the entire system. While monolithic structures allowed for centralized management, they were often rigid and difficult to scale. As business needs evolved, software systems required greater agility, leading to the rise of microservices — smaller, independent units of functionality that could be developed, deployed, and scaled individually.&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;从&lt;a href=&#34;https://dzone.com/articles/writing-down-the-monolith-1&#34;&gt;单体应用程序到微服务&lt;/a&gt;和基于云的架构，软件开发环境在不断变化。这些转变带来了前所未有的机遇，但也带来了巨大的复杂性。输入&lt;a href=&#34;https://dzone.com/articles/revealing-the-core-of-platform-engineering&#34;&gt;平台工程&lt;/a&gt;：管理现代软件系统复杂的基础设施需求的战略方法。这篇评论文章将探讨平台工程如何解决当今软件架构的挑战、其演变，以及 Netflix、谷歌、微软和苹果等行业巨头如何利用它来简化运营。最后，我们将看看平台工程的未来。&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;软件架构的演变：从整体架构到微服务&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;自单体应用程序时代以来，软件工程已经取得了长足的进步，在单体应用程序中，单个统一的代码库管理整个系统。虽然整体结构允许集中管理，但它们通常是僵化的且难以扩展。随着业务需求的发展，软件系统需要更高的敏捷性，从而导致了微服务的兴起——更小的、独立的功能单元，可以单独开发、部署和扩展。&lt;/p&gt;</description>
      <pubDate>Tue, 22 Oct 2024 12:00:03 +0000</pubDate>
    </item>
  </channel>
</rss>