<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Misunderstanding Agile: Bridging The Gap With A Kaizen Mindset】误解敏捷：用Kaizen的心态弥合差距</title>
      <link>https://dzone.com/articles/bridging-agile-gap-kaizen-mindset</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;In recent years, Agile has become closely associated with modern software development, promoting customer-focused value delivery, regular feedback loops, and empowered teams. However, beneath the familiar terminology, many technical professionals are beginning to question &lt;a href=&#34;https://dzone.com/articles/is-agile-right-for-every-project-when-to-use-it-an&#34;&gt;whether Agile is achieving its intended outcomes&lt;/a&gt; or simply adding complexity.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Many experienced developers and engineers voice discontent with excessive processes, poorly executed rituals, and a disconnect between Agile principles and the realities of their daily work.&amp;nbsp;&lt;/p&gt;】&lt;p dir =“ ltr”&gt;近年来，敏捷已与现代软件开发，促进以客户为中心的价值交付，常规反馈循环和授权团队密切相关。但是，在熟悉的术语下，许多技术专业人员开始质疑&lt;a href =“ https://dzone.com/articles/is-agile-right-for-every-every-project-project-when-when-when-to-use-it-an&gt; agile是在实现其预期的胜利&lt;/a&gt;还是简单地添加复杂性。&lt;/p&gt; &lt;/p&gt;。&#xA;&lt;p dir =“ ltr”&gt;许多经验丰富的开发人员和工程师对过程过多，执行仪式不佳以及敏捷原则与日常工作的现实之间的脱节感到不满。 &lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Fluent Bit: Controlling Logs With Fluent Bit on Kubernetes (Part 4)】掌握流利的位：用库伯尼特语中的lit位控制日志（第4部分）</title>
      <link>https://dzone.com/articles/controlling-logs-with-fluent-bit-kubernetes</link>
      <description>【&lt;p&gt;This series is a general-purpose getting-started guide for those of us wanting to learn about the Cloud Native Computing Foundation (CNCF) project Fluent Bit.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Each article in this series addresses a single topic by providing insights into &lt;em&gt;what&lt;/em&gt; the topic is, &lt;em&gt;why&lt;/em&gt; we are interested in exploring that topic, &lt;em&gt;where&lt;/em&gt; to get started with the topic, and &lt;em&gt;how&amp;nbsp;&lt;/em&gt;to get hands-on with learning about the topic as it relates to the Fluent Bit project.&lt;/p&gt;】&lt;p&gt;本系列是我们想要了解Cloud Native Computing Foundation（CNCF）项目Fluent Fluent Pluent Pluent lit的通用指南。 &lt;/p&gt;&#xA;&lt;p&gt;本系列中的每篇文章都通过向&lt;em&gt;提供洞察力来解决一个主题。</description>
      <pubDate>Thu, 12 Jun 2025 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【HTAP Using a Star Query on MongoDB Atlas Search Index】HTAP使用MongoDB Atlas搜索索引上的星形查询</title>
      <link>https://dzone.com/articles/mongodb-htap-document-model-atlas-search</link>
      <description>【&lt;p&gt;MongoDB is often chosen for online transaction processing (OLTP) due to its flexible document model, which can align with domain-specific data structures and access patterns. Beyond basic transactional workloads, &lt;a href=&#34;https://dzone.com/refcardz/mongodb&#34;&gt;MongoDB&lt;/a&gt; also supports search capabilities through Atlas Search, built on Apache Lucene. When combined with the aggregation pipeline, this enables limited online analytical processing (OLAP) functionality suitable for near-real-time analytics. Because MongoDB uses a unified document model, these analytical queries can run without restructuring the data, allowing for certain hybrid transactional and analytical (HTAP) workloads. This article explores such a use case in the context of healthcare.&lt;/p&gt;&#xA;&lt;p&gt;Traditional relational databases employ a complex query optimization method known as &#34;star transformation&#34; and rely on multiple single-column indexes, along with bitmap operations, to support efficient ad-hoc queries. This typically requires a dimensional schema, or star schema, which is distinct from the normalized operational schema used for transactional updates. MongoDB can support a similar querying approach using its document schema, which is often designed for operational use. By adding an &lt;a href=&#34;https://dzone.com/articles/simplify-rag-application-with-mongodb-atlas&#34;&gt;Atlas&lt;/a&gt; Search index to the collection storing transactional data, certain analytical queries can be supported without restructuring the schema.&lt;/p&gt;】由于其灵活的文档模型，通常选择&lt;p&gt; MongoDB进行在线交易处理（OLTP），该模型可以与特定于域的数据结构和访问模式保持一致。除了基本的交易工作负载之外，&lt;a href =“ https://dzone.com/refcardz/mongodb”&gt; mongodb &lt;/a&gt;也通过建立在Apache Lucene的Atlas搜索来支持搜索能力。当与聚合管道结合使用时，这可以实现有限的在线分析处理（OLAP）功能，适用于近实时分析。由于MongoDB使用统一的文档模型，因此这些分析查询可以在不重组数据的情况下运行，从而允许某些混合交易和分析（HTAP）工作负载。本文在医疗保健的背景下探讨了这种用例。&lt;/p&gt;&#xA;&lt;p&gt;传统的关系数据库采用一种复杂的查询优化方法，称为“恒星转换”，并依靠多个单柱索引以及位图操作来支持有效的临时查询。这通常需要尺寸模式或星形架构，这与用于交易更新的归一化操作模式不同。 MongoDB可以使用其文档模式支持类似的查询方法，该方法通常是为操作使用而设计的。通过添加&lt;a href =“ https://dzone.com/articles/simplify-rag-application-with-mongodb-atlas”&gt; atlas &lt;/a&gt;搜索索引搜索索引存储交易数据，可以在不重组架构的情况下支持某些分析查询。&lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2025 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Beyond Java Streams: Exploring Alternative Functional Programming Approaches in Java】超越Java流：探索Java中的替代功能编程方法</title>
      <link>https://dzone.com/articles/alternative-functional-approaches-in-java</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Few concepts in Java software development have changed how we approach writing code in Java than Java Streams. They provide a clean, declarative way to process collections and have thus become a staple in modern Java applications. However, for all their power, Streams present their own challenges, especially where flexibility, composability, and performance optimization are priorities.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;What if your programming needs more expressive functional paradigms? What if you are looking for laziness and safety beyond what Streams provide and want to explore functional composition at a lower level? In this article, we will be exploring other functional programming techniques you can use in &lt;a href=&#34;https://dzone.com/java&#34;&gt;Java&amp;nbsp;&lt;/a&gt;that do not involve using the Streams API.&lt;/p&gt;】&lt;p dir =“ ltr”&gt; Java软件开发中的几个概念改变了我们在Java中使用代码而不是Java流的方式。它们提供了一种干净的声明性处理收集方式，因此已成为现代Java应用程序中的主食。但是，尽管如此，溪流都提出了自己的挑战，尤其是在灵活性，合成性和性能优化为优先事项的情况下。&lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;如果您的编程需要更具表现力的功能范式怎么办？如果您正在寻找较懒惰和安全性，那么该流提供了哪些流提供和想要探索较低级别的功能组成怎么办？在本文中，我们将探索您可以在&lt;a href =“ https://dzone.com/java”中使用的其他功能编程技术。</description>
      <pubDate>Thu, 12 Jun 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to Install and Set Up Jenkins With Docker Compose】如何使用Docker组成安装和设置Jenkins</title>
      <link>https://dzone.com/articles/install-jenkins-with-docker-compose-guide</link>
      <description>【&lt;p name=&#34;f7ea&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/testng-framework-tutorial-a-comprehensive-guide-wi-1&#34;&gt;Jenkins&lt;/a&gt; is an open-source CI/CD tool written in Java that is used for organising the CI/CD pipelines. Currently, at the time of writing this blog, it has 24k stars and 9.1k forks on &lt;a data-href=&#34;https://github.com/jenkinsci/jenkins&#34; href=&#34;https://github.com/jenkinsci/jenkins&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;. With over 2000 plugin support, Jenkins is a well-known tool in the DevOps world.&lt;/p&gt;&#xA;&lt;p name=&#34;5a5f&#34;&gt;The following are multiple ways to install and set up Jenkins:&lt;/p&gt;】&lt;p name =“ f7ea”&gt; &lt;a href =“ https://dzone.com/articles/testng-framework-tutorial-a-comprehmiss-guide-wi-wi-wi-wi-wi-wi-wi-wi---”&gt; jenkins &lt;/a&gt;是用Java编写的开放式CI/CD工具，用于组织CI/CD Pipelines。目前，在撰写此博客时，它在&lt;a data-href =“ https://github.com/jenkinsci/jenkins”上有24k星和9.1k叉子。詹金斯（Jenkins）拥有2000多个插件的支持，是DevOps World中的著名工具。&lt;/p&gt;&#xA;&lt;p name =“ 5a5f”&gt;以下是安装和设置詹金斯的多种方法：&lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2025 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Designing Scalable Multi-Agent AI Systems: Leveraging Domain-Driven Design and Event Storming】设计可扩展的多代理AI系统：利用域驱动的设计和事件冲击</title>
      <link>https://dzone.com/articles/multi-agent-ai-ddd-event-storming</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Multi-Agent AI Systems (MAS) are becoming increasingly crucial for tackling complex, real-world problems. With projections indicating that 82% of organizations plan to integrate AI agents and 25% of enterprises deploying them by 2025, it&#39;s essential to have robust methodologies for designing these systems. In this post, we’ll look at how blending Event Storming with Domain-Driven Design (DDD) can help build more effective and well-structured Multi-Agent Systems.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Understanding the Core Concepts&lt;/h2&gt;&#xA;&lt;h3 dir=&#34;ltr&#34;&gt;Multi-Agent AI Systems (MAS)&lt;/h3&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;Multi-Agent AI Systems are computerized systems composed of multiple interacting intelligent agents. They are designed to solve problems that are difficult or impossible for individual agents or monolithic systems to address. Key characteristics of MAS include:&lt;/p&gt;】&lt;p dir =“ ltr”&gt;多代理AI系统（MAS）对于解决复杂的现实世界问题变得越来越重要。预测表明，有82％的组织计划在2025年之前整合AI代理和25％的企业，因此必须使用强大的方法来设计这些系统。在这篇文章中，我们将研究如何与域驱动设计（DDD）进行混合事件如何帮助构建更有效且结构良好的多机构系统。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt;了解核心概念&lt;/h2&gt;&#xA;&lt;H3 dir =“ ltr”&gt;多代理AI Systems（MAS）&lt;/h3&gt;&#xA;&lt;p dir =“ ltr”&gt;多代理AI系统是由多个交互智能代理组成的计算机化系统。它们旨在解决各个代理或整体系统无法解决的问题。 MAS的关键特征包括：&lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2025 13:00:04 +0000</pubDate>
    </item>
    <item>
      <title>【How Security Engineers Can Help Build a Strong Security Culture】安全工程师如何帮助建立强大的安全文化</title>
      <link>https://dzone.com/articles/how-security-engineers-build-strong-security-culture</link>
      <description>【&lt;p&gt;In today’s fast-paced world, organizations face increasing cyber threats that can compromise their operational integrity, erode customer trust, and jeopardize financial stability. While it’s crucial to have advanced security technologies in place, many organizations overlook the importance of cultivating a culture of security.&lt;/p&gt;&#xA;&lt;p&gt;A robust security culture is a key factor in preventing security breaches, as it ensures that everyone in the organization is invested in and responsible for protecting sensitive information. Security engineers, as technical experts and trusted advisors, are uniquely positioned to lead the way in building this culture.&lt;/p&gt;】&lt;p&gt;在当今快节奏的世界中，组织面临越来越多的网络威胁，可能损害其运营完整性，侵蚀客户信任并危害财务稳定性。尽管制定高级安全技术至关重要，但许多组织忽略了培养安全文化的重要性。&lt;/p&gt;&#xA;&lt;p&gt;强大的安全文化是防止安全漏洞的关键因素，因为它可以确保组织中的每个人都投资并负责保护敏感信息。安全工程师作为技术专家和受信任的顾问，在建立这种文化方面具有独特的位置。&lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Engineering Resilience Through Data: A Comprehensive Approach to Change Failure Rate Monitoring】通过数据工程弹性：一种全面的改变故障率监控的方法</title>
      <link>https://dzone.com/articles/engineering-resilience-data-cfr-monitoring</link>
      <description>【&lt;p&gt;Organizations are constantly seeking ways to measure and improve their delivery performance. Among the key metrics that have emerged from the DevOps movement, &lt;a href=&#34;https://dzone.com/articles/metrics-part-2-the-dora-keys&#34;&gt;Change Failure Rate (CFR)&lt;/a&gt; stands as a critical indicator of software quality and operational stability. This article explores how modern teams can effectively implement, track, and leverage CFR to drive continuous improvement in their delivery pipelines.&lt;/p&gt;&#xA;&lt;h2&gt;Understanding Change Failure Rate: Beyond the Basic Metric&lt;/h2&gt;&#xA;&lt;p&gt;Change Failure Rate is one of the four key metrics identified by the &lt;a href=&#34;https://dzone.com/articles/dora-metrics-tracking-and-observability-with-jenki&#34;&gt;DevOps Research and Assessment (DORA)&lt;/a&gt; team that correlate with high-performing engineering organizations. Simply put, CFR measures the percentage of changes to production that result in degraded service or require remediation.&lt;/p&gt;】&lt;p&gt;组织不断寻求衡量和改善交付绩效的方法。在DevOps运动中出现的关键指标中，&lt;a href =“ https://dzone.com/articles/metrics-part-part-2-the-dora-keys”&gt;更改故障率（CFR）&lt;/a&gt;是软件质量质量和操作稳定性的关键指标。本文探讨了现代团队如何有效地实施，跟踪和利用CFR来推动其交付管道的持续改进。&lt;/p&gt;&#xA;&lt;H2&gt;了解变更失败率：超出基本度量&lt;/h2&gt;&#xA;&lt;p&gt;变化失败率是&lt;a href =“ https://dzone.com/articles/dora-metrics-tracking-and-brocking-and-observibility-with-jenki”&gt; DevOps研究与评估（DORA）&lt;/a&gt;与高高度配置工具组织相关的团队的四个关键指标之一。简而言之，CFR衡量导致服务退化或需要补救的生产变化的百分比。&lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Missing Infrastructure Layer: Why AI&#39;s Next Evolution Requires Distributed Systems Thinking】缺少的基础架构层：为什么AI的下一个进化需要分布式系统思考</title>
      <link>https://dzone.com/articles/ai-evolution-distributed-systems-infrastructure</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;The recent announcement of &lt;a href=&#34;https://kubemq-aiway.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;KubeMQ-Aiway&lt;/a&gt; caught my attention not as another AI platform launch, but as validation of a trend I&#39;ve been tracking across the industry. After spending the last two decades building distributed systems and the past three years deep in AI infrastructure consulting, the patterns are becoming unmistakable: we&#39;re at the same inflection point that microservices faced a decade ago.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;The Distributed Systems Crisis in AI&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;We&#39;ve been here before. In the early 2010s, as &lt;a href=&#34;https://dzone.com/articles/monolithic-vs-microservices-architecture-key-differences&#34;&gt;monolithic architectures&lt;/a&gt; crumbled under scale pressures, we frantically cobbled together microservices with HTTP calls and prayed our systems wouldn&#39;t collapse. It took years to develop proper service meshes, message brokers, and orchestration layers that made distributed systems reliable rather than just functional.&lt;/p&gt;】&lt;p dir =“ ltr”&gt; &lt;a href =“ https://kubemq-aiway.com/”的最新公告“ rel =” noopener noreferrer“ target =“ _ black”&gt; kubemq-aiway &lt;/a&gt;引起了我的注意，并不是另一个AI平台启动，而是验证了我一直在跨越整个行业的趋势验证。在过去的二十年中构建了分布式系统以及过去三年的AI基础设施咨询之后，这些模式变得毫无疑问：我们处于与十年前微服务相同的拐点。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;h2 dir =“ ltr”&gt; AI &lt;/h2&gt;中的分布式系统危机&#xA;&lt;p dir =“ ltr”&gt;我们以前去过这里。在2010年代初期，如&lt;a href =“ https://dzone.com/articles/monolithic-vs-microservices-architectices-architecture-key-differences”&gt;单片建筑&lt;/a&gt;在规模下压力崩溃，我们狂热地将Microservices与HTTP呼唤在一起，并不是在祈祷的系统。开发适当的服务网格，消息经纪人和编排层花了数年的时间，这些层使分布式系统可靠，而不仅仅是功能。&lt;/p&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2025 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【KubeVirt: Can VM Management With Kubernetes Work?】Kubevirt：使用Kubernetes的VM管理可以工作吗？</title>
      <link>https://dzone.com/articles/kubevirt-can-vm-management-with-kubernetes-work</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;KubeVirt offers a bridge between virtual machines and containerized environments. &amp;nbsp;As an open-source project, its standout feature is the ability to run VMs and containers side by side.&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;But while the concept is promising, several caveats remain for organizations that need to support critical at-scale VM workloads. The CNCF project also reflects how containers are not going to replace VMs, while the reverse may be true in the long term for many use cases.&lt;/p&gt;】&lt;p dir =“ ltr”&gt; kubevirt提供了虚拟机和容器化环境之间的桥梁。  作为一个开源项目，其出色的功能是可以并排运行VM和容器的能力。 &lt;/p&gt;&#xA;&lt;p dir =“ ltr”&gt;，但是虽然这个概念很有希望，但对于需要支持关键ATCALE VM工作负载的组织仍有几个警告。 CNCF项目还反映了容器如何无法替换VM，而对于许多用例，相反的情况可能是正确的。&lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2025 21:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>