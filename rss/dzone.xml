<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DZone.com Feed</title>
    <link>https://feeds.dzone.com/home</link>
    <description>Recent posts on DZone.com</description>
    <item>
      <title>【Precision Python: Leveraging mypy and Pylint for Type Safety】Precision Python：利用 mypy 和 Pylint 实现类型安全</title>
      <link>https://dzone.com/articles/typing-in-python</link>
      <description>【&lt;h2&gt;Handling Typing in Python by Default&lt;/h2&gt;&#xA;&lt;p&gt;Python&#39;s dynamic typing is a simple concept by default. It does not enforce explicit type declarations, allowing variables to change types at runtime. The variable type is determined based on its value at any given time, making it easy to understand and work with.&lt;/p&gt;&#xA;&lt;div class=&#34;codeMirror-wrapper&#34; contenteditable=&#34;false&#34;&gt;&#xA; &lt;div contenteditable=&#34;false&#34;&gt;&#xA;  &lt;div class=&#34;codeHeader&#34;&gt;&#xA;   &lt;div class=&#34;nameLanguage&#34;&gt;&#xA;    Python&#xA;   &lt;/div&gt;&lt;i class=&#34;icon-cancel-circled-1 cm-remove&#34;&gt;&amp;nbsp;&lt;/i&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;codeMirror-code--wrapper&#34; data-code=&#34;x = 10       # x is an integer&#xA;x = &amp;quot;hello&amp;quot;  # now x is a string&#xA;&#34; data-lang=&#34;text/x-python&#34;&gt;&#xA;   &lt;pre&gt;&lt;code lang=&#34;text/x-python&#34;&gt;x = 10       # x is an integer&#xA;x = &#34;hello&#34;  # now x is a string&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&lt;br&gt;&lt;/p&gt;】&lt;h2&gt;默认处理 Python 中的输入&lt;/h2&gt;&#xA;&lt;p&gt;默认情况下，Python 的动态类型是一个简单的概念。它不强制执行显式类型声明，允许变量在运行时更改类型。变量类型是根据其在任何给定时间的值确定的，使其易于理解和使用。&lt;/p&gt;&#xA;&lt;div class=&#34;codeMirror-wrapper&#34; contenteditable=&#34;false&#34;&gt;&#xA; &lt;div contenteditable=&#34;false&#34;&gt;&#xA;  &lt;div 类=“codeHeader”&gt;&#xA;   &lt;div class=&#34;nameLanguage&#34;&gt;&#xA;    Python&#xA;   &lt;/div&gt;&lt;i class=&#34;icon-cancel-circled-1 cm-remove&#34;&gt; &lt;/i&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;codeMirror-code--wrapper&#34; data-code=&#34;x = 10 # x 是一个整数&#xA;x = &#34;hello&#34; # 现在 x 是一个字符串&#xA;“ data-lang =“文本/ x-python”&gt;&#xA;   &lt;pre&gt;&lt;code lang=&#34;text/x-python&#34;&gt;x = 10 # x 是一个整数&#xA;x = &#34;hello&#34; # 现在 x 是一个字符串&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 18 Jul 2024 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AWS CDK: Infrastructure as Abstract Data Types, Part 2】AWS CDK：基础设施作为抽象数据类型，第 2 部分</title>
      <link>https://dzone.com/articles/aws-cdk-infrastructure-as-abstract-data-types-pt-2</link>
      <description>【&lt;p&gt;If you&#39;re a &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; software developer and you weren&#39;t living on the planet Mars during these last years, then you certainly know what &lt;a href=&#34;https://dzone.com/refcardz/quarkus-1&#34;&gt;Quarkus&lt;/a&gt; is. And just in case you don&#39;t, you may find it out &lt;a href=&#34;https://quarkus.io/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;With Quarkus, the field of enterprise &lt;a href=&#34;https://dzone.com/refcardz/introduction-to-cloud-native-java&#34;&gt;cloud-native applications development&lt;/a&gt; has never been so comfortable and it never took advantage of such a friendly and professional working environment. The Internet abounds with posts and articles explaining why and how Quarkus is a must for the enterprise, cloud-native software developer. And of course, &lt;a href=&#34;https://dzone.com/articles/aws-cdk-infrastructure-as-abstract-data-types&#34;&gt;CDK applications&lt;/a&gt; aren&#39;t on the sidelines: on the opposite, they can greatly take advantage of the Quarkus features to become smaller, faster, and more aligned with requirements nowadays.&lt;/p&gt;】&lt;p&gt;如果您是一名 &lt;a href=&#34;https://dzone.com/refcardz/core-java&#34;&gt;Java&lt;/a&gt; 软件开发人员，并且在过去的几年里您并不生活在火星上，那么您肯定知道 &lt;a href=&#34;https://dzone.com/refcardz/quarkus-1&#34;&gt;Quarkus&lt;/a&gt; 是什么。如果您不这样做，您可以在&lt;a href=&#34;https://quarkus.io/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;此处&lt;/a&gt;找到它。&lt;/p&gt;&#xA;&lt;p&gt;有了 Quarkus，企业&lt;a href=&#34;https://dzone.com/refcardz/introduction-to-cloud-native-java&#34;&gt;云原生应用程序开发&lt;/a&gt;领域从未如此舒适而且它从未利用过如此友好和专业的工作环境。互联网上有很多帖子和文章解释 Quarkus 为何以及如何成为企业、云原生软件开发人员的必需品。当然，&lt;a href=&#34;https://dzone.com/articles/aws-cdk-infrastruct-as-abstract-data-types&#34;&gt;CDK 应用程序&lt;/a&gt;并不是袖手旁观：相反，他们可以极大地利用 Quarkus 的功能来变得更小、更快、更符合当今的需求。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Poetry Explained: Perils of the Unpinned Dependencies】诗歌解释：未固定依赖的危险</title>
      <link>https://dzone.com/articles/poetry-explained-perils-of-the-unpinned</link>
      <description>【&lt;p dir=&#34;ltr&#34;&gt;Imagine this: You are days away from a release, and your Python codebase is versioned, tagged, and marked as a Release Candidate. Hours from the release, out of nowhere appears a BUG! You set up a War Room, dig through the logs and the code, the team is struggling…and then it hits you: A DEPENDENCY UPDATE!&amp;nbsp;&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;A seemingly minor version bump in a library your code depends on, introduced a breaking change, causing your cautiously crafted codebase into disarray. This problem compounds itself when our project relies on multiple libraries which in turn have their own set of dependencies. In such cases, a single incompatible update can trigger an avalanche of conflicts leading to “Dependency Hell.”&lt;/p&gt;】&lt;p dir=&#34;ltr&#34;&gt;想象一下：距离发布还有几天，您的 Python 代码库已被版本控制、标记并标记为候选发布。发布几个小时后，突然出现一个BUG！你建立了一个作战室，挖掘日志和代码，团队正在苦苦挣扎……然后你突然意识到：依赖项更新！ &lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;您的代码所依赖的库中看似次要的版本冲突引入了重大更改，导致您精心制作的代码库陷入混乱。当我们的项目依赖于多个库而这些库又具有自己的一组依赖项时，这个问题就会变得更加复杂。在这种情况下，单个不兼容的更新可能会引发大量冲突，导致“依赖地狱”。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Oracle Advanced Queue: A Guide】Oracle 高级队列：指南</title>
      <link>https://dzone.com/articles/oracle-advanced-queue-a-guide</link>
      <description>【&lt;p&gt;In this article, we&#39;ll look at what Oracle advanced queue is, explore some of the use cases, and consider common best practices while implementing queue.&lt;/p&gt;&#xA;&lt;h2&gt;Brief Overview of Oracle Advanced Queue (AQ)&lt;/h2&gt;&#xA;&lt;p&gt;In a business application, many systems and apps work together to integrate and exchange information. &lt;a href=&#34;https://dzone.com/articles/develop-with-oracle-transactional-event-queues-kaf&#34;&gt;Oracle Advanced Queuing&lt;/a&gt; allows asynchronous communication by sending and receiving the message. This enables the message to be seamlessly integrated and stored at the database structure level.&amp;nbsp;&lt;/p&gt;】&lt;p&gt;在本文中，我们将了解 Oracle 高级队列是什么，探讨一些用例，并考虑实现队列时的常见最佳实践。&lt;/p&gt;&#xA;&lt;h2&gt;Oracle 高级队列 (AQ) 简要概述&lt;/h2&gt;&#xA;&lt;p&gt;在业务应用程序中，许多系统和应用程序协同工作以集成和交换信息。 &lt;a href=&#34;https://dzone.com/articles/develop-with-oracle-transactional-event-queues-kaf&#34;&gt;Oracle 高级队列&lt;/a&gt; 允许通过发送和接收消息进行异步通信。这使得消息能够在数据库结构级别无缝集成和存储。 &lt;/p&gt;</description>
      <pubDate>Thu, 18 Jul 2024 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Future of AI Art: Exploring the Capabilities of Stable Diffusion Web UI (Automatic 1111)】AI艺术的未来：探索稳定扩散Web UI的能力（自动1111）</title>
      <link>https://dzone.com/articles/automatic-1111-apis</link>
      <description>【&lt;h2 dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;What Are Stable Diffusion Models and Why Are They Important?&lt;/h2&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/stable-diffusion-xl-the-new-model-from-stable-ai&#34;&gt;Stable diffusion models&lt;/a&gt; are used in machine learning, particularly for creating high-quality images, videos, or other types of data. They are based on the principles of diffusion processes, which involve transforming a simple, usually random, initial state into a complex and structured output by gradually refining the state through multiple iterations. Stable diffusion helps simplify many complex use cases, such as image generation, video generation, data augmentation, text-to-image generation, and scientific visualization, such as medical imaging and astronomy.&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;There are various ways to access stable diffusion models, such as cloud-based services, online platforms and APIs, research and academic resources, and Stable Diffusion Web UI (Automatic 1111).&lt;/p&gt;】&lt;h2 dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;什么是稳定扩散模型以及它们为什么重要？&lt;/h2&gt;&#xA;&lt;p style=&#34;text-align: left;&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/stable-diffusion-xl-the-new-model-from-stable-ai&#34;&gt;稳定扩散模型&lt;/a&gt; 用于机器学习，特别是用于创建高质量图像、视频或其他类型的数据。它们基于扩散过程的原理，涉及通过多次迭代逐渐细化状态，将简单的、通常是随机的初始状态转换为复杂的结构化输出。稳定扩散有助于简化许多复杂的用例，例如图像生成、视频生成、数据增强、文本到图像生成以及科学可视化（例如医学成像和天文学）。&lt;/p&gt;&#xA;&lt;p dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;访问稳定扩散模型的方式有多种，例如基于云的服务、在线平台和 API、研究和学术资源以及稳定扩散 Web UI （自动1111）。&lt;/p&gt;</description>
      <pubDate>Thu, 18 Jul 2024 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Boomi&#39;s API Control Plane: Simplifying API Management for Developers】Boomi 的 API 控制平面：为开发人员简化 API 管理</title>
      <link>https://dzone.com/articles/boomis-api-control-plane-simplifying-api</link>
      <description>【&lt;h2 dir=&#34;ltr&#34;&gt;A New Era of API Management: Centralized Control With Developer Freedom&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;In the ever-evolving landscape of API management, &lt;a href=&#34;https://boomi.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Boomi&lt;/a&gt; has introduced a game-changing solution: the API Control Plane. This innovative platform addresses the growing challenges of API sprawl and shadow APIs while offering developers the flexibility they need in today&#39;s complex digital environments. &lt;a href=&#34;https://www.linkedin.com/in/emacosky/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Ed Macosky&lt;/a&gt;, Boomi&#39;s Chief Product and Technology Officer, shared insights on how this new offering is set to revolutionize API management for developers, engineers, and architects.&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;Bridging the Gap in API Management&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;The &lt;a href=&#34;https://dzone.com/articles/api-and-api-management-overview&#34;&gt;API management &lt;/a&gt;landscape has long been fragmented, with two primary approaches emerging: centralized solutions favored by IT departments and federated tools preferred by developers. This divide has created significant challenges for organizations seeking to maintain control while empowering their development teams.&lt;/p&gt;】&lt;h2 dir=&#34;ltr&#34;&gt;API 管理新时代：集中控制，开发者自由&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;在不断发展的 API 管理领域，&lt;a href=&#34;https://boomi.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Boomi&lt;/a&gt; 已推出了一个改变游戏规则的解决方案：API 控制平面。这一创新平台解决了 API 蔓延和影子 API 日益严峻的挑战，同时为开发人员提供了当今复杂的数字环境中所需的灵活性。 Boomi 首席产品和技术官 &lt;a href=&#34;https://www.linkedin.com/in/emacosky/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Ed Macosky&lt;/a&gt; 分享了有关如何这一新产品将彻底改变开发人员、工程师和架构师的 API 管理。&lt;/p&gt;&#xA;&lt;h2 dir=&#34;ltr&#34;&gt;缩小 API 管理差距&lt;/h2&gt;&#xA;&lt;p dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/api-and-api-management-overview&#34;&gt;API 管理格局长期以来一直支离破碎，主要有两个新兴方法：IT 部门青睐的集中式解决方案和开发人员首选的联合工具。这种分歧给寻求在授权开发团队的同时保持控制权的组织带来了重大挑战。&lt;/p&gt;</description>
      <pubDate>Thu, 18 Jul 2024 11:00:02 +0000</pubDate>
    </item>
    <item>
      <title>【AWS CDK: Infrastructure as Abstract Data Types, Part 3】AWS CDK：基础设施作为抽象数据类型，第 3 部分</title>
      <link>https://dzone.com/articles/aws-cdk-infrastructure-as-abstract-data-types-3</link>
      <description>【&lt;p&gt;In this third part of our &lt;a href=&#34;https://dzone.com/articles/aws-cdk-infrastructure-as-abstract-data-types&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;CDK&lt;/a&gt; series, the project &lt;code&gt;cdk-quarkus-s3&lt;/code&gt;, in the same GIT repository, will be used to illustrate a couple of advanced &lt;a href=&#34;https://dzone.com/articles/build-a-java-rest-api-with-quarkus&#34;&gt;Quarkus&lt;/a&gt; to AWS integration features, together with several tricks specific to RESTeasy which is, as everyone knows, the &lt;a href=&#34;https://dzone.com/articles/redhat-3-scale-api-management-for-beginners&#34;&gt;RedHat&lt;/a&gt; implementation of Jakarta REST specifications.&lt;/p&gt;&#xA;&lt;p&gt;Let&#39;s start by looking at the project&#39;s &lt;code&gt;pom.xml&lt;/code&gt; file which drives the Maven build process. You&#39;ll see the following dependency:&lt;/p&gt;】&lt;p&gt;在我们的&lt;a href=&#34;https://dzone.com/articles/aws-cdk-infrastruct-as-abstract-data-types&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;的第三部分中CDK&lt;/a&gt; 系列，同一 GIT 存储库中的项目 &lt;code&gt;cdk-quarkus-s3&lt;/code&gt; 将用于说明几个高级 &lt;a href=&#34;https://dzone.com/ articles/build-a-java-rest-api-with-quarkus&#34;&gt;Quarkus&lt;/a&gt; 到 AWS 集成功能，以及 RESTeasy 特有的几个技巧，众所周知，&lt;a href=&#34;https:/ /dzone.com/articles/redhat-3-scale-api-management-for-beginners&#34;&gt;RedHat&lt;/a&gt; Jakarta REST 规范的实现。&lt;/p&gt;&#xA;&lt;p&gt;让我们首先查看驱动 Maven 构建过程的项目的 &lt;code&gt;pom.xml&lt;/code&gt; 文件。您将看到以下依赖项：&lt;/p&gt;</description>
      <pubDate>Thu, 18 Jul 2024 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Feature Flag Tools to Confidently Release New Features】用于自信地发布新功能的功能标记工具</title>
      <link>https://dzone.com/articles/feature-flag-tools-to-confidently-release</link>
      <description>【&lt;p&gt;Feature flags offer an excellent way to quickly turn off and on product changes by enabling you to remove and add the code in the software quickly. Marketers or product managers can choose a time and moment to make a feature or function live to win that aha moment.&lt;/p&gt;&#xA;&lt;p&gt;The feature flags are helpful to various departments, including marketing, product, testing, CROs, and development. The number of feature flags can rise quickly as the team realizes their helpfulness and begins to utilize them. To avoid the mismanagement it may create, you need feature flag platforms. A comprehensive space where you can place all your feature flags and manage, modify, and delete them.&lt;/p&gt;】&lt;p&gt;功能标志提供了一种快速关闭和打开产品更改的绝佳方法，使您能够快速删除和添加软件中的代码。营销人员或产品经理可以选择一个时间和时刻来启用某个特性或功能，以赢得顿悟时刻。&lt;/p&gt;&#xA;&lt;p&gt;功能标志对各个部门都有帮助，包括营销、产品、测试、CRO 和开发。当团队意识到功能标志的有用性并开始使用它们时，功能标志的数量可能会迅速增加。为了避免它可能造成的管理不善，您需要功能标志平台。一个综合空间，您可以在其中放置所有功能标志并管理、修改和删除它们。&lt;/p&gt;</description>
      <pubDate>Wed, 17 Jul 2024 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How To Think Simple In Java】如何在 Java 中思考简单</title>
      <link>https://dzone.com/articles/how-to-think-simple-in-java</link>
      <description>【&lt;p&gt;The programming language Java is recognized globally for its versatility, robustness, and user-friendly nature, making it one of the most widely used languages. Despite its popularity, individuals at all levels of expertise, from beginners to seasoned programmers, may face challenges comprehending the intricacies of Java, perceiving it as intricate and overwhelming. This comprehensive guide has been meticulously crafted to address these challenges by presenting lucid explanations, and practical examples, and placing a strong emphasis on the development of straightforward, elegant code.&lt;/p&gt;&#xA;&lt;p&gt;Upon completion of this guide, you will have gained a comprehensive understanding of how to simplify the process of &lt;a href=&#34;https://dzone.com/articles/java-tutorial-to-learn-java-programming&#34;&gt;Java programming&lt;/a&gt;. This will enable you to produce code that is not only efficient but also highly readable and easily maintainable.&lt;/p&gt;】&lt;p&gt;编程语言 Java 因其多功能性、稳健性和用户友好性而获得全球认可，使其成为使用最广泛的语言之一。尽管它很受欢迎，但各个专业水平的个人，从初学者到经验丰富的程序员，在理解 Java 的复杂性方面可能会面临挑战，认为它错综复杂且令人难以承受。这本综合指南经过精心编写，通过提供清晰的解释和实际示例来应对这些挑战，并重点强调简单、优雅的代码的开发。&lt;/p&gt;&#xA;&lt;p&gt;完成本指南后，您将全面了解如何简化&lt;a href=&#34;https://dzone.com/articles/java-tutorial-to-learn-java-programming&#34;的过程&gt;Java编程&lt;/a&gt;。这将使您能够生成不仅高效而且具有高度可读性和易于维护的代码。&lt;/p&gt;</description>
      <pubDate>Thu, 18 Jul 2024 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Test Smells: Cleaning up E2E Tests】测试气味：清理 E2E 测试</title>
      <link>https://dzone.com/articles/test-smells-cleaning-up-e2e-tests</link>
      <description>【&lt;p&gt;In practical terms, knowing how &lt;em&gt;not&lt;/em&gt; to write tests might be as important as knowing how to write them. There are some very helpful chapters on test smells in Gerard Meszaros&#39;s &lt;a href=&#34;http://xunitpatterns.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;book about xUnit patterns&lt;/a&gt; — and more great stuff around the internet; however, it&#39;s always helpful to have practical examples for particular tech stacks.&lt;/p&gt;&#xA;&lt;p&gt;We&#39;ve already shown &lt;a href=&#34;https://dzone.com/articles/test-smells-cleaning-up-unit-tests&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;how to clean up unit tests&lt;/a&gt;; this time, we&#39;ll do JUnit + Selenide end-to-end tests, at the top of the pyramid. We&#39;re assuming you&#39;re familiar with Selenide, but most stuff here is valid for other stacks, too.&lt;/p&gt;】&lt;p&gt;实际上，了解如何&lt;em&gt;不&lt;/em&gt;编写测试可能与了解如何编写测试同样重要。 Gerard Meszaros 的&lt;a href=&#34;http://xunitpatterns.com/&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;关于 xUnit 模式的书&lt;/a&gt;中有一些关于测试气味的非常有用的章节 - 还有更多精彩的章节互联网上的东西；但是，针对特定技术堆栈提供实际示例总是很有帮助的。&lt;/p&gt;&#xA;&lt;p&gt;我们已经展示了&lt;a href=&#34;https://dzone.com/articles/test-smells-cleaning-up-unit-tests&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;如何清洁进行单元测试&lt;/a&gt;；这次，我们将在金字塔的顶部进行 JUnit + Selenide 端到端测试。我们假设您熟悉 Selenide，但这里的大多数内容也适用于其他堆栈。&lt;/p&gt;</description>
      <pubDate>Thu, 18 Jul 2024 22:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>