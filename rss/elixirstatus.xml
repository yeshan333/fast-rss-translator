<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ElixirStatus</title>
    <link></link>
    <description>Elixir news and status updates from the community for Elixir and Phoenix</description>
    <item>
      <title>【Elixir CI: Testing, Publishing, and Containerization with GitHub Actions】Elixir CI：使用 GitHub Actions 进行测试、发布和容器化</title>
      <link>https://elixirstatus.com/p/6EOuQ-elixir-ci-testing-publishing-and-containerization-with-github-actions</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/Flo0807?uid=6EOuQ&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Elixir CI: Testing, Publishing, and Containerization with GitHub Actions&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    18 Aug 2024&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; Flo0807&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;This article is about setting up a CI pipeline for an Elixir application using GitHub Actions. We’ll cover installing dependencies, running tests, and checking code formatting, as well as publishing hex packages and building Docker images as part of the pipeline.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://farens.me/blog/elixir-ci-testing-publishing-and-containerization-with-github-actions&#34;&gt;https://farens.me/blog/elixir-ci-testing-publishing-and-containerization-with-github-actions&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/6EOuQ-elixir-ci-testing-publishing-and-containerization-with-github-actions&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;表格宽度=“100%”边框=“0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td 宽度=80 valign=顶部&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/Flo0807?uid=6EOuQ&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Elixir CI：使用 GitHub Actions 进行测试、发布和容器化&lt;/h1&gt;&#xA;&#xA;                &lt;字体颜色=“#aaa”&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    2024 年 8 月 18 日&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; Flo0807&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;本文介绍如何使用 GitHub Actions 为 Elixir 应用程序设置 CI 管道。我们将介绍安装依赖项、运行测试和检查代码格式，以及发布十六进制包和构建 Docker 映像作为管道的一部分。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://farens.me/blog/elixir-ci-testing-publishing-and-containerization-with-github-actions&#34;&gt;https://farens.me/blog/elixir-ci-testing-使用 github 操作发布和容器化&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;小时&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/6EOuQ-elixir-ci-testing-publishing-and-containerization-with-github-actions&#34;&gt;在 ElixirStatus 上查看&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/表&gt;</description>
      <pubDate>Sun, 18 Aug 2024 16:31:25 +0000</pubDate>
    </item>
    <item>
      <title>【Thinking Elixir 215: Bob gets busy and Google&#39;s in trouble】Thinking Elixir 215：鲍勃很忙，谷歌遇到了麻烦</title>
      <link>https://elixirstatus.com/p/jzrYe-thinking-elixir-215-bob-gets-busy-and-googles-in-trouble</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/brainlid?uid=jzrYe&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Thinking Elixir 215: Bob gets busy and Google&#39;s in trouble&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    13 Aug 2024&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; brainlid&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Episode 215 of &lt;a href=&#34;https://podcast.thinkingelixir.com&#34;&gt;Thinking Elixir&lt;/a&gt;. News includes a new video by German Velasco explaining &lt;code class=&#34;inline&#34;&gt;quote&lt;/code&gt; and &lt;code class=&#34;inline&#34;&gt;unquote&lt;/code&gt; in Elixir macros, updates on the Hex.pm “Bob” project for pre-built Elixir and Erlang binaries, Sonic Pi sponsorships and support from Dashbit, the release of ElixirLS v0.23.0, and Google’s recent antitrust ruling. We also cover new developments with the Error Tracker library, Florian Arens’ guide to building a Phoenix HEEx component, and upcoming events at ElixirConf 2024, and more!&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://podcast.thinkingelixir.com/215&#34;&gt;https://podcast.thinkingelixir.com/215&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/jzrYe-thinking-elixir-215-bob-gets-busy-and-googles-in-trouble&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;表格宽度=“100%”边框=“0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td 宽度=80 valign=顶部&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/brainlid?uid=jzrYe&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Thinking Elixir 215：Bob 很忙，Google 遇到了麻烦&lt;/h1&gt;&#xA;&#xA;                &lt;字体颜色=“#aaa”&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    2024 年 8 月 13 日&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; Brainlid&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;&lt;a href=&#34;https://podcast.thinkingelixir.com&#34;&gt;Thinking Elixir&lt;/a&gt; 第 215 集。新闻包括 German Velasco 的新视频，解释 Elixir 宏中的 &lt;code class=&#34;inline&#34;&gt;quote&lt;/code&gt; 和 &lt;code class=&#34;inline&#34;&gt;unquote&lt;/code&gt;，以及 Hex.pm “Bob” 项目的更新预构建的 Elixir 和 Erlang 二进制文件、Dashbit 的 Sonic Pi 赞助和支持、ElixirLS v0.23.0 的发布以及 Google 最近的反垄断裁决。我们还介绍了错误跟踪器库的新开发、Florian Arens 构建 Phoenix HEEx 组件的指南以及 ElixirConf 2024 即将举行的活动等等！&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://podcast.thinkingelixir.com/215&#34;&gt;https://podcast.thinkingelixir.com/215&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;小时&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/jzrYe-thinking-elixir-215-bob-gets-busy-and-googles-in-trouble&#34;&gt;在 ElixirStatus 上查看&lt;/a&gt;&lt;/小&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/表&gt;</description>
      <pubDate>Tue, 13 Aug 2024 12:15:29 +0000</pubDate>
    </item>
    <item>
      <title>【Umbrella? Poncho? Go Naked!】伞？雨披？裸体吧！</title>
      <link>https://elixirstatus.com/p/ISv8h-umbrella-poncho-go-naked</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/amclain?uid=ISv8h&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Umbrella? Poncho? Go Naked!&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    13 Aug 2024&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; amclain&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Run a Phoenix web-based UI directly within a Nerves firmware project. No umbrella, no poncho.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://redwirelabs.com/blog/naked-phoenix&#34;&gt;https://redwirelabs.com/blog/naked-phoenix&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/ISv8h-umbrella-poncho-go-naked&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;表格宽度=“100%”边框=“0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td 宽度=80 valign=顶部&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/amclain?uid=ISv8h&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;雨伞？雨披？裸体吧！&lt;/h1&gt;&#xA;&#xA;                &lt;字体颜色=“#aaa”&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    2024 年 8 月 13 日&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; amclain&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;直接在 Nerves 固件项目中运行 Phoenix 基于 Web 的 UI。没有雨伞，没有雨披。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://redwirelabs.com/blog/naked-phoenix&#34;&gt;https://redwirelabs.com/blog/naked-phoenix&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;小时&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/ISv8h-umbrella-poncho-go-naked&#34;&gt;在 ElixirStatus 上查看&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/表&gt;</description>
      <pubDate>Tue, 13 Aug 2024 06:49:19 +0000</pubDate>
    </item>
    <item>
      <title>【What language modeling is all about?】语言建模到底是什么？</title>
      <link>https://elixirstatus.com/p/aUZcA-what-language-modeling-is-all-about</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/karolinauske?uid=aUZcA&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;What language modeling is all about?&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    12 Aug 2024&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; karolinauske&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;How does AI “speak” and “understand”? &#xA;Check our latest blog to learn all about language modeling—the technology behind how AI interprets and generates human language. &lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://curiosum.com/sl/bvjfecgl&#34;&gt;https://curiosum.com/sl/bvjfecgl&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/aUZcA-what-language-modeling-is-all-about&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;表格宽度=“100%”边框=“0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td 宽度=80 valign=顶部&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/karolinauske?uid=aUZcA&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;语言建模是什么？&lt;/h1&gt;&#xA;&#xA;                &lt;字体颜色=“#aaa”&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    2024 年 8 月 12 日&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; 卡罗莱瑙斯克&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;AI如何“说话”和“理解”？ &#xA;查看我们最新的博客，了解有关语言建模的所有信息——人工智能如何解释和生成人类语言背后的技术。 &lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://curiosum.com/sl/bvjfecgl&#34;&gt;https://curiosum.com/sl/bvjfecgl&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;小时&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/aUZcA-what-language-modeling-is-all-about&#34;&gt;在 ElixirStatus 上查看&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/表&gt;</description>
      <pubDate>Mon, 12 Aug 2024 12:57:35 +0000</pubDate>
    </item>
    <item>
      <title>【ErrorTracker v0.2.0 has been released】ErrorTracker v0.2.0 已发布</title>
      <link>https://elixirstatus.com/p/MEUtq-errortracker-v020-has-been-released</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/crbelaus?uid=MEUtq&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;ErrorTracker v0.2.0 has been released&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    12 Aug 2024&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; crbelaus&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;We have just released a new version of ErrorTracker, the Elixir based built-in error tracker. This version adds a few key improvements:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&#xA;&lt;strong&gt;SQLite 3 compatibility&lt;/strong&gt; - including a better way to track database schema versions  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;&lt;strong&gt;Telemetry events&lt;/strong&gt; - can be used to integrate your own notifications  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;&lt;strong&gt;UI improvements&lt;/strong&gt; - more refined styles and UX  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;&lt;strong&gt;A better test suite&lt;/strong&gt; - including testing in both RDBMS and different Elixir/Erlang versions in the CI  &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;Take a look at the &lt;a href=&#34;https://github.com/elixir-error-tracker/error-tracker&#34;&gt;GitHub repository&lt;/a&gt; and the &lt;a href=&#34;https://hex.pm/packages/error_tracker&#34;&gt;Hex.pm package&lt;/a&gt; for the detailed &lt;a href=&#34;https://github.com/elixir-error-tracker/error-tracker/releases/tag/v0.2.0&#34;&gt;release notes&lt;/a&gt; and &lt;a href=&#34;https://hexdocs.pm/error_tracker/getting-started.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/MEUtq-errortracker-v020-has-been-released&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;表格宽度=“100%”边框=“0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td 宽度=80 valign=顶部&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/crbelaus?uid=MEUtq&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;ErrorTracker v0.2.0 已发布&lt;/h1&gt;&#xA;&#xA;                &lt;字体颜色=“#aaa”&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    2024 年 8 月 12 日&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; crbelaus&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;我们刚刚发布了新版本的 ErrorTracker，这是基于 Elixir 的内置错误跟踪器。此版本添加了一些关键改进：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&#xA;&lt;strong&gt;SQLite 3 兼容性&lt;/strong&gt; - 包括更好的方法来跟踪数据库架构版本&lt;/li&gt;&#xA;  &lt;li&gt;&#xA;&lt;strong&gt;遥测事件&lt;/strong&gt; - 可用于集成您自己的通知&lt;/li&gt;&#xA;  &lt;li&gt;&#xA;&lt;strong&gt;用户界面改进&lt;/strong&gt; - 更精致的风格和用户体验&lt;/li&gt;&#xA;  &lt;li&gt;&#xA;&lt;strong&gt;更好的测试套件&lt;/strong&gt; - 包括在 RDBMS 和 CI 中的不同 Elixir/Erlang 版本中进行测试 &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;查看 &lt;a href=&#34;https://github.com/elixir-error-tracker/error-tracker&#34;&gt;GitHub 存储库&lt;/a&gt; 和 &lt;a href=&#34;https://hex.pm/ packages/error_tracker&#34;&gt;Hex.pm 包&lt;/a&gt;了解详细的&lt;a href=&#34;https://github.com/elixir-error-tracker/error-tracker/releases/tag/v0.2.0&#34;&gt;发行说明&lt;/a&gt; 和&lt;a href=&#34;https://hexdocs.pm/error_tracker/getting-started.html&#34;&gt;文档&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;                &lt;小时&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/MEUtq-errortracker-v020-has-been-released&#34;&gt;在 ElixirStatus 上查看&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/表&gt;</description>
      <pubDate>Mon, 12 Aug 2024 17:31:34 +0000</pubDate>
    </item>
    <item>
      <title>【OTP for Elixir Programmers (course)】Elixir 程序员的 OTP（课程）</title>
      <link>https://elixirstatus.com/p/gqkRF-otp-for-elixir-programmers-course</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/kamila-codesync?uid=gqkRF&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;OTP for Elixir Programmers (course)&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    19 Aug 2024&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; kamila-codesync&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;💜 &lt;strong&gt;3 day in-person course with Łukasz Pauszek&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;🗓️&lt;strong&gt;16-18 Oct, Berlin&lt;/strong&gt; (right after Code BEAM Europe)&lt;/p&gt;&#xA;&lt;p&gt;&#xA;Dive deep into the inner workings of building applications using OTP behaviours, exploring the proven abstractions necessary for creating back-end, fault-tolerant systems that can run for years and scale to billions of users.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;The course includes ample lab time, allowing you to hone your skills and apply theory to practice, with about half of the class dedicated to lab work or coding alongside your instructor.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;More info: &lt;a href=&#34;https://codebeameurope.com/trainings/otp-training-for-elixir-programmers&#34;&gt;https://codebeameurope.com/trainings/otp-training-for-elixir-programmers&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/gqkRF-otp-for-elixir-programmers-course&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;表格宽度=“100%”边框=“0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td 宽度=80 valign=顶部&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/kamila-codesync?uid=gqkRF&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Elixir 程序员的 OTP（课程）&lt;/h1&gt;&#xA;&#xA;                &lt;字体颜色=“#aaa”&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    2024 年 8 月 19 日&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; 卡米拉-codesync&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;💜 &lt;strong&gt;Łukasz Pauszek 为期 3 天的面对面课程&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;🗓️&lt;strong&gt;10 月 16 日至 18 日，柏林&lt;/strong&gt;（紧接着 Code BEAM Europe）&lt;/p&gt;&#xA;&lt;p&gt;&#xA;深入研究使用 OTP 行为构建应用程序的内部工作原理，探索创建可运行数年并扩展到数十亿用户的后端容错系统所需的经过验证的抽象。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;该课程包括充足的实验时间，让您可以磨练自己的技能并将理论应用于实践，大约一半的课程致力于与讲师一起进行实验室工作或编码。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;更多信息：&lt;a href=&#34;https://codebeameurope.com/trainings/otp-training-for-elixir-programmers&#34;&gt;https://codebeameurope.com/trainings/otp-training-for-elixir-programmers&lt;/一个&gt;&lt;/p&gt;&#xA;&#xA;                &lt;小时&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/gqkRF-otp-for-elixir-programmers-course&#34;&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/表&gt;</description>
      <pubDate>Mon, 19 Aug 2024 18:01:08 +0000</pubDate>
    </item>
    <item>
      <title>【Erlang Fundamentals for Debugging Elixir 】Elixir 调试的 Erlang 基础知识</title>
      <link>https://elixirstatus.com/p/vVP0q-erlang-fundamentals-for-debugging-elixir-</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/kamila-codesync?uid=vVP0q&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Erlang Fundamentals for Debugging Elixir &lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    19 Aug 2024&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; kamila-codesync&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;&lt;a href=&#34;https://youtu.be/RHAxGtewcEA&#34;&gt;https://youtu.be/RHAxGtewcEA&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;strong&gt;This talk by Lorena Mireles was recorded at Code BEAM America 2024&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;In this talk we will explore the fundamentals behind the magic of some of the debugging tools in Elixir and their benefits to debug borderline conditions and find hard to reproduce bugs in live Erlang systems 🔮🪄&lt;/p&gt;&#xA;&lt;p&gt;&#xA;Elixir has a very powerful set of debugging tools not everyone is aware of. They bring the community benefits inherited from the need to debug borderline conditions and find hard to reproduce bugs in live Erlang systems. In this talk, we’ll explore the foundations behind Elixir wrappers like Rexbug, using examples to explain the fundamentals which give us all this magic.&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/vVP0q-erlang-fundamentals-for-debugging-elixir-&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;表格宽度=“100%”边框=“0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td 宽度=80 valign=顶部&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/kamila-codesync?uid=vVP0q&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Erlang 调试 Elixir 基础知识 &lt;/h1&gt;&#xA;&#xA;                &lt;字体颜色=“#aaa”&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    2024 年 8 月 19 日&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; 卡米拉-codesync&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;&lt;a href=&#34;https://youtu.be/RHAxGtewcEA&#34;&gt;https://youtu.be/RHAxGtewcEA&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;strong&gt;Lorena Mireles 的演讲是在 Code BEAM America 2024 上录制的&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;在本次演讲中，我们将探讨 Elixir 中一些调试工具的神奇之处及其在调试边界条件和在实时 Erlang 系统中发现难以重现的错误方面的优势 🔮🪄&lt;/p&gt;&#xA;&lt;p&gt;&#xA;Elixir 有一套非常强大的调试工具，但并不是每个人都知道。他们带来了社区的好处，这些好处继承自调试边界条件的需要，并在实时 Erlang 系统中发现难以重现的错误。在本次演讲中，我们将探讨 Rexbug 等 Elixir 包装器背后的基础，并使用示例来解释赋予我们所有这些魔力的基础知识。&lt;/p&gt;&#xA;&#xA;                &lt;小时&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/vVP0q-erlang-fundamentals-for-debugging-elixir-&#34;&gt;在 ElixirStatus 上查看&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/表&gt;</description>
      <pubDate>Mon, 19 Aug 2024 09:26:38 +0000</pubDate>
    </item>
    <item>
      <title>【Kino integration for libgraph】libgraph 的 Kino 集成</title>
      <link>https://elixirstatus.com/p/lw0dZ-kino-integration-for-libgrap</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/dustessavdh?uid=lw0dZ&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Kino integration for libgraph&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    20 Aug 2024&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; dustessavdh&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Hi everyone,&lt;/p&gt;&#xA;&lt;p&gt;&#xA;I’ve just released a simple Kino integration for Libgraph! 🎉&lt;/p&gt;&#xA;&lt;p&gt;&#xA;This is an early version with lots of room for improvement and new features. I’m planning to dedicate some time this weekend to expand and polish it further.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;I’d love to hear your thoughts and feedback. Check it out here: &lt;a href=&#34;https://hex.pm/packages/kino_libgraph&#34;&gt;https://hex.pm/packages/kino_libgraph&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;Hope you find it useful!&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/lw0dZ-kino-integration-for-libgrap&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;表格宽度=“100%”边框=“0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td 宽度=80 valign=顶部&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/dustessavdh?uid=lw0dZ&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;libgraph 的 Kino 集成&lt;/h1&gt;&#xA;&#xA;                &lt;字体颜色=“#aaa”&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    2024 年 8 月 20 日&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt;dustessavdh&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;大家好，&lt;/p&gt;&#xA;&lt;p&gt;&#xA;我刚刚发布了一个简单的 Libgraph Kino 集成！ 🎉&lt;/p&gt;&#xA;&lt;p&gt;&#xA;这是一个早期版本，有很大的改进空间和新功能。我计划这个周末花一些时间来进一步扩展和完善它。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;我很想听听您的想法和反馈。在这里查看：&lt;a href=&#34;https://hex.pm/packages/kino_libgraph&#34;&gt;https://hex.pm/packages/kino_libgraph&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;希望您觉得它有用！&lt;/p&gt;&#xA;&#xA;                &lt;小时&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/lw0dZ-kino-integration-for-libgrap&#34;&gt;在 ElixirStatus 上查看&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/表&gt;</description>
      <pubDate>Tue, 20 Aug 2024 01:01:07 +0000</pubDate>
    </item>
    <item>
      <title>【How to Proof of Concept (and how not to)】如何进行概念验证（以及如何不进行）</title>
      <link>https://elixirstatus.com/p/mWWl4-how-to-proof-of-concept-and-how-not-to</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/viktoriia-yarosh?uid=mWWl4&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;How to Proof of Concept (and how not to)&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    19 Aug 2024&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; viktoriia-yarosh&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;By implementing a lean PoC process, developers can accelerate decision-making, foster innovation, and optimize resource allocation. Explore the best and the worst uses of this software development strategic tool in Freshcode’s article: &lt;a href=&#34;https://www.freshcodeit.com/blog/how-to-proof-of-concept&#34;&gt;https://www.freshcodeit.com/blog/how-to-proof-of-concept&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/mWWl4-how-to-proof-of-concept-and-how-not-to&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;表格宽度=“100%”边框=“0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td 宽度=80 valign=顶部&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/viktoriia-yarosh?uid=mWWl4&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;如何进行概念验证（以及如何不进行）&lt;/h1&gt;&#xA;&#xA;                &lt;字体颜色=“#aaa”&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    2024 年 8 月 19 日&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; viktoriia-yarosh&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;通过实施精益 PoC 流程，开发人员可以加速决策、促进创新并优化资源配置。在 Freshcode 的文章中探索此软件开发战略工具的最佳和最差用途：&lt;a href=&#34;https://www.freshcodeit.com/blog/how-to-proof-of-concept&#34;&gt;https://www .freshcodeit.com/blog/how-to-proof-of-concept&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;小时&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/mWWl4-how-to-proof-of-concept-and-how-not-to&#34;&gt;在 ElixirStatus 上查看&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/表&gt;</description>
      <pubDate>Mon, 19 Aug 2024 14:21:39 +0000</pubDate>
    </item>
    <item>
      <title>【State (Machine) of Enlightenment [Nerves Meetup]】启蒙状态（机器）[神经聚会]</title>
      <link>https://elixirstatus.com/p/66O7z-state-machine-of-enlightenment-nerves-meetup</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/amclain?uid=66O7z&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;State (Machine) of Enlightenment [Nerves Meetup]&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    12 Aug 2024&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; amclain&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Ben Murphy explores how Erlang OTP’s :gen_statem can outperform GenServer in managing complex, unpredictable systems. Learn how this state-machine-based approach offers cleaner transitions and more powerful directives, simplifying even the toughest system designs.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://www.meetup.com/nerves/events/298253639&#34;&gt;https://www.meetup.com/nerves/events/298253639&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/66O7z-state-machine-of-enlightenment-nerves-meetup&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;表格宽度=“100%”边框=“0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td 宽度=80 valign=顶部&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/amclain?uid=66O7z&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;启蒙状态（机器）[神经聚会]&lt;/h1&gt;&#xA;&#xA;                &lt;字体颜色=“#aaa”&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    2024 年 8 月 12 日&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; amclain&#xA;                  &lt;/font&gt;&#xA;                  &lt;字体颜色=“#aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Ben Murphy 探讨了 Erlang OTP 的 :gen_statem 在管理复杂、不可预测的系统方面如何优于 GenServer。了解这种基于状态机的方法如何提供更清晰的转换和更强大的指令，从而简化最困难的系统设计。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://www.meetup.com/nerves/events/298253639&#34;&gt;https://www.meetup.com/nerves/events/298253639&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;小时&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/66O7z-state-machine-of-enlightenment-nerves-meetup&#34;&gt;在 ElixirStatus 上查看&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/表&gt;</description>
      <pubDate>Mon, 12 Aug 2024 00:49:55 +0000</pubDate>
    </item>
  </channel>
</rss>