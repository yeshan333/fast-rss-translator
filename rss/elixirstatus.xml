<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ElixirStatus</title>
    <link></link>
    <description>Elixir news and status updates from the community for Elixir and Phoenix</description>
    <item>
      <title>【Introducing Contexted – Phoenix Contexts, Simplified】介绍上下文 - 凤凰环境，简化</title>
      <link>https://elixirstatus.com/p/BYWl2-introducing-contexted--phoenix-contexts-simplified</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/szsoppa?uid=BYWl2&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Introducing Contexted – Phoenix Contexts, Simplified&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    17 Feb 2025&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; szsoppa&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;One of the most unproductive activities an Elixir software developer can engage in is determining which module should implement a given function and how to maintain complex business logic.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;Contexted is an open-source library that solves these problems, and this article presents scenarios where it can be useful.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://curiosum.com/blog/introducing-contexted&#34;&gt;https://curiosum.com/blog/introducing-contexted&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/BYWl2-introducing-contexted--phoenix-contexts-simplified&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;table width =“ 100％” border =“ 0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td宽度= 80 valign = top&gt;&#xA;                &lt;img src =“ https://elixirstatus.com/rss/avatar/szsoppa?uid=bywl2” width =“ 64” height =“ 64”/&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;介绍上下文 - 凤凰环境，简化&lt;/h1&gt;&#xA;&#xA;                &lt;font color =“＃aaa”&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    2025年2月17日&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class =“ icon-git_circle”&gt; &lt;/i&gt; szsoppa&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Elixir软件开发人员可以参与的最无生产的活动之一是确定哪个模块应实现给定功能以及如何维护复杂的业务逻辑。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;上下文是一个解决这些问题的开源库，本文介绍了可以有用的方案。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href =“ https://curiosum.com/blog/introducing-contexted”&gt; https://curiosum.com/blog/introducing-contexted &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt; &lt;a href =“ https://elixirstatus.com/p/bywl2-indroducing-contexted--- phoenix-contexts-simplified”&gt;在Elixirstatus上的视图&lt;/a&gt; &lt;/a&gt; &lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;</description>
      <pubDate>Mon, 17 Feb 2025 10:00:41 +0000</pubDate>
    </item>
    <item>
      <title>【Better Elixir diffs with difftastic】更好的长生不老药与差异</title>
      <link>https://elixirstatus.com/p/ox9j1-better-elixir-diffs-with-difftastic</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/crbelaus?uid=ox9j1&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Better Elixir diffs with difftastic&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    18 Feb 2025&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; crbelaus&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Difftastic is a structural diffing tool that understands syntax:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&#xA;Difftastic is a CLI diff tool that compares files based on their syntax, not line-by-line. Difftastic produces accurate diffs that are easier for humans to read.  &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;Unfortunately, Difftastic did not understand HEEx templates syntax well, so changes were not highlighted properly. I’ve submitted a pull request to fix this which is now merged, so any Elixir dev using Difftastic should see improved diffing for HEEx templates.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://crbelaus.com/2025/02/10/better-elixir-diffs-with-difftastic&#34;&gt;https://crbelaus.com/2025/02/10/better-elixir-diffs-with-difftastic&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/ox9j1-better-elixir-diffs-with-difftastic&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;table width =“ 100％” border =“ 0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td宽度= 80 valign = top&gt;&#xA;                &lt;img src =“ https://elixirstatus.com/rss/avatar/crbelaus?uid = ox9j1” width =“ 64” height =“ 64”/&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;更好的长生不老药与差异&lt;/h1&gt;&#xA;&#xA;                &lt;font color =“＃aaa”&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    2025年2月18日&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class =“ icon-git_circle”&gt; &lt;/i&gt; crbelaus&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;分散是一种理解语法的结构扩散工具：&lt;/p&gt;&#xA;&lt;BlockQuote&gt;&#xA;  &lt;p&gt;&#xA;Difftastic是一个CLI DIFF工具，可以根据其语法而不是逐条比较文件进行比较。差异会产生精确的差异，使人类更容易阅读。  &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;不幸的是，Difftastic不太了解Heex模板语法，因此变化未正确强调。我已经提交了一个拉动请求来修复现在已合并的此问题，因此任何使用差异的精灵开发都应看到Heex模板的扩散。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;A href =“ https://crbelaus.com/2025/02/10/better-elixir-diffs-with-difftastic”&gt; https:///crbelaus.com/2025/02/02/10/10/better-elixir-elixir-diffs-diffs-diffs-with-diffs-with-dith-dith-diffftasticasticastic &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt; &lt;a href =“ https://elixirstatus.com/p/ox9j1-better-elixir-diffs-with-difftastic”&gt;在Elixirstatus上查看&lt;/a&gt; &lt;/a&gt; &lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;</description>
      <pubDate>Tue, 18 Feb 2025 10:48:51 +0000</pubDate>
    </item>
    <item>
      <title>【Thinking Elixir 241: A LiveView Debugger and Gigalixir】思考Elixir 241：Liveview调试器和Gigalixir</title>
      <link>https://elixirstatus.com/p/fHSXQ-thinking-elixir-241-a-liveview-debugger-and-gigalixir</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/brainlid?uid=fHSXQ&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Thinking Elixir 241: A LiveView Debugger and Gigalixir&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    18 Feb 2025&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; brainlid&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Episode 241 of &lt;a href=&#34;https://podcast.thinkingelixir.com&#34;&gt;Thinking Elixir&lt;/a&gt;. News includes the release of LiveDebugger, an exciting new browser-based debugging tool for Phoenix LiveView applications and the announcement of Artifix for creating private Hex registries on S3 and CloudFront. We are also joined by Tim Knight, the CTO at Gigalixir, to get a peek inside the machine that is Gigalixir and learn more about how the platform specializes in providing an excellent Elixir deployment experience, and more!&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=2UWy2ociW_A&#34;&gt;https://www.youtube.com/watch?v=2UWy2ociW_A&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/fHSXQ-thinking-elixir-241-a-liveview-debugger-and-gigalixir&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;table width =“ 100％” border =“ 0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td宽度= 80 valign = top&gt;&#xA;                &lt;img src =“ https://elixirstatus.com/rss/avatar/brainlid?uid=fhsxq” width =“ 64” height =“ 64”/&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;思考Elixir 241：Liveview调试器和Gigalixir &lt;/h1&gt;&#xA;&#xA;                &lt;font color =“＃aaa”&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    2025年2月18日&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class =“ icon-git_circle”&gt; &lt;/i&gt; Brainlid&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;&lt;a href =“ https://podcast.thinkingelixir.com”的第241集&gt;思考Elixir &lt;/a&gt;。新闻包括发行Livedebugger，这是一种令人兴奋的新浏览器调试工具，用于Phoenix Liveview应用程序，并发布用于在S3和CloudFront上创建私人HEX注册表的Artifix。我们还加入了Gigalixir的CTO Tim Knight，以在机器内窥视Gigalixir，并了解有关该平台如何专门提供出色的Elixir部署体验的更多信息！&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href =“ https://www.youtube.com/watch?v=2uwy2ociw_a”&gt; https://www.youtube.com/watch?v=2uwy2ociw_a &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt; &lt;A href =“ https://elixirstatus.com/p/fhsxq-thinking-elixir-241-a-liveview-debuggger-and-gigalixir”&gt;在Elixirstatus上查看&lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;</description>
      <pubDate>Tue, 18 Feb 2025 12:49:40 +0000</pubDate>
    </item>
    <item>
      <title>【Thinking Elixir 242: Magic Links and Sudo Mode】思考Elixir 242：魔术链接和Sudo模式</title>
      <link>https://elixirstatus.com/p/VB9ZL-thinking-elixir-242-magic-links-and-sudo-mode</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/brainlid?uid=VB9ZL&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Thinking Elixir 242: Magic Links and Sudo Mode&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    25 Feb 2025&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; brainlid&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Episode 242 of &lt;a href=&#34;https://podcast.thinkingelixir.com&#34;&gt;Thinking Elixir&lt;/a&gt;. News includes exciting updates to Phoenix gen_auth with magic links and sudo mode security features, a comprehensive guide on Elixir and Phoenix security best practices from Paraxial.io, significant updates to the DaisyUI Components library for Phoenix LiveView reaching version 0.7.0, more on LiveDebugger tool for Phoenix applications, performance improvements in PostgreSQL’s self-join handling, and more!&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=sh83YxptPTY&#34;&gt;https://www.youtube.com/watch?v=sh83YxptPTY&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/VB9ZL-thinking-elixir-242-magic-links-and-sudo-mode&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;table width =“ 100％” border =“ 0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td宽度= 80 valign = top&gt;&#xA;                &lt;img src =“ https://elixirstatus.com/rss/avatar/brainlid?uid=vb9zl” width =“ 64” height =“ 64”/&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;思考Elixir 242：魔术链接和sudo模式&lt;/h1&gt;&#xA;&#xA;                &lt;font color =“＃aaa”&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    2025年2月25日&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class =“ icon-git_circle”&gt; &lt;/i&gt; Brainlid&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;&lt;a href =“ https://podcast.thinkingelixir.com”的第242集&gt;思考Elixir &lt;/a&gt;。 News includes exciting updates to Phoenix gen_auth with magic links and sudo mode security features, a comprehensive guide on Elixir and Phoenix security best practices from Paraxial.io, significant updates to the DaisyUI Components library for Phoenix LiveView reaching version 0.7.0, more on LiveDebugger tool for Phoenix applications, performance improvements in PostgreSQL’s self-join handling, and更多！&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href =“ https://www.youtube.com/watch?v=sh83yxptpy”&gt; https://www.youtube.com/watch?v=sh83yxptpty &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt; &lt;a href =“ https://elixirstatus.com/p/vb9zl-thinking-elixir-242-magic-link-links-and-sudo-mode”&gt;在Elixirstatus上查看&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;</description>
      <pubDate>Tue, 25 Feb 2025 13:31:46 +0000</pubDate>
    </item>
    <item>
      <title>【Thinking Elixir 242: Magic Links and Sudo Mode】思考Elixir 242：魔术链接和Sudo模式</title>
      <link>https://elixirstatus.com/p/sn4jt-thinking-elixir-242-magic-links-and-sudo-mode</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/brainlid?uid=sn4jt&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Thinking Elixir 242: Magic Links and Sudo Mode&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    25 Feb 2025&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; brainlid&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Episode 242 of &lt;a href=&#34;https://podcast.thinkingelixir.com&#34;&gt;Thinking Elixir&lt;/a&gt;. News includes exciting updates to Phoenix gen_auth with magic links and sudo mode security features, a comprehensive guide on Elixir and Phoenix security best practices from Paraxial.io, significant updates to the DaisyUI Components library for Phoenix LiveView reaching version 0.7.0, more on LiveDebugger tool for Phoenix applications, performance improvements in PostgreSQL’s self-join handling, and more!&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=sh83YxptPTY&#34;&gt;https://www.youtube.com/watch?v=sh83YxptPTY&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/sn4jt-thinking-elixir-242-magic-links-and-sudo-mode&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;table width =“ 100％” border =“ 0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td宽度= 80 valign = top&gt;&#xA;                &lt;img src =“ https://elixirstatus.com/rss/avatar/brainlid?uid=sn4jt” width =“ 64” height =“ 64”/&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;思考Elixir 242：魔术链接和sudo模式&lt;/h1&gt;&#xA;&#xA;                &lt;font color =“＃aaa”&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    2025年2月25日&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class =“ icon-git_circle”&gt; &lt;/i&gt; Brainlid&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;&lt;a href =“ https://podcast.thinkingelixir.com”的第242集&gt;思考Elixir &lt;/a&gt;。 News includes exciting updates to Phoenix gen_auth with magic links and sudo mode security features, a comprehensive guide on Elixir and Phoenix security best practices from Paraxial.io, significant updates to the DaisyUI Components library for Phoenix LiveView reaching version 0.7.0, more on LiveDebugger tool for Phoenix applications, performance improvements in PostgreSQL’s self-join handling, and更多！&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href =“ https://www.youtube.com/watch?v=sh83yxptpy”&gt; https://www.youtube.com/watch?v=sh83yxptpty &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt; &lt;a href =“ https://elixirstatus.com/p/sn4jt-thinking-elixir-242-magic-links-links-and-sudo-mode”&gt;在Elixirstatus上查看&lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;</description>
      <pubDate>Tue, 25 Feb 2025 13:31:43 +0000</pubDate>
    </item>
    <item>
      <title>【Mastering Job Scheduling With Ecron】通过ECRON掌握工作安排</title>
      <link>https://elixirstatus.com/p/fHV4i-mastering-job-scheduling-with-ecron</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/zhongwencool?uid=fHV4i&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Mastering Job Scheduling With Ecron&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    26 Feb 2025&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; zhongwencool&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Modern applications rely heavily on job scheduling libraries to manage asynchronous tasks, recurring processes, and distributed workloads. While implementing scheduling tasks in naturally asynchronous environments like Erlang and Elixir is straightforward, building a reliable and efficient solution requires careful consideration.&#xA;&lt;a href=&#34;https://zhongwencool.github.io/Mastering-Job-Scheduling-With-Ecron&#34;&gt;https://zhongwencool.github.io/Mastering-Job-Scheduling-With-Ecron&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/fHV4i-mastering-job-scheduling-with-ecron&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;table width =“ 100％” border =“ 0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td宽度= 80 valign = top&gt;&#xA;                &lt;img src =“ https://elixirstatus.com/rss/avatar/zhongwencool?uid=fhv4i” width =“ 64” height =“ 64”/&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;H1&gt;使用ECRON掌握作业计划&lt;/h1&gt;&#xA;&#xA;                &lt;font color =“＃aaa”&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    2025年2月26日&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class =“ icon-git_circle”&gt; &lt;/i&gt; zhongwencool&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;现代应用程序在很大程度上依赖于工作调度库来管理异步任务，经常性过程和分布式工作负载。在像Erlang和Elixir这样的自然异步环境中实施调度任务时，建立可靠，高效的解决方案需要仔细考虑。&#xA;&lt;a href =“ https://zhongwencool.github.io/mastering-job-scheduling-with-ecron”&gt; https://zhongwencool.github.io/mastering-mastering-job-job-job-scheduling-with-cecron-cecron-cecron-cecron-cecron-ecron &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt; &lt;a href =“ https://elixirstatus.com/p/fhv4i-mastering-mastering-job-scheduling-with-ecron”&gt;在Elixirstatus上查看&lt;/a&gt; &lt;/a&gt; &lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;</description>
      <pubDate>Wed, 26 Feb 2025 14:06:33 +0000</pubDate>
    </item>
    <item>
      <title>【Is it possible to use Nerves for low power systems?】是否可以将神经用于低功率系统？</title>
      <link>https://elixirstatus.com/p/6SCdb-is-it-possible-to-use-nerves-for-low-power-systems</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/amclain?uid=6SCdb&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Is it possible to use Nerves for low power systems?&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    28 Feb 2025&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; amclain&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;&lt;a href=&#34;https://youtu.be/PdewhYCPRko?si=vCOYAOXfYgpEHhzf&#34;&gt;https://youtu.be/PdewhYCPRko?si=vCOYAOXfYgpEHhzf&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/6SCdb-is-it-possible-to-use-nerves-for-low-power-systems&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;table width =“ 100％” border =“ 0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td宽度= 80 valign = top&gt;&#xA;                &lt;img src =“ https://elixirstatus.com/rss/avatar/amclain?uid=6scdb” width =“ 64” height =“ 64”/&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;是否可以将神经用于低功率系统？&lt;/h1&gt;&#xA;&#xA;                &lt;font color =“＃aaa”&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    2025年2月28日&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class =“ icon-git_circle”&gt; &lt;/i&gt; amclain&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;&lt;A href =“ https://youtu.be/pdewhycprko?si = vcoyaoxfygpehhzf”&gt; https://youtu.be/pdewhycprko?si = vcoyaoxfygpehhzf &lt;/a&gt; &lt;/p&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt; &lt;a href =“ https://elixirstatus.com/p/6scdb-is-it-possible-to-use-sneves-neves-for-low-power-systems”&gt;在Elixirstatus上查看&lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;</description>
      <pubDate>Fri, 28 Feb 2025 00:14:36 +0000</pubDate>
    </item>
    <item>
      <title>【5 Must-Attend Talks at ElixirConf EU on AI, Security &amp;amp; Scale!】5在ELIXIRCONF在AI，安全与规模上进行的必要对话！</title>
      <link>https://elixirstatus.com/p/iv2Hd-5-must-attend-talks-at-elixirconf-eu-on-ai-security--scale</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/ancatrusc?uid=iv2Hd&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;5 Must-Attend Talks at ElixirConf EU on AI, Security &amp;amp; Scale!&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    17 Feb 2025&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; ancatrusc&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Here’s a preview at just FIVE of the amazing talks happening at &#xA;1️⃣ Code Intelligence and RAG in Elixir with rag.ex by Chris Beck ➡️ &lt;a href=&#34;https://www.elixirconf.eu/talks/code-intelligence-and-rag-in-elixir-with-rag-ex/&#34;&gt;https://www.elixirconf.eu/talks/code-intelligence-and-rag-in-elixir-with-rag-ex/&lt;/a&gt; &#xA;2️⃣ Meta-Programming in Elixir: Dynamic Function Calling with LLMs by Conor Sinclair ➡️ &lt;a href=&#34;https://www.elixirconf.eu/talks/meta-programming-in-elixir-dynamic-function-calling-with-llms/&#34;&gt;https://www.elixirconf.eu/talks/meta-programming-in-elixir-dynamic-function-calling-with-llms/&lt;/a&gt; &#xA;3️⃣ Elixir for Automated Reasoning by David Fuenmayor ➡️ &lt;a href=&#34;https://www.elixirconf.eu/talks/elixir-for-automated-reasoning/&#34;&gt;https://www.elixirconf.eu/talks/elixir-for-automated-reasoning/&lt;/a&gt; &#xA;4️⃣ Developing Secure Web Applications with Phoenix by Eli Kroumova ➡️ &lt;a href=&#34;https://www.elixirconf.eu/talks/developing-secure-web-applications-with-phoenix/&#34;&gt;https://www.elixirconf.eu/talks/developing-secure-web-applications-with-phoenix/&lt;/a&gt; &#xA;5️⃣ How Elixir Powers the BBC: From PoC to Production at Scale by Ettore Berardi ➡️ &lt;a href=&#34;https://www.elixirconf.eu/talks/how-elixir-powers-the-bbc-from-poc-to-production-at-scale/&#34;&gt;https://www.elixirconf.eu/talks/how-elixir-powers-the-bbc-from-poc-to-production-at-scale/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/iv2Hd-5-must-attend-talks-at-elixirconf-eu-on-ai-security--scale&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;table width =“ 100％” border =“ 0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td宽度= 80 valign = top&gt;&#xA;                &lt;img src =“ https://elixirstatus.com/rss/avatar/ancatrusc?uid = 2hd” width =“ 64” height =“ 64”/&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt; 5在EU，Security＆Scale！&lt;/h1&gt;的Elixirconf在Elixirconf上进行的谈话！&lt;/h1&gt;&#xA;&#xA;                &lt;font color =“＃aaa”&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    2025年2月17日&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class =“ icon-git_circle”&gt; &lt;/i&gt; ancatrusc&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;这是一个仅在五次令人惊叹的演讲中的预览 &#xA;1️⃣代码智能和抹布在长生不老药中与rag.ex撰写 href=&#34;https://www.elixirconf.eu/talks/code-intelligence-and-rag-in-elixir-with-rag-ex/&#34;&gt;https://www.elixirconf.eu/talks/code-intelligence-and-rag-in-elixir-with-rag-ex/&lt;/a&gt; &#xA;2️⃣精英级的元编程：conor sinclair llms的动态功能➡️&lt;a href =“ https://www.elixirconf.eu/talks/meta-progmming-in-------------------------------------in--------------------------------------/- &#xA;David Fuenmayor的自动推理的3️⃣精神病&lt;a href =“ https://www.elixirconf.eu/talks/elixir-for-automated-reasoning/- &#xA;4️⃣用菲尼克斯（Phoenix）开发安全的Web应用程序。 href=&#34;https://www.elixirconf.eu/talks/developing-secure-web-applications-with-phoenix/&#34;&gt;https://www.elixirconf.eu/talks/developing-secure-web-applications-with-phoenix/&lt;/a&gt; &#xA;5️⃣精灵如何为BBC提供动力：从POC到生产，由Ettore Berardi➡️&lt;a href=&#34;https://www.elixirconf.eu/talks/how-elixir-powers-the-bbc-from-poc-to-production-at-scale/&#34;&gt;https://www.elixirconf.eu/talks/how-elixir-powers-the-bbc-from-poc-to-production-at-scale/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt; &lt;a href =“ https://elixirstatus.com/p/iv2hd-5-must-must-tald-talks-at------- eu-eu-eu-e on-ai-security-security-cale-secale-secale-secale-secale--cale&gt; tive tiew&gt; on Elixirstatus &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;</description>
      <pubDate>Mon, 17 Feb 2025 14:02:43 +0000</pubDate>
    </item>
    <item>
      <title>【Supercharge your Elixir apps with Rust! Join Luca Palmieri and Łukasz Pauszek  training at ElixirConf EU】用Rust增添您的长生不老药！加入Luca Palmieri和lukasz Pauszek培训</title>
      <link>https://elixirstatus.com/p/77Hpf-supercharge-your-elixir-apps-with-rust-join-luca-palmieri-and-ukasz-pauszek--training-at-elixirconf-eu</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/ancatrusc?uid=77Hpf&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;Supercharge your Elixir apps with Rust! Join Luca Palmieri and Łukasz Pauszek  training at ElixirConf EU&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    24 Feb 2025&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; ancatrusc&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;Supercharge your Elixir apps with Rust! Learn to accelerate CPU-heavy routines and integrate Rust libraries into BEAM applications. Key takeaways: writing efficient NIFs, orchestrating Rust with Elixir concurrency, and choosing the right tool for each job. Perfect for Elixir devs curious about Rust - no prior Rust knowledge needed! Join Luca Palmieri and&#xA;Łukasz Pauszek  at #ElixirConfEU&#xA;&lt;a href=&#34;https://www.elixirconf.eu/trainings/interfacing-rust-in-elixir/&#34;&gt;https://www.elixirconf.eu/trainings/interfacing-rust-in-elixir/&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/77Hpf-supercharge-your-elixir-apps-with-rust-join-luca-palmieri-and-ukasz-pauszek--training-at-elixirconf-eu&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;table width =“ 100％” border =“ 0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td宽度= 80 valign = top&gt;&#xA;                &lt;img src =“ https://elixirstatus.com/rss/avatar/ancatrusc?uid=77hpf” width =“ 64” height =“ 64”/&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;用Rust增添您的Elixir应用程序！加入Elixirconf EU &lt;/h1&gt;的Luca Palmieri和&#xA;&#xA;                &lt;font color =“＃aaa”&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    2025年2月24日&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class =“ icon-git_circle”&gt; &lt;/i&gt; ancatrusc&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;用Rust增添您的长生不老药！学会加快CPU重型例程，并将Rust库集成到光束应用中。关键要点：编写有效的NIFS，与Elixir并发协调生锈，并为每个工作选择正确的工具。非常适合长生不老的开发人员对生锈感到好奇 - 不需要先前的生锈知识！加入Luca Palmieri和&#xA;#elixirconfeu pauszek pauszek&#xA;&lt;a href =“ https://www.elixirconf.eu/trainings/interfacing-rust-in--elixir/”&gt; https://wwwwwww.elixirconf.eu/trainings/interfacing-rust-rust-rust-in-rust-in-rust-in-rust-in-rust-in-rixir/ &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt; &lt;a href =“ https://elixirstatus.com/p/77hpf-supercharge-your-elixir-elixir-apps-with-rust-join-join-luca-luca-palmieri-and-and-ukasz-pauszek-- training-training-training-training-at-at-alixirconf-euu”&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;</description>
      <pubDate>Mon, 24 Feb 2025 15:47:45 +0000</pubDate>
    </item>
    <item>
      <title>【ContextKit - automatic CRUD operations in your context and more】ContectionKit-您上下文中的自动CRUD操作以及更多</title>
      <link>https://elixirstatus.com/p/1LAd6-contextkit---automatic-crud-operations-in-your-context-and-more</link>
      <description>【&#xA;          &lt;table width=&#34;100%&#34; border=&#34;0&#34;&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td width=80 valign=top&gt;&#xA;                &lt;img src=&#34;https://elixirstatus.com/rss/avatar/egze?uid=1LAd6&#34; width=&#34;64&#34; height=&#34;64&#34; /&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt;ContextKit - automatic CRUD operations in your context and more&lt;/h1&gt;&#xA;&#xA;                &lt;font color=&#34;#aaa&#34;&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    24 Feb 2025&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    by&#xA;                    &lt;i class=&#34;icon-git_circle&#34;&gt;&lt;/i&gt; egze&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color=&#34;#aaa&#34;&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;ContextKit is a modular toolkit for building robust Phoenix/Ecto contexts with standardized CRUD operations. It helps reduce boilerplate code while providing powerful querying capabilities and built-in pagination support.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://github.com/egze/context_kit&#34;&gt;https://github.com/egze/context_kit&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt;&lt;a href=&#34;https://elixirstatus.com/p/1LAd6-contextkit---automatic-crud-operations-in-your-context-and-more&#34;&gt;View on ElixirStatus&lt;/a&gt;&lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;&#xA;        】&lt;table width =“ 100％” border =“ 0”&gt;&#xA;            &lt;tr&gt;&#xA;              &lt;td宽度= 80 valign = top&gt;&#xA;                &lt;img src =“ https://elixirstatus.com/rss/avatar/egze?uid=1lad6” width =“ 64” height =“ 64”/&gt;&#xA;              &lt;/td&gt;&#xA;              &lt;td&gt;&#xA;                &lt;h1&gt; ContextKit-上下文中的自动CRUD操作，更多&lt;/h1&gt;&#xA;&#xA;                &lt;font color =“＃aaa”&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    2025年2月24日&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    经过&#xA;                    &lt;i class =“ icon-git_circle”&gt; &lt;/i&gt; egze&#xA;                  &lt;/font&gt;&#xA;                  &lt;font color =“＃aaa”&gt;&#xA;                    &#xA;                  &lt;/font&gt;&#xA;                &lt;/font&gt;&#xA;&#xA;                &lt;p&gt;&#xA;ContextKit是一种模块化工具包，用于构建具有标准化CRUD操作的强大凤凰/ECTO上下文。它有助于减少样板代码，同时提供强大的查询功能和内置的分页支持。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href =“ https://github.com/egze/context_kit”&gt; https://github.com/egze/context_kit &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;                &lt;hr&gt;&#xA;                &lt;small&gt; &lt;a href =“ https://elixirstatus.com/p/1lad6-contextkit---- automatic-crud-operations-in-your-context-and-more”&gt;在Elixirstatus上查看&gt; &lt;/a&gt; &lt;/a&gt; &lt;/small&gt;&#xA;              &lt;/td&gt;&#xA;            &lt;/tr&gt;&#xA;          &lt;/table&gt;</description>
      <pubDate>Mon, 24 Feb 2025 19:02:24 +0000</pubDate>
    </item>
  </channel>
</rss>