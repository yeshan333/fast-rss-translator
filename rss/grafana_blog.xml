<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Grafana Labs blog on Grafana Labs</title>
    <link>/blog/index.xml</link>
    <description>Recent content in Grafana Labs blog on Grafana Labs</description>
    <item>
      <title>【Connect with Grafana Labs at AWS re:Invent 2024!】在 AWS re:Invent 2024 上与 Grafana Labs 联系！</title>
      <link>https://grafana.com/blog/2024/11/20/connect-with-grafana-labs-at-aws-reinvent-2024/</link>
      <description>【&lt;p&gt;&lt;a href=&#34;https://reinvent.awsevents.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;AWS re:Invent 2024&lt;/a&gt; will once again take over the Las Vegas Strip next month, and we can&amp;rsquo;t wait to see you there!&lt;/p&gt;&#xA;&lt;p&gt;Running from Dec. 2-6, re:Invent features five days of technical talks, labs, bootcamps, keynotes, and more. And once again, Grafana Labs will be in on the action.&lt;/p&gt;&#xA;&lt;div class=&#34;btn-row &#34;&gt;&lt;a class=&#34;btn btn--primary &#34; href=&#34;https://go2.grafana.com/2024-12-AWSreInventLasVegas-AMER-meetingrequest.html&#34; rel=&#34;noopener noreferrer&#34;&gt;Request a meeting&lt;/a&gt;&lt;/div&gt;&#xA;&lt;p&gt;Visit us at &lt;strong&gt;&lt;a href=&#34;/events/aws-reinvent/&#34;&gt;booth #2053&lt;/a&gt;&lt;/strong&gt;, or click the button above to request a meeting. This is your chance to get your technical questions answered by Grafana Labs experts, learn from your peers, and, of course, grab some swag.&lt;/p&gt;&#xA;&lt;p&gt;We also invite you to come see our &lt;a href=&#34;/blog/2024/11/20/metrics-logs-traces-and-mayhem-introducing-an-observability-adventure-game-powered-by-grafana-alloy-and-otel/&#34;&gt;OpenTelemetry + Grafana Alloy demo&lt;/a&gt; at the AWS Modern Applications and Open Source Zone on the expo floor during the following timeslots (spoiler alert: there may be an evil wizard and some sword play involved, too):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tues., Dec. 3 from 1 - 2pm&lt;/li&gt;&#xA;&lt;li&gt;Thurs., Dec. 5 from 11am - 12pm&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;grafana-labs-at-reinvent&#34;&gt;Grafana Labs at re:Invent&lt;/h2&gt;&#xA;&lt;p&gt;What better place to learn about how Grafana can help you monitor your AWS environment than at re:Invent? Here&amp;rsquo;s what we have in store for you:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Learn how to visualize and alert on more than 60 AWS offerings in minutes with the&lt;a href=&#34;/solutions/cloud-monitoring-aws/&#34;&gt; AWS Observability app&lt;/a&gt; in Grafana Cloud.&lt;/li&gt;&#xA;&lt;li&gt;Discover the latest features and AI/ML developments that can help you identify and resolve issues faster so you get better value from your observability practice.&lt;/li&gt;&#xA;&lt;li&gt;Read analysis on the state of observability, gathered from our annual &lt;a href=&#34;/observability-survey/&#34;&gt;Observability Survey&lt;/a&gt;—and participate in the next edition! (You&amp;rsquo;ll even have a chance to win some special swag that&amp;rsquo;s just for attendees.)&lt;/li&gt;&#xA;&lt;li&gt;Catch up on all Grafana Labs offers to help monitor your cloud systems and reduce observability costs, including the Grafana LGTM (&lt;a href=&#34;/oss/loki/&#34;&gt;Loki&lt;/a&gt; for logs,&lt;a href=&#34;/oss/grafana?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Grafana&lt;/a&gt; for visualization,&lt;a href=&#34;/oss/tempo/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Tempo&lt;/a&gt; for traces,&lt;a href=&#34;/oss/mimir/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Mimir&lt;/a&gt; for metrics) and &lt;a href=&#34;/oss/pyroscope/&#34;&gt;Grafana Pyroscope&lt;/a&gt; stack. You can also learn about our tools for incident response, application observability, performance testing, and more!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;See you in Vegas!&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Interested in more ways to connect with Grafana Labs? Visit our&lt;a href=&#34;/about/events/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; events page&lt;/a&gt; to see upcoming in-person and virtual opportunities.&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;&lt;a href=&#34;https://reinvent.awsevents.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;AWS re:Invent 2024&lt;/a&gt; 接下来将再次接管拉斯维加斯大道月，我们迫不及待地想在那里见到您！&lt;/p&gt;&#xA;&lt;p&gt;re:Invent 活动将于 12 月 2 日至 6 日举行，包括为期五天的技术讲座、实验室、训练营、主题演讲等。 Grafana Labs 将再次参与其中。&lt;/p&gt;&#xA;&lt;div class=&#34;btn-row &#34;&gt;&lt;a class=&#34;btn btn--primary&#34; href=&#34;https://go2.grafana.com/2024-12-AWSreInventLasVegas-AMER-meetingrequest.html&#34; rel=&#34;noopener noreferrer&#34;&gt;请求会面&lt;/a&gt;&lt;/div&gt;&#xA;&lt;p&gt;请访问我们的&lt;strong&gt;&lt;a href=&#34;/events/aws-reinvent/&#34;&gt;2053号展位&lt;/a&gt;&lt;/strong&gt;，或点击上面的按钮请求会面。这是您获得 Grafana Labs 专家解答技术问题、向同行学习的机会，当然还可以获取一些赠品。&lt;/p&gt;&#xA;&lt;p&gt;我们还邀请您来看看我们的&lt;a href=&#34;/blog/2024/11/20/metrics-logs-traces-and-mayhem-introducing-an-observability-adventure-game-powered-by-grafana -alloy-and-otel/&#34;&gt;OpenTelemetry + Grafana Alloy 演示&lt;/a&gt;，将于以下时间段在世博会的 AWS 现代应用程序和开源专区进行（剧透警告：有可能是一个邪恶的巫师，也涉及一些剑术）：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12 月 3 日星期二下午 1 点至 2 点&lt;/li&gt;&#xA;&lt;li&gt;12 月 5 日星期四上午 11 点至中午 12 点&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;grafana-labs-at-reinvent&#34;&gt;re:Invent 的 Grafana 实验室&lt;/h2&gt;&#xA;&lt;p&gt;还有什么地方比 re:Invent 更好地了解 Grafana 如何帮助您监控 AWS 环境呢？以下是我们为您准备的内容：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;了解如何使用 Grafana Cloud 中的&lt;a href=&#34;/solutions/cloud-monitoring-aws/&#34;&gt;AWS Observability 应用&lt;/a&gt;在几分钟内对 60 多种 AWS 产品进行可视化和警报。&lt;/li&gt;&#xA;&lt;li&gt;了解最新功能和 AI/ML 开发成果，帮助您更快地识别和解决问题，从而从可观测性实践中获得更大价值。&lt;/li&gt;&#xA;&lt;li&gt;阅读我们的年度&lt;a href=&#34;/observability-survey/&#34;&gt;可观测性调查&lt;/a&gt;中收集的有关可观测性状况的分析 - 并参与下一期！ （您甚至有机会赢得一些专为与会者准备的特殊赠品。）&lt;/li&gt;&#xA;&lt;li&gt;了解 Grafana Labs 的所有产品，以帮助监控您的云系统并降低可观测性成本，包括 Grafana LGTM（&lt;a href=&#34;/oss/loki/&#34;&gt;Loki&lt;/a&gt; 用于日志，&lt;a href= &#34;/oss/grafana?pg=blog&amp;plcmt=body-txt&#34;&gt; Grafana&lt;/a&gt; 用于可视化，&lt;a href=&#34;/oss/tempo/?pg=blog&amp;plcmt=body-txt&#34;&gt; Tempo&lt;/a&gt; 用于跟踪，&lt;a href=&#34;/oss/mimir/?pg=blog&amp;plcmt=body-txt&#34;&gt; Mimir&lt;/a&gt; 用于指标）和 &lt;a href=&#34;/oss/pyrscope/&#34;&gt;Grafana热像仪&lt;/a&gt;堆栈。您还可以了解我们的事件响应、应用程序可观察性、性能测试等工具！&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;拉斯维加斯见！&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;有兴趣了解更多与 Grafana Labs 联系的方式吗？请访问我们的&lt;a href=&#34;/about/events/?pg=blog&amp;plcmt=body-txt&#34;&gt;活动页面&lt;/a&gt;，查看即将推出的现场和虚拟机会。&lt;/em&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【CloudWatch metrics exporter YACE is now a Prometheus community project】CloudWatch 指标导出器 YACE 现已成为 Prometheus 社区项目</title>
      <link>https://grafana.com/blog/2024/11/19/yace-moves-to-prometheus-community/</link>
      <description>【&lt;p&gt;We’re thrilled to share that the open source &lt;a href=&#34;https://github.com/prometheus-community/yet-another-cloudwatch-exporter&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Yet Another CloudWatch Exporter&lt;/a&gt; (YACE) is now a &lt;a href=&#34;https://github.com/prometheus-community&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;prometheus-community&lt;/a&gt; project! This move represents an exciting milestone in YACE&amp;rsquo;s journey and validates the project&amp;rsquo;s contribution to the Prometheus ecosystem.&lt;/p&gt;&#xA;&lt;p&gt;Yace was started in 2018 by &lt;a href=&#34;https://github.com/thomaspeitz&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Thomas Peitz&lt;/a&gt;, who has overseen the dramatic evolution of the CloudWatch metrics exporter ever since. Being part of prometheus-community will give YACE increased visibility and help ensure its long-term sustainability. The project will also benefit from broader community oversight and contributions, and it will align better with Prometheus best practices and standards.&lt;/p&gt;&#xA;&lt;h2 id=&#34;grafana-labs-continued-support-of-yace&#34;&gt;Grafana Labs&amp;rsquo; continued support of YACE&lt;/h2&gt;&#xA;&lt;p&gt;Grafana Labs has been a big YACE user and contributor in recent years, and we&amp;rsquo;re excited to help in the continued growth of the project.&lt;/p&gt;&#xA;&lt;p&gt;Since 2021, when we began expanding our AWS monitoring capabilities, Grafana Labs engineers have contributed hundreds of PRs and implemented major features and improvements to YACE. That includes better matching of CloudWatch metrics to AWS resources, support for AWS SDK v2, and improvements to performance and documentation.&lt;/p&gt;&#xA;&lt;p&gt;Today, YACE is at the core of our &lt;a href=&#34;/solutions/cloud-monitoring-aws/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;AWS Observability app&lt;/a&gt; due to its unique ability to discover all resources for a particular AWS service and associate those resources to their respective CloudWatch metrics.&lt;/p&gt;&#xA;&lt;p&gt;More than that, &lt;a href=&#34;/blog/2024/05/22/how-to-visualize-amazon-cloudwatch-metrics-in-grafana/&#34;&gt;we offer multiple options&lt;/a&gt; for bringing your CloudWatch metrics to Grafana Cloud as part of our “big tent” philosophy. Most of those options are built around running YACE, either as a standalone exporter, as part of &lt;a href=&#34;/oss/alloy-opentelemetry-collector/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Alloy&lt;/a&gt;, or hosted within Grafana Cloud.&lt;/p&gt;&#xA;&lt;p&gt;Engineers at Grafana Labs will continue to contribute in a seamless way and, over time, we will provide docs or even tools to migrate from &lt;a href=&#34;https://github.com/prometheus/cloudwatch_exporter&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;cloudwatch_exporter&lt;/a&gt; over to YACE.&lt;/p&gt;&#xA;&lt;h2 id=&#34;a-heartfelt-thank-you&#34;&gt;A heartfelt thank you&lt;/h2&gt;&#xA;&lt;p&gt;Finally, I want to extend a huge thank you to Thomas for creating YACE and giving other folks the opportunity to continue evolving the project. Go read his story in &lt;a href=&#34;https://prometheus.io/blog/2024/11/19/yace-joining-prometheus-community/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;this Prometheus blog post&lt;/a&gt; to learn more.&lt;/p&gt;&#xA;&lt;p&gt;At Grafana Labs, &lt;a href=&#34;/oss/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;open source is in our DNA&lt;/a&gt;. We truly look forward to the next huge milestone for YACE as it moves to its new home in prometheus-community and becomes an even more indispensable tool in the AWS observability landscape. Here&amp;rsquo;s to the bright future of YACE!&lt;/p&gt;】&lt;p&gt;我们很高兴与大家分享开源 &lt;a href=&#34;https://github.com/prometheus-community/yet-another-cloudwatch-exporter&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; Yet Another CloudWatch Exporter&lt;/a&gt; (YACE) 现在是 &lt;a href=&#34;https://github.com/prometheus-community&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;prometheus-community&lt;/a&gt; 项目！这一举措代表了 YACE 旅程中令人兴奋的里程碑，并验证了该项目对 Prometheus 生态系统的贡献。&lt;/p&gt;&#xA;&lt;p&gt;Yace 由 &lt;a href=&#34;https://github.com/thomaspeitz&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Thomas Peitz&lt;/a&gt; 于 2018 年创立，他见证了此后成为 CloudWatch 指标导出器。成为普罗米修斯社区的一部分将提高 YACE 的知名度，并有助于确保其长期可持续性。该项目还将受益于更广泛的社区监督和贡献，并将更好地符合 Prometheus 最佳实践和标准。&lt;/p&gt;&#xA;&lt;h2 id=&#34;grafana-labs-continued-support-of-yace&#34;&gt;Grafana Labs 对 YACE 的持续支持&lt;/h2&gt;&#xA;&lt;p&gt;近年来，Grafana Labs 一直是 YACE 的重要用户和贡献者，我们很高兴能够帮助该项目的持续发展。&lt;/p&gt;&#xA;&lt;p&gt;自 2021 年开始扩展 AWS 监控功能以来，Grafana Labs 工程师已贡献了数百个 PR，并对 YACE 实施了主要功能和改进。这包括 CloudWatch 指标与 AWS 资源的更好匹配、对 AWS SDK v2 的支持以及对性能和文档的改进。&lt;/p&gt;&#xA;&lt;p&gt;如今，YACE 因其独特的发现能力而成为我们 &lt;a href=&#34;/solutions/cloud-monitoring-aws/?pg=blog&amp;plcmt=body-txt&#34;&gt;AWS Observability 应用程序&lt;/a&gt;的核心特定 AWS 服务的所有资源，并将这些资源与其各自的 CloudWatch 指标相关联。&lt;/p&gt;&#xA;&lt;p&gt;除此之外，&lt;a href=&#34;/blog/2024/05/22/how-to-visualize-amazon-cloudwatch-metrics-in-grafana/&#34;&gt;我们提供多种选项&lt;/a&gt;来让您的Grafana Cloud 的 CloudWatch 指标是我们“大帐篷”理念的一部分。大多数选项都是围绕运行 YACE 构建的，既可以作为独立导出器，也可以作为 &lt;a href=&#34;/oss/alloy-opentelemetry-collector/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana Alloy&lt;/a&gt; 的一部分，或托管在 Grafana Cloud 中。&lt;/p&gt;&#xA;&lt;p&gt;Grafana Labs 的工程师将继续以无缝方式做出贡献，随着时间的推移，我们将提供文档甚至工具来从 &lt;a href=&#34;https://github.com/prometheus/cloudwatch_exporter&#34; target=&#34; 迁移_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;cloudwatch_exporter&lt;/a&gt; 转移到 YACE。&lt;/p&gt;&#xA;&lt;h2 id=&#34;a-heartfelt-thank-you&#34;&gt;衷心感谢&lt;/h2&gt;&#xA;&lt;p&gt;最后，我要向 Thomas 表示衷心的感谢，感谢他创建了 YACE，并为其他人提供了继续发展该项目的机会。前往 &lt;a href=&#34;https://prometheus.io/blog/2024/11/19/yace-joining-prometheus-community/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;这个 Prometheus 博客阅读他的故事发帖&lt;/a&gt;了解更多信息。&lt;/p&gt;&lt;p&gt;在 Grafana Labs，&lt;a href=&#34;/oss/?pg=blog&amp;plcmt=body-txt&#34;&gt;开源已融入我们的 DNA&lt;/a&gt;。我们真诚地期待 YACE 的下一个重大里程碑，因为它搬到了 prometheus 社区的新家，并成为 AWS 可观测性领域中更加不可或缺的工具。祝YACE的美好未来！&lt;/p&gt;</description>
      <pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Easily control observability collectors at scale with Fleet Management in Grafana Cloud】通过 Grafana Cloud 中的队列管理轻松大规模控制可观测性收集器</title>
      <link>https://grafana.com/blog/2024/11/20/easily-control-observability-collectors-at-scale-with-fleet-management-in-grafana-cloud/</link>
      <description>【&lt;p&gt;Managing observability workloads can quickly overwhelm even the most experienced admin.&lt;/p&gt;&#xA;&lt;p&gt;Maybe you’re dealing with multiple departments, each needing its own collector configurations and pipelines. Every time you have to run a test or roll out a change, the process is cumbersome and introduces risk.&lt;/p&gt;&#xA;&lt;p&gt;Or perhaps you’re responsible for tracking hundreds of collectors across different environments and regions. In a scenario like this, troubleshooting individual issues feels nearly impossible.&lt;/p&gt;&#xA;&lt;p&gt;Whether you&amp;rsquo;re dealing with complex configurations, rising costs, or just trying to keep tabs on every collector, you need everything in one place to make sense of it all. That&amp;rsquo;s why we’re excited to announce the Public Preview of Fleet Management in Grafana Cloud—a powerful new way to monitor and manage observability collectors efficiently, regardless of scale.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/intro-fleet-mgmt/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Fleet Management&lt;/a&gt; is designed for teams looking to manage hundreds or thousands of collectors efficiently, so they can remotely configure, activate, or deactivate telemetry pipelines on demand. With Fleet Management, you can roll out configurations remotely, monitor collector health across all deployments, and control cost simply by activating or deactivating pipelines as needed.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-fleet-management&#34;&gt;Why Fleet Management?&lt;/h2&gt;&#xA;&lt;p&gt;Fleet Management is built to tackle the complexity of scaling collector management:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Streamlined configuration management.&lt;/strong&gt; With a central control hub, you can easily manage configurations across all collectors. Deploy targeted pipelines, fine-tune individual configurations, and cut down on overhead.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Comprehensive Collector Insights.&lt;/strong&gt; Get complete visibility into your collector fleet. Monitor metrics, logs, and applied configurations for each collector, making it faster to identify and resolve issues.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Optimize data collection and costs.&lt;/strong&gt; Tailor data collection pipelines to match specific use cases. Turn data streams on and off as needed to optimize your costs and reduce data overload.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Management of observability collectors at any scale—whether dozens, hundreds, or thousands—is now easier than ever with Fleet Management, starting with support for the Grafana Alloy collector.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-fleet-management-solves-your-data-collection-pain-points&#34;&gt;How Fleet Management solves your data collection pain points&lt;/h2&gt;&#xA;&lt;div&#xA;class=&#34;youtube-lazyload responsive-video&#34;&#xA;data-embed=&#34;mKOLablQUxM&#34;&#xA;data-url=&#34;https://www.youtube.com/embed/mKOLablQUxM?autoplay=1&amp;amp;rel=0&#34;&#xA;data-title=&#34;YouTube Video&#34;&#xA;&gt;&#xA;&lt;div class=&#34;play-button&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Fleet Management was designed to be flexible yet powerful, with features that make managing collectors easier and more efficient:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;API Support for as-code automation:&lt;/strong&gt; Seamlessly integrate Fleet Management into your automation workflows. Use the&lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/api-reference/collector-api/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Collector API&lt;/a&gt; for CRUD operations and bulk management of collectors, and the &lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/api-reference/pipeline-api/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Pipeline API&lt;/a&gt; for fine-grained control over configuration creation and deployment.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dynamic variables and secure credentials:&lt;/strong&gt; Reference system environment variables in configurations so collection templates remain flexible. For enhanced security, Fleet Management also integrates with HashiCorp Vault via an &lt;a href=&#34;/docs/alloy/latest/reference/components/remote/remote.vault/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Alloy Collector module&lt;/a&gt;, so you can securely retrieve and manage sensitive credentials.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;No more monolithic configuration:&lt;/strong&gt; Traditional configurations often rely on large, complex files. Fleet management replaces these with smaller, modular pipelines, making configurations reusable and easier to manage. This approach provides fine-grained control over which pipelines are activated, enabling on-demand collection for specialized use cases like continuous profiling or collecting debug logs.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bulk editing and attribute management:&lt;/strong&gt; With bulk-editing options, you can assign and update custom attributes for collectors on the fly, even after installation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;&#xA;&lt;p&gt;Fleet Management is available to Grafana Cloud Admins in the &lt;strong&gt;Collector&lt;/strong&gt; section under &lt;strong&gt;Connections&lt;/strong&gt; in the Grafana UI. To get started, you’ll need to install a new instance of Grafana Alloy enabled with Fleet Management. Once it’s up and running, you’ll see your new collector in Fleet Management’s inventory, where you can monitor and remotely configure it.&lt;/p&gt;&#xA;&lt;p&gt;Follow &lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/get-started/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;these steps&lt;/a&gt; to set up a new collector for remote configuration, or refer to &lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/onboard-collectors/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;this guide&lt;/a&gt; to onboard existing collector.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Currently, Fleet Management supports &lt;a href=&#34;/docs/alloy/latest/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Alloy&lt;/a&gt;, our open source distribution of the OpenTelemetry Collector, fully compatible with the OTLP protocol and featuring native pipelines for OTel and Prometheus. As leading contributors to the Open Agent Management Protocol (OpAMP) project, we hope to extend support to traditional OTel Collectors in the future.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;try-fleet-management-today&#34;&gt;Try Fleet Management today&lt;/h2&gt;&#xA;&lt;p&gt;We’re excited to bring you Fleet Management in Public Preview, available across all Grafana Cloud stacks. Enable Fleet Management for your Alloy collectors today and experience the benefits of seamless remote configuration. Our team would love to hear from you—&lt;a href=&#34;https://forms.gle/NmLa9dEKCVmWzSDp7&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;reach out with any questions, feedback, or requests for assistance here. &lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case. &lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;即使是最有经验的管理员，管理可观察性工作负载也会很快让他们不知所措。&lt;/p&gt;&#xA;&lt;p&gt;也许您正在与多个部门打交道，每个部门都需要自己的收集器配置和管道。每次您必须运行测试或推出更改时，这个过程都很麻烦并且会带来风险。&lt;/p&gt;&#xA;&lt;p&gt;或者您可能负责跟踪不同环境和地区的数百名收集者。在这种情况下，解决个别问题几乎是不可能的。&lt;/p&gt;&#xA;&lt;p&gt;无论您是在处理复杂的配置、不断上升的成本，还是只是想密切关注每个收集器，您都需要将所有内容集中在一个地方才能理解这一切。这就是为什么我们很高兴宣布在 Grafana Cloud 中推出舰队管理的公开预览版，这是一种强大的新方法，可以有效地监控和管理可观测性收集器，无论规模如何。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/intro-fleet-mgmt/?pg=blog&amp;plcmt=body-txt&#34;&gt;队列管理&lt;/a&gt;专为以下团队而设计：有效管理数百或数千个收集器，以便他们可以根据需要远程配置、激活或停用遥测管道。借助队列管理，您可以远程部署配置、监控所有部署中的收集器运行状况，并只需根据需要激活或停用管道来控制成本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-fleet-management&#34;&gt;为什么选择车队管理？&lt;/h2&gt;&#xA;&lt;p&gt;车队管理旨在解决扩展收集器管理的复杂性：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;简化配置管理。&lt;/strong&gt;借助中央控制中心，您可以轻松管理所有收集器的配置。部署有针对性的管道、微调各个配置并减少开销。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;全面的收集器洞察。&lt;/strong&gt;全面了解您的收集器车队。监控每个收集器的指标、日志和应用的配置，从而更快地识别和解决问题。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;优化数据收集和成本。&lt;/strong&gt;定制数据收集管道以匹配特定用例。根据需要打开和关闭数据流，以优化成本并减少数据过载。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;从对 Grafana Alloy 收集器的支持开始，使用 Fleet Management 来管理任何规模（无论是数十个、数百个还是数千个）的可观测性收集器现在比以往任何时候都更加容易。&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-fleet-management-solves-your-data-collection-pain-points&#34;&gt;车队管理如何解决您的数据收集痛点&lt;/h2&gt;&#xA;&lt;div&#xA;类 =“youtube-lazyload 响应视频”&#xA;数据嵌入=“mKOLablQUxM”&#xA;data-url=&#34;https://www.youtube.com/embed/mKOLablQUxM?autoplay=1&amp;rel=0&#34;&#xA;数据标题=“YouTube 视频”&#xA;&gt;&#xA;&lt;div class=&#34;play-button&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;车队管理的设计既灵活又强大，其功能使管理收集器变得更容易、更高效：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;API 支持代码自动化：&lt;/strong&gt; Sea将车队管理无缝集成到您的自动化工作流程中。使用&lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/api-reference/collector-api/?pg=blog&amp;plcmt=body-txt&#34;&gt;收集器 API&lt;/a&gt; 进行 CRUD 操作收集器和管道的批量管理API&lt;/a&gt;用于对配置创建和部署进行细粒度控制。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;动态变量和安全凭证&lt;/strong&gt;：在配置中引用系统环境变量，以便集合模板保持灵活性。为了增强安全性，Fleet Management 还通过&lt;a href=&#34;/docs/alloy/latest/reference/components/remote/remote.vault/?pg=blog&amp;plcmt=body-txt&#34;&gt;合金收集器模块&lt;/ a&gt;，以便您可以安全地检索和管理敏感凭据。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;不再有单一配置：&lt;/strong&gt;传统配置通常依赖于大型、复杂的文件。车队管理用更小的模块化管道取代了这些管道，使配置可重复使用且更易于管理。这种方法提供了对激活哪些管道的细粒度控制，从而能够按需收集特殊用例，例如连续分析或收集调试日志。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;批量编辑和属性管理：&lt;/strong&gt;通过批量编辑选项，您甚至可以在安装后动态分配和更新收集器的自定义属性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;getting-started&#34;&gt;开始使用&lt;/h2&gt;&#xA;&lt;p&gt;Grafana Cloud 管理员可以在 Grafana UI 中&lt;strong&gt;连接&lt;/strong&gt;下的&lt;strong&gt;收集器&lt;/strong&gt;部分中使用队列管理。首先，您需要安装启用了队列管理的新 Grafana Alloy 实例。一旦启动并运行，您将在 Fleet Management 的库存中看到新的收集器，您可以在其中监视和远程配置它。&lt;/p&gt;&#xA;&lt;p&gt;按照&lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/get-started/?pg=blog&amp;plcmt=body-txt&#34;&gt;这些步骤&lt;/a&gt;设置新的收集器如需远程配置，或参阅&lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/onboard-collectors/?pg=blog&amp;plcmt=body-txt&#34;&gt;本指南&lt;/a&gt;搭载现有收集器。&lt;/p&gt;&#xA;&lt;块引用&gt;&#xA;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;目前，Fleet Management 支持我们的开源发行版 &lt;a href=&#34;/docs/alloy/latest/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana Alloy&lt;/a&gt; OpenTelemetry Collector 的一部分，与 OTLP 协议完全兼容，并具有适用于 OTel 和 Prometheus 的本机管道。作为开放代理管理协议 (OpAMP) 项目的主要贡献者，我们希望将来能够扩展对传统 OTel 收集器的支持。&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&lt;h2 id=&#34;try-fleet-management-today&#34;&gt;立即尝试车队管理&lt;/h2&gt;&#xA;&lt;p&gt;我们很高兴为您带来公共预览版的车队管理，可在所有 Grafana Cloud 堆栈上使用。启用舰队法力立即为您的合金收集器配置并体验无缝远程配置的好处。我们的团队很乐意听取您的意见 - &lt;a href=&#34;https://forms.gle/NmLa9dEKCVmWzSDp7&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;如有任何问题、反馈或帮助请求，请在此处联系。 &lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; 是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。 &lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;plcmt=body-txt&#34;&gt;立即免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Grafana Loki 3.3 release: faster query results via Blooms for structured metadata】Grafana Loki 3.3 版本：通过 Blooms 获取结构化元数据更快的查询结果</title>
      <link>https://grafana.com/blog/2024/11/21/grafana-loki-3.3-release-faster-query-results-via-blooms-for-structured-metadata/</link>
      <description>【&lt;p&gt;The &lt;a href=&#34;https://github.com/grafana/loki/releases/tag/v3.3.0&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana Loki 3.3&lt;/a&gt; release is here, and it brings a fresh wave of enhancements aimed at making your log management experience faster, more efficient, and more scalable.&lt;/p&gt;&#xA;&lt;p&gt;While this update includes the usual round of bug fixes and operational improvements, the standout feature is a shift in how Loki leverages Bloom filters—going from free-text search to harnessing the power of structured metadata. This will make it easier to find a specific needle in your haystack of logs, while improving the query experience for our OpenTelemetry community as well.&lt;/p&gt;&#xA;&lt;p&gt;Query acceleration via Bloom filters is considered experimental for our Loki and Grafana Enterprise Logs (GEL) 3.3 releases, and is available in public preview for large &lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; customers.&lt;/p&gt;&#xA;&lt;p&gt;Let’s dive into what this means for your workflows and how it sets the stage for Loki’s exciting future.&lt;/p&gt;&#xA;&lt;h2 id=&#34;query-acceleration-via-bloom-filters&#34;&gt;Query acceleration via Bloom filters&lt;/h2&gt;&#xA;&lt;p&gt;With &lt;a href=&#34;/blog/2024/04/09/grafana-loki-3.0-release-all-the-new-features/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Loki 3.0&lt;/a&gt;, we announced Bloom filters, a very promising, experimental feature intended to speed up needle in a haystack queries. Since then, we&amp;rsquo;ve received great insights from early adopters and learned a lot about running Blooms at a large scale—and the tradeoffs our users were willing to make.&lt;/p&gt;&#xA;&lt;p&gt;With this in mind, and with the increasing adoption of OpenTelemetry, we adjusted our approach and decided to create Blooms leveraging &lt;a href=&#34;/docs/loki/latest/get-started/labels/structured-metadata/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;structured metadata&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-is-structured-metadata-in-loki&#34;&gt;What is structured metadata in Loki?&lt;/h3&gt;&#xA;&lt;p&gt;Structured metadata allows you to attach metadata labels to each of your log lines. It was first introduced in Loki 2.9 for high cardinality labels that couldn&amp;rsquo;t be indexed, and for when it was too difficult to extract commonly-accessed log content into labels at query time. Then, In Loki 3.0, we added &lt;a href=&#34;/blog/2024/04/09/grafana-loki-3.0-release-all-the-new-features/?pg=blog&amp;amp;plcmt=body-txt#native-opentelemetry-support&#34;&gt;native OpenTelemetry support&lt;/a&gt;, which leverages structured metadata to store all the attributes OTel sends with each log line.&lt;/p&gt;&#xA;&lt;p&gt;And now, this same structured metadata can also be used to accelerate queries.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are not using OTel, you can still attach structured metadata to your log lines with &lt;a href=&#34;/docs/alloy/latest/reference/components/loki/loki.process/?pg=blog&amp;amp;plcmt=body-txt#stagestructured_metadata-block&#34;&gt;Grafana Alloy&amp;rsquo;s Loki pipelines&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;a-refresher-on-bloom-filters-and-why-you-would-use-them&#34;&gt;A refresher on Bloom filters, and why you would use them&lt;/h3&gt;&#xA;&lt;p&gt;Loki leverages Bloom filters in order to tell it what data &lt;em&gt;not&lt;/em&gt; to search. In managing Loki, we’ve observed that many log searches touch lots of log lines but only need the results from a select few that meet a certain criteria.&lt;/p&gt;&#xA;&lt;p&gt;As an example, maybe you&amp;rsquo;re looking for all log lines that have a certain user ID because you need to debug why an ecommerce user is being logged out of their account when they add an item to their shopping cart. Or maybe you want to find all the log lines that match a certain device ID to help troubleshoot a payment device or game controller.&lt;/p&gt;&#xA;&lt;h3 id=&#34;how-we-are-using-blooms-to-accelerate-queries&#34;&gt;How we are using Blooms to accelerate queries&lt;/h3&gt;&#xA;&lt;p&gt;Just like the previous version of Blooms, we still build Blooms per series. This time, instead of n-grams computed out of the whole log content, Blooms now contain the key of each structured metadata field seen within the series, along with all the existing key-value pairs.&lt;/p&gt;&#xA;&lt;p&gt;Blooms built out of structured metadata are orders of magnitude smaller, thus faster to build, download, and query.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-to-use-query-acceleration&#34;&gt;How to use query acceleration&lt;/h2&gt;&#xA;&lt;p&gt;To take advantage of Blooms, your queries need to satisfy the following criteria:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bloom blocks should be created and available in the Bloom gateways for the time interval of the query.&lt;/li&gt;&#xA;&lt;li&gt;Queries should invoke acceleration &lt;a href=&#34;/docs/loki/latest/query/query_accceleration/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;by using proper syntax&lt;/a&gt; to query structured metadata&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;For example, if you want to look for a specific trace ID, and the trace ID is available as structured metadata, the following expression should be accelerated if they are available:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{env=&amp;#34;prod&amp;#34;} | traceID=&amp;#34;3f54c1d2ae0c&amp;#34; | json | line_format &amp;#34;{{.api_route}} time={{.req_time}}&amp;#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;In this query, the &lt;code&gt;{env=”prod”}&lt;/code&gt; stream selector will narrow down the search space to the matching series. Then, with &lt;code&gt;traceID=&amp;quot;3f54c1d2ae0c&amp;quot;&lt;/code&gt; we use Blooms to further narrow down the search space by discarding all the chunks from the matching series that we&amp;rsquo;re sure don&amp;rsquo;t contain this structured metadata key-value pair. Finally, we only apply the &lt;code&gt;json&lt;/code&gt; parser and the line formatting to the logs from the matching chunks. This significantly reduces the amount of data Loki needs to download, unpack, and process.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-to-upgrade&#34;&gt;How to upgrade&lt;/h2&gt;&#xA;&lt;p&gt;The new Bloom blocks have a new format that&amp;rsquo;s incompatible with the previous version of Blooms. As a result, any previously created blocks are now obsolete. We recommend you clean your Bloom blocks before upgrading to the new Loki version by deleting the &lt;em&gt;bloom&lt;/em&gt; path inside the object store (see &lt;a href=&#34;/docs/loki/latest/setup/upgrade/?pg=blog&amp;amp;plcmt=body-txt#330&#34;&gt;upgrade notes&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;In addition to building Blooms for structured metadata, we also made some others changes and improvements for Blooms:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We removed the Bloom compactor in favor of the &lt;a href=&#34;/docs/loki/latest/operations/query-acceleration-blooms/?pg=blog&amp;amp;plcmt=body-txt#bloom-planner-and-builder&#34;&gt;Bloom planner and builder components&lt;/a&gt;, which are now configured in &lt;a href=&#34;/docs/loki/latest/setup/install/helm/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Helm&lt;/a&gt; and enabled in the &lt;a href=&#34;/docs/loki/latest/get-started/deployment-modes/?pg=blog&amp;amp;plcmt=body-txt#simple-scalable&#34;&gt;simple scale deployment&lt;/a&gt; backend target.&lt;/li&gt;&#xA;&lt;li&gt;We introduced a new build strategy that split tasks based on the TSDB stats for the chunks size of the series. The strategy is configurable via the &lt;code&gt;bloom_planning_strategy&lt;/code&gt; per-tenant limit. We haven’t changed the default planning strategy, which splits the series key-space by a configurable factor. But we encourage users to try the new strategy, which should result in more consistently sized Bloom building tasks.&lt;/li&gt;&#xA;&lt;li&gt;Another addition to the Bloom planner component is a disk-backed queue. By default, the queue keeps all tasks in memory, but you can enable the disk-backed queue if you have a large set of tenants or a memory-contrained environment.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;start-using-loki-33-today&#34;&gt;Start using Loki 3.3 today&lt;/h2&gt;&#xA;&lt;p&gt;Loki 3.3 ships a whole set of new experimental features, improvements and bug fixes that opens the door to make Loki more scalable, faster, and easy to use in the near future. If you are a GEL customer, the same functionality that’s in Loki 3.3 is also part of our GEL 3.3 release.&lt;/p&gt;&#xA;&lt;p&gt;Consult the Loki and GEL release notes and changelog for more:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/docs/loki/latest/release-notes/v3-3/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Loki release notes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/grafana/loki/blob/release-3.3.x/CHANGELOG.md&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Loki changelog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/docs/enterprise-logs/latest/release-notes/v3-3/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;GEL release notes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/grafana/enterprise-logs/blob/main/cmd/enterprise-logs/CHANGELOG.md&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GEL changelog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;And if you are new to Loki, please consult our &lt;a href=&#34;/docs/loki/latest/get-started/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Getting Started&lt;/a&gt; section to get up and running as quickly as possible. In the meantime, give the new features a spin, explore the benefits of structured metadata Blooms, and let us know your feedback. Your insights help us make Loki better with every release.&lt;/p&gt;&#xA;&lt;p&gt;Happy logging!&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud &lt;/a&gt;is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case. &lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Sign up for free now!&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;&lt;a href=&#34;https://github.com/grafana/loki/releases/tag/v3.3.0&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana Loki 3.3&lt;/a&gt; 版本为在这里，它带来了新一波的增强功能，旨在让您的日志管理体验更快、更高效、更具可扩展性。&lt;/p&gt;&#xA;&lt;p&gt;虽然此更新包括通常的错误修复和操作改进，但最突出的功能是 Loki 利用 Bloom 过滤器的方式的转变 - 从自由文本搜索到利用结构化元数据的力量。这将使您更轻松地在日志大海捞针中找到特定的目标，同时也改善了我们 OpenTelemetry 社区的查询体验。&lt;/p&gt;&#xA;&lt;p&gt;通过 Bloom 过滤器进行查询加速对于我们的 Loki 和 Grafana Enterprise Logs (GEL) 3.3 版本被认为是实验性的，并且在大型 &lt;a href=&#34;/products/cloud/?pg=blog&amp;plcmt=body-txt 中提供公共预览版&#34;&gt;Grafana Cloud&lt;/a&gt; 客户。&lt;/p&gt;&#xA;&lt;p&gt;让我们深入了解这对您的工作流程意味着什么，以及它如何为 Loki 令人兴奋的未来奠定基础。&lt;/p&gt;&#xA;&lt;h2 id=&#34;query-acceleration-via-bloom-filters&#34;&gt;通过 Bloom 过滤器进行查询加速&lt;/h2&gt;&#xA;&lt;p&gt;与&lt;a href=&#34;/blog/2024/04/09/grafana-loki-3.0-release-all-the-new-features/?pg=blog&amp;plcmt=body-txt&#34;&gt;Loki 3.0&lt;/a&gt; ，我们发布了布隆过滤器，这是一个非常有前途的实验性功能，旨在加速大海捞针查询。从那时起，我们从早期采用者那里获得了深刻的见解，并了解了很多有关大规模运行 Bloom 的知识，以及我们的用户愿意做出的权衡。&lt;/p&gt;&#xA;&lt;p&gt;考虑到这一点，并且随着 OpenTelemetry 的日益普及，我们调整了我们的方法，并决定利用 &lt;a href=&#34;/docs/loki/latest/get-started/labels/structed-metadata/?pg 创建 Blooms =blog&amp;plcmt=body-txt&#34;&gt;结构化元数据&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-is-structed-metadata-in-loki&#34;&gt;Loki 中的结构化元数据是什么？&lt;/h3&gt;&#xA;&lt;p&gt;结构化元数据允许您将元数据标签附加到每个日志行。它首次在 Loki 2.9 中引入，用于无法索引的高基数标签，以及在查询时将常用访问的日志内容提取到标签中太困难的情况。然后，在 Loki 3.0 中，我们添加了 &lt;a href=&#34;/blog/2024/04/09/grafana-loki-3.0-release-all-the-new-features/?pg=blog&amp;plcmt=body-txt#native-opentelemetry -support&#34;&gt;原生 OpenTelemetry 支持&lt;/a&gt;，它利用结构化元数据来存储 OTel 随每个日志行发送的所有属性。&lt;/p&gt;&#xA;&lt;p&gt;现在，同样的结构化元数据也可用于加速查询。&lt;/p&gt;&#xA;&lt;块引用&gt;&#xA;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;如果您不使用 OTel，您仍然可以使用 &lt;a href=&#34;/docs/alloy/latest/reference/components/loki/loki.txt 将结构化元数据附加到日志行中。 process/?pg=blog&amp;plcmt=body-txt#stagestructed_metadata-block&#34;&gt;Grafana Alloy 的 Loki 管道&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&lt;h3 id=&#34;a-refresher-on-bloom-filters-and-why-you-would-use-them&#34;&gt;回顾一下 Bloom 过滤器，以及为什么要使用会使用它们&lt;/h3&gt;&#xA;&lt;p&gt;Loki 利用布隆过滤器来告诉它哪些数据&lt;em&gt;不&lt;/em&gt;要搜索。在管理 Loki 时，我们观察到许多日志搜索涉及大量日志行，但只需要满足特定条件的少数几个日志行的结果。&lt;/p&gt;&#xA;&lt;p&gt;举个例子，也许您正在查找具有特定用户 ID 的所有日志行，因为您需要调试为什么电子商务用户在将商品添加到购物车时会从其帐户中注销。或者您可能想要查找与特定设备 ID 匹配的所有日志行，以帮助对支付设备或游戏控制器进行故障排除。&lt;/p&gt;&#xA;&lt;h3 id=&#34;how-we-are-using-blooms-to-accelerate-queries&#34;&gt;我们如何使用 Bloom 来加速查询&lt;/h3&gt;&#xA;&lt;p&gt;就像之前版本的 Blooms 一样，我们仍然按系列构建 Blooms。这次，Bloom 现在包含该系列中看到的每个结构化元数据字段的键以及所有现有的键值对，而不是根据整个日志内容计算出的 n 元语法。&lt;/p&gt;&#xA;&lt;p&gt;基于结构化元数据构建的 Bloom 的数量级要小，因此构建、下载和查询速度更快。&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-to-use-query-acceleration&#34;&gt;如何使用查询加速&lt;/h2&gt;&#xA;&lt;p&gt;要利用 Bloom，您的查询需要满足以下条件：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;应在查询的时间间隔内在 Bloom 网关中创建并可用 Bloom 块。&lt;/li&gt;&#xA;&lt;li&gt;查询应&lt;a href=&#34;/docs/loki/latest/query/query_accceleration/?pg=blog&amp;plcmt=body-txt&#34;&gt;使用正确的语法&lt;/a&gt;调用加速来查询结构化元数据&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;例如，如果您想要查找特定的跟踪 ID，并且该跟踪 ID 可作为结构化元数据使用，则应加速以下表达式（如果可用）：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{env=&#34;prod&#34;} |跟踪ID =“3f54c1d2ae0c”| json | line_format &#34;{{.api_route}} time={{.req_time}}&#34;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;在此查询中，&lt;code&gt;{env=”prod”}&lt;/code&gt; 流选择器会将搜索空间缩小到匹配的系列。然后，通过 &lt;code&gt;traceID=&#34;3f54c1d2ae0c&#34;&lt;/code&gt;，我们使用 Blooms 丢弃匹配系列中我们确定不包含此结构化元数据键值对的所有块，进一步缩小搜索空间。最后，我们仅将 &lt;code&gt;json&lt;/code&gt; 解析器和行格式应用于匹配块中的日志。这显着减少了 Loki 需要下载、解压和处理的数据量。&lt;/p&gt;&#xA;&lt;h2 id=&#34;如何升级&#34;&gt;如何升级&lt;/h2&gt;&#xA;&lt;p&gt;新的 Bloom 块具有与之前版本的 Bloom 不兼容的新格式。因此，任何以前创建的块现在都已过时。我们建议您在升级到新的 Loki 版本之前，通过删除对象存储中的 &lt;em&gt;bloom&lt;/em&gt; 路径来清理 Bloom 块（请参阅 &lt;a href=&#34;/docs/loki/latest/setup/upgrade/?pg =blog&amp;plcmt=body-txt#330&#34;&gt;升级说明&lt;/a&gt;）。&lt;/p&gt;&#xA;&lt;p&gt;除了为结构化元数据构建 Bloom 之外，我们还对 Bloom 进行了一些其他更改和改进：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我们删除了 Bloom 压缩器，转而采用&lt;a href=&#34;/docs/loki/latest/operations/query-acceleration-blooms/?pg=blog&amp;plcmt=body-txt#bloom-planner-and-builder&#34;&gt; Bloom 规划器和构建器组件&lt;/a&gt;，现在在 &lt;a 中配置href=&#34;/docs/loki/latest/setup/install/helm/?pg=blog&amp;plcmt=body-txt&#34;&gt;Helm&lt;/a&gt; 并在 &lt;a href=&#34;/docs/loki/latest/get-started 中启用/deployment-modes/?pg=blog&amp;plcmt=body-txt#simple-scalable&#34;&gt;简单规模部署&lt;/a&gt;后端目标。&lt;/li&gt;&#xA;&lt;li&gt;我们引入了一种新的构建策略，该策略根据系列块大小的 TSDB 统计数据来拆分任务。该策略可通过 &lt;code&gt;bloom_planning_strategy&lt;/code&gt; 每租户限制进行配置。我们没有更改默认的规划策略，该策略通过可配置的因子分割系列键空间。但我们鼓励用户尝试新策略，这应该会导致 Bloom 构建任务的大小更加一致。&lt;/li&gt;&#xA;&lt;li&gt;Bloom planner 组件的另一个附加功能是磁盘支持的队列。默认情况下，队列将所有任务保留在内存中，但如果您有大量租户或内存受限的环境，则可以启用磁盘支持的队列。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;start-using-loki-33-today&#34;&gt;立即开始使用 Loki 3.3&lt;/h2&gt;&#xA;&lt;p&gt;Loki 3.3 提供了一整套新的实验性功能、改进和错误修复，为在不久的将来使 Loki 更具可扩展性、更快且易于使用打开了大门。如果您是 GEL 客户，Loki 3.3 中的相同功能也是我们的 GEL 3.3 版本的一部分。&lt;/p&gt;&#xA;&lt;p&gt;请参阅 Loki 和 GEL 发行说明和变更日志以了解更多信息：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/docs/loki/latest/release-notes/v3-3/?pg=blog&amp;plcmt=body-txt&#34;&gt;Loki 发行说明&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/grafana/loki/blob/release-3.3.x/CHANGELOG.md&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Loki 变更日志&lt;/a&gt; &lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/docs/enterprise-logs/latest/release-notes/v3-3/?pg=blog&amp;plcmt=body-txt&#34;&gt;GEL 发行说明&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/grafana/enterprise-logs/blob/main/cmd/enterprise-logs/CHANGELOG.md&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GEL 变更日志&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;如果您是 Loki 新手，请查阅我们的&lt;a href=&#34;/docs/loki/latest/get-started/?pg=blog&amp;plcmt=body-txt&#34;&gt;入门&lt;/a&gt;部分以开始使用并尽可能快地跑。与此同时，尝试一下新功能，探索结构化元数据的好处Blooms，请让我们知道您的反馈。您的见解帮助我们在每个版本中让 Loki 变得更好。&lt;/p&gt;&#xA;&lt;p&gt;祝您登录愉快！&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。 &lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;plcmt=body-txt&#34;&gt;立即免费注册！&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Leveraging OpenTelemetry and Grafana for observing, visualizing, and monitoring Kubernetes applications】利用 OpenTelemetry 和 Grafana 观察、可视化和监控 Kubernetes 应用程序</title>
      <link>https://grafana.com/blog/2024/11/22/leveraging-opentelemetry-and-grafana-for-observing-visualizing-and-monitoring-kubernetes-applications/</link>
      <description>【&lt;p&gt;&lt;em&gt;Ken has over 15 years of industry experience as a noted information and cybersecurity practitioner, software developer, author, and presenter, focusing on endpoint security, big security data analytics, and Federal Information Security Management Act (FISMA) and NIST 800-53 compliance. Focusing on strict federal standards, Ken has consulted with numerous federal organizations, including Defense Information Systems Agency (DISA), Department of Veterans Affairs, and the Census Bureau.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Enterprises today can gain a competitive advantage by enabling developers to rapidly compose new application capabilities by utilizing existing microservices and Kubernetes.&lt;/p&gt;&#xA;&lt;p&gt;For example, by leveraging a library of reusable microservices, a financial institution can quickly develop and deploy new features, such as real-time fraud detection or personalized customer insights, without having to build these capabilities from scratch. This modular approach not only accelerates development cycles, but also ensures greater flexibility and scalability.&lt;/p&gt;&#xA;&lt;p&gt;Additionally, when a retail company integrates microservices for inventory management, payment processing, and customer notifications, it can swiftly adapt to market changes and seasonal demands, enhancing its responsiveness and customer satisfaction. This ability to innovate rapidly and efficiently through microservice composition is transforming how businesses compete and succeed in the digital age.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-dark-side-of-composable-applications&#34;&gt;The dark side of composable applications&lt;/h2&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 2952px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/otel-report-ema/telemetry-stacks.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/otel-report-ema/telemetry-stacks.png&#34;data-srcset=&#34;/media/blog/otel-report-ema/telemetry-stacks.png?w=320 320w, /media/blog/otel-report-ema/telemetry-stacks.png?w=550 550w, /media/blog/otel-report-ema/telemetry-stacks.png?w=750 750w, /media/blog/otel-report-ema/telemetry-stacks.png?w=900 900w, /media/blog/otel-report-ema/telemetry-stacks.png?w=1040 1040w, /media/blog/otel-report-ema/telemetry-stacks.png?w=1240 1240w, /media/blog/otel-report-ema/telemetry-stacks.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;&#34;&#xA;width=&#34;2952&#34;&#xA;height=&#34;1580&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/otel-report-ema/telemetry-stacks.png&#34;&#xA;alt=&#34;&#34;&#xA;width=&#34;2952&#34;&#xA;height=&#34;1580&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;While the composable nature of microservices apps offers significant advantages in terms of agility and modularity, it also introduces considerable complexity in managing disconnected telemetry data. As organizations deploy numerous microservices, each with its own independent technology stack and CI/CD pipelines, they encounter a deluge of heterogeneous telemetry data.&lt;/p&gt;&#xA;&lt;p&gt;Application telemetry, storage telemetry, and cloud and virtualization telemetry—along with inputs from user interactions, IoT devices, message queues, databases, and various system and network telemetry sources—create a fragmented observability landscape. This fragmentation can drown organizations in data silos, making it difficult to achieve a unified view of system performance and health.&lt;/p&gt;&#xA;&lt;p&gt;The lack of integration between these disparate telemetry sources can lead to blind spots, inefficient troubleshooting, and increased operational overhead as teams struggle to correlate data across different services and infrastructure components. Consequently, the significant challenges in managing and making sense of the distributed telemetry data can undermine the promised benefits of microservices.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-importance-of-opentelemetry&#34;&gt;The importance of OpenTelemetry&lt;/h2&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1476px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png&#34;data-srcset=&#34;/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=320 320w, /media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=550 550w, /media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=750 750w, /media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=900 900w, /media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=1040 1040w, /media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=1240 1240w, /media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;&#34;&#xA;width=&#34;1476&#34;&#xA;height=&#34;1548&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png&#34;&#xA;alt=&#34;&#34;&#xA;width=&#34;1476&#34;&#xA;height=&#34;1548&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Organizations need unified observability that spans their entire technology stack. One way to achieve this is to standardize on a single observability tool, but that can create a significant vendor lock-in issue, complicating future tool changes. &lt;a href=&#34;/opentelemetry-report/&#34;&gt;OpenTelemetry&lt;/a&gt; offers a standardized, vendor-neutral method for instrumenting applications and their infrastructure components to generate consistent, contextual, and application-centric telemetry data. This eliminates the vendor lock-in problem, enabling organizations to significantly reduce migration costs if they decide to switch tools in the future.&lt;/p&gt;&#xA;&lt;p&gt;Of course, standardizing on a single tool sounds good in theory. But in practice, organizations often use a variety of additional observability tools and platforms, such as Prometheus, Jaeger, Zabbix, Fluentd, Elasticsearch, Nagios, OpenSearch, Zipkin, Skywalking, and Logstash. This diversity can lead to data silos and inconsistent telemetry data pipelines, which are often managed by different teams within the organization.&lt;/p&gt;&#xA;&lt;p&gt;Absorbing these silos into OpenTelemetry is generally possible and highly beneficial. With its vendor-neutral standard and support for a wide range of languages, OpenTelemetry can streamline telemetry data collection, improve data consistency, and enhance the overall observability strategy.&lt;/p&gt;&#xA;&lt;p&gt;Nevertheless, most organizations face significant challenges in doing so. The primary obstacles include the lack of necessary skills and resources to integrate these disparate systems quickly and reliably, as well as the high costs associated with such an undertaking.&lt;/p&gt;&#xA;&lt;p&gt;To address these challenges, organizations need to invest in training their teams in OpenTelemetry and related technologies. Additionally, adopting a phased approach to integration can help manage costs and minimize disruptions. Leveraging professional services or consulting firms with expertise in OpenTelemetry can also expedite the process and ensure a smoother transition.&lt;/p&gt;&#xA;&lt;h2 id=&#34;accelerate-opentelemetry-implementation-through-loki-mimir-tempo-beyla-pyroscope-and-alloy&#34;&gt;Accelerate OpenTelemetry implementation through Loki, Mimir, Tempo, Beyla, Pyroscope, and Alloy&lt;/h2&gt;&#xA;&lt;p&gt;Grafana&amp;rsquo;s suite of open source observability tools—Loki, Pyroscope, Mimir, Tempo, Alloy, and Beyla—complements OpenTelemetry (OTel) by providing a seamless integration that simplifies and enhances the adoption of standardized telemetry data.&lt;/p&gt;&#xA;&lt;p&gt;OpenTelemetry offers a framework for generating consistent, contextualized telemetry data across the various components of an organization&amp;rsquo;s technology stack. However, the challenge lies in effectively collecting, storing, and visualizing this data. Grafana’s tools address these challenges head-on, ensuring that organizations can fully leverage OpenTelemetry without the associated complexities and costs.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/oss/loki/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Loki&lt;/a&gt;, for instance, complements OpenTelemetry by providing a scalable and efficient log aggregation system that can ingest and query logs that OTel-instrumented applications generate.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/oss/mimir/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Mimir&lt;/a&gt; enhances this by handling the vast volumes of metrics data, ensuring they are efficiently stored and readily available for analysis.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/oss/tempo/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Tempo&lt;/a&gt;, with its distributed tracing capabilities integrate seamlessly with OpenTelemetry traces, allowing for a unified view of request flows across microservices.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/oss/pyroscope/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Pyroscope&lt;/a&gt; adds continuous profiling, giving detailed performance insights that are contextualized with OTel’s telemetry data.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/oss/beyla-ebpf/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Beyla&lt;/a&gt; provides eBPF-based auto-instrumentation to ensure that all telemetry data—logs, metrics, traces, or profiles—can be visualized and acted upon in real time within Grafana’s unified dashboards.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;While OTel has surged in popularity, especially after its &lt;a href=&#34;https://www.cncf.io/blog/2023/11/07/opentelemetry-at-kubecon-cloudnativecon-north-america-2023-update/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GA announcement at KubeCon&lt;/a&gt; last year, Prometheus remains the leader in core infrastructure monitoring with over 10,000 integrations. Grafana’s newest OSS project, &lt;a href=&#34;/oss/alloy-opentelemetry-collector/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Alloy&lt;/a&gt;, is the successor to Grafana Agent, integrating its observability codebase and lessons from challenging use cases to create an efficient OTel Collector distribution that also handles Prometheus-compatible metrics. Alloy supports advanced use cases with features like GitOps-friendly configuration, native clustering, secure Vault integration, and embedded debugging utilities.&lt;/p&gt;&#xA;&lt;p&gt;Together, these tools transform OpenTelemetry’s rich telemetry data into actionable insights, providing a cohesive and comprehensive observability strategy. Organizations can benefit from OpenTelemetry’s standardized data collection while leveraging Grafana’s powerful analytics and visualization capabilities, resulting in a more efficient, reliable, and cost-effective observability solution. This synergy ensures that teams can easily correlate and analyze diverse telemetry data, leading to enhanced operational efficiency and improved system performance.&lt;/p&gt;&#xA;&lt;h2 id=&#34;one-dashboard-to-rule-them-all&#34;&gt;One dashboard to rule them all&lt;/h2&gt;&#xA;&lt;p&gt;Grafana&amp;rsquo;s integration with OpenTelemetry truly brings to life the concept of a single, unified dashboard for comprehensive observability. By combining the power of OpenTelemetry’s standardized telemetry data and semantic conventions with Grafana’s robust suite of tools—Loki, Pyroscope, Mimir, Tempo, Beyla, and Alloy—organizations can achieve unparalleled visibility into their systems. This unified approach eliminates the data silos and inconsistencies that typically plague observability efforts, enabling teams to quickly and efficiently correlate logs, metrics, traces, and profiles.&lt;/p&gt;&#xA;&lt;p&gt;With Grafana’s intuitive interface and powerful visualization capabilities, all relevant telemetry data is accessible in one place, simplifying analysis and accelerating troubleshooting. This one dashboard to rule them all not only reduces the complexity and cost associated with adopting OpenTelemetry, but also empowers organizations to proactively manage and optimize their IT infrastructure. The result is a more resilient, efficient, and high-performing technology stack that provides a significant competitive advantage in today’s fast-paced digital landscape.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;To learn more about OpenTelemetry, check out the complete &lt;a href=&#34;/opentelemetry-report/&#34;&gt;OpenTelemetry: Challenges, priorities, adoption patterns, and solutions report&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;&lt;em&gt;Ken 作为著名的信息和网络安全从业者、软件开发人员、作者和演讲者，拥有超过 15 年的行业经验，专注于端点安全、大安全数据分析以及联邦信息安全管理法案 (FISMA) 和NIST 800-53 合规性。 Ken 专注于严格的联邦标准，咨询了众多联邦组织，包括国防信息系统局 (DISA)、退伍军人事务部和人口普查局。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;当今的企业可以通过使开发人员能够利用现有的微服务和 Kubernetes 快速构建新的应用程序功能来获得竞争优势。&lt;/p&gt;&#xA;&lt;p&gt;例如，通过利用可重用微服务库，金融机构可以快速开发和部署新功能，例如实时欺诈检测或个性化客户洞察，而无需从头开始构建这些功能。这种模块化方法不仅加快了开发周期，还确保了更大的灵活性和可扩展性。&lt;/p&gt;&#xA;&lt;p&gt;此外，当零售公司集成用于库存管理、付款处理和客户通知的微服务时，它可以快速适应市场变化和季节性需求，从而提高响应速度和客户满意度。这种通过微服务组合快速高效地创新的能力正在改变企业在数字时代竞争和取得成功的方式。&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-dark-side-of-composable-applications&#34;&gt;可组合应用程序的阴暗面&lt;/h2&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：2952px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/otel-report-ema/telemetry-stacks.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src =“/media/blog/otel-report-ema/telemetry-stacks.png”data-srcset =“/media/blog/otel-report-ema/telemetry-stacks.png？w = 320 320w，/媒体/博客/otel-report-ema/telemetry-stacks.png?w=550 550w, /media/blog/otel-report-ema/telemetry-stacks.png?w=750 750w, /media/blog/otel-report-ema/telemetry-stacks.png?w=900 900w, /media/blog/otel -report-ema/telemetry-stacks.png?w=1040 1040w, /media/blog/otel-report-ema/telemetry-stacks.png?w=1240 1240w，/media/blog/otel-report-ema/telemetry-stacks.png?w=1920 1920w&#34;&#xA;数据大小=“自动”alt=“”&#xA;宽度=“2952”&#xA;高度=“1580”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src =“/media/blog/otel-report-ema/telemetry-stacks.png”&#xA;替代=“”&#xA;宽度=“2952”&#xA;高度=“1580”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;虽然微服务应用程序的可组合性在敏捷性和模块化方面提供了显着的优势，但它在管理断开连接的遥测数据方面也带来了相当大的复杂性。当组织部署大量微服务（每个微服务都有自己独立的技术堆栈和 CI/CD 管道）时，他们会遇到大量异构遥测数据。&lt;/p&gt;&#xA;&lt;p&gt;应用程序遥测、存储遥测以及云和虚拟化遥测，以及来自用户交互、物联网设备、消息队列、数据库以及各种系统和网络遥测源的输入，创建了一个碎片化的可观察性环境。这种碎片化会使组织陷入数据孤岛，从而难以实现系统性能和运行状况的统一视图。&lt;/p&gt;&#xA;&lt;p&gt;当团队努力关联不同服务和基础设施组件之间的数据时，这些不同的遥测源之间缺乏集成可能会导致盲点、故障排除效率低下以及运营开销增加。因此，管理和理解分布式遥测数据所面临的重大挑战可能会破坏微服务所承诺的优势。&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-importance-of-opentelemetry&#34;&gt;OpenTelemetry 的重要性&lt;/h2&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1476px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png&#34;data-srcset=&#34;/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png png?w=320 320w，/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=550 550w，/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=750 750w，/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w =900 900w， /media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=1040 1040w, /media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=1240 1240瓦， /media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png?w=1920 1920w&#34;&#xA;数据大小=“自动”alt=“”&#xA;宽度=“1476”&#xA;高度=“1548”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src =“/media/blog/otel-report-ema/distributed-kubernetes-app-workflow.png”&#xA;替代=“”&#xA;宽度=“1476”&#xA;高度=“1548”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;组织需要跨越整个技术堆栈的统一可观察性。实现这一目标的一种方法是对单一可观察性工具进行标准化，但这可能会造成严重的供应商锁定问题，使未来的工具变更变得复杂。 &lt;a href=&#34;/opentelemetry-report/&#34;&gt;OpenTelemetry&lt;/a&gt; 提供了一种标准化的、供应商中立的方法，用于检测应用程序及其基础设施组件，以生成一致的、上下文相关的、以应用程序为中心的遥测数据。这消除了供应商锁定问题，使组织能够在决定将来更换工具时显着降低迁移成本。&lt;/p&gt;&#xA;&lt;p&gt;当然，从理论上讲，对单一工具进行标准化听起来不错。但在实践中，组织经常使用各种额外的可观察性工具和平台，例如 Prometheus、Jaeger、Zabbix、Fluentd、Elasticsearch、Nagios、OpenSearch、Zipkin、Skywalking 和 Logstash。这种多样性可能会导致数据孤岛和不一致的遥测数据管道，而这些数据管道通常由组织内的不同团队管理。&lt;/p&gt;&#xA;&lt;p&gt;将这些孤岛吸收到 OpenTelemetry 中通常是可能的并且非常有益。凭借其供应商中立的标准和对多种语言的支持，OpenTelemetry 可以简化遥测数据收集、提高数据一致性并增强整体可观测性策略。&lt;/p&gt;&#xA;&lt;p&gt;尽管如此，大多数组织在这样做时都面临着重大挑战。主要障碍包括缺乏必要的技能和资源来快速可靠地集成这些不同的系统，以及与此类任务相关的高成本。&lt;/p&gt;&#xA;&lt;p&gt;为了应对这些挑战，组织需要投资对其团队进行 OpenTelemetry 和相关技术的培训。此外，采用分阶段的集成方法可以帮助管理成本并最大限度地减少中断。利用具有 OpenTelemetry 专业知识的专业服务或咨询公司也可以加快这一过程并确保更顺利的过渡。&lt;/p&gt;&#xA;&lt;h2 id=&#34;accelerate-opentelemetry-implementation-through-loki-mimir-tempo-beyla-pyrscope-and-alloy&#34;&gt;通过 Loki、Mimir、Tempo、Beyla、Pyrscope 和 Alloy 加速 OpenTelemetry 实施&lt;/h2&gt;&#xA;&lt;p&gt;Grafana 的开源可观测工具套件（Loki、Pyrscope、Mimir、Tempo、Alloy 和 Beyla）通过提供无缝集成来补充 OpenTelemetry (OTel)，从而简化和增强标准化遥测数据的采用。&lt;/p&gt;&#xA;&lt;p&gt;OpenTelemetry 提供了一个框架，用于跨组织技术堆栈的各个组件生成一致的、上下文化的遥测数据。然而，挑战在于如何有效地收集、存储和可视化这些数据。 Grafana 的工具正面解决了这些挑战，确保组织可以充分利用 OpenTelemetry，而无需承担相关的复杂性和成本。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;例如，&lt;li&gt;&lt;a href=&#34;/oss/loki/?pg=blog&amp;plcmt=body-txt&#34;&gt;Loki&lt;/a&gt; 通过提供可扩展且高效的日志聚合系统来补充 OpenTelemetry，该系统可以提取和查询以下日志：生成 OTel 检测的应用程序。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/oss/mimir/?pg=blog&amp;plcmt=body-txt&#34;&gt;Mimir&lt;/a&gt; 通过处理大量指标数据来增强这一功能，确保它们得到有效存储并随时可供分析。 &lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/oss/tempo/?pg=blog&amp;plcmt=body-txt&#34;&gt;Tempo&lt;/a&gt; 其分布式跟踪功能与 OpenTelemetry 跟踪无缝集成，可提供跨微服务的请求流的统一视图.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/oss/pyrscope/?pg=blog&amp;plcmt=body-txt&#34;&gt;Pyrscope&lt;/a&gt; 添加了持续分析功能，提供与 OTel 遥测数据相关的详细性能洞察。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/oss/beyla-ebpf/?pg=blog&amp;plcmt=body-txt&#34;&gt;Beyla&lt;/a&gt; 提供 eBP基于 F 的自动检测可确保所有遥测数据（日志、指标、跟踪或配置文件）都可以在 Grafana 的统一仪表板中可视化并实时执行操作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;虽然 OTel 的受欢迎程度激增，尤其是在 &lt;a href=&#34;https://www.cncf.io/blog/2023/11/07/opentelemetry-at-kubecon-cloudnativecon-north-america-2023- update/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;去年 KubeCon&lt;/a&gt; 上发布的 GA 公告显示，Prometheus 仍然是核心基础设施监控领域的领导者，拥有超过10,000 次集成。 Grafana 最新的 OSS 项目 &lt;a href=&#34;/oss/alloy-opentelemetry-collector/?pg=blog&amp;plcmt=body-txt&#34;&gt;Alloy&lt;/a&gt; 是 Grafana Agent 的继承者，集成了其可观测性代码库和挑战中的经验教训使用案例创建高效的 OTel Collector 发行版，该发行版还可以处理 Prometheus 兼容的指标。 Alloy 通过 GitOps 友好配置、本机集群、安全 Vault 集成和嵌入式调试实用程序等功能支持高级用例。&lt;/p&gt;&#xA;&lt;p&gt;这些工具共同将 OpenTelemetry 丰富的遥测数据转化为可操作的见解，提供了连贯且全面的可观测性策略。组织可以受益于 OpenTelemetry 的标准化数据收集，同时利用 Grafana 强大的分析和可视化功能，从而形成更高效、可靠且更具成本效益的可观测性解决方案。这种协同作用确保团队可以轻松关联和分析不同的遥测数据，从而提高运营效率和系统性能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;one-dashboard-to-rule-them-all&#34;&gt;一个仪表板即可统治所有内容&lt;/h2&gt;&#xA;&lt;p&gt;Grafana 与 OpenTelemetry 的集成真正实现了单一、统一仪表板的概念，以实现全面的可观察性。通过将 OpenTelemetry 标准化遥测数据和语义约定的强大功能与 Grafana 强大的工具套件（Loki、Pyrscope、Mimir、Tempo、Beyla 和 Alloy）相结合，组织可以实现对其系统的无与伦比的可见性。这种统一的方法消除了通常困扰可观察性工作的数据孤岛和不一致性，使团队能够快速有效地关联日志、指标、跟踪和配置文件。&lt;/p&gt;&#xA;&lt;p&gt;借助 Grafana 直观的界面和强大的可视化功能，可以在一处访问所有相关遥测数据，从而简化分析并加速故障排除。这一控制所有这些的仪表板不仅降低了与采用 OpenTelemetry 相关的复杂性和成本，而且使组织能够主动管理和优化其 IT 基础设施。其结果是一个更具弹性、高效和高性能的技术堆栈，在当今快节奏的数字环境中提供了显着的竞争优势。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;要了解有关 OpenTelemetry 的更多信息，请查看完整的 &lt;a href=&#34;/opentelemetry-report/&#34;&gt;OpenTelemetry：Ch挑战、优先事项、采用模式和解决方案报告&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to use OpenTelemetry and Grafana Alloy to convert delta to cumulative at scale】如何使用 OpenTelemetry 和 Grafana Alloy 将增量转换为大规模累积值</title>
      <link>https://grafana.com/blog/2024/11/25/how-to-use-opentelemetry-and-grafana-alloy-to-convert-delta-to-cumulative-at-scale/</link>
      <description>【&lt;p&gt;Migrating from other vendors becomes a lot easier with &lt;a href=&#34;/oss/opentelemetry?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;OpenTelemetry&lt;/a&gt; and&#xA;&lt;a href=&#34;/docs/alloy/latest/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Alloy&lt;/a&gt;, our distribution of the&#xA;OpenTelemetry Collector.&lt;/p&gt;&#xA;&lt;p&gt;But when you come from platforms that use different temporalities, such as&#xA;&lt;a href=&#34;/blog/2024/06/18/translate-datadog-metrics-into-otlp-with-the-opentelemetry-collector-and-grafana-alloy/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Datadog&lt;/a&gt;&#xA;or Dynatrace, you face a challenge integrating with a Prometheus-like ecosystem such as&#xA;Grafana Cloud: Your metrics still mean the same as before, but they just don&amp;rsquo;t&#xA;look right.&lt;/p&gt;&#xA;&lt;p&gt;That&amp;rsquo;s because delta samples, which are used in other some non-Prometheus-based&#xA;observability tools, report a relative change to a measurement, such as +3, -7,&#xA;etc.&lt;/p&gt;&#xA;&lt;p&gt;Conversely, cumulative sampling, which is used in Prometheus, represents the&#xA;exact same information, but it does so as an &amp;ldquo;absolute&amp;rdquo; value in relation to an&#xA;arbitrary aggregation period, giving samples like 10, 4.&lt;/p&gt;&#xA;&lt;p&gt;Consider the following example time series (or stream, in OTel language):&lt;/p&gt;&#xA;&lt;table&gt;&#xA;&lt;thead&gt;&#xA;&lt;tr&gt;&#xA;&lt;th&gt;Time&lt;/th&gt;&#xA;&lt;th&gt;10&lt;/th&gt;&#xA;&lt;th&gt;20&lt;/th&gt;&#xA;&lt;th&gt;30&lt;/th&gt;&#xA;&lt;th&gt;40&lt;/th&gt;&#xA;&lt;th&gt;50&lt;/th&gt;&#xA;&lt;th&gt;60&lt;/th&gt;&#xA;&lt;th&gt;70&lt;/th&gt;&#xA;&lt;th&gt;80&lt;/th&gt;&#xA;&lt;th&gt;90&lt;/th&gt;&#xA;&lt;th&gt;100&lt;/th&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/thead&gt;&#xA;&lt;tbody&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;Cumulative&lt;/td&gt;&#xA;&lt;td&gt;12&lt;/td&gt;&#xA;&lt;td&gt;14&lt;/td&gt;&#xA;&lt;td&gt;14&lt;/td&gt;&#xA;&lt;td&gt;17&lt;/td&gt;&#xA;&lt;td&gt;10&lt;/td&gt;&#xA;&lt;td&gt;4&lt;/td&gt;&#xA;&lt;td&gt;13&lt;/td&gt;&#xA;&lt;td&gt;18&lt;/td&gt;&#xA;&lt;td&gt;22&lt;/td&gt;&#xA;&lt;td&gt;24&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;Delta&lt;/td&gt;&#xA;&lt;td&gt;+12&lt;/td&gt;&#xA;&lt;td&gt;+2&lt;/td&gt;&#xA;&lt;td&gt;+0&lt;/td&gt;&#xA;&lt;td&gt;+3&lt;/td&gt;&#xA;&lt;td&gt;-7&lt;/td&gt;&#xA;&lt;td&gt;-6&lt;/td&gt;&#xA;&lt;td&gt;+9&lt;/td&gt;&#xA;&lt;td&gt;+5&lt;/td&gt;&#xA;&lt;td&gt;+4&lt;/td&gt;&#xA;&lt;td&gt;+2&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;We covered this topic on the Grafana Labs blog &lt;a href=&#34;/blog/2023/09/26/opentelemetry-metrics-a-guide-to-delta-vs.-cumulative-temporality-trade-offs/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;in more detail&#xA;before&lt;/a&gt;,&#xA;and I also spoke about it during OTel Community Day 2024:&lt;/p&gt;&#xA;&lt;div&#xA;class=&#34;youtube-lazyload responsive-video&#34;&#xA;data-embed=&#34;hmm39H2Tfew&#34;&#xA;data-url=&#34;https://www.youtube.com/embed/hmm39H2Tfew?autoplay=1&amp;amp;rel=0&#34;&#xA;data-title=&#34;YouTube Video&#34;&#xA;&gt;&#xA;&lt;div class=&#34;play-button&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Luckily, Alloy (and the &lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry&#xA;Collector&lt;/a&gt;) &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/34747&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;recently&#xA;got&lt;/a&gt;&#xA;a whole lot better at handling this scenario!&lt;/p&gt;&#xA;&lt;p&gt;That&amp;rsquo;s because the team at Grafana Labs&#xA;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/30705&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;contributed&lt;/a&gt;&#xA;the&#xA;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/deltatocumulativeprocessor&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;deltatocumulative&lt;/code&gt;&lt;/a&gt;&#xA;processor upstream, adding the missing piece to send delta samples to cumulative&#xA;backends such as Prometheus or Grafana Cloud.&lt;/p&gt;&#xA;&lt;h2 id=&#34;converting-delta-metrics&#34;&gt;Converting delta metrics&lt;/h2&gt;&#xA;&lt;p&gt;The underlying math to convert a stream of delta samples to their cumulative&#xA;equivalent is not overly complex.&lt;/p&gt;&#xA;&lt;p&gt;Consider the following simplified algorithm:&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/delta-to-cumulative/diagram-1.svg&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/delta-to-cumulative/diagram-1.svg&#34;alt=&#34;Delta to cumulative diagram&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/delta-to-cumulative/diagram-1.svg&#34;&#xA;alt=&#34;Delta to cumulative diagram&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;When processing a metrics write request, it iterates the sample list. For each&#xA;delta increase or decrease it adds that amount to the last value of that stream&#xA;(or zero if this is the first sample ever seen).&lt;/p&gt;&#xA;&lt;p&gt;The result is now a proper cumulative sample, because it&amp;rsquo;s accumulated (added&#xA;up) over time. Those values are stored in the processor for the next aggregation&#xA;and also passed onto the next consumer in the metrics pipeline.&lt;/p&gt;&#xA;&lt;p&gt;(There is a little more timestamp and edge-case handling involved to do this&#xA;properly all the time, but this captures the basic idea.)&lt;/p&gt;&#xA;&lt;h3 id=&#34;the-role-of-statefulness&#34;&gt;The role of statefulness&lt;/h3&gt;&#xA;&lt;p&gt;Unfortunately, however, the above operation comes with a big caveat: It&amp;rsquo;s&#xA;&lt;strong&gt;stateful&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;See the &lt;em&gt;Processor state&lt;/em&gt; the algorithm keeps interacting with? This state is&#xA;what the collector has to keep in memory. And because this must be done&#xA;per-series specifically, &lt;strong&gt;every sample&lt;/strong&gt; of a certain time series must always&#xA;be sent to &lt;strong&gt;the exact same collector&lt;/strong&gt; instance as the last sample was.&lt;/p&gt;&#xA;&lt;p&gt;Not exactly scaling-friendly, right?&lt;/p&gt;&#xA;&lt;h2 id=&#34;incorporating-load-balancing&#34;&gt;Incorporating load balancing&lt;/h2&gt;&#xA;&lt;p&gt;Luckily, there is another component for this exact kind of requirement: The&#xA;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/loadbalancingexporter&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;loadbalancing&lt;/code&gt;&lt;/a&gt;&#xA;exporter.&lt;/p&gt;&#xA;&lt;p&gt;It recently gained support for&#xA;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/34086&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;streamID&lt;/code&gt;&lt;/a&gt;-based&#xA;routing, which does exactly what we need: it always sends samples of the same&#xA;time series to a fixed collector endpoint.&lt;/p&gt;&#xA;&lt;p&gt;To leverage that, we setup a two-layer collector deployment:&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/delta-to-cumulative/load-balancer-alloy.svg&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/delta-to-cumulative/load-balancer-alloy.svg&#34;alt=&#34;Load balancer diagram&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/delta-to-cumulative/load-balancer-alloy.svg&#34;&#xA;alt=&#34;Load balancer diagram&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;For brevity, the following sections only include the most important parts. You&#xA;can find the full configuration on&#xA;&lt;a href=&#34;https://github.com/sh0rez/deltatocumulative-scaling&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GitHub&lt;/a&gt;:&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;a class=&#34;btn btn--primary&#34; href=&#34;https://github.com/sh0rez/deltatocumulative-scaling&#34; style=&#34;display: flex; align-items: center; gap: .5em&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&#xA;&lt;span style=&#34;font-size: 1.5em&#34; class=&#34;fa fa-github&#34;&gt;&lt;/span&gt; sh0rez/deltatocumulative-scaling&#xA;&lt;/a&gt;&#xA;&lt;h3 id=&#34;using-containers&#34;&gt;Using containers&lt;/h3&gt;&#xA;&lt;p&gt;I&amp;rsquo;m using &lt;a href=&#34;https://docs.docker.com/compose&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Docker Compose&lt;/a&gt; to create the&#xA;containers in our deployment above, but this can be done using any system,&#xA;including Kubernetes:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;# application generating delta metrics, writes to router using OTLP&#xA;app:&#xA;build: ./deltagen&#xA;environment:&#xA;OTEL_EXPORTER_OTLP_ENDPOINT: http://router:4318&#xA;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: delta&#xA;scale: 4&#xA;# stateless collector, routing incoming metrics to workers based on stream-id&#xA;router:&#xA;image: otel/opentelemetry-collector-contrib:0.112.0&#xA;volumes:&#xA;- ./loadbal.yml:/etc/otelcol-contrib/config.yaml&#xA;scale: 1&#xA;# stateful collector, converting from delta to cumulative and remote_writing to prometheus&#xA;worker:&#xA;image: otel/opentelemetry-collector-contrib:0.112.0&#xA;volumes:&#xA;- ./worker.yml:/etc/otelcol-contrib/config.yaml&#xA;scale: 2&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;This gives us several instances of an app that generates metrics, a single&#xA;load-balancer, and two workers.&lt;/p&gt;&#xA;&lt;p&gt;Docker Compose also automatically sets up the Docker DNS server, such that&#xA;&lt;code&gt;nslookup router&lt;/code&gt; returns the IPs of both instances.&lt;/p&gt;&#xA;&lt;h3 id=&#34;configuration-load-balancer&#34;&gt;Configuration: load balancer&lt;/h3&gt;&#xA;&lt;p&gt;Our application sends metrics using OTLP, but any other receiver works:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;receivers:&#xA;otlp:&#xA;protocols:&#xA;http:&#xA;endpoint: 0.0.0.0:4318&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Next, the &lt;code&gt;loadbalancing&lt;/code&gt; exporter is configured to do sticky routing on a&#xA;per-series basis:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;exporters:&#xA;loadbalancing:&#xA;routing_key: streamID # load-balance on a per-stream basis&#xA;resolver:&#xA;dns:&#xA;hostname: worker # send to a stable worker of the pool&#xA;protocol:&#xA;otlp:&#xA;tls:&#xA;insecure: true # for testing, properly configure TLS in production&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;This uses the &lt;code&gt;dns&lt;/code&gt; resolver, which discovers worker instances by doing a DNS A&#xA;lookup on the hostname &lt;code&gt;worker&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Docker Compose configures the built-in Docker DNS server so that it always&#xA;returns all instance IPs when querying for the service name. The same can be&#xA;achieved in Kubernetes by using a &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/#headless-services&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;headless&#xA;Service&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;configuration-worker&#34;&gt;Configuration: worker&lt;/h3&gt;&#xA;&lt;p&gt;The workers receive samples from a router in OTLP gRPC, convert them to&#xA;cumulative, and forward them to some backend supported by the collector (e.g.,&#xA;Grafana Cloud).&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;receivers:&#xA;otlp:&#xA;protocols:&#xA;grpc:&#xA;endpoint: 0.0.0.0:4317&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;deltatocumulative&lt;/code&gt; processor works out-of-the-box. See &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/deltatocumulativeprocessor#configuration&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;its&#xA;documentation&lt;/a&gt;&#xA;for additional configuration options.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;processors:&#xA;deltatocumulative: {}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Once converted to cumulative, the samples can be used with any exporter that&#xA;supports the cumulative temporality, such as the&#xA;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/prometheusremotewriteexporter&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;prometheusremotewrite&lt;/code&gt;&lt;/a&gt;&#xA;exporter.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;exporters:&#xA;prometheusremotewrite:&#xA;endpoint: http://prometheus:9090/api/v1/write&#xA;resource_to_telemetry_conversion:&#xA;enabled: true&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;running-the-processor&#34;&gt;Running the processor&lt;/h2&gt;&#xA;&lt;p&gt;Once started, we can clearly see the even distribution of data points across the&#xA;different workers, using the following query:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;promql&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-promql&#34;&gt;rate(otelcol_receiver_accepted_metric_points[1m])&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;In this example, the number of workers was scaled from two to three, then up to&#xA;five, then back to two.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1597px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/delta-to-cumulative/otlp.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/delta-to-cumulative/otlp.png&#34;data-srcset=&#34;/media/blog/delta-to-cumulative/otlp.png?w=320 320w, /media/blog/delta-to-cumulative/otlp.png?w=550 550w, /media/blog/delta-to-cumulative/otlp.png?w=750 750w, /media/blog/delta-to-cumulative/otlp.png?w=900 900w, /media/blog/delta-to-cumulative/otlp.png?w=1040 1040w, /media/blog/delta-to-cumulative/otlp.png?w=1240 1240w, /media/blog/delta-to-cumulative/otlp.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;OTLP panel&#34;&#xA;width=&#34;1597&#34;&#xA;height=&#34;501&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/delta-to-cumulative/otlp.png&#34;&#xA;alt=&#34;OTLP panel&#34;&#xA;width=&#34;1597&#34;&#xA;height=&#34;501&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;The instances were DNS discovered as they came and went, with &lt;code&gt;loadbalancing&lt;/code&gt;&#xA;always evenly distributing load between them.&lt;/p&gt;&#xA;&lt;p&gt;The load-balancer (red line) was scaled from one to two and back.&lt;/p&gt;&#xA;&lt;p&gt;Looking at &lt;code&gt;deltatocumulative&lt;/code&gt;, we can see the streams tracked in memory. They&#xA;are dropped after five minutes without receiving new samples:&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1597px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/delta-to-cumulative/tracked-streams.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/delta-to-cumulative/tracked-streams.png&#34;data-srcset=&#34;/media/blog/delta-to-cumulative/tracked-streams.png?w=320 320w, /media/blog/delta-to-cumulative/tracked-streams.png?w=550 550w, /media/blog/delta-to-cumulative/tracked-streams.png?w=750 750w, /media/blog/delta-to-cumulative/tracked-streams.png?w=900 900w, /media/blog/delta-to-cumulative/tracked-streams.png?w=1040 1040w, /media/blog/delta-to-cumulative/tracked-streams.png?w=1240 1240w, /media/blog/delta-to-cumulative/tracked-streams.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Delta to cumulative panel&#34;&#xA;width=&#34;1597&#34;&#xA;height=&#34;501&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/delta-to-cumulative/tracked-streams.png&#34;&#xA;alt=&#34;Delta to cumulative panel&#34;&#xA;width=&#34;1597&#34;&#xA;height=&#34;501&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;looking-ahead&#34;&gt;Looking ahead&lt;/h2&gt;&#xA;&lt;p&gt;Most of this is early work, just released to the wider community.&lt;/p&gt;&#xA;&lt;p&gt;Any kind of testing and feedback is highly appreciated. Don&amp;rsquo;t hesitate to &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/new/choose&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;file&#xA;issues&lt;/a&gt;,&#xA;engage on Slack (the Grafana community Slack and CNCF Slack both have&#xA;#opentelemetry channels) or even contribute PRs.&lt;/p&gt;&#xA;&lt;p&gt;Once mature, we will explore ways to reduce the operational complexity, such as&#xA;bringing this functionality directly into backends such as Prometheus&amp;rsquo; &lt;a href=&#34;https://github.com/prometheus/prometheus/pull/12571&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OTLP&#xA;receiver&lt;/a&gt; or Grafana Cloud.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud &lt;/a&gt;is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case. &lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Sign up for free now!&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;使用 &lt;a href=&#34;/oss/opentelemetry?pg=blog&amp;plcmt=body-txt&#34;&gt;OpenTelemetry&lt;/a&gt; 从其他供应商迁移变得更加容易&#xA;&lt;a href=&#34;/docs/alloy/latest/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana Alloy&lt;/a&gt;，我们的发行版&#xA;打开遥测收集器。&lt;/p&gt;&#xA;&lt;p&gt;但是当您来自使用不同时间性的平台时，例如&#xA;&lt;a href=&#34;/blog/2024/06/18/translate-datadog-metrics-into-otlp-with-the-opentelemetry-collector-and-grafana-alloy/?pg=blog&amp;plcmt=body-txt&#34;&gt;Datadog&lt; /a&gt;&#xA;或 Dynatrace，您面临着与类似 Prometheus 的生态系统集成的挑战，例如&#xA;Grafana Cloud：您的指标仍然与以前相同，但它们只是不同&#xA;看右边。&lt;/p&gt;&#xA;&lt;p&gt;这是因为 delta 样本，在其他一些非 Prometheus 基础上使用&#xA;可观测性工具，报告测量的相对变化，例如+3、-7、&#xA;等等&lt;/p&gt;&#xA;&lt;p&gt;相反，Prometheus 中使用的累积采样表示&#xA;完全相同的信息，但它是作为相对于某个值的“绝对”值&#xA;任意聚合周期，给出 10、4 等样本。&lt;/p&gt;&#xA;&lt;p&gt;考虑以下示例时间序列（或 OTel 语言中的流）：&lt;/p&gt;&#xA;&lt;表&gt;&#xA;&lt;标题&gt;&#xA;&lt;tr&gt;&#xA;&lt;th&gt;时间&lt;/th&gt;&#xA;&lt;th&gt;10&lt;/th&gt;&#xA;&lt;th&gt;20&lt;/th&gt;&#xA;&lt;th&gt;30&lt;/th&gt;&#xA;&lt;th&gt;40&lt;/th&gt;&#xA;&lt;th&gt;50&lt;/th&gt;&#xA;&lt;th&gt;60&lt;/th&gt;&#xA;&lt;th&gt;70&lt;/th&gt;&#xA;&lt;th&gt;80&lt;/th&gt;&#xA;&lt;th&gt;90&lt;/th&gt;&#xA;&lt;th&gt;100&lt;/th&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/标题&gt;&#xA;&lt;正文&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;累计&lt;/td&gt;&#xA;&lt;td&gt;12&lt;/td&gt;&#xA;&lt;td&gt;14&lt;/td&gt;&#xA;&lt;td&gt;14&lt;/td&gt;&#xA;&lt;td&gt;17&lt;/td&gt;&#xA;&lt;td&gt;10&lt;/td&gt;&#xA;&lt;td&gt;4&lt;/td&gt;&#xA;&lt;td&gt;13&lt;/td&gt;&#xA;&lt;td&gt;18&lt;/td&gt;&#xA;&lt;td&gt;22&lt;/td&gt;&#xA;&lt;td&gt;24&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;达美航空&lt;/td&gt;&#xA;&lt;td&gt;+12&lt;/td&gt;&#xA;&lt;td&gt;+2&lt;/td&gt;&#xA;&lt;td&gt;+0&lt;/td&gt;&#xA;&lt;td&gt;+3&lt;/td&gt;&#xA;&lt;td&gt;-7&lt;/td&gt;&#xA;&lt;td&gt;-6&lt;/td&gt;&#xA;&lt;td&gt;+9&lt;/td&gt;&#xA;&lt;td&gt;+5&lt;/td&gt;&#xA;&lt;td&gt;+4&lt;/td&gt;&#xA;&lt;td&gt;+2&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/tbody&gt;&#xA;&lt;/表&gt;&#xA;&lt;p&gt;我们在 Grafana Labs 博客&lt;a href=&#34;/blog/2023/09/26/opentelemetry-metrics-a-guide-to-delta-vs.-cumulative-temporality-trade-offs/? pg=blog&amp;plcmt=body-txt&#34;&gt;更详细&#xA;之前&lt;/a&gt;，&#xA;我还在 2024 年 OTel 社区日期间谈到了这一点：&lt;/p&gt;&#xA;&lt;div&#xA;类 =“youtube-lazyload 响应视频”&#xA;数据嵌入=“hmm39H2Tfew”&#xA;data-url=&#34;https://www.youtube.com/embed/hmm39H2Tfew?autoplay=1&amp;rel=0&#34;&#xA;数据标题=“YouTube 视频”&#xA;&gt;&#xA;&lt;div class=&#34;play-button&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;幸运的是，Alloy（以及 &lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry&#xA;收集器&lt;/a&gt;）&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/34747&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;最近&#xA;得到&lt;/a&gt;&#xA;能够更好地处理这种情况！&lt;/p&gt;&#xA;&lt;p&gt;那是因为 Grafana Labs 的团队&#xA;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/30705&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;贡献&lt;/a&gt;&#xA;这&#xA;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/deltatocumulativeprocessor&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;deltatocumulative&lt;/code &gt;&lt;/a&gt;&#xA;处理器上游，添加缺失的部分以将增量样本发送到累积&#xA;后端例如Prometheus 或 Grafana Cloud。&lt;/p&gt;&#xA;&lt;h2 id=&#34;converting-delta-metrics&#34;&gt;转换增量指标&lt;/h2&gt;&#xA;&lt;p&gt;将增量样本流转换为其累积值的基础数学&#xA;等价物并不太复杂。&lt;/p&gt;&#xA;&lt;p&gt;考虑以下简化算法：&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/delta-to-cumulative/diagram-1.svg&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/delta-to-cumulative/diagram-1.svg&#34;alt=&#34;Delta 到累积图&#34;&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src =“/media/blog/delta-to-cumulative/diagram-1.svg”&#xA;alt=&#34;累积图的增量&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;处理指标写入请求时，它会迭代示例列表。对于每个&#xA;增量增加或减少它将该金额添加到该流的最后一个值&#xA;（如果这是有史以来第一个样本，则为零）。&lt;/p&gt;&#xA;&lt;p&gt;结果现在是一个正确的累积样本，因为它是累积的（添加了&#xA;上）随着时间的推移。这些值存储在处理器中以供下一次聚合&#xA;并传递给指标管道中的下一个消费者。&lt;/p&gt;&#xA;&lt;p&gt;（执行此操作涉及更多时间戳和边缘情况处理&#xA;始终正确，但这抓住了基本思想。）&lt;/p&gt;&#xA;&lt;h3 id=&#34;the-role-of-stateativity&#34;&gt;有状态的作用&lt;/h3&gt;&#xA;&lt;p&gt;然而不幸的是，上述操作有一个很大的警告：&#xA;&lt;strong&gt;有状态&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;看到算法一直与之交互的&lt;em&gt;处理器状态&lt;/em&gt;吗？这个状态是&#xA;收藏家必须记住的东西。因为这必须要做&#xA;具体而言，特定时间序列的&lt;strong&gt;每个样本&lt;/strong&gt;必须始终&#xA;被发送到与上一个样本&lt;strong&gt;完全相同的收集器&lt;/strong&gt;实例。&lt;/p&gt;&#xA;&lt;p&gt;不完全适合扩展，对吧？&lt;/p&gt;&#xA;&lt;h2 id=&#34;incorporating-load-balancing&#34;&gt;合并负载平衡&lt;/h2&gt;&#xA;&lt;p&gt;幸运的是，还有另一个组件可以满足这种确切的要求：&#xA;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/loadbalancingexporter&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;负载均衡&lt;/code &gt;&lt;/a&gt;&#xA;出口商。&lt;/p&gt;&#xA;&lt;p&gt;它最近获得了支持&#xA;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/34086&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;streamID&lt;/code&gt;&lt;/a &gt;基于&#xA;路由，它正是我们所需要的：它总是发送相同的样本&#xA;时间序列到固定收集器端点。&lt;/p&gt;&#xA;&lt;p&gt;为了利用这一点，我们设置了两层收集器部署：&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/delta-to-cumulative/load-balancer-alloy.svg&#34;&#xA;项目属性=“内容网址&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/delta-to-cumulative/load-balancer-alloy.svg&#34;alt=&#34;负载均衡器图&#34;&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src =“/media/blog/delta-to-cumulative/load-balancer-alloy.svg”&#xA;alt=&#34;负载均衡器图&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;块引用&gt;&#xA;&lt;p&gt;&lt;em&gt;为简洁起见，以下部分仅包含最重要的部分。你&#xA;可以找到完整的配置&#xA;&lt;a href=&#34;https://github.com/sh0rez/deltatocumulative-scaling&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GitHub&lt;/a&gt;：&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&lt;a class =“btn btn--primary”href =“https://github.com/sh0rez/deltatocumulative-scaling”style =“显示：flex;对齐项目：中心;间隙：.5em”target =“_blank” “ rel =“noopener noreferrer”&gt;&#xA;&lt;span style=&#34;font-size: 1.5em&#34; class=&#34;fa fa-github&#34;&gt;&lt;/span&gt; sh0rez/deltatocumulative-scaling&#xA;&lt;/a&gt;&#xA;&lt;h3 id=&#34;using-containers&#34;&gt;使用容器&lt;/h3&gt;&#xA;&lt;p&gt;我正在使用 &lt;a href=&#34;https://docs.docker.com/compose&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Docker Compose&lt;/a&gt; 来创建&#xA;我们上面部署中的容器，但这可以使用任何系统来完成，&#xA;包括 Kubernetes：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;服务：&#xA;# 应用程序生成增量指标，使用 OTLP 写入路由器&#xA;应用程序：&#xA;构建：./deltagen&#xA;环境：&#xA;OTEL_EXPORTER_OTLP_ENDPOINT：http://路由器:4318&#xA;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE：增量&#xA;规模：4&#xA;# 无状态收集器，根据流 ID 将传入指标路由到工作人员&#xA;路由器：&#xA;图片：otel/opentelemetry-collector-contrib:0.112.0&#xA;卷：&#xA;- ./loadbal.yml:/etc/otelcol-contrib/config.yaml&#xA;规模：1&#xA;# 有状态收集器，从 delta 转换为cumulative，remote_writing 转换为 prometheus&#xA;工人：&#xA;图片：otel/opentelemetry-collector-contrib:0.112.0&#xA;卷：&#xA;- ./worker.yml:/etc/otelcol-contrib/config.yaml&#xA;规模：2&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;这为我们提供了生成指标的应用程序的多个实例，一个&#xA;负载均衡器和两个工作人员。&lt;/p&gt;&#xA;&lt;p&gt;Docker Compose 还会自动设置 Docker DNS 服务器，这样&#xA;&lt;code&gt;nslookup router&lt;/code&gt; 返回两个实例的 IP。&lt;/p&gt;&#xA;&lt;h3 id=&#34;configuration-load-balancer&#34;&gt;配置：负载均衡器&lt;/h3&gt;&#xA;&lt;p&gt;我们的应用程序使用 OTLP 发送指标，但任何其他接收器都可以工作：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;接收者：&#xA;奥特普：&#xA;协议：&#xA;http：&#xA;端点：0.0.0.0:4318&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;接下来，&lt;code&gt;loadbalancing&lt;/code&gt; 导出器配置为在&#xA;每个系列的基础：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;导出器：&#xA;负载平衡：&#xA;Routing_key: StreamID # 基于每个流的负载平衡&#xA;解析器：&#xA;域名：&#xA;hostname:worker # 发送到池中的稳定worker&#xA;协议：&#xA;奥特普：&#xA;:&#xA;insecure: true # 用于测试，在生产中正确配置 TLS&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;这使用 &lt;code&gt;dns&lt;/code&gt; 解析器，它通过执行 DNS A 来发现工作实例&#xA;查找主机名&lt;code&gt;worker&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;Docker Compose 配置内置 Docker DNS 服务器，使其始终&#xA;查询服务名称时返回所有实例IP。同样可以&#xA;通过使用 &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/#headless-services&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;headless 在 Kubernetes 中实现&#xA;服务&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;configuration-worker&#34;&gt;配置：工作人员&lt;/h3&gt;&#xA;&lt;p&gt;工作人员从 OTLP gRPC 中的路由器接收样本，将其转换为&#xA;累积的，并将它们转发到收集器支持的某些后端（例如，&#xA;Grafana 云）。&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;接收者：&#xA;奥特普：&#xA;协议：&#xA;组：&#xA;端点：0.0.0.0:4317&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;code&gt;deltatocumulative&lt;/code&gt; 处理器开箱即用。请参阅&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/deltatocumulativeprocessor#configuration&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;其&#xA;文档&lt;/a&gt;&#xA;更多配置选项。&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;复制()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;处理器：&#xA;增量累积：{}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;一旦转换为累积，样本就可以与任何出口商一起使用&#xA;支持累积时间性，例如&#xA;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/prometheusremotewriteexporter&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;prometheusremotewrite&lt;/code &gt;&lt;/a&gt;&#xA;出口商。&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;导出器：&#xA;普罗米修斯远程写入：&#xA;端点：http://prometheus:9090/api/v1/write&#xA;资源到遥测转换：&#xA;启用：true&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;running-the-processor&#34;&gt;运行处理器&lt;/h2&gt;&#xA;&lt;p&gt;一旦开始，我们可以清楚地看到数据点在整个区域的均匀分布&#xA;不同的工作人员，使用以下查询：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;promql&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-promql&#34;&gt;费率(otelcol_receiver_accepted_metric_points[1m])&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;在这个例子中，工人的数量从两个扩展到三个，然后增加到&#xA;五个，然后回到两个。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1597px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/delta-to-cumulative/otlp.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src =“/media/blog/delta-to-cumulative/otlp.png”data-srcset =“/media/blog/delta-to-cumulative/otlp.png？w = 320 320w，/media/blog/增量到累积/otlp.png？w=550 550w，/media/blog/增量到累积/otlp.png？w=750 750w， /media/blog/delta-to-cumulative/otlp.png?w=900 900w, /media/blog/delta-to-cumulative/otlp.png?w=1040 1040w, /media/blog/delta-to-cumulative /otlp.png?w=1240 1240w, /media/blog/delta-to-cumulative/otlp.png?w=1920 1920w&#34;&#xA;data-size=&#34;auto&#34;alt=&#34;OTLP 面板&#34;&#xA;宽度=“1597”&#xA;高度=“501”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src =“/media/blog/delta-to-cumulative/otlp.png”&#xA;alt=&#34;OTLP 面板&#34;&#xA;宽度=“1597”&#xA;高度=“501”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;这些实例在它们来来往往时被 DNS 发现，并使用&lt;code&gt;负载平衡&lt;/code&gt;&#xA;始终在它们之间均匀分配负载。&lt;/p&gt;&#xA;&lt;p&gt;负载均衡器（红线）从 1 缩放到 2，然后再缩放回来。&lt;/p&gt;&#xA;&lt;p&gt;查看&lt;code&gt;deltatocumulative&lt;/code&gt;，我们可以看到内存中跟踪的流。他们&#xA;五分钟后没有收到新样本就被丢弃：&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1597px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/delta-to-cumulative/tracked-streams.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src =“/media/blog/delta-to-cumulative/tracked-streams.png”data-srcset =“/media/blog/delta-to-cumulative/tracked-streams.png？w = 320 320w，/媒体/博客/delta-to-cumulative/tracked-streams.png?w=550 550w, /media/blog/delta-to-cumulative/tracked-streams.png?w=750 750w, /media/blog/delta-to-cumulative/tracked-streams.png?w=900 900w, /media/blog/delta -to-cumulative/tracked-streams.png?w=1040 1040w, /media/blog/delta-to-cumulative/tracked-streams.png?w=1240 1240w, /media/blog/delta-to-cumulative/tracked-streams.png?w=1920 1920w&#34;&#xA;data-size=&#34;auto&#34;alt=&#34;累积面板的增量&#34;&#xA;宽度=“1597”&#xA;高度=“501”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src =“/media/blog/delta-to-cumulative/tracked-streams.png”&#xA;alt=&#34;累积面板的增量&#34;&#xA;宽度=“1597”&#xA;高度=“501”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;h2 id=&#34;looking-ahead&#34;&gt;展望未来&lt;/h2&gt;&#xA;&lt;p&gt;其中大部分是早期工作，刚刚发布给更广泛的社区。&lt;/​​p&gt;&#xA;&lt;p&gt;任何类型的测试和反馈都受到高度赞赏。不要犹豫 &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/new/choose&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;文件&#xA;问题&lt;/a&gt;，&#xA;参与 Slack（Grafana 社区 Slack 和 CNCF Slack 都有&#xA;#opentelemetry频道）甚至贡献PR。&lt;/p&gt;&#xA;&lt;p&gt;一旦成熟，我们将探索降低运营复杂度的方法，例如&#xA;将此功能直接引入后端，例如 Prometheus 的 &lt;a href=&#34;https://github.com/prometheus/prometheus/pull/12571&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OTLP&#xA;接收器&lt;/a&gt;或Grafana Cloud。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。 &lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;plcmt=body-txt&#34;&gt;立即免费注册！&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Grafana Beyla: what’s new and what’s next for the open source eBPF auto-instrumentation tool】Grafana Beyla：开源 eBPF 自动检测工具的新功能和下一步发展</title>
      <link>https://grafana.com/blog/2024/11/14/grafana-beyla-whats-new-and-whats-next-for-the-open-source-ebpf-auto-instrumentation-tool/</link>
      <description>【&lt;p&gt;It’s been a year since Grafana Labs announced &lt;a href=&#34;/blog/2023/11/14/grafana-beyla-1.0-release-zero-code-instrumentation-for-application-telemetry-using-ebpf/&#34;&gt;the general availability of Grafana Beyla&lt;/a&gt;, our open source OpenTelemetry and Prometheus eBPF auto-instrumentation tool to help you easily get started with application observability.&lt;/p&gt;&#xA;&lt;p&gt;As a Beyla maintainer, I wanted to take a minute to reflect on what we’ve accomplished with &lt;a href=&#34;/oss/beyla-ebpf/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Beyla&lt;/a&gt; since then, what we have learned about supporting an eBPF tool in production, and, in general, how exciting this whole journey has been.&lt;/p&gt;&#xA;&lt;h2 id=&#34;looking-back-what-weve-accomplished-with-beyla&#34;&gt;Looking back: what we’ve accomplished with Beyla&lt;/h2&gt;&#xA;&lt;h3 id=&#34;weve-grown-a-community&#34;&gt;We’ve grown a community&lt;/h3&gt;&#xA;&lt;p&gt;Working on this project has almost felt like running a startup within Grafana Labs, but after nearly two years of that work, I really don’t see Beyla as a Grafana-only project. We have ten times more external contributors than Grafanistas contributing, and many of those external contributions have significantly shaped Belya, as we know it today. David Ashpole, for example, contributed the &lt;a href=&#34;https://github.com/grafana/beyla/pull/741&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;patches&lt;/a&gt; required to run Beyla with a minimal set of permissions; Khushi Jain contributed the &lt;a href=&#34;https://github.com/grafana/beyla/pull/642&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Beyla Helm chart&lt;/a&gt;, which is by far the most common way people install Beyla today; and Darek Barecki contributed our &lt;a href=&#34;https://github.com/grafana/beyla/pull/883&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;direction detection code&lt;/a&gt; for the network observability component.&lt;/p&gt;&#xA;&lt;p&gt;If I had to pick one, I would say building an open source community around Beyla has been our greatest accomplishment since our &lt;a href=&#34;/blog/2023/11/14/grafana-beyla-1.0-release-zero-code-instrumentation-for-application-telemetry-using-ebpf/#:~:text=Ask%20me%20anything.-,Grafana%20Beyla%201.0%20release%3A%20zero%2Dcode%20instrumentation,for%20application%20telemetry%20using%20eBPF&amp;amp;text=Just%20two%20months%20after%20introducing,1.0%20at%20ObservabilityCON%202023%20today.&#34;&gt;1.0 release&lt;/a&gt; a year ago. We owe so much to our community members for bringing fresh ideas and perspectives, and reporting bugs!&lt;/p&gt;&#xA;&lt;h3 id=&#34;weve-made-application-and-service-graph-metrics-easy&#34;&gt;We’ve made application and service graph metrics easy&lt;/h3&gt;&#xA;&lt;p&gt;Since day one, Beyla has supported both metrics and traces, but metrics is where Beyla has really shined. With our multi-process support and language-agnostic approach to observability, Beyla has become the go-to tool for easily getting started with &lt;a href=&#34;https://opentelemetry.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry&lt;/a&gt;. From an end-user perspective, they simply add Beyla to their cluster and gain immediate visibility into what’s going on with their applications.&lt;/p&gt;&#xA;&lt;p&gt;Since our 1.0 release, which only tracked the HTTP and gRPC protocols, we’ve added support for HTTP2, SQL, Redis, and Kafka, making Beyla a much more useful observability tool. We started tracking network and connection metrics, which allows users to build solutions for service graphs. We worked hard to pick the right defaults, balancing ease of use with generating too many metrics.&lt;/p&gt;&#xA;&lt;p&gt;After all this effort, it was great to see the full &lt;a href=&#34;/events/observabilitycon/2024/opentelemetry-grafana-alloy-beyla-demo-of-instrumentation-ingestion/&#34;&gt;OpenTelemetry Demo instrumented with a single Beyla daemonset deployment&lt;/a&gt; earlier this year. The one Beyla instance produced service-level application metrics for all the different technologies and protocols used to implement the services in the &lt;a href=&#34;https://opentelemetry.io/ecosystem/demo/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry Demo&lt;/a&gt;. We tested the OpenTelemetry Demo by stripping away all existing instrumentation code and monitoring services, while keeping the bare-bones uninstrumented applications talking to each other.&lt;/p&gt;&#xA;&lt;p&gt;Below, we show a screenshot of &lt;a href=&#34;/docs/grafana/latest/dashboards/build-dashboards/best-practices/#red-method&#34;&gt;RED (rate, error, and duration) metrics&lt;/a&gt;, as well as service graph metrics, generated for the OpenTelemetry Demo Checkout service directly from Beyla.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/grafana-beyla-one-year/beyla-app-olly.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/grafana-beyla-one-year/beyla-app-olly.png&#34;data-srcset=&#34;/media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=320 320w, /media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=550 550w, /media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=750 750w, /media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=900 900w, /media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=1040 1040w, /media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=1240 1240w, /media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of RED metrics generated from the OTel Demo Checkout service directly from Beyla.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;1003&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/grafana-beyla-one-year/beyla-app-olly.png&#34;&#xA;alt=&#34;A screenshot of RED metrics generated from the OTel Demo Checkout service directly from Beyla.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;1003&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;And here, we show the &lt;a href=&#34;/docs/grafana-cloud/monitor-applications/asserts/troubleshoot-infra-apps/workbench/&#34;&gt;Asserts RCA (root cause analysis) Workbench&lt;/a&gt;, using data correlation between network and application metrics, generated by the single Beyla instrumentation instance.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/grafana-beyla-one-year/beyla-asserts.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/grafana-beyla-one-year/beyla-asserts.png&#34;data-srcset=&#34;/media/blog/grafana-beyla-one-year/beyla-asserts.png?w=320 320w, /media/blog/grafana-beyla-one-year/beyla-asserts.png?w=550 550w, /media/blog/grafana-beyla-one-year/beyla-asserts.png?w=750 750w, /media/blog/grafana-beyla-one-year/beyla-asserts.png?w=900 900w, /media/blog/grafana-beyla-one-year/beyla-asserts.png?w=1040 1040w, /media/blog/grafana-beyla-one-year/beyla-asserts.png?w=1240 1240w, /media/blog/grafana-beyla-one-year/beyla-asserts.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of the Asserts RCA Workbench generated by a Beyla instrumentation instance.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;1006&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/grafana-beyla-one-year/beyla-asserts.png&#34;&#xA;alt=&#34;A screenshot of the Asserts RCA Workbench generated by a Beyla instrumentation instance.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;1006&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h4 id=&#34;metrics-check-what-about-distributed-traces&#34;&gt;Metrics… check. What about distributed traces?&lt;/h4&gt;&#xA;&lt;p&gt;While we made metrics easy, our distributed traces support has remained limited, which has been an interesting customer support experience. Users expect it to be as easy to get started with distributed traces as it is with metrics. And why not?&lt;/p&gt;&#xA;&lt;p&gt;There are a number of eBPF quirks that make writing user memory difficult, and we absolutely need the ability to write memory for trace context propagation. This was the focus of my KubeCon North America 2024 talk, “&lt;a href=&#34;https://colocatedeventsna2024.sched.com/event/9558b23bd7be09b47b60ecf8c7defd7c&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;So you want to write memory with eBPF?&lt;/a&gt;” Having said that, we’ve done a lot of innovation and research in this area and we expect that we will be able to provide full generic distributed trace support in our upcoming 2.0 release. Most of the patches for generic distributed traces are already in our codebase, so very soon they’ll be on by default and fully supported.&lt;/p&gt;&#xA;&lt;h3 id=&#34;weve-learned-how-to-scale-and-deploy-ebpf-in-production&#34;&gt;We’ve learned how to scale and deploy eBPF in production&lt;/h3&gt;&#xA;&lt;h4 id=&#34;resource-utilization-matters-in-large-clusters&#34;&gt;Resource utilization matters in large clusters&lt;/h4&gt;&#xA;&lt;p&gt;While our 1.0 release worked, it wasn’t totally optimized in terms of resource utilization. To be able to deploy Beyla at Grafana Labs in our production environments, we had to do a lot of memory and processing optimizations. Deploying eBPF probes for every single instrumented application was never going to scale, so we had to learn how to share everything, from eBPF memory maps to the actual probes.&lt;/p&gt;&#xA;&lt;h4 id=&#34;ebpf-limitations-can-be-tricky&#34;&gt;eBPF limitations can be tricky&lt;/h4&gt;&#xA;&lt;p&gt;Sometimes, the limitations of certain eBPF features are buried in hard-to-find documentation, so we learned a couple of things the hard way — for example, that &lt;a href=&#34;https://docs.kernel.org/trace/kprobes.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;kernel return probes&lt;/a&gt; are limited and can not be relied on, or that setting up &lt;a href=&#34;https://docs.kernel.org/trace/uprobetracer.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;user return probes&lt;/a&gt; on applications that can move the stack will cause the applications to crash. There are many different ways to accomplish the same thing in eBPF and the right approach will change over time, depending on your growing feature set.&lt;/p&gt;&#xA;&lt;h4 id=&#34;users-care-about-ebpf-permissions&#34;&gt;Users care about eBPF permissions&lt;/h4&gt;&#xA;&lt;p&gt;eBPF has a bad reputation in certain circles because of the overall perception that it requires super user privileges, privileged containers, or the equivalent of system administrator access. This hasn’t been true for a while; however, sometimes perceptions are difficult to change.&lt;/p&gt;&#xA;&lt;p&gt;While building eBPF tools, it’s easy to simply run everything as a privileged container or with super user privileges. However, a lot of users have an issue with privileged containers in production, and rightfully so — it’s a security risk.&lt;/p&gt;&#xA;&lt;p&gt;We had to do a lot of work to structure our code and features in a way that we always ask for minimal permissions, and gracefully degrade the functionality if certain permissions are not given to Beyla.&lt;/p&gt;&#xA;&lt;h2 id=&#34;looking-ahead-whats-next-for-beyla&#34;&gt;Looking ahead: what’s next for Beyla&lt;/h2&gt;&#xA;&lt;p&gt;We are proud of the community we’ve built over the last year and have big plans for the future. Here are a few things we&amp;rsquo;re already working on.&lt;/p&gt;&#xA;&lt;h3 id=&#34;leveraging-the-opentelemetry-ebpf-profiler&#34;&gt;Leveraging the OpenTelemetry eBPF Profiler&lt;/h3&gt;&#xA;&lt;p&gt;We’re thrilled to see the incredible progress made on the &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-ebpf-profiler&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry eBPF profiler&lt;/a&gt;. This new tool is the result of a collaborative effort across many contributors and represents a significant step towards establishing profiling as a &lt;a href=&#34;https://opentelemetry.io/blog/2024/profiling/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;core OpenTelemetry signal&lt;/a&gt;. It lays a strong foundation for integrating traces and profiles, allowing us to provide deeper, code-level insights without requiring manual instrumentation.&lt;/p&gt;&#xA;&lt;p&gt;We believe that combining traces and profiles is the future of observability. Profiling delivers contextual stack traces that complement tracing, offering more precise insights than manually added spans ever could. After all, no matter how many trace points you add, there’s always one missing when it comes to pinpointing the root cause of a slow transaction.&lt;/p&gt;&#xA;&lt;h3 id=&#34;better-support-for-the-top-five-programming-languages&#34;&gt;Better support for the top five programming languages&lt;/h3&gt;&#xA;&lt;p&gt;Beyla’s strength has always been the ability to instrument applications written in any programming language. We don’t want to shift away from that focus. However, we do intend to add better language support for the &lt;a href=&#34;https://www.tiobe.com/tiobe-index/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;top five programming languages&lt;/a&gt; (Java, .NET, NodeJS, Python, and Go) for web service developers. This will allow us to further enrich the insights Beyla is able to provide out of the box. For example, we are hoping to be able to provide basic JVM runtime metrics, without any JVM agents or logging enabled.&lt;/p&gt;&#xA;&lt;p&gt;All in all, we’re really excited about how Grafana Beyla has evolved over the past year. Thank you to all of our community members who have contributed to the open source project — and we look forward to what’s to come!&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper w-100p &#34;&#xA;style=&#34;max-width: 567px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;https://grafana.com/observability-survey/?pg=blog&amp;amp;plcmt=body-txt&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/survey-promo/take-the-survey.png&#34;data-srcset=&#34;/media/blog/survey-promo/take-the-survey.png?w=320 320w, /media/blog/survey-promo/take-the-survey.png?w=550 550w, /media/blog/survey-promo/take-the-survey.png?w=750 750w, /media/blog/survey-promo/take-the-survey.png?w=900 900w, /media/blog/survey-promo/take-the-survey.png?w=1040 1040w, /media/blog/survey-promo/take-the-survey.png?w=1240 1240w, /media/blog/survey-promo/take-the-survey.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Link to the Observability Survey.&#34;&#xA;width=&#34;567&#34;&#xA;height=&#34;71&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/survey-promo/take-the-survey.png&#34;&#xA;alt=&#34;Link to the Observability Survey.&#34;&#xA;width=&#34;567&#34;&#xA;height=&#34;71&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;】&lt;p&gt;自 Grafana Labs 宣布 &lt;a href=&#34;/blog/2023/11/14/grafana-beyla-1.0-release-zero-code-instrumentation-for-application-telemetry-using-ebpf/&#34; 以来已经一年了&gt;Grafana Beyla 全面上市&lt;/a&gt;，我们的开源 OpenTelemetry 和 Prometheus eBPF 自动检测工具可帮助您轻松开始使用应用程序可观察性。&lt;/p&gt;&#xA;&lt;p&gt;作为 Beyla 维护者，我想花一点时间反思一下我们使用 &lt;a href=&#34;/oss/beyla-ebpf/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana Beyla&lt;/a 所取得的成就&gt; 从那时起，我们了解了如何在生产中支持 eBPF 工具，以及总的来说，整个过程是多么令人兴奋。&lt;/p&gt;&#xA;&lt;h2 id=&#34;looking-back-what-weve-accomplished-with-beyla&#34;&gt;回顾过去：我们与 Beyla 取得的成就&lt;/h2&gt;&#xA;&lt;h3 id=&#34;weve-grown-a-community&#34;&gt;我们已经发展了一个社区&lt;/h3&gt;&#xA;&lt;p&gt;从事这个项目几乎感觉就像在 Grafana Labs 中运营一家初创公司，但经过近两年的工作，我真的不认为 Beyla 是一个仅限 Grafana 的项目。正如我们今天所知，我们的外部贡献者数量是 Grafanista 的十倍，其中许多外部贡献对 Belya 产生了重大影响。例如，David Ashpole 贡献了运行 Beyla 所需的&lt;a href=&#34;https://github.com/grafana/beyla/pull/741&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;补丁&lt;/a&gt;具有最少的权限集； Khushi Jain 贡献了 &lt;a href=&#34;https://github.com/grafana/beyla/pull/642&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Beyla Helm 图表&lt;/a&gt;，这是迄今为止当今人们安装 Beyla 最常见的方式； Darek Barecki 为网络可观测性组件贡献了&lt;a href=&#34;https://github.com/grafana/beyla/pull/883&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;方向检测代码&lt;/a&gt; .&lt;/p&gt;&#xA;&lt;p&gt;如果我必须选择一个，我会说围绕 Beyla 建立一个开源社区是我们自 &lt;a href=&#34;/blog/2023/11/14/grafana-beyla-1.0-release-zero-code-instrumentation-for-application-telemetry-using-ebpf/#:~:text=Ask%20me%20anything.-, Grafana%20Beyla%201.0%20release% 3A%20zero%2Dcode%20instrumentation，针对%20application%20telemetry%20using%20eBPF&amp;text=Just%20two%20months%20after%20introducing，1.0%20at%20ObservabilityCON%202023%20today。&#34;&gt;1.0一年前发布&lt;/a&gt;。我们非常感谢社区成员带来了新的想法和观点，并报告了错误！&lt;/p&gt;&#xA;&lt;h3 id=&#34;weve-made-application-and-service-graph-metrics-easy&#34;&gt;我们让应用程序和服务图表指标变得简单&lt;/h3&gt;&#xA;&lt;p&gt;从第一天起，Beyla 就支持指标和跟踪，但指标才是 Beyla 真正出彩的地方。凭借我们的多进程支持和与语言无关的可观察性方法，Beyla 已成为轻松开始使用 &lt;a href=&#34;https://opentelemetry.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener 的首选工具noreferrer&#34;&gt;OpenTelemetry&lt;/a&gt;。从最终用户的角度来看，他们只需将 Beyla 添加到其集群中即可立即获得可见性详细了解他们的应用程序的情况。&lt;/p&gt;&#xA;&lt;p&gt;自从我们的 1.0 版本仅跟踪 HTTP 和 gRPC 协议以来，我们添加了对 HTTP2、SQL、Redis 和 Kafka 的支持，使 Beyla 成为更有用的可观察工具。我们开始跟踪网络和连接指标，这允许用户为服务图构建解决方案。我们努力选择正确的默认值，在易用性与生成过多指标之间取得平衡。&lt;/p&gt;&#xA;&lt;p&gt;经过所有这些努力，很高兴看到完整的 &lt;a href=&#34;/events/observabilitycon/2024/opentelemetry-grafana-alloy-beyla-demo-of-instrumentation-ingestion/&#34;&gt;OpenTelemetry 演示使用今年早些时候部署了单个 Beyla 守护进程&lt;/a&gt;。一个 Beyla 实例为用于实现 &lt;a href=&#34;https://opentelemetry.io/ecosystem/demo/&#34; target=&#34;_blank&#34; rel=&#34; 中的服务的所有不同技术和协议生成了服务级别应用程序指标noopener noreferrer&#34;&gt;OpenTelemetry 演示&lt;/a&gt;。我们通过剥离所有现有的检测代码和监控服务来测试 OpenTelemetry 演示，同时保持未检测的裸机应用程序相互通信。&lt;/p&gt;&#xA;&lt;p&gt;下面，我们展示了&lt;a href=&#34;/docs/grafana/latest/dashboards/build-dashboards/best-practices/#red-method&#34;&gt;RED（速率、错误和持续时间）指标&lt;/ a&gt; 以及直接从 Beyla 为 OpenTelemetry Demo Checkout 服务生成的服务图指标。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1999px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/grafana-beyla-one-year/beyla-app-olly.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/grafana-beyla-one-year/beyla-app-olly.png&#34;data-srcset=&#34;/media/blog/grafana-beyla-one-year/beyla-app-olly. png?w=320 320w，/media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=550 550w， /media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=750 750w, /media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=900 900w，/media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=1040 1040w，/media/blog/grafana-beyla-one-year/beyla-app-olly.png?w=1240 1240w，/media/blog/grafana-beyla-one-year/beyla-app-olly.png?w =1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;直接从 Beyla 的 OTel 演示结帐服务生成的 RED 指标的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“1003”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/grafana-beyla-one-year/beyla-app-olly.png&#34;&#xA;alt=&#34;直接从 Beyla 的 OTel Demo Checkout 服务生成的 RED 指标的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“1003”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;在这里，我们展示了&lt;a href=&#34;/docs/grafana-cloud/monitor-applications/asserts/troubleshoot-infra-apps/workbench/&#34;&gt;Asserts RCA（根本原因分析）工作台&lt;/a&gt;，使用由单个 Beyla 指令生成的网络和应用程序指标之间的数据关联记录实例。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1999px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/grafana-beyla-one-year/beyla-asserts.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/grafana-beyla-one-year/beyla-asserts.png&#34;data-srcset=&#34;/media/blog/grafana-beyla-one-year/beyla-asserts.png?w= 320 320w，/media/blog/grafana-beyla-one-year/beyla-asserts.png?w=550 550w， /media/blog/grafana-beyla-one-year/beyla-asserts.png?w=750 750w, /media/blog/grafana-beyla-one-year/beyla-asserts.png?w=900 900w, /media /blog/grafana-beyla-one-year/beyla-asserts.png?w=1040 1040w, /media/blog/grafana-beyla-one-year/beyla-asserts.png?w=1240 1240w，/media/blog/grafana-beyla-one-year/beyla-asserts.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Beyla 检测实例生成的 Asserts RCA Workbench 的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“1006”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src =“/media/blog/grafana-beyla-one-year/beyla-asserts.png”&#xA;alt=&#34;由 Beyla 检测实例生成的 Asserts RCA Workbench 的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“1006”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;h4 id=&#34;metrics-check-what-about-distributed-traces&#34;&gt;指标...检查。分布式跟踪怎么样？&lt;/h4&gt;&#xA;&lt;p&gt;虽然我们使指标变得简单，但我们的分布式跟踪支持仍然有限，这是一次有趣的客户支持体验。用户希望分布式跟踪与指标一样容易上手。为什么不呢？&lt;/p&gt;&#xA;&lt;p&gt;有许多 eBPF 怪癖使得写入用户内存变得困难，我们绝对需要能够写入内存以进行跟踪上下文传播。这是我在 KubeCon North America 2024 演讲的重点，“&lt;a href=&#34;https://co locatedeventsna2024.sched.com/event/9558b23bd7be09b47b60ecf8c7defd7c&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;所以你想写入内存与 eBPF？&lt;/a&gt;”话虽如此，我们已经做了很多创新，并且我们正在该领域进行研究，我们希望能够在即将发布的 2.0 版本中提供完整的通用分布式跟踪支持。大多数通用分布式跟踪的补丁已经在我们的代码库中，所以很快它们就会默认启用并得到完全支持。&lt;/p&gt;&#xA;&lt;h3 id=&#34;weve-learned-how-to-scale-and-deploy-ebpf-in-product&#34;&gt;我们已经了解了如何在生产中扩展和部署 eBPF&lt;/h3&gt;&#xA;&lt;h4 id=&#34;resource-utilization-matters-in-large-clusters&#34;&gt;大型集群中的资源利用率很重要&lt;/h4&gt;&#xA;&lt;p&gt;虽然我们的 1.0 版本有效，但在资源利用率方面并未完全优化。为了能够在 Grafana Labs 的生产环境中部署 Beyla，我们必须进行大量内存和处理优化。为每个检测的应用程序部署 eBPF 探针永远无法扩展，因此我们必须学习如何共享所有内容，从 eBPF 内存映射到o 实际的探针。&lt;/p&gt;&#xA;&lt;h4 id=&#34;ebpf-limitations-can-be-tricky&#34;&gt;eBPF 限制可能很棘手&lt;/h4&gt;&#xA;&lt;p&gt;有时，某些 eBPF 功能的局限性隐藏在难以找到的文档中，因此我们通过艰难的方式学到了一些东西 - 例如，&lt;a href=&#34;https://docs.kernel.org /trace/kprobes.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;内核返回探测&lt;/a&gt;是有限的并且不能依赖，或者设置&lt;a href=&#34;https://docs.kernel.org/trace/uprobetracer.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;可移动堆栈的应用程序上的用户返回探测&lt;/a&gt;将导致应用程序碰撞。在 eBPF 中完成同样的事情有很多不同的方法，正确的方法会随着时间的推移而改变，具体取决于您不断增长的功能集。&lt;/p&gt;&#xA;&lt;h4 id=&#34;users-care-about-ebpf-permissions&#34;&gt;用户关心 eBPF 权限&lt;/h4&gt;&#xA;&lt;p&gt;eBPF 在某些圈子里声誉不佳，因为人们普遍认为它需要超级用户权限、特权容器或相当于系统管理员访问权限。有一段时间，情况并非如此。然而，有时看法很难改变。&lt;/p&gt;&#xA;&lt;p&gt;在构建 eBPF 工具时，可以轻松地将所有内容作为特权容器或使用超级用户权限运行。然而，许多用户在生产中遇到特权容器的问题，这是理所当然的——这是一个安全风险。&lt;/p&gt;&#xA;&lt;p&gt;我们必须做大量的工作来构建我们的代码和功能，我们总是要求最小的权限，并且如果没有向 Beyla 授予某些权限，则可以优雅地降低功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;looking-ahead-whats-next-for-beyla&#34;&gt;展望未来：Beyla 的下一步发展&lt;/h2&gt;&#xA;&lt;p&gt;我们为去年建立的社区感到自豪，并对未来制定了宏伟的计划。以下是我们已经在做的一些事情。&lt;/p&gt;&#xA;&lt;h3 id=&#34;leveraging-the-opentelemetry-ebpf-profiler&#34;&gt;利用 OpenTelemetry eBPF Profiler&lt;/h3&gt;&#xA;&lt;p&gt;我们很高兴看到 &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-ebpf-profiler&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; 取得的令人难以置信的进展OpenTelemetry eBPF 分析器&lt;/a&gt;。这个新工具是许多贡献者共同努力的结果，代表着将分析建立为 &lt;a href=&#34;https://opentelemetry.io/blog/2024/profiling/&#34; target=&#34;_blank&#34; rel= 的重要一步。 &#34;noopener noreferrer&#34;&gt;核心 OpenTelemetry 信号&lt;/a&gt;。它为集成跟踪和配置文件奠定了坚实的基础，使我们能够提供更深入的代码级见解，而无需手动检测。&lt;/p&gt;&#xA;&lt;p&gt;我们相信，结合痕迹和配置文件是可观察性的未来。分析提供了补充跟踪的上下文堆栈跟踪，提供了比手动添加的跨度更精确的见解。毕竟，无论添加多少跟踪点，在查明事务缓慢的根本原因时总会缺少一个跟踪点。&lt;/p&gt;&#xA;&lt;h3 id=&#34;better-support-for-the-top- Five-programming-languages&#34;&gt;更好地支持前五种编程语言&lt;/h3&gt;&#xA;&lt;p&gt;Beyla 的优势始终在于能够检测以任何编程语言编写的应用程序。我们不想偏离这个焦点。不过，我们确实打算为&lt;a href=&#34;https://www.tiobe.com/tiobe-index/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;前五种编程语言&lt;/ a&gt;（Java、.NET、NodeJS、Python 和 Go），适用于 Web 服务开发人员。这将使我们能够进一步丰富 Beyla 能够提供的开箱即用的见解。例如，我们希望能够提供基本的 JVM 运行时指标，而无需启用任何 JVM 代理或日志记录。&lt;/p&gt;&#xA;&lt;p&gt;总而言之，我们对 Grafana Beyla 在过去一年中的发展感到非常兴奋。感谢所有为开源项目做出贡献的社区成员——我们期待未来的发展！&lt;/p&gt;&#xA;&lt;图&#xA;类=“图形包装器w-100p”&#xA;样式=“最大宽度：567px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;https://grafana.com/observability-survey/?pg=blog&amp;plcmt=body-txt&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/survey-promo/take-the-survey.png&#34;data-srcset=&#34;/media/blog/survey-promo/take-the-survey.png?w=320 320w, /媒体/博客/survey-promo/take-the-survey.png?w=550 550w, /media/blog/survey-promo/take-the-survey.png?w=750 750w, /media/blog/survey-promo/take-the-survey.png?w=900 900w, /media/blog/survey -promo/take-the-survey.png?w=1040 1040w, /media/blog/survey-promo/take-the-survey.png?w=1240 1240w, /media/blog/survey-promo/take-the-survey.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;可观测性调查的链接。&#34;&#xA;宽度=“567”&#xA;高度=“71”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src =“/media/blog/survey-promo/take-the-survey.png”&#xA;alt=&#34;可观测性调查的链接。&#34;&#xA;宽度=“567”&#xA;高度=“71”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;</description>
      <pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Behind the scenes of a major Grafana release: the journey to Grafana 11 and what’s next】Grafana 主要版本的幕后花絮：Grafana 11 之旅以及下一步发展</title>
      <link>https://grafana.com/blog/2024/11/15/behind-the-scenes-of-a-major-grafana-release-the-journey-to-grafana-11-and-whats-next/</link>
      <description>【&lt;p&gt;When we &lt;a href=&#34;/blog/2024/04/09/grafana-11-release-all-the-new-features/&#34;&gt;released Grafana 11&lt;/a&gt; earlier this year, we had three main goals in mind:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Make it easier to explore, visualize, and alert on your data&lt;/li&gt;&#xA;&lt;li&gt;Make it easier to manage Grafana at scale&lt;/li&gt;&#xA;&lt;li&gt;Make it easier to extend the power of Grafana via plugins and better plugin and app development tools&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;You may be sensing a theme here. And some of you — especially those who are just starting to explore all the new features in the latest major Grafana release — might be wondering how, exactly, we delivered on each of these goals.&lt;/p&gt;&#xA;&lt;p&gt;In episode 7 of “Grafana’s Big Tent” podcast, a team of Grafanistas answer that very question and more. This week, hosts Mat Ryer, Grafana Labs Engineering Director, and Tom Wilkie, Grafana Labs CTO, are joined by Mitch Seaman, Senior Product Director for Grafana, and Torkel Ödegaard, co-founder of Grafana Labs and the creator of Grafana.&lt;/p&gt;&#xA;&lt;p&gt;The group dives into the details of Grafana 11, covering everything from &lt;a href=&#34;/blog/2024/05/14/how-to-explore-metrics-without-promql-queries-in-grafana/&#34;&gt;Explore Metrics&lt;/a&gt; to the arrival of the much-anticipated &lt;a href=&#34;/blog/2024/04/09/grafana-11-release-all-the-new-features/#organize-grafana-dashboards-with-subfolders&#34;&gt;subfolders&lt;/a&gt; feature. They also offer a behind-the-scenes look at how the Grafana Labs team builds a pipeline of new Grafana features (hint: the community and hackathons play a big role), a preview of what’s in store for Grafana 12, and, importantly, their opinions on the Oasis reunion tour.&lt;/p&gt;&#xA;&lt;p&gt;In this blog, we share some of the highlights from the show. You can also check out the full podcast episode below.&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;180&#34; frameborder=&#34;no&#34; scrolling=&#34;no&#34; seamless=&#34;&#34; src=&#34;https://share.transistor.fm/e/57f6ed05&#34;&gt;&lt;/iframe&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;Note: The following are highlights from episode 7, season 2 of “Grafana’s Big Tent” podcast. The transcript below has been edited for length and clarity.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch Seaman&lt;/strong&gt;: Torkel, when &lt;a href=&#34;/blog/2023/12/05/the-story-of-grafana-documentary-celebrating-oss-community-and-innovation/&#34;&gt;you started Grafana&lt;/a&gt;, 10 and a bit years ago, did you think you&amp;rsquo;d be working on it 10 and a bit years later?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel Ödegaard&lt;/strong&gt;: No. It was like a hobby project that maybe would be somewhat useful in the team I was working in&amp;hellip; so I had no idea.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mat Ryer&lt;/strong&gt;: It&amp;rsquo;s a hobby project that&amp;rsquo;s got way out of hand.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: It is kind of fun, though, in the sense that my day-to-day isn&amp;rsquo;t radically different from the early days and in the sense that I still mostly code, look at PRs, and help teams with some tricky changes maybe. But yeah, it is still looking at UX challenges and UI things, and trying to make Grafana a little bit better every day.&lt;/p&gt;&#xA;&lt;h2 id=&#34;grafana-11-the-highlights&#34;&gt;Grafana 11: the highlights&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom Wilkie&lt;/strong&gt;: Anyway, enough about memory lane. What is new in Grafana 11, Mitch?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: Yeah, so at a high level, the things that we were trying to do in Grafana 11 were to make sure we helped newer users to monitor and troubleshoot more easily. And “newer” is a pretty broad term. This could actually mean newer, or it could be just users who are a little bit less patient. We&amp;rsquo;re sort of past the early adopter stage with Grafana, where you have a lot of tinkerers who are happy to sort of get into the weeds. And so we just wanted to iron out some of the rough edges. The biggest rough edge is learning PromQL and LogQL, and executing your first query.&lt;/p&gt;&#xA;&lt;p&gt;Then we improved managing Grafana as well — so, making improvements to auth and the way that you&amp;rsquo;d set up things like single sign-on. We also created a really nice tool to migrate from Grafana open source or Grafana Enterprise up to Grafana Cloud, which is great for a bunch of reasons, and free for most people.&lt;/p&gt;&#xA;&lt;p&gt;We always like to say &amp;ldquo;Whatever else is happening in the Grafana world, we are always working on new data sources and new visualizations.&amp;rdquo; So we had a bunch of new data sources, and some more panels and better features in panels.&lt;/p&gt;&#xA;&lt;p&gt;And then the big thing that happened, which we&amp;rsquo;re constantly working on, is making Grafana itself a lot more extensible, and sort of refactoring our backend to make it much easier to build applications that look and feel just like regular features in Grafana.&lt;/p&gt;&#xA;&lt;h3 id=&#34;ease-of-use-improvements-explore-metrics-streamlined-migrations-to-grafana-cloud-and-more&#34;&gt;Ease-of-use improvements: Explore Metrics, streamlined migrations to Grafana Cloud, and more&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: Let&amp;rsquo;s start with the first one you mentioned, the ease of use features. I think you&amp;rsquo;re referring to the new Explore features, right? Torkel, you actually built the first prototype for Explore Metrics, didn&amp;rsquo;t you?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: Yeah, so that was the feature that I was most excited about in Grafana 11, as well, is this Explore Metrics feature, which really tackles the “getting started” experience. But also, the thing I like is that it targets both new users, but also really experienced users, in that it kind of does a lot of work for you, and you don&amp;rsquo;t have to write your Prometheus query. You can look at a metric from all its possible dimensions, and break it down or group it by all its possible dimensions, without having to build a complex dashboard, add a bunch of group-by variables, or do a lot of work.&lt;/p&gt;&#xA;&lt;p&gt;So even if you&amp;rsquo;re an experienced PromQL user, you can actually get a lot of mileage out of this UI as a way to troubleshoot, and find out what kind of pod is causing a spike in a heavily aggregated graph.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: I can vividly remember when you were working on this, because you were sitting next to me in London at the time. And you were so excited about it.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: Yeah, most of it was done during a leadership offsite, where I didn&amp;rsquo;t pay much attention to what you and others in that room were saying, because I was just so into this and saw it bridging such a huge gap in terms getting to the end goal: what do you actually want to use when you&amp;rsquo;re troubleshooting? Like, being able to quickly go from a graph to seeing what&amp;rsquo;s actually causing a spike, and being able to do that without having to manually jump to Explore, modify the query, or build detailed, drill-down dashboards. Having Grafana do all of that for you was just… really magical.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: So I consider myself to be a PromQL expert, and even I find Explore Metrics super useful. You can take a histogram and get to the heatmap of that histogram in the new Explore Metrics so much quicker and easier than you can if you try and write the correct query, and get the right group-bys, and configure the panel yourself. I&amp;rsquo;ve actually found myself using it almost on a daily basis, even though I can do the PromQL myself.&lt;/p&gt;&#xA;&lt;p&gt;And so this was, January, I think, when you did the first prototype. And then we had a &lt;a href=&#34;/blog/2022/06/17/inside-grafana-labs-hackathons-how-they-work-and-what-projects-ended-up-on-the-product-roadmap/&#34;&gt;hackathon&lt;/a&gt;, and you&amp;rsquo;d taken the inspiration from Explore Metrics to build &lt;a href=&#34;/blog/2024/04/09/find-your-logs-data-with-explore-logs-no-logql-required/&#34;&gt;Explore Logs&lt;/a&gt;, right, Mat?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mat&lt;/strong&gt;: That&amp;rsquo;s it. So it was the same idea, looking at what they&amp;rsquo;ve done in Explore Metrics and this new way of looking at it. So Cyril Tovena [Senior Software Engineer at Grafana Labs] said to me, &amp;ldquo;What if we did the same thing as Explore Metrics, but for logs?” And it just worked out really well. It&amp;rsquo;s just the same idea transposed. And that one did win the hackathon. And then there was already a team that jumped on this, and did a fantastic job to get &lt;a href=&#34;/blog/2024/04/09/find-your-logs-data-with-explore-logs-no-logql-required/&#34;&gt;Explore Logs out for public preview&lt;/a&gt; at GrafanaCON.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: I think we&amp;rsquo;ve really kind of broken down a mental barrier in Grafana now, because this is also one of the first Grafana features that&amp;rsquo;s very data source-specific. This is an experience dedicated for Prometheus, dedicated for Loki, and &lt;a href=&#34;/blog/2024/09/24/queryless-metrics-logs-traces-profiles/&#34;&gt;now with Tempo and Pyroscope&lt;/a&gt;, as well. Torkel, am I right? We&amp;rsquo;ve not really done anything like that in the past, have we?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: No, no. I think that there have been some features that have had limited data source support, but not like a main feature where we thought &amp;ldquo;Let&amp;rsquo;s build it for Prometheus only. Let&amp;rsquo;s start there. Let&amp;rsquo;s really nail this problem. Let&amp;rsquo;s think about other data sources in the future, if ever&amp;hellip; But let&amp;rsquo;s just see where we get to if we only focus on one data source and one problem.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: Yeah. And it turns out we get pretty far. When you narrow down the space of challenges, you can build richer solutions.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: Yeah, and behind every Grafana user who&amp;rsquo;s trying to learn PromQL for the first time, there&amp;rsquo;s a team of site reliability engineers who have set up the observability tooling. Especially in a bigger company, you&amp;rsquo;ve got a core team — maybe it&amp;rsquo;s five or six people — who know something about observability and know something about operating our stack. And actually, for those of us working on Grafana, those are the people we talk to the most often, because they&amp;rsquo;re trying to offer a really good service to their users. And we want to make sure that we&amp;rsquo;re providing them with good tools as well.&lt;/p&gt;&#xA;&lt;p&gt;So the things that we focused on this time around had to do with ease of use. So we shipped a new UI for single sign-on.&lt;/p&gt;&#xA;&lt;p&gt;But I guess the thing that I was the most excited to present, and definitely the most nervous to demo, was the &lt;a href=&#34;/docs/grafana-cloud/account-management/migration-guide/#grafana-cloud-migration-assistant&#34;&gt;cloud migration app&lt;/a&gt;. This is something we hear about over and over again… and it turns out the migration process can be a bit of a barrier. So we started making a tool. The focus was to be able to press one button and migrate my entire Grafana instance into Granfana Cloud.&lt;/p&gt;&#xA;&lt;h3 id=&#34;subfolders-a-seemingly-subtle-but-mighty-feature&#34;&gt;Subfolders: a seemingly subtle, but mighty, feature&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: I think one of the most requested features in GitHub for Grafana was &lt;a href=&#34;/blog/2024/04/09/grafana-11-release-all-the-new-features/#organize-grafana-dashboards-with-subfolders&#34;&gt;subfolders&lt;/a&gt;, as well, wasn&amp;rsquo;t it?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: That&amp;rsquo;s true. You could call that a management feature, for sure, but it&amp;rsquo;s something that affects everyone. Obviously, it took a huge amount of work to make this feature happen, because folders, as it happened — Torkel, right? — were dashboards, or are dashboards?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: Well, our first iteration of it — we had an idea that they were dashboards, in the sense that you could create a better hierarchy there. So, an overview dashboard would actually be like a container, as well. We did sort of abandon that idea, but they still kind of lived at the same dashboard. We never truly refactored away from it, so they still lived in the dashboard table, which created all sorts of headaches later on.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: Yeah. So two years and thousands of hours later, you can now put folders in folders, which sounds subtle, but is very important. And features like that are surprisingly challenging to execute. Once they&amp;rsquo;re there, it&amp;rsquo;s obvious they always should have been.&lt;/p&gt;&#xA;&lt;h3 id=&#34;updates-to-data-visualizations&#34;&gt;Updates to data visualizations&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mat&lt;/strong&gt;: There&amp;rsquo;s sort of a theme around more “grown-up” features being needed, as more and more people start using Grafana. But there&amp;rsquo;s always a bunch of improvements to the “everyday” — meaning, the data visualizations — isn&amp;rsquo;t there?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: Yeah. That&amp;rsquo;s something that we always do — add new options to visualizations. But every new feature to a visualization needs to really prove itself. I can come in quite late in some PRs and say, &amp;ldquo;But is this really needed?&amp;rdquo; Because one thing that I’ve been worried about since the start of Grafana is feature creep.&lt;/p&gt;&#xA;&lt;p&gt;It’s always a hard thing to know which new option to pursue. And, especially if it&amp;rsquo;s a UI option, I ask if it’s really needed. But many times the answer is “yes,” because it solves a very broad problem that many users and customers have.&lt;/p&gt;&#xA;&lt;p&gt;So, the Canvas panel has &lt;a href=&#34;/blog/2024/04/09/grafana-11-release-all-the-new-features/#custom-visualizations-with-canvas-panel&#34;&gt;a new button feature&lt;/a&gt;. You can add buttons and actions, which is really cool. And the &lt;a href=&#34;/docs/grafana/latest/panels-visualizations/visualizations/xy-chart/&#34;&gt;XY chart&lt;/a&gt; is a charting/graphing panel that is much more flexible in terms of what types of data you visualize. It&amp;rsquo;s not just time series. You can have anything on the X and Y axis, and it&amp;rsquo;s geared towards non-time series graphs.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: I think those are the highlights. And I’ll note that whatever else is going on, there&amp;rsquo;s always this steady stream of teams in Grafana who are shipping and improving &lt;a href=&#34;/docs/grafana/latest/datasources/&#34;&gt;data sources&lt;/a&gt; and panels. These are the roots of the company. And it&amp;rsquo;s funny how much we talk a lot about the new stuff and the flashy stuff, but when it comes time to communicate a release, what the data visualization team is working on and what the data sources team is working on, is really the bread and butter.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-sparks-ideas-for-new-grafana-features&#34;&gt;What sparks ideas for new Grafana features?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mat&lt;/strong&gt;: So, where do the ideas come from? How does that happen? And how do you choose what&amp;rsquo;s important, and what&amp;rsquo;s going to make it in?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: The short answer is everywhere.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: Yeah, we collect feedback from GitHub, which is the most direct place. We look at how many thumbs-up a GitHub issue has, how many comments, etc. Obviously, we also get lots of feedback from customers that use Grafana through Grafana Cloud, and through Twitter. When we have conferences, we get lots of ideas from people that influence what we build. And also a lot internally. We are super heavy users of Grafana, and through our Hackathons, and teams just trying to solve their own problems and painpoints, we come up with a lot of good ideas.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: There were two features in particular in Grafana 11 that are really interesting because big customers requested them, and they ended up being really big in the community. So, Torkel, you were alluding to the button panel. We had a customer say, &amp;ldquo;Hey, we have an old IT monitoring tool that has a really handy button that allows us to start, stop, or restart the server.&amp;rdquo; We said, &amp;ldquo;That sounds really dangerous,&amp;rdquo; and they said, &amp;ldquo;Well, we really want it.&amp;rdquo; So we thought, what if in our most flexible panel — the canvas panel — we give you the option to create a button? You can use it sort of like Postman; you can hit an API, and we&amp;rsquo;ll give you even some basic auth, and things like that. And it turns out there&amp;rsquo;s something very powerful about being able to put an interactive button on a Grafana dashboard.&lt;/p&gt;&#xA;&lt;p&gt;And then cloud migration was another one. We were hearing about this from a lot of customers who wanted to migrate to Grafana Cloud. Especially in the early iterations, it&amp;rsquo;s a really useful tool for even a hobbyist who just wants to migrate over into the &lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;free tier of Grafana Cloud&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-we-deliver-new-features&#34;&gt;How we deliver new features&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: So there&amp;rsquo;s been a lot of changes in the way we build Grafana in the last year. What kind of things have we started doing differently at Grafana Labs?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: Well, the biggest thing is really how we ship software now to the cloud. We do that regularly, every week, every day, almost, depending on what we change — and have that be the way we build software. Like, okay, this has to work on Grafana Cloud first.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: Yeah, and then for open source releases, every two months we do a minor release that introduces new features, and then in the intervening months, we do a scheduled patch release that&amp;rsquo;s just bug fixes.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: And this means the quality of the software we&amp;rsquo;re releasing, the open source software — it means it&amp;rsquo;s been tested with our Grafana Cloud users beforehand, right? So it means we&amp;rsquo;re starting to move quicker, and we&amp;rsquo;re releasing higher-quality software. And as an engineer at Grafana Labs, you can discover issues with new features that you&amp;rsquo;ve built significantly quicker than waiting for a release and waiting for someone to upgrade, and then use the feature, and then report a bug.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: Exactly, yeah. There&amp;rsquo;s always been, internally, a little bit of a difference between some of the new apps that we&amp;rsquo;re building in Grafana Cloud and Grafana OSS, which was that Grafana OSS was stuck to this monthly, or every six weeks, release cycle. That made it really hard for us to get feedback and, most importantly, to test reliability before the software went out to a really broad audience.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: So what does a “major” release mean these days, when we&amp;rsquo;re releasing all these features into Grafana Cloud?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: Yeah, it sort of took the wind out of the sails of the &lt;a href=&#34;/events/grafanacon/2024/keynote-grafana-11/&#34;&gt;GrafanaCON keynote&lt;/a&gt; a little bit, because cloud users are saying, &amp;ldquo;I&amp;rsquo;ve had access to this feature for the last three or four weeks.&amp;rdquo; But it meant that the release itself was way more stable. We&amp;rsquo;re talking, like, cutting bugs by a significant margin, and just seeing faster upgrades as a result, as people gain more confidence.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: That is super cool. So how are we managing that kind of flow of changes in Grafana? We&amp;rsquo;re launching stuff into Grafana Cloud on a daily or weekly basis. When does that make it into the hands of our open source users and our Grafana Enterprise users?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: So, some of the specific dates and timings are in the details, but I&amp;rsquo;ll do my best. We have release channels in Grafana Cloud. So we have a fast channel, which upgrades roughly daily; we have the stable channel, which upgrades weekly; and then the slow channel, which upgrades monthly. And then Grafana open source and Enterprise releases on that sort of bimonthly cadence, at least for new features. So the releases are sort of cycling, and we&amp;rsquo;ll get features into, for example, the stable channel, I think that were from the past (again) week, roughly. But yeah, the minor releases will get software that has been running in Grafana Cloud for at least a week. That’s the the cliff-notes version.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-to-know-about-angular-deprecation&#34;&gt;What to know about Angular deprecation&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: So there&amp;rsquo;s one feature and one kind of inside-baseball thing we did in Grafana 11 that took seven years, I think, that no one&amp;rsquo;s mentioned yet. Torkel, do you know what I&amp;rsquo;m talking about?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: Is it Angular?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: Yeah, tell us about the &lt;a href=&#34;/blog/2024/03/11/removal-of-angularjs-support-in-grafana-what-you-need-to-know/&#34;&gt;Angular deprecation&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: Grafana, as we said earlier on, is soon 11 years old. And through that time, technologies have changed. So, in the early days we started with a JavaScript frontend framework called Angular 1. So there&amp;rsquo;s a new modern Angular that&amp;rsquo;s not the same library. This is a library that Google deprecated, and replaced with a new version of Angular that is completely different. So we started switching and rewriting Grafana to React, starting in 2018, and replaced component by component, and also started working on a new panel and plugin architecture based on React. It took a long time, because it’s like replacing all the parts of a car as it&amp;rsquo;s speeding down the track. And it also has to be compatible with all the car extensions that people put on their cars via Grafana plugins, which has been very challenging.&lt;/p&gt;&#xA;&lt;p&gt;We try really hard to not break existing setups, and existing plugins, and existing dashboards, because we want people to upgrade, get new features, and take advantage of new capabilities. So having a really strong focus on backward compatibility has made this process take a lot longer than it would have otherwise. But yeah, this journey is now finally at an end.&lt;/p&gt;&#xA;&lt;h2 id=&#34;whats-next&#34;&gt;What’s next?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: What does the immediate future hold for Grafana? What&amp;rsquo;s going to be in Grafana 12?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;: Now that we&amp;rsquo;re kind of wrapping up this new dashboard architecture and the migration to it, we at a point that I&amp;rsquo;m really excited about. We can explore impactful new dashboard features and changes, which we haven&amp;rsquo;t done in a long time, just because the old dashboard architecture was still too entangled in that old Angular way of working.&lt;/p&gt;&#xA;&lt;p&gt;So that&amp;rsquo;s kind of what the new &lt;a href=&#34;/blog/2023/09/12/grafana-scenes-is-generally-available-start-building-highly-interactive-apps-today/&#34;&gt;Scenes architecture&lt;/a&gt; does… and it makes it easier to add more dynamic features. One of the things that excites me there is making it easier to build more dynamic layouts of panels, maybe tabbed layouts, and more flexible positioning of panels that could make defining dashboards as code easier.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: For sure. We&amp;rsquo;re talking a lot internally about making Grafana easy to operate and extend in cloud, which of course means nice things, like speed and reliability in the codebase, but also, there are some cool opportunities that come out of it, like the ability to search for any resource in Grafana by a lot more attributes — so making search faster, more powerful, and a little bit more accessible.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;: You also alluded to a &lt;a href=&#34;https://github.com/orgs/grafana/projects/619/views/1?pane=info&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;data sources roadmap&lt;/a&gt;. Do you happen to know which ones are coming soon?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;: So, the data sources team in the background has made some improvements to the way that they ship and manage data sources, and that&amp;rsquo;s made it possible to ship a lot really quickly. So just listen to this list. These are data sources that have come out so far this year. And for reference, we usually put out four or five data sources. We&amp;rsquo;ve got PagerDuty, SurrealDB, DynamoDB, the Infinity plugin is supported, CosmosDB, Yugabyte, Catchpoint, Cloudflare, Adobe Analytics, CockroachDB, Netlify, Drone, Zendesk, and Atlassian Statuspage. We&amp;rsquo;re talking 15 data sources in the first half of the year. So there are a lot coming out.&lt;/p&gt;&#xA;&lt;p&gt;And yeah, up next, we got some nice ones. Basically, we&amp;rsquo;re getting to the end of the long tail of observability tools. We&amp;rsquo;re spending a lot of time covering databases, like direct integrations to databases, so you can visualize application data, and then we have some really interesting forays into developer tools. There&amp;rsquo;s probably even more stuff in the &lt;a href=&#34;https://github.com/orgs/grafana/projects/619/views/1?pane=info&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;public roadmap&lt;/a&gt;, but there&amp;rsquo;s a lot happening in data sources. It&amp;rsquo;s almost like a different podcast.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;“Grafana’s Big Tent” podcast wants to hear from you. If you have a great story to share, want to join the conversation, or have any feedback, please contact the Big Tent team at &lt;a href=&#34;/blog/2024/08/23/grafanas-big-tent-podcast-season-2-is-here/bigtent@grafana.com&#34;&gt;bigtent@grafana.com&lt;/a&gt;. You can also catch up on the first and second season of “Grafana’s Big Tent” on &lt;a href=&#34;https://podcasts.apple.com/us/podcast/grafanas-big-tent/id1616725129&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Apple Podcasts&lt;/a&gt; and &lt;a href=&#34;https://open.spotify.com/show/3beQvS8to0rYs1gxOnPrfD?si=bf046f54fe214615&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Spotify&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;当我们今年早些时候&lt;a href=&#34;/blog/2024/04/09/grafana-11-release-all-the-new-features/&#34;&gt;发布 Grafana 11&lt;/a&gt; 时，我们有三个主要心中的目标：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;让数据探索、可视化和警报变得更加轻松&lt;/li&gt;&#xA;&lt;li&gt;让大规模管理 Grafana 变得更加轻松&lt;/li&gt;&#xA;&lt;li&gt;通过插件以及更好的插件和应用开发工具更轻松地扩展 Grafana 的功能&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;您可能在这里感受到了一个主题。你们中的一些人——尤其是那些刚刚开始探索最新主要 Grafana 版本中的所有新功能的人——可能想知道我们到底是如何实现这些目标的。&lt;/p&gt;&#xA;&lt;p&gt;在“Grafana’s Big Tent”播客的第 7 集中，Grafanista 团队回答了这个问题以及更多问题。本周，主持人 Grafana Labs 工程总监 Mat Ryer 和 Grafana Labs 首席技术官 Tom Wilkie，Grafana 高级产品总监 Mitch Seaman 以及 Grafana Labs 联合创始人兼 Grafana 创始人 Torkel Ödegaard 也将加入。&lt;/ p&gt;&#xA;&lt;p&gt;该小组深入研究了 Grafana 11 的详细信息，涵盖了 &lt;a href=&#34;/blog/2024/05/14/how-to-explore-metrics-without-promql-queries-in-grafana/&#34;&gt; 的所有内容探索指标&lt;/a&gt;，迎接万众期待的&lt;a href=&#34;/blog/2024/04/09/grafana-11-release-all-the-new-features/#organize-grafana-dashboards-with-subfolders&#34;&gt;子文件夹&lt;/a&gt;功能。他们还提供了 Grafana Labs 团队如何构建新 Grafana 功能管道的幕后花絮（提示：社区和黑客马拉松发挥着重要作用），预览了 Grafana 12 的内容，而且重要的是，他们对绿洲重聚巡演的看法。&lt;/p&gt;&#xA;&lt;p&gt;在这篇博客中，我们分享了展会的一些亮点。您还可以查看下面的完整播客剧集。&lt;/p&gt;&#xA;&lt;iframe width =“100％”height =“180”frameborder =“否”滚动=“否”无缝=“”src =“https://share.transistor.fm/e/57f6ed05”&gt; &lt;/ iframe&gt;&#xA;&lt;块引用&gt;&#xA;&lt;p&gt;&lt;em&gt;注意：以下是“Grafana’s Big Tent”播客第二季第 7 集的精彩片段。为了长度和清晰度，下面的文字记录已经过编辑。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/块引用&gt;&#xA;&lt;p&gt;&lt;strong&gt;米奇·西曼&lt;/strong&gt;：托克尔，当&lt;a href=&#34;/blog/2023/12/05/the-story-of-grafana-documentary-celebating-oss-community-and-innovation/ &#34;&gt;您在 10 多年前创建了 Grafana&lt;/a&gt;，您认为 10 多年后您会继续致力于它吗？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel Ödegaard&lt;/strong&gt;：不。这就像一个业余爱好项目，可能对我工作的团队有点用……所以我不知道。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mat Ryer&lt;/strong&gt;：这是一个失控的爱好项目。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;：不过，这很有趣，因为我的日常生活与早期并没有根本不同，而且我仍然主要编码，看在 PR 上，也许可以帮助团队进行一些棘手的改变。但是，是的，它仍在关注 UX 挑战和 UI 问题，并努力让 Grafana 每天变得更好一点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;格拉法na-11-the-highlights&#34;&gt;Grafana 11：亮点&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom Wilkie&lt;/strong&gt;：无论如何，关于记忆巷已经足够了。 Grafana 11 有什么新功能，Mitch？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;：是的，所以从较高的层面来看，我们在 Grafana 11 中尝试做的事情是确保我们帮助新用户更轻松地进行监控和故障排除。 “更新”是一个相当广泛的术语。这实际上可能意味着更新，也可能只是用户的耐心稍差一些。我们已经过了 Grafana 的早期采用阶段，那里有很多修补匠很乐意涉足其中。所以我们只是想消除一些粗糙的边缘。最大的困难是学习 PromQL 和 LogQL，并执行您的第一个查询。&lt;/p&gt;&#xA;&lt;p&gt;然后，我们还改进了 Grafana 的管理 - 因此，改进了身份验证以及设置单点登录等内容的方式。我们还创建了一个非常好的工具，可以从 Grafana 开源或 Grafana Enterprise 迁移到 Grafana Cloud，它的好处有很多，而且对大多数人来说都是免费的。&lt;/p&gt;&#xA;&lt;p&gt;我们总是喜欢说“无论 Grafana 世界发生什么，我们始终致力于新的数据源和新的可视化。”因此，我们有了很多新的数据源、更多的面板以及面板中更好的功能。&lt;/p&gt;&#xA;&lt;p&gt;然后发生的一件大事，我们一直在努力，就是让 Grafana 本身更具可扩展性，并重构我们的后端，以便更容易地构建外观和感觉就像常规功能的应用程序在格拉法纳。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ease-of-use-improvements-explore-metrics-streamlined-migrations-to-grafana-cloud-and-more&#34;&gt;易用性改进：探索指标、简化到 Grafana Cloud 的迁移等&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：让我们从您提到的第一个功能开始，即易用性功能。我想您指的是新的“探索”功能，对吧？ Torkel，您实际上构建了 Explore Metrics 的第一个原型，不是吗？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;：是的，这也是 Grafana 11 中最令我兴奋的功能，也是“探索指标”功能，它真正解决了“入门”体验。而且，我喜欢的一点是它既针对新用户，也针对真正有经验的用户，因为它为您做了很多工作，而且您不必编写 Prometheus 查询。您可以从所有可能的维度查看指标，并按所有可能的维度将其分解或分组，而无需构建复杂的仪表板、添加一堆分组变量或做大量工作。&lt; /p&gt;&#xA;&lt;p&gt;因此，即使您是一位经验丰富的 PromQL 用户，您实际上也可以从该 UI 中获得很多帮助，将其作为故障排除的一种方式，并找出哪种 pod 导致了高度聚合的图表中的峰值。&lt; /p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：我清楚地记得你在做这个的时候，因为当时你在伦敦坐在我旁边。你对此感到非常兴奋。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;：是的，大部分工作都是在异地领导期间完成的，当时我并没有太注意你和那个房间里的其他人在说什么，因为我太喜欢这个了并看到它在实现最终目标方面弥合了如此巨大的差距：当您排除故障时，您实际上想使用什么？例如，能够快速从图表查看实际导致峰值的原因，并且无需手动跳转到“探索”、修改查询或构建详细的向下钻取仪表板即可做到这一点。让 Grafana 为您完成所有这些工作真是……真的很神奇。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：所以我认为自己是 PromQL 专家，甚至我也发现 Explore Metrics 非常有用。如果您尝试编写正确的查询、获取正确的分组依据并自行配置面板，您可以获取直方图并在新的“探索指标”中获取该直方图的热图，这比您更快、更容易。事实上，我发现自己几乎每天都在使用它，尽管我自己可以执行 PromQL。&lt;/p&gt;&#xA;&lt;p&gt;所以，我想，那是一月份，当你制作第一个原型时。然后我们有一个 &lt;a href=&#34;/blog/2022/06/17/inside-grafana-labs-hackathons-how-they-work-and-what-projects-ending-up-on-the-product-roadmap /&#34;&gt;黑客马拉松&lt;/a&gt;，您从探索指标中汲取灵感来构建&lt;a href=&#34;/blog/2024/04/09/find-your-logs-data-with-explore-logs-no-logql-required/&#34;&gt;探索日志&lt;/a&gt;，对吧，Mat？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;垫&lt;/strong&gt;：就是这样。所以这是同样的想法，看看他们在“探索指标”中所做的事情以及这种看待它的新方式。因此，Cyril Tovena [Grafana Labs 的高级软件工程师] 对我说：“如果我们做与 Explore Metrics 相同的事情，但只针对日志呢？”而且效果非常好。这只是同一个想法的转换。那个人确实赢得了黑客马拉松。然后已经有一个团队抓住了这个机会，并做了出色的工作来获得 &lt;a href=&#34;/blog/2024/04/09/find-your-logs-data-with-explore-logs-no-logql -required/&#34;&gt;在 GrafanaCON 上探索注销以进行公开预览&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：我认为我们现在确实打破了 Grafana 中的心理障碍，因为这也是第一个非常特定于数据源的 Grafana 功能之一。这是专门针对 Prometheus、Loki 的体验，&lt;a href=&#34;/blog/2024/09/24/queryless-metrics-logs-traces-profiles/&#34;&gt;现在使用 Tempo 和 Pyrscope&lt;/a&gt;，出色地。托克尔，我说得对吗？我们过去并没有真正做过这样的事情，不是吗？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;托克尔&lt;/strong&gt;：不，不。我认为有些功能的数据源支持有限，但不像我们认为“让我们仅为 Prometheus 构建它”的主要功能。让我们从这里开始。让我们真正解决这个问题问题。让我们考虑一下未来的其他数据源（如果有的话）……但让我们看看如果我们只关注一个数据源和一个问题，我们会得到什么结果。”&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;汤姆&lt;/strong&gt;：是的。事实证明我们已经走得很远了。当您缩小挑战范围时，您可以构建更丰富的解决方案。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;：是的，在每个首次尝试学习 PromQL 的 Grafana 用户背后，都有一个设置了可观察性工具的站点可靠性工程师团队。特别是在一家更大的公司中，你有一个核心团队 - 也许有五到六个人 - 他们了解可观察性并了解如何操作我们的堆栈。事实上，对于我们这些在 Grafana 工作的人来说，这些人是我们最常交谈的人，因为他们正在努力为用户提供真正优质的服务。我们希望确保为他们提供良好的工具。&lt;/p&gt;&#xA;&lt;p&gt;因此，我们这次关注的重点是易用性。因此，我们推出了用于单点登录的新 UI。&lt;/p&gt;&#xA;&lt;p&gt;但我想我最兴奋地展示的东西，而且绝对是最紧张的演示，是 &lt;a href=&#34;/docs/grafana-cloud/account-management/migration-guide/#grafana- cloud-migration-assistant&#34;&gt;云迁移应用&lt;/a&gt;。这是我们一次又一次听到的事情……事实证明，迁移过程可能有点障碍。所以我们开始制作一个工具。重点是能够按一个按钮将我的整个 Grafana 实例迁移到 Granfana Cloud。&lt;/p&gt;&#xA;&lt;h3 id=&#34;subfolders-a-seemingly-subtle-but-mighty-feature&#34;&gt;子文件夹：看似微妙但功能强大的功能&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：我认为 Grafana 的 GitHub 中最受欢迎的功能之一是 &lt;a href=&#34;/blog/2024/04/09/grafana-11-release-all-the-new -features/#organize-grafana-dashboards-with-subfolders&#34;&gt;子文件夹&lt;/a&gt;，也是如此，不是吗？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;米奇&lt;/strong&gt;：确实如此。当然，你可以将其称为管理功能，但它会影响每个人。显然，要实现这个功能需要做大量的工作，因为文件夹，正如它所发生的那样——Torkel，对吧？ — 是仪表板，还是仪表板？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;：嗯，我们的第一次迭代 - 我们认为它们是仪表板，从某种意义上说，您可以在那里创建更好的层次结构。因此，概览仪表板实际上也像一个容器。我们确实放弃了这个想法，但他们仍然生活在同一个仪表板上。我们从未真正对其进行重构，因此它们仍然存在于仪表板表中，这在后来造成了各种令人头痛的问题。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;米奇&lt;/strong&gt;：是的。因此，两年和数千小时后，您现在可以将文件夹放入文件夹中，这听起来很微妙，但非常重要。执行此类功能非常具有挑战性。一旦他们在这里，很明显他们一直应该如此。&lt;/p&gt;&#xA;&lt;h3 id=&#34;updates-to-data-visualizations&#34;&gt;数据可视化更新&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mat&lt;/strong&gt;：随着越来越多的人开始使用 Grafana，有一个主题围绕着需要更多“成熟”功能。但“日常”（即数据可视化）总有很多改进，不是吗？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;托克尔&lt;/strong&gt;：是的。这是我们一直在做的事情——为可视化添加新选项。但可视化的每一个新功能都需要真正证明自己。在某些 PR 中我可能会很晚才进来并说：“但这真的有必要吗？”因为自从 Grafana 启动以来我一直担心的一件事是功能蔓延。&lt;/p&gt;&#xA;&lt;p&gt;知道要追求哪种新选择总是一件很难的事情。而且，特别是如果它是一个 UI 选项，我会询问它是否真的需要。但很多时候答案是“是”，因为它解决了许多用户和客户所面临的非常广泛的问题。&lt;/p&gt;&#xA;&lt;p&gt;因此，Canvas 面板有 &lt;a href=&#34;/blog/2024/04/09/grafana-11-release-all-the-new-features/#custom-visualizations-with-canvas-panel&#34;&gt;新按钮功能&lt;/a&gt;。您可以添加按钮和操作，这真的很酷。 &lt;a href=&#34;/docs/grafana/latest/panels-visualizations/visualizations/xy-chart/&#34;&gt;XY 图表&lt;/a&gt; 是一个图表/图形面板，在数据类型方面更加灵活你想象一下。这不仅仅是时间序列。 X 轴和 Y 轴上可以有任何内容，并且它适合非时间序列图。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;：我认为这些是亮点。我要指出的是，无论发生什么，Grafana 总是有稳定的团队在交付和改进&lt;a href=&#34;/docs/grafana/latest/datasources/&#34;&gt;数据源&lt;/a&gt;和面板。这些是公司的根源。有趣的是，我们谈论了很多新东西和华而不实的东西，但是当需要传达版本时，数据可视化团队正在做什么以及数据源团队正在做什么才是真正的面包和黄油。&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-sparks-ideas-for-new-grafana-features&#34;&gt;是什么激发了 Grafana 新功能的创意？&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mat&lt;/strong&gt;：那么，这些想法从何而来？这是怎么发生的？你如何选择什么是重要的，以及什么将使它成为现实？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;米奇&lt;/strong&gt;：简短的答案无处不在。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;：是的，我们从 GitHub 收集反馈，这是最直接的地方。我们会查看 GitHub 问题有多少个点赞、有多少评论等。显然，我们还通过 Grafana Cloud 和 Twitter 从使用 Grafana 的客户那里获得了大量反馈。当我们召开会议时，我们会从影响我们构建的人们那里得到很多想法。内部也有很多。我们是 Grafana 的超级重度用户，通过我们的黑客马拉松，团队只是尝试o 解决自己的问题和痛点，我们想出了很多好主意。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;：Grafana 11 中有两个功能非常有趣，因为大客户要求它们，并且它们最终在社区中变得非常重要。所以，Torkel，你指的是按钮面板。我们有一位客户说：“嘿，我们有一个旧的 IT 监控工具，它有一个非常方便的按钮，可以让我们启动、停止或重新启动服务器。”我们说，“这听起来真的很危险，”他们说，“好吧，我们真的想要它。”所以我们想，如果在我们最灵活的面板（画布面板）中，我们为您提供创建按钮的选项怎么办？你可以像 Postman 一样使用它；你可以使用 API，我们甚至会给你一些基本的身份验证，诸如此类的东西。事实证明，能够在 Grafana 仪表板上放置交互式按钮是非常强大的。&lt;/p&gt;&#xA;&lt;p&gt;云迁移是另一回事。我们从许多想要迁移到 Grafana Cloud 的客户那里听说了这一点。特别是在早期迭代中，即使对于只想迁移到&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;plcmt=body-txt&#34;&gt;免费的爱好者来说，它也是一个非常有用的工具Grafana Cloud 层&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-we-deliver-new-features&#34;&gt;我们如何提供新功能&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：去年我们构建 Grafana 的方式发生了很多变化。我们在 Grafana Labs 开始做哪些不同的事情？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;：嗯，最重要的是我们现在如何将软件发送到云端。我们几乎每周、每天都会定期这样做，具体取决于我们所做的更改 - 并且这就是我们构建软件的方式。就像，好吧，这必须首先在 Grafana Cloud 上运行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;：是的，对于开源版本，每两个月我们都会发布一个引入新功能的小版本，然后在中间的几个月里，我们会发布一个计划的补丁版本，这只是错误修复。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：这意味着我们正在发布的软件（开源软件）的质量 - 这意味着它已经事先与我们的 Grafana Cloud 用户进行了测试，对吧？所以这意味着我们开始更快地行动，并且我们正在发布更高质量的软件。作为 Grafana Labs 的工程师，您可以比等待发布和等待某人升级更快地发现您构建的新功能的问题，然后使用该功能，然后报告错误。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;米奇&lt;/strong&gt;：没错，是的。在内部，我们在 Grafana Cloud 和 Grafana OSS 中构建的一些新应用程序之间始终存在一些差异，即 Grafana OSS 坚持每月或每六周的发布周期。这让我们很难获得反馈，而且，最重要的是，在软件面向真正广泛的受众之前测试可靠性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：那么，当我们将所有这些功能发布到 Grafana Cloud 中时，“主要”版本意味着什么？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;：是的，这有点让 &lt;a href=&#34;/events/grafanacon/2024/keynote-grafana-11/&#34;&gt;GrafanaCON 主题演讲失去了动力&lt;/ a&gt; 一点点，因为云用户说，“过去三四个星期我已经可以使用此功能了。”但这意味着版本本身更加稳定。我们说的是，大幅减少错误，并因此看到更快的升级，因为人们获得了更多信心。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;汤姆&lt;/strong&gt;：那太酷了。那么我们如何管理 Grafana 中的这种变化流呢？我们每天或每周都会向 Grafana Cloud 发布内容。它什么时候会落入我们的开源用户和 Grafana Enterprise 用户手中？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;米奇&lt;/strong&gt;：所以，一些具体的日期和时间安排已经很详细了，但我会尽力而为。我们在 Grafana Cloud 中有发布渠道。所以我们有一个快速通道，大约每天都会升级；我们有稳定的频道，每周升级；然后是慢速频道，每月升级一次。然后 Grafana 开源，企业版以每两个月一次的节奏发布，至少对于新功能来说是这样。因此，发布是一种循环，我们将把功能放入稳定频道等，我认为这些功能大约是过去（再次）一周的。但是，是的，次要版本将获得已在 Grafana Cloud 中运行至少一周的软件。这是悬崖笔记版本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-to-know-about-angular-deprecation&#34;&gt;有关 Angular 弃用的知识&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：所以我们在 Grafana 11 中做了一项功能和一种棒球内部的事情，我认为这花了七年的时间，但还没有人提到。 Torkel，你知道我在说什么吗？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;：它是有角度的吗？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：是的，请告诉我们有关 &lt;a href=&#34;/blog/2024/03/11/removal-of-angularjs-support-in-grafana-what-you-need- to-know/&#34;&gt;角度弃用&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;：正如我们之前所说，Grafana 很快就 11 岁了。在那段时间里，技术已经发生了变化。因此，早期我们从一个名为 Angular 1 的 JavaScript 前端框架开始。所以有一个新的现代 Angular，它不是同一个库。这是 Google 弃用的一个库，取而代之的是完全不同的新版本 Angular。因此，我们从 2018 年开始将 Grafana 切换并重写为 React，并逐个组件替换，并开始基于 React 开发新的面板和插件架构。花了很长时间，因为这就像更换汽车的所有零件一样，因为它是特殊的沿着轨道行驶。它还必须与人们通过 Grafana 插件安装在汽车上的所有汽车扩展兼容，这是非常具有挑战性的。&lt;/p&gt;&#xA;&lt;p&gt;我们非常努力地不破坏现有的设置、现有的插件和现有的仪表板，因为我们希望人们升级、获得新功能并利用新功能。因此，对向后兼容性的真正关注使得这个过程比其他情况花费的时间要长得多。但是，是的，这段旅程现在终于结束了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;whats-next&#34;&gt;下一步是什么？&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：Grafana 的近期前景如何？ Grafana 12 中将会有什么？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Torkel&lt;/strong&gt;：现在我们已经完成了这个新的仪表板架构以及向它的迁移，我们正处于一个令我非常兴奋的时刻。我们可以探索有影响力的新仪表板功能和更改，但我们已经很长时间没有这样做了，只是因为旧的仪表板架构仍然太纠结于旧的 Angular 工作方式。&lt;/p&gt;&#xA;&lt;p&gt;这就是新的&lt;a href=&#34;/blog/2023/09/12/grafana-scenes-is-generally-available-start-building-highly-interactive-apps-today/&#34;&gt;场景架构&lt;/a&gt; 确实……并且它使得添加更多动态功能变得更加容易。让我兴奋的事情之一是可以更轻松地构建更动态的面板布局（可能是选项卡式布局）以及更灵活的面板定位，从而使将仪表板定义为代码更容易。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;米奇&lt;/strong&gt;：当然。我们在内部讨论了很多关于让 Grafana 在云中易于操作和扩展的问题，这当然意味着好的事情，比如代码库的速度和可靠性，而且，它也带来了一些很酷的机会，比如能够通过更多属性来搜索 Grafana 中的任何资源 - 从而使搜索更快、更强大且更易于访问。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tom&lt;/strong&gt;：您还提到了&lt;a href=&#34;https://github.com/orgs/grafana/projects/619/views/1?pane=info&#34; target=&#34;_blank &#34; rel=&#34;noopener noreferrer&#34;&gt;数据源路线图&lt;/a&gt;。您知道哪些即将推出吗？&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mitch&lt;/strong&gt;：因此，后台的数据源团队对交付和管理数据源的方式进行了一些改进，这使得快速交付大量数据成为可能。所以只要听一下这个列表就可以了。这些是今年迄今为止发布的数据来源。作为参考，我们通常会提供四到五个数据源。我们支持 PagerDuty、SurrealDB、DynamoDB、Infinity 插件、CosmosDB、Yugabyte、Catchpoint、Cloudflare、Adobe Analytics、CockroachDB、Netlify、Drone、Zendesk 和 Atlassian Statuspage。我们谈论的是今年上半年的 15 个数据源。所以有很多出来。&lt;/p&gt;&#xA;&lt;p&gt;是的，接下来，我们有一些不错的。基本上，我们即将结束漫长的g 可观测性工具的尾部。我们花费了大量时间来研究数据库，例如与数据库的直接集成，以便您可以可视化应用程序数据，然后我们对开发人员工具进行了一些非常有趣的尝试。 &lt;a href=&#34;https://github.com/orgs/grafana/projects/619/views/1?pane=info&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;公共路线图中可能还有更多内容&lt;/a&gt;，但是数据源中发生了很多事情。这几乎就像一个不同的播客。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;“Grafana 的大帐篷”播客希望收到您的来信。如果您有精彩的故事要分享、想要加入对话或有任何反馈，请联系 Big Tent 团队：&lt;a href=&#34;/blog/2024/08/23/grafanas-big-tent-podcast-season -2-is-here/bigtent@grafana.com&#34;&gt;bigtent@grafana.com&lt;/a&gt;。您还可以在 &lt;a href=&#34;https://podcasts.apple.com/us/podcast/grafanas-big-tent/id1616725129&#34; target=&#34;_blank&#34; 上观看《Grafana&#39;s Big Tent》第一季和第二季rel=&#34;noopener noreferrer&#34;&gt;Apple 播客&lt;/a&gt; 和 &lt;a href=&#34;https://open.spotify.com/show/3beQvS8to0rYs1gxOnP​​rfD?si=bf046f54fe214615&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Spotify&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Metrics, logs, traces, and mayhem: introducing an observability adventure game powered by Grafana Alloy and OTel】指标、日志、痕迹和混乱：介绍一款由 Grafana Alloy 和 OTel 提供支持的可观察性冒险游戏</title>
      <link>https://grafana.com/blog/2024/11/20/metrics-logs-traces-and-mayhem-introducing-an-observability-adventure-game-powered-by-grafana-alloy-and-otel/</link>
      <description>【&lt;p&gt;&lt;em&gt;Ah, adventurer! Are you ready to embark on a perilous quest through the treacherous lands of observability?&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;As developer advocates here at Grafana Labs, our day job is to learn and teach the pillars of observability to our end users. We spend a lot of time thinking about how software engineers can best learn the basics. Sure, there is a huge amount of great content out there — blogs, videos, and documentation — but we wondered if there’s a way to make the learning experience a bit more interactive and fun.&lt;/p&gt;&#xA;&lt;p&gt;As it happens, we’re also both avid gamers. We tend to view work-related challenges as quests to embark on and monsters to slay. And in the gaming world, we thought observability would be like a hydra with four heads: metrics, logs, traces, and profiles.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p w-100p&#34;&#xA;style=&#34;max-width: 500px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link w-fit mx-auto d-flex flex-direction-column&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-hydra_resized2.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-hydra_resized2.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-hydra_resized2.png?w=320 320w, /media/blog/observability-game/otel-alloy-demo-hydra_resized2.png?w=550 550w, /media/blog/observability-game/otel-alloy-demo-hydra_resized2.png?w=750 750w, /media/blog/observability-game/otel-alloy-demo-hydra_resized2.png?w=900 900w, /media/blog/observability-game/otel-alloy-demo-hydra_resized2.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-demo-hydra_resized2.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-hydra_resized2.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;An image of a knight fighting a hydra.&#34;&#xA;width=&#34;307&#34;&#xA;height=&#34;307&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-hydra_resized2.png&#34;&#xA;alt=&#34;An image of a knight fighting a hydra.&#34;&#xA;width=&#34;307&#34;&#xA;height=&#34;307&#34;&#xA;class=&#34;w-100p&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;That’s when the lightbulb went off.&lt;/p&gt;&#xA;&lt;p&gt;Today, we’re excited to introduce Quest World, an interactive game we created using OpenTelemetry, Grafana Alloy, and the Grafana LGTM (&lt;a href=&#34;/oss/loki/&#34;&gt;Loki&lt;/a&gt; for logs,&lt;a href=&#34;/oss/grafana?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Grafana&lt;/a&gt; for visualization,&lt;a href=&#34;/oss/tempo/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Tempo&lt;/a&gt; for traces,&lt;a href=&#34;/oss/mimir/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Mimir&lt;/a&gt; for metrics) Stack that can help you and your team learn the basics of observability.&lt;/p&gt;&#xA;&lt;p&gt;Read on to learn how you can set up Quest World today and to explore some of the big architectural decisions we made around game structure, player actions, and incorporating the different observability signals.&lt;/p&gt;&#xA;&lt;p&gt;We’ll also be demoing the game at &lt;a href=&#34;/events/aws-reinvent/&#34;&gt;AWS re:Invent 2024&lt;/a&gt; this year! We hope you’ll come find us in the AWS Modern Applications &amp;amp; Open Source Zone during the following timeslots to check it out and score some extra swag:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tues., Dec. 3 from 1 - 2pm&lt;/li&gt;&#xA;&lt;li&gt;Thurs., Dec. 5 from 11am - 12pm&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;quest-world-an-interactive-observability-adventure&#34;&gt;Quest World: an interactive observability adventure&lt;/h2&gt;&#xA;&lt;p&gt;Quest World is a text-based adventure game with a twist: you have to use the full Grafana LGTM Stack to solve the quest to defeat the evil wizard.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p w-100p&#34;&#xA;style=&#34;max-width: 500px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link w-fit mx-auto d-flex flex-direction-column&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=320 320w, /media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=550 550w, /media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=750 750w, /media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=900 900w, /media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot from Quest World. &#34;&#xA;width=&#34;307&#34;&#xA;height=&#34;307&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png&#34;&#xA;alt=&#34;A screenshot from Quest World. &#34;&#xA;width=&#34;307&#34;&#xA;height=&#34;307&#34;&#xA;class=&#34;w-100p&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Without giving too much away, your adventure looks a little like this:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Visit a town&lt;/li&gt;&#xA;&lt;li&gt;Forge a sword: a metrics challenge&lt;/li&gt;&#xA;&lt;li&gt;Empower that sword: a logs challenge&lt;/li&gt;&#xA;&lt;li&gt;Defeat the wizard&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-mainpy-script.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-mainpy-script.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-mainpy-script.png?w=320 320w, /media/blog/observability-game/otel-alloy-mainpy-script.png?w=550 550w, /media/blog/observability-game/otel-alloy-mainpy-script.png?w=750 750w, /media/blog/observability-game/otel-alloy-mainpy-script.png?w=900 900w, /media/blog/observability-game/otel-alloy-mainpy-script.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-mainpy-script.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-mainpy-script.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of the Quest World text.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;765&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-mainpy-script.png&#34;&#xA;alt=&#34;A screenshot of the Quest World text.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;765&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;It may look simple at first glance, but take heed of your observability dashboard, adventurer! It is the secret to your success.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-dashboard.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-dashboard.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-dashboard.png?w=320 320w, /media/blog/observability-game/otel-alloy-demo-dashboard.png?w=550 550w, /media/blog/observability-game/otel-alloy-demo-dashboard.png?w=750 750w, /media/blog/observability-game/otel-alloy-demo-dashboard.png?w=900 900w, /media/blog/observability-game/otel-alloy-demo-dashboard.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-demo-dashboard.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-dashboard.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of a dashboard from Quest World. &#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;988&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-dashboard.png&#34;&#xA;alt=&#34;A screenshot of a dashboard from Quest World. &#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;988&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;&#xA;&lt;p&gt;Our goal was simple when creating the game: we wanted to provide at least two challenges that needed to be solved while learning the basics of that observability data type. Metrics, for example, help you understand trends and accelerate reaction times, while logs allow you to reflect on decisions made and perhaps find secret clues to mechanics not found within the terminal.&lt;/p&gt;&#xA;&lt;p&gt;The adventure is built on open standards and is highly extendable, so you can modify it to meet your learning (and teaching) needs. For instance, we recently just added traces to the adventure to generate a post-game leaderboard (more on this later in the blog).&lt;/p&gt;&#xA;&lt;h3 id=&#34;setup&#34;&gt;Setup&lt;/h3&gt;&#xA;&lt;p&gt;If you would like to try Quest World yourself, you can choose from two paths:&lt;/p&gt;&#xA;&lt;h4 id=&#34;path-1-online-sandbox&#34;&gt;Path 1: Online sandbox&lt;/h4&gt;&#xA;&lt;p&gt;We have created an online sandbox using Killercoda. This will spin up a self-contained environment online so you can play the game without worrying about dependencies:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://killercoda.com/grafana-labs/course/workshops/adventure&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;https://killercoda.com/grafana-labs/course/workshops/adventure&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Simply:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Follow the link&lt;/li&gt;&#xA;&lt;li&gt;Create a free Killercoda account&lt;/li&gt;&#xA;&lt;li&gt;Let the setup script run&lt;/li&gt;&#xA;&lt;li&gt;Follow the instructions in the left panel&lt;/li&gt;&#xA;&lt;li&gt;Click &lt;strong&gt;next&lt;/strong&gt; to see more instructions&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;path-2-run-the-adventure-locally&#34;&gt;Path 2: Run the adventure locally&lt;/h4&gt;&#xA;&lt;p&gt;The code is fully open source and available in this &lt;a href=&#34;https://github.com/grafana/adventure&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GitHub repo&lt;/a&gt;, so you can try it yourself and even expand the adventure.&lt;/p&gt;&#xA;&lt;p&gt;There are a couple of prerequisites to keep in mind:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Docker and Docker Compose (installed and up-to-date)&lt;/li&gt;&#xA;&lt;li&gt;Python 3.12 or later&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Follow the steps outlined in the &lt;a href=&#34;https://github.com/grafana/adventure/blob/main/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;README&lt;/a&gt; for setup.&lt;/p&gt;&#xA;&lt;h2 id=&#34;creating-the-adventure&#34;&gt;Creating the adventure&lt;/h2&gt;&#xA;&lt;p&gt;So, how did all of this come together? Actually, rather quickly once we planned out the architecture! Let&amp;rsquo;s take a look:&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1920px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-architecture.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-architecture.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-architecture.png?w=320 320w, /media/blog/observability-game/otel-alloy-demo-architecture.png?w=550 550w, /media/blog/observability-game/otel-alloy-demo-architecture.png?w=750 750w, /media/blog/observability-game/otel-alloy-demo-architecture.png?w=900 900w, /media/blog/observability-game/otel-alloy-demo-architecture.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-demo-architecture.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-architecture.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A diagram of the Quest World architecture. &#34;&#xA;width=&#34;1920&#34;&#xA;height=&#34;1080&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-architecture.png&#34;&#xA;alt=&#34;A diagram of the Quest World architecture. &#34;&#xA;width=&#34;1920&#34;&#xA;height=&#34;1080&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h3 id=&#34;adventurepy&#34;&gt;Adventure.py&lt;/h3&gt;&#xA;&lt;p&gt;This is where most of the mayhem happens. I should point out that &lt;strong&gt;adventure.py&lt;/strong&gt; actually represents &lt;strong&gt;main.py&lt;/strong&gt; and &lt;strong&gt;otel.py&lt;/strong&gt; in the repo. The code creates a text-based adventure game by defining a class AdventureGame that encapsulates all the game logic and state management. Here&amp;rsquo;s a breakdown of how the game is made:&lt;/p&gt;&#xA;&lt;h4 id=&#34;game-structure&#34;&gt;Game structure&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Locations and actions are defined in a dictionary, &lt;em&gt;&lt;strong&gt;self.locations&lt;/strong&gt;&lt;/em&gt;. Each location has a description, available actions, and optional prerequisites or effects that trigger specific game logic.&lt;/li&gt;&#xA;&lt;li&gt;The player navigates between locations, interacting with characters and items like swords and the blacksmith&amp;rsquo;s forge.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;player-actions&#34;&gt;Player actions&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Actions like &amp;ldquo;&lt;em&gt;request sword&lt;/em&gt;&amp;rdquo; or &amp;ldquo;&lt;em&gt;heat forge&lt;/em&gt;&amp;rdquo; are tied to specific effects implemented as methods (e.g., request_sword, heat_forge).&lt;/li&gt;&#xA;&lt;li&gt;Each action checks conditions (pre-requisites) and modifies game state variables like &lt;em&gt;&lt;strong&gt;self.heat&lt;/strong&gt;&lt;/em&gt;, &lt;em&gt;&lt;strong&gt;self.has_sword&lt;/strong&gt;&lt;/em&gt;, or &lt;em&gt;&lt;strong&gt;self.blacksmith_burned_down&lt;/strong&gt;&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;branching-gameplay&#34;&gt;Branching gameplay&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The storyline evolves based on player choices, tracked by state variables (e.g., self.quest_accepted, self.has_holy_sword).&lt;/li&gt;&#xA;&lt;li&gt;Decisions have consequences, like forging an evil or holy sword or influencing the outcome of interactions with the priest, wizard, or quest giver.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This is all tied together in a basic loop that displays the current location and available actions, and processes player commands.&lt;/p&gt;&#xA;&lt;p&gt;Okay, so, where does OpenTelemetry come into all this?&lt;/p&gt;&#xA;&lt;p&gt;We decided to implement each telemetry type using the OTel SDK because it allowed us to unify the implementation of each of our telemetry signals (essentially, each hydra head comes from the same body). It also allowed us to customize a lot of these signals so we could add our fun adventure game log.&lt;/p&gt;&#xA;&lt;p&gt;Here’s how it all works:&lt;/p&gt;&#xA;&lt;h4 id=&#34;metrics&#34;&gt;Metrics&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;Definition&lt;/strong&gt;: Metrics track numerical data like the forge&#39;s heat level and the number of swords forged.&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;Implementation:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CustomMetrics is used to define a meter that creates observable gauges.&lt;/li&gt;&#xA;&lt;li&gt;Metrics include:&lt;/li&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;forge_heat: Tracks the heat level of the blacksmith&#39;s forge.&lt;/li&gt;&#xA;&lt;li&gt;swords: Tracks the total number of swords forged.&lt;/li&gt;&#xA;&lt;li&gt;holy_sword and evil_sword: Monitor the status of enchanted swords.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;li&gt;Gauges use callback functions like observe_forge_heat to return dynamic values based on the game state.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;logs&#34;&gt;Logs&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;Definition&lt;/strong&gt;: Logs capture textual information about events and player actions, categorized by severity (INFO, WARNING, ERROR, CRITICAL).&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;Implementation:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CustomLogFW sets up logging for the game.&lt;/li&gt;&#xA;&lt;li&gt;Logging messages are distributed throughout the code to capture:&lt;/li&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Player actions (e.g., heating the forge or requesting a sword).&lt;/li&gt;&#xA;&lt;li&gt;Significant events like burning down the blacksmith or crafting an enchanted sword.&lt;/li&gt;&#xA;&lt;li&gt;Warnings or errors when the player makes poor decisions, such as overheating the forge or obtaining a cursed sword.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;traces&#34;&gt;Traces&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;Definition&lt;/strong&gt;: Traces track the flow of actions taken by the player, capturing contextual metadata for each interaction.&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;Implementation:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CustomTracer sets up tracing using OpenTelemetry.&lt;/li&gt;&#xA;&lt;li&gt;A root span tracks the player&#39;s entire journey, while child spans are created for individual actions (e.g., &#34;action: request sword&#34;).&lt;/li&gt;&#xA;&lt;li&gt;Spans include attributes like the player&#39;s name and current location for additional context.&lt;/li&gt;&#xA;&lt;li&gt;Events are added to spans for significant milestones (e.g., forging a sword or killing the wizard).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;As you can see, three of our four observability hydra heads play a pivotal imaginary role within the game, while also staying true to their real-world counterparts. The next question is where do all of these telemetry signals go?&lt;/p&gt;&#xA;&lt;h3 id=&#34;grafana-alloy&#34;&gt;Grafana Alloy&lt;/h3&gt;&#xA;&lt;p&gt;The answer is anywhere you like if it&amp;rsquo;s OpenTelemetry-compatible. Realistically, you will be sending it to some form of &lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OTel Collector&lt;/a&gt; for buffering and potentially further processing. We opted to use &lt;a href=&#34;/docs/alloy/latest/&#34;&gt;Grafana Alloy&lt;/a&gt;, a vendor-neutral distribution of the OTel Collector, because it has a couple features that make it a great teaching tool.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1200px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=320 320w, /media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=550 550w, /media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=750 750w, /media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=900 900w, /media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of a character in Quest World.&#34;&#xA;width=&#34;1200&#34;&#xA;height=&#34;630&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png&#34;&#xA;alt=&#34;A screenshot of a character in Quest World.&#34;&#xA;width=&#34;1200&#34;&#xA;height=&#34;630&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h4 id=&#34;integrated-ui&#34;&gt;Integrated UI&lt;/h4&gt;&#xA;&lt;p&gt;Like Prometheus, Grafana Alloy comes with an integrated UI, so you can visually understand the configuration you are deploying and the flow of your data. Check out this relationship graph:&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-integrated-ui.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-integrated-ui.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-integrated-ui.png?w=320 320w, /media/blog/observability-game/otel-alloy-integrated-ui.png?w=550 550w, /media/blog/observability-game/otel-alloy-integrated-ui.png?w=750 750w, /media/blog/observability-game/otel-alloy-integrated-ui.png?w=900 900w, /media/blog/observability-game/otel-alloy-integrated-ui.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-integrated-ui.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-integrated-ui.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of the Grafana Alloy integrated UI.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;1293&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-integrated-ui.png&#34;&#xA;alt=&#34;A screenshot of the Grafana Alloy integrated UI.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;1293&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;You can also understand component configuration settings and whether each stage of your pipeline is healthy.&lt;/p&gt;&#xA;&lt;h4 id=&#34;live-debugging&#34;&gt;Live debugging&lt;/h4&gt;&#xA;&lt;p&gt;Live debugging is another, slightly more experimental feature that is great for teaching. This lets you see a live feed of your telemetry data as it is being processed through Alloy.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-live-debugging.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-live-debugging.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-live-debugging.png?w=320 320w, /media/blog/observability-game/otel-alloy-live-debugging.png?w=550 550w, /media/blog/observability-game/otel-alloy-live-debugging.png?w=750 750w, /media/blog/observability-game/otel-alloy-live-debugging.png?w=900 900w, /media/blog/observability-game/otel-alloy-live-debugging.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-live-debugging.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-live-debugging.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of the live debugging feature.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;664&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-live-debugging.png&#34;&#xA;alt=&#34;A screenshot of the live debugging feature.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;664&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;telemetry-storage&#34;&gt;Telemetry storage&lt;/h2&gt;&#xA;&lt;p&gt;Quest World uses three storage backends: Prometheus (metrics), &lt;a href=&#34;/oss/loki/&#34;&gt;Grafana Loki&lt;/a&gt; (logs), and &lt;a href=&#34;/oss/tempo/&#34;&gt;Grafana Tempo&lt;/a&gt; (traces). All three databases share one key feature: they have a fully compliant native OTel endpoint. This allows us to write OTel format data (OTLP) directly to our storage backends of choice and let them handle the rest.&lt;/p&gt;&#xA;&lt;p&gt;The best part about this is it lets us do some pretty powerful analysis when we reach our observability frontend, Grafana, since all signals share the same attributes.&lt;/p&gt;&#xA;&lt;p&gt;All three databases are running in &lt;a href=&#34;/docs/loki/latest/get-started/deployment-modes/#monolithic-mode&#34;&gt;monolithic mode&lt;/a&gt;, and you can find the docker-compose deployment file &lt;a href=&#34;https://github.com/grafana/adventure/blob/main/docker-compose.yml&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;here&lt;/a&gt;. Also, here is a reference table containing all config files:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;Prometheus&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;a href=&#34;https://github.com/grafana/adventure/blob/main/prometheus.yml&#34;&gt;https://github.com/grafana/adventure/blob/main/prometheus.yml&lt;/a&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;Loki&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;a href=&#34;https://github.com/grafana/adventure/blob/main/loki-config.yaml&#34;&gt;https://github.com/grafana/adventure/blob/main/loki-config.yaml&lt;/a&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;Tempo&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;a href=&#34;https://github.com/grafana/adventure/blob/main/tempo.yaml&#34;&gt;https://github.com/grafana/adventure/blob/main/tempo.yaml&lt;/a&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;grafana&#34;&gt;Grafana&lt;/h2&gt;&#xA;&lt;p&gt;Of course, our adventure would not be complete without Grafana, which acts as our primary game interface (other than the text adventure itself).&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p w-100p&#34;&#xA;style=&#34;max-width: 500px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link w-fit mx-auto d-flex flex-direction-column&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=320 320w, /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=550 550w, /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=750 750w, /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=900 900w, /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;An altered Grafana logo. &#34;&#xA;width=&#34;242&#34;&#xA;height=&#34;256&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png&#34;&#xA;alt=&#34;An altered Grafana logo. &#34;&#xA;width=&#34;242&#34;&#xA;height=&#34;256&#34;&#xA;class=&#34;w-100p&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Grafana acts as our:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Quest Log: Notifies the user of events triggered throughout their adventure.&lt;/li&gt;&#xA;&lt;li&gt;Forge Monitor: Extremely useful for forging your own sword (wink, wink, nudge, nudge).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can either use our &lt;a href=&#34;/blog/2024/09/24/queryless-metrics-logs-traces-profiles/&#34;&gt;Explore Apps&lt;/a&gt; for metrics, logs, and traces, or use the included dashboard.&lt;/p&gt;&#xA;&lt;p&gt;Grafana also serves another role after a user has completed a play-through: it acts as a scoreboard using our traces visualization panel.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-leader-board.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-leader-board.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-leader-board.png?w=320 320w, /media/blog/observability-game/otel-alloy-leader-board.png?w=550 550w, /media/blog/observability-game/otel-alloy-leader-board.png?w=750 750w, /media/blog/observability-game/otel-alloy-leader-board.png?w=900 900w, /media/blog/observability-game/otel-alloy-leader-board.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-leader-board.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-leader-board.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of the leader board.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;541&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-leader-board.png&#34;&#xA;alt=&#34;A screenshot of the leader board.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;541&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;If I have lost you, let me explain. The scoreboard is based on how quickly you complete the game. Each stage takes a certain amount of time to complete. We treat each play-through as a single trace, and each step the user takes as a span.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-traces.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-traces.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-traces.png?w=320 320w, /media/blog/observability-game/otel-alloy-traces.png?w=550 550w, /media/blog/observability-game/otel-alloy-traces.png?w=750 750w, /media/blog/observability-game/otel-alloy-traces.png?w=900 900w, /media/blog/observability-game/otel-alloy-traces.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-traces.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-traces.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of traces.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;948&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-traces.png&#34;&#xA;alt=&#34;A screenshot of traces.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;948&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;It also meant we could leave some neat metadata such as Span Events throughout so you can look back on your adventure and understand the implications of the choices you made.&lt;/p&gt;&#xA;&lt;h2 id=&#34;one-last-hydra-head-to-slay&#34;&gt;One last hydra head to slay!&lt;/h2&gt;&#xA;&lt;p&gt;You may have noticed that we haven’t covered continuous profiling yet as part of this observability adventure. No magic or trickery here – we are just still figuring out the best way to represent profiles in the game.&lt;/p&gt;&#xA;&lt;p&gt;Our current thought is to maybe make profiles a mechanic for the “final boss” fight against the wizard. During this stage of the game, users have three lives and a couple of spell options. Certain spells could require more system resources, especially if they are used one after the other, which would leave you vulnerable to the wizard. This is where profiles could come in.&lt;/p&gt;&#xA;&lt;p&gt;If you have any ideas, we would love to hear from you! Please feel free to open issues or PRs to explain how you would incorporate continuous profiles.&lt;/p&gt;&#xA;&lt;h2 id=&#34;did-someone-say-swag-easter-egg&#34;&gt;Did someone say &amp;lsquo;swag Easter egg&amp;rsquo;!?&lt;/h2&gt;&#xA;&lt;p&gt;Would any retro adventure game be complete without an Easter egg hidden somewhere in the game?&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p w-100p&#34;&#xA;style=&#34;max-width: 500px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link w-fit mx-auto d-flex flex-direction-column&#34;&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=320 320w, /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=550 550w, /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=750 750w, /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=900 900w, /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of an egg.&#34;&#xA;width=&#34;150&#34;&#xA;height=&#34;150&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png&#34;&#xA;alt=&#34;A screenshot of an egg.&#34;&#xA;width=&#34;150&#34;&#xA;height=&#34;150&#34;&#xA;class=&#34;w-100p&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;We are giving away swag to the first 10 players who find the secret Easter egg (you’ll know it when you see it). Just send the secret code to either of us via our &lt;a href=&#34;https://slack.grafana.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;community Slack&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-end-of-our-story-for-now&#34;&gt;The end of our story… for now&lt;/h2&gt;&#xA;&lt;p&gt;So, brave adventurer, we come to the end of our story for now. We hope you have as much fun playing Quest World as we did building it. All great stories start from somewhere, and we hope to see the adventure game expand with new ideas and PRs from our awesome community. We want to treat the project like the &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-demo&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OTel Demo&lt;/a&gt;, so feel free to fork it, change it, and add your spin.&lt;/p&gt;&#xA;&lt;p&gt;Lastly, just a reminder that we will be demoing the game at &lt;a href=&#34;/events/aws-reinvent/&#34;&gt;AWS re:Invent&lt;/a&gt;. Come visit us at the AWS Modern Applications and Open Source Zone during the following timeslots to try your hand at this observability adventure:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tues., Dec. 3 from 1 - 2pm&lt;/li&gt;&#xA;&lt;li&gt;Thurs., Dec. 5 from 11am - 12pm&lt;/li&gt;&#xA;&lt;/ul&gt;】&lt;p&gt;&lt;em&gt;啊，冒险家！你准备好在危险的可观察之地开始危险的探索了吗？&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;作为 Grafana Labs 的开发者倡导者，我们的日常工作是向最终用户学习和教授可观察性的支柱。我们花了很多时间思考软件工程师如何才能最好地学习基础知识。当然，有大量精彩的内容——博客、视频和文档——但我们想知道是否有一种方法可以让学习体验更具互动性和乐趣。&lt;/p&gt;&#xA;&lt;p&gt;碰巧，我们都是狂热的游戏玩家。我们倾向于将与工作相关的挑战视为要开始的任务和要杀死的怪物。在游戏世界中，我们认为可观察性就像有四个头的九头蛇：指标、日志、跟踪和配置文件。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p w-100p”&#xA;样式=“最大宽度：500px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“lightbox-link w-fit mx-auto d-flex flex-direction-column”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-Hydra_resized2.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-Hydra_resized2.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-Hydra_resized2.png?w= 320 320w，/media/blog/observability-game/otel-alloy-demo-Hydra_resized2.png?w=550 550w、/media/blog/observability-game/otel-alloy-demo-Hydra_resized2.png?w=750 750w、/media/blog/observability-game/otel-alloy-demo-Hydra_resized2.png?w=900 900w、 /media/blog/observability-game/otel-alloy-demo-Hydra_resized2.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-demo-Hydra_resized2.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-Hydra_resized2.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;骑士与九头蛇战斗的图像。&#34;&#xA;宽度=“307”&#xA;高度=“307”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src =“/media/blog/observability-game/otel-alloy-demo-Hydra_resized2.png”&#xA;alt=&#34;骑士与九头蛇战斗的图像。&#34;&#xA;宽度=“307”&#xA;高度=“307”&#xA;类=“w-100p”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;就在那时，灯泡熄灭了。&lt;/p&gt;&#xA;&lt;p&gt;今天，我们很高兴推出 Quest World，这是一款我们使用 OpenTelemetry、Grafana Alloy 和 Grafana LGTM（&lt;a href=&#34;/oss/loki/&#34;&gt;Loki&lt;/a&gt; 用于日志、 &lt;a href=&#34;/oss/grafana?pg=blog&amp;plcmt=body-txt&#34;&gt; Grafana&lt;/a&gt; 用于可视化，&lt;a href=&#34;/oss/tempo/?pg=blog&amp;plcmt=body-txt&#34;&gt; 轨迹速度&lt;/a&gt;，&lt;a href=&#34;/oss/mimir/?pg=blog&amp;plcmt=body-txt&#34;&gt; Mimir&lt;/a &gt; 对于指标）堆栈可以帮助您和您的团队学习可观察性的基础知识。&lt;/p&gt;&#xA;&lt;p&gt;请继续阅读，了解如何设置 Quest World，并探索我们围绕游戏结构、玩家行为以及整合不同的可观察性信号做出的一些重大架构决策。&lt;/p&gt;&#xA;&lt;p&gt;我们今年还将在 &lt;a href=&#34;/events/aws-reinvent/&#34;&gt;AWS re:Invent 2024&lt;/a&gt; 上演示该游戏！我们希望您能在以下时段来到 AWS 现代应用程序和开源专区来查看我们的内容并获得一些额外的奖励：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12 月 3 日星期二下午 1 点至 2 点&lt;/li&gt;&#xA;&lt;li&gt;12 月 5 日星期四上午 11 点至中午 12 点&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;quest-world-an-interactive-observability-adventure&#34;&gt;Quest World：交互式可观察性冒险&lt;/h2&gt;&#xA;&lt;p&gt;Quest World 是一款基于文本的冒险游戏，但有一点不同：你必须使用完整的 Grafana LGTM Stack 来解决击败邪恶巫师的任务。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p w-100p”&#xA;样式=“最大宽度：500px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“lightbox-link w-fit mx-auto d-flex flex-direction-column”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w= 320 320w，/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=550 550w、/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=750 750w、/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=900 900w、 /media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-questworld-launch_resized2.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;任务世界的屏幕截图。&#34;&#xA;宽度=“307”&#xA;高度=“307”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-questworld-launch_resized2.png&#34;&#xA;alt=&#34;任务世界的屏幕截图。&#34;&#xA;宽度=“307”&#xA;高度=“307”&#xA;类=“w-100p”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;在不透露太多内容的情况下，你的冒险看起来有点像这样：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;参观城镇&lt;/li&gt;&#xA;&lt;li&gt;铸剑：指标挑战&lt;/li&gt;&#xA;&lt;li&gt;赋予这把剑力量：日志挑战&lt;/li&gt;&#xA;&lt;li&gt;击败巫师&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1999px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-mainpy-script.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-mainpy-script.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-mainpy-script.png?w= 320 320w，/media/blog/observability-game/otel-alloy-mainpy-script.png?w=550 550w， /media/blog/observability-game/otel-alloy-mainpy-script.png?w=750 750w, /media/blog/observability-game/otel-alloy-mainpy-script.png?w=900 900w, /media /blog/observability-game/otel-alloy-mainpy-script.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-mainpy-script.png?w=1240 1240w，/media/blog/observability-game/otel-alloy-mainpy-script.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;任务世界文本的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“765”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-mainpy-script.png&#34;&#xA;alt=&#34;任务世界文本的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“765”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;乍一看可能很简单，但请注意你的可观察性仪表板，冒险家！这是您成功的秘诀。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1999px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-dashboard.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-dashboard.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-dashboard.png?w= 320 320w，/media/blog/observability-game/otel-alloy-demo-dashboard.png?w=550 550w， /media/blog/observability-game/otel-alloy-demo-dashboard.png?w=750 750w, /media/blog/observability-game/otel-alloy-demo-dashboard.png?w=900 900w, /media /blog/observability-game/otel-alloy-demo-dashboard.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-demo-dashboard.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-dashboard.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Quest World 仪表板的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“988”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-dashboard.png&#34;&#xA;alt=&#34;Quest World 仪表板的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“988”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;h3 id=&#34;goal&#34;&gt;目标&lt;/h3&gt;&#xA;&lt;p&gt;我们在创建游戏时的目标很简单：我们希望提供至少两个需要解决的挑战，同时学习可观察性数据类型的基础知识。例如，指标可以帮助您了解趋势并加快反应时间，而日志可以让您反思所做的决策，并可能找到终端内未找到的机制的秘密线索。&lt;/p&gt;&#xA;&lt;p&gt;这款冒险游戏建立在开放标准之上，并且具有高度可扩展性，因此您可以对其进行修改以满足您的学习（和教学）需求。例如，我们最近刚刚向冒险添加了痕迹，以生成游戏后排行榜（稍后将在博客中详细介绍）。&lt;/p&gt;&#xA;&lt;h3 id=&#34;设置&#34;&gt;设置&lt;/h3&gt;&#xA;&lt;p&gt;如果您想亲自尝试 Quest World，您可以选择以下两条路径：&lt;/p&gt;&#xA;&lt;h4 id=&#34;path-1-online-sandbox&#34;&gt;路径 1：在线沙箱&lt;/h4&gt;&#xA;&lt;p&gt;我们使用 Killercoda 创建了一个在线沙箱。这将启动一个独立的在线环境，这样您就可以玩游戏而不必担心依赖关系：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://killercoda.com/grafana-labs/course/workshops/adventure&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;https://killercoda.com/grafana-labs/课程/研讨会/冒险&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;简单地说：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;佛允许链接&lt;/li&gt;&#xA;&lt;li&gt;创建免费的 Killercoda 帐户&lt;/li&gt;&#xA;&lt;li&gt;让安装脚本运行&lt;/li&gt;&#xA;&lt;li&gt;按照左侧面板中的说明进行操作&lt;/li&gt;&#xA;&lt;li&gt;点击&lt;strong&gt;下一步&lt;/strong&gt;查看更多说明&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;path-2-run-the-adventure-locally&#34;&gt;路径 2：在本地运行冒险&lt;/h4&gt;&#xA;&lt;p&gt;该代码是完全开源的，可以在此 &lt;a href=&#34;https://github.com/grafana/adventure&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GitHub 存储库&lt;/a&gt;中获取，因此你可以自己尝试，甚至扩展冒险。&lt;/p&gt;&#xA;&lt;p&gt;需要记住几个先决条件：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Docker 和 Docker Compose（已安装且最新）&lt;/li&gt;&#xA;&lt;li&gt;Python 3.12 或更高版本&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;按照&lt;a href=&#34;https://github.com/grafana/adventure/blob/main/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;README&lt;/a中概述的步骤操作&gt; 用于设置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;creating-the-adventure&#34;&gt;创造冒险&lt;/h2&gt;&#xA;&lt;p&gt;那么，这一切是如何结合在一起的呢？事实上，一旦我们规划好架构，就很快了！我们来看看：&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1920px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-architecture.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-architecture.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-architecture.png?w= 320 320w，/media/blog/observability-game/otel-alloy-demo-architecture.png?w=550 550w， /media/blog/observability-game/otel-alloy-demo-architecture.png?w=750 750w, /media/blog/observability-game/otel-alloy-demo-architecture.png?w=900 900w, /media /blog/observability-game/otel-alloy-demo-architecture.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-demo-architecture.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-architecture.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Quest World 架构图。&#34;&#xA;宽度=“1920”&#xA;高度=“1080”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-architecture.png&#34;&#xA;alt=&#34;Quest World 架构图。&#34;&#xA;宽度=“1920”&#xA;高度=“1080”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;h3 id=&#34;adventurepy&#34;&gt;冒险.py&lt;/h3&gt;&#xA;&lt;p&gt;这是大多数混乱发生的地方。我应该指出，&lt;strong&gt;adventure.py&lt;/strong&gt;实际上代表了存储库中的&lt;strong&gt;ma​​in.py&lt;/strong&gt;和&lt;strong&gt;otel.py&lt;/strong&gt;。该代码通过定义封装所有游戏逻辑和状态管理的 AdventureGame 类来创建基于文本的冒险游戏。以下是游戏制作过程的详细说明：&lt;/p&gt;&#xA;&lt;h4 id=&#34;game-struct&#34;&gt;游戏结构&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;位置和操作在字典中定义，&lt;em&gt;&lt;strong&gt;self.locations&lt;/strong&gt;&lt;/em&gt;。每个位置都有描述、可用操作以及触发特定 ga 的可选先决条件或效果我的逻辑。&lt;/li&gt;&#xA;&lt;li&gt;玩家在不同地点之间导航，与角色和物品（例如剑和铁匠铺）互动。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;player-actions&#34;&gt;玩家操作&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;诸如“请求剑”或“热锻造”之类的操作与作为方法实现的特定效果（例如 request_sword、heat_forge）相关联。&lt;/li&gt;&#xA;&lt;li&gt;每个操作都会检查条件（先决条件）并修改游戏状态变量，例如 &lt;em&gt;&lt;strong&gt;self.heat&lt;/strong&gt;&lt;/em&gt;、&lt;em&gt;&lt;strong&gt;self.has_sword&lt;/strong&gt;&lt; /em&gt;，或&lt;em&gt;&lt;strong&gt;self.blacksmith_burned_down&lt;/strong&gt;&lt;/em&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;branching-gameplay&#34;&gt;分支游戏&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;故事情节根据玩家的选择而演变，并通过状态变量（例如 self.quest_accepted、self.has_holy_sword）进行跟踪。&lt;/li&gt;&#xA;&lt;li&gt;决定会产生后果，例如锻造邪恶剑或圣剑，或影响与牧师、巫师或任务给予者互动的结果。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这一切都捆绑在一个基本循环中，该循环显示当前位置和可用操作，并处理玩家命令。&lt;/p&gt;&#xA;&lt;p&gt;好吧，那么，OpenTelemetry 是从哪里来的呢？&lt;/p&gt;&#xA;&lt;p&gt;我们决定使用 OTel SDK 实现每种遥测类型，因为它使我们能够统一每个遥测信号的实现（本质上，每个九头蛇头都来自同一个身体）。它还允许我们自定义许多这样的信号，以便我们可以添加有趣的冒险游戏日志。&lt;/p&gt;&#xA;&lt;p&gt;这就是它的工作原理：&lt;/p&gt;&#xA;&lt;h4 id=&#34;metrics&#34;&gt;指标&lt;/h4&gt;&#xA;&lt;表&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;定义&lt;/strong&gt;：指标跟踪数字数据，例如锻造厂的热度和锻造的剑数量。&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;实施：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CustomMetrics 用于定义创建可观察量规的仪表。&lt;/li&gt;&#xA;&lt;li&gt;指标包括：&lt;/li&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;forge_heat：跟踪铁匠锻造厂的热度。&lt;/li&gt;&#xA;&lt;li&gt;剑：跟踪锻造剑的总数。&lt;/li&gt;&#xA;&lt;li&gt;holy_sword和evil_sword：监控附魔剑的状态。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;li&gt;仪表使用observe_forge_heat等回调函数根据游戏状态返回动态值。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/表&gt;&#xA;&lt;h4 id=&#34;logs&#34;&gt;日志&lt;/h4&gt;&#xA;&lt;表&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;定义&lt;/strong&gt;：日志捕获有关事件和玩家操作的文本信息，按严重性分类（信息、警告、错误、严重）。&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;实施：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CustomLogFW 设置游戏日志记录。&lt;/li&gt;&#xA;&lt;li&gt;日志消息分布在整个代码中以捕获：&lt;/li&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;玩家的操作（例如，加热熔炉或索取剑）。&lt;/li&gt;&#xA;&lt;li&gt;重大事件，例如烧毁铁匠或制作魔法剑。&lt;/li&gt;&#xA;&lt;li&gt;当玩家做出错误决定时出现警告或错误，例如使熔炉过热或获得受诅咒的剑。&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/表&gt;&#xA;&lt;h4 id=&#34;traces&#34;&gt;痕迹&lt;/h4&gt;&#xA;&lt;表&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;定义&lt;/strong&gt;：痕迹跟踪玩家采取的操作流程，捕获每次交互的上下文元数据。&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;实施：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CustomTracer 使用 OpenTelemetry 设置跟踪。&lt;/li&gt;&#xA;&lt;li&gt;根跨度跟踪玩家的整个旅程，而子跨度是为单个操作创建的（例如“操作：请求剑”）。&lt;/li&gt;&#xA;&lt;li&gt;跨度包括玩家姓名和当前位置等属性，以提供更多上下文。&lt;/li&gt;&#xA;&lt;li&gt;事件会添加到重要里程碑的跨度中（例如，锻造一把剑或杀死巫师）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/表&gt;&#xA;&lt;p&gt;正如您所看到的，我们的四个可观察九头蛇头中的三个在游戏中发挥着关键的想象作用，同时也忠于现实世界中的对应角色。下一个问题是所有这些遥测信号去了哪里？&lt;/p&gt;&#xA;&lt;h3 id=&#34;grafana-alloy&#34;&gt;格拉法纳合金&lt;/h3&gt;&#xA;&lt;p&gt;答案是任何你喜欢的地方，只要它与 OpenTelemetry 兼容。实际上，您会将其发送到某种形式的 &lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OTel Collector&lt;/a&gt; 进行缓冲和可能进一步加工。我们选择使用 &lt;a href=&#34;/docs/alloy/latest/&#34;&gt;Grafana Alloy&lt;/a&gt;，这是 OTel Collector 的供应商中立发行版，因为它具有一些功能，使其成为出色的教学工具。&lt; /p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1200px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-alloy-logo2. png?w=320 320w，/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=550 550w， /media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=750 750w, /media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=900 900w，/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=1040 1040w，/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w=1240 1240w，/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png?w =1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;任务世界中角色的屏幕截图。&#34;&#xA;宽度=“1200”&#xA;高度=“630”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-alloy-logo2.png&#34;&#xA;alt=&#34;任务世界中角色的屏幕截图。&#34;&#xA;宽度=“1200”&#xA;高度=“630”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;h4 id=&#34;integrated-ui&#34;&gt;集成用户界面&lt;/h4&gt;&#xA;&lt;p&gt;与 Prometheus 一样，Grafana Alloy 具有集成的 UI，因此您可以直观地了解正在部署的配置和数据流。查看此关系图：&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1999px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;项目pe=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-integrated-ui.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-integrated-ui.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-integrated-ui.png?w= 320 320w，/media/blog/observability-game/otel-alloy-integrated-ui.png?w=550 550w， /media/blog/observability-game/otel-alloy-integrated-ui.png?w=750 750w, /media/blog/observability-game/otel-alloy-integrated-ui.png?w=900 900w, /media /blog/observability-game/otel-alloy-integrated-ui.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-integrated-ui.png?w=1240 1240w，/media/blog/observability-game/otel-alloy-integrated-ui.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Grafana Alloy 集成 UI 的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“1293”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-integrated-ui.png&#34;&#xA;alt=&#34;Grafana Alloy 集成 UI 的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“1293”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;您还可以了解组件配置设置以及管道的每个阶段是否正常。&lt;/p&gt;&#xA;&lt;h4 id=&#34;live-debugging&#34;&gt;实时调试&lt;/h4&gt;&#xA;&lt;p&gt;实时调试是另一个稍微更具实验性的功能，非常适合教学。这让您可以实时查看通过 Alloy 处理的遥测数据。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1999px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-live-debugging.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-live-debugging.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-live-debugging.png?w= 320 320w，/media/blog/observability-game/otel-alloy-live-debugging.png?w=550 550w， /media/blog/observability-game/otel-alloy-live-debugging.png?w=750 750w, /media/blog/observability-game/otel-alloy-live-debugging.png?w=900 900w, /media /blog/observability-game/otel-alloy-live-debugging.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-live-debugging.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-live-debugging.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;实时调试功能的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“664”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-live-debugging.png&#34;&#xA;alt=&#34;实时调试功能的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“664”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;h2 id=&#34;telemetry-storage&#34;&gt;遥测存储&lt;/h2&gt;&#xA;&lt;p&gt;Quest World 使用三个存储后端：Prometheus（指标）、&lt;a href=&#34;/oss/loki/&#34;&gt;Grafana Loki&lt;/a&gt;（日志）和 &lt;a href=&#34;/oss/tempo/&#34;&gt; Grafana Tempo&lt;/a&gt;（痕迹）。所有这三个数据库都有一个关键特性：它们具有完全兼容的本机 O电话端点。这使我们能够将 OTel 格式数据 (OTLP) 直接写入我们选择的存储后端，并让它们处理其余的事情。&lt;/p&gt;&#xA;&lt;p&gt;最好的部分是，当我们到达可观测性前端 Grafana 时，它可以让我们进行一些非常强大的分析，因为所有信号都共享相同的属性。&lt;/p&gt;&#xA;&lt;p&gt;所有三个数据库都以&lt;a href=&#34;/docs/loki/latest/get-started/deployment-modes/#monolithic-mode&#34;&gt;整体模式&lt;/a&gt;运行，您可以找到 docker-compose部署文件&lt;a href=&#34;https://github.com/grafana/adventure/blob/main/docker-compose.yml&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;此处&lt;/a&gt;。另外，这里是包含所有配置文件的参考表：&lt;/p&gt;&#xA;&lt;表&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;普罗米修斯&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;a href=&#34;https://github.com/grafana/adventure/blob/main/prometheus.yml&#34;&gt;https://github.com/grafana/adventure/blob/main/prometheus.yml&lt;/一个&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;洛基&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;a href=&#34;https://github.com/grafana/adventure/blob/main/loki-config.yaml&#34;&gt;https://github.com/grafana/adventure/blob/main/loki-config .yaml&lt;/a&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;节奏&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;a href=&#34;https://github.com/grafana/adventure/blob/main/tempo.yaml&#34;&gt;https://github.com/grafana/adventure/blob/main/tempo.yaml&lt;/一个&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/表&gt;&#xA;&lt;h2 id=&#34;grafana&#34;&gt;格拉法纳&lt;/h2&gt;&#xA;&lt;p&gt;当然，如果没有 Grafana，我们的冒险就不会完整，它是我们的主要游戏界面（除了文本冒险本身）。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p w-100p”&#xA;样式=“最大宽度：500px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“lightbox-link w-fit mx-auto d-flex flex-direction-column”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png w=320 320w, /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=550 550w, /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=750 750瓦， /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=900 900w, /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=1040 1040瓦， /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png?w=1920 1920瓦”&#xA;data-sizes=&#34;auto&#34;alt=&#34;更改后的 Grafana 徽标。&#34;&#xA;宽度=“242”&#xA;高度=“256”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-grafana-logo_resized.png&#34;&#xA;alt=&#34;更改后的 Grafana 徽标。&#34;&#xA;宽度=“242”&#xA;高度=“256”&#xA;类=“w-100p”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;Grafana 充当我们的：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;任务日志：通知用户在冒险过程中触发的事件。&lt;/li&gt;&#xA;&lt;li&gt;锻造监视器：对于锻造你自己的剑非常有用（眨眼，眨眼，轻推，努dge）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;您可以使用我们的&lt;a href=&#34;/blog/2024/09/24/queryless-metrics-logs-traces-profiles/&#34;&gt;探索应用&lt;/a&gt;来获取指标、日志和跟踪，或者使用包含的仪表板。&lt;/p&gt;&#xA;&lt;p&gt;在用户完成游戏后，Grafana 还发挥另一个作用：它使用我们的痕迹可视化面板充当记分板。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1999px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-leader-board.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-leader-board.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-leader-board.png?w= 320 320w，/media/blog/observability-game/otel-alloy-leader-board.png?w=550 550w， /media/blog/observability-game/otel-alloy-leader-board.png?w=750 750w, /media/blog/observability-game/otel-alloy-leader-board.png?w=900 900w, /media /blog/observability-game/otel-alloy-leader-board.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-leader-board.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-leader-board.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;排行榜的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“541”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-leader-board.png&#34;&#xA;alt=&#34;排行榜截图。&#34;&#xA;宽度=“1999”&#xA;高度=“541”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;如果我失去了你，请让我解释一下。记分牌基于您完成游戏的速度。每个阶段都需要一定的时间才能完成。我们将每次游戏视为一条轨迹，将用户采取的每一步视为一个跨度。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1999px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-traces.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-traces.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-traces.png?w=320 320w, /媒体/博客/observability-game/otel-alloy-traces.png?w=550 550w, /media/blog/observability-game/otel-alloy-traces.png?w=750 750w, /media/blog/observability-game/otel-alloy-traces.png?w=900 900w, /media/blog/observability -game/otel-alloy-traces.png?w=1040 1040w, /media/blog/observability-game/otel-alloy-traces.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-traces.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;跟踪的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“948”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-traces.png&#34;&#xA;alt=&#34;痕迹的屏幕截图。&#34;&#xA;宽度=“1999”&#xA;高度=“948”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;这也意味着我们可以在整个过程中留下一些简洁的元数据，例如跨度事件您可以回顾您的冒险经历并了解您所做选择的影响。&lt;/p&gt;&#xA;&lt;h2 id=&#34;one-last-Hydra-head-to-slay&#34;&gt;最后一个要杀死的九头蛇头！&lt;/h2&gt;&#xA;&lt;p&gt;您可能已经注意到，我们尚未将连续分析作为此可观察性冒险的一部分。这里没有魔法或诡计——我们只是仍在寻找在游戏中表示个人资料的最佳方式。&lt;/p&gt;&#xA;&lt;p&gt;我们目前的想法是，也许可以让个人资料成为与巫师进行“最终boss”战斗的机制。在游戏的这个阶段，用户拥有三个生命和几个咒语选项。某些咒语可能需要更多的系统资源，特别是当它们一个接一个地使用时，这会让你容易受到巫师的攻击。这就是配置文件可以发挥作用的地方。&lt;/p&gt;&#xA;&lt;p&gt;如果您有任何想法，我们很乐意听取您的意见！请随时提出问题或 PR 来解释如何合并连续配置文件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;did-someone-say-swag-easter-egg&#34;&gt;有人说“赃物复活节彩蛋”吗！？&lt;/h2&gt;&#xA;&lt;p&gt;如果游戏中没有隐藏复活节彩蛋，任何复古冒险游戏都会完整吗？&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p w-100p”&#xA;样式=“最大宽度：500px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“lightbox-link w-fit mx-auto d-flex flex-direction-column”&#xA;href=&#34;/media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;data-src=&#34;/media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png&#34;data-srcset=&#34;/media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png w=320 320w, /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=550 550w, /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=750 750瓦， /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=900 900w, /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=1040 1040瓦， /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=1240 1240w, /media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png?w=1920 1920瓦”&#xA;data-sizes=&#34;auto&#34;alt=&#34;鸡蛋的屏幕截图。&#34;&#xA;宽度=“150”&#xA;高度=“150”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src=&#34;/media/blog/observability-game/otel-alloy-demo-easter-egg_resized2.png&#34;&#xA;alt=&#34;鸡蛋的屏幕截图。&#34;&#xA;宽度=“150”&#xA;高度=“150”&#xA;类=“w-100p”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;我们正在向前 10 名找到秘密复活节彩蛋的玩家赠送礼物（当你看到它时你就会知道）。只需通过我们的&lt;a href=&#34;https://slack.grafana.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;社区 Slack&lt;/a&gt; 将密码发送给我们任何一个人即可。&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-end-of-our-story-for-now&#34;&gt;我们的故事暂时结束&lt;/h2&gt;&#xA;&lt;p&gt;所以，勇敢的冒险家，我们的故事现在到此结束了。我们希望您在玩《探索世界》时能像我们构建它时一样享受乐趣。所有伟大的故事是从某个地方开始的，我们希望看到冒险游戏能够通过我们出色的社区的新想法和 PR 来扩展。我们希望像 &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-demo&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OTel Demo&lt;/a&gt; 一样对待该项目，所以感觉自由地分叉它，改变它，并添加你的旋转。&lt;/p&gt;&#xA;&lt;p&gt;最后，提醒一下，我们将在 &lt;a href=&#34;/events/aws-reinvent/&#34;&gt;AWS re:Invent&lt;/a&gt; 演示游戏。请在以下时间段访问我们的 AWS 现代应用程序和开源专区，尝试一下这一可观测性冒险：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12 月 3 日星期二下午 1 点至 2 点&lt;/li&gt;&#xA;&lt;li&gt;12 月 5 日星期四上午 11 点至中午 12 点&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
      <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【5 tips to write better browser tests for performance testing and synthetic monitoring】编写更好的浏览器测试以进行性能测试和综合监控的 5 个技巧</title>
      <link>https://grafana.com/blog/2024/11/21/5-tips-to-write-better-browser-tests-for-performance-testing-and-synthetic-monitoring/</link>
      <description>【&lt;p&gt;Given the complexity of modern websites, browser testing is essential to ensure a positive user experience. With the &lt;a href=&#34;/docs/k6/latest/using-k6-browser/&#34;&gt;Grafana k6 browser module&lt;/a&gt;, you can interact with real web browsers and simulate user interactions — like clicking, typing, or navigating pages — to collect frontend metrics, increase site reliability, and fix performance issues before they ever impact your users.&lt;/p&gt;&#xA;&lt;p&gt;Part of &lt;a href=&#34;/oss/k6/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana k6 OSS&lt;/a&gt;, the k6 browser module is also compatible with our fully managed &lt;a href=&#34;/products/cloud/k6/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud k6&lt;/a&gt; solution, as well as &lt;a href=&#34;/products/cloud/synthetic-monitoring/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud Synthetic Monitoring&lt;/a&gt;, for out-of-the-box monitoring capabilities. This means you can re-use your browser testing scripts across those three environments, based on your testing needs.&lt;/p&gt;&#xA;&lt;p&gt;With an API that’s similar to &lt;a href=&#34;https://playwright.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Playwright’s&lt;/a&gt;, the k6 browser module makes it easy for those familiar with the Playwright web testing framework to write their first browser tests. That said, we know a few best practices can go a long way when it comes to authoring browser test scripts and integrating them into your workflow.&lt;/p&gt;&#xA;&lt;p&gt;In this blog, we outline five tips you can apply today to write better browser tests in Grafana k6, Grafana Cloud k6, and Grafana Cloud Synthetic Monitoring.&lt;/p&gt;&#xA;&lt;h2 id=&#34;tip-1-run-the-test-locally-for-a-faster-feedback-loop&#34;&gt;Tip 1. Run the test locally for a faster feedback loop&lt;/h2&gt;&#xA;&lt;p&gt;Our cloud offerings, including Grafana Cloud k6 and Synthetic Monitoring, are the best way to visualize the output of your script, but running tests locally on your machine is a great way to debug and iterate faster. To get started you will want to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/docs/k6/latest/set-up/install-k6/&#34;&gt;Install Grafana k6 on your machine&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Have Chrome (or a &lt;a href=&#34;https://alternativeto.net/category/browsers/chromium-based/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Chromium-based browser&lt;/a&gt;) available&lt;/li&gt;&#xA;&lt;li&gt;Set up an empty directory&lt;/li&gt;&#xA;&lt;li&gt;Create a script with the &lt;a href=&#34;/docs/k6/latest/using-k6/scenarios/executors/shared-iterations/&#34;&gt;&lt;code&gt;shared-iterations&lt;/code&gt; executor&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;For the purposes of debugging browser scripts locally, ensure your test scenario is only going to run one virtual user (VU) and one iteration. The &lt;code&gt;shared-iterations&lt;/code&gt; executor has these options set by default, so is the perfect choice for debugging. You can run tests quickly, read your logs output, and reduce the feedback loop as you author your tests.&lt;/p&gt;&#xA;&lt;p&gt;As your tests grow in length and complexity, the logs might become too noisy to efficiently use, or might be missing critical pieces of information to pinpoint potential issues. Take this script, for example, which tests the federated login flow for &lt;a href=&#34;https://grafana.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;grafana.com&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;federated-login-test.js&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { browser } from &amp;#34;k6/browser&amp;#34;&#xA;import { check } from &amp;#34;https://jslib.k6.io/k6-utils/1.6.0/index.js&amp;#34;&#xA;export const options = {&#xA;scenarios: {&#xA;ui: {&#xA;executor: &amp;#34;shared-iterations&amp;#34;,&#xA;options: {&#xA;browser: {&#xA;type: &amp;#34;chromium&amp;#34;,&#xA;},&#xA;},&#xA;},&#xA;},&#xA;}&#xA;export default async function () {&#xA;const context = await browser.newContext()&#xA;const page = await context.newPage()&#xA;await page.goto(`https://grafana.com/`)&#xA;await page.locator(`#menu__login-link`).click()&#xA;await page.waitForNavigation()&#xA;await page.locator(`button[aria-label=&amp;#34;Login using Google&amp;#34;]`).click()&#xA;await page.waitForNavigation()&#xA;// You will have to add or replace the __ENV variables as appropriate.&#xA;await page&#xA;.locator(`input[aria-label=&amp;#34;Email or phone&amp;#34;]`)&#xA;.fill(__ENV.GRAFANA_STACK_USER_EMAIL)&#xA;await page.locator(`//*[text()=&amp;#34;Next&amp;#34;]`).click()&#xA;await check(page.locator(`form h2`), {&#xA;&amp;#34;Form heading text is correct&amp;#34;: async (lo) =&amp;gt;&#xA;(await lo.textContent()) === `Grafana Labs`,&#xA;})&#xA;await page.close()&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;You can run the test by executing &lt;code&gt;k6 run federated-login-test.js&lt;/code&gt; in your terminal, but seemingly, the test ends prematurely. The check never runs, so it doesn&amp;rsquo;t trigger the threshold failure, and if you inspect the logs you see:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;Uncaught (in promise) getting text content of &amp;#34;h2&amp;#34;: Inspected target navigated or closed&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;It’s a cryptic log, especially if you are unfamiliar with the underlying API and what it’s doing. If you follow the steps by clicking along in your own browser, it isn’t clear what the problem is, as you end up on a page where &lt;code&gt;document.querySelector(‘form h2`).textContent&lt;/code&gt; is valid and returns the expected result.&lt;/p&gt;&#xA;&lt;p&gt;Using the &lt;a href=&#34;/docs/k6/latest/using-k6-browser/options/#environment-variable-options&#34;&gt;k6 browser CLI options&lt;/a&gt;, you can disable headless mode and watch your Chromium instance on your screen, so you can follow along as the bot steps through executing the script.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;K6_BROWSER_HEADLESS=false k6 run {{scriptName}}.js&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;This often provides invaluable insights to uncover a problem that the logs themselves weren’t able to fully convey.&lt;/p&gt;&#xA;&lt;p&gt;In the example above, it is now easy to establish what the problem is: the last page is never reached. We forgot to wait for a navigation change after the &lt;strong&gt;next&lt;/strong&gt; button was clicked, and the asynchronous check function couldn’t successfully complete because, as it was executing, its page context was canceled.&lt;/p&gt;&#xA;&lt;p&gt;The solution is to add &lt;code&gt;page.waitForNavigation()&lt;/code&gt; on line 36 and now the test passes. 🎉&lt;/p&gt;&#xA;&lt;p&gt;Bots are much quicker than humans when interacting with a browser. You may want to use the &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/page/screenshot/&#34;&gt;&lt;code&gt;page.screenshot()&lt;/code&gt;&lt;/a&gt; method or artificially increase the time between asynchronous steps using &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/page/waitfortimeout/&#34;&gt;&lt;code&gt;page.waitForTimeout()&lt;/code&gt;&lt;/a&gt;, so you can process what is going on. However, if you do inject timeouts into your script to help with debugging, remember to remove them afterwards because…&lt;/p&gt;&#xA;&lt;h2 id=&#34;tip-2-timeouts-and-sleep-are-anti-patterns&#34;&gt;Tip 2. Timeouts and sleep are anti-patterns!&lt;/h2&gt;&#xA;&lt;p&gt;If you’ve seen a k6 script before, there is a good chance it included &lt;a href=&#34;/docs/k6/latest/javascript-api/k6/sleep/&#34;&gt;&lt;code&gt;sleep(t)&lt;/code&gt;&lt;/a&gt;. In the context of non-browser scripts that are focused on testing APIs at the protocol level, this is often a necessary step to &lt;a href=&#34;/docs/k6/latest/using-k6-browser/recommended-practices/simulate-user-input-delay/&#34;&gt;simulate a real user’s input delay&lt;/a&gt;. However, when working with the browser, this can be a source of flaky and unreliable tests that become difficult to untangle and debug. This is because the k6 script pauses, but the browser continues to execute its tasks and processes at an unknown rate, which may be different from one test to the next.&lt;/p&gt;&#xA;&lt;p&gt;If in the &lt;strong&gt;federated-login-test.js&lt;/strong&gt; script, instead of adding &lt;code&gt;page.waitForNavigation()&lt;/code&gt; you added &lt;code&gt;sleep(5)&lt;/code&gt;, this would often get the test to pass; however, you have now introduced one of the following problems every time it runs:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;An iteration in your script is now running longer than necessary (so it is going to cost you money)&lt;/li&gt;&#xA;&lt;li&gt;An iteration in your script is not running long enough and reports failure (so it is going to cost you money)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The more &lt;code&gt;sleep(t)&lt;/code&gt; or &lt;code&gt;page.waitForTimeout()&lt;/code&gt; calls you add, the more these issues compound and introduce further problems. If you are using your script with Grafana Cloud Synthetic Monitoring, browser checks currently have &lt;a href=&#34;/docs/grafana-cloud/testing/synthetic-monitoring/create-checks/checks/k6-browser/#public-preview-limitations&#34;&gt;a limit on running time&lt;/a&gt;, so you may be reaching that limit unintentionally. For k6 browser tests, you are increasing memory and CPU usage unnecessarily, which might not just fail the current iteration, but make your script report failure altogether.&lt;/p&gt;&#xA;&lt;p&gt;If using &lt;code&gt;sleep(t)&lt;/code&gt;, it is important to note it is a synchronous function native to k6 that blocks the JavaScript event loop. If you are using the &lt;a href=&#34;/docs/grafana-cloud/whats-new/2024-07-03-browser-timeline-and-screenshots-in-grafana-cloud-k6/&#34;&gt;k6 timeline feature,&lt;/a&gt; the sleep time will get included in the trace and you will lose valuable insights into when your services are &lt;em&gt;really&lt;/em&gt; slowing down.&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-to-do-instead&#34;&gt;What to do instead?&lt;/h3&gt;&#xA;&lt;p&gt;In the &lt;strong&gt;federated-login-test.js&lt;/strong&gt; example above, adding &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/page/waitfornavigation/&#34;&gt;&lt;code&gt;page.waitForNavigation()&lt;/code&gt;&lt;/a&gt; was the solution. This method waits for the browser’s window &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;load event&lt;/a&gt; to fire, ensuring the test is reliable and no longer waiting too little or too long until the browser script should continue its execution.&lt;/p&gt;&#xA;&lt;p&gt;If you aren’t waiting for a page navigation event, but for some in-page content that hasn’t been rendered to the page yet, you want to use &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/locator/&#34;&gt;&lt;code&gt;page.locator()&lt;/code&gt;&lt;/a&gt; and its associated methods.&lt;/p&gt;&#xA;&lt;p&gt;As an example, here’s a browser script checking if the performance testing plugin is displaying the expected information within Grafana.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;performance-app-renders.js&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { browser } from &amp;#34;k6/browser&amp;#34;&#xA;import { check } from &amp;#34;k6&amp;#34;&#xA;export const options = {&#xA;scenarios: {&#xA;ui: {&#xA;executor: &amp;#34;shared-iterations&amp;#34;,&#xA;options: {&#xA;browser: {&#xA;type: &amp;#34;chromium&amp;#34;,&#xA;},&#xA;},&#xA;},&#xA;},&#xA;}&#xA;export default async function () {&#xA;const context = await browser.newContext()&#xA;const page = await context.newPage()&#xA;// You will have to add or replace the __ENV variables as appropriate.&#xA;await page.goto(__ENV.GRAFANA_APP_URL)&#xA;// login&#xA;await page&#xA;.locator(`[data-testid=&amp;#34;data-testid Username input field&amp;#34;]`)&#xA;.fill(&amp;#34;admin&amp;#34;)&#xA;await page&#xA;.locator(`[data-testid=&amp;#34;data-testid Password input field&amp;#34;]`)&#xA;.fill(__ENV.GRAFANA_APP_PASSWORD)&#xA;await page.locator(`[data-testid=&amp;#34;data-testid Login button&amp;#34;]`).click()&#xA;await page.waitForNavigation()&#xA;// navigate to Performance page&#xA;await page.locator(`[data-testid=&amp;#34;data-testid Toggle menu&amp;#34;]`).click()&#xA;await page&#xA;.locator(`[aria-label=&amp;#34;Expand section Testing &amp;amp; synthetics&amp;#34;]`)&#xA;.click()&#xA;await page.locator(`//*[text()=&amp;#34;Performance&amp;#34;]`).click()&#xA;const perfH1Text = await page&#xA;.locator(`//h1[text()=&amp;#34;Performance&amp;#34;]`)&#xA;.textContent()&#xA;check(perfH1Text, {&#xA;&amp;#34;Performance page heading is correct&amp;#34;: (text) =&amp;gt; text === &amp;#34;Performance&amp;#34;,&#xA;})&#xA;await page.close()&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;If you follow along manually (or by turning off headless mode, as suggested in tip 1) you will notice that, at every stage, you have to wait for something to be rendered to the page before continuing. By using &lt;code&gt;page.locator()&lt;/code&gt; and its &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/locator/&#34;&gt;provided methods&lt;/a&gt;, the script waits for the content to be available before proceeding.&lt;/p&gt;&#xA;&lt;p&gt;By using a combination of &lt;code&gt;page.waitForNavigation()&lt;/code&gt; and &lt;code&gt;page.locator()&lt;/code&gt; methods, you now have a reliable script without having to add arbitrary and unreliable timeout functions.&lt;/p&gt;&#xA;&lt;h2 id=&#34;tip-3-think-about-the-asynchronous-execution-of-your-test&#34;&gt;Tip 3: Think about the asynchronous execution of your test&lt;/h2&gt;&#xA;&lt;p&gt;When writing your browser tests, it is important to evaluate and consider:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What is the next function call &lt;em&gt;really&lt;/em&gt; doing?&lt;/li&gt;&#xA;&lt;li&gt;What is happening from the script’s point of view?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The k6 browser API is purposefully designed to be compatible with the &lt;a href=&#34;https://playwright.dev/docs/api/class-playwright&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Playwright API for NodeJS&lt;/a&gt;. Grafana k6, however, does not run in a NodeJS environment, but uses &lt;a href=&#34;https://go.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Go&lt;/a&gt; and transpiles scripts using &lt;a href=&#34;https://github.com/grafana/sobek&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Sobek&lt;/a&gt;. Why is this important to know? &lt;br /&gt;&#xA;&lt;br /&gt;&#xA;k6 has evolved over time and two significant milestones for browser checks were introducing the &lt;a href=&#34;https://github.com/grafana/k6/pull/2228&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;event loop&lt;/a&gt; and implementing all the &lt;a href=&#34;https://github.com/grafana/k6/releases/tag/v0.52.0&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;browser APIs as async methods&lt;/a&gt;. For the most part, writing a browser test should be indistinguishable from writing native JavaScript, but there can be a few opaque ‘gotchas’ that are difficult to recognize and identify.&lt;/p&gt;&#xA;&lt;h3 id=&#34;the-native-k6check-does-not-support-passing-asynchronous-functions&#34;&gt;The native k6/check does not support passing asynchronous functions&lt;/h3&gt;&#xA;&lt;p&gt;Because all of the k6 browser API methods are asynchronous, it feels intuitive to write a check like this:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { check } from &amp;#39;k6&amp;#39;&#xA;...&#xA;// doesn&amp;#39;t work&#xA;await check(page.locator(`h1`), {&#xA;&amp;#39;text content is correct&amp;#39;: async(lo) =&amp;gt; (await lo.textContent()) === &amp;#39;Expected content&amp;#39;&#xA;})&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;This will not work, however, because the native k6 check is synchronous. To fix this problem, you can replace the native k6 check with our &lt;a href=&#34;https://jslib.k6.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;jslib.k6.io&lt;/a&gt; version. It is compatible and can be directly swapped out in any of your existing tests.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { check } from &amp;#34;https://jslib.k6.io/k6-utils/1.6.0/index.js&amp;#34;&#xA;...&#xA;// works!&#xA;await check(page.locator(`h1`), {&#xA;&amp;#39;text content is correct&amp;#39;: async(lo) =&amp;gt; (await lo.textContent()) === &amp;#39;Expected content&amp;#39;&#xA;})&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;dont-use-pagewaitfornavigation-unnecessarily&#34;&gt;Don’t use page.waitForNavigation unnecessarily&lt;/h3&gt;&#xA;&lt;p&gt;It is important to know the underlying architecture of your website when you are authoring browser tests. Are you using a Single Page Application (SPA), such as React, Angular or Vue, or a traditional Multi Page Application (MPA)? Or maybe a mixture of both?&lt;/p&gt;&#xA;&lt;p&gt;You may expect that any time the URL changes in your browser, it would trigger a page load event — but if your application is an SPA, it uses the browser’s &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/History/pushState&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;history.pushState&lt;/a&gt; method, so the &lt;code&gt;page.waitForNavigation()&lt;/code&gt; function call will never resolve, block the rest of the execution of your script, and eventually timeout. This is especially important to note with the next ‘gotcha’ below.&lt;/p&gt;&#xA;&lt;h3 id=&#34;k6-doesnt-know-what-is-in-the-script-until-it-is-encountered&#34;&gt;k6 doesn’t know what is in the script until it is encountered&lt;/h3&gt;&#xA;&lt;p&gt;If your script execution aborted part-way through, none of your checks, logs or custom metrics that are declared and executed after that point will be registered. If you have set up your script so it only fails when a check failure threshold is reached, you are going to have false positives in your test results. &lt;em&gt;Note: see the bonus tip below to solve this.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;have-a-bots-eye-view&#34;&gt;Have a ‘bots-eye’ view&lt;/h3&gt;&#xA;&lt;p&gt;If you take the &lt;strong&gt;performance-app-renders.js&lt;/strong&gt; script from above and change the locator for the h1, the script now fails!&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;const perfH1Text = await page&#xA;.locator(`#pageContent h1`)&#xA;.textContent()&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;There are no logs indicating what has gone wrong — just a failed check. If we summarize the steps from a human perspective:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Go to your Grafana URL&lt;/li&gt;&#xA;&lt;li&gt;Fill in username, fill in password, and click &lt;strong&gt;login&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Wait for page navigation&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;Click the &lt;strong&gt;menu&lt;/strong&gt; toggle, expand &lt;strong&gt;Testing &amp;amp; Synthetics&lt;/strong&gt;, click &lt;strong&gt;Performance&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Check if the h1’s text content is “Performance”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;If you follow along in your browser, open your devTools console and run &lt;code&gt;document.querySelector(‘#pageContent h1`).textContent&lt;/code&gt; — it returns “Performance!&amp;quot; So what is going on?&lt;/p&gt;&#xA;&lt;p&gt;The problem is that the bot executing the script “thinks,” “sees,” and “evaluates” things &lt;strong&gt;a lot&lt;/strong&gt; quicker than humans do. If you add this &lt;a href=&#34;https://gist.github.com/ckbedwell/c18142bb8aa20c7ba9133a8a53304e74&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;useful debug snippet&lt;/a&gt; at the beginning of the script and open the devTools console, the execution will pause, allowing an investigation into what has happened.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&#xA;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png&#34;data-srcset=&#34;/media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=320 320w, /media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=550 550w, /media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=750 750w, /media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=900 900w, /media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=1040 1040w, /media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=1240 1240w, /media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of debugging Grafana with Chrome DevTools. The screen is split in two with Grafana displayed on the left with an h1 with 0 width and 0 height highlighted and on the right is the elements panel displaying the DOM tree. The h1 contains no text content.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;716&#34;&#xA;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png&#34;&#xA;alt=&#34;A screenshot of debugging Grafana with Chrome DevTools. The screen is split in two with Grafana displayed on the left with an h1 with 0 width and 0 height highlighted and on the right is the elements panel displaying the DOM tree. The h1 contains no text content.&#34;&#xA;width=&#34;1999&#34;&#xA;height=&#34;716&#34;&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;While waiting for the plugin to load, for a split second, Grafana has rendered an empty h1 to the screen that fulfills the selector we are looking for, so it moves onto executing the check comparison: the text content of the h1 is not “Performance,” so the check and our test ultimately fails.&lt;/p&gt;&#xA;&lt;p&gt;And that brings us nicely into our fourth tip…&lt;/p&gt;&#xA;&lt;h2 id=&#34;tip-4-write-unique-and-durable-selectors-for-pagelocator&#34;&gt;Tip 4: Write unique and durable selectors for page.locator()&lt;/h2&gt;&#xA;&lt;p&gt;We have a guide on best practices for &lt;a href=&#34;/docs/k6/latest/using-k6-browser/recommended-practices/select-elements/&#34;&gt;selecting elements&lt;/a&gt;, where the fundamental idea is to create durable selectors that:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Are unique to the page (if not the whole journey, where possible, as shown by the bug above!)&lt;/li&gt;&#xA;&lt;li&gt;Are guaranteed to be stable&lt;/li&gt;&#xA;&lt;li&gt;Convey intent in the script&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;If you were to write a browser script to test the login of Grafana, when inspecting the Document Object Model (DOM), you would see markup similar to this for the Username input field:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;&amp;lt;input class=&amp;#34;css-8tk2dk-input-input&amp;#34; name=&amp;#34;user&amp;#34; id=&amp;#34;:r0:&amp;#34; autocapitalize=&amp;#34;none&amp;#34; placeholder=&amp;#34;email or username&amp;#34; data-testid=&amp;#34;data-testid Username input field&amp;#34;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;The input element has several attributes on it. To decide which would be appropriate to use, you can assign each a score:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;strong&gt;Unique to the page&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;strong&gt;Value is stable&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;strong&gt;Conveys intent&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;autocapitalize&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;❌&#xA;&lt;/td&gt;&#xA;&lt;td&gt;❌&#xA;&lt;/td&gt;&#xA;&lt;td&gt;❌&#xA;&lt;/td&gt;&#xA;&lt;td&gt;0&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;class&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;❌&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;1&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;id&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;2&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;name&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;2.5&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;placeholder&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;2.5&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;data-testid&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;3&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;em&gt;❌ = 0, ⚠️= 0.5, ✅ = 1&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;strong&gt;autocapitalize&lt;/strong&gt; attribute can immediately be ruled out. There is no guarantee it is unique to the page, it has no bearing on what you are trying to select, and it would be difficult to infer your intent when reviewing the test script.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;strong&gt;class&lt;/strong&gt; attribute might be considered. It is often used when using tag manager tools or other rudimentary recorders to act as a selector. But there are several problems with using this attribute:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;There is no guarantee that it is unique to the page (and it isn’t, in this case, as the password input shares the same classes)&lt;/li&gt;&#xA;&lt;li&gt;They are often considered as an implementation detail by developers and are subject to change (especially in the case here, where the value is generated by the build process)&lt;/li&gt;&#xA;&lt;li&gt;Even if it was unique and stable, it makes your test scripts less maintainable. How would someone else reading your script be able to infer you are selecting the username input?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;strong&gt;id&lt;/strong&gt; attribute should be unique, but it has similar problems to &lt;strong&gt;class&lt;/strong&gt; in this case. Those who are familiar with React APIs will recognize this ID has been generated by the &lt;a href=&#34;https://react.dev/reference/react/useId&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;useId&lt;/code&gt; hook&lt;/a&gt;, so if the developers were to use this hook elsewhere on the page for a component that gets rendered before the input field, this &lt;strong&gt;id&lt;/strong&gt; value would shift, so it is not guaranteed to be a stable selector. In this case, it also doesn’t convey any meaning when reading the test script, so isn’t a good candidate.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;strong&gt;name&lt;/strong&gt; and &lt;strong&gt;placeholder&lt;/strong&gt; attributes have a similar weighting and both would be strong candidates for a stable selector that conveys meaning in the test script. There are some additional considerations:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If you want to reuse the test script for testing the page in a different language, the placeholder selector would have to be updated in the script.&lt;/li&gt;&#xA;&lt;li&gt;If you haven’t communicated with your development and/or content teams, they might be unaware of the testing contract you have just enrolled them in. They might have good reason in the future to update the value of either of these attributes and be unaware your script is about to break.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;This brings us to the &lt;strong&gt;data-testid.&lt;/strong&gt; It is unique in the DOM, it conveys intent in the script, and it has an implicit contract with other teams that its only purpose is for use in testing scripts, so it will remain stable. This is the ideal selector you should be using.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;page.locator(`[data-testid=&amp;#34;data-testid Username input field&amp;#34;]`)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;This process works well with elements that have suitable attributes or well-labeled IDs or classes. You could strengthen and further clarify intent by adding the element’s tag name.&lt;/p&gt;&#xA;&lt;p&gt;But what happens if you don’t have any useful attributes available? There are two options, which can be combined:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Look up the node’s parent tree to find a suitable selector. If using this method, it is important not to write selectors that are too closely tied to your DOM structure. Selectors tightly coupled with the DOM are brittle and prone to breaking, as they are too closely tied to your developer’s implementation, which may change at any point.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;// good&#xA;page.locator(`#product-detail h2`)&#xA;// bad&#xA;page.locator(`#product-detail &amp;gt; section &amp;gt; div &amp;gt; div.arbitaryClass &amp;gt; h2`)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Use an xpath selector with a &lt;code&gt;text()&lt;/code&gt; node test. &lt;code&gt;page.locator()&lt;/code&gt; supports xpath selectors and &lt;a href=&#34;https://devhints.io/xpath&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;there are many that are very powerful&lt;/a&gt;. Targeting elements based on their text content is highly recommended because it decouples the test script from your implementation details and focuses on writing locators the same way that a user would find things on the page.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;page.locator(`//h2[text()=&amp;#34;Product Title&amp;#34;]`)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;tip-5-use-threshold-options-or-the-fail-method-to-ensure-you-get-the-right-results&#34;&gt;Tip 5: Use threshold options or the fail() method to ensure you get the right results&lt;/h2&gt;&#xA;&lt;p&gt;Whenever you are authoring a test, you should think about your acceptance criteria to consider it a success. But how do we define what a pass or failure looks like for a browser test?&lt;/p&gt;&#xA;&lt;p&gt;k6 provides a &lt;a href=&#34;/docs/k6/latest/using-k6/checks/&#34;&gt;checks API&lt;/a&gt; where you can define at any point in the script’s execution if something has passed or failed. A check can be as simple as confirming if an API request returned a successful status code, whether an element has the correct text content, or if a user journey took an acceptable amount of time.&lt;/p&gt;&#xA;&lt;p&gt;You may think any failed checks in your script should mean the whole test should fail, but if that was the default behavior, most load tests would result in failure. When writing a k6 script, you should identify what context it is running in (i.e., is it a performance test or for synthetic monitoring?), as well as what scenarios, VUs, and iterations are being used.&lt;/p&gt;&#xA;&lt;p&gt;After establishing these details, you can determine the appropriate ways to think about success and failure, which checks to add, and appropriate thresholds — for example, is this check a warning, or is it a critical failure for our test?&lt;/p&gt;&#xA;&lt;p&gt;Here are two examples — one for performance testing, and one for synthetic monitoring — that support the k6 browser module and demonstrate how you could use the checks API.&lt;/p&gt;&#xA;&lt;h4 id=&#34;grafana-k6-performance-tests-using-the-browser-module&#34;&gt;Grafana k6 performance tests using the browser module&lt;/h4&gt;&#xA;&lt;p&gt;A k6 performance test is a versatile way to define any number of scenarios, VUs, and iterations. In the following example, we have a demo e-commerce website and we are using a hybrid test to record what happens if our recommended product API is under heavy load unexpectedly. Our recommendation engine is an important part of the application, but it’s not as business-critical as ensuring customers can place orders and check out.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;recommend-product-spike.js&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { browser } from &amp;#34;k6/browser&amp;#34;&#xA;import http from &amp;#34;k6/http&amp;#34;&#xA;import { check } from &amp;#34;https://jslib.k6.io/k6-utils/1.6.0/index.js&amp;#34;&#xA;const PRODUCT_IDS = __ENV.PRODUCT_IDS&#xA;const HAS_SOME_LEEWAY = `warn`&#xA;const SUPER_IMPORTANT_CHECK = `critical`&#xA;const LESS_IMPORTANT = `info`&#xA;export const options = {&#xA;scenarios: {&#xA;ui: {&#xA;executor: &amp;#34;constant-vus&amp;#34;,&#xA;duration: &amp;#34;1m&amp;#34;,&#xA;vus: 3,&#xA;options: {&#xA;browser: {&#xA;type: &amp;#34;chromium&amp;#34;,&#xA;},&#xA;},&#xA;exec: &amp;#34;checkoutCompletion&amp;#34;,&#xA;},&#xA;&amp;#34;spike-api&amp;#34;: {&#xA;executor: &amp;#34;ramping-vus&amp;#34;,&#xA;startVUs: 0,&#xA;stages: [&#xA;{ duration: &amp;#34;10s&amp;#34;, target: 10 },&#xA;{ duration: &amp;#34;40s&amp;#34;, target: 30 },&#xA;{ duration: &amp;#34;10s&amp;#34;, target: 10 },&#xA;],&#xA;gracefulRampDown: &amp;#34;10s&amp;#34;,&#xA;exec: &amp;#34;spikeApi&amp;#34;,&#xA;},&#xA;},&#xA;thresholds: {&#xA;[`checks{importance:${SUPER_IMPORTANT_CHECK}}`]: [&amp;#34;rate==1.0&amp;#34;],&#xA;[`checks{importance:${HAS_SOME_LEEWAY}}`]: [&amp;#34;rate&amp;gt;=0.95&amp;#34;],&#xA;[`checks{importance:${LESS_IMPORTANT}}`]: [&amp;#34;rate&amp;gt;=0.9&amp;#34;],&#xA;},&#xA;}&#xA;export function spikeApi() {&#xA;const randomProduct =&#xA;PRODUCT_IDS[Math.floor(Math.random() * PRODUCT_IDS.length)]&#xA;const res = http.get(`https://otel-demo.field-eng.grafana.net/api/recommendations?productIds=${randomProduct}`)&#xA;check(&#xA;res,&#xA;{&#xA;&amp;#34;status code is 200&amp;#34;: (r) =&amp;gt; r.status === 200,&#xA;},&#xA;{ importance: HAS_SOME_LEEWAY }&#xA;)&#xA;}&#xA;export async function checkoutCompletion() {&#xA;const context = await browser.newContext()&#xA;const page = await context.newPage()&#xA;await page.goto(`https://otel-demo.field-eng.grafana.net/`)&#xA;await page.locator(`//*[text()=&amp;#34;Go Shopping&amp;#34;]`).click()&#xA;await Promise.all([&#xA;page&#xA;.locator(`//*[text()=&amp;#34;Starsense Explorer Refractor Telescope&amp;#34;]`)&#xA;.click(),&#xA;page.waitForNavigation(),&#xA;])&#xA;// less important check&#xA;await checkForRecommendedProducts(page, `Product page`)&#xA;await Promise.all([&#xA;page.locator(`//*[text()=&amp;#34; Add To Cart&amp;#34;]`).click(),&#xA;page.waitForNavigation(),&#xA;])&#xA;// less important check&#xA;await checkForRecommendedProducts(page, `Shipping form`)&#xA;await Promise.all([&#xA;page.locator(`//*[text()=&amp;#34;Place Order&amp;#34;]`).click(),&#xA;page.waitForNavigation(),&#xA;])&#xA;// Super important check&#xA;await check(&#xA;page.locator(`h1`),&#xA;{&#xA;&amp;#34;Place order page was reached&amp;#34;: async (lo) =&amp;gt;&#xA;(await lo.textContent()) === &amp;#34;Your order is complete!&amp;#34;,&#xA;},&#xA;{ important: SUPER_IMPORTANT_CHECK }&#xA;)&#xA;// less important check&#xA;await checkForRecommendedProducts(page, `Order confirmation`)&#xA;await page.close()&#xA;}&#xA;const TWO_SECONDS = 2000&#xA;async function checkForRecommendedProducts(page, step) {&#xA;try {&#xA;await page&#xA;.locator(&#xA;`[data-cy=&amp;#34;recommendation-list&amp;#34;] [data-cy=&amp;#34;product-card&amp;#34;]:first-of-type`&#xA;)&#xA;.waitFor({ timeout: TWO_SECONDS })&#xA;} catch (e) {&#xA;await page.screenshot({ path: `./screenshots/${step}.png` })&#xA;} finally {&#xA;const cards = await page.$$(`[data-cy=&amp;#34;product-card&amp;#34;]`)&#xA;console.log(step, cards.length)&#xA;check(&#xA;cards.length,&#xA;{&#xA;&amp;#34;4 recommended products are displayed&amp;#34;: (length) =&amp;gt; length === 4,&#xA;},&#xA;{&#xA;importance: LESS_IMPORTANT,&#xA;}&#xA;)&#xA;}&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;In the script above, there are two scenarios to form a hybrid test: &lt;code&gt;spike-api&lt;/code&gt;, which is using k6’s &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-http/&#34;&gt;&lt;code&gt;http&lt;/code&gt; protocol&lt;/a&gt; to simulate a spike of traffic, and &lt;code&gt;user-checkout&lt;/code&gt; which is a browser test simulating the checkout flow. There are three checks that are tagged with a key of importance and a varying value, depending on what level of success we require for the check.&lt;/p&gt;&#xA;&lt;p&gt;In the &lt;code&gt;options&lt;/code&gt; object, a threshold has been set for each of these key/value pairs that will dictate whether the test has passed or failed. The &lt;code&gt;abortOnFail&lt;/code&gt; option is not being used in the thresholds because valuable data would be lost if the test ended prematurely. If failures started occurring, it would be useful to know what the extent of the failure looks like for the API and what is happening on the frontend in the browser.&lt;/p&gt;&#xA;&lt;h4 id=&#34;synthetic-monitoring-check&#34;&gt;Synthetic Monitoring check&lt;/h4&gt;&#xA;&lt;p&gt;If you are running a Synthetic Monitoring browser check, it will always be one scenario with one VU and one iteration. Synthetic Monitoring doesn’t currently support the &lt;code&gt;thresholds&lt;/code&gt; object in the options declaration (but it’s coming soon!), so you have to use the explicit &lt;a href=&#34;/docs/k6/latest/javascript-api/k6/fail/&#34;&gt;&lt;code&gt;fail()&lt;/code&gt; method&lt;/a&gt; to let the probe know the check has failed.&lt;/p&gt;&#xA;&lt;p&gt;Synthetic Monitoring browser checks behave differently than k6 checks because they primarily assess if your test passed or failed based on your definition of uptime. For non-scripted Synthetic Monitoring checks, you define uptime with a set of assertions in its own step during check creation, but because browser checks are written as a script, it is up to you to mark out explicitly what you want to count towards defining uptime.&lt;/p&gt;&#xA;&lt;p&gt;If you take our &lt;strong&gt;recommended-product-spike-test.js&lt;/strong&gt; script above and extract the checkout flow scenario, it would only need a small modification to suit the needs of a Synthetic Monitoring browser check. By adding the &lt;code&gt;fail()&lt;/code&gt; method to the check, confirming if the order confirmation page was reached, the Synthetic Monitoring probe will now understand what constitutes a failure of uptime and report correctly.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;if (&#xA;!(await check(page.locator(`h1`), {&#xA;&amp;#34;Place order page was reached&amp;#34;: async (lo) =&amp;gt; (await lo.textContent()) === &amp;#34;Your order is complete!&amp;#34;,&#xA;}))&#xA;) {&#xA;fail(`Order completion page was not reached`)&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;We can leave our less important checks in the script without adding an explicit fail to them, as that’s just a bonus we are receiving from this set-up. We could even add a custom alert using &lt;a href=&#34;/products/cloud/alerting/&#34;&gt;Grafana Alerting&lt;/a&gt; to know if the recommended products aren’t rendering consistently.&lt;/p&gt;&#xA;&lt;p&gt;This kind of flexibility in your Synthetic Monitoring browser checks means you can set primary and secondary assertions in just one execution, saving you both time and money!&lt;/p&gt;&#xA;&lt;h2 id=&#34;bonus-tip-dont-just-account-for-the-happy-path&#34;&gt;Bonus tip: don’t just account for the ‘happy’ path&lt;/h2&gt;&#xA;&lt;p&gt;A notorious mistake in any kind of testing is assuming they will always succeed. However, the real value of testing is when the inevitable failure occurs, how well do the tests inform us of the problem they encountered?&lt;/p&gt;&#xA;&lt;p&gt;If you look at the checkout scenario in the &lt;strong&gt;recommend-product-spike.js&lt;/strong&gt;, there are several &lt;code&gt;page.locator().click()&lt;/code&gt; functions called. What happens if our application has an error and these aren’t displaying correctly and the selectors fail?&lt;/p&gt;&#xA;&lt;p&gt;Each iteration will wait the &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/locator/click/#clickoptions&#34;&gt;default 30 seconds&lt;/a&gt; before timing out and throwing a failure. This could be an issue for our test because it “blocks” a VU for 30 seconds before ending the iteration and starting again. The first part of the problem is this test only runs for one minute, so if it encounters a problem early, we lose a lot of potential iterations and all the additional data they would generate.&lt;/p&gt;&#xA;&lt;p&gt;There are two ways of solving this problem:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Providing each &lt;code&gt;page.locator().click()&lt;/code&gt; (and similar methods) with their own appropriate timeouts&lt;/li&gt;&#xA;&lt;li&gt;Setting a default timeout value on the page using &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/page/setdefaulttimeout/#setdefaulttimeouttimeout&#34;&gt;&lt;code&gt;page.setDefaultTimeout()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Each of these approaches has its pros and cons and is up to you to decide which works best for you.&lt;/p&gt;&#xA;&lt;p&gt;The second problem is outlined above in tip three: the test execution was halted, the check confirming if the order page was reached is never encountered, and this failure goes unreported in the test’s metrics. The solution is to add a catch block to our &lt;code&gt;try / finally&lt;/code&gt; statement:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;try {&#xA;...&#xA;} catch (e) {&#xA;console.error(e)&#xA;await page.screenshot({&#xA;path: `./screenshots/${__VU}_${__ITER}-failure.png`,&#xA;})&#xA;check(&#xA;null,&#xA;{&#xA;&amp;#34;Place order page was reached&amp;#34;: false,&#xA;},&#xA;{ important: SUPER_IMPORTANT_CHECK }&#xA;)&#xA;} finally {&#xA;...&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: It is good practice to take a screenshot to make your debugging sessions easier.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Synthetic Monitoring reports an uptime failure if any execution results in an unhandled exception, so if you do add this catch block, remember to rethrow the error (with your own logging if you favor it over the default) or call k6’s &lt;code&gt;fail()&lt;/code&gt; method.&lt;/p&gt;&#xA;&lt;h2 id=&#34;summing-up&#34;&gt;Summing up&lt;/h2&gt;&#xA;&lt;p&gt;The k6 browser API is a versatile tool to help monitor your website’s performance and reliability. With the tips above, you can ensure a tight feedback loop when authoring your tests, while also keeping them adaptable and bug-free. Ultimately, these best practices will make it easier for you to identify potential performance issues and optimize your end-user experiences.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Grafana Cloud is the easiest way to get started with browser testing. With &lt;a href=&#34;/products/cloud/k6/&#34;&gt;Grafana Cloud k6&lt;/a&gt;, you can effortlessly combine frontend and backend testing in a single cloud-based test. &lt;a href=&#34;/products/cloud/synthetic-monitoring/&#34;&gt;Grafana Cloud Synthetic Monitoring&lt;/a&gt; enables continuous monitoring of your critical journeys in a production environment. We offer a generous forever-free tier and plans tailored for every use case. Sign up for free now (&lt;a href=&#34;/auth/sign-up/create-user?pg=plugins&amp;amp;plcmt=grafana-synthetic-monitoring-app&amp;amp;redirectPath=synthetic-monitoring&#34;&gt;Grafana Cloud k6&lt;/a&gt; or &lt;a href=&#34;/auth/sign-up/create-user?pg=plugins&amp;amp;plcmt=grafana-synthetic-monitoring-app&#34;&gt;Grafana Cloud Synthetic Monitoring&lt;/a&gt;)!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;鉴于现代网站的复杂性，浏览器测试对于确保良好的用户体验至关重要。借助 &lt;a href=&#34;/docs/k6/latest/using-k6-browser/&#34;&gt;Grafana k6 浏览器模块&lt;/a&gt;，您可以与真实的 Web 浏览器交互并模拟用户交互 - 例如单击、键入或导航页面 - 收集前端指标，提高网站可靠性，并在性能问题影响用户之前修复它们。&lt;/p&gt;&#xA;&lt;p&gt;作为 &lt;a href=&#34;/oss/k6/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana k6 OSS&lt;/a&gt; 的一部分，k6 浏览器模块也与我们完全托管的&lt;a href=&#34;/ products/cloud/k6/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana Cloud k6&lt;/a&gt; 解决方案，以及&lt;a href=&#34;/products/cloud/synthetic-monitoring/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana 云综合监控&lt;/a&gt;，提供开箱即用的监控功能。这意味着您可以根据您的测试需求在这三个环境中重复使用浏览器测试脚本。&lt;/p&gt;&#xA;&lt;p&gt;通过与 &lt;a href=&#34;https://playwright.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Playwright&lt;/a&gt; 类似的 API，k6 浏览器模块使那些人可以轻松使用熟悉 Playwright Web 测试框架来编写他们的第一个浏览器测试。也就是说，我们知道在编写浏览器测试脚本并将其集成到您的工作流程中时，一些最佳实践可以发挥很大作用。&lt;/p&gt;&#xA;&lt;p&gt;在本博客中，我们概述了您今天可以应用的五个技巧，以便在 Grafana k6、Grafana Cloud k6 和 Grafana Cloud Synthetic Monitoring 中编写更好的浏览器测试。&lt;/p&gt;&#xA;&lt;h2 id=&#34;tip-1-run-the-test-locally-for-a-faster-feedback-loop&#34;&gt;提示 1. 在本地运行测试以获得更快的反馈循环&lt;/h2&gt;&#xA;&lt;p&gt;我们的云产品（包括 Grafana Cloud k6 和综合监控）是可视化脚本输出的最佳方式，但在计算机上本地运行测试是更快地调试和迭代的好方法。首先，您需要：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/docs/k6/latest/set-up/install-k6/&#34;&gt;在您的计算机上安装 Grafana k6&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;拥有 Chrome（或&lt;a href=&#34;https://alternativeto.net/category/browsers/chromium-based/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;基于 Chromium 的浏览器&lt;/a&gt; ）可用&lt;/li&gt;&#xA;&lt;li&gt;设置一个空目录&lt;/li&gt;&#xA;&lt;li&gt;使用&lt;a href=&#34;/docs/k6/latest/using-k6/scenarios/executors/shared-iterations/&#34;&gt;&lt;code&gt;shared-iterations&lt;/code&gt;执行器创建脚本&lt;/a&gt;&lt; /里&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;为了在本地调试浏览器脚本，请确保您的测试场景仅运行一个虚拟用户 (VU) 和一次迭代。 &lt;code&gt;shared-iterations&lt;/code&gt; 执行器默认设置了这些选项，因此是调试的完美选择。您可以在编写测试时快速运行测试、读取日志输出并减少反馈循环。&lt;/p&gt;&#xA;&lt;p&gt;随着测试长度和复杂性的增加，日志可能会变得过于嘈杂而无法有效使用，或者可能会丢失关键信息来查明潜在问题。以这个脚本为例，它测试联邦 l&lt;a href=&#34;https://grafana.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;grafana.com&lt;/a&gt; 的登录流程：&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;federated-login-test.js&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;从“k6/browser”导入 { browser }&#xA;从“https://jslib.k6.io/k6-utils/1.6.0/index.js”导入{检查}&#xA;导出常量选项= {&#xA;场景：{&#xA;用户界面：{&#xA;执行者：“共享迭代”，&#xA;选项： {&#xA;浏览器：{&#xA;类型：“铬”，&#xA;},&#xA;},&#xA;},&#xA;},&#xA;}&#xA;导出默认异步函数 () {&#xA;const context = 等待 browser.newContext()&#xA;const page = 等待 context.newPage()&#xA;等待 page.goto(`https://grafana.com/`)&#xA;等待 page.locator(`#menu__login-link`).click()&#xA;等待页面.waitForNavigation()&#xA;等待 page.locator(`button[aria-label=&#34;使用 Google 登录&#34;]`).click()&#xA;等待页面.waitForNavigation()&#xA;// 您必须根据需要添加或替换 __ENV 变量。&#xA;等待页面&#xA;.locator(`input[aria-label=&#34;电子邮件或电话&#34;]`)&#xA;.fill(__ENV.GRAFANA_STACK_USER_EMAIL)&#xA;等待 page.locator(`//*[text()=&#34;下一步&#34;]`).click()&#xA;等待检查(page.locator(`form h2`), {&#xA;“表单标题文本正确”：async (lo) =&gt;&#xA;(await lo.textContent()) === `Grafana Labs`,&#xA;})&#xA;等待页面.close()&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;您可以通过在终端中执行&lt;code&gt;k6 run federated-login-test.js&lt;/code&gt;来运行测试，但看起来测试提前结束了。检查永远不会运行，因此它不会触发阈值失败，如果您检查日志，您会看到：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;未捕获（承诺）获取“h2”文本内容：检查的目标已导航或关闭&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;这是一个神秘的日志，尤其是当您不熟悉底层 API 及其功能时。如果您按照这些步骤在自己的浏览器中单击，则不清楚问题是什么，因为您最终会看到 &lt;code&gt;document.querySelector(&#39;form h2`).textContent&lt;/code&gt; 的页面有效并返回预期结果。&lt;/p&gt;&#xA;&lt;p&gt;使用 &lt;a href=&#34;/docs/k6/latest/using-k6-browser/options/#environment-variable-options&#34;&gt;k6 浏览器 CLI 选项&lt;/a&gt;，哟您可以禁用无头模式并在屏幕上观看您的 Chromium 实例，这样您就可以跟随机器人逐步执行脚本。&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;K6_BROWSER_HEADLESS=false k6 run {{scriptName}}.js&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;这通常可以提供宝贵的见解来发现日志本身无法完全传达的问题。&lt;/p&gt;&#xA;&lt;p&gt;在上面的示例中，现在很容易确定问题所在：永远无法到达最后一页。我们忘记在单击&lt;strong&gt;下一步&lt;/strong&gt;按钮后等待导航更改，并且异步检查功能无法成功完成，因为在执行时，其页面上下文被取消。&lt;/p&gt;&#xA;&lt;p&gt;解决方案是在第36行添加&lt;code&gt;page.waitForNavigation()&lt;/code&gt;，现在测试通过了。 🎉&lt;/p&gt;&#xA;&lt;p&gt;与浏览器交互时，机器人比人类快得多。您可能需要使用 &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/page/screenshot/&#34;&gt;&lt;code&gt;page.screenshot()&lt;/code&gt;&lt;/a&gt; 方法或使用 &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/page/waitfortimeout/&#34;&gt;&lt;code&gt;page.waitForTimeout()&lt;/code&gt;&lt;/a&gt; 人为地增加异步步骤之间的时间，这样你就可以处理 到底是怎么回事。但是，如果您确实在脚本中注入超时以​​帮助调试，请记住随后将其删除，因为......&lt;/p&gt;&#xA;&lt;h2 id=&#34;tip-2-timeouts-and-sleep-are-anti-patterns&#34;&gt;提示 2. 超时和睡眠是反模式！&lt;/h2&gt;&#xA;&lt;p&gt;如果您以前见过 k6 脚本，那么它很可能包含 &lt;a href=&#34;/docs/k6/latest/javascript-api/k6/sleep/&#34;&gt;&lt;code&gt;sleep(t)&lt; /代码&gt;&lt;/a&gt;。在专注于在协议级别测试 API 的非浏览器脚本的上下文中，这通常是 &lt;a href=&#34;/docs/k6/latest/using-k6-browser/recommended-practices/simulate- user-input-delay/&#34;&gt;模拟真实用户的输入延迟&lt;/a&gt;。然而，在使用浏览器时，这可能会导致不稳定且不可靠的测试，从而难以理清和调试。这是因为 k6 脚本暂停，但浏览器继续以未知的速率执行其任务和进程，这可能会因一次测试而异。&lt;/p&gt;&#xA;&lt;p&gt;如果在 &lt;strong&gt;federated-login-test.js&lt;/strong&gt; 脚本中，您没有添加 &lt;code&gt;page.waitForNavigation()&lt;/code&gt;，而是添加了 &lt;code&gt;sleep(5)&lt;/code&gt; ，这通常会使测试通过；但是，您现在每次运行时都会引入以下问题之一：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;脚本中的迭代现在运行时间超过了必要的时间（因此它将与给你钱）&lt;/li&gt;&#xA;&lt;li&gt;脚本中的迭代运行时间不够长并报告失败（因此会花费您金钱）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;您添加的 &lt;code&gt;sleep(t)&lt;/code&gt; 或 &lt;code&gt;page.waitForTimeout()&lt;/code&gt; 调用越多，这些问题就越复杂并引入更多问题。如果您将脚本与 Grafana Cloud Synthetic Monitoring 结合使用，浏览器检查当前具有 &lt;a href=&#34;/docs/grafana-cloud/testing/synthetic-monitoring/create-checks/checks/k6-browser/#public-preview-limitations &#34;&gt;运行时间有限制&lt;/a&gt;，因此您可能会无意中达到该限制。对于 k6 浏览器测试，您不必要地增加了内存和 CPU 使用率，这可能不仅会导致当前迭代失败，还会使您的脚本完全报告失败。&lt;/p&gt;&#xA;&lt;p&gt;如果使用 &lt;code&gt;sleep(t)&lt;/code&gt;，请务必注意，它是 k6 原生的同步函数，会阻止 JavaScript 事件循环。如果您使用&lt;a href=&#34;/docs/grafana-cloud/whats-new/2024-07-03-browser-timeline-and-screenshots-in-grafana-cloud-k6/&#34;&gt;k6 时间线功能，&lt; /a&gt; 睡眠时间将包含在跟踪中，您将无法了解服务何时&lt;em&gt;真正&lt;/em&gt;变慢。&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-to-do-instead&#34;&gt;该怎么办？&lt;/h3&gt;&#xA;&lt;p&gt;在上面的 &lt;strong&gt;federated-login-test.js&lt;/strong&gt; 示例中，添加 &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/page/waitfornavigation/&#34;&gt;&lt; code&gt;page.waitForNavigation()&lt;/code&gt;&lt;/a&gt; 是解决方案。此方法等待浏览器窗口 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;load 事件&lt;/a&gt; 触发，确保测试可靠，并且在浏览器脚本继续执行之前不再等待太短或太长的时间。&lt;/p&gt;&#xA;&lt;p&gt;如果您不是在等待页面导航事件，而是等待某些尚未呈现到页面的页内内容，则需要使用 &lt;a href=&#34;/docs/k6/latest/javascript -api/k6-browser/locator/&#34;&gt;&lt;code&gt;page.locator()&lt;/code&gt;&lt;/a&gt; 及其关联方法。&lt;/p&gt;&#xA;&lt;p&gt;作为示例，下面是一个浏览器脚本，用于检查性能测试插件是否在 Grafana 中显示预期信息。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;performance-app-renders.js&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;从“k6/browser”导入 { browser }&#xA;从“k6”导入{检查}&#xA;导出常量选项= {&#xA;场景：{&#xA;用户界面：{&#xA;执行者：“共享迭代”，&#xA;选项： {&#xA;浏览器：{&#xA;类型：“铬”，&#xA;},&#xA;},&#xA;},&#xA;},&#xA;}&#xA;出口t 默认异步函数 () {&#xA;const context = 等待 browser.newContext()&#xA;const page = 等待 context.newPage()&#xA;// 您必须根据需要添加或替换 __ENV 变量。&#xA;等待 page.goto(__ENV.GRAFANA_APP_URL)&#xA;// 登录&#xA;等待页面&#xA;.locator(`[data-testid=&#34;data-testid 用户名输入字段&#34;]`)&#xA;.fill(&#34;管理员&#34;)&#xA;等待页面&#xA;.locator(`[data-testid=&#34;data-testid 密码输入字段&#34;]`)&#xA;.fill(__ENV.GRAFANA_APP_PASSWORD)&#xA;等待 page.locator(`[data-testid=&#34;data-testid 登录按钮&#34;]`).click()&#xA;等待页面.waitForNavigation()&#xA;// 导航到性能页面&#xA;等待 page.locator(`[data-testid=&#34;data-testid 切换菜单&#34;]`).click()&#xA;等待页面&#xA;.locator(`[aria-label=&#34;展开测试和合成部分&#34;]`)&#xA;。点击（）&#xA;等待 page.locator(`//*[text()=&#34;性能&#34;]`).click()&#xA;const perfH1Text = 等待页面&#xA;.locator(`//h1[text()=&#34;性能&#34;]`)&#xA;.textContent()&#xA;检查（perfH1Text，{&#xA;&#34;性能页面标题正确&#34;: (text) =&gt; text === &#34;性能&#34;,&#xA;})&#xA;等待页面.close()&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;如果您手动进行操作（或者按照技巧 1 中的建议关闭无头模式），您会注意到，在每个阶段，您都必须等待某些内容呈现到页面上才能继续。通过使用 &lt;code&gt;page.locator()&lt;/code&gt; 及其&lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/locator/&#34;&gt;提供的方法&lt;/a&gt;，脚本会等待在继续之前使内容可用。&lt;/p&gt;&#xA;&lt;p&gt;通过结合使用 &lt;code&gt;page.waitForNavigation()&lt;/code&gt; 和 &lt;code&gt;page.locator()&lt;/code&gt; 方法，您现在拥有可靠的脚本，而无需添加任意且不可靠的超时函数.&lt;/p&gt;&#xA;&lt;h2 id=&#34;tip-3-think-about-the-asynchronous-execution-of-your-test&#34;&gt;提示 3：考虑测试的异步执行&lt;/h2&gt;&#xA;&lt;p&gt;编写浏览器测试时，评估和考虑非常重要：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;下一个函数调用&lt;em&gt;真正&lt;/em&gt;在做什么？&lt;/li&gt;&#xA;&lt;li&gt;从脚本的角度来看发生了什么？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;k6 浏览器 API 专门设计为与 &lt;a href=&#34;https://playwright.dev/docs/api/class-playwright&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Playwright API 兼容对于 NodeJS&lt;/a&gt;。然而，Grafana k6 并不在 NodeJS 环境中运行，而是使用 &lt;a href=&#34;https://go.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Go&lt;/a&gt; 并使用&lt;a href=&#34;https://github.com/grafana/sobek&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;索贝克&lt;/a&gt;。为什么知道这一点很重要？ &lt;br/&gt;&#xA;&lt;br/&gt;&#xA;k6 随着时间的推移不断发展，浏览器检查的两个重要里程碑是引入 &lt;a href=&#34;https://github.com/grafana/k6/pull/2228&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;事件循环&lt;/a&gt; 并实现所有 &lt;a href=&#34;https://github.com/grafana/k6/releases/tag/v0.52.0&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;浏览器 API 作为异步方法&lt;/a&gt;。在大多数情况下，编写浏览器测试应该与编写原生 JavaScript，但可能存在一些难以识别和识别的不透明“陷阱”。&lt;/p&gt;&#xA;&lt;h3 id=&#34;the-native-k6check-does-not-support-passing-asynchronous-functions&#34;&gt;原生 k6/check 不支持传递异步函数&lt;/h3&gt;&#xA;&lt;p&gt;因为所有 k6 浏览器 API 方法都是异步的，所以编写这样的检查感觉很直观：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;从 &#39;k6&#39; 导入 { check }&#xA;...&#xA;// 不起作用&#xA;等待检查(page.locator(`h1`), {&#xA;&#39;文本内容正确&#39;: async(lo) =&gt; (await lo.textContent()) === &#39;预期内容&#39;&#xA;})&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;但是，这不起作用，因为本机 k6 检查是同步的。要解决此问题，您可以将原生 k6 检查替换为我们的 &lt;a href=&#34;https://jslib.k6.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;jslib.k6.io&lt;/a &gt; 版本。它是兼容的，并且可以在您现有的任何测试中直接替换。&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;从“https://jslib.k6.io/k6-utils/1.6.0/index.js”导入 { check }&#xA;...&#xA;// 有效！&#xA;等待检查(page.locator(`h1`), {&#xA;&#39;文本内容正确&#39;: async(lo) =&gt; (await lo.textContent()) === &#39;预期内容&#39;&#xA;})&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;dont-use-pagewaitfornavigation-unnecessarily&#34;&gt;不必要时不要使用 page.waitForNavigation&lt;/h3&gt;&#xA;&lt;p&gt;在编写浏览器测试时，了解网站的底层架构非常重要。您使用的是单页面应用程序 (SPA)，例如 React、Angular 或 Vue，还是传统的多页面应用程序 (MPA)？或者可能是两者的混合？&lt;/p&gt;&#xA;&lt;p&gt;您可能期望只要浏览器中的 URL 发生变化，就会触发页面加载事件 - 但如果您的应用程序是 SPA，它会使用浏览器的 &lt;a href=&#34;https://developer.mozilla.org /en-US/docs/Web/API/History/pushState&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;history.pushState&lt;/a&gt; 方法，因此 &lt;code&gt;page.waitForNavigation()&lt;/code&gt;功能呼叫永远不会解决，阻止其余的 of 执行脚本，并最终超时。对于下面的下一个“陷阱”，这一点尤其需要注意。&lt;/p&gt;&#xA;&lt;h3 id=&#34;k6-doesnt-know-what-is-in-the-script-until-it-is-encountered&#34;&gt;k6 在遇到脚本之前并不知道脚本中有什么内容&lt;/h3&gt;&#xA;&lt;p&gt;如果您的脚本执行中途中止，则在此之后声明和执行的任何检查、日志或自定义指标都不会被注册。如果您已将脚本设置为仅在达到检查失败阈值时才会失败，则测试结果中将会出现误报。 &lt;em&gt;注意：请参阅下面的额外提示来解决此问题。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;have-a-bots-eye-view&#34;&gt;拥有“机器人之眼”视图&lt;/h3&gt;&#xA;&lt;p&gt;如果您采用上面的 &lt;strong&gt;performance-app-renders.js&lt;/strong&gt; 脚本并更改 h1 的定位器，该脚本现在会失败！&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;const perfH1Text = 等待页面&#xA;.locator(`#pageContent h1`)&#xA;.textContent()&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;没有任何日志表明出了什么问题——只是检查失败。如果我们从人的角度总结一下步骤：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;转到您的 Grafana 网址&lt;/li&gt;&#xA;&lt;li&gt;填写用户名，填写密码，然后点击&lt;strong&gt;登录&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;等待页面导航&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;点击&lt;strong&gt;菜单&lt;/strong&gt;开关，展开&lt;strong&gt;测试与合成&lt;/strong&gt;，点击&lt;strong&gt;性能&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;检查h1的文本内容是否为“Performance”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;如果您在浏览器中按照说明进行操作，请打开 devTools 控制台并运行 &lt;code&gt;document.querySelector(&#39;#pageContent h1`).textContent&lt;/code&gt; — 它会返回“Performance!”那么这是怎么回事？&lt; /p&gt;&#xA;&lt;p&gt;问题在于，执行脚本的机器人“思考”、“看到”和“评估”事物的速度比人类快得多。如果您在脚本开头添加此&lt;a href=&#34;https://gist.github.com/ckbedwell/c18142bb8aa20c7ba9133a8a53304e74&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;有用的调试代码段&lt;/a&gt;并打开devTools 控制台中，执行将暂停，以便调查发生了什么。&lt;/p&gt;&#xA;&lt;图&#xA;类=“图包装图包装__lightbox w-100p”&#xA;样式=“最大宽度：1999px；”&#xA;itemprop =“关联媒体”&#xA;项目范围=“”&#xA;itemtype =“http://schema.org/ImageObject”&#xA;&gt;&#xA;&lt;一&#xA;类=“灯箱链接”&#xA;href=&#34;/media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png&#34;&#xA;itemprop=“内容网址”&#xA;&gt;&#xA;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;类=“延迟加载”&#xA;数据-src =“/media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png”data-srcset =“/media/blog/5-提示-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=320 320w，/media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=550 550w， /media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=750 750w，/media/blog/5-tips-for -k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=900 900w，/media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=1040 1040w， /media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=1240 1240w, /media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;使用 Chrome DevTools 调试 Grafana 的屏幕截图。屏幕分为两部分，左侧显示 Grafana，突出显示 0 宽度和 0 高度的 h1，右侧是显示的元素面板h1 不包含文本内容。”&#xA;宽度=“1999”&#xA;高度=“716”&#xA;/&gt;&#xA;&lt;无脚本&gt;&#xA;&lt;图片&#xA;src =“/media/blog/5-tips-for-k6-browser-tests/5-tips-for-k6-browser-tests-debugging-snippet.png”&#xA;alt=&#34;使用 Chrome DevTools 调试 Grafana 的屏幕截图。屏幕分为两部分，左侧显示 Grafana，突出显示 0 宽度和 0 高度的 h1，右侧是显示 DOM 树的元素面板。h1 包含无文字内容。”&#xA;宽度=“1999”&#xA;高度=“716”&#xA;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&#xA;&lt;/a&gt;&#xA;&lt;/图&gt;&#xA;&lt;p&gt;在等待插件加载的一瞬间，Grafana 在屏幕上渲染了一个空的 h1，满足我们正在寻找的选择器，因此它开始执行检查比较：h1 的文本内容是不是“性能”，因此检查和我们的测试最终失败。&lt;/p&gt;&#xA;&lt;p&gt;这让我们很好地进入了第四个技巧......&lt;/p&gt;&#xA;&lt;h2 id=&#34;tip-4-write-unique-and-durable-selectors-for-pagelocator&#34;&gt;提示 4：为 page.locator() 编写唯一且持久的选择器&lt;/h2&gt;&#xA;&lt;p&gt;我们有一个关于&lt;a href=&#34;/docs/k6/latest/using-k6-browser/recommished-practices/select-elements/&#34;&gt;选择元素&lt;/a&gt;的最佳实践指南，其中基本思想是创建持久的选择器：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对于页面来说是唯一的（如果不是整个旅程，如果可能的话，如上面的错误所示！）&lt;/li&gt;&#xA;&lt;li&gt;保证稳定&lt;/li&gt;&#xA;&lt;li&gt;在脚本中传达意图&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;如果您要编写一个浏览器脚本来测试 Grafana 的登录，那么在检查文档对象模型 (DOM) 时，您将在用户名输入字段中看到与此类似的标记：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/s平移&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;&lt;input class=&#34;css-8tk2dk-input-input&#34; name=&#34;user&#34; id=&#34;:r0:&#34; autocapitalize=&#34;none&#34; placeholder=&#34;电子邮件或用户名&#34; data-testid=&#34;data-testid 用户名输入字段&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;输入元素有几个属性。要决定适合使用哪个，您可以为每个分配一个分数：&lt;/p&gt;&#xA;&lt;表&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;strong&gt;页面唯一&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;strong&gt;价值稳定&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;strong&gt;传达意图&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;&lt;strong&gt;总计&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;自动大写&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;❌&#xA;&lt;/td&gt;&#xA;&lt;td&gt;❌&#xA;&lt;/td&gt;&#xA;&lt;td&gt;❌&#xA;&lt;/td&gt;&#xA;&lt;td&gt;0&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;类别&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;❌&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;1&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;id&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;2&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;姓名&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;TD&gt;2.5&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;占位符&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;⚠️&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;TD&gt;2.5&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&lt;strong&gt;数据测试id&lt;/strong&gt;&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;✅&#xA;&lt;/td&gt;&#xA;&lt;td&gt;3&#xA;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/表&gt;&#xA;&lt;p&gt;&lt;em&gt;❌=0，⚠️=0.5，✅=1&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;可以立即排除&lt;strong&gt;自动大写&lt;/strong&gt;属性。不能保证它对于页面来说是唯一的，它与您尝试选择的内容无关，并且在查看测试脚本时很难推断您的意图。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;可以考虑&lt;strong&gt;class&lt;/strong&gt;属性。当使用标签管理器工具或其他基本记录器充当选择器时，通常会使用它。但是使用这个属性有几个问题：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;无法保证它对于页面来说是唯一的（在本例中，它不是唯一的，因为密码输入共享相同的类）&lt;/li&gt;&#xA;&lt;li&gt;它们通常被开发人员视为实现细节，并且可能会发生更改（尤其是在此处的情况下，其中值是由构建过程生成的）&lt;/li&gt;&#xA;&lt;li&gt;即使它是独特且稳定的，它也会使您的测试脚本更难以维护。其他人阅读您的脚本如何能够推断您正在选择用户名输入？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;id&lt;/strong&gt; 属性应该是唯一的，但在本例中它与 &lt;strong&gt;class&lt;/strong&gt; 存在类似的问题。熟悉 React API 的人会认识到此 ID 是由 &lt;a href=&#34;https://react.dev/reference/react/useId&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt; 生成的useId&lt;/code&gt; 钩子&lt;/a&gt;，因此，如果开发人员要在页面上的其他位置使用此钩子来获取在输入字段之前呈现的组件，则此 &lt;strong&gt;id&lt;/strong&gt; 值将会发生变化，因此不保证是稳定的选择器。在这种情况下，它也不行阅读测试脚本时没有任何意义，所以不是一个好的候选者。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;名称&lt;/strong&gt;和&lt;strong&gt;占位符&lt;/strong&gt;属性具有相似的权重，两者都是在测试脚本中传达含义的稳定选择器的有力候选者。还有一些额外的注意事项：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果您想重复使用测试脚本来测试不同语言的页面，则必须在脚本中更新占位符选择器。&lt;/li&gt;&#xA;&lt;li&gt;如果您尚未与开发和/或内容团队沟通，他们可能不知道您刚刚为他们注册的测试合同。他们将来可能有充分的理由更新这两个属性的值并且不知道您的脚本即将崩溃。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;这给我们带来了&lt;strong&gt;data-testid。&lt;/strong&gt;它在 DOM 中是唯一的，它在脚本中传达意图，并且它与其他团队有一个隐含的合同，其唯一目的是用于测试脚本，因此它将保持稳定。这是您应该使用的理想选择器。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;page.locator(`[data-testid=&#34;data-testid 用户名输入字段&#34;]`)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;此过程适用于具有合适属性或标记良好的 ID 或类的元素。您可以通过添加元素的标签名称来加强和进一步阐明意图。&lt;/p&gt;&#xA;&lt;p&gt;但是如果您没有任何有用的属性，会发生什么情况？有两个选项可以组合使用：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;查找节点的父树以找到合适的选择器。如果使用此方法，重要的是不要编写与 DOM 结构过于紧密相关的选择器。与 DOM 紧密耦合的选择器很脆弱并且容易崩溃，因为它们与开发人员的实现联系得太紧密，而开发人员的实现可能随时发生变化。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;// 好&#xA;page.locator(`#产品详细信息 h2`)&#xA;// 坏的&#xA;page.locator(`#产品详细信息 &gt;部分 &gt; div &gt; div.arbitaryClass &gt; h2`)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;ol开始=“2”&gt;&#xA;&lt;li&gt;将 xpath 选择器与 &lt;code&gt;text()&lt;/code&gt; 节点测试结合使用。 &lt;code&gt;page.locator()&lt;/code&gt; 支持 xpath 选择器，&lt;a href=&#34;https://devhints.io/xpath&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;有很多非常强大的选择器&lt;/a&gt;。强烈建议根据文本内容定位元素，因为它将测试脚本与实现细节分离，并专注于编写定位器，就像用户在页面上查找内容一样。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;page.locator(`//h2[text()=&#34;产品标题&#34;]`)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;tip-5-use-threshold-options-or-the-fail-method-to-ensure-you-get-the-right-results&#34;&gt;提示 5：使用阈值选项或fail() 方法确保您获得正确的结果&lt;/h2&gt;&#xA;&lt;p&gt;每当您编写测试时，您都应该考虑您的接受标准以将其视为成功。但是我们如何定义浏览器测试的通过或失败？&lt;/p&gt;&#xA;&lt;p&gt;k6 提供了一个&lt;a href=&#34;/docs/k6/latest/using-k6/checks/&#34;&gt;检查 API&lt;/a&gt;，您可以在脚本执行的任何时刻定义某些内容是否通过或失败。检查可以很简单，例如确认 API 请求是否返回成功的状态代码、元素是否具有正确的文本内容，或者用户旅程是否花费了可接受的时间。&lt;/p&gt;&#xA;&lt;p&gt;您可能认为脚本中任何失败的检查都意味着整个测试应该失败，但如果这是默认行为，则大多数负载测试都会导致失败。在编写 k6 脚本时，您应该确定它在什么上下文中运行（即，它是性能测试还是综合监控？），以及正在使用什么场景、VU 和迭代。&lt;/p&gt;&#xA;&lt;p&gt;建立这些详细信息后，您可以确定考虑成功和失败的适当方法、要添加的检查以及适当的阈值 - 例如，此检查是警告，还是我们测试的严重失败？&lt; /p&gt;&#xA;&lt;p&gt;这里有两个示例，一个用于性能测试，一个用于综合监控，它们支持 k6 浏览器模块并演示如何使用检查 API。&lt;/p&gt;&#xA;&lt;h4 id=&#34;grafana-k6-performance-tests-using-the-browser-module&#34;&gt;使用浏览器模块进行 Grafana k6 性能测试&lt;/h4&gt;&#xA;&lt;p&gt;k6 性能测试是一种定义任意数量的场景、VU 和迭代的通用方法。在下面的示例中，我们有一个演示电子商务网站我们正在使用混合测试来记录如果我们推荐的产品 API 意外处于重负载下会发生什么情况。我们的推荐引擎是应用程序的重要组成部分，但它并不像确保客户可以下订单和结账那样对业务至关重要。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;推荐-product-spike.js&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;从“k6/browser”导入 { browser }&#xA;从“k6/http”导入http&#xA;从“https://jslib.k6.io/k6-utils/1.6.0/index.js”导入{检查}&#xA;const Product_IDS = __ENV.Product_IDS&#xA;const HAS_SOME_LEEWAY = `警告`&#xA;const SUPER_IMPORTANT_CHECK = `关键`&#xA;const LESS_IMPORTANT = `信息`&#xA;导出常量选项= {&#xA;场景：{&#xA;用户界面：{&#xA;执行者：“constant-vus”，&#xA;持续时间：“1m”，&#xA;视：3，&#xA;选项： {&#xA;浏览器：{&#xA;类型：“铬”，&#xA;},&#xA;},&#xA;执行：“结账完成”，&#xA;},&#xA;“spike-api”：{&#xA;执行者：“ramping-vus”，&#xA;起始VU：0，&#xA;阶段：[&#xA;{ 持续时间：“10 秒”，目标：10 }，&#xA;{ 持续时间：“40 秒”，目标：30 }，&#xA;{ 持续时间：“10 秒”，目标：10 }，&#xA;],&#xA;优雅的RampDown：“10秒”，&#xA;执行：“spikeApi”，&#xA;},&#xA;},&#xA;阈值：{&#xA;[`检查{重要性：${SUPER_IMPORTANT_CHECK}}`]：[“rate==1.0”]，&#xA;[`检查{重要性：${HAS_SOME_LEEWAY}}`]：[“比率&gt; = 0.95”]，&#xA;[`检查{重要性：${LESS_IMPORTANT}}`]：[“率&gt; = 0.9”]，&#xA;},&#xA;}&#xA;导出函数spikeApi() {&#xA;常量随机产品 =&#xA;product_ids[math.floor(math.random() * product_ids.length)]&#xA;const res = http.get(`https://otel-demo.field-eng.grafana.net/api/recommendations?productIds=${randomProduct}`)&#xA;查看（&#xA;资源，&#xA;{&#xA;“状态代码为 200”：(r) =&gt; r.status === 200,&#xA;},&#xA;{ 重要性：HAS_SOME_LEEWAY }&#xA;）&#xA;}&#xA;导出异步函数 checkoutCompletion() {&#xA;const context = 等待 browser.newContext()&#xA;const page = 等待 context.newPage()&#xA;等待 page.goto(`https://otel-demo.field-eng.grafana.net/`)&#xA;wait page.locator(`//*[text()=&#34;去购物&#34;]`).click()&#xA;等待 Promise.all([&#xA;页&#xA;.locator(`//*[text()=&#34;Starsense Explorer 折射望远镜&#34;]`)&#xA;。点击（），&#xA;page.waitForNavigation(),&#xA;]）&#xA;// 不太重要的检查&#xA;等待 checkForRecommendedProducts(页面, `产品页面`)&#xA;等待 Promise.all([&#xA;page.locator(`//*[text()=&#34; 添加到购物车&#34;]`).click(),&#xA;page.waitForNavigation(),&#xA;]）&#xA;// 不太重要的检查&#xA;等待 checkForRecommendedProducts(页面, `发货单`)&#xA;等待 Promise.all([&#xA;page.locator(`//*[text()=&#34;下订单&#34;]`).click(),&#xA;page.waitForNavigation(),&#xA;]）&#xA;// 超级重要的检查&#xA;等待检查（&#xA;页面.定位器(`h1`),&#xA;{&#xA;”已到达下订单页面&#34;: async (lo) =&gt;&#xA;(await lo.textContent()) === &#34;您的订单已完成！&#34;,&#xA;},&#xA;{ 重要：SUPER_IMPORTANT_CHECK }&#xA;）&#xA;// 不太重要的检查&#xA;等待 checkForRecommendedProducts(页面, `订单确认`)&#xA;等待页面.close()&#xA;}&#xA;常量 TWO_SECONDS = 2000&#xA;异步函数 checkForRecommendedProducts(page, step) {&#xA;尝试 {&#xA;等待页面&#xA;.定位器(&#xA;`[data-cy=&#34;recommendation-list&#34;] [data-cy=&#34;product-card&#34;]:first-of-type`&#xA;）&#xA;.waitFor({ 超时: TWO_SECONDS })&#xA;} 捕获 (e) {&#xA;等待 page.screenshot({ 路径: `./screenshots/${step}.png` })&#xA;} 最后 {&#xA;const 卡 = 等待页面。$$(`[data-cy=&#34;product-card&#34;]`)&#xA;console.log(步骤, 卡.长度)&#xA;查看（&#xA;卡片长度，&#xA;{&#xA;&#34;显示4个推荐商品&#34;: (length) =&gt; length === 4,&#xA;},&#xA;{&#xA;重要性：LESS_IMPORTANT，&#xA;}&#xA;）&#xA;}&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;在上面的脚本中，有两种场景可以构成混合测试：&lt;code&gt;spike-api&lt;/code&gt;，它使用k6的&lt;a href=&#34;/docs/k6/latest/javascript -api/k6-http/&#34;&gt;&lt;code&gt;http&lt;/code&gt; 协议&lt;/a&gt; 用于模拟流量峰值，以及 &lt;code&gt;user-checkout&lt;/code&gt; 这是模拟结账流程的浏览器测试。共有三项检查，它们标有重要键和不同的值，具体取决于我们要求检查的成功程度。&lt;/p&gt;&#xA;&lt;p&gt;在 &lt;code&gt;options&lt;/code&gt; 对象中，为每个键/值对设置了一个阈值，该阈值将指示测试是通过还是失败。阈值中未使用 &lt;code&gt;abortOnFail&lt;/code&gt; 选项，因为如果测试过早结束，有价值的数据将会丢失。如果开始发生故障，了解 API 的故障程度以及浏览器前端发生的情况将很有用。&lt;/p&gt;&#xA;&lt;h4 id=&#34;synthetic-monitoring-check&#34;&gt;综合监控检查&lt;/h4&gt;&#xA;&lt;p&gt;如果您正在运行综合监控浏览器检查，则它始终是一种场景，包含一个 VU 和一次迭代。综合监控目前不支持选项声明中的 &lt;code&gt;thresholds&lt;/code&gt; 对象（但即将推出！），因此您必须使用显式 &lt;a href=&#34;/docs/k6/latest/javascript- api/k6/fail/&#34;&gt;&lt;code&gt;fail()&lt;/code&gt; 方法&lt;/a&gt; 让探测器知道检查失败。&lt;/p&gt;&#xA;&lt;p&gt;综合监控浏览器检查的行为与 k6 检查不同，因为它们主要根据您对正常运行时间的定义来评估您的测试是否通过或失败。对于非脚本化综合监控检查，您可以在创建检查期间在其自己的步骤中使用一组断言来定义正常运行时间，但由于浏览器检查是作为脚本编写的，因此您需要明确标记要计入定义的内容正常运行时间。&lt;/p&gt;&#xA;&lt;p&gt;如果您采用上面的&lt;strong&gt;recommended-product-spike-test.js&lt;/strong&gt;脚本并提取结账流程场景，则只需进行少量修改即可满足综合监控浏览器检查的需求。通过在检查中添加 &lt;code&gt;fail()&lt;/code&gt; 方法，确认是否到达订单确认页面后，综合监控探测器现在将了解什么构成正常运行时间故障并正确报告。&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;if (&#xA;!(等待检查(page.locator(`h1`), {&#xA;&#34;已到达下订单页面&#34;: async (lo) =&gt; (await lo.textContent()) === &#34;您的订单已完成！&#34;,&#xA;}））&#xA;）{&#xA;失败（`未到达订单完成页面`）&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;我们可以将不太重要的检查留在脚本中，而无需向它们添加显式失败，因为这只是我们从此设置中获得的好处。我们甚至可以使用 &lt;a href=&#34;/products/cloud/alerting/&#34;&gt;Grafana Alerting&lt;/a&gt; 添加自定义警报，以了解推荐的产品是否呈现不一致。&lt;/p&gt;&#xA;&lt;p&gt;综合监控浏览器检查的这种灵活性意味着您只需一次执行即可设置主要和次要断言，从而节省时间和金钱！&lt;/p&gt;&#xA;&lt;h2 id=&#34;bonus-tip-dont-just-account-for-the-happy-path&#34;&gt;额外提示：不要只考虑“快乐”路径&lt;/h2&gt;&#xA;&lt;p&gt;在任何类型的测试中，一个臭名昭著的错误就是假设它们总是会成功。然而，测试的真正价值在于，当不可避免的故障发生时，测试能否很好地告诉我们他们遇到的问题？&lt;/p&gt;&#xA;&lt;p&gt;如果您查看 &lt;strong&gt;recommend-product-spike.js&lt;/strong&gt; 中的结账场景，就会发现调用了多个 &lt;code&gt;page.locator().click()&lt;/code&gt; 函数。如果我们的应用程序出现错误并且这些内容无法正确显示且选择器失败，会发生什么情况？&lt;/p&gt;&#xA;&lt;p&gt;每次迭代都会等待&lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/locator/click/#clickoptions&#34;&gt;默认 30 秒&lt;/a&gt;，然后超时并引发失败。这对于我们的测试来说可能是一个问题，因为它会“阻塞”VU 30 秒，然后结束迭代并重新开始。问题的第一部分是这个测试只运行一分钟，所以如果它提早遇到问题，我们会丢失很多潜在的迭代以及它们将生成的所有附加数据。&lt;/p&gt;&#xA;&lt;p&gt;有两种方法可以解决这个问题：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;为每个 &lt;code&gt;page.locator().click()&lt;/code&gt;（以及类似方法）提供各自适当的超时&lt;/li&gt;&#xA;&lt;li&gt;使用 &lt;a href=&#34;/docs/k6/latest/javascript-api/k6-browser/page/setdefaulttimeout/#setdefaulttimeouttimeout&#34;&gt;&lt;code&gt;page.setDefaultTimeout() 在页面上设置默认超时值&lt;/代码&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;每种方法都有其优点和缺点，由您决定哪个最适合您。&lt;/p&gt;&#xA;&lt;p&gt;上面的技巧三概述了第二个问题：测试执行被停止，从未遇到过确认订单页面是否已到达的检查，并且测试指标中未报告此故障。解决方案是在我们的 &lt;code&gt;try / finally&lt;/code&gt; 语句中添加一个 catch 块：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;JavaScript&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;尝试 {&#xA;...&#xA;} 捕获 (e) {&#xA;控制台.错误(e)&#xA;等待页面.screenshot({&#xA;路径：`./screenshots/${__VU}_${__ITER}-failure.png`,&#xA;})&#xA;查看（&#xA;无效的，&#xA;{&#xA;&#34;已到达下订单页面&#34;: false,&#xA;},&#xA;{ 重要：SUPER_IMPORTANT_CHECK }&#xA;）&#xA;} 最后 {&#xA;...&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;em&gt;注意：最好的做法是截取屏幕截图，以使调试会话更加轻松。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果任何执行导致未处理的异常，综合监控会报告正常运行时间失败，因此，如果您添加此 catch 块，请记住重新抛出错误（如果您更喜欢默认日志记录，则使用您自己的日志记录）或调用 k6 的 &lt;code &gt;fail()&lt;/code&gt; 方法。&lt;/p&gt;&#xA;&lt;h2 id=&#34;summing-up&#34;&gt;总结&lt;/h2&gt;&#xA;&lt;p&gt;k6 浏览器 API 是一款多功能工具，可帮助监控网站的性能和可靠性。通过上述提示，您可以在编写测试时确保紧密的反馈循环，同时保持它们的适应性和无错误。最终，这些最佳实践将使您更轻松地识别潜在的性能问题并优化您的最终用户体验。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Grafana Cloud 是开始浏览器测试的最简单方法。借助 &lt;a href=&#34;/products/cloud/k6/&#34;&gt;Grafana Cloud k6&lt;/a&gt;，您可以轻松地将前端和后端测试结合到单个基于云的测试中。 &lt;a href=&#34;/products/cloud/synthetic-monitoring/&#34;&gt;Grafana Cloud Synthetic Monitoring&lt;/a&gt; 支持对生产环境中的关键旅程进行持续监控。我们提供慷慨的永久免费套餐和针对每个用例量身定制的计划。立即免费注册 (&lt;a href=&#34;/auth/sign-up/create-user?pg=plugins&amp;plcmt=grafana-synthetic-monitoring-app&amp;redirectPath=synthetic-monitoring&#34;&gt;Grafana Cloud k6&lt;/a&gt; 或 &lt;a href =&#34;/auth/sign-up/create-user?pg=plugins&amp;plcmt=grafana-synthetic-monitoring-app&#34;&gt;Grafana 云综合监控&lt;/a&gt;）！&lt;/em&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>