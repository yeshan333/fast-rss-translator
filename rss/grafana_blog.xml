<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Grafana Labs blog on Grafana Labs</title>
    <link>/blog/index.xml</link>
    <description>Recent content in Grafana Labs blog on Grafana Labs</description>
    <item>
      <title>【ObservabilityCON on the Road: Registration is now live!】在路上的可观察性：注册现在已经存在了！</title>
      <link>https://grafana.com/blog/2025/08/06/observabilitycon-on-the-road-registration-is-now-live/</link>
      <description>【&lt;p&gt;This fall, observability enthusiasts from around the world will gather in London for &lt;a href=&#34;/events/observabilitycon/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;ObservabilityCON 2025&lt;/a&gt;, our flagship observability event, taking place 7-9 October.&lt;/p&gt;&#xA;&lt;p&gt;But for those of you who can’t make it to London (we’ll miss you!), we have good news: &lt;strong&gt;registration is officially open for &lt;a href=&#34;/events/observabilitycon-on-the-road/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;ObservabilityCON on the Road&lt;/a&gt;&lt;/strong&gt;, a one-day version of ObservabilityCON 2025 that we’re hosting in the following cities this year (with more locations and dates to be announced!):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;/events/observabilitycon-on-the-road/2025/sao-paulo/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;São Paulo on November 4&lt;/a&gt; (presented in Portuguese)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;/events/observabilitycon-on-the-road/2025/washington-dc/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Washington, D.C. on November 5&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;/events/observabilitycon-on-the-road/2025/dallas/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Dallas on November 18&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;/events/observabilitycon-on-the-road/2025/madrid/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Madrid on November 18&lt;/a&gt; (presented in Spanish)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/events/observabilitycon-on-the-road/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Register now&lt;/a&gt; at our early bird rate to get 30% off the standard ticket price. Quantities are limited, and tickets will go fast, so reserve your spot today!&lt;/p&gt;&#xA;&lt;div class=&#34;btn-row &#34;&gt;&lt;a class=&#34;btn btn--primary &#34; href=&#34;https://grafana.com/events/observabilitycon-on-the-road/?pg=blog&amp;amp;plcmt=body-txt&#34; rel=&#34;noopener noreferrer&#34;&gt;Register for ObservabilityCON on the Road&lt;/a&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;what-to-expect-at-observabilitycon-on-the-road&#34;&gt;What to expect at ObservabilityCON on the Road&lt;/h2&gt;&#xA;&lt;p&gt;All of the things &lt;a href=&#34;/blog/2023/02/09/inside-observabilitycon-i-picked-up-so-much-practical-information/&#34;&gt;the community loves most about ObservabilityCON&lt;/a&gt; — Technical deep dives! Live demos! Ask the Experts booth! — will be included in these special one-day events.&#xA;More specifically, ObservabilityCON on the Road is a great opportunity to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Explore the latest AI features and Grafana Cloud solutions for deeper insights into application performance, improved end user experiences, and faster root cause analysis.&lt;/li&gt;&#xA;&lt;li&gt;Attend technical sessions to sharpen your skills and get actionable advice to advance your observability strategy.&lt;/li&gt;&#xA;&lt;li&gt;Hear real-world success stories and lessons learned from observability leaders in your region.&lt;/li&gt;&#xA;&lt;li&gt;Connect with Grafana Labs experts to get answers to even your toughest observability questions.&lt;/li&gt;&#xA;&lt;li&gt;Participate in hands-on demos, connect with peers at the networking reception, and more. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;For more details, please check out the full ObservabilityCON on the Road agenda &lt;a href=&#34;/events/observabilitycon-on-the-road/#cities&#34;&gt;for your city&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;We look forward to seeing you there!&lt;/p&gt;】&lt;p&gt;今年秋天，来自世界各地的可观察性发烧友将在伦敦聚集&lt;a href =“/events/observabilitycon/？pg = blog＆plcmt = body-txt = body-txt”&gt; specterability con 2025 &lt;/a&gt;，我们的旗舰可观察性事件，于10月7-9日举行。&lt;/p&gt; 9。&#xA;&lt;p&gt;But for those of you who can’t make it to London (we’ll miss you!), we have good news: &lt;strong&gt;registration is officially open for &lt;a href=&#34;/events/observabilitycon-on-the-road/?pg=blog&amp;plcmt=body-txt&#34;&gt;ObservabilityCON on the Road&lt;/a&gt;&lt;/strong&gt;, a one-day version of ObservabilityCON 2025 that we’re hosting in the following cities this year (with more宣布的位置和日期！）：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt; &lt;strong&gt; &lt;a href =“/events/observabilitycon-on-the-the-the-the-the-the-the-the-the-the-the-the-paulo/？pg = blog＆plcmt = body-txt = body-txt”&gt;SãoPaulo，11月4日&#xA;&lt;li&gt; &lt;strong&gt; &lt;a href =“/events/observabilityCon-on-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-dc/？pg = blog＆plcmt = body-txt = body-txt”&gt; Washington，D.C.，11月5日，&lt;/a&gt; &lt;/a&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt; &lt;a href =“/events/observabilitycon-on-the-the-the-the-the-the-the-the-the-the-the-the-the-the-dallas/？pg = blog＆plcmt = body-txt = body-txt”&gt; dallas在11月18日&lt;/a&gt; &lt;/a&gt; &lt;/strong&gt; &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt; &lt;a href =“/events/observabilitycon-on-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the/？pg = blog＆plcmt = body-txt = body-txt”&gt; 11月18日&lt;/a&gt;（以西班牙语呈现）&lt;/strong&gt; &lt;/strong&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;a href =“/events/observabilitycon-on-the-the-the-the-the-the/？pg = blog＆plcmt = body-txt”&gt;立即注册&lt;/a&gt;以我们的早期鸟类速度获得标准票价30％的折扣。数量有限，门票会很快，所以今天就保留您的位置！&lt;/p&gt;&#xA;&lt;div class=&#34;btn-row &#34;&gt;&lt;a class=&#34;btn btn--primary &#34; href=&#34;https://grafana.com/events/observabilitycon-on-the-road/?pg=blog&amp;plcmt=body-txt&#34; rel=&#34;noopener noreferrer&#34;&gt;Register for ObservabilityCON on the Road&lt;/a&gt;&lt;/div&gt;&#xA;&lt;h2 id =“ what-to-to at-at-at-at-ar observabilitycon-on-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the-the the observability con in the Road &lt;/h2&gt;&gt;&#xA;&lt;p&gt;所有内容&lt;a href =“/blog/2023/02/09/inside-observibalycon-i picked-i挑选了如此卑鄙的实践信息/“”&gt;社区最喜欢观察力&lt;/a&gt;  - 技术深度潜水！现场演示！询问专家展位！ - 将包括在这些特殊的一日活动中。&#xA;更具体地说，道路上的可观察性是一个很好的机会：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;探索最新的AI功能和Grafana云解决方案，以深入了解应用程序性能，改进的最终用户体验和更快的根本原因分析。&lt;/li&gt;&#xA;&lt;li&gt;参加技术会议以提高您的技能并获得可行的建议以提高您的可观察性策略。&lt;/li&gt;&#xA;&lt;li&gt;听到现实世界的成功故事和从您所在地区的可观察性领导者中学到的经验教训。&lt;/li&gt;&#xA;&lt;li&gt;与Grafana Labs专家建立联系，以获取甚至最棘手的可观察性问题的答案。&lt;/li&gt;&#xA;&lt;li&gt;参加动手演示，与网络接待处的同伴联系，等等。 &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;有关更多详细信息，请查看道路议程上的完整可观察性con &lt;a href =“/events/events/observability con-on-the-the-the-the-the-the-the-the-the-the-the-the-the-cities”&gt; for您的城市&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;我们期待在那里与您见面！&lt;/p&gt;</description>
      <pubDate>Wed, 06 Aug 2025 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Deletion protection in Grafana Cloud: a simple way to safeguard your observability stack】Grafana Cloud中的删除保护：一种保护您的可观察性堆栈的简单方法</title>
      <link>https://grafana.com/blog/2025/08/07/deletion-protection-in-grafana-cloud-a-simple-way-to-safeguard-your-observability-stack/</link>
      <description>【&lt;p&gt;We&amp;rsquo;ve all had that &amp;ldquo;uh-oh&amp;rdquo; moment. You press &lt;strong&gt;Enter&lt;/strong&gt; and your blood runs cold, as you realize you just deleted something critical.&lt;/p&gt;&#xA;&lt;p&gt;For engineering teams, this type of disaster takes many forms. For example, maybe you used a &lt;code&gt;DELETE&lt;/code&gt; statement without a &lt;code&gt;WHERE&lt;/code&gt; clause to delete a row in a database, and accidentally deleted all of them instead.&lt;/p&gt;&#xA;&lt;p&gt;To protect you from the accidental deletion of critical resources in Grafana Cloud, we&amp;rsquo;re introducing a feature called &lt;strong&gt;&lt;a href=&#34;/docs/grafana-cloud/developer-resources/api-reference/cloud-api/?pg=blog&amp;amp;plcmt=body-txt/#update-stack&#34;&gt;deletion protection&lt;/a&gt;&lt;/strong&gt;. In this blog post, we’ll take a closer look at what deletion protection is, how to enable it, and how to integrate it within your infrastructure as code workflows.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-deletion-protection-in-grafana-cloud&#34;&gt;What is deletion protection in Grafana Cloud?&lt;/h2&gt;&#xA;&lt;p&gt;Deletion protection is a safeguard that prevents the unintended removal of your Grafana Cloud stack, meaning all the managed observability solutions used within your Grafana Cloud account.&lt;/p&gt;&#xA;&lt;p&gt;Once enabled, it blocks deletion attempts across multiple channels, including:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/auth/sign-in&#34;&gt;The Grafana Cloud UI (via grafana.com)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/grafana/terraform-provider-grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;The Grafana Terraform provider&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/grafana/crossplane-provider-grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;The Grafana Crossplane provider&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/grafana/grafana-ansible-collection&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;The Grafana Ansible collection&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;If a stack is protected, any deletion attempts will be explicitly rejected until deletion protection is manually disabled. For example, if you enable deletion protection via the UI, Terraform will reject stack deletions unless you explicitly remove the protection first.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-to-enable-deletion-protection&#34;&gt;How to enable deletion protection&lt;/h2&gt;&#xA;&lt;p&gt;Starting last month, all newly created Grafana Cloud stacks will have deletion protection enabled by default when created through &lt;a href=&#34;/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;grafana.com&lt;/a&gt;, and supported versions of Terraform, Crossplane, and Ansible.&lt;/p&gt;&#xA;&lt;p&gt;This means that you must explicitly disable the protection before a stack can be deleted.&lt;/p&gt;&#xA;&lt;p&gt;To manually toggle the deletion protection feature on and off, you have a few options:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Use the Grafana Cloud UI&lt;/strong&gt;: Navigate to your stack settings and check the deletion protection check box to enable it. Uncheck the box to disable the feature.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1357x447/1b0b2ad271/deletion-protection-ui.png&#34;&#xA;alt=&#34;&#34;/&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Use the Grafana Cloud API&lt;/strong&gt;: Perform a &lt;code&gt;GET&lt;/code&gt; request using the &lt;a href=&#34;/docs/grafana-cloud/developer-resources/api-reference/cloud-api/?pg=blog&amp;amp;plcmt=body-txt/#update-stack&#34;&gt;Cloud API&lt;/a&gt; and update the value of the &lt;code&gt;deleteProtection&lt;/code&gt; property. A value of &lt;code&gt;true&lt;/code&gt; enables the feature, and a value of &lt;code&gt;false&lt;/code&gt; disables it.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Use one of the infrastructure as code methods&lt;/strong&gt; described below.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;deletion-protection-infrastructure-as-code-support&#34;&gt;Deletion protection: infrastructure as code support&lt;/h2&gt;&#xA;&lt;p&gt;At Grafana Labs, we believe automation is essential for robust, predictable, and reliable outcomes within your observability workflows. Grafana Cloud supports infrastructure as code by providing several tools and integrations that allow you to manage and provision Grafana resources declaratively, using code.&lt;/p&gt;&#xA;&lt;p&gt;Deletion protection is fully supported in our infrastructure as code integrations for &lt;a href=&#34;/docs/grafana-cloud/developer-resources/infrastructure-as-code/terraform/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Terraform&lt;/a&gt;, &lt;a href=&#34;/docs/grafana-cloud/developer-resources/infrastructure-as-code/?pg=blog&amp;amp;plcmt=body-txt/#grafana-crossplane-provider&#34;&gt;Crossplane&lt;/a&gt;, and &lt;a href=&#34;/docs/grafana-cloud/developer-resources/infrastructure-as-code/?pg=blog&amp;amp;plcmt=body-txt/#grafana-ansible-collection&#34;&gt;Ansible&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;terraform-support&#34;&gt;Terraform support&lt;/h3&gt;&#xA;&lt;p&gt;Starting from provider version &lt;a href=&#34;https://github.com/grafana/terraform-provider-grafana/releases/tag/v4.0.0&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;v4.0.0&lt;/a&gt;, all newly created Grafana Cloud stacks have &lt;code&gt;delete_protection&lt;/code&gt; enabled by default in the stack resource.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;resource &amp;#34;grafana_cloud_stack&amp;#34; &amp;#34;my_stack&amp;#34; {&#xA;provider = grafana.cloud&#xA;delete_protection = true&#xA;name = &amp;#34;&amp;lt;stack-name&amp;gt;&amp;#34;&#xA;slug = &amp;#34;&amp;lt;stack-name&amp;gt;&amp;#34;&#xA;region_slug = &amp;#34;&amp;lt;region&amp;gt;&amp;#34; # Example &amp;#34;us&amp;#34;,&amp;#34;eu&amp;#34; etc&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;crossplane-support&#34;&gt;Crossplane support&lt;/h3&gt;&#xA;&lt;p&gt;Like Terraform, the  &lt;code&gt;deleteProtection&lt;/code&gt; flag will be enabled by default on all newly created Grafana Cloud stacks, starting from supported Crossplane versions &lt;a href=&#34;https://github.com/grafana/crossplane-provider-grafana/releases/tag/v0.31.0&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;v0.31.0&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;# Cloud Stack&#xA;apiVersion: cloud.grafana.crossplane.io/v1alpha1&#xA;kind: Stack&#xA;metadata:&#xA;name: my-stack&#xA;spec:&#xA;forProvider:&#xA;slug: &amp;#39;crossplanetest&amp;#39;&#xA;name: &amp;#39;crossplanetest&amp;#39;&#xA;regionSlug: &amp;#34;us&amp;#34;&#xA;deleteProtection: true&#xA;providerConfigRef:&#xA;name: grafana-cloud-provider&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;ansible-support&#34;&gt;Ansible support&lt;/h3&gt;&#xA;&lt;p&gt;Consistent with Terraform and Crossplane, the &lt;code&gt;delete_protection&lt;/code&gt; property is enabled (true) by default for newly created Grafana Cloud stacks, starting from supported Ansible versions &lt;a href=&#34;https://github.com/grafana/grafana-ansible-collection/releases/tag/6.0.2&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;6.0.2.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;- name: Using grafana collection&#xA;tasks:&#xA;- name: Create a Grafana Cloud stack&#xA;grafana.grafana.cloud_stack:&#xA;name: &amp;lt;name&amp;gt;&#xA;stack_slug: &amp;lt;stack-slug&amp;gt;&#xA;org_slug: &amp;lt;org-slug&amp;gt;&#xA;cloud_api_key: &amp;#34;&amp;lt;api-key&amp;gt;&amp;#34;&#xA;region: eu&#xA;delete_protection: true&#xA;state: present&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;protection-by-default&#34;&gt;Protection by default&lt;/h3&gt;&#xA;&lt;p&gt;To better protect your Grafana Cloud stack, Terraform and Crossplane providers supporting the new &lt;code&gt;delete_protection&lt;/code&gt; flag will default to enabling protection, even if the flag isn&amp;rsquo;t explicitly set.&lt;/p&gt;&#xA;&lt;p&gt;This means that if you do not disable it, it will be enabled for you.&lt;/p&gt;&#xA;&lt;p&gt;This default protection will also occur when you upgrade from a version of a provider that does not support deletion protection to a version that does. When you upgrade the Terraform or Crossplane provider or the Ansible collection, drift will be detected because the desired state does not contain the deletion protection flag (and it defaults to &lt;code&gt;true&lt;/code&gt;), whereas the stack in the backend has it set to &lt;code&gt;false&lt;/code&gt; (for backwards compatibility).&lt;/p&gt;&#xA;&lt;p&gt;The recommended action is to apply the changes to remove the drift and get your stack protected against accidental deletions, but if you do not want deletion protection, you can set the flag to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-to-learn-more&#34;&gt;How to learn more &lt;/h2&gt;&#xA;&lt;p&gt;We hope this new capability in Grafana Cloud empowers you with greater flexibility to safely manage your resources.&lt;/p&gt;&#xA;&lt;p&gt;To learn more, please check out our &lt;a href=&#34;/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#delete-stack&#34;&gt;technical docs&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case. &lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;我们都有那个“ UH-oh”时刻。您按下&lt;strong&gt;输入&lt;/strong&gt;，当您意识到自己只是删除了一些关键的东西时，您的血液会流冷。&lt;/p&gt;&#xA;&lt;p&gt;对于工程团队来说，这种类型的灾难采取了多种形式。例如，也许您使用&lt;code&gt; delete &lt;/code&gt;语句而没有&lt;code&gt;其中&lt;/code&gt;子句在数据库中删除一行，然后意外地删除了所有这些。&lt;/p&gt;&#xA;&lt;p&gt;为了保护您免受Grafana Cloud中关键资源的意外删除，我们引入了一个名为&lt;strong&gt; &lt;a href =“/docs/docs/docs/docs/docs/grafana-cloud/developer-resources/api-reference/api-reference/api-reference/cloud-api/？pg = bogl＆plcmt＆plcmt = body-txt/＃dealtion stack”&gt; deletion &lt;/strong &lt;/strong的功能。在这篇博客文章中，我们将仔细研究什么是删除保护，如何启用它以及如何将其集成到您的基础架构中作为代码工作流程。&lt;/p&gt;&#xA;&lt;h2 id =“什么是d-is-deletion in-dretection-in-grafana-cloud”&gt;什么是Grafana Cloud中的缺失保护？&lt;/h2&gt;&#xA;&lt;p&gt;删除保护是一种防止您的Grafana Cloud堆栈的保障，这意味着您的Grafana Cloud帐户中使用的所有托管可观察性解决方案。&lt;/p&gt;&#xA;&lt;p&gt;启用后，它会阻止删除跨多个通道的尝试，包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt; &lt;a href =“/auth/登录”&gt; grafana cloud UI（通过grafana.com）&lt;/a&gt; &lt;/li&gt;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/grafana/terraform-provider-grafana” target =“ _ blank” rel =“ noopener noreferrer”&gt; grafana terraform提供者&lt;/a&gt; &lt;/li&gt;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/grafana/crossplane-provider-grafana” target =“ _ blank” rel =“ noopener noreferrer”&gt; grafana crossplane provider &lt;/a&gt; &lt;/li&gt;&#xA;&lt;li&gt; &lt;a href =“ https://github.com/grafana/grafana-sible-collection” target =“ _ blank” rel =“ noopener noreferrer”&gt; grafana ansible andsible Collection &lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;如果保护了堆栈，则将明确拒绝任何删除尝试，直到手动删除保护为止。例如，如果您通过UI启用删除保护，则Terraform将拒绝堆栈删除，除非您首先明确删除保护。&lt;/p&gt;&#xA;&lt;h2 id =“操作方法启用删除保护”&gt;如何启用删除保护&#xA;&lt;p&gt;从上个月开始，当通过&lt;a href =“/？pg = blog＆plcmt = body-txt”创建时，所有新创建的Grafana Cloud stack默认都将启用删除保护。&#xA;&lt;p&gt;这意味着您必须在删除堆栈之前明确禁用保护。&lt;/p&gt;&#xA;&lt;p&gt;要手动打开和关闭删除保护功能，您有一些选择：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt; &lt;strong&gt;使用Grafana Cloud UI &lt;/strong&gt;：导航到堆栈设置，然后选中“删除保护”复选框以启用它。取消选中盒子以禁用该功能。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1357x447/1b0b2ad271/deletion-protection-ui.png”&#xA;alt =“”/&gt; &lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt; &lt;strong&gt;使用Grafana Cloud API &lt;/strong&gt;：执行A &lt;code&gt; gET &lt;/code&gt;使用&lt;a href =“/docs/docs/grafana-cloud/developer-resources/api-reference/cloud-api/？pg = blog＆plcmt = body-txt/＃update-stack&gt; cloud-api &lt;/a&gt;并更新&lt;code&gt; deleteprotection &lt;/code&gt;属性。 &lt;code&gt; true &lt;/code&gt;启用该功能的值，&lt;code&gt; false &lt;/code&gt;的值都可以禁用它。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt; &lt;strong&gt;将其中一种基础架构用作代码方法&lt;/strong&gt; &lt;/strong&gt; &lt;/p&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;在&#xA;&lt;p&gt;在Grafana Labs，我们认为自动化对于观察力工作流程中的稳健，可预测和可靠的结果至关重要。 Grafana Cloud通过提供几种工具和集成来支持基础架构作为代码&#xA;&lt;p&gt;删除保护在我们的基础架构中完全支持&lt;a href =“/docs/docs/grafana-cloud/developer-resources/infrastructure-as-as-code/terraform/？pg = blog＆plcmt = bogl＆plcmt = body-txt = body-txt = body-txt”&gt; href =“/docs/grafana-cloud/developer-resources/infrastructure-as-code/？pg = blog＆plcmt = body-txt/＃grafana-crossplane-provider”&gt; crossplane&gt; crossplane &lt;/a&gt;，and &lt;a href =“/docs/grafana-cloud/developer-resources/infrastructure-as-code/？pg = blog＆plcmt = body-txt/＃grafana-sible-collection”&gt; ansible &lt;/a&gt;。&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;H3 ID =“ Terraform-Support”&gt; Terraform支持&lt;/h3&gt;&#xA;&lt;p&gt;从提供者版本&lt;a href =“ https://github.com/grafana/grafana/terraform-provider-grafana/releases/tag/v4.0.0” target =“ _ black” rel =“ noopener noreferrer”&gt; v4.0.0.0.0.0.0.0&gt; v4.0.0 &lt;/a&gt;，所有新创建的grafana coreption &lt;/enerabled noblet &lt;/enserable &lt;/ensy noblet &lt;/nopertion&gt;堆栈资源。&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;资源“ grafana_cloud_stack”“ my_stack” {&#xA;提供者= grafana.cloud&#xA;delete_protection = true&#xA;名称=“ &lt;stack-name&gt;”&#xA;slug =“ &lt;stack-name&gt;”&#xA;region_slug =“ &lt;区域&gt;”＃示例“我们”，“欧盟”等&#xA;} &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;H3 ID =“交叉平面 - 支持”&gt; CrossPlane Support &lt;/h3&gt;&#xA;&lt;p&gt;像Terraform一样，&lt;code&gt; deleteprotection &lt;/code&gt;标志将默认在所有新创建的Grafana Cloud堆栈上启用，从受支持的交叉平面版本&lt;a href =” https://github.com/grafafana/grafafana/grafafana/crossplane-prosplane-provider-grafider-grafider-grafase-grafase-grafana/release/releas/releas/tag/tag/tag/trell = no = no = 0.31.31.31.31.0.31.0.0.31.0.0.0.0.31; noreferrer“&gt; v0.31.0 &lt;/a&gt;。&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）“ @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;＃云堆栈&#xA;apiversion：cloud.grafana.crossplane.io/v1alpha1&#xA;善良：堆栈&#xA;元数据：&#xA;名称：my-stack&#xA;规格：&#xA;forprovider：&#xA;slug：“ crossplanetest”&#xA;名称：“ crossplanetest”&#xA;ZOUMIONSLUG：“我们”&#xA;删除：正确&#xA;提供者Conconfigref：&#xA;名称：grafana-cloud-provider &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h3 id =“ ansible-support”&gt; Ansible支持&lt;/h3&gt;&#xA;&lt;p&gt;与Terraform和Crossplane一致，&lt;code&gt; delete_protection &lt;/code&gt;属性默认为新创建的Grafana Cloud Stacks，从支持的Ansible版本开始rel =“ noopener noreferrer”&gt; 6.0.2。&lt;/a&gt; &lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;  - 名称：使用Grafana Collection&#xA;任务：&#xA; - 名称：创建Grafana Cloud堆栈&#xA;grafana.grafana.cloud_stack：&#xA;名称：&lt;名称&gt;&#xA;stack_slug：&lt;stack-slug&gt;&#xA;org_slug：&lt;org-slug&gt;&#xA;cloud_api_key：“ &lt;Api-key&gt;”&#xA;地区：欧盟&#xA;delete_protection：true&#xA;状态：现在&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h3 id =“ by-default”&gt;默认保护&lt;/h3&gt;&#xA;&lt;p&gt;更好地保护您的Grafana Cloud堆栈，Terraform和跨平面提供商，支持新的&lt;code&gt; delete_protection &lt;/code&gt;标志将默认设置为保护，即使标志未明确设置。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt;这意味着，如果您不禁用它，它将为您启用。&lt;/p&gt;&#xA;&lt;p&gt;当您从不支持DELETION PROCVORTION的版本的版本中升级到可以使用的版本时，也将发生此默认保护。当您升级Terraform或Crossplane提供商或Ansible Collection时，将检测到漂移，因为所需的状态不包含删除保护标志（并且默认为&lt;code&gt; true &lt;/code&gt;），而后端中的堆栈设置为&lt;code&gt; false&gt; false &lt;/code&gt;（forfals code&gt; forsewards Compatibility）。&#xA;&lt;p&gt;建议的操作是应用更改以删除漂移并保护堆栈免受意外删除的保护，但是如果您不希望删除保护，则可以将标志设置为&lt;code&gt; false&gt; false &lt;/code&gt;。&lt;/p&gt;。&#xA;&lt;H2 ID =“ How-To-Loarn-More”&gt;如何了解更多&lt;/h2&gt;&#xA;&lt;p&gt;我们希望Grafana Cloud的新功能能够使您更加灵活地安全管理您的资源。&lt;/p&gt;&#xA;&lt;p&gt;要了解更多信息，请检查out我们的&lt;a href =“/docs/grafana-cloud/developer-resources/api-reference/cloud-api/＃delete-stack”&gt;技术文档&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt; &lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。 &lt;a href =“//auth/ign-up/create-user/？pg = blog＆plcmt = body-txt”&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 07 Aug 2025 13:47:58 +0000</pubDate>
    </item>
    <item>
      <title>【AI in observability at Grafana Labs: Making observability easy and accessible for everyone】在Grafana Labs的可观察性AI：使每个人都可以轻松易访问可观察性</title>
      <link>https://grafana.com/blog/2025/08/14/ai-in-observability-at-grafana-labs-making-observability-easy-and-accessible-for-everyone/</link>
      <description>【&lt;p&gt;Did you know that observability has been around for more than six decades? It all goes back to a Hungarian-American inventor named Rudolf Kálmán who thought about how external outputs could measure the internal state of a machine. &lt;/p&gt;&#xA;&lt;p&gt;Kálmán wrote about monitoring single-input single-output systems, but our demands are very different today. We need to observe monoliths, microservices, clusters, pods, regions, and many more. And we collect metrics, logs, traces, and profiles to better understand what’s going on in our stacks.&lt;/p&gt;&#xA;&lt;p&gt;Yes, a lot has changed over the years, but even bigger changes may be on the horizon thanks to AI. In fact, we&amp;rsquo;ve come to believe that AI is proving to be more than just a trend in observability: It will likely be integral to how organizations keep their systems fully operational going forward.&lt;/p&gt;&#xA;&lt;p&gt;In this blog, we&amp;rsquo;ll share more about our perspective on the role of AI in observability and how that&amp;rsquo;s influencing the tools we&amp;rsquo;re building to help our users.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-were-building-ai-based-observability-solutions-for-different-audiences&#34;&gt;How we&amp;rsquo;re building AI-based observability solutions for different audiences&lt;/h2&gt;&#xA;&lt;p&gt;Large organizations often collect petabytes of information every month, which can create a real challenge for the engineers that have to sift through all that data, especially if they&amp;rsquo;ve just been alerted to an incident they need to work through. That&amp;rsquo;s why AI and observability are a perfect match—it’s all about data. &lt;/p&gt;&#xA;&lt;p&gt;If you look at a typical observability workflow, it&amp;rsquo;s clearly not a singular task. It’s actually lots of different tasks (working through an incident, doing routine check-ups, building dashboards, etc.) that are chained together to produce an outcome. Some of these tasks are suitable for AI, while others are better left to people. This is because some tasks are easily automatable, while others are highly ambiguous. For those ambiguous tasks, AI can only take on a support role today—not an executing one. &lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s also important to understand that every user has different needs. AI allows us to deliver a more personalized experience than ever, so we want to double down on delivering experiences that matter to you.&lt;/p&gt;&#xA;&lt;p&gt;When we put this all this together, we think about AI in observability across four fields:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Operators:&lt;/strong&gt; Operators use Grafana mainly to manage their stacks. This also includes people who use Grafana outside the typical scope of observability (for general business intelligence topics, personal hobbies, etc.).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Developers:&lt;/strong&gt; Developers use Grafana on a technical level. They instrument applications, send data to Grafana, and check traces. They might also check profiles to improve their applications and stacks.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Interactive:&lt;/strong&gt; For us, &amp;ldquo;interactive&amp;rdquo; means that a user triggers an action, which then allows AI to jump in and provide assistance.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Proactive:&lt;/strong&gt; In this case, AI is triggered by events (like a change to the codebase) or periodic occurrences (like once-a-day events).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;These dimensions of course overlap. For example, users can be operators &lt;em&gt;and&lt;/em&gt; developers if they use different parts of Grafana for different things. The same goes for interactive and proactive workflows—they can intertwine with each other, and some AI features might have interactive &lt;em&gt;and&lt;/em&gt; proactive triggers. &lt;/p&gt;&#xA;&lt;p&gt;Ultimately, these dimensions help us target different experiences within Grafana. For example, we put our desired outcomes into a matrix that includes those dimensions (like the one below), and we use that as a guide to build features that cater to different audiences. &lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1920x1440/0594e5f9ae/grafana-labs-ai-matrix.png&#34;&#xA;alt=&#34;Flowchart with two columns: Operators and Developers. Lists tasks for each, divided into Interactive and Proactive triggers.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;When applying this model, it’s also important to keep in mind that transitions between these experiences are fluid. As we just discussed, there is overlap, so some features might even touch on all four dimensions. &lt;/p&gt;&#xA;&lt;h2 id=&#34;open-source-and-ai-is-a-super-power&#34;&gt;Open source and AI is a super power&lt;/h2&gt;&#xA;&lt;p&gt;Grafana is an open source project that has evolved significantly over time—just like many of our other open source offerings. Our work, processes, and the public contributions in &lt;a href=&#34;https://community.grafana.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;our forums&lt;/a&gt; and in our &lt;a href=&#34;https://github.com/grafana/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GitHub repositories&lt;/a&gt; are available to anyone.&lt;/p&gt;&#xA;&lt;p&gt;And since AI needs data to train on, Grafana and our other OSS projects have a natural edge over closed source software. Most models are at least partially trained on our public resources, so we don&amp;rsquo;t have to worry about feeding them context and extensive documentation to &amp;ldquo;know&amp;rdquo; how Grafana works.&lt;/p&gt;&#xA;&lt;p&gt;As a result, the models that we&amp;rsquo;ve used have shown promising performance almost immediately. There&amp;rsquo;s no need to explain what PromQL or &lt;a href=&#34;/docs/loki/latest/query/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;LogQL&lt;/a&gt; are—the models already know about them and can even write queries with them.&lt;/p&gt;&#xA;&lt;p&gt;This is yet another reason why we value open source: sharing knowledge openly benefits not just us, but the entire community that builds, documents, and discusses observability in public.  &lt;/p&gt;&#xA;&lt;h2 id=&#34;keeping-humans-in-the-loop&#34;&gt;Keeping humans in the loop&lt;/h2&gt;&#xA;&lt;p&gt;With proper guidance, AI can take on tedious, time-consuming tasks. But AI sometimes struggles to connect all the dots, which is why engineers should ultimately be empowered to take the appropriate remediation actions. That&amp;rsquo;s why we&amp;rsquo;ve made &amp;ldquo;human-in-the-loop&amp;rdquo; (HITL) a core part of our design principles. &lt;/p&gt;&#xA;&lt;p&gt;HITL is a concept by which AI systems are designed to be supervised and controlled by people—in other words, the AI assists you. A good example of this is &lt;a href=&#34;/docs/grafana-cloud/machine-learning/assistant/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Assistant&lt;/a&gt;. It uses a chat interface to connect you with the AI, and the tools under the hood integrate deeply with Grafana APIs. This combination lets you unlock the power of AI without losing any control.&lt;/p&gt;&#xA;&lt;p&gt;As AI systems progress, our perspective here might shift. Basic capabilities might need little to no supervision, while more complex tasks will still benefit from human involvement. Over time, we expect to hand more work off to LLM agents, freeing people to focus on more important matters.&lt;/p&gt;&#xA;&lt;h2 id=&#34;talk-about-outcomes-not-tasks-or-roles&#34;&gt;Talk about outcomes, not tasks or roles&lt;/h2&gt;&#xA;&lt;p&gt;When companies talk about building AI to support people, oftentimes the conversation revolves around supporting tasks or roles. We don&amp;rsquo;t think this is the best way to look at it. &lt;/p&gt;&#xA;&lt;p&gt;Obviously, most tasks and roles were defined before there was easy access to AI, so it only makes sense that AI was never integral to them. The standard workaround these days is to layer AI on top of those roles and tasks. This can certainly help, but it&amp;rsquo;s also short-sighted. AI also allows us to redefine tasks and roles, so rather than trying to box users and ourselves into an older way of thinking, we want to build solutions by looking at outcomes first, then working backwards.&lt;/p&gt;&#xA;&lt;p&gt;For example, a desired outcome could be quick access to any dashboard you can imagine. To achieve this, we first look at the steps a user takes to reach this outcome today. Next, we define the steps AI could take to support this effort.&lt;/p&gt;&#xA;&lt;p&gt;The current way of doing it is a good place to start, but it’s certainly not a hard line we must adhere to. If it makes sense to build another workflow that gets us to this outcome faster and also feels more natural, we want to build that workflow and not be held back by steps that were defined in a time before AI.&lt;/p&gt;&#xA;&lt;h2 id=&#34;ai-is-here-to-stay&#34;&gt;AI is here to stay&lt;/h2&gt;&#xA;&lt;p&gt;AI is here to stay, be it in observability or in other areas of our lives. At Grafana Labs, it&amp;rsquo;s one of our core priorities—something we see as a long-term investment that will ensure observability becomes as easy and accessible as possible.&lt;/p&gt;&#xA;&lt;p&gt;In the future, we believe AI will be a democratizing tool that allows engineers to utilize observability without becoming experts in it first. A first step for this is Grafana Assistant, our context-aware agent that can build dashboards, write queries, explain best practices and more. &lt;/p&gt;&#xA;&lt;p&gt;We&amp;rsquo;re excited for you to try out our assistant to see how it can help improve your observability practices. (You can even use it to &lt;a href=&#34;/blog/2025/08/14/ai-for-grafana-onboarding-get-your-teams-started-quicker-with-grafana-assistant/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;help new users get onboarded to Grafana faster&lt;/a&gt;!) To get started, either click on the Grafana Assistant symbol in the top-right corner of the Grafana Cloud UI, or find it in the menu on the main navigation on the left side of the page.&lt;/p&gt;&#xA;&lt;p&gt;And if you want to learn more about how we&amp;rsquo;re applying these principles in practice, sign up for &lt;a href=&#34;/events/observabilitycon/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;ObservabilityCON 2025&lt;/a&gt; in London or an &lt;a href=&#34;/events/observabilitycon-on-the-road/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;ObservabilityCON on the Road&lt;/a&gt; near you for all our upcoming AI-powered observability announcements.&lt;/p&gt;&#xA;&lt;h2 id=&#34;faq-grafana-cloud-ai--grafana-assistant&#34;&gt;FAQ: Grafana Cloud AI &amp;amp; Grafana Assistant&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;What is Grafana Assistant?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Grafana Assistant is an AI-powered agent in Grafana Cloud that helps you query, build, and troubleshoot faster using natural language. It simplifies common workflows like writing PromQL, LogQL, or TraceQL queries, and creating dashboards — all while keeping you in control. Learn more in our blog post.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;How does Grafana Cloud use AI in observability?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Grafana Cloud’s AI features support engineers and operators throughout the observability lifecycle—from detection and triage to explanation and resolution. We focus on explainable, assistive AI that enhances your workflow.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;What problems does Grafana Assistant solve?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Grafana Assistant helps reduce toil and improve productivity by enabling you to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Write and debug queries faster&lt;/li&gt;&#xA;&lt;li&gt;Build and optimize dashboards&lt;/li&gt;&#xA;&lt;li&gt;Investigate issues and anomalies&lt;/li&gt;&#xA;&lt;li&gt;Understand telemetry trends and patterns&lt;/li&gt;&#xA;&lt;li&gt;Navigate Grafana more intuitively&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;What is Grafana Labs&amp;rsquo; approach to building AI into observability?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;We build around:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Human-in-the-loop interaction for trust and transparency&lt;/li&gt;&#xA;&lt;li&gt;Outcome-first experiences that focus on real user value&lt;/li&gt;&#xA;&lt;li&gt;Multi-signal support, including correlating data across metrics, logs, traces, and profiles&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Does Grafana OSS have AI capabilities?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;By default, Grafana OSS doesn’t include built-in AI features found in Grafana Cloud, but you can enable AI-powered workflows using the&lt;a href=&#34;/docs/grafana-cloud/machine-learning/llm/&#34;&gt; &lt;/a&gt;&lt;a href=&#34;/docs/grafana-cloud/machine-learning/llm/&#34;&gt;LLM app plugin&lt;/a&gt;. This open source plugin connects to providers like OpenAI or Azure OpenAI securely, allowing you to generate queries, explore dashboards, and interact with Grafana using natural language. It also provides a &lt;a href=&#34;https://github.com/grafana/mcp-grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;MCP (Model Context Protocol) server&lt;/a&gt;, which allows you to grant your favorite AI application access to your Grafana instance. &lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Why isn’t Assistant open source?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Grafana Assistant runs in Grafana Cloud to support enterprise needs and manage infrastructure at scale. We’re committed to OSS and continue to invest heavily in it—including open sourcing tools like the &lt;a href=&#34;/docs/grafana-cloud/machine-learning/llm/&#34;&gt;LLM plugin&lt;/a&gt; and &lt;a href=&#34;https://github.com/grafana/mcp-grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;MCP server&lt;/a&gt;, so the community can build their own AI-powered experiences into Grafana OSS.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Does Grafana Cloud’s AI capabilities take actions on its own?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Today, we focus on human-in-the-loop workflows that keep engineers in control while reducing toil. But as AI systems mature and prove more reliable, some tasks may require less oversight. We&amp;rsquo;re building a foundation that supports both: transparent, assistive AI now, with the flexibility to evolve into more autonomous capabilities where it makes sense.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case. &lt;strong&gt;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Sign up for free now&lt;/a&gt;&lt;/strong&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;您是否知道可观察性已经存在了六十年？这一切都可以追溯到一个名叫RudolfKálmán的匈牙利裔美国发明家，他考虑了外部产出如何测量机器的内部状态。 &lt;/p&gt;&#xA;&lt;p&gt;kálmán写了有关监视单输入单输出系统的文章，但我们的要求今天大不相同。我们需要观察整体，微服务，簇，豆荚，区域等。我们收集指标，日志，痕迹和配置文件，以更好地了解堆栈中发生的情况。&lt;/p&gt;&#xA;&lt;p&gt;是的，这些年来发生了很多变化，但是由于AI，更大的变化可能会出现。实际上，我们开始相信，AI不仅仅是可观察性的趋势：这对于组织如何使其系统保持全面运行可能是不可或缺的。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;p&gt;在此博客中，我们将分享有关AI在可观察性中的作用以及如何影响我们正在构建的工具来帮助我们的用户的观点。&lt;/p&gt;&#xA;&lt;h2 id =“如何基于ai-ai的观察性 - 差异性审核的态度”&gt;我们如何为不同的受众构建基于AI的可观察性解决方案&lt;/h2&gt;&#xA;&lt;p&gt;大型组织通常每个月收集大量的信息，这可能会给必须筛选所有数据的工程师带来真正的挑战，尤其是如果他们只是被警告他们需要进行的事件。这就是为什么AI和可观察性是完美匹配的原因 - 这就是与数据有关的。 &lt;/p&gt;&#xA;&lt;p&gt;如果您查看典型的可观察性工作流程，这显然不是一项奇异的任务。实际上，这是许多不同的任务（通过事件进行工作，进行例行检查，建筑仪表板等），这些任务被链接在一起以产生结果。其中一些任务适合AI，而其他任务则最好留给人们。这是因为某些任务很容易自动化，而其他任务则高度模棱两可。对于那些模棱两可的任务，AI只能扮演今天的支持角色，而不是执行任务。 &lt;/p&gt;&#xA;&lt;p&gt;也必须了解每个用户都有不同的需求。 AI允许我们提供比以往任何时候都更具个性化的体验，因此我们想加倍介绍对您重要的经验。&lt;/p&gt;&#xA;&lt;p&gt;当我们将所有这些放在一起时，我们会考虑四个领域的可观察性AI：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt; &lt;strong&gt;运营商：&lt;/strong&gt;操作员主要使用Grafana来管理其堆栈。这还包括在典型可观察性范围之外使用Grafana的人（对于一般商业智能主题，个人爱好等）。&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;开发人员：&lt;/strong&gt;开发人员在技术层面上使用Grafana。他们仪器应用程序，将数据发送到Grafana，然后检查跟踪。他们还可能检查配置文件以改进其应用程序和堆栈。&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt; Interactive：&lt;/strong&gt;对我们来说，“互动”是指用户触发动作，然后所有这些操作OWS AI跳入并提供帮助。&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;主动：&lt;/strong&gt;在这种情况下，AI是由事件（例如更改代码库）或周期性事件触发的（例如一日事件）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这些尺寸当然重叠。例如，如果用户将Grafana的不同部分用于不同事物，则可以是运营商&lt;em&gt;和&lt;/em&gt;开发人员。交互式和主动的工作流也是如此 - 它们可以彼此交织在一起，并且某些AI功能可能具有交互式&lt;em&gt;和&lt;/em&gt;主动触发器。 &lt;/p&gt;&#xA;&lt;p&gt;最终，这些维度有助于我们针对Grafana内的不同体验。例如，我们将所需的结果放入包含这些维度的矩阵中（如下面的维度），并将其用作建立适合不同受众的功能的指南。 &lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1920X1440/0594E5F9AE/GRAFANA-LABS-AI-AI-MATRIX.PNG”&#xA;alt =“带有两个列的流程图：操作员和开发人员。列出每个列的任务，分为交互式和主动触发器。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;应用此模型时，请记住，这些经验之间的过渡是流动的。正如我们刚刚讨论的那样，存在重叠，因此某些功能甚至可能会触及所有四个维度。 &lt;/p&gt;&#xA;&lt;H2 ID =“开源和iis-a-a-super-power”&gt;开源，AI是超级力量&lt;/h2&gt;&#xA;&lt;p&gt; Grafana是一个开源项目，随着时间的流逝，它已经大大发展了，就像我们许多其他开源产品一样。我们的工作，过程和公共贡献在&lt;a href =“ https://community.grafana.com/” target =“ _ blank” rel =“ noopener noreferrer”&gt;我们的论坛&lt;/a&gt;以及我们的&lt;a href =“存储库&lt;/a&gt;任何人都可以使用。&lt;/p&gt;&#xA;&lt;p&gt;并且由于AI需要进行培训的数据，因此Grafana和我们的其他OSS项目比封闭的源软件具有自然优势。大多数模型至少对我们的公共资源进行了部分培训，因此我们不必担心为他们提供上下文和广泛的文档来“知道” Grafana的工作方式。&lt;/p&gt;&#xA;&lt;p&gt;因此，我们使用的模型几乎立即显示出了有希望的性能。无需解释什么promql或&lt;a href =“/doc/loki/loki/loki/最终/query/？pg = blog＆plcmt = body-txt”&gt; logql &lt;/a&gt;是 - 模型已经知道它们，甚至可以与他们一起编写查询。&lt;/p&gt;&gt; &lt;/p&gt;&#xA;&lt;p&gt;这是我们重视开源的另一个原因：共享知识不仅受益，而是整个建立，文件和讨论公众可观察性的整个社区。  &lt;/p&gt;&#xA;&lt;h2 id =“在循环中保持人类”&gt;将人类保持在循环中&lt;/h2&gt;&#xA;&lt;p&gt;在适当的指导下，AI可以承担繁琐的，耗时的任务。但是AI有时会努力连接所有点，这就是为什么最终应授权工程师采取适当的补救措施的原因。这就是为什么我们做了“荷马”n-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-in-poce部分。&lt;/p&gt;&#xA;&lt;p&gt; hitl是一个概念，通过该概念，AI系统被设计为由人监督和控制的概念，换句话说，AI为您提供了帮助。一个很好的例子是&lt;a href =“/docs/grafana-cloud/Machine-learning/Assistant/？pg = blog＆plcmt = body-txt”&gt; grafana Assistans &lt;/a&gt;。它使用聊天界面将您与AI连接起来，并且引擎盖下的工具与Grafana API深入集成。这种组合使您可以在不失去任何控制的情况下解锁AI的功能。&lt;/p&gt;&#xA;&lt;p&gt;随着AI系统的进展，我们这里的观点可能会发生变化。基本功能可能几乎不需要监督，而更复杂的任务仍然会受益于人类参与。随着时间的流逝，我们希望将更多的工作交给LLM代理商，使人们专注于更重要的事情。&lt;/p&gt;&#xA;&lt;H2 ID =“ Talk-about-out-out-not-not-tasks-or op”&gt;谈论结果，而不是任务或角色&lt;/h2&gt;&#xA;&lt;p&gt;当公司谈论建立AI以支持人们时，对话通常围绕着支持任务或角色。我们认为这不是查看它的最佳方法。 &lt;/p&gt;&#xA;&lt;p&gt;显然，大多数任务和角色是在容易访问AI之前定义的，因此AI从来都不是它们不可或缺的。如今，标准的解决方法是将AI分层在这些角色和任务之上。这肯定可以有所帮助，但也是短视的。 AI还允许我们重新定义任务和角色，因此我们不想将用户和我们自己纳入较旧的思维方式，而是希望通过首先查看结果，然后向后工作来构建解决方案。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;例如，预期的结果可以快速访问您可以想象的任何仪表板。为了实现这一目标，我们首先研究用户今天达到此结果的步骤。接下来，我们定义了AI可以为支持这项工作所采取的步骤。&lt;/p&gt;&#xA;&lt;p&gt;当前这样做的方式是一个不错的起点，但这当然不是我们必须坚持的一条艰难的路线。如果建立另一个使我们更快地达到这个结果并感到自然的工作流程有意义，我们希望构建该工作流程，而不是通过在AI之前定义的步骤阻止。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;h2 id =“ ai-is-here-here-here-to tay”&gt; ai在这里留下来&lt;/h2&gt;&#xA;&lt;p&gt; ai将留在这里，无论是可观察的还是我们生活的其他领域。在Grafana Labs，这是我们的核心优先事项之一 - 我们认为这是一项长期投资，可确保可观察性变得尽可能容易且易于访问。&lt;/p&gt;&#xA;&lt;p&gt;将来，我们认为AI将成为一种民主化工具，它使工程师可以使用可观察性而不首先成为专家。这样做的第一步是Grafana Assistant，这是我们的上下文感知代理，可以构建仪表板，写疑问，解释最佳实践等等。 &lt;/p&gt;&#xA;&lt;p&gt;我们很高兴您尝试我们的助手，看看它如何帮助改善您的可观察性实践。 （您甚至可以将其使用为&lt;a href =“/blog/2025/08/14/ai-for-for-for-grafana-onboarding-get-your-teAms-Started-Quicker-with-grafana--助手/？&#xA;&lt;p&gt;，如果您想了解更多有关我们如何在实践中应用这些原则的信息，请注册&lt;a href =“/events/events/observabilitycon/？pg = blog＆plcmt = body-txt = body-txt&#39;&gt; sisservabilityconcon 2025 &lt;/a&gt;在伦敦或&lt;a a &lt;a a href =“ href =”在您即将发布的所有AI驱动可观察性公告附近。&lt;/p&gt;&#xA;在&#xA;&lt;p&gt; &lt;strong&gt;什么是Grafana助手？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; Grafana Assistant是Grafana Cloud中的AI驱动代理商，可帮助您使用自然语言查询，构建和对解决方向进行更快的排除。它简化了常见的工作流，例如编写Promql，LogQL或TraceQl查询，并创建仪表板，同时使您可以控制。在我们的博客文章中了解更多信息。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt; Grafana Cloud如何使用AI可观察性？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; Grafana Cloud的AI在整个可观察性生命周期中为工程师和操作员提供了支持 - 从检测和分类到解释和解决方案。我们专注于可解释的辅助AI，以增强您的工作流程。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt; Grafana助手解决了哪些问题？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; Grafana助手通过使您能够：&lt;/p&gt;来帮助降低劳力和提高生产率&#xA;&lt;ul&gt;&#xA;&lt;li&gt;更快地写和调试查询&lt;/li&gt;&#xA;&lt;li&gt;构建和优化仪表板&lt;/li&gt;&#xA;&lt;li&gt;调查问题和异常&lt;/li&gt;&#xA;&lt;li&gt;了解遥测趋势和模式&lt;/li&gt;&#xA;&lt;li&gt;更直观地导航grafana &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;strong&gt; Grafana Labs将AI构建为可观察性的方法是什么？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt;我们周围建立：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;信任和透明度的人类互动&lt;/li&gt;&#xA;&lt;li&gt;关注实际用户价值的结果优先经验&lt;/li&gt;&#xA;&lt;li&gt;多信号支持，包括将跨指标，日志，痕迹和配置文件的数据相关联&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;strong&gt; Grafana OSS是否具有AI功能？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt;默认情况下，Grafana OSS不包含Grafana Cloud中的内置AI功能，但是您可以使用&lt;a href =“/docs/docs/grafana-cloud/machine-learning/llm/”&gt; &lt;/a&gt; &lt;a&gt; &lt;a href =“ href =” href =“此开源插件可安全地连接到OpenAI或Azure OpenAI等提供商，使您可以使用自然语言来生成查询，探索仪表板并与Grafana进行交互。它还提供了&lt;a href =“ https://github.com/grafana/mcp-grafana” target =“ _ blank” rel =“ noopener noreferrer”&gt; mcp（model上下文上下文协议）服务器&lt;/a&gt;，它允许您允许您授予自己喜欢的AI Application访问GrafaNa实例。 &lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;为什么助手不是开源吗？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; Grafana Assistant在Grafana Cloud中运行，以支持企业需求并大规模管理基础架构。我们致力于OSS并继续对此进行大量投资 - 包括&lt;a href =“/docs/docs/grafana-cloud/machine-learning/llm/”&gt; llm插件&lt;/a&gt;和&lt;a href =“ href =” Noreferrer”&gt; MCP服务器&lt;/a&gt;，因此社区可以在Grafana OSS中构建自己的AI驱动体验。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt; Grafana Cloud的AI功能是否可以自己采取行动？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt;今天，我们关注的是人类的工作流程，这些工作流程使工程师在减少辛劳的同时保持控制。但是，随着AI系统成熟并证明更可靠，某些任务可能需要更少的监督。我们正在建立一个支持这两者的基础：现在透明，辅助AI，灵活地发展成为更有意义的更自主功能。&lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt; &lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。 &lt;strong&gt; &lt;a href =“//auth/ign-up/create-user/？pg = blog＆plcmt = body-txt”&gt;现在免费注册&lt;/a&gt; &lt;/a&gt; &lt;/strong&gt;！&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to use SQL to learn more about your Grafana usage】如何使用SQL了解有关Grafana使用的更多信息</title>
      <link>https://grafana.com/blog/2025/08/08/how-to-use-slq-to-learn-more-about-your-grafana-usage/</link>
      <description>【&lt;p&gt;&lt;em&gt;Wilfried Roset is an engineering manager who leads an SRE team, and he is also a Grafana Champion. Wilfried currently works at OVHcloud, where he focuses on prioritizing sustainability, resilience, and industrialization to guarantee customers satisfaction.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Grafana needs a &lt;a href=&#34;/docs/grafana/latest/setup-grafana/configure-grafana/&#34;&gt;database&lt;/a&gt; to store all its objects, such as users, dashboards, or even data sources. Each time a user creates a dashboard, it results in a new row created in the database. This database backs everything in Grafana, which makes it a gold mine of information.&lt;/p&gt;&#xA;&lt;p&gt;In this blog I&amp;rsquo;ll show you how to take advantage of all those insights. But first, let&amp;rsquo;s take a quick look at how this all works.&lt;/p&gt;&#xA;&lt;p&gt;Grafana exposes its objects via an HTTP API, which you can essentially think of as the public API. Upon API call, Grafana manipulates the objects in the database and applies its business logic to them. And you can think of SQL queries as the internal API of Grafana, since there&amp;rsquo;s a direct connection between what is exposed via the HTTP API and the objects in the database.&lt;/p&gt;&#xA;&lt;p&gt;Still not convinced? Here is an example.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s say you create a dashboard in Grafana via a POST &lt;code&gt;/api/dashboards/db&lt;/code&gt;, as per &lt;a href=&#34;/docs/grafana/latest/developers/http_api/dashboard/#create--update-dashboard&#34;&gt;the documentation&lt;/a&gt;. But what the documentation does not say is that the dashboard is stored in the table dashboard.This is also true when you create a data source via a POST &lt;code&gt;/api/datasources&lt;/code&gt; — it will be stored in the table &lt;code&gt;data_source&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This table is exactly what we will use. With access to this database and a basic SQL expertise you can learn a lot about how a Grafana instance is used. Let&amp;rsquo;s have a quick look at a few examples.&lt;/p&gt;&#xA;&lt;p&gt;Disclaimer:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The blog post is written with the database of a Grafana instance running v10.1 backend by a PostgreSQL database. The SQL queries are subject to change.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;All of the information gathered via SQL queries are also accessible via Grafana&amp;rsquo;s API.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Users must refrain from modifying the database objects. This could lead to breaking your database immediately or in the next upgrade!&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;organizations-users-dashboards-and-data-sources&#34;&gt;Organizations, users, dashboards, and data sources&lt;/h2&gt;&#xA;&lt;p&gt;First, we&amp;rsquo;re looking for general information such as number of &lt;code&gt;users,&lt;/code&gt; &lt;code&gt;dashboards&lt;/code&gt;, or &lt;code&gt;data_source&lt;/code&gt;. (There is a pivot table in Grafana that makes the multi-tenant experience great.)&lt;/p&gt;&#xA;&lt;p&gt;Grafana offers a nice way to organize yourself via organization. For example, your users might have access to an organization or your dashboards are visible in a given organization. Let’s start by looking at the number organizations, users, dashboards, and data sources in your instance:&lt;/p&gt;&#xA;&lt;h3 id=&#34;the-number-of-organizations&#34;&gt;The number of organizations&lt;/h3&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&amp;gt; select count(*) from org;&#xA;count&#xA;-------&#xA;95&#xA;(1 row)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;the-number-of-users&#34;&gt;The number of users&lt;/h3&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&amp;gt; select count(*) from &amp;#34;user&amp;#34;;&#xA;count&#xA;-------&#xA;2165&#xA;(1 row)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Beware that &lt;code&gt;double-quotes&lt;/code&gt; are mandatory because &lt;code&gt;user&lt;/code&gt; is a reserved keyword in PostgreSQL. Without them your query returns the internal information in PostgreSQL rather than the content of the Grafana&amp;rsquo;s table &lt;code&gt;user&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;the-number-of-dashboards&#34;&gt;The number of dashboards&lt;/h3&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&amp;gt; select count(*) from dashboard where is_folder= &amp;#39;f&amp;#39;;&#xA;count&#xA;-------&#xA;3684&#xA;(1 row)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;the-number-of-data_sources&#34;&gt;The number of &lt;code&gt;data_sources&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;sql&#xA;grafana=&amp;gt; select count(*) from data_source;&#xA;count&#xA;-------&#xA;1947&#xA;(1 row)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;digging-deeper-with-sql-joins&#34;&gt;Digging deeper with SQL joins&lt;/h2&gt;&#xA;&lt;p&gt;Now that we have some general information, we can zoom in. This is doable with SQL joins in any way you like. We could, for example, try to identify the organization with the most users or, more specifically, the organization with the most users with Admin privileges.&lt;/p&gt;&#xA;&lt;h3 id=&#34;the-number-of-users-per-organization&#34;&gt;The number of users per organization&lt;/h3&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&amp;gt; select org_id, count(*) from org_user group by org_id order by count desc limit 5;&#xA;org_id | count&#xA;--------&amp;#43;-------&#xA;1 | 2118&#xA;94 | 424&#xA;96 | 222&#xA;2 | 202&#xA;106 | 156&#xA;(5 rows)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;the-number-of-users-with-admin-privileges-per-organization&#34;&gt;The number of users with &lt;code&gt;Admin&lt;/code&gt; privileges per organization&lt;/h3&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&amp;gt; select org_id, count(*) from org_user where role = &amp;#39;Admin&amp;#39; group by org_id order by count desc limit 5;&#xA; org_id | count&#xA;--------&amp;#43;-------&#xA;     96 |    30&#xA;     24 |    25&#xA;    537 |    23&#xA;    112 |    19&#xA;      4 |    16&#xA;(5 rows)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;the-list-of-all-users-with-admin-privileges&#34;&gt;The list of all users with &lt;code&gt;Admin&lt;/code&gt; privileges&lt;/h3&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&amp;gt; select distinct(u.login) from &amp;#34;user&amp;#34; u join org_user ou on u.id = ou.user_id where ou.role = &amp;#39;Admin&amp;#39; limit 10;&#xA;login&#xA;-------------------&#xA;Bulbasaur&#xA;Ivysaur&#xA;Venusaur&#xA;Charmander&#xA;Charmeleon&#xA;Charizard&#xA;Squirtle&#xA;Wartortle&#xA;Blastoise&#xA;Caterpie&#xA;(10 rows)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;understanding-user-behavior&#34;&gt;Understanding user behavior&lt;/h2&gt;&#xA;&lt;p&gt;Now, let&amp;rsquo;s dig a little deeper to better understand our users. For example, we might want to know the most used data_source type per organization.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&amp;gt; select type, count(*) from data_source group by type order by count desc limit 5;&#xA;type | count&#xA;-------------------------------&amp;#43;-------&#xA;prometheus | 833&#xA;grafana-opensearch-datasource | 349&#xA;elasticsearch | 211&#xA;opentsdb | 134&#xA;marcusolsson-json-datasource | 98&#xA;(5 rows)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;With this information, we know how to better support our users by providing the appropriate training. However, we don&amp;rsquo;t know which organization uses the most &lt;code&gt;prometheus&lt;/code&gt;. This information is just a SQL query away.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&amp;gt; select org_id, count(*) from data_source where type = &amp;#39;prometheus&amp;#39; group by org_id order by count desc limit 5;&#xA;org_id | count&#xA;--------&amp;#43;-------&#xA;1 | 206&#xA;112 | 72&#xA;4 | 57&#xA;695 | 37&#xA;2 | 31&#xA;(5 rows)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Great, we have the organization ID but this is not enough to know who to give training to. By joining the tables &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;org_user&lt;/code&gt;, and &lt;code&gt;org&lt;/code&gt;, we can have in a single statement:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The organization ID&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The organization name&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The list of the users with &lt;code&gt;Admin&lt;/code&gt; privileges within a given organization&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&amp;gt; select o.id as org_id, o.name as org_name, array_agg(u.login) as admin from &amp;#34;user&amp;#34; u join org_user ou on u.id = ou.user_id join org o on o.id = ou.org_id where ou.role = &amp;#39;Admin&amp;#39; group by o.name, ou.role, o.id order by 1, 2 limit 3;&#xA;org_id | org_name | admin&#xA;--------&amp;#43;-----------------------------------&amp;#43;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;1 | Foo | {Bulbasaur,Charmander}&#xA;2 | Bar | {Charmeleon,Squirtle,Blastoise}&#xA;12 | Baz | {Venusaur}&#xA;(3 rows)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;As you can see, you can learn a lot by exploring Grafana&amp;rsquo;s database. There is still a lot more that can be done to understand how your Grafana instance is used, but the queries can become harder to write, read, and understand. Let&amp;rsquo;s keep this for another time&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Or not. Here is OVHcloud’s most used panel type across our 3,000 dashboards.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&amp;gt; SELECT&#xA;elements.value AS panel_type,&#xA;COUNT(*) AS count&#xA;FROM&#xA;dashboard,&#xA;jsonb_array_elements_text(jsonb_path_query_array(data::jsonb, &amp;#39;$.panels[*].type ? (@ != &amp;#34;row&amp;#34;)&amp;#39;)) AS elements&#xA;GROUP BY&#xA;elements.value&#xA;ORDER BY&#xA;count DESC;&#xA;panel_type | count&#xA;---------------------------------------&amp;#43;-------&#xA;timeseries | 16045&#xA;stat | 7007&#xA;table | 2630&#xA;graph | 1691&#xA;gauge | 1443&#xA;singlestat | 972&#xA;text | 937&#xA;piechart | 906&#xA;bargauge | 603&#xA;barchart | 311&#xA;grafana-piechart-panel | 197&#xA;state-timeline | 135&#xA;table-old | 132&#xA;heatmap | 123&#xA;dashlist | 76&#xA;petrslavotinek-carpetplot-panel | 55&#xA;logs | 43&#xA;status-history | 42&#xA;grafana-clock-panel | 37&#xA;geomap | 26&#xA;alertlist | 25&#xA;netsage-sankey-panel | 24&#xA;marcusolsson-treemap-panel | 21&#xA;histogram | 20&#xA;grafana-polystat-panel | 14&#xA;knightss27-weathermap-panel | 8&#xA;grafana-worldmap-panel | 6&#xA;natel-discrete-panel | 5&#xA;trend | 4&#xA;xychart | 4&#xA;welcome | 3&#xA;traces | 2&#xA;jdbranham-diagram-panel | 2&#xA;flant-statusmap-panel | 2&#xA;yesoreyeram-boomtable-panel | 2&#xA;alexanderzobnin-zabbix-triggers-panel | 1&#xA;nodeGraph | 1&#xA;canvas | 1&#xA;(38 rows)&#xA;Time: 1413.119 ms (00:01.413)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x1978/cbb3b60c89/sql-to-learn-about-grafana.png&#34;&#xA;alt=&#34;&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;SQL is awesome, especially PostgreSQL with its powerful &lt;a href=&#34;https://www.postgresql.org/docs/current/functions-json.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;jsonb features&lt;/a&gt;. If you like challenges, you can try to produce the same information by using Grafana&amp;rsquo;s API—with the same response time.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Want to share your Grafana story and dashboards with the community? Drop us a note at &lt;strong&gt;&lt;a href=&#34;mailto:stories@grafana.com&#34;&gt;stories@grafana.com&lt;/a&gt;&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;】&lt;p&gt; &lt;em&gt; Wilfried Roset是一名领导SRE团队的工程经理，他也是Grafana冠军。 Wilfried目前在OVHCloud工作，他专注于优先考虑可持续性，韧性和工业化以保证客户满意度。&lt;/em&gt; &lt;/p&gt;&#xA;&lt;p&gt; Grafana需要A &lt;a href =“/docs/grafana/最终/setup-grafana/configure-grafana/”&gt;数据库&lt;/a&gt;以存储其所有对象，例如用户，仪表板甚至数据源。每次用户创建仪表板时，都会导致数据库中创建的新行。该数据库支持Grafana中的所有内容，这使其成为信息的金矿。&lt;/p&gt;&#xA;&lt;p&gt;在此博客中，我将向您展示如何利用所有这些见解。但是首先，让我们快速看一下这一切的工作原理。&lt;/p&gt;&#xA;&lt;p&gt; Grafana通过HTTP API暴露其对象，您可以从本质上将其视为公共API。通过API呼叫，Grafana操纵数据库中的对象并将其业务逻辑应用于它们。您可以将SQL查询视为Grafana的内部API，因为通过HTTP API暴露的内容与数据库中的对象之间存在直接连接。&lt;/p&gt;&#xA;&lt;p&gt;仍然不相信？这是一个例子。&lt;/p&gt;&#xA;&lt;p&gt;假设您是通过post &lt;code&gt;/api/dashboards/db &lt;/code&gt;在grafana中创建仪表板的，根据&lt;a href =“/docs/docs/grafana/最终/最新/devenast/developers/http_api/dashboard/dasre create/＃create/＃creation/＃update-dashboard”&gt; update-dashboard”&gt;文档&gt;但是文档没有说的是仪表板存储在表仪表板上。当您通过post &lt;Code&gt;/api/dataSources &lt;/code&gt;创建数据源时，这也是正确的，它将存储在表&lt;code&gt; data&gt; data_source &lt;/code&gt;。&lt;/p&gt;。&lt;/p&gt;。&#xA;&lt;p&gt;此表正是我们将使用的。通过访问此数据库和基本的SQL专业知识，您可以了解有关如何使用Grafana实例的很多信息。让我们快速了解一些例子。&lt;/p&gt;&#xA;&lt;p&gt;免责声明：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;博客文章是用postgresql数据库的Grafana实例的数据库编写的。 SQL查询可能会更改。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;也可以通过Grafana的API访问所有通过SQL查询的信息。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;用户必须避免修改数据库对象。这可能会导致立即或下一个升级中打破数据库！&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;在&#xA;&lt;p&gt;首先，我们正在寻找一般信息，例如&lt;code&gt;用户的数量，&lt;/code&gt; &lt;code&gt;仪表板&lt;/code&gt;或&lt;code&gt; data_source &lt;/code&gt;。 （Grafana中有一个枢轴表，使多租户体验很棒。）&lt;/p&gt;&#xA;&lt;p&gt; Grafana提供了一种通过组织组织自己的好方法。例如，您的用户可能可以访问组织，或者您的仪表板在给定的组织中可见。让我们从您的实例中查看数字组织，用户，仪表板和数据源的首先：&lt;/p&gt;&#xA;&lt;h3 id =“ the-numbe组织数&gt;组织数量&lt;/h3&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; grafana =&gt;从org中选择count（*）;&#xA;数数&#xA;--------&#xA;95&#xA;（1行）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h3 id =“ number of-users”&gt;用户数&lt;/h3&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; grafana =&gt;从“用户”中选择计数（*）;&#xA;数数&#xA;--------&#xA;2165&#xA;（1行）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;当心&lt;code&gt;双引号&lt;/code&gt;是强制性的，因为&lt;code&gt;用户&lt;/code&gt;是PostgreSQL中的保留关键字。没有它们，您的查询将在PostgreSQL中返回内部信息，而不是Grafana表的内容&lt;code&gt;用户&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;H3 ID =“ dashboards”&gt;仪表板的数量&lt;/h3&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; grafana =&gt;从dashboard中选择count（*），其中is_folder =&#39;f&#39;;&#xA;数数&#xA;--------&#xA;3684&#xA;（1行）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h3 id =“ the-number-of-of-of-data_sources”&gt; &lt;code&gt; data_sources的数量&lt;/code&gt; &lt;/h3&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; sql&#xA;grafana =&gt;从data_source选择计数（*）;&#xA;数数&#xA;--------&#xA;1947年&#xA;（1行）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h2 id =“ Diging-Decging-with-with-sql-joins”&gt;用SQL Join &lt;/h2&gt;进行更深入的挖掘&lt;/h2&gt;&#xA;&lt;p&gt;现在我们有了一些一般信息，我们可以放大。这与SQL以任何您喜欢的方式加入都是可行的。例如，我们可以尝试确定拥有最多的用户或更具体地说，具有管理特权的用户最多的组织。&lt;/p&gt;&#xA;&lt;h3 id =“ the-umber of-users-per-granization&gt;每个组织的用户数量&lt;/h3&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; grafana =&gt; select org_id，从org_user group by org_id order ofor org_id order count count disc disc限制5;&#xA;org_id |数数&#xA;--------+----------&#xA;1 | 2118&#xA;94 | 424&#xA;96 | 222&#xA;2 | 202&#xA;106 | 156&#xA;（5行）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h2&gt; &lt;/h2&gt;&#xA;&lt;h3 id =“用&lt;/code&gt; admin&gt;每个组织特权的用户数量&lt;/h3&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; grafana =&gt; select org_id，从org_user count（*）从org_user中cole =&#39;admin&#39;组按org_id订单by count disc disc limit 5;&#xA; org_id |数数&#xA;--------+----------&#xA;     96 |    30&#xA;     24 |    25&#xA;    537 |    23&#xA;    112 |    19&#xA;      4 |    16&#xA;（5行）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h3 id =“所有用户的列表 -  admin-privileges”&gt;所有用户列表&lt;code&gt; admin &lt;/code&gt; privilege &lt;/h3&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; grafana =&gt; select从“用户” u上选择DISTINP（U.Login）u JOIN ORG_USER OU on U.ID = OU.USER_ID，其中OU.Role =&#39;admin&#39;limit&#39;限制10;&#xA;登录&#xA;---------------------------&#xA;Bulbasaur&#xA;ivysaur&#xA;Venusaur&#xA;Charmander&#xA;Charmeleon&#xA;Charizard&#xA;柔软的&#xA;Wartortle&#xA;Blastoise&#xA;卡特帕&#xA;（10行）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h2 id =“理解 - 用户 - 行为”&gt;理解用户行为&lt;/h2&gt;&#xA;&lt;p&gt;现在，让我们更深入地了解我们的用户。例如，我们可能想知道每个组织最常用的data_source类型。&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ Code-Clipboard“&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; grafana =&gt;选择类型，从data_source组中count（*）按count deSc desc limit 5 by type offer type ofer类型desc limit 5;&#xA;类型|数数&#xA;--------------------------------------+------------&#xA;Prometheus | 833&#xA;grafana-opensearch-datasource | 349&#xA;Elasticsearch | 211&#xA;OPENTSDB | 134&#xA;Marcusolsson-Json-Datasource | 98&#xA;（5行）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;有了这些信息，我们知道如何通过提供适当的培训来更好地支持用户。但是，我们不知道哪个组织使用最&lt;code&gt; Prometheus &lt;/code&gt;。此信息只是SQL查询。&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; grafana =&gt; select org_id，从data_source count type =&#39;prometheus&#39;组从org_id订单count count disc disc limit 5;&#xA;org_id |数数&#xA;--------+----------&#xA;1 | 206&#xA;112 | 72&#xA;4 | 57&#xA;695 | 37&#xA;2 | 31&#xA;（5行）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;很棒，我们拥有组织ID，但这还不足以知道该对谁进行培训。通过加入表&lt;code&gt;用户&lt;/code&gt;，&lt;code&gt; org_user &lt;/code&gt;和&lt;code&gt; org &lt;/code&gt;，我们可以在一个语句中具有：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;组织ID &lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;组织名称&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;用&lt;code&gt; admin &lt;/code&gt;特权的用户列表&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;grafana=&gt; select o.id as org_id, o.name as org_name, array_agg(u.login) as admin from &#34;user&#34; u join org_user ou on u.id = ou.user_id join org o on o.id = ou.org_id where ou.role = &#39;Admin&#39; group by o.name, OU.Role，O.ID订单1，2限制3;&#xA;org_id | org_name |行政&#xA;--------+-----------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;1 | foo | {Bulbasaur，Charmander}&#xA;2 |酒吧| {Charmeleon，Squirtle，Blastoise}&#xA;12 |巴兹| {Venusaur}&#xA;（3行）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;如您所见，您可以通过探索Grafana的数据库来学到很多东西。仍然可以做更多的事情来了解如何使用Grafana实例，但是查询可能会变得更难编写，阅读和理解。让我们再保持一次吧……&lt;/p&gt;&#xA;&lt;p&gt;是否。这是OVHCloud在我们3,000仪表板中使用的最常用的面板类型。&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; grafana =&gt;选择&#xA;elements.value作为panel_type，&#xA;计数（*）为计数&#xA;从&#xA;仪表板，&#xA;jsonb_array_elements_text（jsonb_path_query_array（data :: jsonb，&#39;$ .panels [*]。类型？（@！=“ row”））为elements&#xA;组&#xA;元素&#xA;订购&#xA;计数desc;&#xA;panel_type |数数&#xA;------------------------------------------------+------------&#xA;时间| 16045&#xA;Stat | 7007&#xA;表| 2630&#xA;图| 1691年&#xA;量规| 1443&#xA;Singlestat | 972&#xA;文字| 937&#xA;piechart | 906&#xA;Bargauge | 603&#xA;Barchart | 311&#xA;Grafana-Piechart-Panel | 197&#xA;状态-Timeline | 135&#xA;餐桌| 132&#xA;热图| 123&#xA;dashlist | 76&#xA;PETRSLAVOTINEK-CARPETPLOT-PANEL | 55&#xA;日志| 43&#xA;状态历史| 42&#xA;grafana-clock-panel | 37&#xA;Geomap | 26&#xA;AlertList | 25&#xA;Netsage-Sankey-Panel | 24&#xA;Marcusolsson-Treemap-Panel | 21&#xA;直方图| 20&#xA;grafana-polystat-panel | 14&#xA;Knightss27-Weatermap-Panel | 8&#xA;grafana-worldmap-panel | 6&#xA;Natel-Discrete-Panel | 5&#xA;趋势| 4&#xA;xychart | 4&#xA;欢迎| 3&#xA;痕迹| 2&#xA;Jdbranham-diagram-panel | 2&#xA;Flant-STATUSMAP-PANEL | 2&#xA;Yesoreyeram-Boomtable-Panel | 2&#xA;Alexanderzobnin-Zabbix-Triggers-Panel | 1&#xA;节点| 1&#xA;画布| 1&#xA;（38行）&#xA;时间：1413.119 MS（00：01.413）&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1999x1978/cbb3b60c89/cbb3b60c89/sql-to-to-to-lo-to-learn-about-grafana.png”&#xA;alt =“”/&gt; &lt;/p&gt;&#xA;&lt;p&gt; SQL很棒，尤其是PostgreSQL，其功能强大的&lt;a href =“ https://www.postgresql.org/docs/current/functions-json.html” target =“ _ black”如果您喜欢挑战，则可以尝试使用Grafana的API来产生相同的信息，并有相同的响应时间。&lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt;想与社区分享您的Grafana故事和仪表板吗？给我们留言&lt;strong&gt; &lt;a href =“ mailto：story@grafana.com”&gt; story@grafana.com &lt;/a&gt; &lt;/strong&gt;。&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Fri, 08 Aug 2025 11:36:00 +0000</pubDate>
    </item>
    <item>
      <title>【LLM-powered insights into your tracing data: introducing MCP support in Grafana Cloud Traces】llm驱动的见解对您的跟踪数据：在Grafana云痕迹中引入MCP支持</title>
      <link>https://grafana.com/blog/2025/08/13/llm-powered-insights-into-your-tracing-data-introducing-mcp-support-in-grafana-cloud-traces/</link>
      <description>【&lt;p&gt;Distributed tracing data is a unique and powerful observability signal, allowing you to understand how your services interact and the relationships between them. Sometimes it can be difficult, however, to turn raw tracing data into actionable insights. &lt;/p&gt;&#xA;&lt;p&gt;This is exactly why we introduced &lt;a href=&#34;/docs/grafana-cloud/visualizations/simplified-exploration/traces/get-started/&#34;&gt;Grafana Traces Drilldown&lt;/a&gt;, an application that lets you quickly investigate and visualize your tracing data through a simplified, queryless experience.  &lt;/p&gt;&#xA;&lt;p&gt;And now, we’re excited to share another update that simplifies the exploration of your tracing data: &lt;a href=&#34;/products/cloud/traces/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud Traces&lt;/a&gt;, the fully managed distributed tracing system powered by &lt;a href=&#34;/oss/tempo/&#34;&gt;Grafana Tempo&lt;/a&gt;, now &lt;a href=&#34;/whats-new/2025-08-08-access-tracing-data-using-mcp-server-in-grafana-cloud-traces/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;directly supports the Model Context Protocol (MCP)&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://modelcontextprotocol.io/overview&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;MCP&lt;/a&gt; is a widely adopted protocol, developed by Anthropic, that standardizes how applications provide context to large language models (LLMs). By integrating MCP with Grafana Cloud Traces, you can now leverage LLM-powered tools like &lt;a href=&#34;https://www.anthropic.com/claude-code&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Claude Code&lt;/a&gt; or &lt;a href=&#34;https://cursor.com/en&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Cursor&lt;/a&gt; to analyze and derive value from your tracing data. This allows you to more easily understand interactions between your services, as well as investigate and diagnose issues faster.&lt;/p&gt;&#xA;&lt;p&gt;In this post, we’ll walk through an example of how to connect Claude Code to Grafana Cloud Traces, so you can get started today.&lt;/p&gt;&#xA;&lt;h2 id=&#34;using-claude-code-with-grafana-cloud-traces&#34;&gt;Using Claude Code with Grafana Cloud Traces&lt;/h2&gt;&#xA;&lt;p&gt;Let’s take a quick look at how to connect Claude Code to Grafana Cloud so we can ask some questions about our tracing data. &lt;em&gt;Note: Even though I&amp;rsquo;m using Claude Code in this example, MCP is supported by &lt;strong&gt;&lt;a href=&#34;https://modelcontextprotocol.io/clients&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;many other LLM agents&lt;/a&gt;&lt;/strong&gt;, such as Cursor and ChatGPT.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;setup&#34;&gt;Setup &lt;/h3&gt;&#xA;&lt;p&gt;Setting up Claude to use the Tempo MCP endpoint in Grafana Cloud requires a &lt;a href=&#34;/docs/grafana-cloud/developer-resources/api-reference/cloud-api/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud API&lt;/a&gt; token and some configuration in Claude. &lt;/p&gt;&#xA;&lt;p&gt;Claude is able to pass an HTTP header — which is technically all we need for &lt;a href=&#34;https://en.wikipedia.org/wiki/Basic_access_authentication&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;basic authentication&lt;/a&gt; — but since Claude Code doesn&amp;rsquo;t have direct support for authentication, we will need to do some finagling with our token and tenant ID.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Generate or use an already existing Grafana Cloud API token with the &lt;strong&gt;traces:read&lt;/strong&gt; permission. To do this, first go to the admin portal and click on the &lt;strong&gt;Details&lt;/strong&gt; button on your Tempo stack.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1046x472/3666f5e54b/grafana-cloud-traces-mcp-send-traces.png&#34;&#xA;alt=&#34;Interface for Tempo setup, featuring a logo, brief instructions, and two buttons labeled &amp;ldquo;Send Traces&amp;rdquo; and &amp;ldquo;Details.&amp;rdquo;&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Then, Click &lt;strong&gt;Generate now&lt;/strong&gt; to create the token. Also make sure to note your &lt;strong&gt;User&lt;/strong&gt; and &lt;strong&gt;URL&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x604/77a6a78c6c/grafana-cloud-traces-mcp-data-source-settings.png&#34;&#xA;alt=&#34;Grafana data source settings with fields for name, type, URL, basic auth checked, user, and password instructions.&#34;/&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Generate a basic auth header using your user and token. We are going to assign it to an environment variable that Claude Code will use for authentication when making calls to the Grafana Cloud Traces MCP endpoint.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;export GCT_AUTH=$(echo -n &amp;#39;&amp;lt;user&amp;gt;:&amp;lt;token&amp;gt;&amp;#39; | base64)&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Set up the MCP endpoint in Claude Code that references the environment variable above.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;claude mcp add tempo https://&amp;lt;URL&amp;gt;/api/mcp -t http -H &amp;#39;Authorization: Basic ${GCT_AUTH}&amp;#39;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Note that the full URL will look something like: &lt;code&gt;https://tempo-us-central1.grafana.net/tempo/api/mcp&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;Test the connection. If Tempo is not showing connected, you can run &lt;code&gt;claude –debug&lt;/code&gt; to get detailed information.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;claude mcp list&#xA;Checking MCP server health...&#xA;tempo: https://&amp;lt;URL&amp;gt;/tempo/api/mcp (HTTP) - ✓ Connected&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;hey-claude-im-new&#34;&gt;Hey, Claude! I&amp;rsquo;m new.&lt;/h3&gt;&#xA;&lt;p&gt;Now that you’ve connected Claude to your Grafana Cloud Traces endpoint, it’s time to ask some questions. Explore your data and learn what works best for you. Recently, I had a quick chat with Claude, using data from the &lt;a href=&#34;https://github.com/grafana/pyroscope&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana Pyroscope&lt;/a&gt; development environment as an example.&lt;/p&gt;&#xA;&lt;p&gt;In my first conversation, I pretended to be a new Pyroscope developer to see what Claude could teach me about my services. Tracing data can be a fantastic onboarding tool because it contains detailed information about how services are actually communicating with each other in real time.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;I asked Claude:&lt;/strong&gt; &lt;code&gt;I&#39;m a new Pyroscope developer, recently hired at Grafana Labs. Can you use tracing data to teach me how my services interact?&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Claude queried attribute values and immediately began looking for traces:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x444/d3a17f4393/grafana-cloud-traces-mcp-claude-get-started.png&#34;&#xA;alt=&#34;A code snippet showing Claude querying attribute values.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;After pulling a few traces, it was capable of identifying the major services in Pyroscope:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x456/b9dce27538/grafana-cloud-traces-mcp-core-pyroscope-services.png&#34;&#xA;alt=&#34;List of core Pyroscope services with descriptions, including roles like receiving profiling data, routing, handling queries, and storage interface.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;And it described how the read path worked:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x719/6e975d4640/grafana-cloud-traces-mcp-read-path.png&#34;&#xA;alt=&#34;Flow analysis diagram showing a step-by-step breakdown of query path.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;It also suggested a few other &lt;a href=&#34;/docs/tempo/latest/traceql/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;TraceQL&lt;/a&gt; queries to use if I was interested in learning more. Not bad! &lt;/p&gt;&#xA;&lt;h3 id=&#34;code-snippet-showing-traceql-queries-for-finding-slow-queries-service-interactions-and-errors-in-a-distributed-system&#34;&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x343/f146bca296/grafana-cloud-traces-mcp-traceql-query-suggestions.png&#34;&#xA;alt=&#34;Code snippet showing TraceQL queries for finding slow queries, service interactions, and errors in a distributed system.&#34;/&gt;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;claude-whats-breaking&#34;&gt;Claude, what&amp;rsquo;s breaking?&lt;/h3&gt;&#xA;&lt;p&gt;As all of us who work on complex distributed systems know: something is always failing somewhere. Grafana Pyroscope is a fantastic continuous profiling database, but it&amp;rsquo;s no exception to this rule! (For the record, neither is Tempo). &lt;/p&gt;&#xA;&lt;p&gt;Fortunately, tracing data is a great signal to find these errors and how they propagate through our services. Let&amp;rsquo;s revisit our example with the Pyroscope development environment to see what Claude&amp;rsquo;s capable of.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;I asked:&lt;/strong&gt; &lt;code&gt;Are there any errors in Pyroscope I should investigate?&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;First, Claude used a simple TraceQL query to search for errors in Pyroscope services:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x242/a723569220/grafana-cloud-traces-mcp-traceql-query-error-search.png&#34;&#xA;alt=&#34;A screenshot showing a search query for errors, with a message indicating multiple errors found.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;To investigate further, Claude tried a few incorrect TraceQL metrics queries, pulled the metrics docs, and then was able to write a correct query to find error rates by service. This pattern of trying an invalid query, referring to the docs, and correcting itself is actually quite common.&#xA;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x493/0d69861bc7/grafana-cloud-traces-mcp-corrected-traceql-queries.png&#34;&#xA;alt=&#34;A screenshot showing syntax errors in a query.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Finally, it found and categorized two major errors and recommended some improvements. Nice!&lt;/p&gt;&#xA;&lt;h3 id=&#34;a-screenshot-of-a-console-displaying-error-messages-and-warnings-about-critical-issues&#34;&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x972/3897a5fd39/grafana-cloud-traces-mcp-error-rate-summary.png&#34;&#xA;alt=&#34;A screenshot of a console displaying error messages and warnings about critical issues.&#34;/&gt;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;claude-lets-make-things-better&#34;&gt;Claude, let&amp;rsquo;s make things better&lt;/h3&gt;&#xA;&lt;p&gt;For my final question, I wanted to use the Pyroscope codebase along with Claude to make actual improvements to my services. Another great use of tracing data is identifying the causes of latency and more effectively allocating developers to make improvements.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;I asked:&lt;/strong&gt; &lt;code&gt;Help me reduce latency on the read path of Pyroscope. Use data from Tempo to help decide where to focus my efforts.&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;First, Claude executed a handful of metrics and search queries to gain information about where time is spent in the query path.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x779/a1931c2f76/grafana-cloud-traces-mcp-time-spent-in-query-path.png&#34;&#xA;alt=&#34;A screenshot of code snippet showing queries for analyzing latency and request rates.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Using this data, Claude summarized operations on the read path and presented its findings. (Honestly, things already seem fast to me!)&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x574/f8cb4e19bb/grafana-cloud-traces-mcp-trace-analysis-summary.png&#34;&#xA;alt=&#34;A screenshot of a trace analysis summary highlighting key operations, latency patterns, bottlenecks, and a recommendation for parallel query execution.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;For fun, I went ahead and asked Claude to make a code change to parallelize SelectSeries as suggested and it produced a diff.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x924/54f18e66a6/grafana-cloud-traces-mcp-diff.png&#34;&#xA;alt=&#34;A screenshot of a diff showing changes in a file.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Is it a good update? I suppose I should ask the Pyroscope team for a review 🙂.&lt;/p&gt;&#xA;&lt;h2 id=&#34;whats-next-and-how-to-learn-more&#34;&gt;What’s next and how to learn more  &lt;/h2&gt;&#xA;&lt;p&gt;The new MCP integration is available now in public preview in Grafana Cloud Traces, including in our Cloud free tier. It will also be available in the upcoming Grafana Tempo 2.9 release. &lt;/p&gt;&#xA;&lt;p&gt;The current &lt;a href=&#34;https://github.com/grafana/tempo/blob/main/modules/frontend/mcp.go&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;MCP implementation&lt;/a&gt; is a simple shim in front of the Tempo HTTP API, but we could definitely improve. For example, we can improve the way the data is presented to the LLM. Right now, we are sending raw JSON into Claude, but we could develop more compact text formats that are faster to process. Next, we can extend the Tempo API to allow the LLM to request subsets of a trace or trace summaries aggregated over many traces. We should be working toward high-value and high-density data. I better get to work! &lt;/p&gt;&#xA;&lt;p&gt;If you&amp;rsquo;re interested in getting involved, check out the &lt;a href=&#34;https://github.com/grafana/tempo/blob/main/docs/sources/tempo/api_docs/mcp-server.md#quick-start&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;local MCP example&lt;/a&gt;, use the feature, file issues and PRs, and let us know what you think!&lt;/p&gt;&#xA;&lt;p&gt;To learn more, you can also refer to the MCP documentation for &lt;a href=&#34;/docs/grafana-cloud/send-data/traces/mcp-server/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud Traces&lt;/a&gt; and &lt;a href=&#34;/docs/tempo/next/api_docs/mcp-server/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Tempo&lt;/a&gt;.  &lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case. &lt;strong&gt;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Sign up for free now&lt;/a&gt;&lt;/strong&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;分布式跟踪数据是一个独特而强大的可观察性信号，使您可以了解服务方式及其之间的关系。但是，有时很难将原始的跟踪数据转换为可行的见解。 &lt;/p&gt;&#xA;&lt;p&gt;这就是为什么我们引入&lt;a href =“/docs/docs/grafana-cloud/casutizations/simpleified-enploration/traces/traces/get-started/“ get-started/”&gt; grafana traces DrillDown &lt;/a&gt;，该应用程序可让您通过简化的，无疑的，无疑的经验来快速调查和可视化跟踪数据。  &lt;/p&gt;&#xA;&lt;p&gt;现在，我们很高兴分享另一个更新，以简化您的跟踪数据的探索：&lt;a href =“//products/cloud/cloud/traces/？pg = blog＆plcmt = body-txt = body-txt”&gt; grafana云痕迹&lt;/a&gt;，完全管理的分布式跟踪系统由&lt;a href =“/oss/oss/oss/oss/tepo/tepo &lt;a）， href =“/Whats-new/2025-08-08-Access-tacing-tracing-using-used-mcp-server-in-grafana-cloud-traces/？pg = blog＆plcmt = body-txt = body-txt”&gt;直接支持模型上下文协议（MCP）&lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;p&gt; &lt;a href =“ https://modelcontextprotocol.io/overview” target =“ _ blank” rel =“ noopener noreferrer”&gt; mcp &lt;/a&gt;广泛采用的协议，由人类学开发，标准化了如何为大型语言模型（LLMS）提供上下文（LLMS）。通过将MCP与Grafana Cloud Traces整合在一起，您现在可以利用LLM驱动的工具，例如&lt;a href =“ https://www.anththropic.com/claude-code” target =“ _ blank” rel =“ noopener noreferrer” noopener noreferrer“&gt; claude code&gt; claude code &lt;/a&gt; rel =“ noopener noreferrer”&gt;光标&lt;/a&gt;从您的跟踪数据中分析和得出价值。这使您可以更轻松地了解服务之间的互动，并更快地调查和诊断问题。&lt;/p&gt;&#xA;&lt;p&gt;在这篇文章中，我们将介绍如何将Claude代码连接到Grafana Cloud Traces的示例，因此您可以立即开始。&lt;/p&gt;&#xA;&lt;h2 id =“使用grafana code with grafana cloud traces &lt;/h2&gt;&#xA;&lt;p&gt;让我们快速了解如何将Claude代码连接到Grafana Cloud，以便我们可以询问有关跟踪数据的一些问题。 &lt;em&gt;注意：即使我在此示例中使用Claude代码，MCP也得到&lt;strong&gt; &lt;a href =“ https://modelcontextprotocol.io/client&#xA;&lt;H3 ID =“设置”&gt;设置&lt;/h3&gt;&#xA;&lt;p&gt;Setting up Claude to use the Tempo MCP endpoint in Grafana Cloud requires a &lt;a href=&#34;/docs/grafana-cloud/developer-resources/api-reference/cloud-api/?pg=blog&amp;plcmt=body-txt&#34;&gt;Grafana Cloud API&lt;/a&gt; token and some configuration in Claude. &lt;/p&gt;&#xA;&lt;p&gt;Claude is able to pass an HTTP header — which is technically all we need for &lt;a href=&#34;https://en.wikipedia.org/wiki/Basic_access_authentication&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;basic authentication&lt;/a&gt; — but since Claude Code doesn’t have direct support for authentication, we will need to do一些与我们的令牌和租户相处id。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;使用&lt;strong&gt; traces生成或使用已经存在的Grafana Cloud API令牌：读取&lt;/strong&gt;权限。为此，请先转到管理员门户，然后单击&lt;strong&gt;详细信息&lt;/strong&gt; tempo stack上的按钮。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1046x472/366665E54B/grafana-cloud-traces-traces-mcp-send-traces-traces.png”&#xA;alt =“速度设置的接口，具有徽标，简短说明和两个标有“发送痕迹”和“详细信息”的按钮。”//&gt; &lt;/p&gt;&#xA;&lt;p&gt;然后，单击&lt;strong&gt;立即生成&lt;/strong&gt;以创建令牌。还要确保注意您的&lt;strong&gt;用户&lt;/strong&gt;和&lt;strong&gt; url &lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999X604/77a6a78c6c/grafana-cloud-traces-mcp-data-source-sertestings.png”&#xA;alt =“ grafana数据源设置具有名称，类型，URL，基本验证检查，用户和密码说明的字段。”/&gt; &lt;/p&gt;&#xA;&lt;ol start =“ 2”&gt;&#xA;&lt;li&gt;使用您的用户和令牌生成基本的验证标头。我们将将其分配给Claude代码在拨打Grafana Cloud Traces MCP Endpoint时将用于身份验证的环境变量。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;导出gct_auth = $（echo -n&#39;&lt;user&gt;：&lt;token&gt;&#39;| base64）&lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;ol start =“ 3”&gt;&#xA;&lt;li&gt;在Claude代码中设置MCP端点，该端点引用了上面的环境变量。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data -expanded =“ false”&gt; &lt;code class =“ language -none”&gt; claude mcp add tempo https：// &lt;url&gt;/api/mcp -t http -h http -h&#39;授权：基本$ {gct_auth}&#39;&lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;请注意，完整的URL看起来像：&lt;code&gt; https://tempo-us-central1.grafana.net/tempo/api/api/mcp &lt;/code&gt;。&lt;/p&gt;&#xA;&lt;ol start =“ 4”&gt;&#xA;&lt;li&gt;测试连接。如果tempo未显示连接，则可以运行&lt;code&gt; claude –debug &lt;/code&gt;获取详细信息。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/图像/图标/icon-copy-small-2.svg“ alt =”复制代码到剪贴板“ width =” 14“高度=” 13“&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; Claude MCP列表&#xA;检查MCP服务器健康...&#xA;tempo：https：// &lt;url&gt;/tempo/api/mcp（http） - ✓连接&lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h3 id =“ hey-claude-im-new”&gt;嘿，克劳德！我是新手。&lt;/h3&gt;&#xA;&lt;p&gt;现在，您已将Claude连接到Grafana Cloud Traces端点，现在该提出一些问题了。探索您的数据并了解最适合您的东西。最近，我使用来自&lt;a href =“ https://github.com/grafana/pyroscope”的数据进行了快速聊天。&#xA;&lt;p&gt;在我的第一次对话中，我假装是一个新的旋载开发人员，看看克劳德可以教我关于我的服务的知识。跟踪数据可能是一个很棒的入门工具，因为它包含有关服务实际上如何实时通信的详细信息。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;我问Claude：&lt;/strong&gt; &lt;code&gt;我是最近在Grafana Labs雇用的新型Troscope开发人员。您可以使用跟踪数据来教我我的服务如何互动吗？&lt;/code&gt; &lt;/p&gt;&#xA;&lt;p&gt; Claude查询属性值，并立即开始寻找痕迹：&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/199999x4444/d3a17f4393/grafana-cloud-traces-traces-mcp-claude-get-start-started.png”&#xA;alt =“一个代码片段显示Claude查询属性值。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;拉出几个轨迹后，它能够识别载焦层中的主要服务：&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999x456/b9dce27538/grafana-cloud-traces-traces-mcp-core-core-prososcope-services.pyroscope-services.png”&#xA;alt =“具有描述的核心载旋式服务列表，包括接收分析数据，路由，处理查询和存储接口等角色。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;它描述了读取路径的工作方式：&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999X719/6E975D4640/grafana-cloud-traces-traces-mcp-read-path.png”&#xA;alt =“流量分析图显示了查询路径的逐步分解。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;它还建议了其他一些&lt;a href =“/doc/tempo/最终/traceql/？pg = blog＆plcmt = body-txt”&gt; traceql &lt;/a&gt;如果我有兴趣了解更多信息，请使用查询。不错！ &lt;/p&gt;&#xA;&lt;h3 id =“代码 - 刺显示-traceql-queries for-finding-slow-slow-service-service-service-service-service-sertactions and errors in-a-a-a-distribed-system”&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1999x343/f146bca296/grafana-cloud-traces-mcp-trace-mcp-traceql-query-suggestions.png”&#xA;alt =“代码段显示traceql查询，以查找慢速查询，服务交互和分布式系统中的错误。”/&gt; &lt;/h3&gt;&#xA;&lt;H3 ID =“ Claude-Whats-Breaking”&gt; Claude，什么是破裂？&lt;/h3&gt;&#xA;&lt;p&gt;作为我们所有从事复杂分布式系统K的人现在：某些地方总是在某个地方失败。 Grafana仿射仪是一个很棒的连续分析数据库，但这也不例外！ （根据记录，速度也不是）。 &lt;/p&gt;&#xA;&lt;p&gt;幸运的是，追踪数据是找到这些错误以及它们如何通过我们的服务传播的好信号。让我们以载饰开发环境来重新审视我们的榜样，以了解克劳德的能力。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;我问：&lt;/strong&gt; &lt;code&gt;我应该调查载速词吗？&lt;/code&gt; &lt;/p&gt;&#xA;&lt;p&gt;首先，Claude使用一个简单的TraceQl查询来搜索Pyroscope Services中的错误：&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999x242/a723569220/grafana-cloud-traces-mcp-trace-mcp-traceql-query-query-error-search.png”&#xA;alt =“显示错误的搜索查询，并带有指示多个错误的消息。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;为了进一步调查，克劳德（Claude）尝试了一些不正确的TraceQL指标查询，提取了指标文档，然后能够编写正确的查询以通过服务查找错误率。尝试无效查询，指的是文档和纠正本身的模式实际上很普遍。&#xA;&lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999x493/0d69861bc7/grafana-cloud-trace-traces-mcp-corrceed-trace-traceql-queries.png”&#xA;alt =“查询中显示语法错误的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;最后，它发现并分类了两个主要错误，并建议进行一些改进。很好！&lt;/p&gt;&#xA;&lt;h3 id =“ a-screenshot of-a-console-displaying-error-messages and-warnings-about-about-critial-with-timent-warnings”&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999972/3897A5FD39/GRAFANA-CLOUD-TRACES-MCP-ERROR-RATE--RATE--RATE--RATE--RATE-SUMMARY.PNG”&#xA;alt =“显示错误消息和有关关键问题的警告的控制台的屏幕截图。”/&gt; &lt;/&gt; &lt;/h3&gt;&#xA;&lt;h3 id =“ claude-lets-make-things-better”&gt; claude，让我们变得更好&#xA;&lt;p&gt;对于我的最后一个问题，我想使用Pyroscope代码库以及Claude来对我的服务进行实际改进。追踪数据的另一个重要用途是确定延迟的原因，并更有效地分配开发人员进行改进。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;我问：&lt;/strong&gt; &lt;code&gt;帮助我减少焦态读取路径上的延迟。使用Tempo的数据来帮助决定在哪里集中精力。&lt;/code&gt; &lt;/p&gt;&#xA;&lt;p&gt;首先，克劳德执行了一些指标和搜索查询，以获取有关在查询路径上花费时间的信息。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999X779/A1931C2F76/grafana-cloud-traces-traces-mcp time-spent-spent-in-query-path-query-path.png-&#xA;alt =“代码片段的屏幕截图，显示查询用于分析延迟和请求率。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;使用此数据，Claude汇总了读取路径上的操作，并提出了其发现。 （老实说，事情对我来说似乎已经很快了！）&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999x574/f8cb4e19bb/grafana-cloud-traces-mcp-trace-trace-analysisummary.png“&#xA;alt =“痕迹分析的屏幕截图摘要突出显示关键操作，延迟模式，瓶颈和并行查询执行的建议。”//&gt; &lt;/p&gt;&#xA;&lt;p&gt;为了娱乐，我继续要求克劳德（Claude&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1999924/54f18e66a6/grafana-cloud-trace-traces-mcp-diff.png”&#xA;alt =“ diff的屏幕截图显示文件中的更改。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;这是一个很好的更新吗？我想我应该向载载小组进行审查。&lt;/p&gt;&#xA;在&#xA;&lt;p&gt;现在，新的MCP集成在Grafana Cloud Traces的公共预览中可用，包括我们的Free Cloud Tier。它也将在即将发布的Grafana Tempo 2.9版本中提供。 &lt;/p&gt;&#xA;&lt;p&gt;The current &lt;a href=&#34;https://github.com/grafana/tempo/blob/main/modules/frontend/mcp.go&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;MCP implementation&lt;/a&gt; is a simple shim in front of the Tempo HTTP API, but we could definitely improve.例如，我们可以改善数据显示给LLM的方式。目前，我们正在将RAW JSON发送到Claude，但是我们可以开发更紧凑的文本格式，这些格式更快地处理。接下来，我们可以扩展速度API，以允许LLM请求在许多跟踪上汇总的跟踪或跟踪摘要的子集。我们应该致力于高价值和高密度数据。我最好上班！ &lt;/p&gt;&#xA;&lt;p&gt;If you’re interested in getting involved, check out the &lt;a href=&#34;https://github.com/grafana/tempo/blob/main/docs/sources/tempo/api_docs/mcp-server.md#quick-start&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;local MCP example&lt;/a&gt;, use the feature, file issues和PR，让我们知道您的想法！&lt;/p&gt;&#xA;&lt;p&gt;要了解更多信息，您也可以参考&lt;a href =“/docs/docs/grafana-cloud/send-data/traces/mcp-server/？pg = blog＆plcmt = body-txt = grafana cloud traces &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; href =“/docs/tempo/next/api_docs/mcp-server/？pg = blog＆plcmt = body-txt”&gt; grafana tempo &lt;/a&gt;。  &lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt; &lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例都有计划。 &lt;strong&gt; &lt;a href =“//auth/ign-up/create-user/？pg = blog＆plcmt = body-txt”&gt;现在免费注册&lt;/a&gt; &lt;/a&gt; &lt;/strong&gt;！&lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 13 Aug 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【AI for Grafana onboarding: Get your teams started quicker with Grafana Assistant】Grafana入职的AI：让Grafana Assistant更快地开始您的团队</title>
      <link>https://grafana.com/blog/2025/08/14/ai-for-grafana-onboarding-get-your-teams-started-quicker-with-grafana-assistant/</link>
      <description>【&lt;p&gt;Grafana puts a powerful set of observability capabilities right at your fingertips, but onboarding entire teams to the sophisticated platform is often a nontrivial exercise—one that can slow adoption and prevent organizations from getting immediate value. &lt;/p&gt;&#xA;&lt;p&gt;We want to make the process as frictionless as possible, which is why we&amp;rsquo;re excited to tell you that &lt;a href=&#34;/docs/grafana-cloud/machine-learning/assistant/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Assistant&lt;/a&gt; is now available in public preview to all Grafana Cloud users. Our integrated chat agent can be a vital tool for getting started on the platform, helping new users answer questions, navigate to the right places in Grafana, and even have action taken on their behalf. &lt;/p&gt;&#xA;&lt;p&gt;Of course, Grafana Assistant can help you get more done with Grafana Cloud in any number of ways, but in this blog post we&amp;rsquo;re going to focus on how it can help you and your organization quickly and successfully get onboarded with Grafana, whether you&amp;rsquo;re migrating from another tool or just starting your observability journey. &lt;/p&gt;&#xA;&lt;p&gt;Keep reading for tips on how Grafana Assistant can help you get the most from your stack. And if you&amp;rsquo;re following along at home or in the office, simply click on the pulsar icon in the top-right corner of the Grafana Cloud UI to open the assistant and enter the example prompts provided below.&lt;/p&gt;&#xA;&lt;div&#xA;class=&#34;youtube-lazyload responsive-video&#34;&#xA;data-embed=&#34;UtZkFYUmjrM&#34;&#xA;data-url=&#34;https://www.youtube.com/embed/UtZkFYUmjrM?autoplay=1&#34;&#xA;data-title=&#34;YouTube Video&#34;&#xA;&gt;&#xA;&lt;div class=&#34;play-button&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;learn-observability-concepts&#34;&gt;Learn observability concepts &lt;/h2&gt;&#xA;&lt;p&gt;Sometimes you run into unfamiliar concepts or technologies—especially those with multi-letter acronyms. This can slow you down as you constantly reach for your favorite search engine or external chat agent to learn more. &lt;/p&gt;&#xA;&lt;p&gt;Well, the same thing can happen if you have limited exposure to observability. But with Grafana Assistant, you get that same help you&amp;rsquo;re used to searching for elsewhere without ever having to leave Grafana Cloud—no context switching needed!&lt;/p&gt;&#xA;&lt;p&gt;Plus, there&amp;rsquo;s an extra twist: The answers will be tailored to your observability stack. For example, if you ask about uptime and you have HTTP servers logging and providing metrics to Grafana, Grafana Assistant will intelligently figure out what you’re referring to.&lt;/p&gt;&#xA;&lt;p&gt;Try these sample questions to see for yourself:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What is an aggregated metric?&lt;/li&gt;&#xA;&lt;li&gt;What does SLO stand for?&lt;/li&gt;&#xA;&lt;li&gt;How many metrics is too many?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1080x1080/de44947ac6/observability-concepts.gif&#34;&#xA;alt=&#34;Observability concepts&#34;/&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;compare-concepts-from-different-platforms&#34;&gt;Compare concepts from different platforms&lt;/h2&gt;&#xA;&lt;p&gt;Now, maybe you&amp;rsquo;re well versed in observability, but you&amp;rsquo;re less familiar with Grafana. When moving from another platform, it’s possible that some of the concepts don’t fully line up. It&amp;rsquo;s also possible that Grafana tackles certain problems differently than your previous tooling. &lt;/p&gt;&#xA;&lt;p&gt;But don&amp;rsquo;t worry—Grafana Assistant is generally aware enough to compare those concepts and explain the differences, including providing extra detail where requested. And don’t be afraid to ask follow up questions as needed (more on this at the end).&lt;/p&gt;&#xA;&lt;p&gt;Try these sample questions, and replace the uppercase text as needed:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In my other observability stack I used OBSERVABILITY_FEATURE. What’s the Grafana equivalent?&lt;/li&gt;&#xA;&lt;li&gt;What does Grafana call OBSERVABILITY_FEATURE?&lt;/li&gt;&#xA;&lt;li&gt;In OLD_OBSERVABILILTY_STACK I used to be able to do COOL_THING. How do I achieve that in Grafana?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1080x1080/5fa5beefdf/compare-vendors.gif&#34;&#xA;alt=&#34;Compare vendors&#34;/&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;get-context-aware-answers-about-your-stack&#34;&gt;Get context-aware answers about your stack&lt;/h2&gt;&#xA;&lt;p&gt;Once you&amp;rsquo;ve got the basic concepts down, it&amp;rsquo;s time to find out what you can actually do in Grafana Cloud. But maybe you&amp;rsquo;re not quite ready to learn &lt;em&gt;everything&lt;/em&gt; just yet.&lt;/p&gt;&#xA;&lt;p&gt;Many new users simply want to poke around and get a feel for the environment first. The problem with this approach is that you don&amp;rsquo;t know what you don&amp;rsquo;t know, which can be especially frustrating (and overwhelming) when you have so much to choose from.&lt;/p&gt;&#xA;&lt;p&gt;Grafana Assistant sits in the sidebar next to whatever you’re working on in Grafana Cloud. More importantly, it can see the context on the page, so questions are answered specifically about your stack, often including real examples from your actual telemetry signals.&lt;/p&gt;&#xA;&lt;p&gt;Try these sample questions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What am I supposed to do on this page?&lt;/li&gt;&#xA;&lt;li&gt;Can you explain the data I’m seeing here?&lt;/li&gt;&#xA;&lt;li&gt;Where can I learn more about this?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1080x1080/542d1b9114/context-aware-tips.gif&#34;&#xA;alt=&#34;Context-aware tips&#34;/&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;follow-customized-interactive-tutorials&#34;&gt;Follow customized interactive tutorials&lt;/h2&gt;&#xA;&lt;p&gt;As you continue your onboarding experience, perhaps you find that you’re curious about how a specific UI works, or how to solve a particular problem using the tools. Grafana Assistant can provide a step-by-step guide that&amp;rsquo;s customized to your request, skipping over steps that aren&amp;rsquo;t relevant and  focusing instead on what matters most for your needs.&lt;/p&gt;&#xA;&lt;p&gt;As you make changes, you can keep the conversation going. Either continue probing to learn more details, or ask it to help with tangential things as you go. The assistant will adapt to how you work best.&lt;/p&gt;&#xA;&lt;p&gt;Try these sample questions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How do I add an alert for this metric?&lt;/li&gt;&#xA;&lt;li&gt;What does it take to add a new on-call schedule in Grafana Cloud IRM?&lt;/li&gt;&#xA;&lt;li&gt;What steps should I follow to declare a test incident?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1080x1080/188589f9c5/interactive-tutorials.gif&#34;&#xA;alt=&#34;A short video showing someone asking Assistant how to add on-call schedules in Grafana Cloud IRM&#34;/&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you still need to get started with Grafana Assistant in the first place, it can help you with that, too. The first time you open the chat agent, you&amp;rsquo;ll be guiding you through a dedicated tutorial for Grafana Assistant.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;ask-about-best-practices&#34;&gt;Ask about best practices&lt;/h2&gt;&#xA;&lt;p&gt;At this point, you&amp;rsquo;re ready to refine and optimize your usage, but you aren&amp;rsquo;t quite sure what you need to do differently. Thankfully, Grafana Assistant is packed with knowledge about the platform that can help you do just that. &lt;/p&gt;&#xA;&lt;p&gt;Some of that information is baked in via the prompts and tools we send to the LLMs. Other knowledge comes via access to the Grafana documentation and blog articles, which carry special weight in the AI’s estimations and will help guide you to the best solution. As the documentation is pulled in in real time, you can be sure that you always receive up-to-date information on our products.&lt;/p&gt;&#xA;&lt;p&gt;Try these sample questions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What should I be monitoring to ensure Kafka is operating correctly?&lt;/li&gt;&#xA;&lt;li&gt;What level of CPU usage should I alert on?&lt;/li&gt;&#xA;&lt;li&gt;Should I add instrumentation to everything in my stack, or just the important things?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1080x1080/bafc3ae041/best-practices.gif&#34;&#xA;alt=&#34;Best practices&#34;/&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;h3 id=&#34;remember-its-a-conversation&#34;&gt;Remember: It’s a conversation&lt;/h3&gt;&#xA;&lt;p&gt;Grafana Assistant will always try to answer your questions, but the more context it has, the better. &lt;/p&gt;&#xA;&lt;p&gt;Correct it if it makes mistakes, provide more context where it seems confused, and don’t be afraid to direct it towards the kinds of answers you’re looking for. In this regard, it’s like working with a colleague: The more context you provide, the better your collaboration at large.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bonus tip:&lt;/strong&gt; Remain polite. It seems like the AI will produce better results when the language is positive in sentiment. We’ll leave it as an exercise for the reader to figure out why that might be.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;you-and-grafana-assistant-will-get-better-all-the-time&#34;&gt;You and Grafana Assistant will get better all the time&lt;/h2&gt;&#xA;&lt;p&gt;Observability is diverse: Different companies have different stacks that solve different problems. At Grafana Labs, we support small and big companies across a wide range of industries, which also means that observability problems vary significantly. &lt;/p&gt;&#xA;&lt;p&gt;However, we don’t want to develop an assistant feature that only caters to a narrow set of situations. Instead, we want Grafana Assistant to help anyone—regardless of their observability maturity—to run things just a bit more smoothly.&lt;/p&gt;&#xA;&lt;p&gt;Enabling Grafana Assistant is simple: Either click on the Grafana Assistant symbol in the top-right corner of the UI, or click on the corresponding menu item in the main navigation on the left side of the UI. &lt;/p&gt;&#xA;&lt;p&gt;As you use Grafana Assistant, you will also learn the nuances of interacting with an LLM. The prompt and context are everything to the LLM, so some things will work better than others. And as you use the Assistant to solve real world problems, the way you interact with it will evolve. So don’t be downhearted if the first few things you try don’t give you the results you’re after.&lt;/p&gt;&#xA;&lt;p&gt;We are investing heavily to continually develop Grafana Assistant, so you should notice improvements in behavior on a weekly basis. Your feedback helps us do this, so please use the thumbs-up and down icons, and if you can, leave a meaningful comment explaining what happened, and what you expected.&lt;/p&gt;&#xA;&lt;p&gt;So start using Grafana Assistant today to upgrade your observability experience! And if you want to learn more about Grafana Assistant and our entire suite of AI tools, sign up for &lt;a href=&#34;/events/observabilitycon/&#34;&gt;ObservabilityCON 2025&lt;/a&gt; in London or an &lt;a href=&#34;/events/observabilitycon-on-the-road/&#34;&gt;ObservabilityCON on the Road&lt;/a&gt; near you for more AI-powered observability announcements.&lt;/p&gt;&#xA;&lt;h2 id=&#34;faq-grafana-cloud-ai--grafana-assistant&#34;&gt;FAQ: Grafana Cloud AI &amp;amp; Grafana Assistant&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;What is Grafana Assistant?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Grafana Assistant is an AI-powered agent in Grafana Cloud that helps you query, build, and troubleshoot faster using natural language. It simplifies common workflows like writing PromQL, LogQL, or TraceQL queries, and creating dashboards — all while keeping you in control. Learn more in our blog post.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;How does Grafana Cloud use AI in observability?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Grafana Cloud’s AI features support engineers and operators throughout the observability lifecycle—from detection and triage to explanation and resolution. We focus on explainable, assistive AI that enhances your workflow.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;What problems does Grafana Assistant solve?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Grafana Assistant helps reduce toil and improve productivity by enabling you to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Write and debug queries faster&lt;/li&gt;&#xA;&lt;li&gt;Build and optimize dashboards&lt;/li&gt;&#xA;&lt;li&gt;Investigate issues and anomalies&lt;/li&gt;&#xA;&lt;li&gt;Understand telemetry trends and patterns&lt;/li&gt;&#xA;&lt;li&gt;Navigate Grafana more intuitively&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;What is Grafana Labs&amp;rsquo; approach to building AI into observability?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;We build around:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Human-in-the-loop interaction for trust and transparency&lt;/li&gt;&#xA;&lt;li&gt;Outcome-first experiences that focus on real user value&lt;/li&gt;&#xA;&lt;li&gt;Multi-signal support, including correlating data across metrics, logs, traces, and profiles&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Does Grafana OSS have AI capabilities?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;By default, Grafana OSS doesn’t include built-in AI features found in Grafana Cloud, but you can enable AI-powered workflows using the&lt;a href=&#34;/docs/grafana-cloud/machine-learning/llm/&#34;&gt; &lt;/a&gt;&lt;a href=&#34;/docs/grafana-cloud/machine-learning/llm/&#34;&gt;LLM app plugin&lt;/a&gt;. This open source plugin connects to providers like OpenAI or Azure OpenAI securely, allowing you to generate queries, explore dashboards, and interact with Grafana using natural language. It also provides a &lt;a href=&#34;https://github.com/grafana/mcp-grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;MCP (Model Context Protocol) server&lt;/a&gt;, which allows you to grant your favorite AI application access to your Grafana instance. &lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Why isn’t Assistant open source?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Grafana Assistant runs in Grafana Cloud to support enterprise needs and manage infrastructure at scale. We’re committed to OSS and continue to invest heavily in it—including open sourcing tools like the &lt;a href=&#34;/docs/grafana-cloud/machine-learning/llm/&#34;&gt;LLM plugin&lt;/a&gt; and &lt;a href=&#34;https://github.com/grafana/mcp-grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;MCP server&lt;/a&gt;, so the community can build their own AI-powered experiences into Grafana OSS.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Does Grafana Cloud’s AI capabilities take actions on its own?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Today, we focus on human-in-the-loop workflows that keep engineers in control while reducing toil. But as AI systems mature and prove more reliable, some tasks may require less oversight. We&amp;rsquo;re building a foundation that supports both: transparent, assistive AI now, with the flexibility to evolve into more autonomous capabilities where it makes sense.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Where can I learn more about Grafana’s AI strategy?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/blog/2025/08/14/ai-in-observability-at-grafana-labs-making-observability-easy-and-accessible-for-everyone/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Check out our blog post&lt;/a&gt; to hear directly from our engineers.  &lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case.&lt;strong&gt;&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Sign up for free now&lt;/a&gt;&lt;/strong&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;格拉法纳（Grafana）将一组强大的可观察性功能放在您的触点上，但是将整个团队登上精致平台通常是一种非平凡的练习，可以放缓采用并防止组织立即获得价值。 &lt;/p&gt;&#xA;&lt;p&gt;我们想使该过程尽可能无摩擦，这就是为什么我们很高兴地告诉您&lt;a href =“/docs/docs/grafana-cloud/Machine-learning/assisth/？pg = blog＆plcmt = body-txt = grafana sapperssappt”&gt; grafana Assistans &lt;/a&gt;现在可以在所有Grafana Cloud Cloud cloud cloud cloud用户中提供公开预览。我们的集成聊天代理可能是在平台上入门的重要工具，帮助新用户回答问题，导航到格拉法纳的正确位置，甚至代表他们采取了行动。 &lt;/p&gt;&#xA;&lt;p&gt;当然，Grafana Assistant可以通过多种方式帮助您完成Grafana Cloud的更多工作，但是在此博客文章中，我们将重点介绍它如何帮助您和您的组织快速而成功地使用Grafana，无论您是从其他工具中迁移还是从其他工具中迁移，还是启动可观察力之旅。 &lt;/p&gt;&#xA;&lt;p&gt;继续阅读有关Grafana助手如何帮助您从堆栈中获得最大收益的提示。而且，如果您在家中或在办公室中关注，只需单击Grafana Cloud UI右上角的Pulsar图标即可打开助手并输入下面提供的示例提示。&lt;/p&gt;&#xA;&lt;div&#xA;class =“ youtube-lazyload响应式video”&#xA;data-embed =“ utzkfyumjrm”&#xA;data-url =“ https://www.youtube.com/embed/utzkfyumjrm?autoplay = 1”&#xA;数据标题=“ YouTube视频”&#xA;&gt;&#xA;&lt;div class =“ play-button”&gt; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;H2 ID =“学习观察性概念”&gt;学习可观察性概念&lt;/h2&gt;&#xA;&lt;p&gt;有时您会遇到陌生的概念或技术，尤其是那些具有多字母缩写词的概念或技术。当您不断地触及自己喜欢的搜索引擎或外部聊天代理以了解更多信息时，这会减慢您的速度。 &lt;/p&gt;&#xA;&lt;p&gt;好吧，如果您对可观察性的影响有限，可能会发生同样的事情。但是，对于Grafana Assistant，您将获得相同的帮助，而无需离开Grafana Cloud即可搜索其他地方，而无需上下文切换！&lt;/p&gt;&#xA;&lt;p&gt;另外，还有一个额外的转折：答案将根据您的可观察性堆栈量身定制。例如，如果您询问正常运行时间，并且您有HTTP服务器记录并向Grafana提供指标，则Grafana Assistant将聪明地弄清楚您所指的内容。&lt;/p&gt;&#xA;&lt;p&gt;尝试这些示例问题以亲自查看：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;什么是汇总度量？&lt;/li&gt;&#xA;&lt;li&gt; SLO代表什么？&lt;/li&gt;&#xA;&lt;li&gt;多少指标太多？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1080x1080/de444947ac6/observibility-concepts.gif”&#xA;alt =“可观察性概念”/&gt; &lt;/p&gt;&#xA;&lt;h2 id =“ compare-concepts-from-different-platforms”&gt;比较来自不同平台的概念&lt;/h2&gt;&#xA;&lt;p&gt;现在，也许您精通可观察性，但您不太熟悉格拉法纳。从另一个平台移动时，某些概念可能无法完全排队。 Grafana也可能与以前的工具不同地解决某些问题。 &lt;/p&gt;&#xA;&lt;p&gt;但不用担心 -  Grafana助手一般意识到足以比较这些概念并解释差异，包括在要求的情况下提供额外的细节。而且不要害怕根据需要提出后续问题（最后详细介绍）。&lt;/p&gt;&#xA;&lt;p&gt;尝试以下示例问题，并根据需要替换大写文本：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在我的其他可观察性堆栈中，我使用了可观察性_feature。 Grafana等效的是什么？&lt;/li&gt;&#xA;&lt;li&gt; Grafana称呼什么？&lt;/li&gt;&#xA;&lt;li&gt;在old_observabililty_stack中，我曾经能够做cool_thing。我如何在Grafana中实现这一目标？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1080x1080/5fa5beefdf/compare-vendors.gif”&#xA;alt =“比较供应商”/&gt; &lt;/p&gt;&#xA;在&#xA;&lt;p&gt;一旦您删除了基本概念，就该找出您可以在Grafana Cloud中实际做的事情了。但是，也许您还没有准备好学习所有内容&lt;/em&gt;。&lt;/p&gt;&#xA;&lt;p&gt;许多新用户只是想戳戳并首先对环境有所了解。这种方法的问题在于，您不知道自己不知道的东西，当您有很多选择时，这可能会特别令人沮丧（而且压倒性）。&lt;/p&gt;&#xA;&lt;p&gt; Grafana Assistant坐在您在Grafana Cloud中工作的任何工作旁边。更重要的是，它可以在页面上看到上下文，因此特别回答有关您的堆栈的问题，通常包括您实际的遥测信号中的真实示例。&lt;/p&gt;&#xA;&lt;p&gt;尝试以下样本问题：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我应该在此页面上做什么？&lt;/li&gt;&#xA;&lt;li&gt;您能解释我在这里看到的数据吗？&lt;/li&gt;&#xA;&lt;li&gt;我在哪里可以了解更多？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1080x1080/542D1B9114/context-aware-tips.gif”&#xA;alt =“上下文感知技巧”/&gt; &lt;/p&gt;&#xA;&lt;H2 ID =“关注式相互作用教程”&gt;遵循自定义的交互式教程&lt;/h2&gt;&#xA;&lt;p&gt;继续您的入职经验时，也许您会发现自己对特定UI的工作方式或如何使用工具解决特定问题感到好奇。 Grafana Assistant可以提供根据您的请求进行定制的分步指南，跳过无关紧要的步骤，而是专注于最重要的是您的需求。&lt;/p&gt;&#xA;&lt;p&gt;进行更改时，您可以继续进行对话。要么继续探索以了解更多详细信息，要么要求它在进行切线方面提供帮助。助手将适应您最佳工作的方式。&lt;/p&gt;&#xA;&lt;p&gt;尝试以下样本问题：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如何为此指标添加警报？&lt;/li&gt;&#xA;&lt;li&gt;添加NE需要什么W Grafana Cloud IRM中的w待命时间表？&lt;/li&gt;&#xA;&lt;li&gt;我应该遵循哪些步骤来声明测试事件？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1080x1080/188589f9c5/interactive-tutorials.gif”&#xA;alt =“一个简短的视频，向某人询问助手如何在Grafana Cloud IRM中添加呼叫时间表”/&gt; &lt;/p&gt;&#xA;&lt;BlockQuote&gt;&#xA;&lt;p&gt; &lt;strong&gt;注意：&lt;/strong&gt;首先需要从Grafana助手开始，它也可以帮助您。您第一次打开聊天代理时，您将通过Grafana Assistant的专用教程引导您。&lt;/p&gt; &lt;/blockquote&gt;&#xA;&lt;h2 id =“ ask-about test-practices”&gt;询问最佳实践&#xA;&lt;p&gt;在这一点上，您已经准备好完善和优化使用情况，但是您不确定需要做些不同的事情。值得庆幸的是，Grafana Assistant充满了有关平台的知识，可以帮助您做到这一点。 &lt;/p&gt;&#xA;&lt;p&gt;通过发送给LLM的提示和工具，其中一些信息是烘烤的。其他知识是通过访问Grafana文档和博客文章来提供的，这些文档和博客文章在AI的估计中具有特殊的重量，并将帮助您指导您达到最佳解决方案。随着文档的实时删除，您可以确保您始终收到有关我们产品的最新信息。&lt;/p&gt;&#xA;&lt;p&gt;尝试以下样本问题：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我应该监视什么以确保卡夫卡正确运行？&lt;/li&gt;&#xA;&lt;li&gt;我应该警报什么级别的CPU使用？&lt;/li&gt;&#xA;&lt;li&gt;我应该在堆栈中的所有内容中添加仪器，还是重要的事情？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1080x1080/bafc3ae041/best-practices.gif”&#xA;alt =“最佳实践”/&gt; &lt;/p&gt;&#xA;&lt;BlockQuote&gt;&#xA;在&#xA;&lt;p&gt; Grafana助手将始终尝试回答您的问题，但是它的背景越多，越好。 &lt;/p&gt;&#xA;&lt;p&gt;如果犯错误，可以在看起来困惑的情况下提供更多的上下文，并且不要害怕将其引导到您想要的各种答案。在这方面，这就像与同事合作：您提供的背景越多，整个协作越好。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;奖励提示：&lt;/strong&gt;保持礼貌。当语言在情感上是积极的时，AI似乎会产生更好的结果。我们将其作为练习，让读者弄清楚为什么会这样。&lt;/p&gt; &lt;/blockquote&gt;&#xA;&lt;h2 id =“你和格拉法纳 - 助手 - 待在待遇”&gt;你和格拉法纳助手都会在所有时间&lt;/h2&gt;中变得更好&lt;/h2&gt;&#xA;&lt;p&gt;可观察性是多种多样的：不同的公司有不同的堆栈来解决不同的问题。在Grafana Labs，我们支持各种行业的小型公司，这也意味着观察性问题差异很大。 &lt;/p&gt;&#xA;&lt;p&gt;但是，我们不想开发仅适应狭窄情况的助手功能。取而代之的是，我们希望Grafana助手帮助任何人（没有他们的可观察性成熟度）来更加顺利地运行事情。&lt;/p&gt;&#xA;&lt;p&gt;启用Grafana助手很简单：单击UI右上角的Grafana助手符号，或单击UI左侧的主导航中的相应菜单项。 &lt;/p&gt;&#xA;&lt;p&gt;当您使用Grafana助手时，您还将学习与LLM互动的细微差别。提示和上下文是LLM的一切，因此有些事情会比其他事情更好。当您使用助手解决现实世界中的问题时，与之互动的方式将发展。因此，如果您尝试的前几件事不要给您您追随的结果，请不要下降。&lt;/p&gt;&#xA;&lt;p&gt;我们正在大力投资以不断发展Grafana助手，因此您应该每周注意到行为的进步。您的反馈可以帮助我们做到这一点，因此请使用大拇指和向下图标，如果可以的话，请留下有意义的评论，以解释发生的事情以及您的期望。&lt;/p&gt;&#xA;&lt;p&gt;因此，立即开始使用Grafana Assistant来升级您的可观察性经验！而且，如果您想了解有关Grafana Assistant和我们整个AI工具的更多信息，请注册&lt;a href =“/events/events/observabilitycon/”&gt; observabilitycon 2025 &lt;/a&gt;在伦敦或&lt;a a href =“/events/eventserviability cospervibalityconcon-on-the-the-the-road/”&gt; sibervability cobserabilityconconcon in you aborability &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/&#xA;在&#xA;&lt;p&gt; &lt;strong&gt;什么是Grafana助手？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; Grafana Assistant是Grafana Cloud中的AI驱动代理商，可帮助您使用自然语言查询，构建和对解决方向进行更快的排除。它简化了常见的工作流，例如编写Promql，LogQL或TraceQl查询，并创建仪表板，同时使您可以控制。在我们的博客文章中了解更多信息。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt; Grafana Cloud如何使用AI可观察性？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; Grafana Cloud的AI在整个可观察性生命周期中为工程师和操作员提供了支持 - 从检测和分类到解释和解决方案。我们专注于可解释的辅助AI，以增强您的工作流程。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt; Grafana助手解决了哪些问题？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; Grafana助手通过使您能够：&lt;/p&gt;来帮助降低劳力和提高生产率&#xA;&lt;ul&gt;&#xA;&lt;li&gt;更快地写和调试查询&lt;/li&gt;&#xA;&lt;li&gt;构建和优化仪表板&lt;/li&gt;&#xA;&lt;li&gt;调查问题和异常&lt;/li&gt;&#xA;&lt;li&gt;了解遥测趋势和模式&lt;/li&gt;&#xA;&lt;li&gt;更直观地导航grafana &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;strong&gt; Grafana Labs将AI构建为可观察性的方法是什么？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt;我们周围建立：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;信任和透明度的人类互动&lt;/li&gt;&#xA;&lt;li&gt;关注实际用户价值的结果优先经验&lt;/li&gt;&#xA;&lt;li&gt;多信号支持，包括将跨指标，日志，痕迹和配置文件的数据相关联&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;strong&gt;做grAfana OSS具有AI功能？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt;默认情况下，Grafana OSS不包含Grafana Cloud中的内置AI功能，但是您可以使用&lt;a href =“/docs/docs/grafana-cloud/machine-learning/llm/”&gt; &lt;/a&gt; &lt;a&gt; &lt;a href =“ href =” href =“此开源插件可安全地连接到OpenAI或Azure OpenAI等提供商，使您可以使用自然语言来生成查询，探索仪表板并与Grafana进行交互。它还提供了&lt;a href =“ https://github.com/grafana/mcp-grafana” target =“ _ blank” rel =“ noopener noreferrer”&gt; mcp（model上下文上下文协议）服务器&lt;/a&gt;，它允许您允许您授予自己喜欢的AI Application访问GrafaNa实例。 &lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;为什么不开放源代码？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; Grafana Assistant在Grafana Cloud中运行，以支持企业需求并大规模管理基础架构。我们致力于OSS并继续对此进行大量投资 - 包括&lt;a href =“/docs/docs/grafana-cloud/machine-learning/llm/”&gt; llm插件&lt;/a&gt;和&lt;a href =“ href =” Noreferrer”&gt; MCP服务器&lt;/a&gt;，因此社区可以在Grafana OSS中构建自己的AI驱动体验。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt; Grafana Cloud的AI功能是否可以自己采取行动？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt;今天，我们关注的是人类的工作流程，这些工作流程使工程师在减少辛劳的同时保持控制。但是，随着AI系统成熟并证明更可靠，某些任务可能需要更少的监督。我们正在建立一个支持这两者的基础：现在透明，辅助AI，灵活地发展成为更有意义的更自主功能。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;我在哪里可以了解有关Grafana的AI策略的更多信息？&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;a href =“/blog/2025/08/14/ai in-in-in-in-in-in-in-in-in-at-at-at-at-at-labs-labs-babs-maberservibility-easy and-easy and-cossible-cossible-for-everyone/？pg = pg = blog＆plcmt＆plcmt = body-txt = body-txt = body-txt“&gt;查看我们的博客文章&lt;//a&gt;直接听取我们的博客文章&lt;/a&gt;直接听取我们的机器人的信息。  &lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt; &lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个慷慨的永远的层次和计划。&lt;strong&gt; &lt;a href =“/auth/auth/inper-up/create-user/？pg = blog＆plcmt = body-txt = body-txt”&gt;现在免费注册&lt;/a&gt; &lt;/a&gt; &lt;/strong&gt;！&lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【New in Grafana Alerting: a faster, more scalable way to manage your alerts in Grafana】Grafana警报中的新事物：一种管理Grafana警报的更快，更可扩展的方法</title>
      <link>https://grafana.com/blog/2025/08/05/new-in-grafana-alerting-a-faster-more-scalable-way-to-manage-your-alerts-in-grafana/</link>
      <description>【&lt;p&gt;Effective alerting is the backbone of any observability strategy. But as your systems grow, managing hundreds or even thousands of rules can become a significant challenge. And when something goes wrong, the last thing you want is to fight with your tooling. &lt;/p&gt;&#xA;&lt;p&gt;That&amp;rsquo;s why we&amp;rsquo;re thrilled to announce the launch of our brand new alert rules list page, which we built to provide a faster, more intuitive, and scalable experience for teams of all sizes!&lt;/p&gt;&#xA;&lt;p&gt;This isn&amp;rsquo;t just a minor update; it&amp;rsquo;s a complete, ground-up redesign. We&amp;rsquo;ve listened to your feedback and focused on creating a workflow that helps you see what matters most, cutting through the noise and empowering you to take action.&lt;/p&gt;&#xA;&lt;p&gt;In this post, we&amp;rsquo;ll explore the new features and show you how the redesign will make your on-call life a little bit easier. We&amp;rsquo;ll also dig into the challenges we faced in implementing these changes and the solutions we ultimately landed on to improve your Grafana Alerting experience.&lt;/p&gt;&#xA;&lt;h2 id=&#34;evolving-grafana-alerting-identifying-ux-improvements&#34;&gt;Evolving Grafana Alerting: Identifying UX improvements&lt;/h2&gt;&#xA;&lt;p&gt;While the existing alert rule list has been a core part of the workflow for years, we identified several areas where we could make significant enhancements:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Performance:&lt;/strong&gt; For many of you managing large-scale deployments, this was a major bottleneck. The page could become sluggish and difficult to use when handling thousands of alert rules. &lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Clarity:&lt;/strong&gt; The user experience also felt cumbersome at times. The grouped view, which combined namespaces and group names, was often confusing. It was also hard to get a quick overview when you had to expand multiple collapsible sections just to find a search result.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Usability:&lt;/strong&gt; The page was simply trying to do too much. It was overloaded with information, which often distracted from its core purpose: to help you find and manage your alert rules quickly. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;a-tour-of-the-new-alert-rules-page-clarity-and-speed&#34;&gt;A tour of the new alert rules page: clarity and speed&lt;/h2&gt;&#xA;&lt;p&gt;Our primary goal was to create an experience that is focused, intuitive, and fast for all types of users—from those managing a small set of rules for a personal project to a large enterprise managing tens of thousands of rules across multiple teams. &lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s walk through the key improvements.&lt;/p&gt;&#xA;&lt;h3 id=&#34;two-views-two-purposes-grouped-and-list&#34;&gt;Two views, two purposes: grouped and list&lt;/h3&gt;&#xA;&lt;p&gt;We&amp;rsquo;ve replaced the old, complex structure with two distinct views that serve clear purposes: &lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Grouped view:&lt;/strong&gt; If you need to understand the structure of your alerting setup or find rules within a specific team&amp;rsquo;s namespace, this is the view for you. The grouped view is designed to show you how your rules are organized. It provides a clear hierarchy, allowing you to drill down from namespaces to the specific groups you&amp;rsquo;re looking for.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1360px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/alert-rules-list-page-update/alpha-squad.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/alert-rules-list-page-update/alpha-squad.png&#34;data-srcset=&#34;/media/blog/alert-rules-list-page-update/alpha-squad.png?w=320 320w, /media/blog/alert-rules-list-page-update/alpha-squad.png?w=550 550w, /media/blog/alert-rules-list-page-update/alpha-squad.png?w=750 750w, /media/blog/alert-rules-list-page-update/alpha-squad.png?w=900 900w, /media/blog/alert-rules-list-page-update/alpha-squad.png?w=1040 1040w, /media/blog/alert-rules-list-page-update/alpha-squad.png?w=1240 1240w, /media/blog/alert-rules-list-page-update/alpha-squad.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of the new grouped view&#34;width=&#34;1360&#34;height=&#34;880&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/alert-rules-list-page-update/alpha-squad.png&#34;&#xA;alt=&#34;A screenshot of the new grouped view&#34;width=&#34;1360&#34;height=&#34;880&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;List view:&lt;/strong&gt; When you need to quickly search across all your rules, this is your new go-to. The list view is all about the rules themselves. It presents a flat list of all your alert rules, designed for quick searching and filtering. This view puts our filtering capabilities front and center, allowing you to instantly narrow down thousands of rules to find exactly what you need.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 1614px;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;/media/blog/alert-rules-list-page-update/clear-filters-2.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;/media/blog/alert-rules-list-page-update/clear-filters-2.png&#34;data-srcset=&#34;/media/blog/alert-rules-list-page-update/clear-filters-2.png?w=320 320w, /media/blog/alert-rules-list-page-update/clear-filters-2.png?w=550 550w, /media/blog/alert-rules-list-page-update/clear-filters-2.png?w=750 750w, /media/blog/alert-rules-list-page-update/clear-filters-2.png?w=900 900w, /media/blog/alert-rules-list-page-update/clear-filters-2.png?w=1040 1040w, /media/blog/alert-rules-list-page-update/clear-filters-2.png?w=1240 1240w, /media/blog/alert-rules-list-page-update/clear-filters-2.png?w=1920 1920w&#34;&#xA;data-sizes=&#34;auto&#34;alt=&#34;A screenshot of the new list view&#34;width=&#34;1614&#34;height=&#34;972&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;/media/blog/alert-rules-list-page-update/clear-filters-2.png&#34;&#xA;alt=&#34;A screenshot of the new list view&#34;width=&#34;1614&#34;height=&#34;972&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h3 id=&#34;a-cleaner-more-focused-ui&#34;&gt;A cleaner, more focused UI&lt;/h3&gt;&#xA;&lt;p&gt;Finally, we&amp;rsquo;ve decluttered the interface to focus on the core task of managing your alert rules. We&amp;rsquo;ve created a cleaner, more streamlined view that surfaces only the most crucial details:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Rule name&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Location&lt;/strong&gt; (folder and group)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt; (alerting or recording)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;State&lt;/strong&gt; (for alerting rules, this will be alerting, normal, or pending)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The rule name is now a clickable link that takes you directly to the rule details page for a deeper look. For actions, we&amp;rsquo;ve simplified the UI to just two buttons: an &lt;strong&gt;Edit&lt;/strong&gt; button that takes you to the edit form, and a &lt;strong&gt;More&lt;/strong&gt; menu that gives you access to less frequent options. This new design makes it easier to assess your rules at a glance and take action without distraction.&lt;/p&gt;&#xA;&lt;div&#xA;x-data=&#34;{ vimeo_is_up: false, responded: false }&#34;&#xA;x-init=&#34;fetch(`https://vimeo.com/api/oembed.json?url=https://vimeo.com/1102260051`)&#xA;.then(response =&gt; {&#xA;responded = true;&#xA;response &amp;&amp; response.status === 200 ? vimeo_is_up = true : vimeo_is_up = false;&#xA;})&#xA;.catch(error =&gt; {&#xA;responded = true;&#xA;})&#34;&#xA;x-cloak&gt;&#xA;&lt;figure class=&#34;p-0 m-0&#34;&gt;&#xA;&lt;template x-if=&#34;vimeo_is_up&#34;&gt;&#xA;&lt;div class=&#34;my-1&#34; style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;&lt;iframe src=&#34;https://player.vimeo.com/video/1102260051?transparent=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&lt;template x-if=&#34;responded &amp;&amp; !vimeo_is_up&#34;&gt;&#xA;&lt;p class=&#34;bg-gray-17 p-1&#34;&gt;There&amp;rsquo;s supposed to be a video here, but for some reason there isn&amp;rsquo;t. Either we entered the id wrong (oops!), or Vimeo is down. If it&amp;rsquo;s the latter, we&amp;rsquo;d expect they&amp;rsquo;ll be back up and running soon. In the meantime, &lt;a href=&#34;/blog/&#34;&gt;check out our blog&lt;/a&gt;!&lt;/p&gt;&#xA;&lt;/template&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/div&gt;&#xA;&lt;h3 id=&#34;a-focus-on-performance&#34;&gt;A focus on performance&lt;/h3&gt;&#xA;&lt;p&gt;To address the performance issues of the old page, the new rules list is built on a brand-new, paginated API. This means that data is loaded in efficient chunks, providing a consistently fast and responsive experience. Whether you have a few hundred rules or several thousand, browsing and searching your alerts should now be a breeze.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-to-get-started-with-the-new-rules-list&#34;&gt;How to get started with the new rules list&lt;/h2&gt;&#xA;&lt;p&gt;Ready to give it a try? Here’s how you can access the new and improved alert rules list:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;For Grafana Cloud users:&lt;/strong&gt; We are currently rolling out the new rules list page across all Grafana Cloud instances. You should see it in your account soon, with no action required on your end.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;For Grafana OSS and Enterprise users:&lt;/strong&gt; The new page is generally available starting in Grafana 12.1. It is currently accessible via a feature toggle. To enable it, find the &lt;code&gt;feature_toggles&lt;/code&gt; section in your Grafana configuration file and add the &lt;strong&gt;alertingListViewV2&lt;/strong&gt; toggle:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;[feature_toggles]&#xA;alertingListViewV2 = true&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;After restarting Grafana, you will see the new rules list page. &lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Please note that we plan to make this the default experience in a future Grafana release.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;how-we-solved-the-performance-puzzle&#34;&gt;How we solved the performance puzzle&lt;/h2&gt;&#xA;&lt;p&gt;Building a more intuitive UI wasn&amp;rsquo;t always an intuitive process. Next, we&amp;rsquo;ll take a brief look at what we had to do behind the scenes to make it all work smoothly for you (&lt;a href=&#34;/blog/2025/07/17/new-in-grafana-alerting-a-faster-more-scalable-way-to-manage-your-alerts-in-grafana/#whats-next-for-grafana-alerting-from-management-to-troubleshooting&#34;&gt;Skip ahead to the next section&lt;/a&gt; if you&amp;rsquo;d want go straight to learning about the other UI improvements we have planned for Grafana Alerting.)&lt;/p&gt;&#xA;&lt;h3 id=&#34;the-challenge-juggling-speed-and-consistency&#34;&gt;The challenge: Juggling speed and consistency&lt;/h3&gt;&#xA;&lt;p&gt;To present a complete picture of your rules, the Grafana Alerting UI needs to pull data from two primary sources. The State API is fast and was recently updated to support pagination, but it&amp;rsquo;s &lt;strong&gt;eventually consistent&lt;/strong&gt;. This means changes made to rules could take a while to be reflected in the UI. On the other hand, the Config API is &lt;strong&gt;strongly consistent&lt;/strong&gt;, showing changes immediately—but it suffers from performance issues at a large scale because it lacks pagination.&lt;/p&gt;&#xA;&lt;p&gt;The old page prioritized data consistency by relying on the slower Config API, which led to poor performance for users with many rules. We knew that to build a truly great experience, we needed to take the best from both worlds.&lt;/p&gt;&#xA;&lt;h3 id=&#34;the-solution-a-layered-approach&#34;&gt;The solution: A layered approach&lt;/h3&gt;&#xA;&lt;p&gt;The recent addition of pagination to the State API enabled us to build a new hybrid solution that layers data from both APIs to get the best of each.&lt;/p&gt;&#xA;&lt;p&gt;The new list page first uses the fast, paginated &lt;strong&gt;Prometheus State API&lt;/strong&gt; to fetch the overall structure of the rule groups. This provides the backbone of the list very quickly. Then, to ensure you&amp;rsquo;re always seeing the most recent information, the UI uses the &lt;strong&gt;Config API&lt;/strong&gt; to enrich this view with the latest, strongly consistent rule data on top of that paginated structure.&lt;/p&gt;&#xA;&lt;p&gt;This approach does have a trade-off: What happens if you create a rule in a new rule group? It will take some time for that new group to propagate to the State API. To handle this, the UI will immediately display your new rule and an indicator to let you know that changes are still in progress in the background. This propagation typically doesn&amp;rsquo;t take more than a few seconds, after which the view returns to its fully consistent state.&lt;/p&gt;&#xA;&lt;h3 id=&#34;the-quest-for-a-stable-identifier&#34;&gt;The quest for a stable identifier&lt;/h3&gt;&#xA;&lt;p&gt;Another significant challenge we had to solve was identifiers. A Prometheus rule cannot be uniquely identified other than by its position within its group, which is not stable. This poses a problem for UI features that require a stable reference, like providing a direct URL to a rule&amp;rsquo;s edit page.&lt;/p&gt;&#xA;&lt;p&gt;To solve this, we create a stable &amp;ldquo;fingerprint&amp;rdquo; for each rule by generating a hash from its location (namespace, group, name) and its attributes (labels, annotations, and query). This introduced another complication, as the representation of a query can differ between the two APIs. The State API might apply formatting, while the Config API provides the exact, raw version from the database. A hash generated from the State API&amp;rsquo;s version of a rule might not match one from the Config API&amp;rsquo;s version.&lt;/p&gt;&#xA;&lt;p&gt;The rule details and edit pages must show the most up-to-date information, which requires the strong consistency of the Config API. To ensure a link to a rule works correctly, the identifier in the URL must be generated from that same, strongly consistent data. Therefore, we also use the Config API to build these stable identifiers, guaranteeing that the hashed IDs are predictable and work correctly across the application.&lt;/p&gt;&#xA;&lt;h3 id=&#34;navigating-frontend-vs-backend-filtering&#34;&gt;Navigating frontend vs. backend filtering&lt;/h3&gt;&#xA;&lt;p&gt;The final piece of the performance puzzle was filtering. Both the State and Config APIs provide very limited filtering capabilities. This means that most of the work to filter rules by name, label, or status has to be done on the frontend.&lt;/p&gt;&#xA;&lt;p&gt;This poses another interesting challenge when dealing with pagination. Since the filtering happens in the browser, our frontend pagination is not in sync with the backend API&amp;rsquo;s pagination. For example, to populate a single page of 20 search results in the UI, the frontend might need to query multiple pages from the backend API. &lt;/p&gt;&#xA;&lt;p&gt;To manage this, the frontend requests pages from all Grafana Alerting-configured data sources, combines the responses, and filters them according to the search criteria. This allows the UI to display results as soon as they are available from any data source, effectively streaming the results and keeping the experience fast and fluid.&lt;/p&gt;&#xA;&lt;h2 id=&#34;whats-next-for-grafana-alerting-from-management-to-troubleshooting&#34;&gt;What’s next for Grafana Alerting? From management to troubleshooting&lt;/h2&gt;&#xA;&lt;p&gt;This new rules list is a huge step forward for managing your alerts, but we know that&amp;rsquo;s only half the story. Once an alert starts firing, the next critical task is to troubleshoot it.&lt;/p&gt;&#xA;&lt;p&gt;That’s why our team&amp;rsquo;s next major endeavor is to build a better experience for triaging active alerts. We&amp;rsquo;re designing a whole new section in Grafana dedicated to helping you find, investigate, and understand your firing alerts when they happen. Our goal is to give you the context you need to resolve issues faster.&lt;/p&gt;&#xA;&lt;p&gt;Stay tuned for more updates as we get closer to releasing these new capabilities!&lt;/p&gt;&#xA;&lt;h2 id=&#34;a-more-powerful-grafana-alerting-experience&#34;&gt;A more powerful Grafana Alerting experience&lt;/h2&gt;&#xA;&lt;p&gt;Focusing on performance, providing two distinct views for different use cases, and decluttering the UI, we’ve created a much more efficient way for anyone to manage their alerting landscape.&lt;/p&gt;&#xA;&lt;p&gt;Our team is incredibly excited to deliver this new experience to our community. We hope it helps you spend less time searching for your rules and more time building amazing dashboards and observability workflows.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud&lt;/a&gt; is the easiest way to get started with metrics, logs, traces, dashboards, and more. We have a generous forever-free tier and plans for every use case.&lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt; Sign up for free now&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;】&lt;p&gt;有效警报是任何可观察性策略的骨干。但是，随着系统的增长，管理数百甚至数千个规则可能会成为一个重大挑战。当出现问题时，您想要的最后一件事就是与工具作斗争。 &lt;/p&gt;&#xA;&lt;p&gt;这就是为什么我们很高兴宣布发布我们的全新警报规则列表页面，我们为各种规模的团队提供了更快，更直观，更可扩展的体验！&lt;/p&gt;！&lt;/p&gt;&#xA;&lt;p&gt;这不仅仅是一个较小的更新；这是一个完整的基础重新设计。我们已经倾听了您的反馈意见，并专注于创建一个工作流程，该工作流程可帮助您了解最重要的事情，削减噪音并授权您采取行动。&lt;/p&gt;&#xA;&lt;p&gt;在这篇文章中，我们将探讨新功能，并向您展示重新设计如何使您的呼叫生活更加轻松一些。我们还将探讨实施这些更改和最终降落以改善您的Grafana警报体验的解决方案所面临的挑战。&lt;/p&gt;&#xA;&lt;H2 ID =“ Evolving-Grafana-Alerting-stendify-ux-Improvements”&gt;不断发展的Grafana警报：识别UX改进&lt;/h2&gt;&#xA;&lt;p&gt;虽然现有的警报规则列表多年来一直是工作流程的核心部分，但我们确定了几个领域，我们可以进行重大增强：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt; &lt;strong&gt;性能：&lt;/strong&gt;对于许多管理大规模部署的人，这是一个主要的瓶颈。处理数千个警报规则时，该页面可能会变得迟钝且难以使用。 &lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;清晰度：&lt;/strong&gt;有时用户体验也会感到麻烦。组合名称空间和组名称的分组视图通常令人困惑。当您不得不扩展多个可折叠部分以找到搜索结果时，很难快速概述。&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;可用性：&lt;/strong&gt;页面只是试图做太多。它的信息超载，这些信息通常会分散其核心目的：帮助您快速找到和管理警报规则。 &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id =“ a-tour-tour-tour-alert-rules-page-clarity and-speed”&gt;访问新的警报规则页面：清晰度和速度&lt;/h2&gt;&#xA;&lt;p&gt;我们的主要目标是创造一种专注，直观和快速的体验，从管理个人项目的一小部分规则的人到大型企业，管理多个团队的数以万计规则。 &lt;/p&gt;&#xA;&lt;p&gt;让我们浏览钥匙改进。&lt;/p&gt;&#xA;在&#xA;&lt;p&gt;我们用两个有明确目的的不同视图代替了旧的复杂结构：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt; &lt;strong&gt;分组视图：&lt;/strong&gt;如果您需要了解警报设置的结构或在特定团队的命名空间中找到规则，这就是您的视图。分组视图旨在向您展示如何组织规则。它提供了一个清晰的层次结构，允许您从命名空间钻到您要寻找的特定组。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1360px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/arter-rules-lules-list-page-update/alpha-squad.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/arter-rules-list-list-page-update/alpha-squad.png” data-srcset =“/媒体/blog/arter/arter-rules-lules-lules-lules-list-page-update/alpha-squad.png？ /media/blog/alert-rules-list-page-update/alpha-squad.png?w=750 750w, /media/blog/alert-rules-list-page-update/alpha-squad.png?w=900 900w, /media/blog/alert-rules-list-page-update/alpha-squad.png?w=1040 1040W，/media/blog/alert-rules-list-page-update/alpha-squad.png?w=1240 1240W，/media/blog/alert-rules-list-list-page-update/alpha-squad.png.w=1920 1920w“&#xA;data-sizes =“ auto” alt =“新分组视图的屏幕截图” width =“ 1360” height =“ 880”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/arter-rules-lules-list-page-update/alpha-squad.png”&#xA;alt =“新分组视图的屏幕截图” width =“ 1360”高度=“ 880”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt; &lt;strong&gt;列表视图：&lt;/strong&gt;当您需要快速跨所有规则搜索时，这是您的新首选。列表视图全都与规则本身有关。它列出了您的所有警报规则的平坦列表，该规则旨在快速搜索和过滤。此视图使我们的过滤功能的前部和中心使您能够立即缩小数千个规则以找到您需要的东西。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：1614px;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“/媒体/blog/arter-rules-lules-list-page-update/clear-filters-2.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“/媒体/blog/arter-rules-list-list-page-update/clear-filters-2.png” data-srcset =“/媒体/blog/warre/arter-rules-lules-lules-lules-list-page-update/clear-filters-2.png- w = 320 320w？ /media/blog/alert-rules-list-page-update/clear-filters-2.png?w=750 750w，/media/Blog/Alert-rules-list-list-list-page-update/clear-filters-clear-filters-2.png?w=900 900w，/media/media/media/blog/alert-rules-list-page-page-page-page-page-page-ppage-ppece104 1040W，/media/blog/alert-rules-list-page-update/clear-filters-2.png?w=1240 1240W，/media/blog/alert-rules-list-list-page-update/clear--update/clear-filters-filters-filters-filters-2.png?w=1920 1920w“&#xA;data-sizes =“ auto” alt =“新列表视图的屏幕截图” width =“ 1614” height =“ 972”/&gt;&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“/媒体/blog/arter-rules-lules-list-page-update/clear-filters-2.png”&#xA;alt =“新列表的屏幕截图”视图“ width =“ 1614”高度=“ 972”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;H3 ID =“ A-CETENER-MORE-MORE-MORE COUSED-UI”&gt;一个清洁器，更集中的UI &lt;/h3&gt;&#xA;&lt;p&gt;最后，我们拒绝了将界面放置在关注管理警报规则的核心任务上。我们创建了一个更清洁，更精简的视图，该视图仅表现出最关键的细节：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt; &lt;strong&gt;规则名称&lt;/strong&gt; &lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;位置&lt;/strong&gt;（文件夹和组）&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;类型&lt;/strong&gt;（警报或录制）&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;状态&lt;/strong&gt;（为了提醒规则，这将是警报，正常或待处理）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;现在，规则名称是一个可单击的链接，可将您直接带到“规则详细信息”页面以进行更深入的外观。对于操作，我们将UI简化为两个按钮：&lt;strong&gt;编辑&lt;/strong&gt;按钮，将您带入编辑表单，而A &lt;strong&gt; More &lt;/strong&gt;菜单可让您访问较少的频率选项。这种新的设计使您更容易一目了然地评估您的规则并采取行动而不会分散注意力。&lt;/p&gt;&#xA;&lt;div&#xA;x-data =“ {vimeo_is_up：false，响应：false}”&#xA;x-init =“ fetch（`https：//vimeo.com/api/oembed.json？url = https：//vimeo.com/1102260051`）&#xA;然后（响应=&gt; {&#xA;响应= true;&#xA;响应&amp;&amp; response.status === 200？ vimeo_is_up = true：vimeo_is_up = false;&#xA;}））&#xA;.catch（错误=&gt; {&#xA;响应= true;&#xA;}）””&#xA;X-Cloak&gt;&#xA;&lt;figie class =“ P-0 M-0”&gt;&#xA;&lt;template x-if =“ vimeo_is_up”&gt;&#xA;&lt;div class =“ my-1” style =“位置：相对; padding-bottom：56.25％;高度：0;溢出：隐藏;&#xA;&lt;iframe src =“ https://player.vimeo.com/video/1102260051？transparent = 0“ style =”位置：绝对; absolute; top; top：0; left：0; width：width：100％;高度：100％; 100％; 100％; border; border：0; border：0;&#39;; title =“ vimeo视频” webkitallowlscreen mozallowlscreen允许screen&gt; &lt;/iframe&gt;&#xA;&lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&lt;template x-if =“响应&amp;&amp;！vimeo_is_up”&gt;&#xA;&lt;p class =“ bg-gray-17 p-1”&gt;这里应该有一个视频，但由于某种原因没有。我们要么输入ID错误（糟糕！），要么Vimeo降低了。如果是后者，我们希望他们很快就会备份。同时，&lt;a href =“/blog/”&gt;查看我们的博客&lt;/a&gt;！&lt;/p&gt;&#xA;&lt;/template&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/div&gt;&#xA;&lt;H3 ID =“ a-pocus-on-performance”&gt;专注于性能&lt;/h3&gt;&#xA;&lt;p&gt;要解决旧页面的性能问题，新的规则列表构建在崭新的分页API上。这意味着数据加载到有效的块中，提供始终如一的快速响应体验。无论您有几百条规则还是数千条，浏览和搜索警报现在都应该轻而易举。&lt;/p&gt;&#xA;&lt;h2 id =“ howto-get-started with-new-rules list list”&gt;如何开始使用新规则列表&lt;/h2&gt;&#xA;&lt;p&gt;准备尝试一下吗？您可以访问新的和改进的警报规则列表：&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;对于Grafana Cloud用户：&lt;/strong&gt;我们目前正在所有Grafana Cloud实例上推出新规则列表页面。您应该尽快在帐户中看到它，而您的目的不需要任何措施。&lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;对于Grafana OSS和Enterprise用户：&lt;/strong&gt;新页面通常从Grafana 12.1开始可用。目前可以通过功能切换访问。要启用它，请找到&lt;code&gt; feature_toggles &lt;/code&gt; grafana配置文件中的部分，然后添加&lt;strong&gt; alertinglistviewv2 &lt;/strong&gt;切换：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; [feature_toggles]&#xA;AlertingListViewV2 = true &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;重新启动Grafana后，您将看到新的规则列表页面。 &lt;/p&gt;&#xA;&lt;BlockQuote&gt;&#xA;&lt;p&gt;请注意，我们计划在将来的Grafana版本中为此提供默认体验。&lt;/p&gt; &lt;/blockquote&gt;&#xA;&lt;h2 id =“如何解决绩效式式式“如何解决”&gt;我们如何解决性能拼图&lt;/h2&gt;&#xA;&lt;p&gt;构建更直观的UI并不总是直观的过程。 Next, we’ll take a brief look at what we had to do behind the scenes to make it all work smoothly for you (&lt;a href=&#34;/blog/2025/07/17/new-in-grafana-alerting-a-faster-more-scalable-way-to-manage-your-alerts-in-grafana/#whats-next-for-grafana-alerting-from-management-to-troubleshooting&#34;&gt;Skip ahead to the next &lt;/a&gt;如果您想直接了解我们计划为Grafana提示的其他UI改进。）&lt;/p&gt;&#xA;&lt;h3 id =“挑战 - 贾格林速度与一致性”&gt;挑战：杂耍速度和一致性&lt;/h3&gt;&#xA;&lt;p&gt;要介绍您的规则的完整图片，Grafana提醒UI需要从两个主要来源获取数据。州API很快，最近已更新以支持分页，但最终是一致的&lt;/strong&gt;。这意味着对规则进行的更改可能需要一段时间才能反映在UI中。另一方面，配置API &lt;strong&gt;非常一致&lt;/strong&gt;，立即显示出变化，但由于缺乏分页而遭受了大规模的性能问题。&lt;/p&gt;&#xA;&lt;p&gt;旧页面通过依靠较慢的配置API来优先数据一致性，这导致了许多规则的用户的性能差。我们知道，要建立真正的伟大体验，我们需要从两个世界中尽力而为。&lt;/p&gt;&#xA;&lt;H3 ID =“ sullouse-a layered-apprach”&gt;解决方案：分层方法&lt;/h3&gt;&#xA;&lt;p&gt;最近在状态API上添加了分页，使我们能够构建一个新的混合解决方案，该解决方案将两个API分层以获得每个API的最佳状态。&lt;/p&gt;&#xA;&lt;p&gt;新列表页面首先使用快速，分页&lt;strong&gt; Prometheus状态API &lt;/strong&gt;来获取规则组的整体结构。这很快提供了列表的骨干。然后，为了确保您始终看到最新信息，UI使用&lt;strong&gt; config api &lt;/strong&gt;以最新的，强烈的一致性规则数据在该分页结构的顶部丰富了此视图。&lt;/p&gt;&#xA;&lt;p&gt;这种方法确实具有权衡：如果您在新规则组中创建规则？这个新小组将需要一些时间才能传播到州API。为了处理这一点，UI将立即显示您的新规则和指标，以便您知道更改仍在后台进行。这种繁殖通常不需要多几秒钟，此后返回其完全一致的状态。&lt;/p&gt;&#xA;&lt;h3 id =“ the-quest-a-a stable-endentifier”&gt;稳定标识符的追求&lt;/h3&gt;&#xA;&lt;p&gt;我们必须解决的另一个重大挑战是标识符。除了通过其在小组中的位置以外，这是不稳定的。这为需要稳定参考的UI功能提出了一个问题，例如为规则的编辑页面提供直接URL。&lt;/p&gt;&#xA;&lt;p&gt;为了解决这个问题，我们通过从其位置（名称空间，组，名称）及其属性（标签，注释和查询）生成哈希来为每个规则创建一个稳定的“指纹”。这引入了另一个并发症，因为查询的表示形式在两个API之间可能有所不同。状态API可能应用格式化，而配置API则提供了数据库中的确切原始版本。从状态API版本的规则版本生成的哈希可能与配置API版本的一个规则可能不匹配。&lt;/p&gt;&#xA;&lt;p&gt;规则详细信息和编辑页面必须显示最新的信息，这需要配置API的强一致性。为了确保与规则的链接正确起作用，URL中的标识符必须从相同的，强烈一致的数据中生成。因此，我们还使用Config API来构建这些稳定的标识符，确保Hashed ID是可以预测的，并且可以在整个应用程序中正确工作。&lt;/p&gt;&#xA;&lt;h3 id =“导航 - 弗朗德 -  vs-backend-filtering”&gt;导航前端与后端过滤&lt;/h3&gt;&#xA;&lt;p&gt;性能难题的最后一部分是在过滤。状态和配置API都提供非常有限的过滤功能。这意味着大多数要按名称，标签或状态过滤规则的工作必须在前端完成。&lt;/p&gt;&#xA;&lt;p&gt;这在处理分页时提出了另一个有趣的挑战。由于过滤发生在浏览器中，因此我们的前端分页与后端API的分页不同步。例如，要在UI中填充20个搜索结果的单页，前端可能需要从后端API查询多个页面。 &lt;/p&gt;&#xA;&lt;p&gt;为了管理这一点，前端请求所有Grafana的页面，以提醒配置的数据源，结合响应并根据搜索标准对其进行过滤。这允许UI一旦从任何数据源可用，有效地流式传输结果并保持体验快速而流动。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;h2 id =“ whats-next-for-grafana-lerting-from-to-to-to-to-to-tobleshooting&#39;&gt; Grafana警报的下一步是什么？从管理到故障排除&lt;/h2&gt;&#xA;&lt;p&gt;此新规则列表是管理Y的巨大一步我们的警报，但我们知道这只是故事的一半。一旦警报开始触发，下一个关键任务是对其进行故障。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么我们团队的下一个主要努力是为主动警报提供更好的体验。我们正在设计Grafana的一个全新部分，致力于帮助您在发生时找到，调查和理解射击警报。我们的目标是为您提供更快解决问题所需的上下文。&lt;/p&gt;&#xA;&lt;p&gt;随着我们越来越接近发布这些新功能，请继续关注更多更新！&lt;/p&gt;&#xA;在&#xA;&lt;p&gt;专注于性能，为不同用例提供两种不同的视图，并整理UI，我们为任何人管理他们的警报景观创造了一种更有效的方法。&lt;/p&gt;&#xA;&lt;p&gt;我们的团队很高兴能为我们的社区提供这一新体验。我们希望它可以帮助您更少的时间搜索规则，并更多的时间构建惊人的仪表板和可观察性工作流程。&lt;/p&gt;&#xA;&lt;p&gt; &lt;em&gt; &lt;a href =“/products/cloud/？pg = blog＆plcmt = body-txt”&gt; grafana cloud &lt;/a&gt;是从指标，日志，痕迹，痕迹，仪表板等开始的最简单方法。我们有一个宽敞的永远的层次，并为每个用例提供了计划。</description>
      <pubDate>Tue, 05 Aug 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Observability trends in Brazil: insights from our localized survey】巴西的可观察性趋势：我们本地调查的见解</title>
      <link>https://grafana.com/blog/2025/08/12/observability-trends-in-brazil-insights-from-our-localized-survey/</link>
      <description>【&lt;p&gt;Organizations in Brazil are eager to adopt some of the latest observability trends and technologies as they look to keep their software running as smoothly as possible, according to analysis of a micro survey recently conducted by Grafana Labs.&lt;/p&gt;&#xA;&lt;p&gt;Observability is an evolving space, and this is the first time Grafana Labs has run a Brazilian version of our annual &lt;a href=&#34;/observability-survey/&#34;&gt;Observability Survey&lt;/a&gt;. It’s part of our efforts to better understand how organizations there are adopting observability and to share that information with the growing Grafana community within the region and abroad.&lt;/p&gt;&#xA;&lt;p&gt;In this blog post, we’ll share the highlights from the survey results, including:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How Brazilian organizations are juggling so many tools and data sources&lt;/li&gt;&#xA;&lt;li&gt;The varying degrees of maturity in the market and how that&amp;rsquo;s pushing companies to adopt new techniques&lt;/li&gt;&#xA;&lt;li&gt;The importance of cost, ease of use, and AI in selecting observability tools, as well as the relevance of observability at the highest levels of Brazilian companies&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Continue reading to learn more about observability in Brazil, and check out our &lt;a href=&#34;https://play.grafana.org/goto/9AdIEblHg?orgId=1&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;interactive Grafana dashboard&lt;/a&gt; where you can analyze visualizations of statistics from our global Observability Survey, which includes many of the topics we’ll discuss here and more.&lt;/p&gt;&#xA;&lt;h2 id=&#34;brazilian-organizations-juggle-lots-of-observability-tools-and-data-sources&#34;&gt;Brazilian organizations juggle lots of observability tools and data sources&lt;/h2&gt;&#xA;&lt;p&gt;Businesses rely on observability tools and data sources such as metrics, logs, and traces to get deeper insights into the behavior of their systems. And as those systems scale and grow in complexity, it can often translate to teams using lots of tools and data to get a more holistic view.&lt;/p&gt;&#xA;&lt;p&gt;And that&amp;rsquo;s what we&amp;rsquo;re seeing in Brazil, where the overwhelming majority of organizations (96%) use multiple observability technologies to help keep their systems running properly—and nearly a quarter of organizations (24%) are juggling six or more.&lt;/p&gt;&#xA;&lt;p&gt;In addition, 89% of survey respondents say they&amp;rsquo;re unifying multiple data sources in Grafana (7% have just one, and 4% don&amp;rsquo;t have any data sources configured in Grafana). Brazilian organizations are most likely to have two to three data sources configured, but some are pulling in far more than that, with one in 10 organizations pulling in data from more than 20 data sources, and 5% using an astonishing 100-plus.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1371x790/e9fdb9ac0c/brazil-tech-data-sources.png&#34;&#xA;alt=&#34;Observability data sources in Brazil&#34;/&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;saas-vs-self-managed-and-the-role-of-open-standards&#34;&gt;SaaS vs. self-managed, and the role of open standards&lt;/h3&gt;&#xA;&lt;p&gt;So how are these companies handling all that data? The majority (56%) &amp;ldquo;mostly&amp;rdquo; or &amp;ldquo;only&amp;rdquo; manage their own observability stacks, which can present some real challenges when you have to wrangle disparate tools and data sources and maintain the underlying infrastructure. That&amp;rsquo;s on par with the rest of the world (58%), but there are some interesting differences when it comes to the use of SaaS.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1371x669/a964989ae8/brazil-observability-setup.png&#34;&#xA;alt=&#34;Observability setup in Brazil&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;As you can see in the chart above, Brazilians are more likely to split their setup between SaaS and self-managed, while the rest of the world is more inclined to lean more toward SaaS. Organizations turn to SaaS to offload management of the underlying platform to an observability vendor like Grafana Labs so they can focus instead on improving the health and resilience of their systems. The rest of the world is &lt;a href=&#34;/blog/2025/03/25/observability-survey-takeaways/?pg=survey-2025%5c&amp;amp;plcmt=toc-cta-1#market-awareness-is-on-the-rise&#34;&gt;increasingly moving to SaaS&lt;/a&gt;, according to our global 2025 Observability Survey, so it will be interesting to see if Brazil follows the same pattern in the years to come.&lt;/p&gt;&#xA;&lt;p&gt;Another key driver of observability adoption is the use of open source software and open standards to facilitate the movement and unification of multiple data types. It&amp;rsquo;s no surprise to see Brazilian organizations prioritize open standards in their own workflows. In total, 60% are &amp;ldquo;mostly&amp;rdquo; or &amp;ldquo;only&amp;rdquo; using open source licensing, and an additional 21% are equally split between OSS and commercial licenses. And the majority are using Prometheus (71%) and OpenTelemetry (61%) in some capacity (in both cases, this includes respondents who said they were &amp;ldquo;investigating,&amp;rdquo; &amp;ldquo;building a POC,&amp;rdquo; &amp;ldquo;using in production,&amp;rdquo; using extensively,&amp;quot; or &amp;ldquo;using exclusively&amp;rdquo;).&lt;/p&gt;&#xA;&lt;p&gt;Prometheus and OpenTelemetry are both key to maintaining open standards in observability that help teams centralize and standardize their telemetry. Prometheus is the more established of the two, so it makes sense that it has more adoption. As we track changes in the Brazilian market going forward, it will be interesting to see if OpenTelemetry, which is quickly becoming another de facto standard in the observability space, will eventually catch up with Prometheus.&lt;/p&gt;&#xA;&lt;h2 id=&#34;brazilian-teams-are-at-different-levels-of-observability-maturity&#34;&gt;Brazilian teams are at different levels of observability maturity&lt;/h2&gt;&#xA;&lt;p&gt;The maturity of the Brazilian observability market is a bit of a mixed bag. For example, despite the large number of tools and data sources in use—as well as the commitment to open source and self-managed setups—Brazilian organizations aren&amp;rsquo;t as likely to use what we at Grafana Labs consider the &lt;em&gt;most mature&lt;/em&gt; approach to observability.&lt;/p&gt;&#xA;&lt;p&gt;We tend to favor a systematic, centralized approach that can get ahead of problems and incorporate observability at every stage of the software lifecycle. In addition, observability needs to be able to scale so best practices are spread across the organization.&lt;/p&gt;&#xA;&lt;p&gt;Survey respondents in Brazil who said they are using centralized observability have seen between 15% and 40% savings in their observability costs. Or, as one platform team member from a small Brazilian software and technology company put it, centralized observability provides &amp;ldquo;greater agility in identifying and resolving problems or preventing them, freeing up hours that would otherwise be spent remediating and/or resolving them.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1371x944/ceed2909cc/brazil-approach-to-observability.png&#34;&#xA;alt=&#34;Brazilian approach to observability&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;As you can see from the chart above, the &amp;ldquo;Centralized observability (support)&amp;rdquo; approach most closely aligns with that ethos, but there&amp;rsquo;s a delta of 10 percentage points between Brazil and the rest of the world when it comes to adoption.&lt;/p&gt;&#xA;&lt;h3 id=&#34;brazilian-organizations-favor-finops-and-slos&#34;&gt;Brazilian organizations favor FinOps and SLOs&lt;/h3&gt;&#xA;&lt;p&gt;And yet, respondents to our Brazilian survey are showing much more interest in emerging techniques that have the potential to be integral to a holistic approach to observability.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1371x1236/45c597db9a/brazil-emerging-tech.png&#34;&#xA;alt=&#34;How relevant are SLOs and FinOps to Brazilian organizations?&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;When you look at the comparison above, you&amp;rsquo;ll see that Brazilian organizations are much more likely to use SLOs in some capacity (&amp;ldquo;investigating,&amp;rdquo; &amp;ldquo;POC,&amp;rdquo; &amp;ldquo;in production,&amp;rdquo; &amp;ldquo;using extensively,&amp;rdquo; &amp;ldquo;using exclusively&amp;rdquo;) than the rest of the world (93% vs. 73%). The same goes for FinOps (85% vs. 55%).&lt;/p&gt;&#xA;&lt;p&gt;We see SLOs as an important &lt;a href=&#34;/tags/grafana-slo/&#34;&gt;framework for defining and achieving reliability goals&lt;/a&gt;. When we asked about the most important outcome these organizations hope to achieve, the most common response was reducing mean time to resolution (44%), followed by better accountability (22%) and reduction in alert noise (21%).&lt;/p&gt;&#xA;&lt;p&gt;Meanwhile, FinOps is an emerging area that can help you better understand and manage your cost controls. We&amp;rsquo;re keen on the potential of FinOps here at Grafana Labs, as we recently adopted the FinOps Open Cost and Usage Specification (&lt;a href=&#34;https://focus.finops.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;FOCUS&lt;/a&gt;), a community-driven, open standard for cloud billing data, and we were encouraged to see the increased focus on FinOps in Brazil.&lt;/p&gt;&#xA;&lt;h2 id=&#34;challenges-and-solutions-pave-the-way-forward&#34;&gt;Challenges (and solutions) pave the way forward&lt;/h2&gt;&#xA;&lt;p&gt;Ultimately, all those tools and techniques are only really useful if they actually help you overcome the obstacles that prevent distributed modern systems from operating smoothly. Next, let&amp;rsquo;s look at how this is playing out in Brazil.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1371x715/9b220c018e/brazil-top-concerns.png&#34;&#xA;alt=&#34;Challenges in Brazil&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;For starters, complexity (41%) is their biggest concern about observability, which makes sense considering the number of tools and data sources they&amp;rsquo;re managing, as well as the reliance on self-managed stacks. Complexity was also the most cited concern for the rest of the world (39%), so it appears to be a near universal problem in the observability space today.&lt;/p&gt;&#xA;&lt;p&gt;However, the Brazilian market is much more likely to cite &amp;ldquo;convincing management of the value&amp;rdquo; as a top concern compared to the rest of the world (34% vs. 23%), even though they&amp;rsquo;re less likely to be concerned about internal adoption (18% vs. 24%). This could explain why they&amp;rsquo;re more likely to adopt SLOs and FinOps, since they&amp;rsquo;re able to provide quantifiable evidence of the benefits of proper observability practices.&lt;/p&gt;&#xA;&lt;p&gt;However, &amp;ldquo;CTO/C-suite&amp;rdquo; was the most frequently cited response (36%) when we asked about the highest level at which observability is considered business-critical, which is actually higher than the rest of the world (33%).&lt;/p&gt;&#xA;&lt;p&gt;Other concerns point to a lack of maturity compared to the global market. Lack of process (25%) and culture (23%) were the most common challenges compared to the rest of the world, pointing to a need for more maturity—and SLOs. They&amp;rsquo;re also far less likely to cite alert fatigue as the biggest obstacle (21% vs 33%).&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1371x790/edb8f655ab/brazil-biggest-obstacle.png&#34;&#xA;alt=&#34;Brazilian biggest obstacle&#34;/&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;brazilian-companies-are-prioritizing-cost-and-ease-of-use-in-observability&#34;&gt;Brazilian companies are prioritizing cost and ease of use in observability&lt;/h3&gt;&#xA;&lt;p&gt;So how are teams tackling these challenges? Cost (77%) and ease of use (64%) are the biggest priorities when selecting a new technology. The rest of the world also cited those as their top two priorities, though at a slightly lower rate overall (74% and 57%, respectively). Here we can also see the continued importance of open tools and standards, with the next two highest criteria being interoperability (45%) and being based on OSS (40%).&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1371x421/a2f0649cd9/brazil-selection-criteria.png&#34;&#xA;alt=&#34;Brazilian selection criteria&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Where the Brazilian market diverges the most from the rest of the world is in the importance of AI/ML criteria, with 27% citing it as a priority, compared to just 19% of the rest of the world. And when we asked how they&amp;rsquo;d like to see it implemented in observability, 64% said they would put training-based alerts on their &amp;ldquo;AI/ML wishlist.&amp;rdquo; This was the most common response, followed by faster, more automated root cause analysis (49%).&lt;/p&gt;&#xA;&lt;p&gt;As we&amp;rsquo;ve all seen, the AI market is very dynamic right now, so we&amp;rsquo;ll be following these trends closely over the next year.&lt;/p&gt;&#xA;&lt;h2 id=&#34;about-the-survey&#34;&gt;About the survey&lt;/h2&gt;&#xA;&lt;p&gt;This survey was conducted at ObservabilityCON on the Road in São Paulo late last year. (And we&amp;rsquo;re headed back again this year! &lt;a href=&#34;/events/observabilitycon-on-the-road/2025/sao-paulo/&#34;&gt;Learn more about our Nov. 4 event in São Paulo.&lt;/a&gt;) In total, 1,287 people participated across a range of demographics:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Role:&lt;/strong&gt; Respondents worked in more than a dozen different roles, from individual contributors up to executives. The most commonly cited roles were SRE (28%) and platform team (20%).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Industry:&lt;/strong&gt; Participants came from 17 different industries, with software and technology (33%) representing the largest share, followed by media and entertainment (28%).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Size:&lt;/strong&gt; Companies of all sizes were represented in the survey, with the most common ones being those with more than 5,000 employees (35%).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Our third annual Observability Survey, which contained many of the same questions, was conducted globally and featured responses from 1,255 industry practitioners. To learn more, check out the &lt;a href=&#34;/observability-survey/&#34;&gt;main report&lt;/a&gt;, as well as the &lt;a href=&#34;https://play.grafana.org/d/feg4yc4qw3wn4b/third-annual-observability-survey?pg=survey-2025%5c&amp;amp;plcmt=toc-cta-2%5c&amp;amp;orgId=1%5c&amp;amp;from=2025-03-13T02:49:20.476Z%5c&amp;amp;to=2025-03-14T02:49:20.476Z%5c&amp;amp;timezone=utc%5c&amp;amp;var-region=$__all%5c&amp;amp;var-role=$__all%5c&amp;amp;var-size=$__all%5c&amp;amp;var-industry=$__all%5c&amp;amp;var-filters=%60Region%60%20in%20%28%27Europe%27,%27Asia%27,%27North%20America%27,%27Africa%27,%27South%20America%27,%27Oceania%27,%27Middle%20East%27%29%20AND%20%60Role%60%20IN%20%28%27Platform%20team%27,%27SRE%27,%27CTO%27,%27Engineering%20manager%27,%27Developer%27,%27Director%20of%20engineering%27,%27Other%27%29%20AND%20%60Size_of_organization%60%20IN%20%28%2710%20or%20fewer%20employees%27,%2711%20-%20100%20employees%27,%27101%20-%20500%20employees%27,%27501%20-%201,000%20employees%27,%271,001%20-%202,500%20employees%27,%272,501%20-%205,000%20employees%27,%275,001%2B%20employees%27%29%20AND%20%60Industry%60%20IN%20%28%27Telecommunications%27,%27Healthcare%27,%27IoT%27,%27Financial%20services%27,%27Education%27,%27Government%27,%27Applied%20Sciences%27,%27Software%20%26%20Technology%27,%27Media%20%26%20Entertainment%27,%27Travel%20%26%20Transportation%27,%27Retail%2FE-commerce%27,%27Energy%20%26%20Utilities%27,%27Automotive%20%26%20Manufacturing%27,%27Other%27%29&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;interactive dashboard&lt;/a&gt; and our &lt;a href=&#34;/blog/2025/03/25/observability-survey-takeaways/&#34;&gt;in-depth analysis&lt;/a&gt; of the survey findings.&lt;/p&gt;】&lt;p&gt;巴西的组织渴望采用一些最新的可观察性趋势和技术，因为他们希望使软件尽可能顺利地运行。&#xA;&lt;p&gt;可观察性是一个不断发展的空间，这是Grafana Labs首次运行我们年度&lt;a href =“/observability-survey/”&gt;可观察性调查的巴西版本&lt;/a&gt;。这是我们更好地了解该组织如何采用可观察性并与该地区和国外越来越多的Grafana社区共享信息的一部分。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;在这篇博客文章中，我们将分享调查结果的重点，包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;巴西组织如何挑战这么多工具和数据源&lt;/li&gt;&#xA;&lt;li&gt;市场上的成熟度不同，这如何促使公司采用新技术&lt;/li&gt;&#xA;&lt;li&gt;成本，易用性和AI在选择可观察性工具方面的重要性，以及在巴西公司最高级别的可观察性的相关性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Continue reading to learn more about observability in Brazil, and check out our &lt;a href=&#34;https://play.grafana.org/goto/9AdIEblHg?orgId=1&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;interactive Grafana dashboard&lt;/a&gt; where you can analyze visualizations of statistics from our global Observability Survey, which includes many of我们将在这里讨论的主题以及更多。&lt;/p&gt;&#xA;&lt;h2 id =“巴西 - 组织 - 杰克 - 观察性 - 兼职 - 及数据源”&gt;巴西组织杂乱无章&#xA;&lt;p&gt;业务依靠可观察性工具和数据源（例如指标，日志和痕迹）来深入了解其系统行为。随着这些系统的扩展和复杂性的扩展，它通常可以使用大量工具和数据转化为团队以获得更全面的视图。&lt;/p&gt;&#xA;&lt;p&gt;这就是我们在巴西所看到的，在那里，绝大多数组织（96％）使用多种可观察性技术来帮助保持其系统的正常运行，而将近四分之一的组织（24％）兼顾了六个或更多。&#xA;&lt;p&gt;此外，有89％的受访者表示，他们正在统一Grafana的多个数据源（7％的数据源只有一个，而4％的数据源没有Grafana中配置的任何数据源）。巴西组织最有可能配置了两到三个数据源，但是有些组织的吸引力远远超过了，其中一个十分之一的组织从20多个数据源中汲取了数据，而使用惊人的100多个数据来源。&lt;/p&gt;。&lt;/p&gt;。&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1371x790/e9fdb9ac0c/brazil-tech-data-sources.png”&#xA;alt =“巴西的可观察性数据源”/&gt; &lt;/p&gt;&#xA;&lt;H3 ID =“ SaaS-VS-Seelf-Seft-and-the-the-poben-pandards”&gt; SaaS vs.自我管理，以及开放标准的作用&lt;/h3&gt;&#xA;&lt;p&gt;那么这些公司如何处理所有t数据？大多数（56％）“大部分”或“唯一”管理自己的可观察性堆栈，当您必须争吵不同的工具和数据源并维护基础基础架构时，这些堆栈可能会带来一些真正的挑战。这与世界其他地区相当（58％），但是在使用SaaS方面存在一些有趣的区别。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1371x669/a964989aeae8/brazil-observiability-setup.png”&#xA;alt =“巴西的可观察性设置”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;您可以在上图中看到，巴西人更有可能在SaaS和自我管理之间进行设置，而世界其他地方更倾向于更倾向于SaaS。组织转向SaaS，以将基础平台的管理管理转换为Grafana Labs这样的可观察性供应商，以便他们可以专注于改善系统的健康和弹性。世界其他地方是&lt;a href =“/blog/2025/03/25/可观察性 - 调查 - 调查 -  takeaways/？pg = survey-2025％5C＆plcmt = toc-cta-cta-cta-cta-ccta-c＃narky-is savareness-is-in-on-the-rise”&gt;越来越多地遵循我们的全球2025年，这是同一模式，这是同一模式，以便于努力，这是一个有趣的观察，这是如此，这是一个有趣的范围，这是如此有趣的是，这是一个有趣的范围。来。&lt;/p&gt;&#xA;&lt;p&gt;可观察性采用率的另一个关键驱动力是使用开源软件和开放标准来促进多种数据类型的运动和统一。看到巴西组织在自己的工作流程中优先考虑公开标准也就不足为奇了。总共使用开源许可证总共“大部分”或“仅”“仅”或“仅”，而OSS和商业许可之间的另外21％则分配。大多数人都使用普罗米修斯（71％）和Opentelemetry（61％）（在两种情况下，这包括受访者都说他们正在“调查”，“构建POC”，“在生产中使用”，“在生产中使用”，使用广泛使用”或“独家使用”）。&lt;/p&gt;）。&lt;/p&gt;）。&lt;/p&gt;）。&lt;/p&gt;&#xA;&lt;p&gt; Prometheus和Opentelemetry都是保持开放标准的关键，可帮助团队集中和标准化其遥测。普罗米修斯是两者中更加建立的，因此它具有更多的采用是有道理的。随着我们跟踪巴西市场的变化，很有趣的是，Opentelemetry（迅速成为可观察到的事实上的标准）是否最终将赶上Prometheus。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;h2 id =“巴西队 - 在不同的观察级别的成熟度”&gt;巴西团队处于不同水平的可观察性成熟度&lt;/h2&gt;&#xA;&lt;p&gt;巴西可观察性市场的成熟度有些混合。例如，尽管使用了大量工具和数据源（以及对开源和自我管理的设置的承诺），巴西组织并不可能使用我们在Grafana Labs上使用我们的东西，但要考虑&lt;em&gt;最成熟的&lt;/em&gt;方法o可观察性。&lt;/p&gt;&#xA;&lt;p&gt;我们倾向于采用一种系统的集中式方法，该方法可以解决问题，并在软件生命周期的每个阶段都合并可观察性。此外，可观察性需要能够扩展，以便最佳实践分布在整个组织中。&lt;/p&gt;&#xA;&lt;p&gt;巴西的调查受访者说，他们正在使用集中的可观察性，其可观察性成本节省了15％至40％。或者，正如一家巴西小型软件和技术公司的一个平台团队成员所说，集中的可观察性“在识别和解决问题或防止问题方面更加敏捷，释放了时间，否则将花费数小时来进行修复和/或解决问题。” &lt;/p&gt;。” &lt;/p&gt;&gt; &lt;/p&gt;&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1371x944/ceed2909cc/brazil-pabrazil-apphack-to-observability.png”&#xA;alt =“可观察性的巴西方法”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;您可以从上图中看到，“集中的可观察性（支持）”方法与该精神最紧密地保持一致，但是在采用时，巴西与世界其他地区之间有10个百分点的三角洲。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;h3 id =“巴西 - 组织 - 最佳组织和slos”&gt;巴西组织偏爱finops和slos &lt;/h3&gt;&#xA;&lt;p&gt;然而，我们巴西调查的受访者对新兴技术有更多的兴趣，这些技术有可能成为整体方法的重要方法。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1371x1236/45c597db9a/brazil-emerge-tech.png”&#xA;alt =“ SLOS和FINOPS与巴西组织有多相关？”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;当您查看上面的比较时，您会发现巴西组织更有可能以某种身份使用SLO（“调查”，“ POC”，“生产”，“广泛使用”，“使用”，“独家使用”）（93％vs. 73％）。 Finops也是如此（85％对55％）。&lt;/p&gt;&#xA;&lt;p&gt;我们将SLO视为重要的&lt;a href =“/tags/grafana-slo/”&gt;用于定义和实现可靠性目标的框架&lt;/a&gt;。当我们询问这些组织希望实现的最重要结果时，最常见的回应是减少平均分辨率（44％），随后责任（22％）和警报噪声减少（21％）。&lt;/p&gt;。&#xA;&lt;p&gt;同时，Finops是一个新兴领域，可以帮助您更好地理解和管理成本控制。我们热衷于在Grafana Labs这里的Finops潜力，因为我们最近采用了Finops开放成本和使用规范（&lt;a href =“ https：//focus.finops.org/” target =“ _ rel =” rel =“ rel =” rel =“ noopener noreferrer”&gt; nooreferrer“巴西。&lt;/p&gt;&#xA;&lt;h2 id =“挑战和溶液 -   - 前向”&gt;挑战（和解决方案）铺平了前进的方向&lt;/h2&gt;&#xA;&lt;p&gt; ulti从实际上，所有这些工具和技术实际上帮助您克服了防止分布式现代系统平稳运行的障碍时，才真正有用。接下来，让我们看一下巴西的表现。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1371x715/9b220c018e/brazil-top-concerns.png”&#xA;alt =“巴西的挑战”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;对于初学者来说，复杂性（41％）是他们对可观察性的最大关注点，考虑到他们管理的工具和数据源的数量以及对自我管理的堆栈的依赖，这是有意义的。复杂性也是世界其他地区最引人入胜的关注点（39％），因此在当今观察到的空间中似乎几乎是普遍的问题。&lt;/p&gt;&#xA;&lt;p&gt;然而，与世界其他地区相比，巴西市场更有可能引用“令人信服的管理”作为最重要的关注点（34％比23％），即使他们不太可能担心内部采用（18％，而24％）。这可以解释为什么他们更有可能采用SLOS和FINOP，因为他们能够提供可量化的可观察性实践好处的可量化证据。&lt;/p&gt;&#xA;&lt;p&gt;然而，当我们询问可观察到的最高水平时，“ CTO/C-Suite”是最常被引用的回应（36％），实际上高于世界其他地区（33％）。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;其他问题表明，与全球市场相比，缺乏成熟度。与世界其他地区相比，缺乏过程（25％）和文化（23％）是最常见的挑战，这表明需要更加成熟和SLO。他们也不太可能将警报疲劳视为最大的障碍（21％比33％）。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1371x790/Edb8f6555ab/brazil-brazil-biggest-obstacle.png”&#xA;alt =“巴西最大障碍”/&gt; &lt;/p&gt;&#xA;&lt;h3 id =“巴西 - 兼职 - 优先级 - 可使用的曲折”&gt;巴西公司正在优先考虑成本和易于使用的可观察性&lt;/h3&gt;&#xA;&lt;p&gt;那么，团队如何应对这些挑战？选择新技术时的成本（77％）和易用性（64％）是最大的优先事项。世界其他地区还认为这些重点是他们的前两个优先事项，尽管总体上的速度略低（分别为74％和57％）。在这里，我们还可以看到开放工具和标准的持续重要性，其下两个最高标准是互操作性（45％），并且基于OSS（40％）。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1371x421/a2f0649cd9/brazil-selection-criteria.png”&#xA;alt =“巴西选择标准”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;巴西市场与世界其他地区的分歧最大的是AI/ML标准的重要性，而27％的人认为这是优先事项，而世界其他地区仅占19％。当我们问t嘿，希望看到它是通过可观察性实施的，有64％的人表示，他们将在“ AI/ML愿望清单”上发布基于培训的警报。这是最常见的响应，其次是更快，更自动化的根本原因分析（49％）。&lt;/p&gt;&#xA;&lt;p&gt;正如我们都看到的那样，AI市场现在非常动态，因此我们将在明年紧随其后。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;h2 id =“ the-the-survey”&gt;关于调查&lt;/h2&gt;&#xA;&lt;p&gt;这项调查是在去年年底在圣保罗的道路上的ObservabilityCon进行的。 （今年我们再次回来！&#xA;&lt;ul&gt;&#xA;&lt;li&gt; &lt;strong&gt;角色：&lt;/strong&gt;受访者从多个贡献者到高管工作，在十几个不同的角色中工作。最常见的角色是SRE（28％）和平台团队（20％）。&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;行业：&lt;/strong&gt;参与者来自17个不同行业，软件和技术（33％）代表最大份额，其次是媒体和娱乐（28％）。&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;规模：&lt;/strong&gt;各种规模的公司都在调查中代表，最常见的是拥有5,000多名员工（35％）的公司。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;我们的第三次年度观察性调查包含许多相同的问题，是在全球范围内进行的，并提供了来自1,255名行业从业人员的回答。要了解更多信息，请查看&lt;a href =“/observability-survey/”&gt;主要报告&lt;/a&gt;以及&lt;a href =“ https://play.grafana.org/d/feg4yc4yc4yc4qw3wn4b/third-annual-annual-annual-observability-survey？ ％5C＆to = 2025-03-14T02：49：20.476z％5C＆TimeZone = UTC％5C＆var-Region = $ __ ALL％5C＆var-role = $ __ ALL％5C＆var-size = $ __ = $ __ ALL％5C＆var-Indusry = $ __＆var-Industry = $ __ ALL 5C和VAL-5C和VAR-all-var-firion =％60％60％60％60％20％20％20％20％260％20％260％20％20％20％20％260％260％260％20％20％20％20％ 0IN％20％28％27Europe％27，％27asia％27，％27NORTH％20AMERICA％27，％27Africa％27，％27South％20AMERICA％27，％27欧27，％27Middle％20EAST％20EAST％27％27％29％29％20％20％20％20％60％20％20％20％20％20％20％20％20％28％27％27％27％27平台％20TEAM％27，％27SRE％27，％27CTO％27，％27工程％20manager％27，％27Developer％27，％27Director％20of％20 eNGINGering％27，％27％27％27％29％29％20和％20和％20％20％size_of_organiza TION％60％20英寸20％20％28％2710％20OR％20FEWER％20 Employees％27，％2711％20-％20100％20 Employees％27，％27101％20-％20500％20500％20-雇员％27，％27501％20-20-％20-％20-％20-20,000％20EMPOMINEES％27，％271,001％271,001％2 0-％202,500％20名员工％27，％272,501％20-％205,000％205,000％20雇员％27，％275,001％2B％20员工％27％29％20％20％60％60％60％20％20IN％20IN％20IN％20％20％28％27 TELECOMENCICATION％27 TELECOMMICATIONS％27，％27，％27 health Care％27，％27 iot％27，％27Financial％20Services％27，％27 DeDucation％27，％27GREVERNMENT％27，％27Applied％20SCIENCES％27，％27Software％20％20％20％20％20TECHNOLOGY％27，％27Media％20％20％20％20％20％20％20％20％ tainment％27，％27Travel％20％26％20个转移％27，％27零售％2FE-Commerce％27，％27 Energy％20％26％20utilities％27，％27Automotive％20％20％26％20％20％27，％27，％27 other％27％27％29” target =“ _ blank” rel =“ noopener noreferrer”&gt;互动仪表板&lt;/a&gt;和我们的&lt;a href =“/blog/2025/03/25/可观察性 - 调查 -  takeaways/“&gt;深入分析&lt;/a&gt;对调查结果。&lt;/p&gt;</description>
      <pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Learn OpenTelemetry tracing through a grand strategy game: introducing Game of Traces】通过大型策略游戏学习OpenTelemetry跟踪：介绍痕迹游戏</title>
      <link>https://grafana.com/blog/2025/08/11/learn-opentelemetry-tracing-through-a-grand-strategy-game-introducing-game-of-traces/</link>
      <description>【&lt;p&gt;&lt;em&gt;A trace always remembers!&lt;/em&gt; &lt;/p&gt;&#xA;&lt;p&gt;Okay, okay. I will try to keep my Game of Thrones references to a minimum throughout this post, but there is a lot of truth to that statement. &lt;/p&gt;&#xA;&lt;p&gt;In observability, a &lt;em&gt;trace&lt;/em&gt; is the “when” and “where” of telemetry signals, allowing us to track the state of interactions between services within a microservice architecture. This makes traces the ideal observability signal for discovering bottlenecks and interconnection issues.&lt;/p&gt;&#xA;&lt;p&gt;The challenge with traces, however, is that they often come with a steep learning curve – particularly for those who are new to observability. This is mostly due to the fact that it&amp;rsquo;s hard to relate traces to a real-world concept unless we talk about logistics or a road trip. But where is the fun in &lt;em&gt;that&lt;/em&gt;?&lt;/p&gt;&#xA;&lt;p&gt;Here at Grafana Labs, I’m a developer advocate, and a big part of my job is to learn and teach the pillars of observability to our end users. In my personal life, I also love grand strategy games: Total War: Warhammer III, Sid Meier&amp;rsquo;s Civilisation, and Sins of a Solar Empire (which is more of a hybrid). You name it, I&amp;rsquo;m there. &lt;/p&gt;&#xA;&lt;p&gt;Recently, I’ve been blending these two things together to create strategy games that can teach engineers the basics of observability. I did this last year (alongside my fellow dev advocate Tom Glenn) to create &lt;a href=&#34;/blog/2024/11/20/metrics-logs-traces-and-mayhem-introducing-an-observability-adventure-game-powered-by-grafana-alloy-and-otel/&#34;&gt;Quest World&lt;/a&gt;, an interactive game to learn about &lt;a href=&#34;https://opentelemetry.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry&lt;/a&gt;, &lt;a href=&#34;/oss/alloy-opentelemetry-collector//?pg=blog%5c&amp;amp;plcmt=body-txt&#34;&gt;Grafana Alloy&lt;/a&gt;, and the Grafana LGTM (&lt;a href=&#34;/oss/loki/?pg=blog%5c&amp;amp;plcmt=body-txt&#34;&gt;Loki&lt;/a&gt; for logs, &lt;a href=&#34;/oss/grafana/?pg=blog%5c&amp;amp;plcmt=body-txt&#34;&gt;Grafana&lt;/a&gt; for visualization, &lt;a href=&#34;/oss/tempo/?pg=blog%5c&amp;amp;plcmt=body-txt&#34;&gt;Tempo&lt;/a&gt; for traces, &lt;a href=&#34;/oss/mimir/?pg=blog%5c&amp;amp;plcmt=body-txt&#34;&gt;Mimir&lt;/a&gt; for metrics) Stack.&lt;/p&gt;&#xA;&lt;p&gt;And now, I’m applying the same approach to tracing. &lt;/p&gt;&#xA;&lt;p&gt;In this post, I’ll walk you through &lt;strong&gt;Game of Traces,&lt;/strong&gt; a grand strategy game you can play to learn the key concepts of OpenTelemetry tracing — and, of course, heroically defend a few kingdoms along the way.&lt;/p&gt;&#xA;&lt;figure&#xA;class=&#34;figure-wrapper figure-wrapper__lightbox w-100p &#34;&#xA;style=&#34;max-width: 50%;&#34;&#xA;itemprop=&#34;associatedMedia&#34;&#xA;itemscope=&#34;&#34;&#xA;itemtype=&#34;http://schema.org/ImageObject&#34;&#xA;&gt;&lt;a&#xA;class=&#34;lightbox-link&#34;&#xA;href=&#34;https://a-us.storyblok.com/f/1022730/700x700/64e9512f28/game-of-traces-logo.png&#34;&#xA;itemprop=&#34;contentUrl&#34;&#xA;&gt;&lt;div class=&#34;img-wrapper w-100p h-auto&#34;&gt;&lt;img&#xA;class=&#34;lazyload &#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/700x700/64e9512f28/game-of-traces-logo.png&#34;alt=&#34;A Game of Traces logo&#34;/&gt;&#xA;&lt;noscript&gt;&#xA;&lt;img&#xA;src=&#34;https://a-us.storyblok.com/f/1022730/700x700/64e9512f28/game-of-traces-logo.png&#34;&#xA;alt=&#34;A Game of Traces logo&#34;/&gt;&#xA;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;but-first-how-does-it-all-work&#34;&gt;But first, how does it all work?&lt;/h2&gt;&#xA;&lt;p&gt;In grand strategy games, you build up forces within settlements and send them to capture new towns and territories in a path of conquest to the enemy capital. This got me thinking: what if we built a grand strategy game where each capital and village was a service, and we instrumented each with OpenTelemetry (OTel) tracing. We could track the grand battles as they unfold: the wins, the losses, and the interactions with the AI opponent. Thus, a Game of Traces was born!&lt;/p&gt;&#xA;&lt;p&gt;I normally leave how it works to the end of the blog post, but it&amp;rsquo;s important to understand the underlying mechanism here to see how traces track the game state.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1000x1000/767ff12b11/game-of-traces-diagram.png&#34;&#xA;alt=&#34;A diagram of the Game of Traces gameplay.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s break down the components:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Capitals&lt;/strong&gt; are the seats of power within the game. This is where the player can collect resources and spend those resources to create their armies. In this game, only capitals can make armies. A capital is essentially a &lt;a href=&#34;https://github.com/grafana/alloy-scenarios/blob/main/game-of-tracing/app/location_server.py&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Python Flask server &lt;/a&gt; with a series of API endpoints which can be interacted with to create different game events, more on this later. Capitals are connected to a series of villages via a series of API endpoints, which generate our game map. Once a capital is lost, the game is over for that player.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Villages&lt;/strong&gt; are essentially minor capitals, but with some key differences. They start neutral with a predefined army. Once captured, they automatically generate resources that can be sent back to the capital (you will see how this mechanism works when you play the game). They cannot generate armies, but can hold player armies from the capital as defense. They are also Flask servers connected to one another — in fact, they are built from the same source code. We define the role of a Flask server using the &lt;a href=&#34;https://github.com/grafana/alloy-scenarios/blob/main/game-of-tracing/app/game_config.py&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;game config&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;strong&gt;war map&lt;/strong&gt; is how the player interacts with the series of Flask servers. It is itself a Flask server, which hosts the &lt;a href=&#34;https://github.com/grafana/alloy-scenarios/tree/main/game-of-tracing/war_map&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;grand map UI&lt;/a&gt;. The war map supports one-on-one human battles and one-on-one battles between a human and an AI opponent. &lt;/li&gt;&#xA;&lt;li&gt;The &lt;strong&gt;AI&lt;/strong&gt; is another &lt;a href=&#34;https://github.com/grafana/alloy-scenarios/tree/main/game-of-tracing/ai_opponent&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Flask server&lt;/a&gt; which acts as its own war map. It provides the AI with the ability to interact with its capital and villages, and plays a game against you based on a weighted decision tree depending on how far you are into the game.&lt;/li&gt;&#xA;&lt;li&gt;Last but not least, OpenTelemetry and the open source Grafana LGTM Stack. We have manually instrumented each Flask server within our architecture to generate metrics, logs, and traces within the &lt;a href=&#34;https://opentelemetry.io/docs/specs/otel/protocol/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry protocol (OTLP)&lt;/a&gt; format. We use the telemetry signals to monitor key aspects of the game, such as army marching, returning resources to the capital, and AI interactions. Spoiler alert: what you’ll learn is that traces tie all these signals together as we monitor our army&amp;rsquo;s progress.  &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;game-setup&#34;&gt;Game setup&lt;/h2&gt;&#xA;&lt;p&gt;To play the game locally, all you need is Docker. You can find the setup instructions &lt;a href=&#34;https://github.com/grafana/alloy-scenarios/blob/main/game-of-tracing/README.md#running-the-demo&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;here&lt;/a&gt;. Or, if you prefer not to deploy the game locally, you can run the game online using &lt;a href=&#34;https://killercoda.com/grafana-labs/course/workshops/game-of-traces&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Killercoda&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Whether you are playing the game locally or via Killercoda, make sure you import the included V2 Dashboard.&lt;/strong&gt; It shows you all telemetry signals in one user interface and also showcases some of the new &lt;a href=&#34;/blog/2025/05/07/dynamic-dashboards-grafana-12/&#34;&gt;dynamic dashboard features&lt;/a&gt; introduced in &lt;a href=&#34;/blog/2025/05/07/grafana-12-release-all-the-new-features/&#34;&gt;Grafana 12&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x1239/089175af40/game-of-traces-v2-dashboard.png&#34;&#xA;alt=&#34;A screenshot of the v2 dashboard.&#34;/&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;playing-the-game&#34;&gt;Playing the game&lt;/h2&gt;&#xA;&lt;p&gt;Okay, we&amp;rsquo;d better play this game before winter arrives. There are two primary interfaces:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The game itself, which can be found at &lt;a href=&#34;http://localhost:8080&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;http://localhost:8080&lt;/a&gt; once you’ve run &lt;code&gt;docker compose&lt;/code&gt; (make sure you have followed the steps in Game setup).&lt;/li&gt;&#xA;&lt;li&gt;The Grafana dashboard you installed during setup.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s focus on the game UI first. You will be asked to select your faction.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x1255/7f7268bbaf/game-of-traces-choose-your-faction.png&#34;&#xA;alt=&#34;A screenshot showing the Choose your Faction step.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Once selected, you can enter the game. You will be greeted by the war map.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x1070/cc29414784/game-of-traces-war-of-kingdoms-map.png&#34;&#xA;alt=&#34;A screenshot of the war map.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;I recommend enabling the AI opponent if you are playing by yourself. &lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s time to play the game:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Collect resources&lt;/li&gt;&#xA;&lt;li&gt;Create armies&lt;/li&gt;&#xA;&lt;li&gt;Move armies to villages to capture them&lt;/li&gt;&#xA;&lt;li&gt;Return resources to your capital to create more armies&lt;/li&gt;&#xA;&lt;li&gt;Use all-out attack with a big enough army at your capital to send your troops on a war path to the enemy&amp;rsquo;s capital (a personal favorite for generating interesting traces)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Once you have won or lost, check back in and read the next section of the blog!&lt;/p&gt;&#xA;&lt;h2 id=&#34;i-told-you-it-was-a-game-of-traces&#34;&gt;I told you it was a game of traces!&lt;/h2&gt;&#xA;&lt;p&gt;So you are back! You&amp;rsquo;re either the victor or the loser of the great war between the northern and southern kingdoms. Let&amp;rsquo;s see how we can use our battles to understand how tracing works.&lt;/p&gt;&#xA;&lt;p&gt;A common move you would have taken is moving your army to take the villages. Behind the scenes, this is being represented as a trace. Let&amp;rsquo;s find one of these moves within the &lt;strong&gt;Player Decisions&lt;/strong&gt; table. Select the trace ID, which will take you to the &lt;a href=&#34;/docs/grafana/latest/panels-visualizations/visualizations/traces/?pg=blog%5c&amp;amp;plcmt=body-txt&#34;&gt;Grafana traces view panel&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x893/97ec5804d5/game-of-traces-view-panel.png&#34;&#xA;alt=&#34;A screenshot of the traces panel.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;The trace allows us to understand the flow in which our services are being called underneath in order to initiate the move. Traces are made from a collection of &lt;a href=&#34;/blog/2024/08/15/all-about-span-events-what-they-are-and-how-to-query-them/&#34;&gt;spans&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;We start at the top, which is called our parent span. The parent span comes from our service &lt;strong&gt;war_map,&lt;/strong&gt; which sends a request to our &lt;strong&gt;northern-capital&lt;/strong&gt; to initiate a move order to &lt;strong&gt;village-2&lt;/strong&gt;. We can see that the &lt;strong&gt;northern-capital&lt;/strong&gt; calls the &lt;strong&gt;receive_army&lt;/strong&gt; endpoint of &lt;strong&gt;village-2&lt;/strong&gt; to initiate this move. The color of our span indicates which service it belongs to. As you can see, context is very important when it comes to populating spans within a trace. If the current span has no context of the previous, then the chain of events is broken, and we lose the ability to track API and function calls across services. &lt;/p&gt;&#xA;&lt;p&gt;Okay, so we can see that an army moved to &lt;strong&gt;village-2&lt;/strong&gt;, but what actually unfolded in that battle? That&amp;rsquo;s where span attributes come in. To find span attributes, let&amp;rsquo;s select &lt;strong&gt;village-2 receive_army&lt;/strong&gt; and expand the span attributes dropdown. &lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1172x754/fc0afc8fc2/game-of-traces-span-attributes.png&#34;&#xA;alt=&#34;A screenshot of span attributes.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Span attributes are key-value pairs that provide further context for a particular span. Span attributes are optional, but are extremely useful when determining the state of particular variables or API calls. In our case, it allows us to track the battle that took place. We can see that the northern capital sent an army of four to defeat the army of three at village 2. It was a successful attack, leaving one army remaining to defend the captured village.&lt;/p&gt;&#xA;&lt;p&gt;A trace also allows us to generate a node graph to understand service flow, but also to summarize &lt;a href=&#34;/docs/grafana/latest/explore/simplified-exploration/traces/investigate/choose-red-metric/?pg=blog%5c&amp;amp;plcmt=body-txt&#34;&gt;rate, error, and duration (RED) metrics&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1882x462/266b9efef7/games-of-traces-node-graph.png&#34;&#xA;alt=&#34;A screenshot of a node graph.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;In the context of our game, we represent lost battles by setting the span type to error. This allows us to see how many battles were both successful and unsuccessful during a game.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x1071/1ae710a2a6/game-of-traces-set-span-type-to-error.png&#34;&#xA;alt=&#34;A screenshot of RED metrics to track battles.&#34;/&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;by-the-light-of-the-three&#34;&gt;By the light of the three!&lt;/h2&gt;&#xA;&lt;p&gt;One of OpenTelemetry’s greatest strengths is correlation of telemetry signals (in our case, traces, logs, and metrics), which is largely available out-of-the-box. If you generate logs within the context of a span, these logs will automatically contain the trace ID and span ID as part of their attributes. Metrics have a similar correlation method, but let&amp;rsquo;s focus on traces-to-logs first.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x991/e7b2a0945c/game-of-traces-to-logs.png&#34;&#xA;alt=&#34;A screenshot showing the correlation of traces to logs.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Within the LGTM stack, we provide the ability to &lt;a href=&#34;/docs/grafana-cloud/send-data/traces/use-traces-with-grafana/?pg=blog%5c&amp;amp;plcmt=body-txt/#link-traces-and-logs&#34;&gt;correlate between traces stored in Tempo and logs stored in Loki.&lt;/a&gt; If we take our battle span (never thought I would say that in a sentence), we can select logs for the span. This will automatically query Loki using the span ID or trace ID or both (depending on your data source configuration), providing the logs from our village-2 at the time of the battle span. We can see a historic log of the battle that took place.&lt;/p&gt;&#xA;&lt;p&gt;Lastly, let&amp;rsquo;s look at &lt;a href=&#34;/docs/grafana-cloud/send-data/traces/use-traces-with-grafana/#link-traces-and-metrics&#34;&gt;traces-to-metrics&lt;/a&gt;. This is handled within OpenTelemetry and Prometheus as an exemplar. An &lt;a href=&#34;/docs/grafana/latest/fundamentals/exemplars/?pg=blog%5c&amp;amp;plcmt=body-txt&#34;&gt;exemplar&lt;/a&gt; is a specific trace representative of a measurement taken in a given time interval. While metrics excel at giving you an aggregated view of your system, traces give you a fine-grained view of a single request; exemplars are a way to link the two.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x735/7a8f2dcd19/games-of-traces-exemplar.png&#34;&#xA;alt=&#34;A screenshot of an exemplar.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;In our scenario, we can see that we generate a total number of battles per village, as battles take place. This metric is updated within the scope of our &lt;strong&gt;receive_army&lt;/strong&gt; battle span. Thus, when the metric reading is taken, we are given the trace and span ID, which is stored as an exemplar in Prometheus/Mimir. Grafana allows us to overlay exemplars on top of line graphs so we can see a timeline of the total number of battles each village has had and then drill down into a particular trace to understand what happened during that particular battle. &lt;/p&gt;&#xA;&lt;p&gt;Continuous profiles is the only signal missing here, but I plan to add profiles using &lt;a href=&#34;https://github.com/grafana/otel-profiling-python&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana’s OpenTelemetry Profiling library&lt;/a&gt;. Stay tuned!&lt;/p&gt;&#xA;&lt;h2 id=&#34;a-battle-is-a-series-of-cause-and-effect&#34;&gt;A battle is a series of cause and effect&lt;/h2&gt;&#xA;&lt;p&gt;The last feature we introduced (I say “we” because the idea came from Hedley Simons, one of our resident tracing experts) was &lt;a href=&#34;https://opentelemetry.io/docs/concepts/signals/traces/#span-links&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;span links&lt;/a&gt;. Links are optional and can be a bit more challenging to implement. Essentially, their role is to create relationships between spans that aren&amp;rsquo;t in a direct parent-child hierarchy. Unlike parent-child relationships (which are synchronous and hierarchical), links are more flexible and can connect spans across different traces or time periods. This becomes particularly useful in our case, as it ties gameplay together by linking a player’s actions across the course of the game. &lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s first take a look at how links are represented in Grafana.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x1008/461a5a2616/game-of-traces-span-links.png&#34;&#xA;alt=&#34;A screenshot of span links.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;As we can see, our final all-out attack has a span link attached to it. This references the previous action our player took within the game sequence. Thus, we can track our game to the very beginning move in reverse order. &lt;/p&gt;&#xA;&lt;p&gt;So, what does this allow us to do? Well, this isn’t a practical use of Tempo’s query API, but it allowed us to create a replay feature.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x1098/2a8b5c6025/game-of-traces-visual-game-replay.png&#34;&#xA;alt=&#34;A screenshot of the visual game replay.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;The war map searches Tempo for a particular game session ID, which is stored as an attribute for each span. It then uses span links to retrieve each Trace within the link from Tempo in reverse order before we invert this. This gives us the ability to step through the actions of the player during the game. &lt;/p&gt;&#xA;&lt;h2 id=&#34;as-the-dust-settles-a-chance-for-reflection&#34;&gt;As the dust settles, a chance for reflection&lt;/h2&gt;&#xA;&lt;p&gt;When building this demo, my own “aha!” moment came with traces when I was designing the game AI and how that could interact with game mechanics. It was hard to know how the set of decision weights affected the AI’s actions — whether the AI would get stuck repeating the same mechanic over and over, or fail to interact with one of the Flask servers (capital or village).&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x1050/905555623f/game-of-traces-ai-decision-cycle.png&#34;&#xA;alt=&#34;A screenshot of traces that represent the AI decision cycle.&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Traces let me track the decisions of the AI opponent throughout our match together. I discovered rather early on that my first attempt at the AI opponent didn’t react quickly enough to imminent threats from the player. If it didn’t recognize an all-out attack or that a village had been captured close to its capital, it remained passively collecting resources and taking villages. After modifying the AI’s behavior, I could see it play a more defensive role in its actions when the enemy was near, through its decision to spend less time collecting resources and more time building armies at its capital. &lt;/p&gt;&#xA;&lt;h2 id=&#34;game-over-for-now&#34;&gt;Game over… for now &lt;/h2&gt;&#xA;&lt;p&gt;I had a lot of fun building this game. It allowed me to truly dive into the OpenTelemetry SDK for Python and understand how traces and spans are created, how context is passed between one span to another, and how metrics and logs can be tied to a given span. &lt;/p&gt;&#xA;&lt;p&gt;I purposefully chose not to auto-instrument &lt;a href=&#34;https://github.com/grafana/alloy-scenarios/tree/main/game-of-tracing&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Game of Traces&lt;/a&gt;, so the techniques of instrumentation can be applicable across programming languages. I plan to write a follow-up post that dives deeper into the code base to cover how the game was instrumented. &lt;/p&gt;&#xA;&lt;p&gt;In the meantime, I hope this game provides a new way to learn observability and its value from the ground up. Until next time, for the north!&lt;/p&gt;】&lt;p&gt; &lt;em&gt;痕迹总是记住！&lt;/em&gt; &lt;/p&gt;&#xA;&lt;p&gt;好吧，好的。在这篇文章中，我将尝试将权力的游戏引用至少，但是该声明有很多事实。 &lt;/p&gt;&#xA;&lt;p&gt;在可观察性中，A &lt;em&gt; trace &lt;/em&gt;是遥测信号的“何时”和“何处”，使我们能够跟踪微服务体系结构中服务之间的交互状态。这使得痕迹成为发现瓶颈和互连问题的理想可观察性信号。&lt;/p&gt;&#xA;&lt;p&gt;但是，痕迹的挑战是它们通常具有陡峭的学习曲线 - 特别是对于那些新手可观察的人。这主要是由于以下事实：除非我们谈论物流或公路旅行，否则很难将痕迹与现实世界的概念联系起来。但是&lt;em&gt; &lt;/em&gt;？&lt;/p&gt;的乐趣在哪里&#xA;&lt;p&gt;在Grafana Labs，我是开发人员的拥护者，我的工作很大一部分是向最终用户学习和教授可观察性的支柱。在我的个人生活中，我也喜欢盛大的战略游戏：全面战争：战锤三世，西德·梅尔（Sid Meier）的文明和太阳帝国的罪恶（更多是混合动力）。你叫它，我在那里。 &lt;/p&gt;&#xA;&lt;p&gt;最近，我一直在将这两件事融合在一起，以创建可以教工程师可观察性基础的策略游戏。去年，我（与我的Dev倡导者汤姆·格伦（Tom Glenn）一起）创建了&lt;a href =“/blog/2024/11/20/Metrics-logs-trace-traces-mayhem-Indroducing-an-obserservibing-an-observibility-adventure-adventure game-by-by-alloy-alloy-alloy-alloy-alloy-alloy-alloy-alloy-and-Alloy-and-Alloy-and-Alloy-and-Alloy-and-Alloy-and-Alloy-and-th-otel/Quest World&gt; href =“ https://opentelemetry.io/” target =“ _ blank” rel =“ noopener noreferrer”&gt; opentelemetry &lt;/a&gt;，&lt;a href =“/oss/oss/yoss/alloy-popentelemetry-collector //？ （&lt;a href =“/oss/loki/？pg = blog％5c＆plcmt = body-txt”&gt; loki &lt;/a&gt; for logs，&lt;a href =“/oss/grafana/？pg = blog for Bobl for body-plcmt = body-txt = body-txt = body-txt = grafaana &lt;/a&gt;用于可视化，&lt;a&gt; &lt;a&gt; &lt;a a&gt; href =“/oss/tempo/？pg = blog％5c＆plcmt = body-txt”&gt; tempo &lt;/a&gt;对于痕迹，&lt;a href =“/oss/oss/mimir/？pg = blog for Mimir &lt;/a&gt; Mimir &lt;/a&gt; Mimir &lt;/a&gt;用于Metrics）&#xA;&lt;p&gt;现在，我正在采用相同的方法来追踪。 &lt;/p&gt;&#xA;&lt;p&gt;在这篇文章中，我将带您浏览&lt;strong&gt; traces游戏，&lt;/strong&gt;一个宏伟的策略游戏，您可以玩opentelemetry跟踪的关键概念，当然，在此过程中，当然可以英勇地捍卫一些王国。&lt;/p&gt; &lt;/p&gt;&#xA;&lt;图&#xA;class =“ figup-wrapper figuper-wrapper__lightbox W-100P”&#xA;样式=“最大宽度：50％;”&#xA;itemprop =“ iSsectedmedia”&#xA;itemScope =“”&#xA;itemType =“ http://schema.org/imageObject”&#xA;&gt; &lt;a&#xA;class =“ Lightbox-link”&#xA;href =“ https://a-us.storyblok.com/f/1022730/700x700/64e9512f28/game-of-traces-logo.png”&#xA;itemprop =“ contenturl”&#xA;&gt; &lt;div class =“ img-wrapper W-100P H-auto”&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/700x700/64e9512f28/game-of-traces-logo.png”&#xA;&lt;NoScript&gt;&#xA;&lt;img&#xA;src =“ https://a-us.storyblok.com/f/1022730/700x700/64e9512f28/game-of-traces-logo.png”alt =“迹线徽标游戏”/&gt;&#xA;&lt;/noscript&gt; &lt;/div&gt; &lt;/a&gt; &lt;/figie&gt;&#xA;&lt;h2 id =“ but-tirst-how-does-it-all-work”&gt;，但首先，它如何工作？&lt;/h2&gt;&#xA;&lt;p&gt;在宏伟的战略游戏中，您可以在定居点内建立力量，并派遣他们以征服敌人首都以征服的道路捕获新城镇和领土。这让我思考：如果我们建立了一个宏伟的战略游戏，每个首都和村庄都是一项服务，我们用opentelemetry（Otel）跟踪来启动每个策略游戏。我们可以在展开时跟踪大战：胜利，损失和与AI对手的互动。因此，痕迹诞生了！&lt;/p&gt;&#xA;&lt;p&gt;我通常将其工作方式留在博客文章的末尾，但是重要的是要了解这里的基本机制，以查看痕迹如何跟踪游戏状态。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1000x1000/767ff12b11/game-of-traces-diagram.png”&#xA;alt =“痕迹游戏游戏的图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;让我们分解组件：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt; &lt;strong&gt;首都&lt;/strong&gt;是游戏中力量的席位。在这里，玩家可以收集资源并花费这些资源来创建其军队。在这个游戏中，只有首都才能制造军队。 A capital is essentially a &lt;a href=&#34;https://github.com/grafana/alloy-scenarios/blob/main/game-of-tracing/app/location_server.py&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Python Flask server &lt;/a&gt; with a series of API endpoints which can be interacted with to create different game events, more on this 之后。首都通过一系列API端点连接到一系列村庄，这些端点生成了我们的游戏地图。一旦资本损失，该玩家的游戏就结束了。&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;村庄&lt;/strong&gt;本质上是次要的首都，但有一些关键差异。他们以预定义的军队开始中立。捕获后，它们会自动生成可以发送回资本的资源（您将在玩游戏时看到该机制的工作原理）。他们无法招收军队，但可以将球员军队从首都作为防御。它们也是相互连接的烧瓶服务器 - 实际上，它们是由相同的源代码构建的。 We define the role of a Flask server using the &lt;a href=&#34;https://github.com/grafana/alloy-scenarios/blob/main/game-of-tracing/app/game_config.py&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;game config&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt;战争地图&lt;/strong&gt;是玩家与一系列烧瓶服务器进行交互的方式。它本身就是一台烧瓶服务器，它托管&lt;a href =“ https://github.com/grafana/alloy-scenarios/tree/main/main/game-egame-of-tracing/war_map/war_map” target =“ _ black”战争地图支持人与人工智能对手之间一对一的人类战斗和一对一的战斗。 &lt;/li&gt;&#xA;&lt;li&gt; &lt;strong&gt; ai &lt;/strong&gt;是另一个&lt;a href =“ https://github.com/grafana/alloy-scenarios/tree/main/main/main/game-egame-op--tracing/ai_opponent/ai_opponent/ai_opponent =“ _ blank”r &lt;/a&gt;充当其自己的战争图。它为AI提供了与其资本和村庄互动的能力，并根据加权决策树对您进行游戏，具体取决于您进入游戏的距离。&lt;/li&gt;&#xA;&lt;li&gt;最后但并非最不重要的一点是，Opentelemetry和开源Grafana LGTM堆栈。我们已经在架构中手动仪器仪器，以生成&lt;a href =“ https://opentelemetry.io/docs/docs/specs/specs/specs/specs/specs/protocol/” target =“ _ black” res =“ rel =” noopener noreferrer“ noopener noreferrer”&gt; opentelemetry stroment（opentelemetrys Stroments（op）&lt;/我们使用遥测信号来监视游戏的关键方面，例如军队游行，将资源返回首都以及AI互动。剧透警报：您将学到的是，当我们监视军队的进步时，痕迹将所有这些信号绑在一起。  &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;H2 ID =“游戏设定”&gt;游戏设置&lt;/h2&gt;&#xA;&lt;p&gt;要在本地玩游戏，您所需要的只是Docker。您可以找到设置指令&lt;a href =“ https://github.com/grafana/alloy-scenarios/blob/main/game/game-ob-tracing/readme.md#running-th-demo--demo” target =“ _ black”或者，如果您不想在本地部署游戏，则可以使用&lt;a href =“ https://killercoda.com/grafana-labs/course/workshops/workshops/game-egame-of-traces” target =“ _ blank” rel =“ noopener noreferrer” noopener noreferrer“&#xA;&lt;p&gt;&lt;strong&gt;Whether you are playing the game locally or via Killercoda, make sure you import the included V2 Dashboard.&lt;/strong&gt; It shows you all telemetry signals in one user interface and also showcases some of the new &lt;a href=&#34;/blog/2025/05/07/dynamic-dashboards-grafana-12/&#34;&gt;dynamic dashboard features&lt;/a&gt; introduced in &lt;a href =“/blog/2025/05/07/grafana-release-all-the-the-the-features/”&gt; grafana 12 &lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999x1239/089175af40/game-egame-of-trace-v2-dashboard.png”&#xA;alt =“ V2仪表板的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;H2 ID =“ Play-the-game”&gt;玩游戏&lt;/h2&gt;&#xA;&lt;p&gt;好吧，我们最好在冬天到来之前玩这个游戏。有两个主要接口：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;游戏本身，可以在&lt;a href =“ http：// localhost：8080” target =“ _ black” rel =“ noopener noreferrer”&gt; http：// localhost：8080 &lt;/a&gt;运行&lt;code&gt; docker compose &lt;/code &lt;/lie&gt; &lt;/liope &lt;/&#xA;&lt;li&gt;您在设置期间安装的Grafana仪表板。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;让我们首先专注于游戏UI。您将被要求选择您的派系。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999x1255/7f7268bbaf/game-egame-egame-of-traces-choose-choose-your-faction.png”&#xA;alt =“显示您的派系步骤的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;选择后，您可以输入游戏。战争地图将向您致意。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a/a-us.storyblok.com/f/1022730/19999x1070/cc29414784/game-of-traces-warace-warraces-warr-of-kingdoms-map.png”&#xA;alt =“战争地图的屏幕截图。”/&gt; &lt;/p&gt;&lt;p&gt;如果您自己玩，我建议启用AI对手。 &lt;/p&gt;&#xA;&lt;p&gt;是时候玩游戏了：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;收集资源&lt;/li&gt;&#xA;&lt;li&gt;创建军队&lt;/li&gt;&#xA;&lt;li&gt;将军队移至村庄捕获它们&lt;/li&gt;&#xA;&lt;li&gt;将资源返回您的首都以创建更多军队&lt;/li&gt;&#xA;&lt;li&gt;在您的首都使用足够大的军队使用全面的进攻，将您的部队送往敌人首都的战争之路（个人最喜欢产生有趣痕迹的人）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;赢得或输了后，请回去并阅读博客的下一部分！&lt;/p&gt;&#xA;&lt;h2 id =“ i-told-you-it-was-a-a-a-a-a-a-a-a-a-a game traces”&gt;我告诉你这是一款痕迹！&lt;/h2&gt;&#xA;&lt;p&gt;所以你回来了！您要么是北部和南部王国之间大战的胜利者或失败者。让我们看看我们如何使用战斗来了解跟踪的工作方式。&lt;/p&gt;&#xA;&lt;p&gt;您将采取的共同举动是搬家乘坐村庄。在幕后，这被表示为痕迹。让我们在&lt;strong&gt;播放器决策&lt;/strong&gt;表中找到其中的一个。选择跟踪ID，它将带您到&lt;a href =“/docs/grafana/最新/panels-visualizations/cutuarizations/traces/treacs/？pg = blog pg = blog％5c＆plcmt = body-txt = body-txt”&gt; grafana traces traces traces traces traces view面板&lt;/a&gt;。&lt;/p&gt;。&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a/a-us.storyblok.com/f/1022730/19999x893/97ec5804d5/game-of-trace-traces-view-panel.png”&#xA;alt =“ traces面板的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;轨迹使我们能够理解在下面调用服务的流程以启动这一举动的流程。痕迹由&lt;a href =“/blog/2024/08/15/all-about-about-span-events-what-what-they-and-and-and-how-how-how-how-to-to-to-to-to-theem/“&gt; spans/”&gt;跨度制成&lt;/a&gt;。&lt;/p&gt;。&#xA;&lt;p&gt;我们从顶部开始，这称为我们的父跨度。父跨度来自我们的服务&lt;strong&gt; war_map，&lt;/strong&gt;，它向我们的&lt;strong&gt;北部基本资本&lt;/strong&gt;发送了请求，以启动移动命令到&lt;strong&gt; village-2 &lt;/strong&gt;。我们可以看到，&lt;strong&gt;北部 - 资本&lt;/strong&gt;称&lt;strong&gt; receed_army &lt;/strong&gt; &lt;strong&gt; village-2 &lt;/strong&gt;的端点启动此举。我们跨度的颜色表示其属于哪个服务。如您所见，在踪迹中填充跨度时，上下文非常重要。如果当前的跨度没有以前的上下文，则事件链被打破，我们将失去在服务中跟踪API和功能调用的能力。 &lt;/p&gt;&#xA;&lt;p&gt;好吧，我们可以看到一支军队搬到了&lt;strong&gt; village-2 &lt;/strong&gt;，但是在那场战斗中实际上发生了什么？这就是跨度属性进来的地方。要找到跨度属性，让我们选择&lt;strong&gt; village-2 receed_army &lt;/strong&gt;并扩展跨度属性下拉列表。 &lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1172x754/fc0afc8fc2/game-of-traces-span-span-attributes.png”&#xA;alt =“跨度属性的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;跨度属性是钥匙值对，为特定提供了进一步的上下文跨度。跨度属性是可选的，但是在确定特定变量或API调用的状态时非常有用。在我们的情况下，它使我们能够跟踪发生的战斗。我们可以看到，北部首都在2村派出了四人的军队，击败了三人的军队。这是一次成功的袭击，留下一支军队来捍卫被俘虏的村庄。&lt;/p&gt;&#xA;&lt;p&gt; trace还允许我们生成节点图以了解服务流，还可以总结&lt;a href =“/docs/grafana/grafana/最终/explore/simplified-exploration/traces/dourcess/process-red-red-metric/？pg = blog％5c＆plcmt＆plcmt = body-txt = body-txt = body-txt = body-txt”&gt; rifer＆rifer，rifer，rord＆duration（rord＆duration（rore，duration（redration）（red）&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1882x462/266b9ef7/games-of--traces-of-traces-node-node-graph.png”&#xA;alt =“节点图的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;在游戏的上下文中，我们通过将跨度类型设置为错误来表示丢失的战斗。这使我们能够看到游戏中有多少次成功和失败的战斗。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999x1071/1ae710a2a6/game-of-traces-of-traces-set-set-set-set-span-type-to-error.png”&#xA;alt =“要跟踪战斗的红色指标的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;h2 id =“三个光线！&lt;/h2&gt;&#xA;&lt;p&gt; OpenTelemetry最大的优势之一是遥测信号的相关性（在我们的情况下，痕迹，日志和指标），这在很大程度上是开箱即用的。如果您在跨度的上下文中生成日志，则这些日志将自动包含跟踪ID和跨度ID作为其属性的一部分。指标具有类似的相关方法，但让我们首先专注于痕迹。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999991/e7b2a0945c/game-of----er-of-trace-to-to-logs.png”&#xA;alt =“显示迹线与日志的相关性的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;Within the LGTM stack, we provide the ability to &lt;a href=&#34;/docs/grafana-cloud/send-data/traces/use-traces-with-grafana/?pg=blog%5c&amp;plcmt=body-txt/#link-traces-and-logs&#34;&gt;correlate between traces stored in Tempo and logs stored in Loki.&lt;/a&gt; If we take our battle span (never thought I会说在句子中），我们可以为跨度选择日志。这将使用跨度ID或跟踪ID或两者自动查询LOKI（取决于您的数据源配置），并在战斗跨度时提供来自我们村庄2的日志。我们可以看到发生的战斗的历史日志。&lt;/p&gt;&#xA;&lt;p&gt;最后，让我们看一下&lt;a href =“/docs/docs/grafana-cloud/send-data/traces/traces/use-traces-with-grafana/＃link-trace-traces-and-metrics”&gt; trace-trace-to-metrics &lt;/a&gt;。这是在Opentelemetry和Prometheus中作为示例性处理的。 An &lt;a href =“/docs/grafana/最新/基础/示例/？指标擅长为您提供系统的汇总视图，而traces giv您可以对单个请求进行细粒度的视野；示例是将两者链接的一种方式。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999x735/7A8F2DCD19/GAMES-E--E---E----TRACE-TRACE-EXEMPLAR.PNG”&#xA;alt =“示例的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;在我们的情况下，我们可以看到，随着战斗的发生，我们会产生每个村庄的总数。该指标在我们的&lt;strong&gt;接收&gt; Army &lt;/strong&gt;战斗跨度的范围内更新。因此，当进行度量读数时，我们将获得痕迹和跨度ID，该痕迹被存储在Prometheus/Mimir中。 Grafana允许我们叠加榜样，以便我们可以看到每个村庄所遇到的战斗总数的时间表，然后钻入特定的痕迹，以了解在特定战斗中发生了什么。 &lt;/p&gt;&#xA;&lt;p&gt;连续配置文件是这里唯一缺少的信号，但是我计划使用&lt;a href =“ https://github.com/grafana/otel-profling-python“ target =“ _ blank” rel =“ noopener noreferrer”&gt; grafaNa的OpentEnlemetRemetRemetry prifitery库&lt;/a&gt;。请继续关注！&lt;/p&gt;&#xA;&lt;h2 id =“ a-battle-is-a a-a series of WAS-and-effect”&gt;一场战斗是一系列因果&lt;/h2&gt;&#xA;&lt;p&gt;The last feature we introduced (I say “we” because the idea came from Hedley Simons, one of our resident tracing experts) was &lt;a href=&#34;https://opentelemetry.io/docs/concepts/signals/traces/#span-links&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;span links&lt;/a&gt;.链接是可选的，实施可能更具挑战性。从本质上讲，它们的作用是在不在直接的亲子层次结构中建立跨越跨度之间的关系。与亲子关系（同步和分层）不同，链接更灵活，可以在不同的轨迹或时间段内连接跨度。在我们的情况下，这变得特别有用，因为它通过在游戏过程中链接玩家的动作来将游戏玩法联系在一起。 &lt;/p&gt;&#xA;&lt;p&gt;让我们首先看一下格拉法那（Grafana）的链接如何表示。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1999X1008/461A5A2616/GAME-EF-----E---E---E---TRACE-SPAN-LINKS.PNG”&#xA;alt =“跨度链接的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;正如我们所看到的，我们的最终全面攻击具有附加的跨度链接。这引用了我们的玩家在游戏序列中采取的先前动作。因此，我们可以以相反的顺序跟踪我们的游戏。 &lt;/p&gt;&#xA;&lt;p&gt;那么，这允许我们做什么？好吧，这不是Tempo的查询API的实际用途，但它使我们能够创建一个重播功能。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1999X1098/2A8B5C6025/game-of-traces-traces-visual-game-replay.png”&#xA;alt =“视觉游戏重播的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;战争地图搜索tempo以查找特定的游戏会话ID，该ID被存储为每个跨度的属性。然后，它使用跨度链接在我们i之前以相反的顺序从速度中检索链接中的每个跟踪不知道这个。这使我们能够在游戏过程中踏上玩家的动作。 &lt;/p&gt;&#xA;&lt;h2 id =“ at the-the-the-the-the-the-a-a-Chance-for-for-Reflection”&gt;随着灰尘的沉降，反射的机会&lt;/h2&gt;&#xA;&lt;p&gt;构建此演示时，我自己的“啊哈！”当我设计游戏AI以及如何与游戏机制相互作用时，时刻有痕迹。很难知道一组决策权重如何影响AI的行动 -  AI是否会一遍又一遍地重复相同的机械师，还是与其中一个烧烤服务器（首都或村庄）进行互动。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x1050/905555623f/game-of-traces-ai-decision-cycle.png&#34;&#xA;alt =“代表AI决策周期的轨迹的屏幕截图。”/&gt; &lt;/p&gt;&#xA;&lt;p&gt;痕迹让我一起跟踪整个比赛中AI对手的决定。我很早就发现，我对AI对手的第一次尝试对玩家的迫在眉睫的威胁不足。如果它不认识到一场全面的攻击或村庄靠近其首都捕获，它仍然被动地收集资源并占领村庄。在修改了人工智能的行为之后，我可以看到它在敌人接近时，通过决定花费更少的时间收集资源和更多时间在其首都建立军队时起着更具防御作用的作用。 &lt;/p&gt;&#xA;&lt;h2 id =“ over-or-now”&gt;游戏……现在&lt;/h2&gt;&#xA;&lt;p&gt;我构建这款游戏很有趣。它使我能够真正潜入python的OpenTelemetry SDK，并了解如何创建迹线和跨度，如何在一个跨度之间传递到另一个跨度之间的上下文以及如何将指标和日志绑定到给定的跨度。 &lt;/p&gt;&#xA;&lt;p&gt;I purposefully chose not to auto-instrument &lt;a href=&#34;https://github.com/grafana/alloy-scenarios/tree/main/game-of-tracing&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Game of Traces&lt;/a&gt;, so the techniques of instrumentation can be applicable across programming languages.我计划写一篇后续文章，深入了解代码库，以涵盖游戏的仪器。 &lt;/p&gt;&#xA;&lt;p&gt;与此同时，我希望这款游戏为学习可观察性及其价值从头开始提供新的方法。直到下一次，对于北部！&lt;/p&gt;</description>
      <pubDate>Mon, 11 Aug 2025 11:06:00 +0000</pubDate>
    </item>
    <item>
      <title>【Integrating Deno and Grafana Cloud: How to observe your JavaScript project with zero added code】集成DeNo和Grafana Cloud：如何使用零添加代码观察JavaScript项目</title>
      <link>https://grafana.com/blog/2025/08/15/integrating-deno-and-grafana-cloud-how-to-observe-your-javascript-project-with-zero-added-code/</link>
      <description>【&lt;p&gt;&lt;em&gt;Andy Jiang is a JavaScript engineer with nearly 10 years of experience. He’s interested in making JavaScript and TypeScript simpler to use. He currently works at Deno as a product marketing manager. Outside of work, Andy likes cooking, writing, and playing tennis.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Observability is essential for modern applications. Metrics, logs, and traces allow you to troubleshoot production issues, monitor performance, and understand usage patterns. But in practice, adding observability to your JavaScript server — whether its Node.js or Deno — means dealing with SDKs, manually instrumenting code, or deploying third-party agents.&lt;/p&gt;&#xA;&lt;p&gt;What if you could skip all of that?&lt;/p&gt;&#xA;&lt;p&gt;In this post, we’ll explore how you can with Deno and Grafana Cloud. We’ll walk through how to set up Deno alongside Grafana Cloud, as well as how to filter logs by request, set up tracing for distributed systems, and get built-in metrics to observe your JavaScript projects. Note: you can find the code from this blog in this &lt;a href=&#34;https://github.com/lambtron/deno-grafana-example&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;observability-without-instrumentation&#34;&gt;&lt;strong&gt;Observability without instrumentation&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://deno.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Deno&lt;/a&gt;, a spiritual successor to Node, is a modern, open source, and zero-config toolchain for JavaScript and TypeScript. Deno natively supports TypeScript and web standard APIs, and comes with a &lt;a href=&#34;https://docs.deno.com/runtime/reference/cli/fmt/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;formatter&lt;/a&gt;, &lt;a href=&#34;https://docs.deno.com/runtime/reference/cli/lint/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;linter&lt;/a&gt;, &lt;a href=&#34;https://docs.deno.com/runtime/reference/cli/test/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;test runner&lt;/a&gt;, and more, so you can skip pulling together your tools and dive right into coding.&lt;/p&gt;&#xA;&lt;p&gt;Deno also includes &lt;a href=&#34;https://docs.deno.com/runtime/fundamentals/open_telemetry/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;built-in OpenTelemetry support&lt;/a&gt; for monitoring metrics, logs, and traces. In fact, Deno automatically implements observability into APIs like &lt;code&gt;console.log&lt;/code&gt;, &lt;code&gt;Deno.serve&lt;/code&gt;, &lt;code&gt;node:http&lt;/code&gt;, and &lt;code&gt;fetch&lt;/code&gt;, so you can get immediate telemetry data without any additional work. You can also run Node.js backends using Deno, automatically enabling observability for your Node projects.&lt;/p&gt;&#xA;&lt;p&gt;You can install Deno with the following command:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;curl -fsSL https://deno.land/install.sh | sh&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;To confirm that Deno has installed properly, you can run:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;deno -v&#xA;deno 2.4.3&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Great! Now that we have Deno installed, let’s take a quick detour and set up a collector service to route all telemetry data to &lt;a href=&#34;/products/cloud/&#34;&gt;Grafana Cloud&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;set-up-grafana-cloud&#34;&gt;&lt;strong&gt;Set up Grafana Cloud&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;We&amp;rsquo;ll use a Docker container to run the &lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenTelemetry collector&lt;/a&gt;, which is responsible for receiving telemetry data. In a &lt;code&gt;Dockerfile&lt;/code&gt;, we&amp;rsquo;ll pull from &lt;code&gt;otel/opentelemetry-collector-contrib:latest&lt;/code&gt;, copy the necessary config files into the container, and set the default command that will run when the container starts:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;FROM otel/opentelemetry-collector-contrib:latest&#xA;COPY otel-collector.yml /otel-config.yml&#xA;CMD [&amp;#34;--config&amp;#34;, &amp;#34;/otel-config.yml&amp;#34;]&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Next, &lt;a href=&#34;/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;create a free Grafana Cloud account&lt;/a&gt;, which will provide you with a Grafana Cloud stack. Click &lt;strong&gt;Details&lt;/strong&gt;, find &lt;strong&gt;OpenTelemetry&lt;/strong&gt;, and then click &lt;strong&gt;Configure&lt;/strong&gt;. This page will provide you with the &lt;strong&gt;OTLP Endpoint&lt;/strong&gt;, &lt;strong&gt;Instance ID&lt;/strong&gt;, and &lt;strong&gt;Password / API token&lt;/strong&gt;, which you&amp;rsquo;ll need to configure your collector.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1123x1335/faeb1d9e13/deno-otlp-endpoint.png&#34;&#xA;alt=&#34;Screenshot of Grafana Cloud settings page showing OTLP Endpoint details.&#34;/&gt;Finally, in our &lt;code&gt;otel-collector.yml&lt;/code&gt; file, let’s define how telemetry data should be exported to Grafana Cloud with those aforementioned details:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;receivers:&#xA;otlp:&#xA;protocols:&#xA;grpc:&#xA;endpoint: 0.0.0.0:4317&#xA;http:&#xA;endpoint: 0.0.0.0:4318&#xA;exporters:&#xA;otlphttp/grafana_cloud:&#xA;endpoint: $_YOUR_GRAFANA_OTLP_ENDPOINT&#xA;auth:&#xA;authenticator: basicauth/grafana_cloud&#xA;extensions:&#xA;basicauth/grafana_cloud:&#xA;client_auth:&#xA;username: $_YOUR_INSTANCE_ID&#xA;password: $_YOUR_API_TOKEN&#xA;processors:&#xA;batch:&#xA;service:&#xA;extensions: [basicauth/grafana_cloud]&#xA;pipelines:&#xA;traces:&#xA;receivers: [otlp]&#xA;processors: [batch]&#xA;exporters: [otlphttp/grafana_cloud]&#xA;metrics:&#xA;receivers: [otlp]&#xA;processors: [batch]&#xA;exporters: [otlphttp/grafana_cloud]&#xA;logs:&#xA;receivers: [otlp]&#xA;processors: [batch]&#xA;exporters: [otlphttp/grafana_cloud]&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Note that you will have to fill in your own information for &lt;code&gt;$_YOUR_GRAFANA_OTLP_ENDPOINT&lt;/code&gt;, &lt;code&gt;$_YOUR_INSTANCE_ID&lt;/code&gt;, and &lt;code&gt;$_YOUR_API_TOKEN&lt;/code&gt;. &lt;/p&gt;&#xA;&lt;p&gt;You can now build and run your collector Docker instance to start collecting your telemetry data:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;docker build -t otel-collector . &amp;amp;&amp;amp; docker run -p 4317:4317 -p 4318:4318 otel-collector&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;em&gt;For more information on how to set up Grafana Cloud with Deno, &lt;strong&gt;&lt;a href=&#34;https://docs.deno.com/examples/grafana_tutorial/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;please refer to our documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;filter-logs-by-request&#34;&gt;&lt;strong&gt;Filter logs by request&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s use this sample project: &lt;a href=&#34;https://github.com/lambtron/deno-grafana-example&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;a simple Express API server&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Many engineers reach for &lt;code&gt;console.log&lt;/code&gt; as the simplest way to debug. But on their own, these logs can be noisy. For instance, can we tell from the following logs whether book 1 or book 2 has a &lt;code&gt;null&lt;/code&gt; name field?&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;[http] GET /api/book/1&#xA;[http] GET /api/book/2&#xA;[db] SELECT * FROM books WHERE id = 1&#xA;[db] SELECT * FROM books WHERE id = 2&#xA;error: Uncaught (in promise) PostgresError: &amp;#39;name&amp;#39; column is null&#xA;throw new PostgresError(`&amp;#39;name&amp;#39; column is null`);&#xA;at query (file:///tmp/main.ts:29:9)&#xA;at queryBook (file:///tmp/main.ts:25:3)&#xA;at handleRequest (file:///tmp/main.ts:21:3)&#xA;at file:///tmp/main.ts:18:1&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;It’s difficult without context, since these logs are from two parallel interwoven requests.&lt;/p&gt;&#xA;&lt;p&gt;However, if we associate each log with its respective request, then we can find the answer:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;[req:1] [http] GET /api/book/1&#xA;[req:2] [http] GET /api/book/2&#xA;[req:1] [db] SELECT * FROM books WHERE id = 1&#xA;[req:2] [db] SELECT * FROM books WHERE id = 2&#xA;[req:1] error: Uncaught (in promise) PostgresError: &amp;#39;name&amp;#39; column is null&#xA;throw new PostgresError(`&amp;#39;name&amp;#39; column is null`);&#xA;at query (file:///tmp/main.ts:29:9)&#xA;at queryBook (file:///tmp/main.ts:25:3)&#xA;at handleRequest (file:///tmp/main.ts:21:3)&#xA;at file:///tmp/main.ts:18:1&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Turns out, the one missing its &lt;code&gt;name&lt;/code&gt; is book 1!&lt;/p&gt;&#xA;&lt;p&gt;But adjusting your logs to include a unique request ID can be tricky to maintain and scale:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt; app.get(&amp;#34;/api/book/:id&amp;#34;, async (req, res) =&amp;gt; {&#xA;&amp;#43; const requestId = Math.random();&#xA;&amp;#43; console.log(`[req:${requestId}] [http] GET /api/book/${req.params.id}`);&#xA;- console.log(`[http] GET /api/book/${req.params.id}`);&#xA;const id = req.params.id;&#xA;const book = await getBookFromDatabase(requestId, id);&#xA;res.send(book);&#xA;});&#xA;&amp;#43; async function getBookFromDatabase(requestId: number, bookId: string) {&#xA;&amp;#43; console.log(`[req:${requestId}] [db] getBookFromDatabase ${bookId}`);&#xA;- console.log(`[db] getBookFromDatabase ${bookId}`);&#xA;const book = books.get(bookId);&#xA;if (book === undefined) throw new Error(&amp;#34;No book found.&amp;#34;);&#xA;if (!book.author) throw new Error(&amp;#34;Book is missing author.&amp;#34;);&#xA;return book;&#xA;},&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Deno’s built-in OpenTelemetry support will automatically associate &lt;code&gt;console.log&lt;/code&gt; with the request that calls it. Just start the server using Deno with &lt;code&gt;OTEL_DENO=true&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;OTEL_DENO=true deno -NRE server.js&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;connecting-spans-and-traces-by-request&#34;&gt;&lt;strong&gt;Connecting spans and traces by request&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Spans and traces help answer the who, what, when, and duration of exceptions in production. Without any additional code instrumentation, Deno will automatically create a span for each incoming and outgoing HTTP request (this includes &lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;Deno.serve&lt;/code&gt;, and &lt;code&gt;node:http&lt;/code&gt;):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1213x482/7e0fb81a59/deno-spans-for-http-requests.png&#34;&#xA;alt=&#34;Trace visualization of a book API call showing service operations, spans, and execution times.&#34;/&gt;This trace shows a single GET request, which triggered an authorization check, and two database queries.&lt;/p&gt;&#xA;&lt;p&gt;In order to have the subsequent spans nested correctly under their parent operation in the trace, we can add some additional code that assigns each operation a span ID and passes that value as a Parent Span ID for its children operations.&lt;/p&gt;&#xA;&lt;p&gt;To make that simpler, here&amp;rsquo;s a utility function &lt;code&gt;withSpan&lt;/code&gt; that wraps the OpenTelemetry API function &lt;code&gt;startActiveSpan&lt;/code&gt; and handles the span lifecycle that includes setting the status code and recording exceptions:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;import { Span, SpanStatusCode, trace } from &amp;#34;@opentelemetry/api&amp;#34;;&#xA;const tracer = trace.getTracer(&amp;#34;api&amp;#34;);&#xA;export function withSpan&amp;lt;Args extends unknown[], T&amp;gt;(&#xA;name: string,&#xA;cb: (span: Span, ...args: Args) =&amp;gt; Promise&amp;lt;T&amp;gt;,&#xA;): (...args: Args) =&amp;gt; Promise&amp;lt;T&amp;gt; {&#xA;return (...args: Args) =&amp;gt; {&#xA;return tracer.startActiveSpan(name, async (span) =&amp;gt; {&#xA;try {&#xA;return await cb(span, ...args);&#xA;} catch (err) {&#xA;span.setStatus({ code: SpanStatusCode.ERROR, message: String(err) });&#xA;span.recordException(err as Error);&#xA;throw err;&#xA;} finally {&#xA;span.end();&#xA;}&#xA;});&#xA;};&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;This utility function can now wrap our &lt;code&gt;getBookFromDatabase&lt;/code&gt; function to provide it with the proper span context:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;import { withSpan } from &amp;#34;./utils.ts&amp;#34;;&#xA;export const getBookFromDatabase = withSpan(&#xA;&amp;#34;getBookFromDatabase&amp;#34;,&#xA;async function getBookFromDatabase(span, bookId: string) {&#xA;span.setAttribute(&amp;#34;book_id&amp;#34;, bookId);&#xA;console.log(`[db] getBookFromDatabase ${bookId}`);&#xA;await new Promise((resolve) =&amp;gt; setTimeout(resolve, 300));&#xA;const book = books.get(bookId);&#xA;if (book === undefined) throw new Error(&amp;#34;No book found.&amp;#34;);&#xA;if (!book.author) throw new Error(&amp;#34;Book is missing author.&amp;#34;);&#xA;return book;&#xA;},&#xA;);&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Now when we send another request to our API and view its trace, we can see the new &lt;code&gt;getBookFromDatabase&lt;/code&gt; as a nested span under the parent HTTP trace:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x596/f80e2bceaf/deno-nested-span.png&#34;&#xA;alt=&#34;Trace analysis of a GET request in a book API, showing timing details for operations.&#34;/&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;distributed-tracing-made-easy&#34;&gt;&lt;strong&gt;Distributed tracing made easy&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;But what if a single request has to go through several microservices or edge functions? Tracing in a distributed system is possible, too, but requires propagating the “parent operation” context (the operation that triggers the entire set of operations) from one service to another when making a request.&lt;/p&gt;&#xA;&lt;p&gt;You could implement this logic yourself, where you manually inject the header into the request. Here’s an example of a “trace-aware” &lt;code&gt;fetch&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;import { trace } from &amp;#34;npm:@opentelemetry/api&amp;#34;;&#xA;export function fetchWithTrace(req: Request): Promise&amp;lt;Response&amp;gt; {&#xA;const span = trace.getActiveSpan();&#xA;if (!span) return fetch(req);&#xA;const spanContext = span.spanContext();&#xA;const traceparent = `00-${spanContext.traceId}-${spanContext.spanId}-01`;&#xA;req.headers.set(&amp;#34;traceparent&amp;#34;, traceparent);&#xA;return fetch(req);&#xA;}&#xA;// every call to `fetch` now needs to be replaced with `fetchWithTrace`&#xA;const resp = await fetchWithTrace(new Request(&amp;#34;&amp;lt;https://example.com&amp;gt;&amp;#34;));&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;But that’s not all — on the receiving end, you’ll also need to read back the &lt;code&gt;traceparent&lt;/code&gt; header and create a new span with it. Overall, this is tedious, error prone, and difficult to maintain.&lt;/p&gt;&#xA;&lt;p&gt;Using Deno and its built-in OTel support skips all of this. Deno automatically propagates trace information between services: injecting trace information into outbound requests and reading trace information from incoming requests.&lt;/p&gt;&#xA;&lt;p&gt;Let’s take a look at an example. We’ll run a new script that simply calls the API server with &lt;code&gt;fetch&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;const resp = await fetch(&amp;#34;&amp;lt;https://localhost:8000/api/book/1&amp;gt;&amp;#34;);&#xA;const book = await resp.json();&#xA;console.log(book);&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;We’ll run this with Deno and OTel:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet code-snippet__mini&#34;&gt;&lt;div class=&#34;lang-toolbar__mini&#34;&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet code-snippet__border&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$ deno run -A --unstable-otel main.ts&#xA;{ id: &amp;#34;1&amp;#34;, title: &amp;#34;The Great Gatsby&amp;#34;, author: &amp;#34;F. Scott Fitzgerald&amp;#34; }&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;In Grafana Cloud, we can see that the latest trace has a new service name:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/998x182/adc8edf06c/deno-table-trace-ids.png&#34;&#xA;alt=&#34;A table listing traces with columns for Trace ID, Start time, Service, Name, and Duration.&#34;/&gt;Clicking on that reveals three spans:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1999x639/656e2da301/deno-traces-three-spans.png&#34;&#xA;alt=&#34;&#34;/&gt;Deno has automatically tracked a single trace across two services. For more complex microservice architectures, you could imagine having deep nests of spans across several services.&lt;/p&gt;&#xA;&lt;h2 id=&#34;built-in-metrics&#34;&gt;&lt;strong&gt;Built-in metrics&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Metrics are a great way to alert you &lt;em&gt;when&lt;/em&gt; to investigate an issue. They are aggregate data that show how frequently something is happening. For example, a common setup for any web server would be to measure the percentage of requests with 500 status codes, and to set an alert when that percentage exceeds 1%.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;class=&#34;lazyload d-inline-block&#34;&#xA;data-src=&#34;https://a-us.storyblok.com/f/1022730/1038x437/6a54baa9c1/deno-stacked-lines-graph.png&#34;&#xA;alt=&#34;A graph with stacked lines showing data trends over time, featuring green, blue, and red areas representing different data sets.&#34;/&gt;If you want more context about the health of your program, Deno will also automatically collect&lt;a href=&#34;https://opentelemetry.io/docs/specs/semconv/runtime/v8js-metrics/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://opentelemetry.io/docs/specs/semconv/runtime/v8js-metrics/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;metrics on V8&lt;/a&gt;, letting you monitor metrics such as &lt;code&gt;v8js_memory_heap_size_bytes&lt;/code&gt; and garbage collection duration.&lt;/p&gt;&#xA;&lt;h2 id=&#34;whats-next&#34;&gt;&lt;strong&gt;What’s next&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The telemetry Deno provides out of the box is a powerful foundation. With zero effort, your services become visible in metrics, logs, and traces, and they’re all unified and searchable within Grafana Cloud. From here, you can extend your observability with custom spans, events, or domain-specific metrics.&lt;/p&gt;&#xA;&lt;p&gt;For more information, you can refer to &lt;a href=&#34;https://docs.deno.com/runtime/fundamentals/open_telemetry/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Deno&amp;rsquo;s OpenTelemetry documentation&lt;/a&gt;, &lt;a href=&#34;https://docs.deno.com/examples/grafana_tutorial/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;this step-by-step tutorial for setting up Deno and Grafana&lt;/a&gt;, as well as the &lt;a href=&#34;/docs/grafana-cloud/?pg=blog&amp;amp;plcmt=body-txt&#34;&gt;Grafana Cloud documentation&lt;/a&gt;.&lt;/p&gt;】&lt;p&gt; &lt;em&gt; Andy Jiang是一位JavaScript工程师，拥有近10年的经验。他有兴趣使JavaScript和打字稿更简单使用。他目前在Deno担任产品营销经理。在工作之外，安迪喜欢烹饪，写作和打网球。&lt;/em&gt; &lt;/p&gt;&#xA;&lt;p&gt;可观察性对于现代应用至关重要。指标，日志和痕迹使您可以解决生产问题，监视性能并了解使用模式。但是实际上，在JavaScript服务器（无论是node.js还是DENO）中添加可观察性，意味着使用SDK，手动仪器代码或部署第三方代理。&lt;/p&gt;&#xA;&lt;p&gt;如果您可以跳过所有这些？&lt;/p&gt;&#xA;&lt;p&gt;在这篇文章中，我们将探讨如何使用Deno和Grafana Cloud。我们将介绍如何与Grafana Cloud一起设置DeNo，以及如何通过请求过滤日志，为分布式系统设置跟踪以及获取内置指标以观察您的JavaScript项目。注意：您可以在此博客中找到&lt;a href =“ https://github.com/lambtron/deno-grafana-example” target =“ _ black” rel =“ noopener noreferrer”&gt; github repo &lt;/a&gt;。&lt;/a&gt;。&lt;/p&gt;。&#xA;&lt;h2 id =“可观察性，没有仪器”&gt; &lt;strong&gt;没有仪器的可观察性&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt; &lt;a href =“ https://deno.com” target =“ _ blank” rel =“ noopener noreferrer”&gt; deno &lt;/a&gt;是节点的精神继承者，是现代的，开源的，零开源，零config工具，用于JavaScript和tyspript。 deno内在支持打字稿和Web标准API，并带有a &lt;a href =“ https://docs.deno.com/runtime/runtime/reference/cli/fli/fli/fmt/” target =“ _ black” rel =“ noopener noreferrer” noopener noreferrer“ target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;linter&lt;/a&gt;, &lt;a href=&#34;https://docs.deno.com/runtime/reference/cli/test/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;test runner&lt;/a&gt;, and more, so you can skip pulling together your tools and dive right into coding.&lt;/p&gt;&#xA;&lt;p&gt; deno还包括&lt;a href =“ https://docs.deno.com/runtime/fundamentals/open_telemetry/” target =“ _ black” rel =“ noopener noreferrer”&gt; innoopener noreferrer“&gt; innopenter noreferrer”&gt; innopent-in opentEneremetry支持&lt;/a&gt;用于监视Metrics，Logs，Logs，Logs和Trace和Trace和Trace和Trace和Trace和Trace和Trace。实际上，DENO会自动将可观察性实现到&lt;code&gt; console.log &lt;/code&gt;，&lt;code&gt; deno.serve &lt;/code&gt;，&lt;code&gt;节点：http &lt;/code&gt;和&lt;code&gt; fetch &lt;/code&gt;，因此您可以立即获得远程计算数据而无需任何其他工作。您还可以使用DENO运行Node.js后端，自动为您的节点项目启用可观察性。&lt;/p&gt;&#xA;&lt;p&gt;您可以使用以下命令安装DENO：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false“&gt; &lt;code class =“ language -none”&gt; curl -fssl https://deno.land/install.sh | sh | sh &lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;要确认Deno已正确安装，您可以运行：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; deno -v&#xA;Deno 2.4.3 &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;太好了！现在我们已经安装了Deno，让我们快速绕行并设置一个收集器服务，以将所有遥测数据路由到&lt;a href =“/products/products/cloud/”&gt; grafana cloud &lt;/a&gt;。&lt;/p&gt;&#xA;在&#xA;&lt;p&gt;我们将使用docker容器运行&lt;a href =“ https://opentelemetry.io/docs/collector/” target =“ _ black” rel =“ noopener noreferrer”&gt; opentelemetry collector &lt;/a&gt;，负责接收远程远程远程数据的数据。在&lt;code&gt; dockerfile &lt;/code&gt;中，我们将从&lt;code&gt; otel/opentelemetry-collector-contrib：最新&lt;/code&gt;中撤离，将必要的配置文件复制到容器中，并设置在容器启动时运行的默认命令：&lt;/p&gt;&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;来自Otel/opentelemetry-collector-contrib：最新&#xA;复制otel-collector.yml /otel-config.yml&#xA;cmd [ -  config“，”/otel-config.yml”] &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;接下来，&lt;a href =“/auth/auth/inper-up/create-user/？pg = blog＆plcmt = body-txt”&gt;创建一个免费的grafana云帐户&lt;/a&gt;，它将为您提供Grafana Cloud Cloud堆栈。单击&lt;strong&gt;详细信息&lt;/strong&gt;，查找&lt;strong&gt; opentelemetry &lt;/strong&gt;，然后单击&lt;strong&gt;配置&lt;/strong&gt;。此页面将为您提供&lt;strong&gt; OTLP端点&lt;/strong&gt;，&lt;strong&gt;实例ID &lt;/strong&gt;和&lt;strong&gt; password/api代币&lt;/strong&gt;，您需要配置收集器。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1123x1335/faeb1d9e13/deno-otlp-endpoint.png”&#xA;alt =“ Grafana云设置页面的屏幕截图显示OTLP端点详细信息。”/&gt;最后，在我们的&lt;code&gt; otel-collector.yml &lt;/code&gt;文件中，让我们定义应如何将遥测数据导出到上述详细信息：&lt;/p&gt;&gt; &lt;/p&gt; &lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）“ x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;接收者：&#xA;OTLP：&#xA;协议：&#xA;GRPC：&#xA;端点：0.0.0.0：4317&#xA;http：&#xA;端点：0.0.0.0：4318&#xA;出口商：&#xA;otlphttp/grafana_cloud：&#xA;端点：$ _YOUR_GRAFANA_OTLP_ENDPOINT&#xA;auth：&#xA;身份验证器：基本auth/grafana_cloud&#xA;扩展：&#xA;BASICAUTH/GRAFANA_CLOUD：&#xA;client_auth：&#xA;用户名：$ _YOUR_INSTANCE_ID&#xA;密码：$ _YOUR_API_TOKEN&#xA;处理器：&#xA;批：&#xA;服务：&#xA;扩展：[basicAuth/grafana_cloud]&#xA;管道：&#xA;痕迹：&#xA;接收器：[OTLP]&#xA;处理器：[批次]&#xA;出口商：[otlphttp/grafana_cloud]&#xA;指标：&#xA;接收器：[OTLP]&#xA;处理器：[批次]&#xA;出口商：[otlphttp/grafana_cloud]&#xA;日志：&#xA;接收器：[OTLP]&#xA;处理器：[批次]&#xA;出口商：[otlphttp/grafana_cloud] &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;请注意，您必须填写自己的信息，以备&lt;code&gt; $ _ YOUR_GRAFANA_OTLP_ENDPOINT &lt;/code&gt;，&lt;code&gt; $ _ YOUR_INSTANCE_ID &lt;/code&gt;和&lt;code&gt; $ _ Your_api_token &lt;/code&gt;。 &lt;/p&gt;&#xA;&lt;p&gt;您现在可以构建并运行收集器docker实例以开始收集遥测数据：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; docker build -t otel-collector。 &amp;&amp; Docker Run -P 4317：4317 -P 4318：4318 Otel -Collector &lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt; &lt;em&gt;有关如何使用Deno设置Grafana Cloud的更多信息&#xA;&lt;h2 id =“ filter-logs-by-request”&gt; &lt;strong&gt;通过请求&lt;/strong&gt; &lt;/h2&gt;过滤日志&#xA;&lt;p&gt;让我们使用此示例项目：&lt;a href =“ https://github.com/lambtron/deno-grafana-example” target =“ _ blank” rel =“ noopener noreferrer”&gt;一个简单的Express Api Server &lt;/a&gt;。&lt;/a&gt;。&lt;/p&gt;。&lt;/p&gt;。&#xA;&lt;p&gt;许多工程师以&lt;code&gt; console.log &lt;/code&gt;作为调试的最简单方法。但是，这些日志本身可能是嘈杂的。例如，我们可以从以下日志中分辨出书1或书2是否具有&lt;code&gt; null &lt;/code&gt;名称字段？&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; [http] get/api/book/1&#xA;[http] get/api/book/2&#xA;[db]从书籍= 1的书籍中选择 * *&#xA;[db]从书籍= 2的书籍中选择 * *&#xA;错误：未接收（在承诺中）postgreserror：“名称”列为null&#xA;投掷新的PostgresError（&#39;名称&#39;列为null`）;&#xA;在查询（file：///tmp/main.ts：29：9）&#xA;在Querybook（文件：////tmp/main.ts：25：3）&#xA;在HandleRequest（file：///tmp/main.ts：21：3）&#xA;在file：///tmp/main.ts：18：1 &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;没有上下文很难，因为这些日志来自两个并行交织的请求。&lt;/p&gt;&#xA;&lt;p&gt;但是，如果我们将每个日志与其各自请求相关联，那么我们可以找到答案：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; [req：1] [http] get/api/book/1&#xA;[req：2] [http] get/api/book/2&#xA;[req：1] [db]选择 *从id = 1的书籍中选择 *&#xA;[req：2] [db]从书籍= 2的书籍中选择 * *&#xA;[req：1]错误：未被告求（在承诺）后Greserror：&#39;name&#39;列为null&#xA;投掷新的PostgresError（&#39;名称&#39;列为null`）;&#xA;在查询（file：///tmp/main.ts：29：9）&#xA;在Querybook（文件：////tmp/main.ts：25：3）&#xA;在HandleRequest（file：///tmp/main.ts：21：3）&#xA;在file：///tmp/main.ts：18：1 &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;事实证明，缺少其&lt;code&gt;名称&lt;/code&gt;是书1！&lt;/p&gt;&#xA;&lt;p&gt;但是，调整日志以包含唯一请求ID可能很棘手地维护和扩展：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; app.get（“/api/book/：id”，async（req，res）=&gt; {&#xA;+ const requestID = Math.random（）;&#xA;+ console.log（`[req：$ {requestId}] [http] get/api/book/$ {req.params.id}`）;&#xA;-Console.log（`[http] get/api/book/$ {req.params.id}`）;&#xA;const ID = req.params.id;&#xA;const book =等待getBook fromDatabase（requestId，id）;&#xA;res.send（book）;&#xA;}）;&#xA;+ async函数getBookFromDatabase（requestId：number，bookid：string）{&#xA;+ console.log（`[req：$ {requestId}] [db] getbookfromdatabase $ {bookid}`）;&#xA;-Console.log（`[db] getBookFromDatabase $ {bookid}`）;&#xA;const book = books.get（bookid）;&#xA;如果（book ===未定义）提出新错误（“找不到书。”）;&#xA;如果（！book.author）提出新错误（“书本缺少作者。”）;&#xA;返回书；&#xA;}，&lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt; deno的内置opentelemetry支持将自动将&lt;code&gt; console.log &lt;/code&gt;与调用的请求相关联。只需使用&lt;code&gt; otel_deno = true &lt;/code&gt;使用DENO启动服务器：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; otel_deno = true deno -nre-nre server.js &lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;h2 id =“连接跨度和traces-by-request”&gt; &lt;strong&gt;通过请求连接跨度和痕迹&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt;跨度和痕迹有助于回答生产中例外的人，什么，何时和持续时间。如果没有任何其他代码仪器，Deno将自动为每个传入和传出HTTP请求创建一个跨度（这包括&lt;code&gt; fetch &lt;/code&gt;，&lt;code&gt; deno.serve.serve &lt;/code&gt; &lt;/code&gt;和&lt;code&gt; node：http &lt;/code&gt;）：&lt;/p&gt;）：&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1213x482/7e0fb81a59/deno-pans-pans-pans-for-for-http-requests.png”&#xA;alt =“书本API调用的跟踪可视化显示服务操作，跨度和执行时间。”/&gt;此跟踪显示一个触发授权检查和两个数据库查询的单个Get请求。&lt;/p&gt;&#xA;&lt;p&gt;为了使后续跨度在跟踪中的父操作下正确嵌套，我们可以添加一些其他代码，以将每个操作分配一个跨度ID，并将该值作为其子女操作的父跨度ID传递。&lt;/p&gt;&#xA;&lt;p&gt;为了使它更简单，这是一个实用程序函数&lt;/code&gt; &lt;/code&gt;包装OpenTelemetry API函数&lt;code&gt; startActivespan &lt;/code&gt; &lt;/code&gt;并处理跨度生命周期，其中包括设置状态代码和记录异常：&lt;/p&gt;&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; import {span，spanstatuscode，trace}从“@opentelemetry/api”;&#xA;const tracer = trace.getTracer（“ api”）;&#xA;带有span &lt;args的导出函数扩展了未知[]，t&gt;（&#xA;名称：字符串，&#xA;CB ：（跨度：跨度，... args：args）=&gt; promise &lt;t&gt;，&#xA;）：（ ... args：args）=&gt; Promise &lt;t&gt; {&#xA;返回（... args：args）=&gt; {&#xA;返回tracer.startactivespan（name，async（span）=&gt; {&#xA;尝试 {&#xA;返回等待CB（跨度，... args）;&#xA;} catch（err）{&#xA;span.setStatus（{code：spanstatuscode.error，消息：string（err）}）;&#xA;span.recordexception（err as error）;&#xA;投掷错误；&#xA;} 最后 {&#xA;span.end（）;&#xA;}&#xA;}）;&#xA;};&#xA;} &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;此实用程序功能现在可以包装我们的&lt;code&gt; getBookFromDatabase &lt;/code&gt;功能，以提供适当的跨度上下文：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; import {withSpan}从“ ./utils.ts”;&#xA;导出const getbook fromDatabase = withspan（&#xA;“ getbook fromDatabase”，&#xA;异步函数getBookFromDatabase（跨度，bookid：string）{&#xA;span.setAttribute（“ book_id”，bookid）;&#xA;console.log（`[db] getBookFromDatabase $ {bookid}`）;&#xA;等待新的承诺（（resolve）=&gt; settimeout（resolve，300））;&#xA;const book = books.get（bookid）;&#xA;如果（book ===未定义）提出新错误（“找不到书。”）;&#xA;如果（！book.author）提出新错误（“书本缺少作者。”）;&#xA;返回书；&#xA;}，，&#xA;）; &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;现在，当我们向我们的API发送另一个请求并查看其跟踪时，我们可以看到新的&lt;code&gt; getbook fromdatabase &lt;/code&gt;作为父http跟踪下的嵌套跨度：&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/19999x596/f80e2bceaf/deno-nested-span.png”&#xA;alt =“书本API中的get请求的跟踪分析，显示操作的时机细节。”/&gt; &lt;/p&gt;&#xA;在&#xA;&lt;p&gt;但是，如果单个请求必须通过几个微服务或边缘功能怎么办？在提出请求时，也需要在分布式系统中跟踪分布式系统，但需要传播“父操作”上下文（触发整个操作集的操作）。&lt;/p&gt;。&lt;/p&gt;&#xA;&lt;p&gt;您可以自己实现此逻辑，在此处手动将标题注入请求中。这是“跟踪感”的示例&lt;code&gt; fetch &lt;/code&gt;：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt;从“ npm：@opentelemetry/api”中导入{trace};&#xA;导出函数fetchWithTrace（req：request）：Promise &lt;响应&gt; {&#xA;const span = trace.getActivespan（）;&#xA;如果（！span）返回fetch（req）;&#xA;const spancontext = span.spancontext（）;&#xA;const traceparent =`00- $ {spancontext.traceid}  -  $ {spancontext.spanid} -01`;&#xA;req.headers.set（“ traceparent”，traceparent）;&#xA;返回获取（req）;&#xA;}&#xA;//现在需要的每个电话都需要s要替换为“ fetchwithtrace”&#xA;const resp =等待fetchWithTrace（新请求（“ &lt;https://example.com&gt;”））; &lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;，但这还不是全部 - 在接收端，您还需要读取&lt;code&gt; traceparent &lt;/code&gt;标题并使用它创建一个新的跨度。总体而言，这很乏味，容易发生且难以维护。&lt;/p&gt;&#xA;&lt;p&gt;使用Deno及其内置的Otel支持跳过了所有这些。 DENO会自动传播服务之间的跟踪信息：将跟踪信息注入出站请求中，并从传入请求中读取跟踪信息。&lt;/p&gt;&#xA;&lt;p&gt;让我们看看一个例子。我们将运行一个新脚本，该脚本只需使用&lt;code&gt; fetch &lt;/code&gt;来调用API服务器：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; const resp =等待fetch（“ &lt;https：// localhost：8000/api/book/book/1&gt;”）;&#xA;const book =等待resp.json（）;&#xA;console.log（book）; &lt;/code&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;我们将与Deno和Otel一起运行：&lt;/p&gt;&#xA;&lt;div class =“ code-snippet code-snippet__mini”&gt; &lt;div class =“ lang-toolbar__mini”&gt;&#xA;&lt;span class =“ code-clipboard”&gt;&#xA;&lt;button x-data =“ app_code_snippet（）” x-init =“ init（）” @click =“ copy（）”&gt;&#xA;&lt;img class =“ code-clipboard__icon” src =“/媒体/images/icons/icon-copy-small-2.svg” alt =“复制代码到剪贴板” width =“ 14”高度=“ 13”&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;/div&gt; &lt;div class =“代码 - 尼珀代码snippet__border”&gt;&#xA;&lt;pre data-expanded =“ false”&gt; &lt;code class =“ language-none”&gt; $ deno run -a  -  unstable-otel main.ts&#xA;{id：“ 1”，标题：“大盖茨比”，作者：“ F. Scott Fitzgerald”} &lt;/code&gt; &lt;/pre&gt; &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt; &lt;p&gt;在Grafana Cloud中，我们可以看到最新的跟踪具有新的服务名称：&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/998x182/adc8edf06c/deno-table-trace-idace-ids.png”&#xA;alt =“一个表格列表的列表，带有跟踪ID，开始时间，服务，名称和持续时间的列。”/&gt;单击该列表显示三个跨度：&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/199999X639/656E2DA301/deno-traces-traces-three-pans.png”&#xA;alt =“”/&gt; deno自动在两个服务上跟踪了一个痕迹。对于更复杂的微服务体系结构，您可以想象在几种服务中都有深层跨度的跨度。&lt;/p&gt;&#xA;&lt;H2 ID =“内置内置”&gt; &lt;strong&gt;内置指标&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt;指标是提醒您&lt;em&gt; &lt;/em&gt;调查问题时的好方法。它们是汇总数据，显示发生了频率。例如，任何Web服务器的常见设置都是用500 Statu测量请求百分比S代码，并在该百分比超过1％时设置警报。&lt;/p&gt;&#xA;&lt;p&gt; &lt;img&#xA;class =“ Lazyload D-Inline-Block”&#xA;data-src =“ https://a-us.storyblok.com/f/1022730/1038x437/6a54baa9c1/deno-actacked-lines-graph.png”&#xA;alt =“一条带有堆叠线的图表显示数据趋势随着时间的推移，具有代表不同数据集的绿色，蓝色和红色区域。 rel =“ noopener noreferrer”&gt; &lt;/a&gt; &lt;a href =“ https://opentelemetry.io/docs/docs/specs/semconv/runtime/runtime/v8js-metrics/” target =“ _ black” res =“ rel =” noopener noreferrer“ noopener noreferrer”&gt; &lt;code&gt; v8js_memory_heap_size_bytes &lt;/code&gt;和垃圾收集时间。&lt;/p&gt;&#xA;&lt;h2 id =“ whats-next”&gt; &lt;strong&gt;什么是下一步&lt;/strong&gt; &lt;/h2&gt;&#xA;&lt;p&gt; DENO提供的遥测遥控器是一个强大的基础。通过零努力，您的服务在指标，日志和痕迹中变得可见，并且它们在Grafana Cloud中都是统一的且可搜索的。从这里，您可以通过自定义跨度，事件或特定领域的指标扩展可观察性。&lt;/p&gt;&#xA;&lt;p&gt;有关更多信息，您可以参考&lt;a href =“ https://docs.deno.com/runtime/fundamentals/open_telemetry/“ target =” _ _ black“ rel =“ noopener noreferrer”&gt; deno deno的opentelemetry文档href =“ https://docs.deno.com/examples/grafana_tutorial/” target =“ _ blank” rel =“ noopener noreferrer“文档&lt;/a&gt;。&lt;/p&gt;</description>
      <pubDate>Fri, 15 Aug 2025 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>