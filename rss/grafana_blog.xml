<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Grafana Labs blog on Grafana Labs</title>
    <link>/blog/index.xml</link>
    <description>Recent content in Grafana Labs blog on Grafana Labs</description>
    <item>
      <title>【How to customize your Loki deployment with Ansible】如何使用 Ansible 自定义 Loki 部署</title>
      <link>https://grafana.com/blog/2024/07/05/how-to-customize-your-loki-deployment-with-ansible/</link>
      <description>【&lt;p&gt;&lt;em&gt;Michal Vaško is a DevOps engineer at cloudWerkstatt, with a passion for open source technology and a deep love for observability.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;While operations or platform teams have long relied on visibility into metrics to react swiftly, the idea of doing the same thing with logs was once just a dream. Thankfully, &lt;a href=&#34;/oss/loki/&#34;&gt;Grafana Loki&lt;/a&gt; has revolutionized the logging stack, giving you the same level of visibility with logs that you get with metrics.&lt;/p&gt;&#xA;&lt;p&gt;If you haven&amp;rsquo;t embarked on the Loki journey yet, now is the time with the release of Loki 3.0!&lt;/p&gt;&#xA;&lt;p&gt;There are several deployment methods available for various deployment modes: Helm, Tanka, Docker or Docker Compose, local, and from source. For more details on all these methods, you can refer to the &lt;a href=&#34;/docs/loki/latest/setup/install/&#34;&gt;Grafana Loki installation guide&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;All these installation methods are great, serving their purpose and providing flexibility to users so you can deploy Loki in a manner that fits your specific scenario. But let me introduce you to another approach — the Ansible Loki Role. This role supports Debian, Ubuntu, and Red Hat. Originally migrated from &lt;a href=&#34;https://github.com/voidquark/loki&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Voidquark&amp;rsquo;s Loki repository&lt;/a&gt; to the &lt;a href=&#34;https://github.com/grafana/grafana-ansible-collection&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana Ansible collection&lt;/a&gt;, I&amp;rsquo;m excited to be part of the ongoing maintenance and improvements to the role.&lt;/p&gt;&#xA;&lt;p&gt;Deployment of Loki is primarily focused on Kubernetes, for scalability reasons. But what if you&amp;rsquo;re not at that phase yet? Or you simply want to experiment? Or you have a small organization where deploying Loki is desired and you are already familiar with Ansible? Well, you&amp;rsquo;re in the right place. Let&amp;rsquo;s dive into setting up this Ansible role.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-you-need-to-get-started&#34;&gt;What you need to get started&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ensure you have an Ansible controller deployed.&lt;/li&gt;&#xA;&lt;li&gt;Install the Ansible Grafana collection on your Ansible controller.&lt;/li&gt;&#xA;&lt;li&gt;Familiarize yourself with the &lt;a href=&#34;https://github.com/grafana/grafana-ansible-collection/blob/main/roles/loki/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;README&lt;/a&gt; of the Ansible Loki Role.&lt;/li&gt;&#xA;&lt;li&gt;Create a simple default playbook or customize it to fit your requirements.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;I&amp;rsquo;m going to assume you already have Ansible set up and have read the Loki role README to become more familiar with it. &lt;br /&gt;&#xA;&lt;br /&gt;&#xA;Now, let&amp;rsquo;s proceed with installing the Ansible Grafana collection:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;bash&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible-galaxy collection install grafana.grafana&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;how-to-use-the-default-deployment&#34;&gt;How to use the default deployment&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s demonstrate an out-of-the-box deployment with the default configuration.&lt;/p&gt;&#xA;&lt;p&gt;First, create a playbook named &lt;code&gt;function_loki-default.play&lt;/code&gt;. This playbook is straightforward and deploys Loki with default settings.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Deploy Loki using the default configuration&#xA;hosts: loki&#xA;become: true&#xA;roles:&#xA;- role: grafana.grafana.loki&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&#xA;Next, execute this playbook to deploy Loki:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;bash&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible-playbook function_loki-default.play&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&#xA;The default deployment for Loki is now in place, but most people will want to tweak it for their own needs. Let&amp;rsquo;s move on to customizing it.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-to-customize-your-deployment&#34;&gt;How to customize your deployment&lt;/h2&gt;&#xA;&lt;p&gt;What if you want to tinker a bit more? Well, you&amp;rsquo;re not limited! You can configure each component exactly as you wish. Let&amp;rsquo;s delve into an example where we&amp;rsquo;ll use:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Filesystem storage&lt;/li&gt;&#xA;&lt;li&gt;A ruler with Alertmanager&lt;/li&gt;&#xA;&lt;li&gt;A simple SSH alerting rule&lt;/li&gt;&#xA;&lt;li&gt;A compactor with a four-week retention period&lt;/li&gt;&#xA;&lt;li&gt;Other custom parameters&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s create a playbook named &lt;code&gt;function_loki-customized.play&lt;/code&gt; for this customized deployment:&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Deploy Loki using the local filesystem&#xA;hosts: loki&#xA;become: true&#xA;roles:&#xA;- role: grafana.grafana.loki&#xA;vars:&#xA;loki_querier:&#xA;max_concurrent: 16&#xA;engine:&#xA;max_look_back_period: 672h&#xA;loki_storage_config:&#xA;tsdb_shipper:&#xA;active_index_directory: &amp;#34;{{ loki_working_path }}/tsdb-index&amp;#34;&#xA;cache_location: &amp;#34;{{ loki_working_path }}/tsdb-cache&amp;#34;&#xA;filesystem:&#xA;directory: &amp;#34;{{ loki_working_path }}/chunks&amp;#34;&#xA;loki_ingester:&#xA;wal:&#xA;enabled: true&#xA;dir: &amp;#34;{{ loki_working_path }}/wal&amp;#34;&#xA;lifecycler:&#xA;address: 127.0.0.1&#xA;ring:&#xA;kvstore:&#xA;store: inmemory&#xA;replication_factor: 1&#xA;final_sleep: 0s&#xA;chunk_idle_period: 1h&#xA;max_chunk_age: 2h&#xA;chunk_target_size: 1048576&#xA;query_store_max_look_back_period: 672h&#xA;loki_limits_config:&#xA;split_queries_by_interval: 0&#xA;reject_old_samples: true&#xA;reject_old_samples_max_age: 168h&#xA;max_query_length: 0&#xA;max_query_series: 50000&#xA;retention_period: 672h&#xA;allow_structured_metadata: false&#xA;max_query_lookback: 672h&#xA;loki_compactor:&#xA;working_directory: &amp;#34;{{ loki_working_path }}/compactor&amp;#34;&#xA;compaction_interval: 10m&#xA;retention_enabled: true&#xA;retention_delete_delay: 2h&#xA;retention_delete_worker_count: 150&#xA;delete_request_store: filesystem&#xA;loki_common:&#xA;path_prefix: &amp;#34;{{ loki_working_path }}&amp;#34;&#xA;storage:&#xA;filesystem:&#xA;rules_directory: &amp;#34;{{ loki_working_path }}/rules&amp;#34;&#xA;replication_factor: 1&#xA;ring:&#xA;instance_addr: 127.0.0.1&#xA;kvstore:&#xA;store: inmemory&#xA;loki_ruler:&#xA;rule_path: &amp;#34;{{ loki_working_path }}/rules_tmp&amp;#34;&#xA;ring:&#xA;kvstore:&#xA;store: inmemory&#xA;enable_api: true&#xA;enable_alertmanager_v2: true&#xA;alertmanager_url: http://localhost:9093&#xA;loki_ruler_alerts:&#xA;- name: Logs.sshd&#xA;rules:&#xA;- alert: SshLoginFailed&#xA;expr: |&#xA;count_over_time({job=~&amp;#34;secure&amp;#34;} |=&amp;#34;sshd[&amp;#34; |~&amp;#34;: Failed|: Invalid|: Connection closed by authenticating user&amp;#34; | __error__=&amp;#34;&amp;#34; [15m]) &amp;gt; 6&#xA;for: 0m&#xA;labels:&#xA;severity: critical&#xA;annotations:&#xA;summary: &amp;#34;{% raw %}SSH authentication failure (instance {{ $labels.instance }}).{% endraw %}&amp;#34;&#xA;description: &amp;#34;{% raw %}Increase of SSH authentication failures in last 15 minutes\\n VALUE = {{ $value }}{% endraw %}&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Now that your customized Loki instance is deployed and ready to use, the next step is to send logs to Loki. There are various ways to send logs to Loki, such as using Grafana Alloy or Promtail. All methods are described in &lt;a href=&#34;/docs/loki/latest/send-data/&#34;&gt;this section of the documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Once your logs are in Loki, you can query them using the &lt;a href=&#34;/docs/loki/latest/query/logcli/&#34;&gt;LogCLI utility&lt;/a&gt; or Grafana. However, before you can explore logs from Grafana, you must connect the &amp;ldquo;Loki&amp;rdquo; data source in your Grafana instance. If you&amp;rsquo;re deploying Grafana via Ansible, note that the Grafana Ansible role is included in the same collection. You can configure this data source in your inventory and re-run the Grafana Ansible role.&lt;/p&gt;&#xA;&lt;p&gt;If you&amp;rsquo;re not using the Ansible role, you can simply add the data source as described in the &lt;a href=&#34;/docs/grafana/latest/datasources/#manage-data-sources&#34;&gt;documentation on managing data sources&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Once the data source is set up, simply navigate to your Grafana URL, followed by &amp;ldquo;/explore,&amp;rdquo; and select the &amp;ldquo;Loki&amp;rdquo; data source to start exploring your logs. For more details on how to explore logs in Grafana, check out &lt;a href=&#34;/docs/grafana/latest/explore/logs-integration/&#34;&gt;this section of the documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;One more thing: The role is idempotent, designed to deploy Loki with configurations aligned to your inventory. If you want to clean up and remove the entire deployment, simply use the &lt;code&gt;loki_uninstall&lt;/code&gt; tag. If no tag is specified, the role operates in deployment mode.&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet &#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;bash&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;button x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;Copy code to clipboard&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;Copy&lt;/span&gt;&#xA;&lt;/button&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet &#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible-playbook function_loki-customized.play -t loki_uninstall&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/h2&gt;&#xA;&lt;p&gt;Your Loki instance is now up and running — congrats! — and I assume your logs are being delivered to Loki.&lt;/p&gt;&#xA;&lt;p&gt;To continue learning about Loki, try creating amazing dashboards tailored to your needs. If you need inspiration, check out the &lt;a href=&#34;https://play.grafana.org/dashboards/f/EVO2J4Hnz/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;NGINX logs dashboard&lt;/a&gt; or &lt;a href=&#34;/orgs/voidquark&#34;&gt;my dashboards&lt;/a&gt; like SSH Logs, Promtail Monitoring, SUDO Logs or Nextcloud Logs, which utilize Loki as a data source. You can also explore the &lt;a href=&#34;/docs/loki/latest/configure/&#34;&gt;Loki configuration&lt;/a&gt; and &lt;a href=&#34;https://github.com/grafana/grafana-ansible-collection/tree/main/roles/loki&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Loki role&lt;/a&gt; documentation.&lt;/p&gt;&#xA;&lt;p&gt;I wish you a smooth deployment and lots of enjoyment on your Loki journey! And if managing the Loki stack seems overwhelming, consider &lt;a href=&#34;/products/cloud/&#34;&gt;Grafana Cloud&lt;/a&gt;. With Grafana Cloud, you can enjoy hassle-free log management without the need to manage Loki.&lt;/p&gt;】&lt;p&gt;&lt;em&gt;Michal Vaško 是 cloudWerkstatt 的一名 DevOps 工程师，对开源技术充满热情，并且深爱可观察性。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;虽然运营或平台团队长期以来一直依赖指标的可见性来快速做出反应，但对日志执行相同操作的想法曾经只是一个梦想。值得庆幸的是，&lt;a href=&#34;/oss/loki/&#34;&gt;Grafana Loki&lt;/a&gt; 彻底改变了日志记录堆栈，为您提供与指标相同级别的日志可见性。&lt;/p&gt;&#xA;&lt;p&gt;如果您还没有开始 Loki 之旅，现在是 Loki 3.0 发布的时候了！&lt;/p&gt;&#xA;&lt;p&gt;有多种部署方法可用于各种部署模式：Helm、Tanka、Docker 或 Docker Compose、本地和来自源。有关所有这些方法的更多详细信息，您可以参阅 &lt;a href=&#34;/docs/loki/latest/setup/install/&#34;&gt;Grafana Loki 安装指南&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;所有这些安装方法都很棒，能够满足其目的并为用户提供灵活性，以便您可以以适合您的特定场景的方式部署 Loki。但让我向您介绍另一种方法 - Ansible Loki 角色。此角色支持 Debian、Ubuntu 和 Red Hat。最初从 &lt;a href=&#34;https://github.com/voidquark/loki&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Voidquark 的 Loki 存储库&lt;/a&gt; 迁移到 &lt;a href=&#34;https:// github.com/grafana/grafana-ansible-collection&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Grafana Ansible 集合&lt;/a&gt;，我很高兴能够参与该角色的持续维护和改进。&lt; /p&gt;&#xA;&lt;p&gt;出于可扩展性的原因，Loki 的部署主要集中在 Kubernetes 上。但如果你还没有处于那个阶段怎么办？或者您只是想尝试一下？或者您有一个小型组织，需要部署 Loki 并且您已经熟悉 Ansible？好吧，您来对地方了。让我们深入了解这个 Ansible 角色的设置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-you-need-to-get-started&#34;&gt;您需要什么才能开始&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;确保您部署了 Ansible 控制器。&lt;/li&gt;&#xA;&lt;li&gt;在 Ansible 控制器上安装 Ansible Grafana 集合。&lt;/li&gt;&#xA;&lt;li&gt;熟悉 &lt;a href=&#34;https://github.com/grafana/grafana-ansible-collection/blob/main/roles/loki/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer &#34;&gt;Ansible Loki 角色的自述文件&lt;/a&gt;。&lt;/li&gt;&#xA;&lt;li&gt;创建一个简单的默认剧本或对其进行自定义以满足您的要求。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;我假设您已经设置了 Ansible 并阅读了 Loki 角色自述文件以更加熟悉它。 &lt;br/&gt;&#xA;&lt;br/&gt;&#xA;现在，让我们继续安装 Ansible Grafana 集合：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;bash&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible-galaxy 集合安装 grafana.grafana&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;how-to-use-the-default-deployment&#34;&gt;如何使用默认部署&lt;/h2&gt;&#xA;&lt;p&gt;让我们演示一下使用默认配置的开箱即用部署。&lt;/p&gt;&#xA;&lt;p&gt;首先，创建一个名为 &lt;code&gt;function_loki-default.play&lt;/code&gt; 的 playbook。该剧本非常简单，并使用默认设置部署 Loki。&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name：使用默认配置部署 Loki&#xA;主持人：洛基&#xA;成为：真实&#xA;角色：&#xA;- 角色：grafana.grafana.loki&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;br/&gt;&#xA;接下来，执行此 playbook 来部署 Loki：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;bash&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible-playbook function_loki-default.play&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;br/&gt;&#xA;Loki 的默认部署现已就位，但大多数人会根据自己的需要对其进行调整。让我们继续自定义它。&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-to-customize-your-deployment&#34;&gt;如何自定义部署&lt;/h2&gt;&#xA;&lt;p&gt;如果您想进一步修改怎么办？好吧，你不受限制！您可以完全按照您的意愿配置每个组件。让我们深入研究一个我们将使用的示例：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;文件系统存储&lt;/li&gt;&#xA;&lt;li&gt;带有 Alertmanager 的标尺&lt;/li&gt;&#xA;&lt;li&gt;简单的 SSH 警报规则&lt;/li&gt;&#xA;&lt;li&gt;保留期为四个星期的压实机&lt;/li&gt;&#xA;&lt;li&gt;其他自定义参数&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;让我们为此自定义部署创建一个名为 &lt;code&gt;function_loki-customized.play&lt;/code&gt; 的剧本：&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;yaml&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name：使用本地文件系统部署 Loki&#xA;主持人：洛基&#xA;成为：真实&#xA;角色：&#xA;- 角色：grafana.grafana.loki&#xA;变量：&#xA;洛基查询器：&#xA;最大并发数：16&#xA;引擎：&#xA;最大回看周期：672小时&#xA;loki_存储_配置：&#xA;tsdb_shipper：&#xA;active_index_directory：“{{ loki_working_path }}/tsdb-index”&#xA;缓存位置：“{{ loki_working_path }}/tsdb-cache”&#xA;文件系统：&#xA;目录：“{{ loki_working_path }}/chunks”&#xA;洛基摄取：&#xA;沃尔：&#xA;启用：真&#xA;目录：“{{ loki_working_path }}/wal”&#xA;生命周期者：&#xA;地址：127.0.0.1&#xA;戒指：&#xA;kvstore：&#xA;存储：内存中&#xA;复制因子：1&#xA;最终睡眠：0 秒&#xA;块空闲周期：1小时&#xA;最大块年龄：2小时&#xA;块目标大小：1048576&#xA;query_store_max_look_back_period: 672h&#xA;loki_limits_config：&#xA;按间隔分割查询：0&#xA;拒绝旧样本：true&#xA;拒绝旧样本最大年龄：168小时&#xA;最大查询长度：0&#xA;最大查询系列：50000&#xA;保留期限：672小时&#xA;允许结构化元数据：假&#xA;最大查询回顾：672h&#xA;洛基压缩器：&#xA;工作目录：“{{ loki_working_path }}/compactor”&#xA;压实间隔：10m&#xA;保留启用：真&#xA;保留删除延迟：2小时&#xA;保留删除工作人员计数：150&#xA;删除请求存储：文件系统&#xA;洛基常见：&#xA;路径前缀：“{{ loki_working_path }}”&#xA;贮存：&#xA;文件系统：&#xA;规则目录：“{{ loki_working_path }}/规则”&#xA;复制因子：1&#xA;戒指：&#xA;实例地址：127.0.0.1&#xA;kvstore：&#xA;存储：内存中&#xA;洛基统治者：&#xA;规则路径：“{{ loki_working_path }}/rules_tmp”&#xA;戒指：&#xA;kvstore：&#xA;存储：内存中&#xA;启用_API：真&#xA;启用警报管理器v2：真&#xA;Alertmanager_url：http://localhost:9093&#xA;loki_ruler_alerts：&#xA;- 名称：Logs.sshd&#xA;规则：&#xA;- 警报：SshLoginFailed&#xA;表达式: |&#xA;count_over_time({job=~&#34;secure&#34;} |=&#34;sshd[&#34; |~&#34;: 失败|: 无效|: 通过验证用户身份关闭连接&#34; | __error__=&#34;&#34; [15m]) &gt; 6&#xA;对于：0米&#xA;标签：&#xA;严重程度：严重&#xA;注释：&#xA;摘要：“{% raw %}SSH 身份验证失败（实例 {{ $labels.instance }}）。{% endraw %}”&#xA;描述：“{% raw %}过去 15 分钟内 SSH 身份验证失败次数增加\\n VALUE = {{ $value }}{% endraw %}”&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;现在您的自定义 Loki 实例已部署并可供使用，下一步是将日志发送到 Loki。有多种方法可以将日志发送到 Loki，例如使用 Grafana Alloy 或 Promtail。 &lt;a href=&#34;/docs/loki/latest/send-data/&#34;&gt;文档的这一部分&lt;/a&gt;中描述了所有方法。&lt;/p&gt;&#xA;&lt;p&gt;一旦您的日志位于 Loki 中，您就可以使用 &lt;a href=&#34;/docs/loki/latest/query/logcli/&#34;&gt;LogCLI 实用程序&lt;/a&gt; 或 Grafana 查询它们。但是，在从 Grafana 探索日志之前，您必须连接 Grafana 实例中的“Loki”数据源。如果您通过 Ansible 部署 Grafana，请注意 Grafana Ansible 角色包含在同一集合中。您可以在清单中配置此数据源并重新运行 Grafana Ansible 角色。&lt;/p&gt;&#xA;&lt;p&gt;如果您不使用 Ansible 角色，则只需按照&lt;a href=&#34;/docs/grafana/latest/datasources/#manage-data-sources&#34;&gt;有关管理数据的文档中所述添加数据源即可来源&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;设置数据源后，只需导航到 Grafana URL，然后选择“/explore”，然后选择“Loki”数据源即可开始探索日志。有关如何在 Grafana 中探索日志的更多详细信息，请查看&lt;a href=&#34;/docs/grafana/latest/explore/logs-integration/&#34;&gt;文档的这一部分&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;还有一件事：该角色是幂等的，旨在使用与您的库存一致的配置来部署 Loki。如果您想清理并删除整个部署，只需使用 &lt;code&gt;loki_uninstall&lt;/code&gt; 标记即可。如果不指定标签，则角色在部署模式下运行。&lt;/p&gt;&#xA;&lt;div class=&#34;code-snippet&#34;&gt;&lt;div class=&#34;lang-toolbar&#34;&gt;&#xA;&lt;span class=&#34;lang-toolbar__item&#34;&gt;bash&lt;/span&gt;&#xA;&lt;span class=&#34;code-clipboard&#34;&gt;&#xA;&lt;按钮 x-data=&#34;app_code_snippet()&#34; x-init=&#34;init()&#34; @click=&#34;copy()&#34;&gt;&#xA;&lt;img class=&#34;code-clipboard__icon&#34; src=&#34;/media/images/icons/icon-copy-small-2.svg&#34; alt=&#34;将代码复制到剪贴板&#34; width=&#34;14&#34; height=&#34;13&#34;&gt;&#xA;&lt;span&gt;复制&lt;/span&gt;&#xA;&lt;/按钮&gt;&#xA;&lt;/span&gt;&#xA;&lt;div class=&#34;lang-toolbar__border&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;div class=&#34;code-snippet&#34;&gt;&#xA;&lt;pre data-expanded=&#34;false&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible-playbook function_loki-customized.play -t loki_uninstall&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;whats-next&#34;&gt;下一步是什么？&lt;/h2&gt;&#xA;&lt;p&gt;您的 Loki 实例现已启动并运行 - 恭喜！ - 我假设你的日志正在发送给 Loki。&lt;/p&gt;&#xA;&lt;p&gt;要继续了解 Loki，请尝试根据您的需求创建令人惊叹的仪表板。如果您需要灵感，请查看 &lt;a href=&#34;https://play.grafana.org/dashboards/f/EVO2J4Hnz/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;NGINX 日志仪表板&lt;/a&gt; 或&lt;a href=&#34;/orgs/voidquark&#34;&gt;我的仪表板&lt;/a&gt;，例如 SSH 日志、Promtail 监控、SUDO 日志或 Nextcloud 日志，它们利用 Loki 作为数据源。您还可以探索 &lt;a href=&#34;/docs/loki/latest/configure/&#34;&gt;Loki 配置&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/grafana/grafana-ansible-collection/tree /main/roles/loki&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Loki 角色&lt;/a&gt;文档。&lt;/p&gt;&#xA;&lt;p&gt;祝您部署顺利，Loki 之旅愉快！如果管理 Loki 堆栈似乎令人难以承受，请考虑 &lt;a href=&#34;/products/cloud/&#34;&gt;Grafana Cloud&lt;/a&gt;。借助 Grafana Cloud，您可以享受无忧的日志管理，而无需管理 Loki。&lt;/p&gt;</description>
      <pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>