<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Microsoft for Developers</title>
    <link>https://devblogs.microsoft.com/landingpage/</link>
    <description>Get the latest information, insights, and news from Microsoft.</description>
    <item>
      <title>【Microsoft and LangChain4j: A Partnership for Secure, Enterprise-Grade Java AI Applications】Microsoft和Langchain4J：安全的企业级Java AI应用程序的合作伙伴关系</title>
      <link>https://devblogs.microsoft.com/java/microsoft-and-langchain4j-a-partnership-for-secure-enterprise-grade-java-ai-applications</link>
      <description>【】</description>
      <pubDate>Wed, 16 Jul 2025 14:58:12 +0000</pubDate>
    </item>
    <item>
      <title>【Updates to Warning Suppressions in Microsoft C++ Code Analysis】Microsoft C ++代码分析中警告抑制的更新</title>
      <link>https://devblogs.microsoft.com/cppblog/updates-to-warning-suppressions-in-microsoft-c-code-analysis</link>
      <description>【Microsoft C++ Code Analysis is a powerful static analysis tool integrated into Visual Studio that helps you identify and fix potential issues in your C++ code. Large projects require effective management of analysis warnings to maintain code quality and you sometimes need to suppress warnings, but must do so in a clear and auditable way.】Microsoft C ++代码分析是一种集成到Visual Studio中的功能强大的静态分析工具，可帮助您识别和修复C ++代码中的潜在问题。大型项目需要有效管理分析警告以维持代码质量，有时您需要抑制警告，但必须以清晰可视化的方式进行警告。</description>
      <pubDate>Tue, 15 Jul 2025 18:00:13 +0000</pubDate>
    </item>
    <item>
      <title>【The Fundamental Failure-Mode Theorem: Systems lie about their proper functioning】基本故障模式定理：系统谎称其适当的功能</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20250716-00/?p=111383</link>
      <description>【I have on occasion referred to Le Chatelier&#39;s Principle for complex systems, as presented by John Gall in the book Systemantics: &#34;Every complex system r】我有时会提到约翰·盖尔（John Gall）在《系统主义者》一书中提出的《复杂系统的原理》：“每个复杂系统r r</description>
      <pubDate>Wed, 16 Jul 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Build reliable Go applications: Configuring Azure Cosmos DB Go SDK for real-world scenarios】构建可靠的GO应用程序：为真实情况配置Azure Cosmos DB GO SDK</title>
      <link>https://devblogs.microsoft.com/cosmosdb/build-reliable-go-applications-configuring-azure-cosmos-db-go-sdk-for-real-world-scenarios</link>
      <description>【When building applications that interact with databases, developers frequently encounter scenarios where default SDK configurations don&#39;t align with their specific operational requirements. They need to customize SDK behavior to address real-world challenges like network instability, performance bottlenecks, debugging complexity, monitoring re】当构建与数据库互动的应用程序时，开发人员经常遇到默认SDK配置与其特定操作要求不符的方案。他们需要自定义SDK行为，以应对现实世界中的挑战，例如网络不稳定性，性能瓶颈，调试复杂性，监视RE</description>
      <pubDate>Thu, 17 Jul 2025 16:50:15 +0000</pubDate>
    </item>
    <item>
      <title>【Command GitHub&#39;s Coding Agent from VS Code】命令GitHub的编码代理来自VS代码</title>
      <link>https://devblogs.microsoft.com/vscode-blog/command-github&#39;s-coding-agent-from-vs-code</link>
      <description>【VS Code&#39;s integration with GitHub Copilot Coding Agent allows you to delegate tasks to the agent and let it handle them in the background. Read the full article】VS代码与GitHub Copilot编码代理的集成使您可以将任务委托给代理，并让其在后台处理它们。阅读全文</description>
      <pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【10 Microsoft MCP Servers to Accelerate Your Development Workflow】10 Microsoft MCP服务器加速您的开发工作流程</title>
      <link>https://devblogs.microsoft.com//10-microsoft-mcp-servers-to-accelerate-your-development-workflow</link>
      <description>【We&#39;ve been talking a lot about the Model Context Protocol (MCP) lately, including recent blog posts and sessions at Microsoft Build. In this post, I&#39;d like to share some top tips for how you can use MCP servers we&#39;ve been building to improve yo】最近，我们一直在谈论模型上下文协议（MCP），包括Microsoft Build的最新博客文章和会议。在这篇文章中，我想分享一些您如何使用我们一直在建造的MCP服务器来改善您的主要技巧</description>
      <pubDate>Wed, 16 Jul 2025 19:30:32 +0000</pubDate>
    </item>
    <item>
      <title>【Bring your own agents into Microsoft 365 Copilot】将自己的代理商带入Microsoft 365 Copilot</title>
      <link>https://devblogs.microsoft.com/microsoft365dev/bring-your-own-agents-into-microsoft-365-copilot</link>
      <description>【Custom Engine Agents now generally available—build and integrate your own AI into the flow of work Microsoft 365 Copilot is redefining how people interact with AI—embedding it directly into the flow of work as the intuitive, natural interface for agents: the ‘UI for AI’ As Copilot becomes the interface for】自定义发动机代理现在通常可用 - 建立并将自己的AI集成到Microsoft 365 Copilot的工作流程中，正在重新定义人们与AI的互动方式 - 将其直接插入工作流中，作为代理的直观，自然界面：“ ui for AI”作为副cop的copilot成为copilot的界面。</description>
      <pubDate>Wed, 16 Jul 2025 16:06:08 +0000</pubDate>
    </item>
    <item>
      <title>【If the Window Runtime PropertyValue is for boxing non-inspectables, why is there a PropertyValue.CreateInspectable?】如果窗口运行时属性值用于拳击非检查物，为什么有属性值。</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20250717-00/?p=111388</link>
      <description>【The Windows Runtime provides a class named Property­Value which is a helper class for boxing non-inspectables. &#34;Boxing&#34; means taking a value type and wrapping inside an object so it can be used as an object type, and in the Windows Runtime, &#34;objects&#34; are represented by the IInspectable interface. There are】Windows Runtime提供了一个名为PropertyValue的类，该类是用于拳击非观察物的助手类。 “拳击”是指在对象中使用值类型并包裹在对象中，因此可以用作对象类型，在Windows运行时，“对象”由Iinspoctable接口表示。有</description>
      <pubDate>Thu, 17 Jul 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Power Platform API and SDKs: From UX-First to API-First】电源平台API和SDK：从UX-First到API-First</title>
      <link>https://devblogs.microsoft.com/powerplatform/power-platform-api-and-sdks-from-ux-first-to-api-first</link>
      <description>【Historically, Power Platform has empowered administrators through the Power Platform Admin Center (PPAC). This UX-first experience offered a seamless, intuitive interface for managing environments, automating everyday tasks, and discovering new capabilities within the platform. Today, we’re taking a bold step forward. We’re tran】从历史上看，Power Platform通过Power Platform Admin Center（PPAC）授权管理员。这种UX优先的体验提供了一个无缝，直观的界面，用于管理环境，自动化日常任务以及在平台内发现新功能。今天，我们迈出了大胆的一步。我们是Tran</description>
      <pubDate>Tue, 15 Jul 2025 17:38:05 +0000</pubDate>
    </item>
    <item>
      <title>【Building Your First MCP Server with .NET and Publishing to NuGet】使用.NET构建您的第一台MCP服务器并发布到Nuget</title>
      <link>https://devblogs.microsoft.com/dotnet/mcp-server-dotnet-nuget-quickstart</link>
      <description>【Want to extend AI assistants with custom capabilities? In this post, we&#39;ll show you how to build a Model Context Protocol (MCP) server using .NET 10 and publish it to NuGet — making your AI tools discoverable and reusable by the entire .NET community. We&#39;ll also show you some new features we&#39;ve added to .NET 10 and NuGet to support this, and】是否想通过自定义功能扩展AI助手？在这篇文章中，我们将向您展示如何使用.NET 10构建模型上下文协议（MCP）服务器并将其发布给Nuget，这使您的AI工具可在整个.NET社区中发现和重复使用。我们还将向您展示一些我们添加到.NET 10和Nuget的新功能以支持此功能，并且</description>
      <pubDate>Tue, 15 Jul 2025 20:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>