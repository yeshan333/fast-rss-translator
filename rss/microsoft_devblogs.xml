<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Microsoft for Developers</title>
    <link>https://devblogs.microsoft.com/landingpage/</link>
    <description>Get the latest information, insights, and news from Microsoft.</description>
    <item>
      <title>【Go 1.25.2-1 and 1.24.8-1 Microsoft builds now available】Go 1.25.2-1 和 1.24.8-1 Microsoft 版本现已推出</title>
      <link>https://devblogs.microsoft.com/go/go-1-25-2-1-and-1-24-8-1-microsoft-builds-now-available</link>
      <description>【A new release of the Microsoft build of Go including security fixes is now available for download. For more information about this release and the changes included, see the table below: Microsoft Release Upstream Tag】包含安全修复程序的 Microsoft Go 版本新版本现已可供下载。有关此版本及其所包含更改的更多信息，请参阅下表： Microsoft 版本上游标签</description>
      <pubDate>Fri, 10 Oct 2025 01:20:51 +0000</pubDate>
    </item>
    <item>
      <title>【Complete Beginner&#39;s Guide to Vibe Coding an App in 5 Minutes】5 分钟内完成 Vibe 应用程序编码初学者指南</title>
      <link>https://devblogs.microsoft.com/blog/complete-beginners-guide-to-vibe-coding-an-app-in-5-minutes</link>
      <description>【Picture this: I&#39;m staring at a CSV file containing metrics from 492 episodes of my podcast, Merge Conflict. Years of data—listen counts, retention rates, performance metrics—all sitting there, waiting to tell a story. But I&#39;m not in the mood to spend days building dashboards and wrangling data.】想象一下：我正盯着一个 CSV 文件，其中包含我的播客“合并冲突”的 492 集的指标。多年的数据——收听次数、保留率、绩效指标——全部都放在那里，等待讲述一个故事。但我没有心情花几天时间构建仪表板和整理数据。</description>
      <pubDate>Thu, 09 Oct 2025 18:00:49 +0000</pubDate>
    </item>
    <item>
      <title>【September 2025 (version 1.105)】2025 年 9 月（版本 1.105）</title>
      <link>https://devblogs.microsoft.com/vscode-blog/september-2025-(version-1.105)</link>
      <description>【Learn what is new in the Visual Studio Code September 2025 Release (1.105). Read the full article】了解 Visual Studio Code 2025 年 9 月版本 (1.105) 中的新增功能。阅读全文</description>
      <pubDate>Thu, 09 Oct 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【September 2025 (version 1.105)】2025 年 9 月（版本 1.105）</title>
      <link>https://devblogs.microsoft.com/external-blogs/september-2025-version-1-105</link>
      <description>【Learn what is new in the Visual Studio Code September 2025 Release (1.105). Read the full article】了解 Visual Studio Code 2025 年 9 月版本 (1.105) 中的新增功能。阅读全文</description>
      <pubDate>Thu, 09 Oct 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The self-assignment principle for Windows Runtime properties applies to default values】Windows 运行时属性的自分配原则适用于默认值</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20251009-00/?p=111664</link>
      <description>【Last time, I introduced the self-assignment principle for Windows Runtime properties: Setting a property to its current value is legal and】上次，我介绍了 Windows 运行时属性的自分配原则：将属性设置为其当前值是合法的，并且</description>
      <pubDate>Thu, 09 Oct 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Working with Git Submodules: Managing Dependencies Across Repositories】使用 Git 子模块：管理跨存储库的依赖关系</title>
      <link>https://devblogs.microsoft.com/ise/git-submodules-and-dependencies</link>
      <description>【In complex software projects, it’s common to split functionality across multiple repositories. One common scenario arises when your main project depends on outputs or components developed in another repository that&#39;s also evolving in parallel. Managing this dependency effectively—especially when only a specific part of the secondary reposi】在复杂的软件项目中，将功能划分到多个存储库是很常见的。当您的主项目依赖于另一个并行发展的存储库中开发的输出或组件时，就会出现一种常见情况。有效管理这种依赖关系——尤其是当只有辅助存储库的特定部分时</description>
      <pubDate>Thu, 09 Oct 2025 07:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Preparing for the .NET 10 GC (DATAS)】准备 .NET 10 GC（数据）</title>
      <link>https://devblogs.microsoft.com/dotnet/preparing-for-dotnet-10-gc</link>
      <description>【This article is cross-posted from Maoni&#39;s blog post original Medium article Preparing for the .NET 10 GC by permission. Preparing for the .NET 10 GC In .NET 9 we enabled DATAS by default. But .NET 9 is not an LTS relea】本文经许可交叉发布自 Maoni 的博文原创 Medium 文章《Preparing for the .NET 10 GC》。准备 .NET 10 GC 在 .NET 9 中，我们默认启用 DATAS。但 .NET 9 不是 LTS 版本</description>
      <pubDate>Wed, 08 Oct 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Windows Runtime API design principles around read-write properties: Idempotence and self-assignment】围绕读写属性的 Windows 运行时 API 设计原则：幂等性和自分配</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20251008-00/?p=111660</link>
      <description>【Objects in the Windows Runtime can have properties, and those properties could be read-only or read-write. For read-write properties, there are a few general principles. Today we&#39;re going to look at this one: Setting a property to its current value is legal and has no effect.¹ For example: // C# o】Windows 运行时中的对象可以具有属性，并且这些属性可以是只读的或读写的。对于读写属性，有一些一般原则。今天我们来看看这个：将属性设置为其当前值是合法的，并且没有任何效果。 1 例如： // C# o</description>
      <pubDate>Wed, 08 Oct 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Semantic Kernel and Microsoft Agent Framework】语义内核和 Microsoft Agent 框架</title>
      <link>https://devblogs.microsoft.com/semantic-kernel/semantic-kernel-and-microsoft-agent-framework</link>
      <description>【Last week we announced Microsoft Agent Framework, you can find all the details: In the blog post here: Introduci】上周我们发布了 Microsoft Agent Framework，您可以找到所有详细信息：在博客文章中：Introduci</description>
      <pubDate>Wed, 08 Oct 2025 06:51:06 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing a new OData.NET serializer】宣布推出新的 OData.NET 序列化器</title>
      <link>https://devblogs.microsoft.com/odata/announcing-a-new-odata-net-serializer</link>
      <description>【One of the major, recurring complaints of the OData.NET libraries is the performance overhead of the serialization stack. We have done a lot of work to improve the serialization performance, but the existing architecture limits how far we can go. For this reason, we have started work on a new serialization stack for OData.NET libraries that ad】OData.NET 库反复出现的主要抱怨之一是序列化堆栈的性能开销。我们做了很多工作来提高序列化性能，但现有的架构限制了我们能走多远。出于这个原因，我们已经开始为 OData.NET 库开发一个新的序列化堆栈，该堆栈</description>
      <pubDate>Wed, 08 Oct 2025 06:28:10 +0000</pubDate>
    </item>
  </channel>
</rss>