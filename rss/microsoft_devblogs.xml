<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Microsoft for Developers</title>
    <link>https://devblogs.microsoft.com/landingpage/</link>
    <description>Get the latest information, insights, and news from Microsoft.</description>
    <item>
      <title>【Announcing Full Cross-Platform Support for the mssql-python Driver】宣布对MSSQL-Python驱动程序的全面跨平台支持</title>
      <link>https://devblogs.microsoft.com/python/announcing-full-cross-platform-support-for-the-mssql-python-driver</link>
      <description>【】</description>
      <pubDate>Mon, 14 Jul 2025 11:41:51 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing Cosmos DB in Microsoft Fabric (Preview) with New Capabilities!】在Microsoft Fabric（预览）中宣布具有新功能的Cosmos DB！</title>
      <link>https://devblogs.microsoft.com/cosmosdb/announcing-cosmos-db-in-microsoft-fabric-preview-with-new-capabilities</link>
      <description>【We’re excited to unveil the open Public Preview of Cosmos DB in Microsoft Fabric, now available to all users! Since our initial announcement at Microsoft Build 2025, we’ve introduced an array of powerful new features to enhance your data workflows.】我们很高兴揭开Microsoft Fabric中Cosmos DB的公开预览，现在可供所有用户使用！自从我们在Microsoft Build 2025的最初公告以来，我们引入了一系列强大的新功能，以增强您的数据工作流程。</description>
      <pubDate>Mon, 14 Jul 2025 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Building Event-Driven Go applications with Azure Cosmos DB and Azure Functions】使用Azure Cosmos DB和Azure功能建立事件驱动的GO应用程序</title>
      <link>https://devblogs.microsoft.com/cosmosdb/building-event-driven-go-applications-with-azure-cosmos-db-and-azure-functions</link>
      <description>【The Go programming language is a great fit for building serverless applications. Go applications can be easily compiled to a single, statically linked binary, making deployment simple and reducing external dependencies. They start up quickly, which is ideal for serverless】GO编程语言非常适合构建无服务器应用程序。 GO应用程序可以轻松地编译到单个静态链接的二进制文件中，从而使部署简单而减少了外部依赖关系。它们快速启动，这是无服务器的理想选择</description>
      <pubDate>Fri, 11 Jul 2025 17:30:15 +0000</pubDate>
    </item>
    <item>
      <title>【Enhancing Code Quality at Scale with AI-Powered Code Reviews】通过AI驱动的代码评论提高代码质量</title>
      <link>https://devblogs.microsoft.com/engineering-at-microsoft/enhancing-code-quality-at-scale-with-ai-powered-code-reviews</link>
      <description>【At Microsoft, we are constantly looking for ways to improve developer productivity and code quality. One of our most impactful innovations in this space is AI-powered code review assistant — an AI tool that augments pull request (PR) reviews. This AI Assistant started as an internal experiment and now has scaled to suppor】在微软，我们一直在寻找提高开发人员生产率和代码质量的方法。我们在该领域最有影响力的创新之一是AI驱动的代码审查助理 - 一种AI工具，可增强拉力请求（PR）评论。这位AI助手最初是作为内部实验，现在已经扩大了</description>
      <pubDate>Mon, 14 Jul 2025 15:21:05 +0000</pubDate>
    </item>
    <item>
      <title>【Supercharge your EWS migration with AI and GitHub Copilot】用AI和GitHub Copilot增强EWS迁移</title>
      <link>https://devblogs.microsoft.com/microsoft365dev/supercharge-your-ews-migration-with-ai-and-github-copilot</link>
      <description>【Are you running apps on Exchange Web Services (EWS)? With EWS support ending in October 2026, this is the perfect time to modernize. We’re excited to announce a new hands-on tutorial that helps you accelerate migrations from EWS to Microsoft Graph, using AI tools you already have access to. This tutorial】您是否在Exchange Web Services（EWS）上运行应用程序？随着EWS的支持在2026年10月结束，这是现代化的理想时机。我们很高兴宣布一个新的动手教程，该教程可帮助您使用已经可以访问的AI工具加速从EWS到Microsoft Graph的迁移。本教程</description>
      <pubDate>Mon, 14 Jul 2025 17:53:45 +0000</pubDate>
    </item>
    <item>
      <title>【Detecting and reporting all unhandled C++ exceptions as well as all unhandled structured exceptions】检测和报告所有未手持的C ++异常以及所有未经处理的结构化异常</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20250711-00/?p=111368</link>
      <description>【Last time, attempted to intercept the ways that a C++ program could exit due to an unhandled exception by installing a custom unhandled str】上次，试图通过安装自定义的未手动str，试图拦截C ++程序可以退出的方式</description>
      <pubDate>Fri, 11 Jul 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【PIX 2507.11 - misc bug fixes + improvements】PIX 2507.11- MISC错误修复 +改进</title>
      <link>https://devblogs.microsoft.com/pix/pix-2507-11</link>
      <description>【Today we released PIX version 2507.11, which can be downloaded here. This release includes everything in the previous 2505.30 release, plus the following bug fixes: GPU Captures (capture time】今天，我们发布了PIX版本2507.11，可以在此处下载。此版本包括上一版中的所有内容，以及以下错误修复：GPU捕获（捕获时间</description>
      <pubDate>Fri, 11 Jul 2025 19:56:20 +0000</pubDate>
    </item>
    <item>
      <title>【There is a &lt;CODE&gt;std::&lt;WBR&gt;chrono::&lt;WBR&gt;high_&lt;WBR&gt;resolution_&lt;WBR&gt;clock&lt;/CODE&gt;, but no &lt;CODE&gt;low_&lt;WBR&gt;resolution_&lt;WBR&gt;clock&lt;/CODE&gt;】有一个&lt;code&gt; std :: &lt;wbr&gt; chrono :: &lt;wbr&gt; high_ &lt;wbr&gt; stolution_ &lt;wbr&gt;时钟&lt;/code&gt;，但没有&lt;code&gt; low_ &lt;wbr&gt; stolution_ &lt;wbr&gt; colkect &lt;/code&gt; clock &lt;/code&gt;</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20250714-00/?p=111375</link>
      <description>【The C++ standard provides a std::chrono::high_resolution_clock which provides the implementation&#39;s clock with the smallest tick period. This gives you the best resolution available to the implementation. But what if you don&#39;t need the best resolution available to the implementation? For examp】C ++标准提供了一个std :: Chrono :: High_resolution_clock，该clock为实现时钟提供了最小的刻度周期。这为您提供了实施的最佳分辨率。但是，如果您不需要实施的最佳分辨率怎么办？对于Examp</description>
      <pubDate>Mon, 14 Jul 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Python in Visual Studio Code - July 2025 Release】Visual Studio代码中的Python- 2025年7月发布</title>
      <link>https://devblogs.microsoft.com/python/python-in-visual-studio-code-july-2025-release</link>
      <description>【We&#39;re excited to announce the July 2025 release of the Python, Pylance and Jupyter ext】我们很高兴宣布2025年7月发布Python，Pylance和Jupyter Ext</description>
      <pubDate>Fri, 11 Jul 2025 14:50:13 +0000</pubDate>
    </item>
    <item>
      <title>【Customize AI responses from GitHub Copilot】从GitHub Copilot自定义AI响应</title>
      <link>https://devblogs.microsoft.com/dotnet/customize-ai-responses-from-github-copilot</link>
      <description>【GitHub Copilot along with its various models are capable of some amazing things. When in Agent mode the AI can create parts of or even entire applications from your written (or spoken!) instructions. You can just feel the vibes (coding), can&#39;t you? [alert type=&#34;note&#34; heading=&#34;Note&#34;]GitHub Copilot Agent mode is more than code completi】Github Copilot及其各种模型都能做出一些惊人的事情。在代理模式下，AI可以通过您的书面（或口语！）说明创建或什至全部应用程序的一部分。您可以感觉到共鸣（编码），不是吗？ [警报类型=“ note” heading =“ note”] github副代理模式不仅仅是代码完成</description>
      <pubDate>Thu, 10 Jul 2025 17:15:00 +0000</pubDate>
    </item>
  </channel>
</rss>