<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Microsoft for Developers</title>
    <link>https://devblogs.microsoft.com/landingpage/</link>
    <description>Empowering every developer with trusted Microsoft insights</description>
    <item>
      <title>【New restrictions on package loading】包装加载的新限制</title>
      <link>https://devblogs.microsoft.com/visualstudio/new-restrictions-on-package-loading</link>
      <description>【As Visual Studio transitions its core packages and services to an async loading/retrieval model, we&amp;#8217;ve identified bugs in both the initial async implementation and the existing synchronous package loading mechanism. While most of these bug fixes have been transparent to extenders, one requires attention due to changed constraints. This post highlights that change. Note that [&amp;hellip;]】当Visual Studio将其核心软件包和服务转换为异步加载/检索模型时，我们在初始异步实现和现有同步软件包加载机制中都确定了错误。尽管这些错误修复中的大多数对扩展器都是透明的，但由于限制的变化而需要注意。这篇文章突出显示了这种变化。注意 […]</description>
      <pubDate>Thu, 13 Feb 2025 22:45:37 +0000</pubDate>
    </item>
    <item>
      <title>【.NET 9 网络优化】.NET 9 网络优化</title>
      <link>https://devblogs.microsoft.com/dotnet-ch/net-9-%e7%bd%91%e7%bb%9c%e4%bc%98%e5%8c%96</link>
      <description>【本文翻译自 Máňa, Natalia 和 Anton 创作的 .NET 9 Networking Improvements 秉承我们的传统，我们很高兴与您分享这篇博客文章，以介绍新的 .NET 版本中网络领域相关的最新动态和最有趣的变化。今年，我们带来了 HTTP 领域的改变、新的 HttpClientFactory API、.NET Framework 兼容性优化等更多内容。  HTTP 在接下来的部分中，我们将介绍 HTTP 领域最具影响力的变化。其中包括连接池的性能优化、对多个HTTP/3连接的支持、Windows代理的自动更新，以及重要的社区贡献。  连接池 在此版本中，我们对HTTP连接池进行了两项显著的性能优化。  我们增加了对多个HTTP/3连接的可选支持。根据RFC 9114标准文档，由于连接可以多路复用并行请求，因此不鼓励使用多个HTTP/3连接到对等端。然而，在某些场景下，例如服务器到服务器的通信，即使请求多路复用，单一连接也可能成为瓶颈。我们在 HTTP/2 中看到了这样的限制（dotnet/runtime#35088），它同样具有在单一连接上多路复用的概念。出于同样的原因（dotnet/runtime#51775），我们决定为HTTP/3实现多连接支持（dotnet/runtime#101535）。  该实现本身尽可能贴近 HTTP/2 多连接机制的行为。当前，它的策略是优先填充已有连接，直到达到对端允许的请求上限后，才会创建新的连接。不过，需要注意的是，这是一个具体的实现细节，该行为在未来可能会有所变化。  结果是，我们的基准测试显示每秒请求数（RPS）有显著提升，以下是10,000个并行请求的对比结果：  客户端  单 HTTP/3 连接  多 HTTP/3 连接  最大CPU使用率(%)  35  92  最大核心使用率(%)  971  2572  最大工作集(MB)  3810  6491  最大私有内存(MB)  4415  7228  处理器数量  28  28  [&amp;hellip;]】本文翻译自Máňa, Natalia 和Anton 创作的.NET 9 Networking Improvements 秉承我们的传统，我们很高兴与您分享这篇博客文章，以介绍新的.NET 版本中网络领域相关的最新动态和最有趣的变化。今年，我们带来了 HTTP 领域的改变、新的 HttpClientFactory API、.NET Framework 兼容性优化等更多内容。  HTTP 在接下来的部分中，我们将介绍 HTTP 领域最具影响力的变化。其中包括连接池的性能优化、对多个HTTP/3连接的支持、Windows代理的自动更新，以及重要的社区贡献。  连接池 在此版本中，我们对HTTP连接池进行了两项显着的性能优化。  我们增加了对多个HTTP/3连接的可选支持。根据RFC 9114标准文档，由于连接可以多路复用并行请求，因此不鼓励使用多个HTTP/3连接到对等端。然而，在某些场景下，例如服务器到服务器的通信，即使请求多路复用，单一连接也可能成为瓶颈。我们在 HTTP/2 中看到了这样的限制（dotnet/runtime#35088），它同样具有在单一连接上多路复用的概念。出于同样的原因（dotnet/runtime#51775），我们决定为HTTP/3实现多连接支持（dotnet/runtime#101535）。  该实现本身尽可能贴近 HTTP/2 多连接机制的行为。当前，它的策略是优先填充已有连接，直到达到对端允许的请求上限后，才会创建新的连接。不过，需要注意的是，这是一个具体的实现细节，该行为在未来可能会有所变化。结果是，我们的基准测试显示每秒请求数（RPS）有显着提升，以下是10,000个并行请求的对比结果：  客户端  单HTTP/3 连接  多HTTP/3 连接  最大CPU使用率(%)  35  92最大核心使用率(%)  971  2572  最大工作集(MB)  3810  6491  最大私有内存(MB)  4415  7228  处理器数量  28  28  […]</description>
      <pubDate>Fri, 14 Feb 2025 10:59:19 +0000</pubDate>
    </item>
    <item>
      <title>【New Features for Enhanced Razor Productivity!】提高剃须刀生产力的新功能！</title>
      <link>https://devblogs.microsoft.com/dotnet/enhancing-razor-productivity-with-new-features</link>
      <description>【The Extract to Component refactoring and the Roslyn tokenizer are two new features designed to help improve your productivity in Razor files.】摘录到组件重构和罗斯林令牌是两个新功能，旨在帮助提高剃须刀文件中的生产率。</description>
      <pubDate>Thu, 13 Feb 2025 18:05:00 +0000</pubDate>
    </item>
    <item>
      <title>【Investigating an argument-dependent lookup issue and working around it】调查依赖争论的查找问题并解决该问题</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20250214-00/?p=110868</link>
      <description>【Picking apart the language specification.】分开语言规范。</description>
      <pubDate>Fri, 14 Feb 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing TypeScript 5.8 RC】宣布打字稿5.8 RC</title>
      <link>https://devblogs.microsoft.com/typescript/announcing-typescript-5-8-rc</link>
      <description>【Today we are excited to announce the Release Candidate (RC) of TypeScript 5.8! To get started using the Release Candidate, you can get it through npm with the following command: npm install -D typescript@rc Let&amp;#8217;s take a look at what&amp;#8217;s new in TypeScript 5.8! What&amp;#8217;s New Since the Beta? Since our beta release, we have [&amp;hellip;]】今天，我们很高兴宣布打字稿5.8的发行候选人（RC）！要开始使用Release Cantix，您可以通过以下命令通过NPM获取它：NPM Install -D Typescript@RC让我们看看Typescript 5.8中的新功能！自Beta以来，有什么新功能？自Beta版本以来，我们有[…]</description>
      <pubDate>Thu, 13 Feb 2025 22:27:05 +0000</pubDate>
    </item>
    <item>
      <title>【A sample implementation of the weak reference pattern for COM callbacks】COM回调的弱参考模式的示例实现</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20250213-00/?p=110865</link>
      <description>【A forwarder through a weak reference.】通过薄弱的参考来转货。</description>
      <pubDate>Thu, 13 Feb 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Database and AI: solutions for keeping embeddings updated】数据库和AI：用于保持嵌入式更新的解决方案</title>
      <link>https://devblogs.microsoft.com/azure-sql/database-and-ai-solutions-for-keeping-embeddings-updated</link>
      <description>【In the previous article of this series, it was discussed how embeddings can be quickly created from data already in Azure SQL. This is a useful starting point, but since data in a database changes frequently, a common question arises: “How can the vectors be kept updated whenever there is a change to the content [&amp;hellip;]】在本系列的上一篇文章中，讨论了如何从Azure SQL中的数据快速创建嵌入。这是一个有用的起点，但是由于数据库中的数据经常更改，因此出现一个常见的问题：“只要内容更改，如何将向量保持更新[…]</description>
      <pubDate>Thu, 13 Feb 2025 17:34:15 +0000</pubDate>
    </item>
    <item>
      <title>【Go 1.24.0-1 Microsoft build now available】现在可用1.24.0-1 Microsoft构建</title>
      <link>https://devblogs.microsoft.com/go/go-1-24-0-1-microsoft-build-now-available</link>
      <description>【A new release of the Microsoft build of Go is now available for download.】现在可以下载Microsoft构建的新版本。</description>
      <pubDate>Thu, 13 Feb 2025 09:59:05 +0000</pubDate>
    </item>
    <item>
      <title>【Unlock Generative AI for Enterprise Scalability】解锁企业可伸缩性的生成AI</title>
      <link>https://devblogs.microsoft.com/ise/scaling-genai-projects</link>
      <description>【Reusable templates, pipelines, and tools to streamline the setup of GenAI projects, saving time and effort, and ensuring consistency and reliability across projects.】可重复使用的模板，管道和工具，用于简化Genai项目的设置，节省时间和精力，并确保整个项目的一致性和可靠性。</description>
      <pubDate>Thu, 13 Feb 2025 08:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【GitHub Copilot for Xcode Chat – Public Preview Now Available】用于Xcode Chat的GitHub Copilot  - 现在可用的公共预览</title>
      <link>https://devblogs.microsoft.com/xcode/github-copilot-for-xcode-chat-public-preview-now-available</link>
      <description>【We’re excited to announce that GitHub Copilot for Xcode Chat is now in public preview, bringing the power of AI to help developers code more efficiently. With just a GitHub account, you can enable Copilot in Xcode and start leveraging AI-driven suggestions and interactive chat features today. GitHub Copilot is an AI-powered assistant that helps [&amp;hellip;]】我们很高兴地宣布，Xcode Chat的GitHub Copilot现在正在公开预览中，这使AI的力量更有效地帮助开发人员进行编码。只需使用一个GitHub帐户，您就可以在Xcode中启用Copilot，并开始利用AI驱动的建议和交互式聊天功能。 GitHub Copilot是一位AI驱动的助手，可以帮助[…]</description>
      <pubDate>Fri, 14 Feb 2025 06:24:30 +0000</pubDate>
    </item>
  </channel>
</rss>