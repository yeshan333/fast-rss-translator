<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Microsoft for Developers</title>
    <link>https://devblogs.microsoft.com/landingpage/</link>
    <description>Get the latest information, insights, and news from Microsoft.</description>
    <item>
      <title>【What happens if C++/WinRT is unable to resume execution on a dispatcher thread?】如果C ++/WinRT无法在调度程序线程上恢复执行情况会怎样？</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20250721-00/?p=111396</link>
      <description>【The C++/WinRT library provides the winrt::resume_foreground() function for resuming a coroutine on the foreground thread of a dispatcher. It supports three types of dispatchers: Windows.UI.Core.CoreDispatcher, Windows.System.DispatcherQueue, Micros】C ++/WinRT库提供了WinRT :: insume_foreground（）函数，用于在调度程序的前景线上恢复coroutine。它支持三种类型的调度程序：windows.ui.core.coredispatcher，windows.system.dispatcherqueue，micros</description>
      <pubDate>Mon, 21 Jul 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Being more adamant about reporting that C++/WinRT was unable to resume execution on a dispatcher thread】更坚决地报告C ++/Winrt无法在调度程序线程上恢复执行</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20250722-00/?p=111400</link>
      <description>【Last time, we saw what happens if C++/WinRT is unable to resume execution on a dispatcher thread: If you use winrt::resume_foreground with a】上次，我们看到了如果C ++/Winrt无法在调度程序线程上恢复执行会发生什么：如果您使用Winrt :: insume_foreground，则</description>
      <pubDate>Tue, 22 Jul 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Fresh Learning Paths Now Available on Pluralsight for VS Subscribers】现在可在PluralSight上为vs订户提供新的学习路径</title>
      <link>https://devblogs.microsoft.com/visualstudio/vss-pluralsight-2025-2</link>
      <description>【We’ve been thrilled to see so many of you jump back into your Pluralsight benefit after our April 3rd announcement about extended access. Your enthusiasm for learning and leveling up with Visual Studio inspires us every day. If you】在我们4月3日关于扩展访问的公告之后，我们很高兴看到很多人重新回到您的多元化福利。您对学习和与Visual Studio升级的热情每天都会激发我们的启发。如果你</description>
      <pubDate>Tue, 22 Jul 2025 14:00:40 +0000</pubDate>
    </item>
    <item>
      <title>【MCP C# SDK Gets Major Update: Support for Protocol Version 2025-06-18】MCP C＃SDK获得重大更新：支持协议版本2025-06-18</title>
      <link>https://devblogs.microsoft.com/dotnet/mcp-csharp-sdk-2025-06-18-update</link>
      <description>【The Model Context Protocol (MCP) continues to evolve, and we&#39;re excited to announce that the MCP C# SDK now supports the latest specification version 2025-06-18. This update brings significant new capabilities to .NET developers building AI applications, including an imp】模型上下文协议（MCP）继续发展，我们很高兴宣布MCP C＃SDK现在支持最新的规范版本2025-06-18。此更新为.NET开发人员构建AI应用程序带来了重要的新功能，包括IMP</description>
      <pubDate>Tue, 22 Jul 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Integration testing for Go applications using Testcontainers and containerized databases】使用TestContainers和容器化数据库为GO应用程序进行集成测试</title>
      <link>https://devblogs.microsoft.com/cosmosdb/integration-testing-for-go-applications-using-testcontainers-and-containerized-databases</link>
      <description>【Integration testing has always presented a fundamental challenge: how do you test your application against real dependencies without the complexity of managing external services? Traditional approaches often involve either mocking dependencies (which can miss integration issues) or maintaining separate test environments (which can be expensive】集成测试始终提出了一个基本挑战：您如何在不管理外部服务的复杂性的情况下测试针对真实依赖的应用程序？传统方法通常涉及嘲笑依赖项（可能会错过集成问题）或保持单独的测试环境（这可能很昂贵）</description>
      <pubDate>Mon, 21 Jul 2025 15:55:28 +0000</pubDate>
    </item>
    <item>
      <title>【Build Smarter with the Microsoft 365 Agents Toolkit MCP Server】使用Microsoft 365代理工具包MCP服务器构建更聪明的人</title>
      <link>https://devblogs.microsoft.com/microsoft365dev/build-smarter-with-the-microsoft-365-agents-toolkit-mcp-server</link>
      <description>【As AI agents become central to how we build and interact with modern productivity apps, developers need tools that are flexible, standard-based, and deeply integrated with AI. That’s where the Microsoft 365 Agents Toolkit MCP Server】随着AI代理人成为我们如何与现代生产力应用程序构建和互动的核心，开发人员需要灵活，基于标准并与AI深入集成的工具。这就是Themicrosoft 365代理工具包MCP服务器的地方</description>
      <pubDate>Mon, 21 Jul 2025 17:00:56 +0000</pubDate>
    </item>
    <item>
      <title>【Java OpenJDK July 2025 Patch &amp; Security Update】Java OpenJDK 2025年7月补丁和安全更新</title>
      <link>https://devblogs.microsoft.com/java/java-openjdk-july-2025-patch-security-update</link>
      <description>【Hello Java customers! We are happy to announce the latest July 2025 patch &amp;amp; security update release for the Microsoft Build of OpenJDK. Download and install the binaries today. OpenJDK 21.0.8 OpenJDK 17.0.16 OpenJDK 11.0.28 Check our】您好Java客户！我们很高兴宣布2025年7月的最新补丁程序和安全更新版本，用于OpenJDK的Microsoft Build。立即下载并安装二进制文件。 OpenJDK 21.0.8 OpenJDK 17.0.16 OpenJDK 11.0.28检查我们</description>
      <pubDate>Mon, 21 Jul 2025 22:07:07 +0000</pubDate>
    </item>
    <item>
      <title>【Visual Studio Code CMake Tools Extension 1.21 Release: Multi-root improvements, CMake Presets v10, and more…】Visual Studio代码CMAKE工具扩展1.21版本：多根改进，CMAKE PRESTES V10等等…</title>
      <link>https://devblogs.microsoft.com/cppblog/visual-studio-code-cmake-tools-extension-1-21-release-multi-root-improvements-cmake-presets-v10-and-more</link>
      <description>【We’re excited to announce the latest 1.21 release of the CMake Tools extension for Visual Studio Code. This update brings a host of new updates, including addressing one of our top-voted issues for multi-root improvements and adding】我们很高兴宣布最新的1.21版本的CMAKE工具扩展名用于Visual Studio Code。此更新带来了许多新的更新，包括解决我们最重要的问题之一，以进行多个重点改进和添加</description>
      <pubDate>Mon, 21 Jul 2025 12:10:34 +0000</pubDate>
    </item>
    <item>
      <title>【Ask Mode vs Agent Mode - Choosing the Right Copilot Experience for .NET】询问模式与代理模式 - 选择.net的合适的副本体验</title>
      <link>https://devblogs.microsoft.com/dotnet/ask-mode-vs-agent-mode</link>
      <description>【As a .NET developer, productivity and problem-solving are at the heart of your workflow. GitHub Copilot Chat offers two powerful modes, Ask Mode and Agent Mode, that can dramatically accelerate your development, but knowing when to use each is essential to getting the most out of this tool. In this post, we’ll break down the differences,】作为.NET开发人员，生产力和解决问题是您工作流程的核心。 Github Copilot聊天提供了两个强大的模式，即询问模式和代理模式，它们可以极大地加速您的开发，但是知道何时使用每个模式，对于充分利用了该工具至关重要。在这篇文章中，我们将分解差异，</description>
      <pubDate>Mon, 21 Jul 2025 17:05:00 +0000</pubDate>
    </item>
    <item>
      <title>【Azure Developer CLI: From Dev to Prod with One Click】Azure开发人员CLI：从开发人员到prod一键</title>
      <link>https://devblogs.microsoft.com/devops/azure-developer-cli-from-dev-to-prod-with-one-click</link>
      <description>【This post walks through how to implement a &#34;build once, deploy everywhere&#34; pattern using Azure Developer CLI (azd) that provisions environment-specific infrastructure and promotes applications from dev to prod with t】这篇文章介绍了如何使用Azure Developer CLI（AZD）实施“构建一次，在任何地方部署”模式，该模式可以提供特定于环境的基础架构，并促进与T Dev一起使用T Dev的应用程序</description>
      <pubDate>Mon, 21 Jul 2025 16:17:37 +0000</pubDate>
    </item>
  </channel>
</rss>