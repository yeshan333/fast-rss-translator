<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Microsoft for Developers</title>
    <link>https://devblogs.microsoft.com/landingpage/</link>
    <description>Get the latest information, insights, and news from Microsoft.</description>
    <item>
      <title>【Your 6-Step Guide to Deploying a Website with GitHub Codespaces and Copilot agent mode】使用 GitHub Codespaces 和 Copilot 代理模式部署网站的 6 步指南</title>
      <link>https://devblogs.microsoft.com/all-things-azure/your-6-step-guide-to-deploying-a-website-with-github-codespaces-and-copilot-agent-mode</link>
      <description>【👋everyone! Shree here. I&#39;m sure many of you have had a similar chat with someone you know】👋大家！什里在这里。我相信你们中的许多人都曾与认识的人进行过类似的聊天</description>
      <pubDate>Fri, 24 Oct 2025 22:38:54 +0000</pubDate>
    </item>
    <item>
      <title>【The early history of the Windows Runtime PropertyValue and why there is a PropertyType.Inspectable that is never used】Windows 运行时 PropertyValue 的早期历史以及为什么存在从未使用过的 PropertyType.Inspectable</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20251024-00/?p=111725</link>
      <description>【Some time ago, I mentioned that the Property­Value.Create­Inspectable method doesn&#39;t create a Property­Value】前段时间，我提到PropertyValue.CreateInspectable方法不会创建PropertyValue</description>
      <pubDate>Fri, 24 Oct 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing Sponsorship on NuGet.org】在 NuGet.org 上宣布赞助</title>
      <link>https://devblogs.microsoft.com/dotnet/announcing-sponsorship-on-nugetdotorg-for-maintainer-appreciation</link>
      <description>【Package maintainers are the backbone of the NuGet.org ecosystem, building and maintaining the packages we all rely on. Today we are excited to announce the new NuGet.org Sponsorship feature which makes it easier than ever for consumers to recognize and support the authors behind their favorite packages. With Sponsorship on NuG】包维护者是 NuGet.org 生态系统的支柱，负责构建和维护我们都依赖的包。今天，我们很高兴地宣布新的 NuGet.org 赞助功能，该功能使消费者比以往任何时候都更容易认识和支持他们喜爱的软件包背后的作者。获得 NuG 赞助</description>
      <pubDate>Thu, 23 Oct 2025 22:18:00 +0000</pubDate>
    </item>
    <item>
      <title>【Upgrading to Microsoft Agent Framework in Your .NET AI Chat App】在 .NET AI 聊天应用程序中升级到 Microsoft Agent Framework</title>
      <link>https://devblogs.microsoft.com/dotnet/upgrading-to-microsoft-agent-framework-in-your-dotnet-ai-chat-app</link>
      <description>【The AI App Templates let you spin up a working chat application in minutes, complete with AI integration, custom data ingestion, and all the pieces you need to get started. It&#39;s a cool and solid foundation. But here&#39;s the thing: what if you want to go beyond basic chat? What if you want to build AI agents that can actually reason,】AI 应用程序模板可让您在几分钟内启动一个工作聊天应用程序，并完成 AI 集成、自定义数据摄取以及入门所需的所有部分。这是一个很酷且坚实的基础。但问题是：如果您想要超越基本聊天范围怎么办？如果你想构建能够真正推理的人工智能代理怎么办？</description>
      <pubDate>Thu, 23 Oct 2025 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Windows Runtime design principle: Properties can be set in any order】Windows运行时设计原则：属性可以按任意顺序设置</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20251023-00/?p=111716</link>
      <description>【One of the design principles of the Windows Runtime is that if an object has multiple writable properties, then you can set them in any order and the effect will be the same. For example, consider an object with three properties: Minimum, Maximum, and Value. Suppose the rule is that you must, a】Windows运行时的设计原则之一是，如果一个对象有多个可写属性，那么你可以按任意顺序设置它们，效果都是一样的。例如，考虑一个具有三个属性的对象：最小值、最大值和值。假设规则是你必须</description>
      <pubDate>Thu, 23 Oct 2025 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Unlocking Enterprise AI Complexity: Multi-Agent Orchestration with the Microsoft Agent Framework】解锁企业 AI 复杂性：使用 Microsoft Agent 框架进行多代理编排</title>
      <link>https://devblogs.microsoft.com/semantic-kernel/unlocking-enterprise-ai-complexity-multi-agent-orchestration-with-the-microsoft-agent-framework</link>
      <description>【The Architectural Imperative: Why Multi-Agent Orchestration is Essential In modern enterprise AI systems, the scope and complexity of real-world business ch】架构当务之急：为什么多代理编排至关重要 在现代企业人工智能系统中，现实世界业务流程的范围和复杂性</description>
      <pubDate>Thu, 23 Oct 2025 08:09:07 +0000</pubDate>
    </item>
    <item>
      <title>【Integration Testing with Testcontainers】使用测试容器进行集成测试</title>
      <link>https://devblogs.microsoft.com/ise/testing-with-testcontainers</link>
      <description>【Introduction Ever had to write tests that need a real database, and found yourself juggling local setups or dummy data? Testcontainers might just be your new best friend. In this article, we&#39;ll explore how Testcontainers can simplify integration testing by spinning up real services in Docker containers on-demand. We&#39;】简介 您是否曾经需要编写需要真实数据库的测试，并发现自己需要处理本地设置或虚拟数据？测试容器可能只是您最好的新朋友。在本文中，我们将探讨 Testcontainers 如何通过按需在 Docker 容器中启动真实服务来简化集成测试。我们&#39;</description>
      <pubDate>Thu, 23 Oct 2025 07:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Bringing Context to Copilot: Azure Cosmos DB Best Practices, Right in Your VS Code Workspace】将上下文引入 Copilot：Azure Cosmos DB 最佳实践，就在 VS Code 工作区中</title>
      <link>https://devblogs.microsoft.com/cosmosdb/bringing-context-to-copilot-azure-cosmos-db-best-practices-right-in-your-vs-code-workspace</link>
      <description>【Developers love GitHub Copilot for its instant, intelligent code suggestions. But what if those suggestions could also reflect your specific database and workload patterns? That’s now possible with a new feature in Azure Cosmos DB for VS Code.】开发人员喜欢 GitHub Copilot，因为它提供即时、智能的代码建议。但是，如果这些建议也可以反映您的特定数据库和工作负载模式呢？现在，通过 Azure Cosmos DB for VS Code 中的新功能可以实现这一点。</description>
      <pubDate>Wed, 22 Oct 2025 18:26:18 +0000</pubDate>
    </item>
    <item>
      <title>【Introducing Planning in Visual Studio (Public Preview)】Visual Studio 中的规划简介（公共预览版）</title>
      <link>https://devblogs.microsoft.com/visualstudio/introducing-planning-in-visual-studio-public-preview</link>
      <description>【Quick prompts are great for small fixes, but they fall short on big projects. You end up rewriting instructions, tweaking them constantly, and hoping the model stays on track. It gives Copilot a visible, structured path to follow, one that updates as it works and keeps you in control at every step. In Agent Mode, Copilot can now create plan】快速提示对于小修复来说非常有用，但对于大型项目来说却不够。您最终会重写指令，不断调整它们，并希望模型保持在正轨上。它为 Copilot 提供了一条可见的、结构化的路径，该路径会随着工作的进行而更新，并让您在每一步都处于掌控之中。在代理模式下，副驾驶现在可以创建计划</description>
      <pubDate>Wed, 22 Oct 2025 15:54:18 +0000</pubDate>
    </item>
    <item>
      <title>【Build an AI Agentic RAG search application with React, SQL Azure and Azure Static Web Apps】使用 React、SQL Azure 和 Azure Static Web Apps 构建 AI Agentic RAG 搜索应用程序</title>
      <link>https://devblogs.microsoft.com/azure-sql/build-an-ai-agentic-rag-search-application-with-react-sql-azure-and-azure-static-web-apps</link>
      <description>【Introduction Leveraging OpenAI for semantic searches on structured databases like Azure SQL enhances search accuracy and context-awareness, providing more relevant and insightful results. This example showcases the use of Azure SQL for storing and searching data with AI. By implementing the RAG pattern with Azure SQL, the sample e】简介 利用 OpenAI 对 Azure SQL 等结构化数据库进行语义搜索，可以提高搜索准确性和上下文感知能力，从而提供更相关、更有洞察力的结果。此示例展示了如何使用 Azure SQL 通过 AI 存储和搜索数据。通过使用 Azure SQL 实现 RAG 模式，示例 e</description>
      <pubDate>Wed, 22 Oct 2025 15:00:28 +0000</pubDate>
    </item>
  </channel>
</rss>