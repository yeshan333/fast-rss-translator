<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Microsoft for Developers</title>
    <link>https://devblogs.microsoft.com/landingpage/</link>
    <description>Empowering every developer with trusted Microsoft insights</description>
    <item>
      <title>【Exploring the Essentials: Building Basics with Microsoft Copilot Studio】探索要点：使用 Microsoft Copilot Studio 构建基础知识</title>
      <link>https://devblogs.microsoft.com/powerplatform/exploring-the-essentials-building-basics-with-microsoft-copilot-studio</link>
      <description>【Exploring the Essentials: Building Basics with Microsoft Copilot Studio Don’t know how to start with building an agent in Microsoft Copilot Studio? We’ve got you covered! In our AI in Action: Building with Copilot Studio series on the Microsoft Power Platform YouTube channel, we have several episodes that guide you through how to get started [&amp;hellip;]】探索要点：使用 Microsoft Copilot Studio 构建基础知识 不知道如何开始在 Microsoft Copilot Studio 中构建代理？我们已经为您提供了保障！在 Microsoft Power Platform YouTube 频道上的“AI 实际行动：使用 Copilot Studio 进行构建”系列中，我们有几集可指导您如何开始使用 [...]</description>
      <pubDate>Thu, 09 Jan 2025 22:21:37 +0000</pubDate>
    </item>
    <item>
      <title>【通过 .NET Aspire 使用本地 AI 模型】通过 .NET Aspire 使用本地 AI 模型</title>
      <link>https://devblogs.microsoft.com/dotnet-ch/%e9%80%9a%e8%bf%87-net-aspire-%e4%bd%bf%e7%94%a8%e6%9c%ac%e5%9c%b0-ai-%e6%a8%a1%e5%9e%8b</link>
      <description>【本文翻译自Aaron Powell的Using Local AI models with .NET Aspire 使用本地 AI 模型是在您自己的计算机上进行实验的一个很好的方法，它无需将资源部署到云中。在本文中，我们将了解如何使用.NET Aspire 和 Ollama 在本地运行 AI 模型，同时使用 Microsoft.Extensions.AI 抽象使其在部署时过渡到云托管模型。 在 .NET Aspire 中设置 Ollama 我们需要某种方法来从 .NET Aspire 应用程序中使用 Ollama，最简单的方法就是使用 .NET Aspire 社区工具包中的 Ollama 托管集成。您可以通过 Visual Studio 工具、VS Code 工具或 .NET CLI 从 NuGet 安装 Ollama 托管集成。让我们看一下如何通过命令行将 Ollama 托管集成安装到我们的应用程序主机项目中： dotnet add package CommunityToolkit.Aspire.Hosting.Ollama 安装 Ollama 托管集成后，您可以在 Program.cs [&amp;hellip;]】本文翻译自Aaron Powell的Using Local AI models with .NET Aspire 使用本地 AI 模型是在您自己的计算机上进行实验的一个很好的方法，它无需将资源部署到云中。在本文中，我们将了解如何使用.NET Aspire 和 Ollama 在本地运行 AI 模型，同时使用 Microsoft.Extensions.AI 抽象使其在部署时过渡到云托管模型。 在 .NET Aspire 中设置 Ollama 我们需要某种方法来从 .NET Aspire 应用程序中使用 Ollama，最简单的方法就是使用 .NET Aspire 社区工具包中的 Ollama 托管集成。您可以通过 Visual Studio 工具、VS Code 工具或 .NET CLI 从 NuGet 安装 Ollama 托管集成。让我们看一下如何通过命令行将 Ollama 托管集成安装到我们的应用程序主机项目中： dotnet add package CommunityToolkit.Aspire.Hosting.Ollama 安装 Ollama 托管集成后，您可以在 Program.cs […]</description>
      <pubDate>Fri, 10 Jan 2025 06:50:05 +0000</pubDate>
    </item>
    <item>
      <title>【Empowering AI Agents with Tools via OpenAPI: A Hands-On Guide with Microsoft Semantic Kernel Agents】通过 OpenAPI 使用工具为 AI 代理提供支持：Microsoft 语义内核代理实践指南</title>
      <link>https://devblogs.microsoft.com/semantic-kernel/empowering-ai-agents-with-tools-via-openapi-a-hands-on-guide-with-microsoft-semantic-kernel-agents</link>
      <description>【Today the Semantic Kernel team is happy to welcome back our guest author, Akshay Kokane. We will turn it over to him to dive into his recent Medium article on Semantic Kernel. As we advance towards an Agentic Approach in the AI world, I would like to share my insights on how Semantic Kernel can [&amp;hellip;]】今天，语义内核团队很高兴地欢迎我们的客座作者 Akshay Kokane 回来。我们将把它交给他，深入研究他最近在 Medium 上发表的有关语义内核的文章。随着我们在人工智能世界中迈向代理方法，我想分享我对语义内核如何[...]的见解</description>
      <pubDate>Thu, 09 Jan 2025 22:43:35 +0000</pubDate>
    </item>
    <item>
      <title>【Why does inadvertently passing a std::string instead of a char const* to a variadic function crash on x86-32 but not x86-64?】为什么无意中将 std::string 而不是 char const* 传递给可变参数函数会在 x86-32 上崩溃，但在 x86-64 上不会崩溃？</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20250110-00/?p=110744</link>
      <description>【Looking at the calling convention and the small string optimization.】查看调用约定和小字符串优化。</description>
      <pubDate>Fri, 10 Jan 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Enhanced Change Signature in C++】C++ 中的增强更改签名</title>
      <link>https://devblogs.microsoft.com/visualstudio/enhanced-change-signature-in-c</link>
      <description>【Change Signature allows you to modify a function&amp;#8217;s parameters, including reordering, adding, removing, or altering them across various locations. Previously, the Change Signature feature in Visual Studio involved multiple clicks and nested pop-up windows. In Visual Studio 2022 version 17.12, we&amp;#8217;ve reduced the number of clicks and eliminated these nested steps to streamline the process. [&amp;hellip;]】更改签名允许您修改函数的参数，包括在不同位置重新排序、添加、删除或更改它们。以前，Visual Studio 中的更改签名功能涉及多次单击和嵌套弹出窗口。在 Visual Studio 2022 版本 17.12 中，我们减少了点击次数并消除了这些嵌套步骤以简化流程。 […]</description>
      <pubDate>Mon, 13 Jan 2025 13:00:41 +0000</pubDate>
    </item>
    <item>
      <title>【Announcing the Public Preview of Apple Identity Provider Support for Microsoft Entra External ID】宣布 Apple 身份提供商支持 Microsoft Entra 外部 ID 公开预览版</title>
      <link>https://devblogs.microsoft.com/identity/openid-connect-social-identity-provider-apple</link>
      <description>【Announcing the public preview of &#34;Sign in with Apple&#34; support for Microsoft Entra External ID. This feature allows users to sign up and sign in to applications using their Apple ID. Apple joins Google and Facebook as pre-configured social identity providers, supporting Single Sign-On (SSO) through the OAuth framework.】宣布推出对 Microsoft Entra 外部 ID 的“使用 Apple 登录”支持的公开预览版。此功能允许用户使用其 Apple ID 注册并登录应用程序。 Apple 与 Google 和 Facebook 一起成为预配置的社交身份提供商，通过 OAuth 框架支持单点登录 (SSO)。</description>
      <pubDate>Fri, 10 Jan 2025 12:18:04 +0000</pubDate>
    </item>
    <item>
      <title>【A simplified overview of ways to add or update elements in a std::map】在 std::map 中添加或更新元素的方法的简化概述</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20250113-00/?p=110757</link>
      <description>【And using it to find missing opportunities.】并用它来寻找错过的机会。</description>
      <pubDate>Mon, 13 Jan 2025 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Teams Toolkit for Visual Studio Code update – January 2025】Teams Toolkit for Visual Studio Code 更新 – 2025 年 1 月</title>
      <link>https://devblogs.microsoft.com/microsoft365dev/teams-toolkit-for-visual-studio-code-update-january-2025</link>
      <description>【We’re kicking off the new year with exciting updates to Teams Toolkit for Visual Studio Code including a refreshed user interface for getting started and more!】我们以 Teams Toolkit for Visual Studio Code 的激动人心的更新来拉开新的一年的序幕，其中包括用于入门的全新用户界面等等！</description>
      <pubDate>Thu, 09 Jan 2025 17:46:10 +0000</pubDate>
    </item>
    <item>
      <title>【LLMOps in restricted networks and addressing continuous evaluation long run constraints】受限网络中的 LLMOps 和解决持续评估长期约束</title>
      <link>https://devblogs.microsoft.com/ise/llmops-in-restricted-networks-and-continuous-evaluation-long-run-constraints</link>
      <description>【In this blog post, we&#39;ll explore the challenges we faced in establishing LLMOps and continuous evaluation within a pipeline using Azure Machine Learning, particularly when dealing with long runs and a restricted Bring-Your-Own (BYO) network.】在这篇博文中，我们将探讨使用 Azure 机器学习在管道内建立 LLMOps 和持续评估时所面临的挑战，特别是在处理长期运行和受限的自带 (BYO) 网络时。</description>
      <pubDate>Fri, 10 Jan 2025 08:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Cosmos DB Embeddings Generator Sample】Cosmos DB 嵌入生成器示例</title>
      <link>https://devblogs.microsoft.com/cosmosdb/embeddings-generator-sample</link>
      <description>【Ever since our first preview announcement for vector indexing and support for DiskANN and then again when we announced the GA for these features, customers have been asking us to make it easier to generate Azure OpenAI embeddings on their data in Azure Cosmos DB. So we did just that and created the Azure Cosmos [&amp;hellip;]】自从我们首次发布矢量索引和对 DiskANN 支持的预览版以来，以及当我们再次宣布这些功能的 GA 时，客户一直要求我们更轻松地在 Azure Cosmos DB 中的数据上生成 Azure OpenAI 嵌入。所以我们就这么做了并创建了 Azure Cosmos [...]</description>
      <pubDate>Tue, 14 Jan 2025 02:39:38 +0000</pubDate>
    </item>
  </channel>
</rss>