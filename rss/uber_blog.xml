<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Uber Engineering Blog</title>
    <link>http://rsshub.rssforever.com/uber/blog</link>
    <description>The technology behind Uber Engineering - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【Unified Checkout: Streamlining Uber’s Payment Ecosystem】统一结帐：简​​化Uber的付款生态系统</title>
      <link>https://www.uber.com/blog/unified-checkout/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;7136f2d5-0242-41b5-9146-965a2657f0ac&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0a33db00-7c46-4bc3-9f03-1fd88a301f06&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber started as a ridesharing company with a simple yet ambitious mission: make transportation as reliable as running water, everywhere, for everyone.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8339e8e9-b7ab-46eb-89e7-53ff0f8811ce&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When the company focused on ridesharing, most back-end systems were built around a trip, a rider, and a driver. Since it was the only LOB (line of business) at the time, any payment-specific operations were implemented directly into the ridesharing system. For example, supporting Apple Pay&lt;sup&gt;®&lt;/sup&gt; was implemented on the Rides back end.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;766df407-ddf0-44f4-a9ae-30bcf4479602&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When Uber grew as a company, so did the number and complexity of LOBs. Uber started offering food and grocery delivery, bike and scooter rentals, public transportation tickets, and car rentals. Each LOB built their own system on the back end where their business logic lived. Still, they all needed payments and risk support, and that required specific operations like 2FA and fingerprinting. Implementing payment business logic became expensive because any change had to be made many times across services. This harmed ‌velocity and feature parity, and increased the complexity, cost, and risk of maintaining services.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1786d6d3-6cfe-4841-97b1-0fd115c1aca0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Payment methods weren’t uniformly supported across user flows and LOBs. For example, Apple Pay wasn’t supported in every user flow or LOB at Uber. You could use it to pay for an on-demand ride, but you couldn’t use it to pay for a scheduled ride until very recently. Other payment methods like Google Pay&lt;sup&gt;™&lt;/sup&gt;&lt;strong&gt; &lt;/strong&gt;and direct bank transfers were in the same situation. That was because a different service handled scheduling rides, and it followed a different model of securing funds before fulfillment. Upfront charge payment methods and ones that required any form of 2FA to initialize or finalize a payment weren’t supported by some LOBs or flows, like scheduling a trip, switching the payment profile for an ongoing trip, or even changing the payment method&amp;nbsp; after the completion. This was especially important for popular payment methods in markets like PIX in Brazil and UPI in India.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;646721ae-f279-4e2e-8ac9-dcca5dab8fe6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;After years of having to implement payment methods individually and once per LOB, we were determined to find a better solution for the next compliance requirement where we’d need to repeat the same change multiple times across back-end services. The trigger point to fund a team and solve this problem was Strong Customer Authentication, which was a mandate initially rolled out in the European Union. It dictated that any transaction with a European credit card that was higher than a certain threshold would be subject to a multi-factor authentication process using 3-D Secure to confirm the shopper’s identity. The protocol involved fingerprinting the shopper’s device and had a chance to throw a challenge for the shopper to complete, like a biometric challenge or a one-time password.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;14ae3cf7-eca7-404d-8423-ca4d5800a8fd&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We had around 70 endpoints that might result in a financial transaction, all of which integrated directly with our risk and payment systems. This blog describes how we implemented these authentication methods and supported payment methods while dealing with this complexity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e1ea7abc-6eba-4dd4-ae66-e342abac4991&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;357f8633-ce9e-4122-a464-bb54a638464f&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-unified-checkout&#34;&gt;Unified Checkout&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;33692168-6439-4e35-af22-9c64be2a76ed&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We built a checkout layer to allow LOBs access to the Uber payment ecosystem via one connection. This introduced a new layer in our systems to hold checkout business logic and act as an orchestrator. Any payment method support or need for a cross-LOB change can now be implemented once by a single team.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;04e0a1b0-8b55-425e-b90c-6b38489b4d59&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf5Aw22eJyQTPnah17ZVYK3MEc3Avsu_-s4Ozq93O8uSVjomfyWP26LKhcL7BtiCRHyWUnxystQI_Mix2thIZtcFkjAuQo36nWAfPL--kCL8ftyjcoYYsen5zZKk7SSyxI3XTXic0S1wiUzFdH93gCCJQA?key=8HfQhqD5HD_dFi-j9eqKYw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Uber LoBs without and with Unified Checkout.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c3b541aa-e41b-4f5d-9216-8d601d034b29&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;96828353-5359-4329-a5d9-7072f81b81f7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;All of the business logic to support payment methods and their specific operations moved to this new layer. If Unified Checkout supports a given payment method, all it takes to enable it on an LOB or flow is a few configuration changes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;890710d7-77ae-481f-a5ae-a5b1a266f060&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;New payment methods are only supported fully in Unified Checkout, which serves as a moving force for adoption across the company and delivers value to ‌existing consumers. The strategy of the Unified Checkout platform was to treat each Uber LOB as an external company that we knew very little about, similar to existing checkout offerings in the market. By decoupling the system from the LOB’s product layer, we keep the platform agnostic of their inner workings and only aware of payment method specifics. This allows the platform to evolve faster and pushes the team to model all operations in a generic way while ensuring that people can pay with their preferred payment methods in any flow across all Uber LOBs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c83ea450-b5f7-40c5-93e8-26d5cb86066b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9af08c74-b847-4963-a432-b2f0e0223985&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture&#34;&gt;Architecture&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;80479027-22d3-4f65-9d17-12a285734311&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Unified Checkout is available in a modular and hosted version with client components that are coupled with the checkout back-end service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0edb52ae-0d84-4763-8aef-5b170af69b6f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;It provides generic payment method support for global and local instruments, a risk system integration on the client side and on the back-end side for risk evaluation, and the execution of arbitrary flows through a generic actioning framework called Checkout Actions.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9d100c95-9ad9-4ecf-9eec-ea98f0c4ab89&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A small set of microservices handle the checkout request and execute a set of operations:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;75305263-b62f-4254-ae10-165c78580011&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Prepares the payment profile &lt;/strong&gt;by exchanging transactional data captured on the client side with other payment systems. This can be passing a short-lived token all the way to the third-party processor, extracting authentication identifiers from the request, or initializing the request to generate a 2FA URL.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Invokes the risk system&lt;/strong&gt; &lt;strong&gt;to score the request and later secure the funds&lt;/strong&gt; on the person’s chosen payment profile either by placing an authorization hold on the funds so they can be captured when the order is completed or by charging the person upfront before the order is fulfilled, depending on the strategy decided by the risk system.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Generates Checkout Actions&lt;/strong&gt; to either guide the person through any necessary steps, or to display a failure message along with buttons that trigger corrective actions, like reauthenticating an account, editing the payment method details, or selecting another payment profile.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;If the risk system instructs Unified Checkout to initiate an upfront charge, it &lt;strong&gt;waits for the payment confirmation signal &lt;/strong&gt;emitted from the payments platform once we get a response from the third-party processor. This is a necessary complexity, as most processors are asynchronous. Once Unified Checkout consumes this event, it either confirms the order’s preparation or cancels it by emitting another event or calling an LOB service directly.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;bec50a0e-7af0-4fec-a11c-57475b79a046&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdyMsKQO_GI_QVbqkJan89j8BgOhLI1B_4xB9nTw7L7XE8uC3kuo_a4uY5FjYXM56RuRiLJXxkkTP-j-kO_f69zjkiiPg08FcGi_od_O5XfvQy5ZMDnvSzi93NXG5Nz8wpWGy8wkTqkRnPZRMALrDBiEjy2?key=8HfQhqD5HD_dFi-j9eqKYw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Unified Checkout architecture diagram.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;92338aff-0105-4208-8f97-fd758fb776ca&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;4502b8a4-8af5-4acb-8564-38fef5f705da&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-modular&#34;&gt;&lt;br&gt;Modular&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b62e1373-8002-40a5-bd80-f952230322ac&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the modular version, ‌clients can integrate the pre-built components on their own screens and checkout funnel and invoke them throughout the person’s journey of checking out.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;98330e4d-ef0e-4220-a8e6-64824302f069&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In this integration model, the LOB back end calls the checkout back end directly. Any Checkout Actions that need to be surfaced externally are then propagated through the response in an opaque manner and passed to the client checkout component. The payload is opaque to the LOB so that only the checkout back end and checkout client can process it. This was a deliberate design choice to prevent payment complexity from leaking to the LOB services and having those teams building features on top of the payload.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;87056699-cf4f-4874-bc3c-f1c22aeb6928&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdBRUV1nRzBK01_R-PzIL5q-wCTK_y3IXLmGe0LSTjTX5Dk5Ovh7TiYmcN_ubkgQvbuJQGhiSQstEP5xvcrzxz8D831CBPBt-JrRpmhwGZA6LxRW7iBKrBS444ZS6HmG4Yw7NIVLzIEXw1gPqvU2bSS-TM?key=8HfQhqD5HD_dFi-j9eqKYw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Screen owned by Rides LOB.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0abe1c39-2029-42ec-97ef-dd146497c858&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;7bc83ca9-3780-480b-a604-b26d1a767c4b&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-hosted&#34;&gt;&lt;br&gt;Hosted&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a5008b0a-5f72-455d-8cc5-a12eaa95fb08&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We offer the hosted solution to new verticals or smaller LOBs so that they can use a complete payments and checkout solution out-of-the-box. This accelerates their time-to -market and experimentation while maintaining the same or very similar level of payment method support.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7c61055a-4899-4601-8110-baae00611680&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With the hosted implementation, once the person is ready to check out, the checkout solution takes control over the application and displays a summary view of the order. On the same screen, the person can select their payment profile and place the order. Once the order is successfully prepared, a signal is sent to the client and to the back end, which will then dismiss the hosted checkout screens on the client side and give control back to the LOB.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6d89bc12-f4b8-4746-91bf-17865deb2e55&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In this model, all the communication once the hosted solution has been invoked happens between the checkout client and checkout back end. This means that the LOB back end doesn’t call the checkout back end.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;570021e8-f329-4001-b7e2-f42708ce21e1&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeT3PjMLpMKQ1lANNNdpsukdoTnjQb6AdfOokRq-CJ8qYyFleWTanAE8vny-QFvtA4EHN350dfZfB-b7rzeen3vmnI_mNYPKFej-HA7MxaQAjFMhXaVV6dMap8LQ8jTiwoqoBXAg0lUeDcf06QOZzx2bl4?key=8HfQhqD5HD_dFi-j9eqKYw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Hosted checkout summary view.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a5c5ecbb-1318-4fef-bc41-ed4288ad6042&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2e8a462a-6a8a-4466-853d-47a392af2795&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ab7ab23e-ea83-4241-889e-03474e8f825b&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-checkout-actions&#34;&gt;Checkout Actions&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7375adc2-c256-48fb-9c8f-9b1b22bb2f95&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Checkout Actions is a stateless framework to execute arbitrary flows that are required for someone to convert successfully. These actions can be 2FA operations, clearing your arrears, executing an identity challenge, authorizing a payment operation, device fingerprinting, and more. The actions have to be generic enough that they can be applied across all LOBs. If there’s an action specific to a single business, like confirming your delivery address, then it shouldn’t be implemented as a Checkout Action. Checkout Actions may not require any interaction, and can be a data collection process or the initialization of a back-end process‌.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;16d696de-057d-4541-8218-174e9ec8d261&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The client side runs the Checkout Actions and generates the results payload. This payload is sent to the checkout back end on the subsequent checkout request and any state required is carried along with it. This request can either succeed or generate more Checkout Actions for the person to complete.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;c3841530-7454-4ad5-9db4-d640620a5df1&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeT0ezeO78ft5Sq5bzdxJx-WZhO1_4o9s-ke-hKM6PaWnEs0B66Y3zzFoDUY3kNrOElJQ4P4iBYmJNpWh6rAPYFj3gC8gZcUIdyRtmS55ViSo0zZs_2EDvXHryHMW896ANvS17xJMFd7EczH2yrzzs8yLpW?key=8HfQhqD5HD_dFi-j9eqKYw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Checkout Actions sequence diagram.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d6118ee7-8694-4bed-a9d4-03f0058b2dab&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;ab10679a-d467-4934-a5b8-9d0773cb11c4&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-pre-checkout-actions&#34;&gt;&lt;br&gt;Pre-checkout Actions&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7b8c7c18-1e3f-4c30-abcf-f31e4f8bb0b3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pre-checkout actions are actions that must be executed on the client side before the first interaction with the back end for the checkout request. These are usually deterministic operations and can be generated by our back end in real time since their execution is already known to be a mandatory step. Someone checking out with Apple Pay will always need to pick a payment method in their Apple Wallet&lt;sup&gt;®&lt;/sup&gt;, for example.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;135b7a20-056d-4b8f-97de-5c9a899d4502&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd9OOze2NKOcEK3sgHzRQBImA97YquUsygX6K7UK_ZFPcm1lvYOiNlYp3kPRPdgtKm4eSv5b2L-fgl-g9ff41bEKobXXTJ3zTvdh-fZLm-JgQEIu06kS8pEbSjdK6Tzm7LFLGzQfrpHDSbYaEzfQIIIrtpI?key=8HfQhqD5HD_dFi-j9eqKYw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Pre-checkout actions.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bcf279bc-a07c-40e6-a00b-922cb243a553&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;8e4d5b83-837f-4f28-949f-34e74dd5d299&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-post-checkout-actions&#34;&gt;&lt;br&gt;Post-checkout Actions&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f7b54403-044e-47b7-a184-b8015a304d9b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Post-checkout actions are generated after the first interaction with the checkout back end. These can be operations required to authorize or complete a payment transaction or they can be rejection actions, in case of insufficient balance, an error while placing an auth-hold, or even a rejection by Uber risk systems or someone’s bank. Every checkout action generated by the system offers a corrective action, even if it’s as simple as allowing someone to select another payment profile and try again. There are also more complex recovery flows like confirming your identity, connecting a social media account to your Uber account, or going through an identity challenge.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;1d076ebe-e466-4b1a-b4ab-3ed3e5774399&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfj8PYdPAUpYiAexDrve9JBOyT3eoM9pwsk9nmGlvYuu29YMDkDkvm0Sw40NcydRs1mkla_ZyG3_lSDrIJ4b8r1D7Vvb_EHPURc0FCn_eDu4Tj5wgJlfxcV4d4VNbNRe8F8PmdIUmxz0LWezZ36J0YaPKN_?key=8HfQhqD5HD_dFi-j9eqKYw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Post-checkout actions.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;93a2729f-2f1d-4080-9720-87d4cbe0fe23&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dbd7b493-6bb3-4df4-bb97-9576d62afc7d&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;33b1960e-6e5e-4d19-b82f-fea19d6e53ac&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-impact&#34;&gt;Impact&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a229624d-db07-4b05-9ab9-3eabd3744c9f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Every launch of Unified Checkout goes through an experiment to measure its impact on metrics like checkout request conversion, session conversion, session recovery, and number of orders completed. After launching the most frequently used payment methods globally on Uber Eats, we performed a holdout experiment where a percentage of the participants didn’t get their requests routed to the Unified Checkout system and stayed in the legacy experience where their system connected directly to risk and payments. As a result, we observed that the Unified Checkout experience had a &lt;em&gt;3% higher checkout conversion rate&lt;/em&gt; and a &lt;em&gt;4.5% higher session recovery rate&lt;/em&gt; when compared to the legacy experience. This means that people saw fewer errors when checking out. Those that saw errors could recover from them and convert more often.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c3904e65-0520-4356-8870-5a8cfd117d48&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Even though this holdout experiment was only executed on one LOB, we extrapolated the impact to the entire order placement traffic and calculated an estimated impact of incremental gross bookings in the order of hundreds of millions of dollars annually.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2d51d43d-a896-4bdc-90a4-d5c80cd6e35e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Other than the lift in the metrics, every flow now supports at least the top 5 most-used payment methods globally. The biggest LOBs also support popular local payment methods, unlocking more availability. The lack of support for a specific payment method is now a strategic decision rather than a technical limitation, cost barrier, or complexity of implementation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8010fab0-ac04-4a00-b2cd-ff5394bcceaa&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;eed3585c-cf4b-4d37-8a43-22bc7adaf3fa&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b05f85a9-306b-45a7-9d98-2b1ed8abe0be&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Following the strategy of treating Uber LOBs as external customers, the Checkout Platform team experiments with new experiences and features to identify opportunities to increase conversion metrics and decrease drop off. This includes new types of Checkout Actions, new error messaging models, more granularity with error messages, optimizing existing operations, new modalities for Memberships, scheduled orders, clientless flows, split tender, and more.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d430a191-5999-4f36-b913-8e161355d532&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;It’s natural for software solutions to have an inflection point in which common or duplicated operations must be transformed into platforms or redesigned in a more generic way so that it can be applied a number of times with minimum maintenance cost. You could call this the moment in which you are paying tech debt incurred due to the hyper-growth of the company.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1344ee70-b4cc-411b-a8ab-cc587130889f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At Uber scale, having a system that handles the entire order placement traffic from all mobile and web applications means that we can impact and improve the user experience from all of our users placing orders at once with a single change or deployment. Optimizing a checkout flow can have a significant impact on key business indicators, such as gross bookings.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7ac719f3-ec72-4532-8a46-2b21e360c51f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;It’s our job as Software Engineers to identify opportunities as such and to design solutions that address those opportunities in a way that’s beneficial to both users and the business, even if that means starting from a bottoms-up project and pushing for it until it eventually becomes a product.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f517b7b6-9daa-4061-a46f-0b9eddfde2a8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Google Pay&lt;sup&gt;™&lt;/sup&gt; is a trademark of Google LLC.&lt;/p&gt;】&lt;h1 data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，”哈希：“ 7136F2D55-0242-41B5-9146-9146-965A2657F0AC” -block-neading“ id =” H-Instruction“&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 0A33DB00-7C46-4BC3-9F03-9F03-1FD03-1FD88A301F06”，“ dropcap”，“ dropcap”：false}一家具有简单但雄心勃勃的任务的乘车共享公司：使每个人都像自来水一样可靠。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 8339e8e9-b7ab-46eb-89eb-89e7-53ff0f8811ce”，“ dropcap”，“ dropcap”：false}大多数后端系统都专注于乘车共享，围绕旅行，骑手和驾驶员建造。由于它是当时唯一的LOB（业务范围），因此直接将任何特定于付款的操作实施到乘车共享系统中。例如，支持Apple Pay &lt;Sup&gt;®&lt;/sup&gt;在骑行后端实施。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 766DF407-DDF0-44F4-A9AE-A9AE-30BCF4479602”，“ dropcap”，“ dropcap”：false}作为一家公司，小块的数量和复杂性也是如此。 Uber开始提供食物和杂货店，自行车和踏板车租赁，公共交通票以及汽车租赁。每个叶在其业务逻辑寿命的后端建立了自己的系统。尽管如此，他们都需要付款和风险支持，并且需要特定的操作，例如2FA和指纹识别。实施付款业务逻辑变得昂贵，因为必须多次在服务中进行多次更改。这损害了‌级和特征奇偶校验，并增加了维护服务的复杂性，成本和风险。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 1786d6d3-6cfe-4841-4841-97b1-0fd115c1aaca0”，“ dropcap”，“ dropcap”：false} &#39;t在用户流和群中均匀支撑。例如，在Uber的每个用户流或LOB中都不支持Apple Pay。您可以使用它来支付按需乘车，但是直到最近才能使用它来支付预定的乘车费用。 Google Pay &lt;Sup&gt;™&lt;/sup&gt; &lt;strong&gt; &lt;/strong&gt;和直接银行转移的其他付款方式也处于同样的情况。那是因为另一项服务处理的安排骑行，并且遵循了在履行之前确保资金的不同模型。预付费用付款方式和需要任何形式的2FA才能初始化或最终确定付款的方法，某些群落或流量不支持付款，例如安排旅行，切换付款资料进行正在进行的旅行，甚至在此之后更改付款方式完成。这对于巴西Pix和印度UPI等市场的流行付款方式尤其重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 646721AE-F279-4E2E-8AC9-DCCA5DAB8FE6”，“dropcap“：false}”&gt;经过多年的单独实施付款方式，每段一次实施付款方式，我们决心为下一个合规性要求找到一个更好的解决方案，在我们需要在后端多次重复相同的更改服务。为团队提供资金并解决此问题的触发点是强大的客户身份验证，这是最初在欧盟推出的任务。它规定，使用3D安全的多因素身份验证过程，使用欧洲信用卡高于某个门槛的任何交易都将受到购物者身份。该协议涉及指纹识别购物者的设备，并有机会为购物者提供挑战，例如生物识别挑战或一次性密码。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 14AE3CF7-ECA7-404D-8423-CA4D5800A8FD”，“ dropcap”，“ dropcap”：false} 70个可能导致金融交易的端点，所有端点与我们的风险和支付系统直接集成在一起。该博客描述了我们在处理这种复杂性时如何实施这些身份验证方法和支持的付款方式。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ e1ea7abc-6eba-4dd4-ae66-e342abac4991“ class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ 357f8633-ce9e-4122-a464-bb54a638464f”，“ level”，“ level”：2} class =“ class =” wp -Block-neading“ ID =” H-unsified-Checkout“&gt;统一结帐&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 33692168-6439-4E35-AF22-222222-9C64BE2A76ED”，“ dropcap”，“ dropcap”：false}结帐层，可以通过一个连接访问Lobs访问Uber支付生态系统。这在我们的系统中引入了一个新层，以保持结帐业务逻辑并充当编排。现在，一个团队可以实施一次付款方式支持或对跨块变更的需求。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 04E0A1B0-8B55-425E-B90C-6B90C-6B38489B49B4D59”，“ ：“”“}” class =“ aligncenter”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleuserercontent.com/docsz/ad_4nxf5aw22ejyqtpnah17zvyk3mec3mec3mec3mec3mec3mec3mec3mec3mexu_-s4hyozhyozhyozqunlfppjjjjnm w. STQI_MIX2THIZTCFKJAUQO36NWAFPL-KCL8FTYJCOYENSEN5ZZKKK7SSYXI3XT toxic0s1wiuzfdh93gccjqa？key = 8HFQHQD5HD5HD_DFI-dfi-j9eqkyw“ alt = “” ReverrerPolicy =“ No-Referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图1：无统一结帐的Uber Lobs。&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C3B541AA-E41B-4F5D-9216-8D601D034B29”，“ Dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“核心/段落” data-wp-block =“ {” hash&#39;：“ 96828353-5359-4329-A59-7072F81B81F7”，“ dropcap”：false}}移至这个新层。如果统一的结帐支持给定的付款方式，则在LOB或FLOW上启用它所需的只是一些配置更改。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 890710D7-77AE-481F-A5AE-A5AE-A5B1A2666F060”，“ dropcap”，“ dropcap”：false}仅在统一结帐中得到充分支持，该结帐是在整个公司领养的动力，并为消费者提供价值。统一结帐平台的策略是将每个Uber Lob视为我们对市场知之甚少的外部公司，类似于市场上现有的结帐产品。通过将系统与LOB的产品层分离，我们将平台不可公开对其内部工作，并且只了解付款方式的细节。这使得平台可以更快地发展，并推动团队以通用的方式对所有操作进行建模，同时确保人们可以在所有Uber Lobs的任何流程中使用其首选的付款方式付款。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ C83EA450-B5F7-40C5-93E8-26D5CB86066B”，“ opacity”，“ opacity”，“ opacity”：“ Alpha-Channel”}“}”}“}”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 9AF08C74-B847-4963-A432-B2F0E0223985”，“ level”，“：2}” -block-heading“ id =“ H-Architecture”&gt; Architecture &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 80479027-22D3-4F65-9D17-9D17-12A285734311”，“ dropcap”，“ dropcap”：false}在模块化和托管版本中可用，并带有端部件，并与结帐后端服务相结合。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 0EDB52AE-0D84-4763-8AEF-5B170AF69B6F”，“ dropcap”，“ dropcap”：false}支付方法支持全球和本地工具，在客户端和后端的风险系统集成以进行风险评估，以及通过称为结帐操作的通用操作框架执行任意流。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9D100C95-9AD9-4ECF-9EEC-9EEC-EA98F0C4AB89”，“ dropcap”，“ dropcap”：false}微服务处理结帐请求并执行一组操作：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name =“ core/list” data-wp-block =“ {“ ordered”：true，“ hash”：“ 75305263-b62f-4254-AE10-165C78580011”，“值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;通过交换捕获的交易数据来准备支付配置文件&lt;/strong&gt;客户端具有其他付款系统。这可以将短的令牌一直传递到第三方处理器，从请求中提取身份验证标识符，或初始化生成2FA URL的请求。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;调用风险系统&lt;/strong&gt; &lt;strong&gt;得分资金&lt;/strong&gt;通过将授权持有在该资金上持有，以便在订单完成时可以捕获授权，或者通过在订单履行订单之前预先向该人收取费用，具体取决于风险决定的策略系统。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;在显示故障消息以及触发纠正措施的按钮，例如重新验证帐户，编辑付款方式详细信息或选择其他付款配置文件。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;如果风险系统指示统一结帐启动预付款，则&lt;strong&gt;等待付款确认信号&lt;/strong&gt;一旦我们得到第三方处理器的响应，就从付款平台发出。这是必要的复杂性，因为大多数处理器都是异步的。统一结帐消耗此事件后，它可以确认订单的准备工作，或通过发射另一个事件或直接致电LOB服务来取消订单的准备。 &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ bec50a0e-7af0-7af0-4fec-a11c-a11c-57475b79a046”，“ ：“” class =“ aligncenter”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxdymskqo_gi_gi_qvbqkjan89j89j8bgohli1b _44xbunxy444x.nlk.nlky44444x.nlk.nlky4444 x.lk.n4444 x.lk.n4444444.4nx.lk.n. RURILJXXKKTP-J-KO_F69ZJKIIPG08FCGI_OD_O5XFVQY5ZMDNVSZI93NXG5NXG5NZ8WPWPWGY8WKTQKRNPZRNPZRMALRDBIMALDBIMALDBIEJY2？ “ referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图2：统一的签出体系结构图。&lt;/figcatpion&gt; &lt;/figcaption&gt; &lt;/figife&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 92338AFF-0105-4208-8F97-F97-FD758FB776CA”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ 4502B8A4-8AF5-4ACB-8564-38FEF5F705DA”} -Block-neading“ ID =“ H-Modular”&gt; &lt;br&gt;模块化&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ b62e1373-8002-40a5-bd80-f9522322222ac”，“ dropcap”，“ dropcap”：false}版本，clients可以在自己的屏幕上集成预制的组件并结帐渠道，并在整个人的结帐旅程中调用它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 98330E4D-EF0E-4220-A8E6-64824302F069”，“ dropcap”：false}”&gt;在此集成模型中，LOB后端直接调用结帐后端。以不透明的方式进行响应，并将其传递给coodut组件。并让这些团队在有效载荷之上构建功能。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;digue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 8705699-CF4F-4874-BC3C-F1C22222AEB6928”，“ ALT” :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdBRUV1nRzBK01_R-PzIL5q-wCTK_y3IXLmGe0LSTjTX5Dk5Ovh7TiYmcN_ubkgQvbuJQGhiSQstEP5xvcrzxz8D831CBPBt-JrRpmhwGZA6LxRW7iBKrBS444ZS6HmG4Yw7NIVLzIEXw1gPqvU2bSS-TM?key=8HfQhqD5HD_dFi-j9eqKYw “ alt =”“ referrerpolicy =“ no-the-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图3：屏幕由Rides lob。&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 0abe1c39-2029-42ec-97ef-dd146497c858”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ 7BC83CA9-3780-480B-A604-B26D1A767C4B”} -block-heading“ id =” h-hosted“&gt; &lt;br&gt;托管&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ a5008b0a-5f72-455d-8cc5-a12eaa95fb08”，“ dropcap”，“ dropcap”：false}托管了新的垂直物或较小叶的解决方案，以便他们可以使用完整的付款和结帐解决方案。这加速了他们的市场时间和实验，同时维持相同或非常相似的付款方式支持。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7c61055a-4899-4601-4601-8110-baae00611680”，“ dropcap”：false}实施，一旦人准备退房，结帐解决方案就会控制该应用程序，并显示订单的摘要视图。在同一屏幕上，该人可以选择其付款资料并下订单。成功准备好订单后，将信号发送给客户和后端，然后将托管在客户端的托管结帐屏幕上，并将控件还给LOB。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6d89bc12-f4b8-4746-91bf-17865deb2e55”，“ dropcap”&gt;在此模型中， ，一旦调用了托管解决方案，所有通信就会发生在结帐客户端和结帐后端之间。这意味着LOB后端不会调用结帐后端。 &lt;/p&gt;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 570021E8-F329-4001-B7E2-F42708CE21E1”，“ ALT” :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeT3PjMLpMKQ1lANNNdpsukdoTnjQb6AdfOokRq-CJ8qYyFleWTanAE8vny-QFvtA4EHN350dfZfB-b7rzeen3vmnI_mNYPKFej-HA7MxaQAjFMhXaVV6dMap8LQ8jTiwoqoBXAg0lUeDcf06QOZzx2bl4?key=8HfQhqD5HD_dFi-j9eqKYw “ alt =”“ referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图4：托管结帐摘要视图。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A5C5CBB-1318-4FEF-BC41-ED4288AD6042”，“ dropcap”，“ dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 2E8A462A-6A8A-4466-4466-853D-47A392AF2795”，“ opacity”，“ opacity” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ ab7ab23e-ea83-4241-889e-03474e825b“ -Block-neading“ ID =” H-Checkout-Actions”&gt;结帐操作&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7375ADC2-C256-48FB-9C8F-9B1B1B222BB2F95”，“ dropcap”，“ dropcap”一个无状态的框架，以执行某人成功转换所需的任意流。这些操作可以是2FA操作，清除欠款，执行身份挑战，授权付款操作，设备指纹识别等。这些动作必须足够通用，以便可以在所有叶片上应用它们。如果有针对单个业务的行动，例如确认您的送货地址，则不应将其作为结帐行动实施。结帐操作可能不需要任何互动，可以是数据收集过程或后端过程的初始化。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 16d696de-057D-4541-4541-8218-174E9EC8D261”，“ dropcap”，“ dropcap”：false}运行结帐操作并生成结果有效载荷。此有效载荷将在随后的结帐请求中发送到结帐后端，并随身携带任何状态。此请求可以成功或为人完成更多结帐措施。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ C3841530-7454-4AD5-4AD5-9DB4-D640620A5DF1”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeT0ezeO78ft5Sq5bzdxJx-WZhO1_4o9s-ke-hKM6PaWnEs0B66Y3zzFoDUY3kNrOElJQ4P4iBYmJNpWh6rAPYFj3gC8gZcUIdyRtmS55ViSo0zZs_2EDvXHryHMW896ANvS17xJMFd7EczH2yrzzs8yLpW?key=8HfQhqD5HD_dfi-j9eqkyw“ alt =”“ referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp-element-caption”&gt;图5：结帐操作序列序列图。&lt;/figcaption&gt; &lt;/figapation&gt; &lt;/figife&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ d6118ee7-8694-4bed-a9d4-03f0058b2dab”，“ dropcap”，“ dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ AB10679A-D467-4934-A5B8-9D07773CB11C4”} -Block-neading“ ID =” H-PRE-Checkout-Actions“&gt; &lt;br&gt; pre-Checkout Action &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7B8C7C18-1E3F-4C30-ABCF-F31E4F8BB0B3”，“ dropcap”，“ dropcap”：false}操作是在与后端进行第一次交互之前，必须在客户端执行的操作，以进行结帐请求。这些通常是确定性的操作，可以由我们的后端实时生成，因为他们的执行已知是强制性的步骤。例如，与Apple Pay结帐的人总是需要在其Apple Wallet &lt;sup&gt;®&lt;/sup&gt;中选择付款方式。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;图data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 135B7A20-056D-4B8F-97DE-5C9A89999D4502”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd9OOze2NKOcEK3sgHzRQBImA97YquUsygX6K7UK_ZFPcm1lvYOiNlYp3kPRPdgtKm4eSv5b2L-fgl-g9ff41bEKobXXTJ3zTvdh-fZLm-JgQEIu06kS8pEbSjdK6Tzm7LFLGzQfrpHDSbYaEzfQIIIrtpI?key=8HfQhqD5HD_dFi-j9eqKYw “ alt =”“ referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图6：预检查动作。&lt;/figcatpion&gt; &lt;/figaption&gt; &lt;/fige&gt; &lt;/div&gt;&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ BCF279BC-A07C-40E6-A00B-922CB243A553”，“ dropcap”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ 8E4D5B83-837F-4F28-4F28-949F-34E74E74DD5D299”} -Block-neading“ ID =” H-Post-Checkout-Actions“&gt; &lt;br&gt; checkout Action &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ F7B54403-044E-47B7-A184-B8015A304D9B”，“ dropcap”，“ dropcap”：fords false}&gt; checkeckout在与结帐后端进行第一次交互之后，生成动作。这些可能是授权或完成付款交易所需的操作，也可以是拒绝行动，如果余额不足，在放置身份验证的同时出现错误，甚至由Uber风险系统或某人的银行拒绝。系统生成的每个结帐操作都提供纠正措施，即使它很简单，就像允许某人选择其他付款配置文件并重试。还有更复杂的恢复流，例如确认您的身份，将社交媒体帐户连接到您的Uber帐户或经历身份挑战。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 1d076ebe-e466-4b1a-b4ab-3ED3E5774399”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfj8PYdPAUpYiAexDrve9JBOyT3eoM9pwsk9nmGlvYuu29YMDkDkvm0Sw40NcydRs1mkla_ZyG3_lSDrIJ4b8r1D7Vvb_EHPURc0FCn_eDu4Tj5wgJlfxcV4d4VNbNRe8F8PmdIUmxz0LWezZ36J0YaPKN_?key=8HfQhqD5HD_dFi-j9eqKYw&#34; alt=&#34;&#34; referrerpolicy=&#34; No-Referrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图7：检查后动作。&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 93A2729F-2F1D-4080-9720-9720-8720-87D4CBE0FE23”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ DBD7B493-6BB3-4DF4-BB97-9576D62AFC7D”，“ opacity”，“ opcity”：“ alpha-channel&#39;} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 33b1960e-6e5e-4d19-b82f-fea19d6e53ac”，“ level”：2} class =“ wp =” wp -Block-neading“ ID =“ H-Impact”&gt; Impact &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ A2229624D-DB07-4B07-4B05-9AB9-9AB9-9AB9-3EBD3744C9F”，“ dropcap”，“ dropcap”：false}统一的结帐进行了一个实验，以衡量其对指标的影响，例如结帐请求转换，会话转换，会话恢复和完成的订单数量。在Uber Eats上启动了最常用的付款方式之后，我们进行了一个保留实验，其中一部分参与者没有将其请求接收到Unified Checkout System的请求，并留在了传统体验中，他们的系统直接连接到风险和风险和风险和风险和风险和风险和付款。结果，我们观察到，与传统体验相比，统一的结帐经验的结帐转换率&lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/em&gt;。这意味着人们在退房时看到的错误较少。那些看到错误的人可以从他们身上恢复并更频繁地转换。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C3904E65-0520-4356-4356-8870-5A8CFD117D48”，“ dropcap”&gt;，即使此Holdout实验仅在一个LOB上执行，我们将影响到整个订单放置流量进行了说明，并计算了按每年数亿美元的数亿美元订单计算出的增量总预订的估计影响。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2d51d43d-a896-4bdc-90a4-d5c80cd6e35e”，“ dropcap”：dropcap“：false}”&gt;举起指标，现在每个流量至少都支持全球最佳的5种付款方式。最大的叶子还支持流行的本地付款方式，从而解开了更多的可用性。缺乏支持现在，用于特定付款方式的RT是战略决策，而不是技术限制，成本障碍或实施的复杂性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 8010FAB0-AC04-4A00-B2CD-FF5394BCCEAA”，“不透明度”，“不透明度”：“ Alpha-Channel”}“}”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，”哈希：“ eed3585c-cf4b-4d37-8a43-8a43-22bc7adaf3fa”} -Block-neading“ ID =“ H-Conconclusion”&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ B05F85A9-306B-45A7-9D98-298-2B1ED8ABE0BE”，“ dropcap”，“ dropcap”：false}将Uber Lob视为外部客户，结帐平台团队具有新的体验和功能，以确定增加转换指标并减少下降的机会。这包括新类型的结帐操作，新的错误消息传递模型，带有错误消息的更多粒度，优化现有操作，成员资格的新模式，计划的订单，无客户流量，拆分招标等等。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ d430a191-5999-4f36-b913613-8e161355532”，“ dropcap”：dropcap“：false}”&gt;是自然的软件解决方案具有一个拐点，必须将常见或重复的操作转换为平台或以更通用的方式进行重新设计，以便可以在最低维护成本的情况下多次应用。您可以在由于公司的超增长而偿还技术债务的那一刻。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 1344EE70-B4CC-411B-A8AB-CC587130889F”，“ dropcap”，“ dropcap”：false} ，拥有一个可以从所有移动和Web应用程序中处理整个订单放置流量的系统，这意味着我们可以通过单个更改或部署立即从所有用户中影响和改善所有用户的用户体验。优化结帐流可以对关键业务指标（例如总预订）产生重大影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7AC719F3-EC72-4532-8A46-8A46-2B21E360C51F”，“ dropcap”，“ dropcap”：false}作为软件工程师以确定机会，并设计以对用户和业务有益于用户的方式来解决这些机会的解决方案，即使这意味着要从自下而上的项目开始并推动它直到最终成为产品。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ F517B6-9DAA-4061-A4061-A46F-0B9EDB9EDDFDE2A8”，“ dropcap” ：false}“ class =” hap-small-font-size&gt; Google Pay &lt;Sup&gt;™&lt;/sup&gt;是Google LLC的商标。&lt;/p&gt;</description>
      <pubDate>Thu, 14 Nov 2024 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Introducing the Prompt Engineering Toolkit】引入及时的工程工具包</title>
      <link>https://www.uber.com/blog/introducing-the-prompt-engineering-toolkit/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;017052cc-70c9-4332-bf04-69fa7f4a8be8&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b7bc8d85-9cd1-4d57-9148-41ce69ac3084&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A well-crafted prompt is essential for obtaining accurate and relevant outputs from LLMs (Large Language Models). Prompt design enables users new to machine learning to control model output with minimal overhead.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;705831fa-9844-4560-85b6-fd321c40fb8c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To facilitate rapid iteration and experimentation of LLMs at Uber, there was a need for centralization to seamlessly construct prompt templates, manage them, and execute them against various underlying LLMs to take advantage of LLM support tasks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c5c2a0c0-9608-4c58-bb46-9085e37f53e2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To meet these needs, we built a prompt engineering toolkit that offers standard strategies that encourage prompt engineers to develop well-crafted prompt templates. It also provides functionality to enrich these templates with context obtained from RAG (Retrieval-Augmented Generation) and runtime feature datasets.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;97444062-6f99-4121-9750-6216787eb03c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The centralized prompt engineering toolkit enables the creation of effective prompts with system instructions, dynamic contextualization, massive batch offline generation (LLM inference), and evaluation of prompt responses. Furthermore, there’s a need for version control, collaboration, and robust safety measures (hallucination checks, standardized evaluation framework, and a safety policy) to ensure responsible AI usage.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f7750aa8-383b-47f3-9c15-138d5ec4fde2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This blog post gives an overview of the prompt template lifecycle, the architecture used to build the prompt toolkit, and the production usage of the toolkit at Uber.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;96debefe-ace7-409b-8951-2492f11910ae&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f7af8fe7-ca53-4a6f-85fa-96476bc5c987&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-goals&#34;&gt;Goals&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3f5cadc6-3359-40c4-b372-c4c25dbefc20&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When we built the prompt toolkit, our goals were that users at Uber could:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;928707a3-c450-4996-b7e1-418b86170c4e&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Explore all the available LLM models&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Search and discover all the prompt templates&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Create and update prompt templates and tune parameters with access control&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Iterate on prompt template through code review and revision control&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Generate batch offline generation by applying RAG and testing datasets with different LLM models for LLM inference&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Evaluate prompt templates via offline evaluation through testing dataset and online evaluation&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Monitor prompt template performance with LLMs in production to detect regressions and continuously monitor LLM quality through systematic tracking&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;45261a03-0eae-4b6d-b559-0bd75f8c18a2&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cf804320-9a8b-4be5-8bfa-53efe56c7c87&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-prompt-engineering-lifecycle&#34;&gt;Prompt Engineering Lifecycle&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9fa592ff-e9ed-4f0d-8316-2f46b6521d81&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The prompt engineering lifecycle consists of two stages: the development stage and the productionization stage. Users interact with the prompt toolkit during each of these stages.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;e2588716-190f-4a86-b76a-ee35e746aaf9&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-development-stage&#34;&gt;Development Stage&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f6708f16-5ec8-4e02-a6f2-c2c5ac178c3e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The development stage has three phases: LLM exploration, prompt template iteration, and evaluation.&lt;br&gt;&lt;br&gt;In the LLM exploration phase, users interact with a model catalog and Uber’s GenAI Playground. A model catalog is a model repository that contains all the available LLM models and its corresponding description, metrics, and usage guide. The GenAI Playground helps users explore the capabilities of different LLMs available at Uber and test their use case applicability. Users explore available LLM models from a model catalog and test LLM responses with prompts in the GenAI playground.&lt;br&gt;&lt;br&gt;In the prompt template iteration phase, users pinpoint their specific business needs, gather sample data, create/analyze/test prompts with LLM models and datasets, assess the responses, and make revisions as needed. Auto-prompting suggests prompt creation so users don’t need to create the prompt template from scratch. With a prompt template catalog, users can explore and reuse the existing prompt templates. In this phase, users perform continual experimentation and iteration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;67d4e70c-2dd5-42c4-9c37-62d46bb771d7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the evaluation phase, users evaluate the effectiveness of the prompt template by testing it with a more extensive dataset to measure its performance. It could leverage LLM as a judge or leverage a customized code-based LLM evaluator to evaluate the performance of the prompt template.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;20ee8da5-f987-4c8f-b0b6-aae132cbdd13&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-productionization-stage&#34;&gt;&lt;br&gt;Productionization Stage&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8e60077b-f2d1-4ff3-b097-c436879b56c9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the productionization stage, users only productionize the prompt template that passed the evaluation threshold on an evaluation dataset.&lt;br&gt;&lt;br&gt;Users track and monitor usage in a production environment, collecting data on system usage. This data can inform further enhancements to the process.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;96cb832a-2766-4bc0-bfeb-6dbf8c133c66&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;78d40108-f817-4352-99da-371078275090&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture&#34;&gt;Architecture&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d2737e54-b66d-486d-9e3f-0a89a2cc823a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With the prompt engineering toolkit, various components interact to facilitate LLM model deployment, prompt evaluation, and batch inference responses.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a5d33a03-0d98-40cf-b989-21886b5fe273&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The toolkit is composed of a Prompt Template UI/SDK that manages prompt templates and their revisions. The Prompt Template UI/SDK integrates with APIs like &lt;em&gt;GetAPI&lt;/em&gt; and &lt;em&gt;Execute API&lt;/em&gt;. These APIs interface with the LLM models deployed from the LLM Model Catalog. Models and prompts are stored in ETCD and UCS (object configuration storage), which are then used in an Offline Generation Pipeline and a Prompt Template Evaluation Pipeline.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;4a29a44e-cf91-4cb2-a032-adf6e223a059&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdEq8Ow776xewryQ9ZnJ4Ii0MeuIjlDHx-7A-uFCFkM_j0ANWKYpPtn9AglumBRcWd3ypLTgnkERfI2pyXESzdX2o8ZNRinQoAbALFew8wFDJDFEQ_e6P_Qm-HluxXwetm__w-I23uEvenKM53PWZ_3vgnX?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Overview of the prompt engineering toolkit.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6895502e-4910-422c-afef-79ccab8a6420&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;a href=&#34;https://lucid.app/lucidchart/cbde0172-054f-4f6a-94cc-133e6b3208d4/edit?page=0&amp;amp;v=1087&amp;amp;s=612&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;91c4de30-e36b-4097-816a-8158637d10e2&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d2b25754-4a62-4ebc-912f-77f4849e8d7e&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-ui-design-nbsp&#34;&gt;UI/Design&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;59b93f45-511e-407c-8aab-6551c6e971be&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Users first interact with the prompt toolkit in Gen AI Playground. Gen AI Playground is designed to interface seamlessly with the Model Catalog, a comprehensive repository of large language models available at Uber. This platform allows users to explore detailed specifications, expected use cases, cost estimations, and performance metrics for each model. Within the Gen AI Playground, users can select any model from the catalog, craft custom prompts, and adjust parameters, such as temperature, to evaluate the model’s responses during the ideation stage.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;c448354b-dd5a-4c51-a2ea-ea2dbcd39d4f&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe7EvU-FNtBJuwXVWyMAruW8BJQ9v0q-cFRqxpoQ22ctq7Y8hnILHp5j_tBMjG9WKx0M2F6QXD0bUWDb-30XdlW_GNPoYBy_F7LBirv5q2IaJTRuM9IV2WF4hyaLHyCjREDTHnktDXK2GD_ABLdVQ9ZBhIW?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: The model catalog UI.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9f156d2a-e307-4018-816b-86f8566f9868&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;592d6aab-fbbd-4e2d-94f6-86e138f792f9&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdtu3U7VhGD9p4zaJcUAHvWTkBfbGFQOubBOuRw2r9C7pXBHbECRibmJ9MlkbkAIndAU1tIVZSOUEdu1F_JirRlwgWkw3iT2Av8dG4nctl67hMOd5jandMMvzyF_rQf7FdXAvrbhJL8woWVXCscZo3E06Yg?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: The prompt template edit page.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8db44de9-ddd7-4fad-bfcb-17bfc44ed350&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5f2bf7b0-f410-4ab4-bd57-a8479a0c3341&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;61df70e2-6fe2-48ee-85e6-ca6e36e19efc&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-prompt-template-creation&#34;&gt;Prompt Template Creation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9529b325-db14-4b77-8f62-8010c78f67ba&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The prompt toolkit prompt builder automatically creates prompts for users and helps them discover advanced prompting techniques tailored to their specific AI use case. The auto-prompt builder, built on top of the Langfx framework (an Uber internal Langfx service built on top of LangChain&lt;sup&gt;™&lt;/sup&gt;), follows these steps:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f5b948f8-e353-4e66-a241-301d5723ffd7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;1. Prompt engineering best practices:&lt;/strong&gt; Incorporates the best practices for context RAG retrievers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9ac781ce-84e0-4983-86c4-bd2982b837f7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;2. Prompt builder instructions and examples: &lt;/strong&gt;Provides a template listing detailed instructions and few-shot examples to help LLMs ‌craft user prompts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;395f1476-49fa-4f39-96a5-4923cb5529b8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;3. Leverage LLM models:&lt;/strong&gt; Utilizes LLM models to auto-generate suggested prompts, acting as a creator to assist users in prompt generation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;ce761521-f084-4da5-adc7-89a8ec52f17b&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-advanced-prompt-guidance&#34;&gt;&lt;br&gt;Advanced Prompt Guidance&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d2fc4119-5d30-477d-96f1-bdcd0724dd1c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The prompt builder leverages these principles to create prompts.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/table&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ff3309d7-3851-46b8-acb1-521d955d370a&amp;quot;,&amp;quot;hasFixedLayout&amp;quot;:true,&amp;quot;head&amp;quot;:[],&amp;quot;body&amp;quot;:[],&amp;quot;foot&amp;quot;:[]}&#34; class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Technique&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Prompt Principle for Instructions&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CoT (Chain of thought), introduced by &lt;a href=&#34;https://arxiv.org/abs/2201.11903&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wei et al. (2022)&lt;/a&gt;&lt;/td&gt;&lt;td&gt;CoT (Chain-of-thought) prompting enables complex reasoning capabilities through intermediate reasoning steps. You can combine it with few-shot prompting to get better results on more complex tasks that require reasoning before responding.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Auto-CoT (Automatic Chain of Thought), introduced in &amp;nbsp;&lt;a href=&#34;https://arxiv.org/abs/2210.03493&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Zhang et al. (2022)&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Use leading words like ‌“think step by step.” Specify the steps required to complete a task. This is an approach to eliminate manual efforts by leveraging LLMs with the “Let’s think step by step” prompt to generate reasoning chains for demonstrations one by one.&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Prompt chaining&lt;/td&gt;&lt;td&gt;Prompt chaining can be used in different scenarios involving several operations or transformations.&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ToT (Tree of thought)&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2305.10601&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Yao et el. (2023)&lt;/a&gt; and &lt;a href=&#34;https://arxiv.org/abs/2305.08291&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Long (2023)&lt;/a&gt; proposed Tree of Thoughts (ToT). This framework generalizes ‌chain-of-thought prompting and encourages the exploration of thoughts that serve as intermediate steps for general problem-solving with language models.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Automatic prompt engineer&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2211.01910&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Zhou et al. (2022)&lt;/a&gt; proposed APE (automatic prompt engineering), a framework for automatic instruction generation and selection. The instruction generation problem is framed as natural language synthesis addressed as a black-box optimization problem using LLMs to generate and search over candidate solutions.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Multimodal CoT prompting&lt;/td&gt;&lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2302.00923&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Zhang et al. (2023)&lt;/a&gt; proposed a multimodal chain-of-thought-prompting approach. Traditional CoT focuses on the language modality. In contrast, Multimodal CoT incorporates text and vision into a two-stage framework. The first step involves rationale generation based on multimodal information. This is followed by the second-phase, answer inference, which leverages the informative generated rationales.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;7d4c3a44-a2d5-4dca-93a6-527fa0f80e77&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-revision-control&#34;&gt;&lt;br&gt;Revision Control&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7611356a-d6fc-4894-99f8-16a8a2cdc3a0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Prompt template iteration follows code-based iteration best practices. Users could modify the instruction and model parameters for testing responses, testing it out with a test dataset. A code review is needed for every iteration of the prompt template. Once approved and landed, a new prompt template revision gets created.&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6b59a79e-89db-4649-bf2f-593c2b605e98&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Furthermore, for the production serving flow, users may prefer not to have their prompt template in the production altered with each update. A user could inadvertently introduce errors in their revisions; therefore, deploying the prompt template should follow a structured process.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;978ac977-7920-40b8-8ea1-5670bc8c7943&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We support a system where the prompt template can be deployed under an arbitrary deployment name, allowing users to “tag” their preferred prompt template for the production model. This prevents ‌an accidental change of prompt template in their production service. This deployed prompt template is disseminated through ObjectConfig, which is an internal configuration deployment system at Uber. With this safe deployment with explicit deployment revision tagging and universal configuration synchronization (with the ObjectConfig system), the user application in the production service fetches the prompt template upon its deployment.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;72690eee-bf6e-4d91-8167-bcad93e434f9&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcPH2IGjaHaYkc7Qbn_Gcdg7h73GsmrPzcFBVieuq9lGqo5ob5l5GVWqxuDlqZC6r6MsGrm3RNrF8tmrn-94OR5kkmtlWYIVCIblLFkCfVe6nJaob6XsQQQ2D143KSiktcl8AEbw12OzvKjEImev2sPVocq?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Prompt template revision control.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e3f48ea1-be88-4be1-ac1e-c2d71fdde322&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;a href=&#34;https://lucid.app/lucidchart/862dd0ba-26c2-4131-b00b-c6f0607dbfbf/edit?page=7&amp;amp;v=15814&amp;amp;s=448&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f2f6f4e6-9c3e-44e8-9f9b-09a52b1eb958&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;424bd0fe-808a-4347-8ea5-b0968f6b3c92&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-prompt-template-evaluation-nbsp&#34;&gt;Prompt Template Evaluation&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;101a1fff-401c-40b5-bcde-0825ce0bf52a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Several components are involved in the process to evaluate the performance of one or more prompt templates along with their LLM models, model parameters, and context.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;03ea20ce-7042-4bcb-b0a8-9d7a1a6248c3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For evaluation mechanisms, two methods can be employed:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e81cb057-6e8e-4a93-a53d-1eef0b74fdf4&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Using an LLM as the evaluator (LLM as Judge).&lt;/strong&gt; This type of evaluation is particularly useful for tasks where subjective quality or linguistic nuances are important, such as generating text that should be engaging, persuasive, or stylistically specific.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Using custom, user-defined code to assess performance.&lt;/strong&gt; Specific metrics and criteria are coded and used to automatically evaluate the performance of an LLM. This method is beneficial because it can be highly tailored to the specific aspects of performance one wishes to measure.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7ae607be-77fd-4226-a2d3-24f12dd9066f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The toolkit also offers prompt templates. The evaluation prompt template is a straightforward, user-friendly prompt template detailing the instructions for evaluation. It includes brief examples, metrics, and the format for responses. The production prompt template offers the same, but for production use. This template gets hydrated during production runtime and is the one for performance evaluation.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;39fd0734-4583-4b45-ba0f-1d65253ce663&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When evaluating prompt templates, input dataset options include a golden dataset with labeled data specifically for evaluation and a dataset derived from production traffic, also used for evaluation purposes. Each template gets evaluated considering its specific instructions, context, involved models, and model parameters.&lt;br&gt;&lt;br&gt;To provide a high-level comparison of different prompt templates’ effectiveness, aggregated metrics get generated by applying the prompt templates across a large dataset.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;205ac0fc-636b-4600-a700-d96573505a28&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfidNj0hbdndvXHIB124H4Y9WEzqtllzC1R3d-DfNadLV0Ae49YU23NU0KY_RmX0G3LUC2Pb9J-pX9HBW8TC48ucniAYaidv-KlOidE0wlHUOz4KydXdbZf1rja1I_uKKWKsAKE4t0j-RUC5DZqSc0YPCG2?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Prompt evaluation flow.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cbc4b816-3e33-43f4-81e6-2c3a4dbcb420&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;87111bff-7d08-4d7d-b3f0-6056433091f0&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;756646f6-ae74-4d87-bdcf-30218bc99080&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-use-cases-at-uber&#34;&gt;Use Cases at Uber&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;498a6343-858c-4f6d-80a1-bcd945a2a36a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Let’s see how the prompt toolkit works for some production use cases Uber.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;d4aaaf66-bfcb-4f91-9606-93c1053e0412&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-offline-llm-service-nbsp&#34;&gt;Offline LLM Service&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bd5d7874-0980-4dc1-a09f-7355e4d94fb1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The LLM Batch Offline Generation pipeline facilitates batch inference for large-scale LLM response generation. For example, this pipeline can be integral to the rider name validation use case, which verifies the legitimacy of consumer usernames. It assesses all existing usernames in Uber’s consumer database as well as those of newly registered users, employing an asynchronous method to process and generate responses for usernames in batches.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cbad961e-b4d4-4dde-ac3c-3862834326a2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In &lt;a href=&#34;https://www.uber.com/blog/from-predictive-to-generative-ai/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MA Studio&lt;/a&gt;, setting up this Offline Generation pipeline is straightforward: users select the relevant dataset and input it as data. The prompt template is dynamically hydrated with this dataset. For instance, if the user’s prompt template includes the sentence “Is this {{user_name}} a valid human name?” the pipeline extracts the user_name column from each data row, using it to generate a custom prompt for each entry.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;1f81b66b-1039-49b6-aaf2-1acc040edc2d&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc-6Yd_prNMs2rmCxa5MgLa2gc42RsIJ_u4GewFsoEj6PoxSGmItv-8o04yFAl_MRQPiBsr376eZ6XKNeNPX3-QMqY86pTJIMcCjB6mNsgn1YWVudBhwYAluyQ9QJZqmU7Hx7c0XslTe1H_a0BnVMYO6xI?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Prompt offline generation.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dc3cb8ce-6df5-4f45-b707-d10d22b005bc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;88887d03-d00a-4c34-a278-e1f38e503b34&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-online-llm-service&#34;&gt;&lt;br&gt;Online LLM Service&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;29d8506e-c759-4634-ae99-4a9d8a14b60c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The prompt template contains dynamic placeholders that need to get replaced with specific runtime values provided by the caller. The caller is responsible for hydrating and passing the values that must get substituted on the placeholders. The model’s hyperspace service currently supports substitution using Jinja-based template syntax. At the moment, we only handle the substitution of string types.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0bfd2754-99e3-438c-9dc0-ed258536cb36&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This service also supports fan-out capabilities across prompts, templates, and models. The fan-out capabilities can be divided into:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bccb522e-36ec-459d-b4e3-501761a0eb8b&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Templates: &lt;/strong&gt;The API templates include formatting the payload into a vendor-specific API structure from the generic data model we exposed from the service. Multiple templates, such as chat completion and text completion templates, are supported.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Prompts and Models: &lt;/strong&gt;The prompts are pinned to a specific model and template. The service fetches the prompt and call the genAI APIs with the required model and template parameters for execution.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7c14d858-b787-4ee2-b707-0f96a43af69a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Let’s explore the above functionalities through a summarization use case. A contact is a support ticket used to contact a customer support agent. There are scenarios where multiple agents can handle a contact. In this case, the new agent receiving the handoff must either go through the ticket to understand the context or ask the customer to reiterate the problem. Usually, it’s the former. To solve this, we provide a summary to the agents when there’s a handoff from one agent to another.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;be530b64-38dc-4be9-8ab4-f0d5355ba5b1&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcRypOfJB3oF0Mz9dz7e1y2WQkZdXKhAMYmIaEvUJWh2wCCX8EMwIUoFP8jMyihLUsu-PIC980aeARb53xdcTvKH74bAba5T22uE4tHMAi4M3hKUshjk_KLrzSSG62r0eVkiThFW0Igpd-k1wMH0rsmKDGT?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Prompt execution and summarization flow.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f6e92da4-70ec-4b20-8b0f-8f0a52150b8e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;90c930a0-a992-4901-8007-5433411ebb50&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4d78b852-e5c7-4885-8e69-80c6dc008fbf&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-monitoring-nbsp&#34;&gt;Monitoring&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2cb39b1b-6ba3-4dfb-9c19-8d3ab432a36e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Monitoring measures the performance of the production prompt template used in production. The purpose is to track the regression and performance of the currently prompt template in production. A daily performance monitoring pipeline runs towards production traffic to evaluate the performance. Metrics include latency, accuracy, correctness, and more to monitor each prompt template production iteration.&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4c3b9783-1e40-4ba5-8cd8-ccd41a9185ce&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;An MES dashboard gets refreshed daily with performance monitoring metrics. Refer to the &lt;a href=&#34;https://www.uber.com/blog/enhancing-the-quality-of-machine-learning-systems-at-scale/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MES blog post&lt;/a&gt; for more information about the MES dashboard&lt;a href=&#34;https://www.uber.com/blog/enhancing-the-quality-of-machine-learning-systems-at-scale/&#34;&gt;.&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;96067813-bed7-4ac5-bd12-06ef0e6ab27f&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;a8a354c4-350e-440f-b08a-278402412a71&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2fe53062-4ac0-49a1-9be1-8bd8c99f2ba9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The prompt engineering toolkit outlined in this blog represents a comprehensive framework designed to enhance the interaction with and utilization of LLMs across various stages of development and production at Uber. From the initial exploration of LLM capabilities in the Gen AI Playground to the detailed iteration and creation of prompt templates, the toolkit facilitates a dynamic environment for both novice and expert users to harness the power of LLMs effectively.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a2be8b6c-ff04-4ae3-aed4-56620fa71e06&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The architecture of the toolkit allows for a systematic approach to prompt design, incorporating advanced guidance techniques and robust evaluation methods to ensure the production of high-quality, effective prompts. The structured lifecycle of prompt templates—from development through to production usage and monitoring—ensures that each template is rigorously tested and optimized for performance.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e0788b5d-a8c7-47ed-9fe2-cf3cc29dc50a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As a next step, we hope to evolve the prompt toolkit to integrate with online evaluation and with RAG for evaluation and offline generation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;a5cfb2c3-e1f4-48d8-9c70-33469d3a4805&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;LangChain&lt;sup&gt;™&lt;/sup&gt; is a trademark of LangChain Inc., registered with the United States Patent and Trademark Office.&amp;nbsp; All other product and company names mentioned herein may be trademarks of their respective owners. The use of these marks does not imply any affiliation with or endorsement by their respective owners.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;71f5a7bd-1692-4de5-af7a-cb4fb0efa5ec&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Cover Photo attribution: “Artificial Intelligence &amp;amp; AI &amp;amp; Machine Learning” by mikemacmarketing. This image was marked with a CC BY 2.0 license:No modifications.&lt;/p&gt;】&lt;h1 data-data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，”哈希：“ 017052cc-70c9-​​4332-bf04-69fa7f4af4a8be8”} class =“ class =” wp -block-neading“ id =” H-Instruction“&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ B7BC8D85-9CD1-4D57-9148-41CE69AC3084”，“ dropcap”，“ dropcap”：false}精心设计的提示对于从LLM（大语言模型）获得准确且相关的输出至关重要。提示设计使机器学习的新手能够以最小的开销来控制模型输出。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 705831fa-9844-4560-4560-85b6-fd321c40fb8c”，“ dropcap”：dropcap} LLM在Uber的迭代和实验，需要集中化来无缝构建及时及时模板，管理它们并在各种基础LLM上执行它们以利用LLM支持任务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ C5C2A0C0-9608-4C58-BB46-9085E37F53E2”，“ Dropcap”需求，我们建立了一个及时的工程工具包，该工具包提供标准策略，鼓励迅速工程师开发精心制作的及时模板。它还提供了功能，可以通过从抹布（检索效果生成）和运行时特征数据集获得上下文丰富这些模板。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 97444062-6F99-4121-4121-9750-6216787EB03C”，“ dropcap”&gt; fromcap“：false}”&gt;工程工具包可以通过系统指令，动态上下文化，大量批次离线生成（LLM推论）以及及时响应的评估来创建有效的提示。此外，需要进行版本控制，协作和强大的安全措施（幻觉检查，标准化评估框架和安全政策），以确保负责任的AI使用。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ F7750AA8-383B-47F3-9C15-138D5EC4FDE2”，“ dropcap”，“ dropcap”：false}概述了提示模板生命周期，用于构建及时工具包的体系结构以及在Uber上的工具包的生产使用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 96debefe-ace7-409b-8951-2492f11910ae”，“不透明度”，“不透明度”：“ alpha-channel”}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ f7af8fe7-ca53-4a6f-85fa-96476bc5c987”，“ level”级别，“：2}” -Block-neading“ ID =“ H-GAALS”&gt;目标&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 3F5CADC6-3359-40C4-B372-C4C4C25DBEFC20”，“ dropcap”，“ dropcap”：false}迅速的工具包，我们的目标是用户在Uber可以：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ 928707A3-C450-4996-B7E1-418B86170C4E”，“订购”，“ false”：false，“值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;探索所有可用的LLM模型&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;搜索并发现所有提示模板&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;创建和更新带有访问控制的提示模板和调整参数&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;通过代码审核和修订控制&lt;/li&gt;在提示模板上迭代&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []“&gt;通过应用抹布和使用不同的LLM模型的LLM推理来生成批处理离线生成&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;通过测试数据集和在线评估评估提示模板&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;监视器提示模板在生产中使用LLMS的提示模板性能检测回归，并通过系统跟踪&lt;/li不断监视LLM质量&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 45261A03-0EAE-4B6D-B559-0B559-0BD75F8C18A2”，“ opticaly class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ CF804320-9A8B-4BE5-8BFA-53EFE56C7C87”，“ level”，“ level”：2} class =“ class =” WP -Block-neading“ ID =” H-Prompt-Engineering-Lifecycle&gt;及时工程生命周期&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9fa592ff-e9ed-4f0d-8316-2f46b6521d81”，“ dropcap”，“ dropcap”：false Engineering&gt;生命周期由两个阶段组成：开发阶段和生产阶段。在每个阶段中，用户可以与及时工具包进行交互。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希： -Block-neading“ ID =” H-Development阶段&gt;开发阶段&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ F6708F16-5EC8-4E02-A6F2-C2C5AC178C3E”，“ Dropcap”，“ dropcap”：false}有三个阶段：LLM探索，及时的模板迭代和评估。&lt;br&gt; &lt;br&gt;在LLM探索阶段，用户与模型目录和Uber的Genai Playground进行了交互。模型目录是一个模型存储库，其中包含所有可用的LLM型号及其相应的描述，指标和用法指南。 Genai游乐场可帮助用户探索Uber上可用的不同LLM的功能，并测试其用例适用性。用户探索来自模型催化的可用LLM型号OG和测试LLM响应带有Genai Playground的提示。&lt;br&gt; &lt;br&gt;在及时的模板迭代阶段，用户查明其特定的业务需求，收集样本数据，创建/分析/分析/分析/测试提示，并使用LLM模型和数据集，评估响应，并根据需要进行修订。自动宣传建议提示创建，因此用户无需从头开始创建及时的模板。使用及时的模板目录，用户可以探索并重复使用现有的提示模板。在此阶段，用户执行持续的实验和迭代。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 67d4e70c-2dd5-42c4-9c4-9c37-62d46bb771d7”，“ dropcap”&gt;在评估中，阶段，用户通过使用更广泛的数据集测试及时模板来评估及时模板的有效性。它可以利用LLM作为法官或利用基于定制代码的LLM评估器来评估及时模板的性能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ 20EE8DA5-F987-4C8F-B0B6-AEAE132CBD13”} -Block-neading“ ID =“ H产生阶段”&gt; &lt;br&gt;生产阶段&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 8e60077b-f21-4ff3-b097-c436879b56c9”，“ dropcap”，“ dropcap”：false}阶段，用户仅生产通过评估数据集上的评估阈值的提示模板。&lt;br&gt; &lt;br&gt; &lt;br&gt;用户在生产环境中跟踪和监视使用情况，从而收集了有关系统使用情况的数据。这些数据可以为该过程提供进一步的增强。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 96CB832A-2766-4BC0-BFEB-6DBFEB-6DBF8C133C66”，“ opacity”，“ opacity”，“ optical” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ 78d40108-f817-4352-99da-371078275090”，“ level”：2} class =“ WP -block-heading“ id =“ H-Architecture”&gt; Architecture &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ D2737E54-B66D-486D-486D-9E3F-0A3F-0A89A2CC823A”，“ dropcap”&gt;，并带有提示工程工具包，各种组件相互作用，以促进LLM模型部署，及时评估和批次推理响应。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ A5D33A03-0D98-40CF-B989-21889-21886B5FE273”，“ dropcap”，“ dropcap”：falsekit}由及时模板UI/SDK组成，该模板可以管理及时的模板及其修订。提示模板UI/SDK与API集成，例如&lt;em&gt; getapi &lt;/em&gt;和&lt;em&gt;执行API &lt;/em&gt;。这些与从LLM模型目录部署的LLM模型接口。模型和提示存储在ETCD和UCS（对象配置存储）中，然后将其用于离线生成管道和及时的模板评估管道。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 4A29A44E-CF91-4CB2-A032-A032-ADF6E223A059 ：““”}“ class =“ aligncenter”&gt; &lt;img解码=“ async” src =“ https：//lh7-rt.googleuserercontent.com/docsz/ad_4nxdeq876xew76xewew76xewewewewewewewewryrryq9znjnj4iiiiiiiiiiii um ppptnynya n.a pplclclcfcfknyn9 n9 n9 n9 n9 n9 n9 n9 gnkerfi2pyxeszdx2o8znrinqoabalfew8wfdjdfeq_e6p_qm-hluxxwetm__w-i23uevenkm53pwz_3vgnx？ =“” ReverrerPolicy =“ No-Referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图1：提示工程工具包的概述。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6895502e-4910-422c-422c-422c-afef-79ccab8a6420”，“ dropcap”，“ dropcap”：false} =“ https://lucid.app/lucidchart/cbde0172-054f-4f-4f-4f6a-94cc-133e6b3208d4/edit?page=0&amp;v=1087&amp;s=612”&gt; &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 91C4DE30-E36B-4097-816A-816A-8158637D10E2”，“ opcity”，“ optical” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ D2B25754-4A62-4EBC-912F-912F-77F4849E8D7E”，“ -Block-heading“ ID =” H-UI-Design-NBSP“&gt; UI/Design &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 59B93F45-511E-407C-8AAB-8AAB-6551C6E971BE”，“ dropcap”，“ dropcap”：false} AI Gen Gen Playground的及时工具包。 AI Playground Gen旨在与模型目录无缝接口，该目录是Uber可用的大型语言模型的全面存储库。该平台允许用户探索每个模型的详细规格，预期用例，成本估算和性能指标。在Gen AI游乐场中，用户可以从目录中选择任何型号，工艺自定义提示和调整参数（例如温度），以评估概念阶段的模型响应。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;tig data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ C448354B-DD5A-4C51-4C51-A2EA-A2EA-A2EA-EA2DBCD39D4F”，“ ALT” :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe7EvU-FNtBJuwXVWyMAruW8BJQ9v0q-cFRqxpoQ22ctq7Y8hnILHp5j_tBMjG9WKx0M2F6QXD0bUWDb-30XdlW_GNPoYBy_F7LBirv5q2IaJTRuM9IV2WF4hyaLHyCjREDTHnktDXK2GD_ABLdVQ9ZBhIW?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34; “ referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图2：模型目录UI。&lt;/figcatpion&gt; &lt;/figcaption&gt; &lt;/figife&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 9F156D2A-E307-4018-816B-816B-816B-86F8566F9868”，“ dropcap”，“ dropcap”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;图data-wp-block-name =“ core/image”数据 - wp-block =“ {“ align”：“中心”，“哈希”：“ 592D6AAB-FBBD-4E2D-94F6-86E138F792F9”，“ ALT”：“}” class =“ AlignCenter” aLignCenter“&gt;” AlignCenter“&gt; &lt;img decoding =” async &#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdtu3U7VhGD9p4zaJcUAHvWTkBfbGFQOubBOuRw2r9C7pXBHbECRibmJ9MlkbkAIndAU1tIVZSOUEdu1F_JirRlwgWkw3iT2Av8dG4nctl67hMOd5jandMMvzyF_rQf7FdXAvrbhJL8woWVXCscZo3E06Yg?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3 ：提示模板编辑页面。&lt;/figcaption&gt; &lt;/figut&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 8db44de9-dddd7-4fad-bfcb-17b-17bfc444ed350”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 5F2BF7B0-F410-410-410-4B4-BD57-A8479A0C3341”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}“}”}“}”} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/heading” data-wp-block =“ {” hash&#39;：“ 61df70e2-6fe2-6fe2-48ee-85e6-ca6e36e19efc”，“ level”级别，“：2} -block-heading“ id =” h-prompt-template-creation&gt;提示模板创建&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9529B325-DB14-4B77-8F62-8010C78F67BA”，“ dropcap”，“ dropcap”：false}提示构建器会自动为用户创建提示，并帮助他们发现针对其特定AI用例的高级提示技术。在Langfx框架顶部建造的自动推出构建器（Uber Internall Langfx在Langchain &lt;Sup&gt;™&lt;/sup&gt;上构建的Uber Internal Langfx服务）遵循以下步骤：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ F5B948F8-E353-4E66-A241-A241-301D5723FFD7”，“ Dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;strong&gt; &lt;strong&gt; &lt;strong&gt; &lt;strong&gt; 1。及时工程最佳实践：&lt;/strong&gt;纳入上下文抹布猎犬的最佳实践。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9AC781CE-84E0-4983-86C4-BD2982B837F7”，“ dropcap”，“ dropcap”：false}&gt; &lt;strong&gt; &lt;strong&gt; &lt;strong&gt; 2。提示构建器的说明和示例：&lt;/strong&gt;提供了一个模板列出详细说明和几个示例，以帮助LLMS ‌Craft用户提示。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 395F1476-49FA-4FA-4F39-96A5-4923CB55529B8”，“ dropcap”：dropcap“：fals}”&gt; &lt;strong&gt; &lt;strong&gt; &lt;strong&gt; &lt;strong&gt; 3。利用LLM型号：&lt;/strong&gt;利用LLM模型自动生成建议的提示，充当创造者，以帮助用户及时生成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ CE761521-F084-4DA5-ADC7-ADC7-89A89A8EC52F17B”} -Block-neading“ ID =” H-Advanced-Prompt-Guidance“&gt; &lt;br&gt;高级提示指南&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ D2FC4119-5D30-477D-96F1-BDCD0724DD1C”，“ dropcap”，“ dropcap”：false Builder}利用这些prin密码创建提示。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;图data-wp-block-name =“ core/table” data-wp-block =“ {“ hash”：“ FF3309D7-3851-46B8-ACB1-521D95555D370A”，“ hasfixedlayout”：true，true，“ head”：[ ]，“身体”：[]，“脚”：[]}“ class =“ wp-block-table”&gt; &lt;table class =“固定折叠”&gt; &lt;tbody&gt; &lt;ttroby&gt; &lt;tr&gt; &lt;tr&gt; &lt;td&gt; &lt;strong &gt;技术&lt;/strong&gt; &lt;/td&gt; &lt;td&gt; &lt;stry&gt;指令的及时原理&lt;/strong&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; cot（思想链），由&lt;a href引入=“ https://arxiv.org/abs/2201.11903” target =“ _ blank” rel =“ noreferrer noopener”&gt; wei等。 （2022）&lt;/a&gt; &lt;/td&gt; &lt;td&gt; cot（theque of-thought）提示通过中间推理步骤实现复杂的推理能力。您可以将其结合使用几乎没有提示，以在响应之前需要推理的更复杂的任务中获得更好的结果。&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;自动cot（自动思想链），在&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; a href =“ https://arxiv.org/abs/2210.03493” target =“ _ blank” rel =“ noreferrer noopener”&gt; Zhang等。 （2022）&lt;/a&gt; &lt;/td&gt; &lt;td&gt;使用诸如‌“逐步思考”之类的主词。指定完成任务所需的步骤。这是一种通过“逐步思考”提示来消除LLM来消除手动努力的方法，以一个逐一产生推理链。 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;提示链接&lt;/td&gt; &lt;td&gt;提示链接可以在涉及多种操作或转换的不同情况下使用。 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; tot（思想树）&lt;/td&gt; &lt;td&gt; &lt;a href =“ https://arxiv.org/abs/2305.10601” target =“ _ blank” =“ Noreferrer nooopener”&gt; Yao等。 （2023）&lt;/a&gt;和&lt;a href =“ https://arxiv.org/abs/2305.08291” target =“ _ blank” rel =“ noreferrer noopener”&gt; long（2023）&lt;/a&gt;提议的思想树（ tot）。该框架概括了‌链链，并鼓励探索思想，这些思想是通过语言模型解决一般问题解决的中间步骤。&lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;自动提示工程师&lt;/td&gt; &lt;td&gt; &lt;a href =“ https://arxiv.org/abs/2211.01910” target =“ _ blank” rel =“ noreferrer noopener”&gt; Zhou等。 （2022）&lt;/a&gt;拟议的APE（自动及时工程），这是一种自动指令生成和选择的框架。指令生成问题被构成自然语言合成，以使用LLMS生成和搜索候选解决方案的黑盒优化问题。&lt;/td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;tr&gt; &lt;td&gt;多模式COT提示&lt;/td&gt; &lt;&lt;/td&gt; td&gt; &lt;a href =“ https://arxiv.org/abs/2302.00923” target =“ _ blank” rel =“ noreferrer noopener”&gt; Zhang等。 （2023）&lt;/a&gt;提出了一种多模式的提出促进的方法。传统的COT专注于语言方式。相比之下，多模式COT将文本和视觉融合到两个阶段的框架中。第一步涉及基于多模式信息的理由生成。接下来是第二相，答案推理，它利用了信息生成的理由。&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/table&gt; &lt;/figie&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name =“ core/pearting” data-wp-block =“ {＆quot; latve“：3，“ hash”：“ 7D4C3A44-A2D5-4DCA-93A6-527FA0F80E77”} class =“ wp-block-heading” id =“ h-revision-control”&gt; H3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7611356a-d6fc-4894-994-99f8-16a8a2cdc3a0”，“ dropcap”，“ dropcap”：false}遵循基于代码的迭代最佳实践。用户可以修改用于测试响应的指令和模型参数，并使用测试数据集对其进行测试。提示模板的每次迭代都需要进行代码审查。批准并着陆后，创建了一个新的提示模板修订。&lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6B59A79E-89DB-4649-BF2F-593C2B605E98”，“ dropcap”：dropcap“：false}”生产服务流量，用户可能更喜欢在每次更新时都会更改生产中的及时模板。用户可以无意间在修订中引入错误；因此，部署提示模板应遵循结构化过程。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 978AC977-7920-40B8-8EA1-5670BC8C7943”，“ dropcap”，“ dropcap”：false}可以在任意部署名称下部署提示模板的系统，从而使用户可以“标记”其首选的及时模板用于生产模型。这样可以防止其生产服务中迅速模板的意外更改。该部署的提示模板通过ObjectConfig传播，这是Uber的内部配置部署系统。使用此安全部署具有明确的部署修订标签和通用配置同步（使用ObjectConfig系统），生产服务中的用户应用程序在其部署时将提示模板获取。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 72690EEE-bf6e-4d91-4d91-8167-bcad93e43434f9”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcPH2IGjaHaYkc7Qbn_Gcdg7h73GsmrPzcFBVieuq9lGqo5ob5l5GVWqxuDlqZC6r6MsGrm3RNrF8tmrn-94OR5kkmtlWYIVCIblLFkCfVe6nJaob6XsQQQ2D143KSiktcl8AEbw12OzvKjEImev2sPVocq?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy=&#34; No-Referrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图4：提示模板修订控制。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ e3f48ea1-be88-4be1-ac1-ac1e-c2d71fddde322”，“ dropcap”，“ dropcap”：false} =“ https://lucid.app/lucidchart/862DD0BA-26C2-4131-B00B-C6F0607DBFBF/Edit?page=7&amp;v=15814&amp;s=448”&gt; &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ F2F6F4E6-9C3E-44E-44E8-9F9B-09A52B1EB958”，“ opacity”，“ opacity” class =“ wp-block-separator has-alpha-enannel-opacity“&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {” hash&#39;：“ 424BD0FE-808A-4347-4347-8EA5-B0968F6B3C92”，“ level”级别“：2} -block-heading“ id =” H-Prompt-Template-evaluation-NBSP“&gt;提示模板评估&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 101A1FFF-401C-401C-401C-40B5-BCDE-0825CE0BF52A”，“ dropcap”，“ dropcap”：false}参与了评估一个或多个提示模板的性能以及其LLM模型，模型参数和上下文的过程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 03EA20CE-7042-4BCB-B0A8-9D7A1A6248C3”，“ dropcap”，“ dropcap”：false} ，可以使用两种方法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ E81CB057-6E8E-4A93-A93-A53D-1EEF-1EEF0B74FDF4”，“ ordered”，“ ordered”：ordered&#39;：fordeed&#39;：fords&#39;：fords&#39;：false，false，“ values”：“：” “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;使用llm作为评估器（llm作为法官）。&lt;/strong&gt;这种类型的评估对于主观质量或语言细微差别很重要的任务特别有用，例如生成应该引人入胜，有说服力或特定于风格的文本。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;使用自定义的，用户定义的代码来评估性能。&lt;/strong&gt;特定的指标和标准被编码并用于自动评估LLM的性能。此方法是有益的，因为它可以高度量身定制为衡量绩效的特定方面。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7AE607BE-77FD-4226-4226-A2D3-24F12DD9066F”，“ dropcap”，“ dropcap”：falsekit&gt;提供及时的模板。评估提示模板是一个直接，用户友好的提示模板，详细介绍了评估的说明。它包括简短的示例，指标和响应格式。生产及时模板提供了相同的功能，但用于生产。该模板在生产运行时得到水合，并且是进行性能评估的模板。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 39fd0734-4583-4583-4b45-ba0f-1d65253ce6663”，“ dropcap”&gt;在评估提示提示提示提示时，模板，输入数据集选项包括一个具有专门用于评估数据的标签数据的金数据集，以及从生产流量中得出的数据集，也用于评估目的。考虑其特定说明，上下文，涉及模型和模型参数的评估。&lt;br&gt; &lt;br&gt;为了提供不同及时模板的有效性的高级比较，通过在大型上应用及时模板来生成汇总的指标，从而生成了汇总的指标数据集。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;图Data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 205AC0FC-636B-4600-A700-A700-D96573505A28”，“ ALT”：“}” class =“” aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfidNj0hbdndvXHIB124H4Y9WEzqtllzC1R3d-DfNadLV0Ae49YU23NU0KY_RmX0G3LUC2Pb9J-pX9HBW8TC48ucniAYaidv-KlOidE0wlHUOz4KydXdbZf1rja1I_uKKWKsAKE4t0j-RUC5DZqSc0YPCG2?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-推荐人“&gt; &lt;figcaption class =“ WP-元素caption”&gt;图5：提示评估流程。&lt;/figcaption&gt; &lt;/fig&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ CBC4B816-3E33-43F4-81E6-2C3A4DBCB420”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 87111BFF-7D08-4D7D-B3F0-6056433091F0 class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 756646f6-ae74-4d87-bdcf-30218bc99080”，“ level”，“ level”：2} class =“ class =” WP -Block-heading“ id =” uber &lt;/h2&gt;的用例&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 498a6343-858c-4f6d-80a1-bcd945a2a36a”，“ dropcap”&gt;及时的工具包适用于某些生产用例Uber。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ D4AAAF66-BFCB-4F91-9606-9606-93C1053E0412”} -block-heading“ id =” H-offline-llm-service-nbsp“&gt;离线llm服务&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ bd5d7874-0980-4dc1-a09f-7355e4d94fb1”，“ dropcap”&gt; llm batch离线生成管道有助于大规模LLM响应生成的批处理推断。例如，该管道可能是Rider名称验证用例的组成部分，该案例验证了消费者用户名的合法性。它通过使用异步方法来评估Uber消费者数据库中的所有现有用户名以及新注册的用户的所有用户名。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ cbad961e-b4d4-4dde-ac3c-3862834326a2”，“ dropcap”，“ dropcap”：false} href =“ https://www.uber.com/blog/from-predictive-to-generative-ai/” target =“ _ blank” rel =“ noreferrer noopener”&gt; ma Studio &lt;/a&gt;，设置此离线生成管道很简单：用户选择相关数据集并将其作为数据输入。使用此数据集将提示模板动态水合。例如，如果用户的提示模板包含句子“这{{user_name}}是有效的人类名称吗？”管道从每个数据行中提取user_name列，使用它为每个条目生成自定义提示。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;图data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 1f81b66b-1039-49b6-49b6-aaf2-1acc04040edc2d”，“ alt”： “}” class =“ aligncenter”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercentent.com/docsz/docsz/ad_4nxc-6yd_prnms2rmcxa5mgla2gla2gc42rs__u4ge_u4genmerssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssso R376EZ6XKNENPX3-QMQY86PTJIMCCJB6MNSGN1YWVUDBHWYALUYQ9QJZQMU7HX7C0XSLTE1H_A0BNVMYO6XI？ =“ no-referrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图6：提示离线生成。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ dc3cb8ce-6df5-4f45-b707-d107-d107-d10d22b005bc”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ 88887d03-d00a-4c34-a278-e1f38e503b34”} -block-heading“ id =” H-online-llm-service“&gt; &lt;br&gt;在线LLM服务&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 29d8506e-c759-4634-ae99-4a99d8a14​​b60c”，“ dropcap”，“ dropcap”：false}包含需要替换为呼叫者提供的特定运行时值的动态占位符。呼叫者负责保湿并通过必须替代占位符的价值。该模型的Hyperspace服务目前支持使用基于Jinja的模板语法替换。目前，我们仅处理替代字符串类型。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 0bfd2754-99e3-438c-9dc-9dc0-ed258536cb36”，“ dropcap”在提示，模板和模型中支持粉丝范围的功能。扇出的功能可以分为：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ BCCB522E-36EC-459D-B4E3-501761A0EB8B”，“订购”：false“：false”：false，“ values”值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;模板：&lt;/strong&gt; API模板包括将有效载荷格式化为特定于供应商的API我们从服务中暴露的通用数据模型的结构。支持多个模板，例如聊天完成和文本完成模板。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;提示和模型：&lt;/strong&gt;提示将固定在特定的模型和模板上。该服务获取提示，并使用所需的模型和模板参数调用Genai API。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7C14D858-B787-4EE2-B707-0707-0F96A43AF69A”，“ dropcap”，“ dropcap”：false}通过摘要用例以上功能。联系人是用于与客户支持代理联系的支持票。在某些情况下，多个代理可以处理接触。在这种情况下，接收交接的新代理必须通过机票来了解上下文，或者要求客户重申问题。通常是前者。为了解决这个问题，我们在从一个代理到另一个代理商的交接时向代理提供了摘要。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ BE530B64-38DC-4BE9-4BE9-8AB4-F0D53555B1”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcRypOfJB3oF0Mz9dz7e1y2WQkZdXKhAMYmIaEvUJWh2wCCX8EMwIUoFP8jMyihLUsu-PIC980aeARb53xdcTvKH74bAba5T22uE4tHMAi4M3hKUshjk_KLrzSSG62r0eVkiThFW0Igpd-k1wMH0rsmKDGT?key=zCghPvr7E6rGgGY5x5OXaQ&#34; alt=&#34;&#34; referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图7：提示执行和摘要流。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ F6E92DA4-70EC-4B20-8B20-8B0F-8F0A52150B8E”，“ Dropcap”，“ Dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 90C930A0-A992-4901-8007-5433411EBB50 class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 4D78B852-E5C7-4885-8E69-8E69-80C6DC008FBF”，“ -block-neading“ ID =” H-Monitoring-NBSP“&gt; Monitoring &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2CB39B1B-6BA3-4DFB-9C19-9C19-8D3AB432A36E“生产及时模板的性能。目的是跟踪生产中当前及时模板的回归和性能。每日性能监控管道朝着生产流量进行评估。指标包括延迟，准确性，正确性等，以监视每个提示模板生产迭代。&lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 4C3B9783-1E40-4BA5-8CD8-8CD8-CCD41A9185CE”，“ dropcap”，“ dropcap”：false}每天通过性能监控指标获得刷新。请参阅&lt;a href =“ https://www.uber.com/blog/enhancing-the-the-the-cequality-of-machine-learning-systems-atsystems-at-scale/” target =“ _ blank” rel =“ noreferrer noopener” &gt; MES博客文章&lt;/a&gt;有关MES仪表板&lt;a href =“ https://www.uber.com/blog/enhancing-the--quality-equality-of-machine-learning-systems-atsystems-atscale/ “&gt;。&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 96067813-BED7-4AC5-4AC5-BD12-06EF0E6AB27F”，“ obacity”，“ obacity”：“ alpha-channel”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：1，“ hash”：“ A8A354C4-350E-440F-B08A-278402412A71“}” class =“ wp-block-heading” id =“ h-conconclusion”&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2FE53062-4AC0-49A1-9BE1-8BD8C99999999F2BA9”，“ dropcap”，“ dropcap”：false}该博客中概述的工具包代表了一个综合框架，旨在在Uber的各个开发和生产阶段增强与LLM的互动和利用。从对Gen AI游乐场中LLM功能的最初探索到详细的迭代和及时模板的创建，该工具包为新手和专家用户都有效地利用LLMS的动力。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A2BE8B6C-FF04-4AE3-AED4-56620FA71E06”，“ dropcap”，“ dropcap”：false}该工具包可以采用系统的方法来提示设计，结合高级指导技术和强大的评估方法，以确保生产高质量，有效的提示。及时模板的结构化生命周期（从开发到生产用法和监视）都可以确定每个模板经过严格测试和优化的性能。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“步骤，我们希望开发及时的工具包，以与在线评估相结合，并与抹布进行评估和离线生成。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ A5CFB2C3-E1F4-48D8-9C70-33469D3A4805 ：false}“ class =”有small-font-size”&gt; langchain &lt;sup&gt;™&lt;/sup&gt;是在美国专利和商标办公室注册的Langchain Inc.的商标。  本文提到的所有其他产品和公司名称可能是其各自所有者的商标。这些标记的使用并不意味着与其各自所有者的任何隶属关系或认可。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 71F5A7BD-1692-4DE5-4DE5-AF7A-CB4FB4FB0EFB0EFA5EC” ：false}“ class =” hap-small-font-size&gt;求职照片归因：MikemacMarketing的“人工智能与AI＆​​Machine Learning”。该图像用2.0许可证标记了CC：无修改。&lt;/p&gt;</description>
      <pubDate>Tue, 26 Nov 2024 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Serving Millions of Apache Pinot™ Queries with Neutrino】用中微子提供数百万的Apache Pinot™查询</title>
      <link>https://www.uber.com/blog/serving-millions-of-apache-pinot-queries-with-neutrino/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;e881b093-d759-4d94-adcc-4bb52b2f698e&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a8cf8484-ba77-49bb-a4bd-e9a522de7491&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Apache Pinot&lt;sup&gt;™&lt;/sup&gt; is a real-time OLAP database capable of ingesting data from real-time streams and offline data sources. Uber has used Pinot for over 6 years, and in that time we’ve seen a rapid increase in its adoption. Today, Pinot handles a wide spectrum of use cases at Uber, from real-time use cases with over 1 million writes per second, 100 QPS, and less than 500 ms latency, to use cases that require &lt;a href=&#34;https://www.uber.com/blog/pinot-for-low-latency/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;low-latency analytics on offline data&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;574c79c2-fa29-4ada-a5d7-f36fc39696ab&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In this blog, we share how our platform users leverage Neutrino, an internal fork of Presto&lt;sup&gt;®&lt;/sup&gt;, to query their data in Pinot.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7df2c3b4-1232-43ae-916d-ed98e48976b5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Throughout this blog, queries refer to read queries,&amp;nbsp; because in Pinot we usually refer to writes as ingestion.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;984756fb-93c5-4b61-ac93-9132a1b303e9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a935428f-4b50-4447-ae82-5533a893bfd7&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-background&#34;&gt;Background&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;321b6370-0ced-4e5f-940d-62456902980b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pinot can be queried using SQL, but it has two query engines: the V1 Engine and the more recent Multistage Engine. As of this writing, Pinot’s V1 Engine is the default engine, and the Multistage Engine has to be explicitly configured for use.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;788922ee-a2ba-4433-96be-582e75fe248d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pinot’s V1 Engine can handle higher QPS at a much lower latency when compared with the Pinot Multistage Engine. The tradeoff is that ‌SQL features are quite limited with the V1 engine. Presto is a stateless query engine capable of reading from many different data sources via its connector architecture.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2342b5b8-f632-4031-9577-99e165003fc7&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;4c37084d-a105-4bdf-931c-3effd7ae1590&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-pinot-s-v1-query-engine&#34;&gt;Pinot’s V1 Query Engine&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9b0731fc-6cde-4cbf-86da-1969216c8d24&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pinot’s V1 Engine is optimized for high QPS and low latency. The engine has a scatter-gather execution and it only supports queries with a single SELECT, WHERE, GROUP BY, and ORDER BY clause. In other words, it doesn’t support sub-queries, joins, or window functions. The engine has a custom planner that handles specific query shapes with custom operators. For example, a SELECT query without ORDER BY uses a &lt;em&gt;SelectionOnlyOperator&lt;/em&gt;, whereas one with an ORDER BY uses a &lt;em&gt;SelectionOrderByOperator&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7a41b408-6b11-485b-8bce-3ea4ae16d3d9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 1 shows a high-level design of Pinot query execution in the V1 query engine. Pinot brokers receive HTTP requests from clients, which are scattered to the servers that‌ ingest and store the data. The results are sent back to the broker, which performs a reduce before sending it back to the client.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1101585,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;72d8d018-2a08-4b21-8def-617c25155daf&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;647&#34; height=&#34;468&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-1-17338905589143.png&#34; alt=&#34;&#34; class=&#34;wp-image-1101585&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=647,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-1-17338905589143.png 647w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-1-17338905589143.png 300w&#34; sizes=&#34;(max-width: 647px) 100vw, 647px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&amp;nbsp;Figure 1: Pinot’s V1 Engine has a scatter-gather design.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;67556974-bbb9-447d-b01b-207a2223851e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;a51bf39d-6f9b-420f-8a22-f39cbf5a1f80&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-pinot-s-multistage-query-engine&#34;&gt;&lt;br&gt;Pinot’s Multistage Query Engine&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2229e477-8d52-4a5d-969b-68711d46a5a0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pinot’s Multistage Engine was made generally available in 2023 with Pinot 1.0, and it supports distributed joins, window functions, and sub-queries. It uses Apache Calcite™ to create a logical plan, which is then used to derive the physical plan. The plan may consist of multiple stages, and data transfer between each stage may incur a shuffle. The entirety of the plan, except for the penultimate stage or two, is run on the servers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9a698396-827c-4aa2-9da9-887db83ac088&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 2, taken from the Apache Pinot documentation, shows the execution model.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;993da0da-7494-494f-a5a9-e083d47a94d6&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXed8FO_EOgN3KY8oDIn8F1AIGd3K5c1i4uUXAPjIeYf879uQXrkb8tdbJO_qDtm0r0kvZCtC7uWtECR9Gl1Y7UBOpBC0GSsJqzOyHgg_wWZ1EQ09jgIQTpIrm0_xce86UYBLNC4deGLbX4hV_3e6VaB_RgI?key=IEbiY4aSF3msvi6T_qc0CA&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Pinot’s multistage query execution model. Source: &lt;a href=&#34;https://docs.pinot.apache.org/reference/multi-stage-engine&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Apache Pinot Docs&lt;/a&gt;.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0511e894-8237-4907-b531-0faa6fdb60f2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8cade7c6-b4c5-46b8-9ca0-c5bdb963456f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When a Multistage Engine query is submitted to the brokers, the broker uses Calcite to create and optimize a logical plan, which is converted to a physical plan that’s dispatched to the servers for execution. The servers execute their assigned stages, shuffling data between them if required. The last stage in each server sends the data back to the broker, where a final reduce runs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;a5b68727-4a74-4293-a17a-f662ca2d2c7e&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-presto&#34;&gt;&lt;br&gt;Presto&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ba193dc9-4b18-4948-85c6-870588bd785e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Presto is a stateless query engine designed for interactive analytics use cases. It has its own SQL dialect called PrestoSQL. Presto’s connector architecture allows it to query any data source: be it a distributed storage system like object-stores/HDFS, where the table layout may be defined via something like the Apache Hive Metastore, or SQL databases like MySQL and Apache Pinot. Presto supports joins, sub-queries, and arbitrarily complex queries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d2b60bb2-7cc3-4e4f-b450-0212dcd2bf19&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A Presto deployment consists of a coordinator, which accepts the queries and returns the results, and many stateless workers which execute the query by running all the operators.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0022c2b1-f49b-45c9-b4fd-c3e35c6ee6fe&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Typically, a Presto cluster runs queries at less than 50 QPS, with latencies on the order of a few seconds to up to several minutes. Figure 3 shows Presto’s execution at a high level. Presto’s coordinator receives queries from clients via an HTTP request, compiles and plans the query, and dispatches the plan to the workers. The workers execute the query, exchanging data between them as required.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;6e45b682-36d6-432d-93b1-f64356261f2c&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXckm6y3eiKdVHgINX3RRMujp22vqoJAOKPXOk00gLC_uCiDk-RenlxNLoyi0ccjUn4cO8knPBiK1POwOhxtJVBNwppeTRr170vwJyEGnFj6p4Vs0XshvQlScO04-LO-TyuU5tCDaUU0NqXPhCbgRKJO7QQ?key=IEbiY4aSF3msvi6T_qc0CA&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: High-level execution of Presto.&lt;br&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9b0543e0-61df-4ce1-b865-00681d6e2db3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;aa074041-9e5c-4457-8d7a-7ae23ca14ce5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Presto allows connectors to alter the query plan and read and write to any data source. Connectors can implement the &lt;em&gt;ConnectorPageSourceProvider&lt;/em&gt;, which Presto calls in the table scan operator to read data. They can also implement the &lt;em&gt;ConnectorPageSinkProvider&lt;/em&gt; if they want to write the query output using a custom mechanism.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dd88a3d4-f7b8-4b1e-bed2-f144b9f6f4ba&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;99eda46b-589c-477c-b1ce-838cfff281fc&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-leveraging-neutrino&#34;&gt;Leveraging Neutrino&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;62b947aa-e7f5-4d52-9387-48601b421a50&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Neutrino is an Uber-internal fork of Presto that’s capable of running queries at over 10,000 QPS with sub-second latencies. Neutrino currently proxies Pinot queries for roughly 95% of our use cases. But as the following sections show, it isn’t just a proxy, but also a query execution engine running logically on top of the Pinot V1 Engine.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;3e647a07-4c14-4e0c-aa8b-a99bc6dc5bd0&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-design&#34;&gt;Design&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;17016b3b-8c55-47bc-b42b-bd828c7c7411&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With Neutrino, we’ve optimized Presto for high QPS and low latency. Neutrino runs the coordinator and the worker in a single JVM, and the HTTP calls between the worker and the coordinator are bypassed in favor of method calls. We achieved this by making internal changes that required tweaking Presto’s execution engine in several places.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;87f6ffb9-533c-43ac-aa66-344ed46c318a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We also have an internal fork of the Presto-Pinot Connector Optimizer to support query pushdown. Presto SQL submitted by a user goes through the logical planner and a bunch of optimizers, which are common for all connectors. After all the common optimizers run, Presto runs the specific connector optimizer relevant to the query. In our case, our internal fork of the Presto-Pinot Connector Optimizer runs. At a high level, the optimizer tries to find the maximal sub-plan that can be pushed down to Pinot, and converts it into a table scan node with a generated Pinot query.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;3a8f8864-e7de-45fa-828f-807aa1b25c1a&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-multistage-execution-via-neutrino-and-the-pinot-v1-engine&#34;&gt;&lt;br&gt;Multistage Execution via Neutrino and the Pinot V1 Engine&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;292de9ee-e668-42b5-98ff-9d3199fa1cfb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To better understand the design described above, consider the Neutrino query in Figure 4, which tries to mimic an Uber-themed use case.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1101652,&amp;quot;width&amp;quot;:&amp;quot;354px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;76fbe998-a93e-422e-bf96-f8748ecfea76&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;1017&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-4-17339483771858-1024x1017.png&#34; alt=&#34;&#34; class=&#34;wp-image-1101652&#34; style=&#34;width:354px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-4-17339483771858.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-4-17339483771858.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=150,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-4-17339483771858.png 150w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-4-17339483771858.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-4-17339483771858.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1572,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-4-17339483771858.png 1572w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Neutrino query leveraging window functions to deduplicate rows on (&lt;em&gt;trip_id, line_item&lt;/em&gt;) before performing an aggregation.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fa4fd676-476c-4e76-9a97-91a23f90974c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f4a7b909-f276-42bc-9b55-8388c3ec22ed&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Here we’re trying to compute the total trip amount at the line-item level over a period of time. However, the original real-time stream may have multiple entries for the same line item and trip, as amounts can change later due to various reasons (like a rider adjusting the tip amount). We can’t use Pinot upserts because it would lead to too many primary keys.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;423083d9-89ce-46b7-b6f1-bb4c73fbcedc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The query leverages window functions to keep the latest amount for each line item and is essentially deduping rows at query time, with the deduplication key being &lt;em&gt;trip_id, line_item&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6750474b-0284-4036-87b3-8a1519b0ed8a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 5 shows the query plan in Neutrino for this query. The table scan is executed by sending the SQL query to the Pinot broker.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1101647,&amp;quot;width&amp;quot;:&amp;quot;413px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;4786f4eb-86d3-474e-b21b-42de415ff248&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;956&#34; height=&#34;856&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-5-17339476173180.png&#34; alt=&#34;&#34; class=&#34;wp-image-1101647&#34; style=&#34;width:413px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=956,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-5-17339476173180.png 956w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-5-17339476173180.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/12/figure-5-17339476173180.png 768w&#34; sizes=&#34;(max-width: 956px) 100vw, 956px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Query plan for the query in Figure 4.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1628c092-cf24-40c4-a40f-65ff3089712e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f2e890ab-948a-47ad-aa04-c8ce51f30dc7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Neutrino pushes down a SQL query to Pinot that Pinot’s V1 Engine can run, and executes the rest of the plan within itself using its own execution engine. This design achieves something remarkable:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f02c3b7b-c217-4a02-9eb6-43a71e03b040&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;We can support complex query shapes that couldn’t be supported with Pinot’s V1 Engine like window functions and sub-queries&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;We can run such queries at hundreds of QPS with very minimal hardware, without requiring any user hints for query optimization&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e65c12f4-e1ce-41a0-9072-2b7eb1f655d7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One may wonder why we don’t use the Pinot MSE for this, as the MSE can support arbitrarily complex queries. There are a few reasons for this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ec1ceb3a-8ee8-4527-a05b-892b0006c121&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;MSE by default resorts to shuffles, which don’t scale well. Neutrino, on the other hand, executes the entire plan using a single thread.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Our internal testing suggests MSE can’t scale to 100 QPS. However, queries like the above may need to be run at over 500 QPS.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;MSE only became generally available recently, and queries such as the one above have been running reliably in Neutrino for years.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;233a9666-32e6-4d18-ac30-d01237c1382c&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-rate-limiting-at-the-routing-layer&#34;&gt;&lt;br&gt;Rate Limiting at the Routing Layer&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2ccfc265-75ac-48ae-9722-667d77beca96&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our internal load balancing system, dubbed Muttley, provides a way to configure the QPS for each caller. If a caller exceeds their set QPS, then Muttley starts dropping requests before they reach the target service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;03e6ad0c-e205-4dd6-b178-52b851418b57&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We use this extensively in Neutrino to shield it from QPS spikes from our over 100 unique callers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;f7808e6a-e914-4ad7-8164-5864c927b269&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-query-fingerprinting-and-validation-framework&#34;&gt;&lt;br&gt;Query Fingerprinting and Validation Framework&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;807d7c14-5c1c-4c27-abdb-2c57e0e96e54&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We’ve added a simple mechanism to compute query fingerprints in Neutrino. Given Pinot is primarily used for powering end-user-facing applications, most of our traffic is from back-end services, which have a predetermined query fingerprint. So, the number of unique query fingerprints is multiple orders of magnitude lower than the total QPS, and is also a very effective dimension for identifying expensive queries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fba15a22-4a7f-41ec-837f-6eb3e626a65e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Furthermore, we use Flipr, Uber’s dynamic config store, to configure a deny list of fingerprints. This is quite useful to mitigate rare scenarios where one query may impact other callers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;25931d23-94df-4da7-b159-366d9a79448f&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-dynamic-split-execution-timeouts&#34;&gt;&lt;br&gt;Dynamic Split Execution Timeouts&lt;/h3&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;568px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;176c1b20-4083-4a56-b3af-98972eeff07a&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcsWLieVMwU3pXSWyB1s5CbxVPXjEalGrcNsOXQbKoeTLRaIWE2BZk7e0ZJVODO1FARn8oed10f25gGx430A3yvd0kC-RKId_gEQg6Ehr6omR3Ognc7HV8NlrDlhXFaNgax2jo7F3pb1dex7JruH6a7ZnCS?key=IEbiY4aSF3msvi6T_qc0CA&#34; alt=&#34;&#34; style=&#34;width:568px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Dynamic split execution timeout logic.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;67ceb3ca-6f6a-409b-8fe5-59a1d3450e8a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;87119003-f841-46e0-985f-c91ca407bbe5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Three years back, we had a couple of incidents due to one user overwhelming our Neutrino deployment, causing impact to other high-tier callers. The issue essentially was: if a given caller running at a sufficiently high QPS experiences high latencies, it leads to a pile-up of requests and threads in Neutrino. At the time, we wanted to keep the number of internal changes in our fork as low as possible, because we wanted to keep in sync with Presto’s main branch and move our fork ahead every few months.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9c00415d-fb25-47b1-bf1d-507dbb78edc9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We wanted to solve this problem quickly and with minimal surgical intervention to Presto’s core code. To achieve this, we built a simple mechanism that dynamically adjusted Pinot’s query timeout in case of high load. Even to our surprise, this simple mechanism, combined with our routing-layer-based rate limits, has served us well over the past 3 years with no repeat of such incidents.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;04ba68ae-7f12-4d2e-8672-2c8c24dd7e5c&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-historical-context&#34;&gt;&lt;br&gt;Historical Context&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dbfa61c3-9c6e-4297-860c-7b04034b546a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One may wonder why we didn’t directly expose PinotSQL to users and build a simple passthrough proxy. The reasons for going with the Neutrino approach are that at the time, Uber had two OLAP databases: AresDB and Pinot. Using Presto, we could hide the complexity of dealing with different query languages across these two stores. Beyond that, using Presto, we could enable multistage queries, which weren’t available in Pinot at the time (2019).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;7d958c3d-b6bc-4de2-b7cd-94f87707e079&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-challenges&#34;&gt;&lt;br&gt;Challenges&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;50454c5d-05b0-4c26-b1c4-186068573e00&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We have faced a few challenges working with Neutrino over the years.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c94e05e8-3684-4d1b-ba85-d9cb55d1eb90&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;First, Neutrino is a complex system for users. Neutrino, as part of its design, has to do SQL-to-SQL translation. Moreover, it can only partially push down the query plan to Pinot. Naturally, the response returned by Pinot has to be trimmed at a certain limit, and since we send a SQL query to Pinot, the limit has to be enforced using the LIMIT clause.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fec4fbac-d74c-4677-a6d6-9ffe5b060933&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The pushed-down plan may not always have a limit, and Neutrino may need to put a default limit of its own in such cases (or fail the query). Putting a default limit of our own changes the semantics of the query and can lead to incorrect results, while failing the query will lead to a poor experience for users. This is also demonstrated in the example in Figure 5, where we add a default limit of 10,000.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c758f982-accc-4a9f-bcb0-e3b2583d1e38&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Additionally, a visual inspection of the query isn’t enough to determine how the pushed-down query looks, and changing a single UDF could lead to a complete change in the pushed-down query.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d0874aef-8420-4fb8-b524-d036343d3413&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The second challenge was a lack of join support. Neutrino doesn’t support joins, and can only support queries whose unoptimized plan-tree has no node with a greater than one child node.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7a58e363-10c1-443c-ac17-57055ac8b9d5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Multistage Engine in Pinot enables distributed join queries, but since Neutrino can only translate to Pinot V1 Engine queries, we’re unable to take advantage of the Multistage Engine with Neutrino. This also put us in a position where our current tech stack didn’t align with the next-generation query engine in Pinot.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c3254ed6-b57d-4b58-9b83-773a3f0457c9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The third challenge was breaking tenant isolation. Neutrino proxies traffic from over 100 callers, many of which may be hitting their dedicated Pinot tenants. So, Neutrino ends up becoming a shared resource and breaks tenant-level isolation at the query level.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e8d63612-32b7-4491-b19e-07e39ea6c68d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The last challenge was development overhead. We’ve spent significant effort over the last 2-3 years fixing a ton of query translation issues and improving support for query pushdown. However, Pinot continues to improve rapidly still, and catching up to the new SQL features in Pinot (even new Pinot UDFs) requires a corresponding change in Neutrino. This often becomes a bottleneck for users trying to leverage these new features.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;007f6534-c06a-4a7e-abbe-00e0eb8471a8&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-scale-and-impact&#34;&gt;&lt;br&gt;Scale and Impact&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;578fb714-b8fd-4bd1-a9db-c80f11e521a0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Neutrino is a business-critical, tier-0 service at Uber, and serves more than half a billion Apache Pinot queries daily. Our estimates suggest that more than a third of those queries leverage Neutrino’s execution engine, i.e. they only partially push down the query and execute the rest of the plan within Neutrino.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4981dd44-f59e-42c4-8a07-f0beca467845&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With over 100 unique service callers querying over 1,000 tables, Neutrino and Apache Pinot easily serve 100 use cases across all our lines of business.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9928b44e-113a-4dc7-91ce-55477c4b699b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0929bab1-5781-4d32-b5d9-1d16789b03f5&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-next-steps&#34;&gt;Next Steps&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2f8653dc-1fd4-4db2-8ce5-1558cf75035e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Currently, we only serve a handful of use cases via the Pinot Multistage Engine at Uber. In a subsequent blog, we’ll share how we plan to adopt Pinot SQL at Uber more broadly, and how we plan to address the challenges with our Neutrino-based approach.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c3283466-39e2-455a-9628-5fac51fb3096&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;e38ad6d1-506c-4313-a62e-f8cbc023450c&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7bb07e93-6bab-4dfa-bee2-69ea1879722f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our experience at Uber of serving hundreds of low-latency analytics use cases has made it clear that OLAP systems should be able to support query features such as window functions and sub-queries. Apache Pinot didn’t have this support until 2023, and Neutrino has proven to be immensely useful in bridging that gap. Moreover, Neutrino’s approach of running the entire plan within a single process has proven to be scalable enough to handle 10,000 QPS reliably.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;79b746e5-e7fa-4e40-a20f-3dbf29a2ee50&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Apache&lt;sup&gt;®&lt;/sup&gt;, Apache Pinot&lt;sup&gt;™&lt;/sup&gt;, Apache Hive&lt;sup&gt;™&lt;/sup&gt;, Apache Calcite&lt;sup&gt;™&lt;/sup&gt;, Pinot, and Hive are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;00bf4a57-ab56-410e-9e0f-ac42bd409e36&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Oracle, Java, MySQL are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;e7fd827a-9427-4a8c-8f62-afcbb7a39077&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Presto&lt;sup&gt;®&lt;/sup&gt; is a registered trademark of LF Projects, LLC.&lt;/em&gt;&lt;br&gt;Cover Photo Attribution: “&lt;a href=&#34;https://openverse.org/image/c8fc21ac-901a-4fe5-a3ea-96669610fecb&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Let Sparks Fly&lt;/a&gt;” by &lt;a href=&#34;https://openverse.org/image/collection?source=flickr&amp;amp;creator=mightyboybrian&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;mightyboybrian&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by-nc/2.0/?ref=openverse&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CC BY-NC 2.0&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;e7fd827a-9427-4a8c-8f62-afcbb7a39077&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Copyright Apache Pinot. Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements under the Apache License, Version 2.0.&lt;/p&gt;】&lt;h1 data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，“ hash”：“ e881b093-d759-4d94-4d94-adcc-4bb52b52b2f698e”} -block-neading“ id =” H-Instruction“&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A8CF8484-BA77-49BB-a4bd-e9a52222222de7491”，“ dropcap” SUP&gt;™&lt;/sup&gt;是一个实时OLAP数据库，能够从实时流和离线数据源中摄入数据。 Uber使用了Pinot已有6年以上，在那段时间，我们看到了它的采用迅速增加。如今，Pinot在Uber上处理各种用例，从每秒超过100万的实时用例，100 QP和低于500毫秒的延迟，到需要&lt;a href =的用例，https：/ /www.uber.com/blog/pinot-for-low-latency/“ target =” _ blank“ rel =” noreferrer noopener“&gt; of Offline数据上的低延迟分析&lt;/a&gt;。&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 574C79C2-FA29-4ADA-4ADA-AADA-A5D7-F36FC3969696AB”，“ dropcap”，“ dropcap”：false} ，我们分享我们的平台用户如何利用Neutrino（Presto &lt;sup&gt;®&lt;/sup&gt;的内部叉子）在Pinot中查询其数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7df2c3b4-1232-43ae-916d-ed98e48976b5”，“ dropcap”，“ dropcap”：false} ，查询是指阅读查询，因为在Pinot中，我们通常将写入称为摄入。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 984756FB-93C5-4B61-AC93-9132A1B303E9”，“ opcity”，“ opcity”：“ alpha-channel&#39;} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ A935428F-4B50-4447-AE82-5533A893BFD7”，“ LEVEL”，“级别”：2} -block-heading“ id =“ h-background”&gt;背景&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 321B6370-0ced-4E5F-940D-62456902980B”，“ dropcap”&gt;使用SQL查询，但它具有两个查询引擎：V1引擎和最新的多阶段引擎。截至撰写本文时，Pinot的V1引擎是默认引擎，必须明确配置多阶段的引擎。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7888922EE-A2BA-4433-96BE-582E75FE248D”，“ dropcap”，“ dropcap”：false}与Pinot多阶段发动机相比，可以在较低的延迟中处理较高的QP。权衡的是，V1发动机的SQL功能非常有限。 Presto是一种无状态查询引擎，能够通过其连接器架构从许多不同的数据源读取。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash“：” 2342b5b8-f632-4031-9577-99E165003FC7“ class =“ wp-block-separator has-alpha-chanNel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ 4C37084D-A105-4BDF-931C-931C-3EFFD7AE1590”} -Block-neading“ ID =” H-PINOT-S-V1-QUERY-INGINE”&gt; PITOT的V1查询引擎&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 9B0731FC-6CDE-4CBF-86DA-1969216C8D24”，“ DROPCAP”针对高QP和低延迟进行了优化。该引擎具有散点机的执行，它仅支持单个选择的查询，其中，按子句组成和订购。换句话说，它不支持子查询，连接或窗口功能。该引擎具有一个自定义规划师，可以使用自定义操作员处理特定的查询形状。例如，一个无订单的选择查询&lt;em&gt; selectiononlyserator &lt;/em&gt;，而使用&lt;em&gt; selectiveordordorderbyoperator &lt;/em&gt;。&lt;/em&gt;。&lt;/p&gt;的订单。&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7A41B408-6B11-11-485B-8B-8BCE-3EA4AE16D3D9”，“ dropcap”，“ dropcap”：false} V1查询引擎中Pinot查询执行的高级设计。 Pinot经纪人从客户端接收HTTP请求，这些请求分散到摄入并存储数据的服务器。结果将发送回经纪人，该经纪人在将其发送回客户之前执行降低。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1101585，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ 72D8D018-2A08-4B21-8DEF-617C251555DAF”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 647” height =“ 468” src =“ https://blog.uber-cdn.com/cdn-cgi/image/mimage/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-content/wp-contents/uploads /2024/12/figure-1-1-17338905589143.png“ alt =” class =“ wp-image-1101585” srcset =“ https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cdn-cgi/image/image/image/width = 6477 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/12/fige-17338905589143.png 647W，https：//blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/宽度= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/12/figure-1-17338905589143.png 300W 300W“ sizes =”（max-witth：647px） =“ No-Referrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图1：Pinot的V1引擎具有散点收集设计。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 67556974-BB9-447D-B01B-207A22223851E”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ A51BF39D-6F9B-420F-420F-8A22-F39CBF5A1F80”} -block-heading“ id =” H-Pinot-S-Multistage-Query-engine&gt; &lt;br&gt; Pinot的多阶段查询引擎&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2229E477-8D52-4A5D-969B-68711D46A5A0“，” dropcap“：false}”&gt; Pinot的多阶段发动机通常在2023年使用Pinot 1.0，并且支持分布式连接，窗口函数，窗口函数和子征服。它使用Apache Cortite™来创建逻辑计划，然后将其用于得出物理计划。该计划可能由多个阶段组成，每个阶段之间的数据传输可能会导致混乱。除倒数第二阶段以外的整个计划都在服务器上运行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9A698396-827C-4AA2-9DA9-9DA9-887DB83AC088”，“ DROPCAP”取自Apache Pinot文档，显示执行模型。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 993DA0DA-7494-494F-A5A9-E083D47A94D6”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXed8FO_EOgN3KY8oDIn8F1AIGd3K5c1i4uUXAPjIeYf879uQXrkb8tdbJO_qDtm0r0kvZCtC7uWtECR9Gl1Y7UBOpBC0GSsJqzOyHgg_wWZ1EQ09jgIQTpIrm0_xce86UYBLNC4deGLbX4hV_3e6VaB_RgI?key=IEbiY4aSF3msvi6T_qc0CA&#34; alt=&#34;&#34; referrerpolicy=&#34;no-推荐人“&gt; &lt;figcaption class =“ WP-元素caption”&gt;图2：Pinot的多阶段查询执行模型。来源：&lt;a href =“ https://docs.pinot.apache.org/reference/multi-stage-engine” target =“ _ blank” rel =“ noreferrer noopener”&gt; apache-docs docs &lt;/a&gt;。 &gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 0511E894-8237-4907-B531-0FAA6FDB60F2”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 8cade7c6-b4c5-46b8-9ca0-c5bdb963456f”，“ dropcap”，“ dropcap”：false}发动机查询已提交给经纪人，经纪人使用方解石来创建和优化逻辑计划，该计划将转换为派遣到服务器的物理计划进行执行。服务器执行他们分配的阶段，如果需要，将它们之间的数据调整。每个服务器的最后阶段将数据发送回经纪人，最终降低运行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ A5B68727-4A74-4293-A17A-A17A-F662CA2D2C7E” -Block-heading“ ID =” H-PRESTO“&gt; &lt;br&gt; PRESTO &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ ba193dc9-4b18-4948-4948-85c6-870588bd785e”，“ dropcap”无状态查询引擎专为交互式分析用例设计。它具有自己的SQL方言，称为Prestosql。 Presto的连接器体系结构允许它查询任何数据源：无论是一个分布式存储系统，例如Object商店/HDFS，可以通过Apache Hive Metastore之类的内容定义表布局，或者可以使用MySQL和Apache Pinot之类的SQL数据库来定义。 Presto支持加入，子征服和任意复杂的查询。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ d2b60b2-7cc3-4e4f-b450-021212bf19”，“ dropcap”，“ dropcap”：false}由一个协调员组成，该协调员接受查询并返回结果，以及许多通过运行所有操作员来执行查询的无状态工人。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 0022C2B1-F49B-45C9-B4FD-C3E35C6EE6FE”，“ dropcap”，“ dropcap”：false} Presto群集以不到50 QP的速度运行查询，潜伏期为几秒钟到几分钟。图3显示了Presto的执行高水平。 Presto的协调员通过HTTP请求收到客户端的查询，编译和计划查询，并将计划派遣给工人。工人执行查询，根据需要交换数据。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;图data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 6E45B682-36D6-432D-93B1-F64356261F2C” :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXckm6y3eiKdVHgINX3RRMujp22vqoJAOKPXOk00gLC_uCiDk-RenlxNLoyi0ccjUn4cO8knPBiK1POwOhxtJVBNwppeTRr170vwJyEGnFj6p4Vs0XshvQlScO04-LO-TyuU5tCDaUU0NqXPhCbgRKJO7QQ?key=IEbiY4aSF3msvi6T_qc0CA&#34; alt=&#34; “ referrerpolicy =“ no-refferrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图3：presto的高级执行。&lt;br&gt; &lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9B0543E0-61DF-4CE1-B865-00681D6E2DB3”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ AA074041-9E5C-4457-8D7A-7A-7AE-7AE23CA14CE5”，“ dropcap”，“ dropcap”：false}更改查询计划并读写任何数据源。连接器可以实现&lt;em&gt; connectorPagesourceProvider &lt;/em&gt;，Presto在表扫描操作员中呼吁读取数据。如果他们想使用自定义机制编写查询输出，他们还可以实现&lt;em&gt; ConnectorPagesInkProvider &lt;/em&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ dd88a3d4-f7b8-4b1e-bed2-f14444b9f6f4ba”，“ opacity”，“ opacity”：“ alpha-channel”}“}”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ 99EDA46B-589C-477C-B1CE-838CFFF281FC”，“ LEVEL”：2} -block-neading“ id =” H- Leveraging-neutrino“&gt;利用中微子&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 62B947AA-E7F5-4D52-4D52-9387-48601B421A50”，“ dropcap”&gt; propcap} Presto的Uber-Internal Fork能够在10,000多个QPS上运行次秒潜伏期的查询。中微子目前代理Pinot查询大约95％的用例。但是如下各节所示，它不仅是代理，而且是在Pinot V1引擎顶部逻辑运行的查询执行引擎。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，” hash&#39;：“ 3E647A07-4C14-4E0C-AAA8B-A99B-A99BC6DC5BDBD0”} class -block-heading“ id =” h-design“&gt; Design &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 17016b3b-8c5555555555555555555555-47BC-B42B-B42B-BD828C7411”，“ dropcap”，“ dropcap”：false}我们已经针对高QP和低潜伏期进行了优化的PRESTO。中微子在单个JVM中运行协调员和工人，并且工人和协调器之间的HTTP调用被绕开以支持方法调用。我们通过进行内部更改，需要在几个地方调整Presto的执行引擎来实现这一目标。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 87f6ffb9-533c-43c-43ac-aa6666666666666c318a”，“ dropcap”，“ dropcap”：false} Presto-Pinot连接器优化器的内部叉子，以支持查询下降。用户提交的PRESTO SQL会通过逻辑计划器和一堆优化器，这些优化器对于所有连接器都是常见的。在所有常见的优化器运行后，Presto运行与查询相关的特定连接器优化器。就我们而言，我们的Presto Pinot连接器优化器的内部叉子运行。在高级别上，优化器试图找到可以向下推到Pinot的最大子计划，并将其转换为带有生成的Pinot查询的表扫描节点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ 3A8F8864-E7DE-45FA-45FA-828F-828F-807AA1B25C1A” -Block-neading“ ID =” H-Multistage-Execution-Via-via-neutrino-and-the-pinot-v1-engine”&gt; &lt;br&gt;通过Neutrino和Pinot V1 Engine执行的多阶段执行&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 292de9ee-e668-42b5-98ff-98ff-98ff-9d3199999999fa1cfb”，“ dropcap”&gt;上述设计，考虑图4中的中微子查询，该查询试图模仿以Uber为主题的用例。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1101652，“ width”：“ 354px”，“高度”：“自动”，“ sizeSlug”：“”大”，“ linkdestination”：“无”，“对齐”：“中心”，“ hash”：“ 76FBE998-A93E-422E-BF96-F96-F8748ECFEA76”，“ ALT”：“}” class =“ AlignCenter size-large固定的“&gt; &lt;img loading =“ lazy” dexoding =“ async” width =“ 1024” height =“ 1017” src =“ https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width = = 2160，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/12/fige-4-1733948371858-1024x1017.png“ alt =“ class =” class =“ wp-image-image-101652”样式=“宽度：354px;高度：自动“ srcset =” https://blog.uber-cdn.com/cdn-cgi/i法师/宽度= 1024，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/12/fige-4-17339483771858.png 1024W，https://blog.uber-cdn.com/cdn -cgi/image/width = 300，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/12/fige-4-1733948371858.png 300W，https：//blog.uber-cdn。 com/cdn-cgi/image/width = 150，质量= 80，onerror =重定向，格式= auto/wp-content/uploads/2024/12/fige-4-17339483771858.png 150w，https：//blog.uber -cdn.com/cdn-cgi/image/width=768，quality=80，onerror=redirect，format = auto/wp-content/uploads/2024/2024/12/figure-4-17339483771858.png 768w，https：/https：/https：// blog.uber-cdn.com/cdn-cgi/image/width=1536, quality=80，onerror=redirect，format = auto/wp-content/uploads/2024/2024/12/figure-4-173394839483771858.png 1536w，https ：//blog.uber-cdn.com/cdn-cgi/image/width=1572,1572，quality = 80，onerror=redirt = redirct，format = auto/wp-content/uploads/2024/12/12/figure-4-4-173394837771858.png 1572W“ sizes =”（最大宽度：1024px）100VW，1024px“ referrerpolicy =“ no-referferrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图4：netrino查询范围的窗口函数，以在（&lt;（&lt; em&gt; trip_id，line_item &lt;/em&gt;）在执行汇总之前。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ FA4FD676-476C-4E76-9A97-91A23F90974C”，“ Dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ F4A7B909-F276-42BC-9BC-9B55-8388C3EC22ED”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt;在这里我们&#39;重新试图在一段时间内计算在线项目级别的总旅行量。但是，原始的实时流可能具有相同的订单项和旅行的多个条目，因为由于各种原因，金额可能会更改（例如骑手调整小费数量）。我们不能使用pinot upserts，因为它会导致过多的主要键。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 423083d9-89ce-46b7-b6f1-bb4c73fbcedc”，“ dropcap”，“ dropcap”：false}窗口函数可保留每个行项目的最新金额，并且本质上是在查询时间删除行，而重复数据删除键为&lt;em&gt; trip_id，line_item &lt;/em&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6750474b-0284-4036-4036-87B3-8A1519B0ED8A”，“ dropcap”&gt;图5显示此查询的中微子的查询计划。表扫描是通过将SQL查询发送到Pinot Broker执行的。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1101647，“ width”：“ 413px”，“高度”：“自动”，“ sizeSlug”：“”完整”，“ linkDestination”：“无”，“ ALIGN”：“中心”，“ HASH”：“ 4786F4EB-86D3-474E-B21B-42DE415FF248”，“ ALT”：“”} class class =“ AnignCenter size-full固定的“&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 956” height =“ 856” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width = 2160，Quality=80，onerrtor=redirect，format = auto/wp-content/uploads/2024/2024/12/figure-5-17339476476173173180.png Image-11101647“样式=”宽度：413px;高度：自动“ srcset =” https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width=956,quality=80，quality = 80，onerror = redirctect informat = auto/wp-content/uploads/2024/12/figure-5-17339476173180.png 956W，https：//blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 300，quality = 300，quality = 80,80,OnError = 80,onerrtor = redirect ，格式= auto/wp-content/uploads/2024/12/fige-5-17339476173180.png 300W，https://blog.uber.uber..uber..uber-cdn.com/cdn-cgi/image/image/image/image/width = 768，quality = 80， OnError =重定向，格式= auto/wp-content/uploads/2024/12/fige-5-17339476173180.png 768w“ sizes =”（max-width：956px）100VW，100VW，956px“ referrerPolicyCeledrerPolyCilyCy =” no-re-referrrerrerererererererererer&#39;s&gt; &lt;&gt; &lt; FIGCAPTION类=“ WP-元素捕获”&gt;图5：图4中查询的查询计划。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 1628C092-CF24-40C4-A40F-65FF3089712E”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ F2E890AB-948A-47AD-AA04-C8CE51F30DC7”，“ dropcap”，“ dropcap”：false}对Pinot的SQL查询，即Pinot的V1引擎可以运行，并使用其自己的执行引擎在本身内部执行其余的计划。此设计实现了非凡的事情：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ F02C3B7B-C217-4A02-9EB6-43A71E03B040”，“订购“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;我们可以支持使用Pinot的V1引擎（如窗口函数）和sub--查询&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;我们可以在数百个Qps上运行此类查询，而无需任何用户提示以进行查询优化&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ e65c12f4-e1ce-41A0-9072-2B7EB1F655D7”，“ dropcap”&gt;为什么我们不将Pinot MSE用于此，因为MSE可以支持任意复杂的查询。有几个原因：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ EC1CEB3A-8EE8-4527-4527-A05B-892B-892B0006C121”，“ ordered”：fordsed“：false”：false，“ values，” valuation“ values”： “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; MSE默认情况下，求MSE求助于缩放不佳的缩放。另一方面，中微子使用一个线程执行整个计划。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;我们的内部测试表明MSE不能扩展到100 QPS。但是，类似上述查询的查询可能需要以超过500 qps进行。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; MSE仅最近才能使用，并且诸如上面的查询已经运行多年来可靠地中微子。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ 233A9666-32E6-4D18-AC30-AC30-D01237C137C1382C”} -Block-heading“ ID =”路由式台式h-rate-limiting-the-the-the-the-the-the-the-the-the-the-the-the-the-the&gt; &lt;br&gt;速率限制在路由层&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2ccfc265-75ac-48ae-9722-667d77beca96”，“ dropcap”，“ dropcap”：false}称为Muttley的平衡系统提供了一种为每个呼叫者配置QPS的方法。如果呼叫者超过其设置QP，则Muttley在达到目标服务之前就开始删除请求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 03E6AD0C-E205-4DD6-B178-52B851418B57”，“ dropcap”，“ dropcap”：false}在中微子中广泛地将其免受我们100多个独特的呼叫者的QPS尖峰。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ F7808E6A-E914-4AD7-4AD7-8164-5864C927B269” -Block-heading“ ID =” H-Query Inderpinting and Validation-FrameWork“&gt; &lt;br&gt;查询指纹和验证框架&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 807D7C14-5C1C-4C27-ABDB-2C57E0E96E54”，“ dropcap”：dropcap“：false}”&gt;我们有添加了一种简单的机制来计算中微子中的查询指纹。给定的Pinot主要用于为面向用户的应用程序供电，我们的大多数流量来自后端服务，后端服务具有预定的查询指纹。因此，唯一查询指纹的数量比总QPS低多个数量级，也是识别昂贵查询的非常有效的维度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ fba15a2222-4a7f-41ec-837f-6eb3e626a65e”，“ dropcap”，“ dropcap”：false}使用Uber的Dynamic Config Store Flipr配置指纹列表。这对于减轻一个查询可能影响其他呼叫者的罕见情况非常有用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希： -Block-neading“ ID =” H-Dynamic-Split-oxecution timeouts&gt; &lt;br&gt;动态拆分执行超时&lt;/h3&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ width”：“ 568px”，“高度”：“自动”，“ align”：“中心”，“哈希” ：“ 176C1B20-4083-4A56-B3AF-98972EEFF07A”，“ ALT”：“” class =“ AlignCenter is-is-is-is-is-is-is-in-is-ind&gt; &lt;img decoding =” async“ async” src =“ https：//lh7-rt.googogleusercontent。 com/docsz/AD_4nXcsWLieVMwU3pXSWyB1s5CbxVPXjEalGrcNsOXQbKoeTLRaIWE2BZk7e0ZJVODO1FARn8oed10f25gGx430A3yvd0kC-RKId_gEQg6Ehr6omR3Ognc7HV8NlrDlhXFaNgax2jo7F3pb1dex7JruH6a7ZnCS?key=IEbiY4aSF3msvi6T_qc0CA&#34; alt=&#34;&#34; style=&#34;width:568px;height:auto“ referrerpolicy =“ no-refferrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图6：动态拆分执行超时逻辑。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/figife&gt; &lt;/div&gt;&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 67CEB3CA-6F6A-409B-8FE5-59A1D3450E8A”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 87119003-F841-46E0-985F-C91CA407BBE5”，“ dropcap”，“ dropcap”：false} ，由于一个用户压倒了我们的中微子部署，我们发生了几起事件，从而对其他高级呼叫者产生影响。本质上的问题是：如果给定的呼叫者以足够高的QPS经验运行，则会导致中微子的大量请求和线程。当时，我们希望将叉子内部变化的数量保持尽可能低，因为我们想与普雷斯托的主分支保持同步，并每隔几个月将叉子前进。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 9c00415d-fb25-47b1-bf1d-507dbb78edc9”，“ dropcap”，“ dropcap”：false}通过最少的手术干预，可以快速解决此问题，以解决Presto的核心代码。为了实现这一目标，我们建立了一个简单的机制，该机制在高负载的情况下动态调整了Pinot的查询超时。即使令我们惊讶的是，这种简单的机制，加上我们的基于路由层的费率限制，在过去的3年中，我们对我们有很好的服务，没有重复此类事件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ 04BA68AE-7F12-4D2E-8672-8672-2C8C24DD7E5C”} -Block-neading“ ID =” H-HiStorical-Context“&gt; &lt;br&gt;历史上下文&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ dbfa61c3-9c6e-4297-4297-860c-7b0404040404040404b546a”，“ dropcap”&gt;一个人可能想知道为什么我们没有直接将Pinotsql暴露于用户并构建简单的传递代理。使用中微子方法的原因是，当时，Uber有两个OLAP数据库：AresDB和Pinot。使用Presto，我们可以隐藏在这两家商店中处理不同查询语言的复杂性。除此之外，使用PRESTO，我们可以启用多阶段查询，当时Pinot中没有可用的查询。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，” hash&#39;：“ 7d958c3d-b6bc-4de2-b7cd-94f877707e07e079e079”} -Block-neading“ ID =” H-Challenges”&gt; &lt;br&gt;挑战&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 50454C5D-05B0-4C26-B1C4-1C4-186068573E00”，“ dropcap”，“ dropcap”：false}多年来，与中微子一起工作的一些挑战。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ c94e05e8-3684-4d1b-ba85-d9cb555555555555555555555555555551EB90”，“ dropcap”：dropcap“：false}是一个适合用户的复杂系统。中微子，作为一部分在其设计中，必须进行SQL到SQL翻译。此外，它只能部分将查询计划推向Pinot。自然，Pinot返回的响应必须在一定限制下修剪，并且由于我们向Pinot发送了SQL查询，因此必须使用限制条款执行限制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ FEC4FBAC-D74C-4677-A6D6-9FFE5B060933”，“ dropcap”，“ dropcap”：false}下调可能并不总是有限制，而中微子可能需要在这种情况下（或查询失败）提出默认限制。放置我们自己的默认限制会更改查询的语义，并可能导致不正确的结果，而未能使查询失败会导致用户的经验不佳。这也在图5中的示例中证明了这一点，在该示例中，我们添加了10,000的默认限制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C758F982-ACCC-4A9F-BCB0-E3B2583D1E38”，“ dropcap”，“ dropcap”：false}查询查询的目视检查不足以确定被压入的查询外观，更改单个UDF可能会导致截止查询的完全更改。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ D0874AEF-8420-4FB8-B524-D24-D036343D3413”，“ dropcap”，“ dropcap”：false}缺乏加入支持。中微子不支持加入，并且只能支持其不优化的plan-tree的查询，没有一个大于一个子节点的节点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7A58E363-10C1-443C-AC17-57055AC8B9D5”，“ dropcap”，“ dropcap”：false}在Pinot中，启用分布式加入查询，但是由于中微子只能转化为Pinot V1发动机查询，因此我们无法利用具有Neutrino的多阶段引擎。这也使我们处于目前的技术堆栈与Pinot的下一代查询引擎不符的位置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C3254ED6-B57D-4B58-9B8-9B83-773A3A3A3F0457C9”，“ dropcap”&gt;第三挑战正在打破租户隔离。中微子代理来自100多个呼叫者的交通，其中许多可能正在击中其专用的黑皮诺租户。因此，中微子最终成为共享资源，并在查询级别打破租户级别的隔离。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ E8D63612-32B7-4491-B19E-07E-07E39EA6C68D”，“ dropcap”&gt; false}是开发开销。在过去的2  -  3年中，我们花费了巨大的精力来解决大量查询翻译问题并改善对查询下降的支持。但是，Pinot继续迅速改善，并赶上Pinot中新的SQL功能（甚至是新的Pinot UDFS）需要中微子的相应变化。对于尝试的用户来说，这通常成为瓶颈利用这些新功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/heading” data-wp-block =“ {”级别“：3，”哈希：“ 007F6534-C06A-4A7E-4A7E-ABBE-abbe-abbe-00EB8471A8”} -Block-neading“ ID =” H-Scale-And-Impact”&gt; &lt;br&gt;缩放和影响&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 578fb714-b8fd-4bd1-a9db-c80f11e521a0”，“ dropcap”，“ dropcap”：false} Uber至关重要的业务，Tier-0服务，每天都有超过十亿个Apache Pinot查询。我们的估计表明，这些查询中有超过三分之一利用了中微子的执行引擎，即它们仅部分推出查询并在中微子内执行其余的计划。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 4981DD44-F59E-42C4-8A07-F07-F07BECA467845”，“ dropcap”，“ dropcap”：false}唯一的服务呼叫者查询超过1,000张桌子，中微子和Apache Pinot在我们所有业务方面都可以轻松提供100个用例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 9928B44E-113A-4DC7-4DC7-91CE-5547C4B699B”，“ optical class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 0929BAB1-5781-4D32-B5D9-1D9-1D16789B03F5”，“ LEVEL”，“ LEVEL”：2} class =“ class =” WP -Block-neading“ ID =” H-Next步骤“&gt;下一步&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2f8653dc-1fd4-4db2-8ce5-1558cf75035e”，“ dropcap”，“ dropcap”：false}仅通过Uber的Pinot多阶段发动机提供少数用例。在随后的博客中，我们将分享我们计划如何在Uber更广泛地采用Pinot SQL，以及我们计划如何通过基于中微子的方法来应对挑战。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ C3283466-39E2-455A-9628-5FAC51FB3096”，“ opcity”，“ optical class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：1，”哈希：“ e38ad6d1-506c-4313-a62e-f8cbc023450c”} -Block-neading“ ID =“ H-Conconclusion”&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7BB07E93-6BAB-4DFA-BEE2-69EA1879722F”，“ dropcap”，“ dropcap”：false}服务数百种低延迟分析用例的优步已经明确表示，OLAP系统应该能够支持查询功能，例如窗口函数和子查询。阿帕奇·皮诺（Apache Pinot）直到2023年才得到这种支持，而中微子被证明在弥合差距方面非常有用。此外，中微子在单个过程中运行整个计划的方法已被证明足以可靠地处理10,000 QP。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {”字体尺寸“：“小”，“哈希”：“ 79b746e5-e7fa-4e40-a20f-3dbf29a2ee50”，“ dropcap”：false} class =“ has-small-font-size”&gt; apache &lt;SUPACHE &lt;SUPACHE &lt;SUPACHE &lt;SUPACHE &lt;SUPACHE &lt;SUPACHE &lt;SUP&gt;®&lt;/sup &gt;，Apache Pinot &lt;Sup&gt;™&lt;/sup&gt;，Apache Hive &lt;Sup&gt;™&lt;/sup&gt;，Apache Cortite &lt;Sup&gt;™&lt;/sup&gt;™&lt;/sup&gt;，Pinot和Hive是注册的商标或Apache Softfact的商标在美国和/或其他国家。使用这些标记不暗示Apache软件基金会的认可。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 00BF4A57-AB56-410E-9E0F-AC42BD42BD409E36，“ Dropcap” ：false}“ class =” hap-small-font-size&gt; oracle，java，mysql是Oracle和/或其分支机构的注册商标。其他名称可能是其各自所有者的商标。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ E7FD827A-9427-4A8C-8C-8F62-AFCBBBBBBBBB7A39077”，“ dropcap” dropcap“ ：false}“ class =” hap-small-font-size&gt; &lt;em&gt; presto &lt;sup&gt;®&lt;/sup&gt;是LF Projects，LLC。 &lt;a href =“ https://openvers.org/image/c8fc21ac-901a-4fe5-a3ea-966696610fecb” target =“ _ blank” rel =“ noreferrer noopener” “ https://openverse.org/image/collection？source = flickr＆creator = mightyboybrian“ target =” _ blank“ rel =“ noreferrer noopener”&gt; MightyBoybrian &lt;/a&gt;在&lt;a href =“ href =“ href =“ href =” https：/href =“ org/licenses/by-nc/2.0/？ref = openverse“ target =“ _ blank” rel =“ noreferrer noopener”&gt; cc by-nc 2.0 &lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ E7FD827A-9427-4A8C-8C-8F62-AFCBBBBBBB4A399077”，“ dropcap” ：false}“ class =” hap-small-font-size”&gt;版权所有apache pinot。根据APACHE许可证的一个或多个贡献者许可协议，版本2.0。</description>
      <pubDate>Wed, 11 Dec 2024 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Open Source and In-House: How Uber Optimizes LLM Training】开源和内部：Uber如何优化LLM培训</title>
      <link>https://www.uber.com/blog/open-source-and-in-house-how-uber-optimizes-llm-training/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;2a1bfc33-e3e2-438f-ae6e-3769f3795e56&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0b5d692f-13a5-447f-bcc4-de8dc6bdb7f9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Generative AI powered by LLMs (Large Language Models) has a wide range of applications at Uber, like Uber Eats recommendations and search, customer support chatbots, code development, and SQL query generation.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2bac8375-db6b-4ae6-8d93-a2aae00fd471&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To support these applications, Uber leverages open-source models like Meta&lt;sup&gt;®&lt;/sup&gt; Llama 2 and Mistral AI Mixtral&lt;sup&gt;®&lt;/sup&gt;, and closed-source models from OpenAI, Google, and other third-party providers. As a leading company in mobility and delivery, Uber also has considerable domain-specific knowledge that can improve LLM performance for these applications. ‌One way Uber incorporates this domain-specific knowledge is through RAG (Retrieval Augmented Generation).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7e841d89-1252-4bc2-b78f-b3a1630cf7fc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber also explores ways to adapt LLMs to Uber’s knowledge base through continuous pre-training and instruction fine-tuning. For example, for Uber Eats, we found that a model finetuned on Uber’s knowledge of items, dishes, and restaurants could improve the accuracy of item tagging, search queries, and user preference understanding compared to open-source model results. Even further, these finetuned models can achieve similar performance to GPT-4 models while allowing for much more traffic at Uber’s scale.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1946080a-21ea-4227-8723-e6eb98d414d6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;AI community support and open-source libraries like &lt;a href=&#34;https://huggingface.co/docs/transformers/index&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;transformers&lt;/a&gt;, Microsoft DeepSpeed&lt;sup&gt;®&lt;/sup&gt;, and &lt;a href=&#34;https://pytorch.org/blog/introducing-pytorch-fully-sharded-data-parallel-api/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PyTorch FSDP&lt;/a&gt; empower Uber to rapidly build infrastructure to efficiently train and evaluate LLMs. Emerging open-source initiatives like&lt;a href=&#34;https://github.com/facebookresearch/llama-recipes&#34;&gt; &lt;/a&gt;Meta&lt;sup&gt;®&lt;/sup&gt; Llama 3 &lt;a href=&#34;https://github.com/facebookresearch/llama-recipes&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;llama-recipes&lt;/a&gt;, Microsoft &lt;a href=&#34;https://github.com/microsoft/LoRA&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;LoRA&lt;/a&gt;&lt;sup&gt;®&lt;/sup&gt;, &lt;a href=&#34;https://github.com/artidoro/qlora&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;QLoRA&lt;/a&gt;&lt;sup&gt;™&lt;/sup&gt;, and Hugging Face &lt;a href=&#34;https://github.com/huggingface/peft&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PEFT&lt;/a&gt;&lt;sup&gt;™&lt;/sup&gt; simplify the fine-tuning lifecycle for LLMs and reduce engineering efforts. Tools like &lt;a href=&#34;https://github.com/ray-project/ray&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ray&lt;/a&gt;&lt;sup&gt;®&lt;/sup&gt; and &lt;a href=&#34;https://github.com/vllm-project/vllm&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;vLLM&lt;/a&gt;&lt;sup&gt;™&lt;/sup&gt; maximize the throughput of large-scale pre-training, fine-tuning, offline batch prediction, and online serving capabilities for open-source LLMs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d374805e-07fa-44fa-a4a7-020598b58abc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The novel in-house LLM training approach described in this blog ensures Uber’s flexibility and speed in prototyping and developing Generative AI-driven services. We use SOTA (state-of-the-art) open-source models for faster, cheaper, and more secure and scalable experimentation. Optimized in-house LLM training helps Uber maintain cutting-edge technology innovations and passes on the benefits to people who use the Uber app.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a0029706-3a73-4cc2-a568-7c36b37caf0b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f86bcfc9-0737-45be-9e65-5a7d07a833d5&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-infrastructure-stack&#34;&gt;Infrastructure Stack&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;abe7dc70-d3c6-4977-bf70-07599b182907&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A critical component of LLM training at Uber is the thoroughly tested infrastructure stack that enables rapid experimentation.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;ba22d7dd-5289-43c0-b348-01d8f8ddcc6b&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-layer-0-hardware&#34;&gt;Layer 0: Hardware&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7a540b97-614a-4d27-95b2-aa5e4853fc23&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber’s in-house LLM workflows are scheduled on 2 kinds of computing instances: (1) NVIDIA&lt;sup&gt;®&lt;/sup&gt; A100 GPU instances in Uber’s on-prem clusters and (2) NVIDIA H100 GPU instances on Google Cloud. Each Uber on-prem A100 host is equipped with 4 A100 GPUs, 600 GB memory, and 3 TB SSD.&amp;nbsp; On Google Cloud, each host is a 3-highgpu-8g machine type, with 8 H100 GPUs, 1872GB CPU memory, and 6TB SSD. These machines are managed as part of the &lt;a href=&#34;https://www.uber.com/en-MX/blog/crane-ubers-next-gen-infrastructure-stack/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Crane&lt;/a&gt; infrastructure stack.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;e69d694b-39e3-4650-824d-947f2ba180b7&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-layer-1-orchestration&#34;&gt;Layer 1: Orchestration&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3a32a183-2b47-42a7-902f-3dc9c2fde9dc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Computing resources are managed by Kubernetes&lt;sup&gt;®&lt;/sup&gt; and Ray. Kubernetes is used to schedule training workloads and manage hardware requirements. Ray, along with the KubeRay operator, is used for distributing the workload to the workers.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;d742a5e0-215c-4584-a99d-2cd2f2ec42d9&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-layer-2-federation&#34;&gt;Layer 2: Federation&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;353d646a-5615-4d50-b4bc-b0ffaffc27dd&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The end-to-end flow of resource management is depicted in Figure 1 below. Our multiple Kubernetes clusters are managed by a federation layer, which schedules workloads based on resource availability. Training jobs are modeled as a Job with multiple Tasks. The JobSpec defines the goal state of the Job and includes information like the instance SKUs, clusters, compute/storage resources, and post-Docker-launch commands to set up tokens and environment variables.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097951,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;dff8f22e-4f52-4cf6-ab64-b2c4eaecab2c&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;799&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig1k8s-17291800154604-1024x799.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097951&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig1k8s-17291800154604.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig1k8s-17291800154604.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig1k8s-17291800154604.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1471,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig1k8s-17291800154604.png 1471w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Resource scheduling for LLM workflows.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;75c9c747-bc39-426c-85aa-e0c39e60e5b8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5dc9360d-b887-467d-9b4d-a21813c32596&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;97a27885-ee5a-402d-b7d8-36ad09297d0c&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-training-stack&#34;&gt;Training Stack&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9600c43d-0531-437a-82b9-3968d02c9cf4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We fully embraced open source when building our LLM training stack. Specifically, we integrated PyTorch, Ray, Hugging Face, DeepSpeed, and NCLL to enable training LLMs with the Michelangelo platform.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;13622ae7-6133-4412-9f2b-11fef3eac11a&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;PyTorch is our chosen deep learning framework because most SOTA open-source LLMs and techniques are implemented in PyTorch.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Ray Train provides a thin API to perform distributed training using PyTorch on Ray clusters.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Hugging Face Transformers provide APIs and tools to download and train SOTA transformer-based models.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;DeepSpeed is a deep learning optimization software suite that enables unprecedented scale and speed for deep learning training and inference.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;08d5f9d1-cc0e-4979-80ea-011ebf35983f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As shown in Figure 2 below, Ray is at the top of the LLM training stack for coordinating tasks. NCCL is at the bottom level for GPU communication.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097891,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;1f4b6be8-b85d-4ea3-94c7-48ec2964ce74&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;535&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig2-17291323864935-1024x535.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097891&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig2-17291323864935.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig2-17291323864935.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig2-17291323864935.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig2-17291323864935.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1680,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/fig2-17291323864935.png 1680w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Uber LLM training software stack.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;292322d2-b608-44f1-93bb-8a794cb0ae6e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9ce7e044-4e63-414e-91bb-787b66baa245&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1388b477-2ada-46d4-8926-b47d9e2cc6c9&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-distributed-training-pipeline&#34;&gt;Distributed Training Pipeline&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;93674e70-08af-454f-8eff-046a9cd96cdd&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To support our in-house implementation, we built an LLM distributed training pipeline that includes host communication, data preparation, distributed model training, and model checkpoint management. Here is how it works:&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;901cb5da-a158-4522-a928-e1b50df61ef7&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Multi-host and multi-GPU communication&lt;/strong&gt;. To start, a TorchTrainer in Ray Train creates multiple workers in the form of Ray Actors, handles in-bound communication (used by Ray Object Store), and initializes a PyTorch distributed process group (used by Deepspeed) on GPUs across all hosts.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Data preparation&lt;/strong&gt;. The LLM training framework supports remote data sources on Uber HDFS, Uber Terrablob, and Hugging Face public datasets.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Model training&lt;/strong&gt;. Tokenization converts input text into integers that will be fed into the models. For distributed training, each GPU worker initializes a Hugging Face Transformers Trainer object using the DeepSpeed ZeRO stage 1/2/3 options.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Saving results.&lt;/strong&gt; Metrics associated with the training experiment are saved on the Uber Comet server. The main training process on the Ray head node pushes training model weights and associated configuration files to Terrablob storage.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;aceba0d7-957c-43bf-beef-30c6b1b9db41&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdT3F2A2DQU9CZxNSsCKbIAIB7ZfHvNFKT2W7E2DRlpzCxmyD0NIwbwy0CfOCs2dnPJdQyHLuH5Ia7Dt5QSgICSuNmz9igsWp_TabDWQ8XCJs1GWbMBRohsvSv9qg-J19oJyuLqixlDKAlRZrfZyhzu3l_3?key=F9WnaYLpB5WvGJfBHoMLXQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Uber LLM distributed training pipeline.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;63ddda68-46ce-42ab-a705-5330656936de&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;79024f68-5234-4376-958a-00799f61c598&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ddd7ea80-3f24-40ac-b5d0-c51ccdf19df5&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-training-results&#34;&gt;Training Results&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5e250810-041e-4b72-b1f2-503d255d34fa&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our exploration involved demonstrating that the in-house Michelangelo platform has the capability and scalability to train any open-source LLM with throughput optimization.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;a3b35586-204b-4320-b82b-69c884b942be&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-training-on-state-of-the-art-llms&#34;&gt;Training on State-Of-The-Art LLMs&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;770ae998-1513-4b07-9ddd-21064b7f0d0e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We found that the Michelangelo platform can support the largest open-source LLMs while training under different settings, including full-parameter fine tuning and parameter-efficient fine tuning with LoRA and QLoRA.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097895,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;60b1c16e-2cee-4f9d-9961-44f6bb418189&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;505&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-17291324832411-1024x505.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097895&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-17291324832411.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-17291324832411.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-17291324832411.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1467,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-17291324832411.png 1467w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Training loss of Llama 2 models with and without (Q)LoRA.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f8c07128-ce1d-418f-969b-2993735ab8ae&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;62e2ae55-2adb-47db-88d6-6aac1a579201&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 4 (above) shows the training loss curve for Llama 2 13B and Llama 2 70B with and without LoRA. We found that, even if LoRA and QLoRA use far fewer GPUs and train much faster with fewer GPUs, the loss decreases much less than the full parameter training. Therefore, it’s important to improve the throughput/Model Flops Utilization (MFU) for full parameter fine-tuning of LLMs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;2794d532-813b-4ec7-8267-c36c5bfac293&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-throughput-mfu-optimization&#34;&gt;&lt;br&gt;Throughput/MFU Optimization&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;027c8334-2a64-4831-af4a-324f5abd02f0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Scaling the transformer architecture is heavily bottlenecked by the model’s self-attention mechanism, which has quadratic time and memory complexity. To achieve better training throughput, we’ve explored several industry recommended efforts to optimize GPU memory usage: CPU offload and flash attention.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a34ef321-de14-4067-af33-e2eb15596493&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The first training throughput optimization we explored was using DeepSpeed ZeRO-stage-3 CPU Optimizer Offload, which led to at least 34% GPU memory reduction with the same batch size when training Llama 2 70B. This allowed us to increase the batch size by 3-4 times but still keep the same forward and backward speed, so the training throughput increased by 2-3 times.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;758b796c-630f-443a-9953-7f554395bfe6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The second training throughput optimization explored was following Hugging Face’s suggestion to use flash attention. Flash attention is an attention algorithm used to reduce quadratic complexity and scale transformer-based models more efficiently, enabling faster training. With flash attention, we could save 50% of GPU memory with the same batch size. If we maximized the usage of GPU memory, then we could double the batch size while keeping compatible forward and backward speed.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;89be987d-e630-44c7-b748-e23a605041bc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To study training efficiency, we used Hardware Model Flops Utilization (&lt;a href=&#34;https://arxiv.org/pdf/2204.02311.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MFU&lt;/a&gt;). MFU is the ratio of the observed throughput to the theoretical maximum throughput if the benchmarked hardware setup was operating at peak FLOPS with no memory or communication overhead.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;95c4ddbb-d746-4625-84fb-001e68a2d445&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In our benchmark, we used &lt;a href=&#34;https://deepspeed.readthedocs.io/en/latest/flops-profiler.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Deepspeed Flops Profiler&lt;/a&gt; to obtain the expected FLOPS number. FLOPS per GPU was calculated as: forward and backward FLOPS per GPU/iteration latency. Then we divided it by the device’s peak theoretical performance and obtained our final MFU metric. ‌In all our experiments, we maximized the batch size under different optimization settings so that GPU memory was fully utilized. We did this with the training arguments, setting &lt;em&gt;gradient_accumulation_steps = 1&lt;/em&gt; so that &lt;em&gt;macro_batch_size = micro_batch_size x num_gpus x 1&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3eb1c35d-1aa8-4459-9bcb-c207671f538f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Here’s what we found:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0824a484-47fe-415d-990c-59086f7e64a6&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Throughput&lt;/strong&gt;: Both flash attention and CPU offload saved GPU memory, enabling us to increase batch size 2 to 7 times during Llama 2 70B training with maximum GPU memory usage (70GB-80GB) on 32 GPUs (8 hosts on A100, 4 hosts on H100). This led to significant throughput increases.&amp;nbsp;&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;MFU&lt;/strong&gt;: MFU on H100 was lower than on A100, and GPU utilization wasn’t full with maximum GPU memory usage. This might indicate that for Llama 2 70B training, we have memory-bound GPU instead of compute-bound. That’s also why CPU offload could help the most to improve MFU, as plotted in Figure 5 below.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Compute or Memory Bound&lt;/strong&gt;: The story is slightly different for Llama 2 7B on 4 A100/H100 on a single host, where we may have compute-bound GPU instead of memory-bound GPU.&amp;nbsp; We saw that the MFU of training Llama 2 7B was higher than training Llama 2 70B, and CPU offload was not helpful to improve MFU. Flash attention could help the most, as shown in Figure 6 below.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Network: &lt;/strong&gt;In our experiment, the network usage was around 10GB/second on H100 and 3GB/second on A100 for Llama 2 70B model training. This is small compared to the infra theoretical value, indicating that the network is yet to be a bottleneck compared to GPU compute and memory.&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097898,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f6539680-e550-403c-8250-280ec77192ac&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;634&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-17291325919540-1024x634.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097898&#34; title=&#34;Chart&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-17291325919540.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-17291325919540.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-17291325919540.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1234,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-17291325919540.png 1234w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Model Flops Utilization of training Llama 2 70B.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a4b411e3-c488-4737-a15d-7fc23eeb3e67&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097899,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;bca783a9-96e7-4c90-9dd0-6dd950e0cbb9&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;635&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-17291326224707-1024x635.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097899&#34; title=&#34;Chart&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-17291326224707.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-17291326224707.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-17291326224707.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1328,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-17291326224707.png 1328w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Model Flops Utilization of training Llama 2 7B.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f1e75079-9ed3-40d4-9930-c00265e9045c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;5558af28-a0c8-493d-8ca2-1de822e467e0&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-llm-scorer&#34;&gt;LLM Scorer&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a73b63d3-6d45-465b-b421-b79fbf01737f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To evaluate the raw or finetuned models, we also implemented an offline LLM scorer to predict on large datasets. We used Ray to create a cluster on Kubernetes with multiple instances and each instance with multiple GPUs. This way, we could distribute the data and score in parallel. On each instance, we used inference servers such as &lt;a href=&#34;https://github.com/vllm-project/vllm&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;vLLM&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4a617aea-dbba-4d40-95ba-8c8c612e6cac&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In our implementation, we used Ray jobs as the operational foundation. Each Ray job allocates a specified number of CPU and GPU resources, downloads models, and partitions datasets by rank. The Ray `ActorPool` aggregates the outputs from different Ray Actors. Figure 7 below shows the implementation of this LLM scorer.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;e9d41adb-1d33-48a2-988b-33d8c40de5fb&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcptqsUis4TPQFJP9-OfxrU60nUal734joeKAohIc3jWOMuOU30fC58yufglGf4nzT3KI8VggrcxoASoFb8aSmOQKMXOk5ccrXsIhpQAr_-Pomo-INJ-MUMOMIYkgqKv9u2Q7Dwg3laKTYJ750mU3w45i8?key=F9WnaYLpB5WvGJfBHoMLXQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Distributed LLM scorer with Ray and vLLM.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;72b43d00-c050-41c9-867a-fc38576e1944&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;59341eaf-c14b-41c0-a3e4-35d84e603f04&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 8 below summarizes the performance of batch prediction for Mixtral 8x7b models using 2 A100 and H100 GPUs, where the input token size is 4K and the maximum output tokens are 700. We observed that output tokens per second increased linearly for batch sizes up to 64 on both GPU types. Notably, the H100 achieved a throughput 3 times higher than the A100. This benchmark helps teams make production decisions and plan resource requirements.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;5dc1b9ad-6441-4171-8b85-d233257a4bf8&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfpULj9Ck6J4EpGtKKPx8e4f_q925QVj3CisQlmWVKLzr1NiTnTpsSSxOj_NfaZZ8eQWuxxBRM0Grb280IbiDTkdRqaK5RSg3moI346umhtDDnHFqVOhPflkhI0Bk0pIbI272dXCbLHt0zw0iKOafuN-l4?key=F9WnaYLpB5WvGJfBHoMLXQ&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8: Throughput for Mixtral-8x7b on 2 x A100/H100.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1dcee380-7696-48be-ad2b-c7ac66edcf82&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d8826856-01f0-4d2b-9b39-9b0ab9436a37&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;95cf00c9-778f-4b51-b272-fc8090e9c008&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6fff4811-1c1f-4a4b-b352-069d8588e134&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As more and larger open-source models get published, like Llama 3 450B, we’ll improve our LLM training infrastructure to support fine-tuning them. Using these finetuned models will help us improve things like Uber Eats recommendations and search.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c1055457-0d60-4315-8a6a-9846867752e7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Thinking about the broader industry, our journey exploring in-house LLM training has brought us these insights:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;caf84a04-8f32-464e-a823-e06addcf93ee&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Embracing open source is the key &lt;/strong&gt;&lt;strong&gt;to catching up with generative AI trends.&lt;/strong&gt; In a short time, we’ve seen and benefitted from the fast-growing open-source community Hugging Face and the rapid adoption of DeepSpeed. Open-source model structures like Falcon, Llama, and Mixtral are published one-after-another every few months. With open-source solutions, we can train SOTA LLMs and achieve the industry standard MFU to maximize GPU usage.&amp;nbsp;&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Having long-time-tested and extensible cluster management is critical to catching the latest trends quickly.&lt;/strong&gt; Our well-established Ray and Kubernetes stack makes it easy to integrate new open-source solutions into our production environment.&amp;nbsp;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;79492b52-80a3-484e-96db-eaea716fb532&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;34b325a2-53fb-47e7-9c70-956bb37ea040&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e1c7934a-3ba0-4400-8d03-91333882acb2&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-acknowledgements&#34;&gt;Acknowledgements&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d61854a1-4a5c-4936-870c-08fc26b173a6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This major step for GenAI at Uber couldn’t have happened without the many teams at Uber who contributed to it: Michelangelo, Applied AI, Dev Platform, and Platform Core Service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;0cc3578a-4276-48eb-b5bb-dda18aac1570&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Apache&lt;sup&gt;®&lt;/sup&gt;, Apache Kafka, Kafka, Apache Spark, Spark, and the star logo are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;1f17d0fc-b135-4a11-81f0-461744185c12&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Deepspeed&lt;sup&gt;®&lt;/sup&gt; and its logo, LoRA&lt;/em&gt;&lt;sup&gt;®&lt;/sup&gt;&lt;em&gt; and its logo&lt;/em&gt; &lt;em&gt;are registered trademarks of Microsoft&lt;sup&gt;®&lt;/sup&gt; in the United States and other countries. No endorsement by Microsoft is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;7553dd58-1d4a-407e-bd4d-8d5ed7be3771&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Kubernetes&lt;sup&gt;®&lt;/sup&gt; and its logo are registered trademarks of The Linux Foundation&lt;sup&gt;®&lt;/sup&gt; in the United States and other countries. No endorsement by The Linux Foundation is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;d91b4603-ef84-4b0e-bd0a-c31aedef4532&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Llama 2&lt;sup&gt;®&lt;/sup&gt;, Llama 3&lt;sup&gt;®&lt;/sup&gt; and their logos are registered trademarks of Meta&lt;sup&gt;®&lt;/sup&gt; in the United States and other countries. No endorsement by Meta is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;b8b3f2bb-79ed-43e0-ae31-3f70e2215105&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Mixtral&lt;sup&gt;®&lt;/sup&gt; and its logo are registered trademarks of Mistral AI&lt;sup&gt;®&lt;/sup&gt; in the United States and other countries. No endorsement by Mistral AI is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;fc01d91d-1ad5-4ff6-b213-31414422427d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;NVIDIA&lt;sup&gt;® &lt;/sup&gt;and the NVIDIA logo are trademarks and/or registered trademarks of NVIDIA Corporation in the U.S. and other countries. No endorsement by NVIDIA is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;c3799488-dfdf-4488-9a62-da6179757c3d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;PyTorch, the PyTorch logo and any related marks are trademarks of The Linux Foundation.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;53d78373-5c6a-4d62-9fd1-83994303c000&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Transformers&lt;sup&gt;®&lt;/sup&gt; and its logo are registered trademarks of Hugging Face&lt;sup&gt;®&lt;/sup&gt; in the United States and other countries. No endorsement by Hugging Face is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;33545b90-edf8-4266-a93c-c0c04c917f2e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1b3dfcd7-24d6-409c-a60c-028e45f2e6be&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;308d94a8-c895-41fb-acd9-12964ced97c6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;】&lt;h1 data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：1，”哈希：“ 2A1BFC33-E3E2-438F-438F-AE6E-3769F3795E56”} -block-neading“ id =” H-Instruction“&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 0b5d692f-13a5-447f-bcc4-de8de8dc6bdb7f9，“ dropcap”，“ dropcap”：false} LLM（大型语言模型）在Uber上拥有广泛的应用程序，例如Uber Eats建议和搜索，客户支持聊天机器人，代码开发和SQL查询生成。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2BAC8375-DB6B-4AE6-8D93-A2AAE00FD471”，“ dropcap”，“ dropcap”：false}应用程序，Uber利用诸如Meta &lt;sup&gt;®&lt;/sup&gt; Llama 2和Mistral AI Mixtral &lt;sup&gt;®&lt;/sup&gt;之类的开源型号，以及来自OpenAI，Google和其他第三方提供商的封闭式式型号。作为移动性和交付领域的领先公司，Uber还具有相当大的领域特定知识，可以改善这些应用程序的LLM性能。 Uber将一种特定领域的知识融合在一起的一种方式是通过抹布（检索增强产生）。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7E841D89-1252-4BC2-B78F-B3A1630CF7FC”，“ dropcap”，“ dropcap”：false}通过持续的预培训和指导微调，使LLM适应Uber知识基础的方法。例如，对于Uber Eats，我们发现，与开源模型结果相比，与Uber了解物品，菜肴和餐馆的了解可以提高物品标签，搜索查询和用户偏好理解的准确性。更重要的是，这些固定模型可以实现与GPT-4型号相似的性能，同时允许在Uber的规模上增加更多的流量。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 1946080A-21EA-4227-4227-8723-E6EB98D414D6”，“ dropcap”，“ dropcap”：false}和开源库，例如&lt;a href =“ https://huggingface.co/docs/transformers/index” target =“ _ blank” rel =“ noreferrer noopener”&gt;“ noreferrer noopener”&gt;变形金刚/sup&gt;，and &lt;a href =“ https://pytorch.org/blog/introducing-pytorch-pytorch-sharded-data-data-parallel-api/” target =“ _ blank” rel =“ noreferrer noopener”&gt; /a&gt;使Uber能够快速建立基础设施，以有效地训练和评估LLM。 &lt;a href =“ https://github.com/facebookresearch/llama-recipes”&gt; &lt;/a&gt; meta &lt;sup&gt;®&lt;/sup®&lt;/sup&gt; llama 3 &lt;a href =“ https：// github.com/facebookresearch/llama-recipes“ target =” _ blank“ rel =” noreferrer noopener“&gt; llama-recipes &lt;/a&gt;，microsoft &lt;a href =” “ _blank” rel =“ noreferrer nooopener”&gt; lora &lt;/a&gt; &lt;sup&gt;®&lt;/sup&gt;，&lt;a href =“ https://github.com/artidoro/qlora/qlora/qlora/qlora” target =” noopener“&gt; qlora &lt;/a&gt; &lt;sup&gt;™&lt;/sup&gt;，拥抱脸&lt;a href =” https：// g github.com/huggingface/peft“ target =“ _ blank” rel =“ noreferrer noopener”&gt; peft &lt;/a&gt; &lt;sup&gt;™&lt;/sup&gt;简化LLMS的微调生命周期并减少工程工作。 href =“ https://github.com/ray-project/ray” target =“ _ blank” rel =“ noreferrer noopener”&gt; ray &lt;/a&gt; &lt;/a&gt; &lt;sup&gt;®&lt;/sup&gt; &lt;/sup&gt;和&lt;a href =“ https：https：https： //github.com/vllm-project/vllm“ target =“ _ blank” rel =“ noreferrer noopener”&gt; vllm &lt;/a&gt; &lt;sup&gt;™&lt;/sup&gt;最大化大型预训练的吞吐量调整，离线批次预测和开源LLMS的在线服务功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ D374805E-07FA-44FA-44FA-A4A7-020598B58ABC”，“ dropcap”：dropcap“：false}”&gt; -HOUSE LLM培训方法在此博客中描述，可确保Uber在原型制作和开发生成AI驱动的服务方面的灵活性和速度。我们使用SOTA（最先进的）开源模型，以更快，更便宜，更安全，更可扩展的实验。优化的内部LLM培训有助于Uber维持尖端的技术创新，并通过使用Uber应用程序的人获得好处。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;： class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ F86BCFC9-0737-45BE-9E65-5A7D07A833D5”，“级别”，“级别”：2} -Block-neading“ ID =” H-Infrastructure-stack“&gt;基础结构堆栈&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ abe7dc70-d3c6-4977-bf70-0759999b182907”，“ dropcap”，“ dropcap”：false}在Uber进行的LLM培训是经过彻底测试的基础设施堆栈，可快速实验。  &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ BA22D7DD-5289-43C0-B348-01D8F8DDDCC6B”} -Block-heading“ ID =” H-Layer-0-Hardware”&gt;第0层：硬件&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 7A540B97-614A-4D27-4D27-95B2-AA5E4853FC23”，“ Dropcap”：fallcap“：fals}”&gt; HOUSE LLM工作流程安排在两种计算实例上：（1）NVIDIA &lt;sup&gt;®&lt;/sup&gt;在Uber的本地群集中的A100 GPU实例和（2）NVIDIA H100 GPU实例在Google Cloud上。每个Uber本地A100主机都配备了4个A100 GPU，600 GB内存和3个TB SSD。  在Google Cloud上，每个主机都是3高的8G机器类型，具有8 H100 GPU，1872GB CPU内存和6TB SSD。这些机器作为&lt;a href =“ https://www.uber.com/en-mx/blog/blog/crane-crane-next-gen-infrastructure-stack/”的一部分进行管理。 noreferrer noopener“&gt; crane &lt;/a&gt;基础设施堆栈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;H3 Data Data-Wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ E69D694B-39E3-4650-824D-947F2BA180B7“}” class =“ wp-block-heading” id =“ H-Layer-1-Orchestration”&gt;第1层：编排&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 3A32A183-2B47-42A7-902F-3DC9C2FDE9DC”，“ dropcap”，“ dropcap”&gt;计算资源是由Kubernetes &lt;sup&gt;®&lt;/sup&gt;和Ray管理。 Kubernetes用于安排培训工作负载并管理硬件要求。 Ray与Kuberay运营商一起用于将工作量分配给工人。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ d742a5e0-215c-4584-a999d-cd22f2c42ec42ec42d9”} -block-neading“ id =” H-Layer-2-芬德&gt;第2层：联邦&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 353d646a-5615-4d50-b4bc-b4bc-b0ffaffc27dd”，“ dropcap”，“ dropcap”：false}资源管理的端流流如下图1所示。我们的多个Kubernetes群集由联邦层管理，该层根据资源可用性计划工作负载。培训工作被建模为具有多个任务的工作。 JobSpec定义了作业的目标状态，并包含诸如实例SKU，簇，计算/存储资源以及后拨打命令之类的信息，以设置令牌和环境变量。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097951，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心”，“哈希”：“ DFF8F22E-4F52-4CF6-AB64-B2C4EECAB2C”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” “ 1024” height =“ 799” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-contents/uploads /2024/10/fig1k8s-17291800154604-1024x799.png“ alt =” class =“ wp-image-1097951” srcset =“ https：///blog.uber.uber.uber..uber-ber-cdn.com/cdn-c.com/cdn-cdn-cgi/image/image/image/image/image/width，10124 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fig1k8s-17291800154604.png 1024w，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/width= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fig1k8s-17291800154604.png 300W，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fig1k8s-17291800154604.png 768W，https://blog.uber.uber.uber-c.com/cdn-c.com/cdn-cgi/image/宽度= 1471，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fig1k8s-17291800154604.png 1471W“ sizes =”（max-width：max-width：1024px）100vw，1024px，1024px“ 1024px” crirerpolicy =” No-Referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图1：LLM Workflows的资源调度。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 75C9C747-BC39-426C-85AA-E0C39E60E5B8”，“ dropcap”，“ dropcap”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 5dc93）60d-B887-467D-9B4D-A21813C32596，“不透明度”：“ Alpha-Channel”}“ class =” wp-block-separator has-alpha-channel-opacity-opacity&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ 97A27885-EE5A-402D-B7D8-36AD09297D0C”，“ level”级别，“：2}” -Block-neading“ ID =“ H-Training-stack”&gt;训练堆栈&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9600C43D-0531-437A-82B9-3968D02C9CF4”，“ DROPCAP”&gt;我们完全充实建造LLM培训堆栈时开源。具体来说，我们集成了Pytorch，Ray，Hugging Face，DeepSpeed和NCLL，以通过Michelangelo平台启用培训LLM。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ 13622AE7-6133-4412-9F2B-11F2B-11FEF3EAC11A”，“ orded”：forde&#39;：false&#39;：false，false，“ values”值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; pytorch是我们选择的深度学习框架，因为大多数SOTA开源LLM和技术都在Pytorch中实现。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;射线训练提供了薄的API，可以在射线簇上使用pytorch执行分布式训练。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;拥抱面变压器提供了API和工具，可下载和训练基于SOTA SOTA变压器的模型。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; deepspeed是一个深度学习优化软件套件，可以实现前所未有的规模和速度，用于深度学习训练和推理。 /li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 08d5f9d1-cc0e-4979-4979-80EA-011EBF35983F”，“ dropcap”：dropcap“：false}”&gt;下面的图2，Ray位于LLM培训堆栈的顶部，用于协调任务。 NCCL处于GPU通信的底层。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097891，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ 1F4B6BE8-B85D-4EA3-94C7-48EC2964CE74”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” “ 1024” height =“ 535” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width=2160,quality=80，onerror = redirct，format = auto/wp-content/wp-content/uploads /2024/10/fig2-17291323864935-1024x535.png“ alt =”“ class =” wp-image-1097891“ srcset =” https://blog.uber.uber.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/image/width，10124 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fig2-1729132323864935.png 1024W，https：//blog.uber.uber-cdn.com/cdn-cgi/image/image/width= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fig2-1729132323864935.png 300W，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fig2-17291323864935.png 768w，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1536,quality=80，quality = 80，yredirt = redirtirt = redirct，format efferect，formect，formect，formect，formect，formect，format = autot = auto/wp-content/wp-content/wp-content/wp-content/2024 /10/fig2-17291323864935.png 1536W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1680,quality=80,180,180,180，onerror = redirct，formect，formect，formect，format = autto = auto/wp-content/wp-content/wp-content/wp-content/uploads/ 2024/10/FIG2-17291323864935.PNG 1680W“ sizes =”（max-Width：1024px）100VW，1024px，1024px“ referrerpolicy =“ no-referferrer”培训软件堆栈。&lt;/figcaption&gt; &lt;/figut&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 292322D2-B608-44F1-93BB-8A794CB0AE6E”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 9CE7E044-4E63-414E-91BB-787B6666666BAA245”，“ opacity”，“ opcity”，“ optical” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/heading” data-wp-block =“ {“ hash”：“ 1388B477-2ADA-46D4-8926-B47D9E2CC6C9”，“ level”：2} -Block-heading“ ID =” H-Distributed-Training-Pipeline”&gt;分布式培训管道&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 93674E70-08AF-454F-454F-8EFF-046A9CD96CDD”，“ dropcap”，“ dropcap”：dropcap“：false}内部实施，我们建立了一个LLM分布式培训管道，其中包括主机通信，数据准备，分布式模型培训和模型检查点管理。这是它的工作方式：&lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name =“ core/list” data-wp-block =“ {“ ordered”：true，“ hash”：“ 901CB5DA-A158-4522-A928-E1B50DF611EF7”，“值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;多主机和多GPU通信&lt;/strong&gt;。首先，Ray Train中的火炬疗法人以射线演员的形式创建了多个工人，手柄内结合通信（由Ray Object Store使用），并在所有主机上在GPU上初始化了Pytorch分布式过程组（Deepspeed）。&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; /li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;数据准备&lt;/strong&gt;。 LLM培训框架支持Uber HDF，Uber Tarrablob和拥抱面对公共数据集的远程数据源。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;模型训练&lt;/strong&gt;。令牌化将输入文本转换为将被馈入模型的整数。对于分布式培训，每个GPU工人使用DeepSpeed零阶段1/2/3选项初始化一个拥抱的面孔变压器训练器对象。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;保存结果。&lt;/strong&gt;与培训实验相关的指标保存在Uber Comet上服务器。射线头节点上的主要训练过程将训练模型的权重和相关的配置文件推向了Terrablob存储。 &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ aceba0d7-957c-43bf-beef-beef-30c6b1b1b9db41”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdT3F2A2DQU9CZxNSsCKbIAIB7ZfHvNFKT2W7E2DRlpzCxmyD0NIwbwy0CfOCs2dnPJdQyHLuH5Ia7Dt5QSgICSuNmz9igsWp_TabDWQ8XCJs1GWbMBRohsvSv9qg-J19oJyuLqixlDKAlRZrfZyhzu3l_3?key=F9WnaYLpB5WvGJfBHoMLXQ&#34; alt=&#34;&#34; referrerpolicy=&#34; No-Referrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图3：Uber LLM分布式训练管道。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/figucaption&gt; &lt;/figucation&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 63DDDA68-46CE-42AB-42AB-A705-5330656936DE”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 79024F68-5234-4376-958A-007999F61C598”，“ opcity” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ ddd7ea80-3f24-40ac-b5d0-ac-b5d0-c51ccdf19df5”，“ level”：2} -Block-neading“ ID =” H-Training-Results&gt;训练结果&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 5E250810-041E-4B72-B72-B1F2-503D25555D34FA”，“ dropcap”，“ dropcap”，“ dropcap”：false}证明内部米开朗基罗平台具有具有吞吐量优化的任何开源LLM的功能和可扩展性。    &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ A3B35586-204B-4320-B82B-69C884B94B942BE”} -Block-neading“ ID =” H-Training-of-at-art-lllms&gt; trains&gt; the&gt;最先进的LLMS &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 770ae998-1513-4b07-9ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd0 e”，dropcap“：dropcap”：false}米开朗基罗平台可以在不同的设置下进行培训，包括与洛拉和Qlora的全参数微调和参数效率高调调音，可以支持最大的开源LLM。  &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097895，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“” center&#34;,&#34;hash&#34;:&#34;60b1c16e-2cee-4f9d-9961-44f6bb418189&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width= “ 1024” height =“ 505” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/10/figure-4-17291324832411-1024x505.png“ alt =” class =“ wp-image-1097895” srcset =“ https://blog.uber.uber-berc.uber-cdn.com/cdn-cdn-cdn-cgi/image/image/width/width/width/width = 1024，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-4-17291324832411.png 1024W，https：//blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onErr = redirect，format = auto/wp-content/uploads/2024/2024/10/figure-4-17291324832411.png 300w，https：// /blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80，onerror=redirect，format = auto/wp-content/uploads/2024/2024/10/figure-4-1729132483241324832411.png 768w， https://blog.uber-cdn.com/cdn-cgi/image/width=1467,quality=80，onerror=redirt = redirect，format = auto/wp-content/uploads/2024/2024/2024/10/10/10/figure-4-17291324832411。 PNG 1467W“ sizes =”（最大宽度：1024px）100VW，1024px“ referrerpolicy =“ no-referferrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图4： Q）Lora&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ F8C07128-CE1D-418F-969B-969B-299937355AB8AE”，“ DropCap”，“ DropCap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 62E2AE55-2ADB-47DB-88DB-88D6-6AAC1A579201”，“ dropcap”，“ dropcap”：false}上面）显示了与洛拉（Lora）和没有洛拉（Lora）的骆驼2 13B和骆驼2 70B的训练损失曲线。我们发现，即使洛拉（Lora）和Qlora使用的GPU少得多，并且训练速度更快，而GPU却少得多，但损失的降低远小于完整的参数训练。因此，重要的是要改善llms的完整参数微调的吞吐量/模型利用率（MFU）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ 2794D532-813B-4EC7-8267-C36C5BFAC293”} -block-heading“ id =” H-Throughput-mfu-optimization“&gt; &lt;br&gt; toput/mfu优化&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 027C8334-2A64-4831-4831-AF4A-324F5ABD02F0F0”，“ dropcap”，“ dropcap”：falles}该模型的自我发挥机制占据了建筑的大量瓶颈，该机制具有二次的时间和记忆复杂性。为了获得更好的培训吞吐量，我们探索了几项行业推荐的努力，以优化GPU内存使用量：CPU卸载和Flash Guate。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A34EF321-DE14-4067-AF33-E2EB15596493”，“ dropcap”，“ dropcap”：false}我们探索的吞吐量优化是使用DeepSpeed零阶段-3 CPU优化器卸载，这导致训练Llama 2 70B时至少34％的GPU存储器减少，批次相同。这使我们能够将批次大小增加3-4次，但仍保持相同的前进速度，因此训练吞吐量增加了2-3次。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 758B796C-630F-443A-9953-7F554395BFE6”，“ dropcap”&gt;第二次培训探索的吞吐量优化正在遵循拥抱Face的建议，以利用闪光灯注意。闪光注意力是一种注意算法，用于更有效地降低二次复杂性和基于尺度变压器的模型，从而更快地训练。通过闪光的注意，我们可以节省具有相同批次大小的GPU内存的50％。如果我们最大限度地使用GPU内存，则可以将批次大小加倍，同时使兼容向前和向后速度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 89BE987D-E630-E630-44C7-B748-E23A605041BC”，“ dropcap”，“ dropcap”：false}效率，我们使用了硬件型号Flops利用率（&lt;a href =“ https://arxiv.org/pdf/2204.02311.pdf” target =“ _ blank” rel =“ noreferrer noopener”&gt; mfu &lt;/a&gt;）。 MFU是观察到的吞吐量与理论最大吞吐量的比率，如果基准的硬件设置在峰值拖船上运行而没有内存或通信架空。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/pragraph” data-wp-block =“ {“ hash”：“ 95c4ddbb-d746-4625-84fb-001e68a2d4445”，“ dropcap”：dropcap“：false}”&gt; ，我们使用&lt;a href =“ https://deepspeed.readthedocs.io/en/latest/flops-profiler.html” target =“ _ blank” rel =“ noreferrer noopener”&gt; deepspeed flops flops flops profiler &lt;/a&gt;获得&lt;/a&gt;获得预期的拖鞋号。每个GPU的拖船计算为：每GPU/迭代延迟的前向和向后拖失lop。然后，我们将其除以设备的峰值理论性能，并获得了我们的最终MFU度量。 ‌在我们所有的实验中，我们在不同的优化设置下最大化了批处理大小，从而充分利用GPU存储器。我们在训练参数中做到了这一点，设置&lt;em&gt; gradient_accumulation_steps = 1 &lt;/em&gt;，以便&lt;em&gt; macro_batch_size = micro_batch_size x num_gpus x num_gpus x 1 &lt;/em&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 3EB1C35D-1AA8-4459-9BCB-C207671F538F”，“ dropcap”，“ dropcap”：false}找到：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ 0824A484-47FE-47FE-415D-990C-59086F7E64A6”，“订购”，“ “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt; &lt;strong&gt; thatput &lt;/strong&gt;：flash flash注意力和CPU卸载保存了GPU内存，使我们能够到达在Llama 2 70B训练期间增加批次尺寸2至7次，并在32 GPU上使用最大的GPU内存使用率（70GB-80GB）（A100上的8个主机，H100上的4个主机）。这导致大量吞吐量增加。  &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt; mfu &lt;/strong&gt;：H100上的MFU低于A100，而GPU利用率不得t充满最大的GPU内存使用量。这可能表明，对于Llama 2 70B培训，我们有内存的GPU，而不是计算结合。这就是为什么CPU卸载可以最大程度地帮助改善MFU的原因，如下图5所示。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;在4个主机上的4 A100/H100，我们可能具有计算结合的GPU而不是内存绑定的GPU。  我们看到了MFU在训练中，美洲驼2 7b高于训练七岁2 70B，而CPU卸载对改善MFU无济于事。如下图6所示，闪光灯的注意力最大。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;网络：&lt;/strong&gt;在我们的实验中，网络使用率约为10GB/秒H100和3GB/秒在A100的Llama 2 70B模型培训。与Infra理论值相比，这很小，这表明与GPU计算和记忆相比，网络尚未是瓶颈。   &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097898，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ F6539680-E550-403C-8250-280EC77192AC”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” “ 1024” height =“ 634” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-contents/uploads /2024/10/figure-5-17291325919540-1024x634.png“ alt =” class =“ wp-image-1097898” title =“ srcset =” srcset =“ CGI/IMAGE/WIDTH = 1024，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-5-17291325919540.png 1024W，https：//blog.uber.uber-cdn.com /cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-17291325919540.png 300w, https://blog.uber- cdn.com/cdn-cgi/image/width=768，quality=80，onerrtor=redirect，format = auto/wp-content/uploads/2024/2024/10/figure-5-17291325919540.png 768w，https：/https：/https：/https：//博客.uber-cdn.com/cdn-cgi/image/width=1234,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-17291325919540.png 1234w&#34; sizes= “（最大宽度：1024px）100VW，1024px” referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图5：训练Llama llama llama 2 70b。图&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ A4B411E3-C488-4737-A15D-7FC23EEB3E67”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1097899，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ aLign”：“”中心“，” hash”：“ BCA783A9-96E7-4C90-9DD0-6DD950E0CBB9”，“ ALT”：“：” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” “ 1024” height =“ 635” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-content/uploads /2024/10/figure-6-17291326224707-1024x635.png“ alt =” class =“ wp-image-1097899” title =“ srcset =” srcset =“ CGI/IMAGE/WIDTH = 1024，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-6-17291326224707.png 1024W，https：//blog.uber.uber-cdn.com /cdn-cgi/image/width = 300，质量= 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/fige-6-17291326224707.png 300W，https://blog.uber.uber-ber-ber-cdn.com/cdn-c.com/cdn-cgi /image/width=768，Quality=80,OnError=redirect，format = auto/wp-content/uploads/2024/2024/10/figure-6-17291326224707.png 768w， cdn-cgi/image/width = 1328，质量= 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/fige-6-17291326224707.png 1328W ）100VW，1024px“ referrerpolicy =“ no-refferrer”&gt; &lt;figcaption class =“ WP-元素接合”&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ F1E75079-9ED3-40D4-9930-C00265E9045C”，“ dropcap”，“ dropcap”：false}&#39;&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ 55558AF28-A0C8-493D-8CA2-1DE822E467E0”} -Block-neading“ ID =” H-LLM-SCORER”&gt; LLM得分&lt;/H3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ a73b63d3-6d45-465b-b421-b421-b421-b421-b79fbf01737f”，“ dropcap”&gt;原始模型或填充模型，我们还实施了一个离线LLM得分手，以在大型数据集上进行预测。我们使用Ray在Kubernetes上创建一个具有多个实例的群集，并且每个实例都有多个GPU。这样，我们可以分发数据并并行得分。在每个实例上，我们都使用推理服务器，例如&lt;a href =“ https://github.com/vllm-project/vllm” target =“ _ blank” rel =“ noreferrer noopener”&gt; vllm &lt;/a&gt;。&lt;/a&gt;。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 4A617AEA-DBBA-4D40-4D40-95BA-8C8C612E6CAC”，“ dropcap”，“ dropcap”：false} ，我们使用射线工作作为运营基金会。每个射线作业都会按等级分配指定数量的CPU和GPU资源，下载模型和分区数据集。射线“ actorpool”汇总了来自不同射线演员的输出。下面的图7显示了该LLM得分手的实现。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ E9D41ADB-1D33-48A2-48A2-988B-33D8C40DE5FB :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcptqsUis4TPQFJP9-OfxrU60nUal734joeKAohIc3jWOMuOU30fC58yufglGf4nzT3KI8VggrcxoASoFb8aSmOQKMXOk5ccrXsIhpQAr_-Pomo-INJ-MUMOMIYkgqKv9u2Q7Dwg3laKTYJ750mU3w45i8?key=F9WnaYLpB5WvGJfBHoMLXQ&#34; alt =“” ReverrerPolicy =“ No-Referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图7：带有Ray和Vllm的分布式LLM得分手。&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 72B43D00-C050-41C9-867A-FC38576E1944”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 59341 eaf-c14b-41c0-a3e4-35d84e603f04”，“ dropcap”：false}”&gt;图8以下总结了使用2 A100和H100 GPU的混合8x7b型号的批次预测的性能，其中输入令牌大小为4K，最大输出令牌为700。我们观察到，我们观察到该批量每秒的输出图表增加了批次尺寸的每秒增加数字。在两种类型的GPU上，H100的吞吐量比A100高3倍&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;digue data-wp-block-name =“ core/image” data-wp-block =“ {“ width”：“ 700px”，“高度”：“自动”，“ align”，“ align”：“ center”，“ hash” ：“ 5DC1B9AD-6441-4171-8B85-D233257A4BF8”，“ ALT”：“” class =“ AlignCenter is-as-indeciped”&gt; &lt;img decoding =“ async” async“ asrc =” src =“ https：https：///lh7-rh7-rh7-rt.-googeleusercertentent。 com/docsz/AD_4nXfpULj9Ck6J4EpGtKKPx8e4f_q925QVj3CisQlmWVKLzr1NiTnTpsSSxOj_NfaZZ8eQWuxxBRM0Grb280IbiDTkdRqaK5RSg3moI346umhtDDnHFqVOhPflkhI0Bk0pIbI272dXCbLHt0zw0iKOafuN-l4?key=F9WnaYLpB5WvGJfBHoMLXQ&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8:在2 x A100/H100上使用Mixtral-8x7b的吞吐量。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 1DCEE380-7696-48BE-AD2B-C7AC666EDCF82”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ D8826856-01F0-4D2B-9B-9B39-9B39-9B0AB9436A37”，“ opacity” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，”哈希：“ 95cf00c9-778f-4b51-b272-b272-fc8090e90e90e9c008”} -Block-neading“ ID =“ H-Conconclusion”&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6fff4811-1c1f-4a4b-b352-069d8588e134”，“ dropcap”，“ dropcap”：false}更大的开源模型将发布，例如Llama 3 450B，我们将改进LLM培训基础设施以支持它们。使用这些固定模型将有助于我们改善Uber Eat饮食建议和搜索。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ C1055457-0D60-4315-8A6A-9846867752E7”，“ dropcap”&gt;想到更广泛的行业，我们探索内部LLM培训的旅程为我们带来了这些见解：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name =“ core/list” data-wp-block =“ {” ordered“：true，hash”：“ CAF84A04A04A04-8F32-464E-A823-E06ADDCF93EE”，“值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;拥抱开源是钥匙&lt;/strong&gt; &lt;strong&gt;赶上生成的AI趋势。&lt;/strong&gt;在短时间内，我们已经看到并受益于快速成长的开源社区拥抱面孔和迅速采用深层速度。每隔几个月就会出版诸如Falcon，Llama和Mixtral之类的开源模型结构。借助开源解决方案，我们可以培训SOTA LLM并实现行业标准MFU，以最大程度地提高GPU使用情况。  &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;经过长期测试且可扩展的集群管理对于快速捕获最新趋势至关重要。 &lt;/strong&gt;我们已建立的雷和库伯尼特堆栈使得将新的开源解决方案集成到我们的生产环境中变得容易。 &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 79492b52-80a3-484e-96db-eaea716fb532”，“ dropcap”，“ dropcap”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 34B325A2-53FB-47E7-9C70-956BB37EA040”，“ opacity”，“ obacity”，“ obacity” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ e1c7934a-3ba0-4400-4400-8d03-913333882acb2”，“ level”级别“：2} -Block-neading“ ID =” H-AckNowledgements&gt; benspledgments &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ D61854A1-4A5C-4936-870C-08FC26B173A6”，“ dropcap”&gt; falscap“：false}”&gt;这个主要步骤对于Uber的Genai来说&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 0cc3578a-4276-4276-48eb-b5bb-b5bb-dda18aac1570”，“ dropcap” ：false}“ class =” hap-small-font-size&gt; &lt;em&gt; apache &lt;sup&gt;®&lt;/sup&gt;，apache kafka，kafka，kafka，apache spark，spark，spark和star logo是注册的商标或商标美国和/或其他国家/地区的Apache软件基金会。使用这些标记，Apache软件基金会没有任何认可。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 1F17D0FC-B135-4A11-4A11-81F0-46174444185C12，“ dropcap” ：false}“ class =” hap-small-font-size&gt; &lt;em&gt; deepspeed &lt;sup&gt;®&lt;/sup&gt;及其徽标，lora &lt;/em&gt; &lt;sup&gt; &lt;sup&gt;®&lt;/sup&gt; &lt;em&gt;徽标&lt;/em&gt; &lt;em&gt;是美国和其他国家的Microsoft &lt;sup&gt;®&lt;/sup&gt;的注册商标。使用这些标记不暗示微软的认可。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 75553DD58-1D4A-407E-BD4D-8D5555ED7BE3771”，“ Dropcap” ：false}“ class =” hapmall-font-size”&gt; &lt;em&gt; kubernetes &lt;sup&gt;®&lt;/sup&gt;及其徽标及其徽标是Linux Foundation &lt;sup&gt;®®&lt;/sup&gt;的注册商标。和其他国家。 Linux基金会没有使用这些标记的认可。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“核心/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ D91B4603-EF84-4B0E-BD0A-C31AEDEF4532”，“ dropcap”：false} -font-size“&gt; &lt;em&gt; Llama 2 &lt;sup&gt;®&lt;/sup&gt;，Llama 3 &lt;Sup&gt;®&lt;/sup&gt;及其徽标是美国在美国注册的商标。和其他国家。使用这些标记不暗示元的认可。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ B8B3F2BB-79ED-43E0-AE31-AE31-31-3F70E2222215105”，“ Dropcap” ：false}“ class =” hap-small-font-size&gt; &lt;em&gt; mixtral &lt;sup&gt;®&lt;/sup&gt;及其徽标是美国和美国和其他国家。使用这些标记不暗示Mistral AI的认可。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ FC01D91D-1AD5-4FF6-B213-314144422227D”，“ dropcap” ：false}“ class =” hapmall-font-size&gt; &lt;em&gt; nvidia &lt;sup&gt;®&lt;/sup&gt;和NVIDIA徽标是美国和其他国家/地区NVIDIA Corporation的商标和/或注册商标。使用这些标记不暗示NVIDIA的认可。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ C3799488-DFDF-4488-9A62-DA61797979757C3D”，“ dropcap” ：false}“ class =” hap-small-font-size&gt; &lt;em&gt; pytorch，pytorch徽标和任何相关标记都是Linux Foundation的商标。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 53D78373-5C6A-4D62-9FD62-9FD1-839994303COL ：false}“ class =” hap-small-font-size&gt; &lt;em&gt;变形金刚&lt;sup&gt;®&lt;/sup&gt;及其徽标是在美国和美国和其他国家。使用这些标记，没有拥抱脸的认可。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 33545b90-EDF8-4266-A93C-C04C04C917F2E”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 1B3DFCD7-24D6-409C-A60C-028E45F2E6BE”，“ Dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 308d94a8-c895-41fb-acd9-12964ced97c6”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;</description>
      <pubDate>Thu, 17 Oct 2024 07:30:00 +0000</pubDate>
    </item>
    <item>
      <title>【Streamlining Financial Precision: Uber’s Advanced Settlement Accounting System】简化财务精确性：Uber的高级和解会计系统</title>
      <link>https://www.uber.com/blog/ubers-advanced-settlement-accounting-system/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;1801f856-06d7-4d1e-b983-5c0e34944441&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d28e00ac-0240-44d8-bd8d-0f7441623771&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the realm of fintech, settlements, refunds, and chargebacks related to PSPs (payment service providers) are crucial transactions that involve the transfer of funds between different financial entities to complete a payment process. PSPs act as intermediaries between merchants and consumers, facilitating the smooth and secure transfer of funds. Settlements in this context refer to the end-of-day process where funds collected from consumers are disbursed to merchants, minus any fees or charges&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4b613f6a-b4a6-43c8-896e-18ee740601af&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Settlement accounting is a critical financial process that involves reconciling and recording all transactions related to settlements, refunds, and other financial activities conducted through PSPs. At Uber, settlement accounting is indispensable due to the sheer volume of transactions and the need for precise financial tracking.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098207,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;98096e93-b824-4c92-af22-468fab18e202&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;555&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-1-17297140298650-1024x555.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098207&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-1-17297140298650.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-1-17297140298650.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-1-17297140298650.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-1-17297140298650.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-1-17297140298650.png 2048w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Summary of card payment processing and the key players in the market.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8d5cd00f-8537-4acf-b571-6ad5f217245b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We process about 1.2 billion settlements each month, handling around $130 billion in cash in transit annually from over 50 different PSPs. This process ensures that ‌funds received from various payment methods are accurately accounted for and matched with the corresponding bank statements. Settlement accounting at Uber involves offsetting receivables booked during revenue accounting, verifying the cash deposited in the bank, and analyzing contracts with PSPs to determine fees, taxes, and other charges associated with transactions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;48f19f93-df8a-4d4f-822b-457c25df29f0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This blog describes Uber’s advanced settlement accounting system. Settlement accounting is crucial for ensuring financial accuracy, preventing fraud, and maintaining regulatory compliance. By automating reconciliation and offering near-real-time reporting, it boosts operational efficiency and supports strategic business decisions. Additionally, it helps manage transaction costs by analyzing PSP fees and taxes. Reliable settlement accounting fosters customer trust through accurate processing and timely resolution of payment issues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b1730c08-4e9d-47af-abab-3c1bdde1ed18&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2ad61c98-7341-4fac-8ca2-4ae6b93f88da&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-motivation&#34;&gt;Motivation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;78f806f0-9dda-4c0a-81d1-45ab56a9cd38&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;PSP files include various events from payment service providers, each initiated by different parties and crucial for maintaining accurate financial operations. We built the settlement accounting system to manage these events.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;2fc0868d-a293-492a-ac65-9d3a34260f39&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-uber-initiated-events&#34;&gt;&lt;strong&gt;Uber-Initiated Events&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a04b5ef0-e7fe-4406-8eca-89838535154b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When considering the payment ecosystem, Uber-initiated events are actions initiated directly by Uber. They include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;40ffc0fa-1d14-4162-b666-1aae618cdd2d&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Collections:&lt;/strong&gt; Uber initiates the collection of funds from riders for services rendered.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Refunds:&lt;/strong&gt; When a rider is owed money back, Uber initiates the refund process. This could be due to ride cancellations, service issues, or other reasons that warrant returning funds to the rider.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;012d12c3-1fc1-4c5b-ba15-c3a0ecdb4b60&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-rider-initiated-events&#34;&gt;&lt;br&gt;&lt;strong&gt;Rider-Initiated Events&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eb657940-a4ba-4677-b0a0-9f6e4850a063&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Rider-initiated events are triggered by riders, typically in response to issues or disputes. These include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c8cc5949-2582-45a0-bb0f-730690789d3f&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Chargebacks:&lt;/strong&gt; Riders can dispute transactions, leading to a chargeback. This process involves reversing a transaction after a rider questions its legitimacy, often resulting in funds being withdrawn from Uber’s account and returned to the rider.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;42fb3550-4e62-4b1e-8a4a-7c84aaad6544&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-psp-initiated-events&#34;&gt;&lt;br&gt;&lt;strong&gt;PSP-Initiated Events&lt;/strong&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9f392df5-7980-4e5b-bf4b-e0b197d5f2b7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;PSP-initiated events are managed by the PSP. These include several critical financial processes:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ceee52b8-0632-4673-88be-e36b511d3901&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Trip Fees:&lt;/strong&gt; These are fees directly related to the trips taken by riders, such as a gateway fee, card network fee, etc.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Non-Trip Fees:&lt;/strong&gt; These are fees that are applied on an aggregated level rather than per trip, such as a gateway fee or card network fee.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Taxes:&lt;/strong&gt; PSPs often handle the collection and remittance of applicable taxes on transactions, per tax regulations.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Payment Verification:&lt;/strong&gt; This involves verifying the authenticity and validity of payments. PSPs perform checks to prevent fraud, ensure that payment details are correct, and that funds are available.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4fb659a4-bb1a-4ce4-960a-0bf593b62ef3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Each of these events plays a vital role in the comprehensive financial management system, ensuring that transactions are processed accurately, disputes are handled properly, and regulatory compliance is maintained. Understanding and managing these events effectively is essential for maintaining financial integrity and operational efficiency in the payment processing ecosystem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4c6d2080-a59c-4dd6-9dcc-da1bb84dedd5&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e9947bc4-e53c-4618-8fcc-1c6c6442a2a5&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-challenges-with-the-psp-files&#34;&gt;Challenges with the PSP files&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d44489e2-2461-4c5f-86ba-62c4bf266f75&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Efficient financial transaction management is critical in today’s digital landscape. Payment service providers facilitate these transactions, but reconciling PSP settlement files can be challenging. Here are the common challenges with PSP settlement files:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e2af04b3-ff0b-4ee3-b248-3a66adbdd8c9&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Complexity:&lt;/strong&gt; Each PSP has its own file format, and there are diverse file delivery mechanisms available.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Duplicates:&lt;/strong&gt; Duplicates occur when the same transaction or entry is recorded more than once in the settlement files. This leads to discrepancies in financial records and causes issues in reconciliation. For instance, a transaction for a payment of $100 might be recorded twice, resulting in an inflated total of $200 instead of the actual $100.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Missing or Wrong ‌References:&lt;/strong&gt; This challenge involves the absence of necessary reference information or the inclusion of incorrect references in the settlement files, making it difficult to match transactions accurately. A transaction record might lack a unique transaction ID or have an incorrect ID that doesn’t match the records in the payment platform, leading to reconciliation issues.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Format Issues:&lt;/strong&gt; These occur when the data in the settlement files don’t conform to the expected format, leading to difficulties in processing and reconciliation. For example, a settlement file might include dates in DD/MM/YYYY format instead of the expected MM/DD/YYYY format, or contain extra columns that aren’t anticipated by the processing system.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Balancing Equation Isn’t Satisfied: &lt;/strong&gt;The balancing equation &lt;em&gt;Settlements – Deductions = Payout&lt;/em&gt;&lt;strong&gt; &lt;/strong&gt;ensures that the total settlements minus deductions should equal the payout amount. Any discrepancies indicate potential errors in the settlement data. For example, if the settlements amount to $10,000 and deductions are $2,000, the payout should be $8,000. If the file shows a payout of $7,500, there’s a discrepancy that needs investigation.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Large One-Off Transactions Monitoring:&lt;/strong&gt; When a PSP conducts a large one-off transaction, it requires special monitoring to ensure it behaves as expected and doesn’t cause disruptions. For example, a PSP might conduct a one-off transaction withholding $10 million USD. Systems must monitor this transaction closely to ensure it’s processed correctly and reflects accurately in all financial records.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;24185785-9fb5-4637-b66b-6ab93e5d81aa&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;042bb279-3a9b-4765-9a3a-27e587175551&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture&#34;&gt;Architecture&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2f029662-28f5-46d4-bc36-d4bed0c7fe1b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The settlement accounting system manages challenges with PSP files and streamlines financial precision. Settlement accounting at Uber has 3 primary components: the Feed Ingestion Service, the Feed Processor Service, and the Reconciliation &amp;amp; Accounting Service. Each service has specific contractual responsibilities that are crucial for understanding their roles in the overall settlement process.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098209,&amp;quot;width&amp;quot;:&amp;quot;802px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;2cf7b2f1-c3cf-4a82-9466-e32365e18f44&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;309&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/architecture-17297141812639-1024x309.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098209&#34; style=&#34;width:802px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/architecture-17297141812639.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/architecture-17297141812639.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/architecture-17297141812639.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/architecture-17297141812639.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/architecture-17297141812639.png 2048w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Parts of the Settlement Accounting infrastructure.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;271b7874-c0f5-42d4-b2de-9fb7a47f5322&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4630a1b6-0d11-4c40-a3eb-d8e18fc53c00&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The File Ingestion Service is integral to managing settlement files obtained from third-party PSPs. Its primary function includes fetching these files from third-party sources and transferring them to a designated file storage location. This approach ensures that we avoid excessive retries or reprocessing requests from ‌third-party sources by storing the files internally.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;a38fcd16-cab7-4543-a646-2cb6901920c0&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-feed-ingestion-service&#34;&gt;&lt;br&gt;Feed Ingestion Service&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098212,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;44a29c2a-e362-4a5f-9230-ecf216a8d297&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;812&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610-1024x812.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098212&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610.png 2048w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: The functioning of the file ingestion service, including downloading, parsing, and normalizing.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f98eecf3-70ee-4bb1-b9f3-fc36f92a6c65&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d0971fac-9043-487d-a283-dc4ed214ef72&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Downloading files from PSPs involves accessing settlement files published by PSPs through various data sources, such as SFTP, APIs, or blob stores. The File Ingestion Service retrieves these files directly from the source and uploads them to a designated blob store. This store serves as a centralized repository from which the files can be accessed for subsequent reading and processing.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c3136627-cb64-4ff8-a6ac-d76fb389c721&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Parsing presents a significant challenge due to the lack of standardized formats among settlement files from different PSPs. This necessitates dynamic parsing tailored to each format and PSP. The File Ingestion Service relies heavily on configuration for parsing the files sent by the PSP. For every PSP onboarding into the system, parser rules are written to parse the files for processing. Before applying parsing rules, we stage the file data into necessary tokens for further processing. This is called tokenization of data. Tokenizing involves splitting using delimiters and tagging the data to configured tokens.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eae27851-4064-46e4-a52b-f863b04115e7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Since PSPs send data in their unique format, it complicates the process of data processing. To address this challenge, the File Ingestion Service performs a crucial function known as normalization. During parsing, the service converts the varied data formats received from PSPs into a standardized, consumable format. This normalization process ensures that the data is structured consistently, facilitating easier and more efficient processing downstream.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3b466219-0aeb-487b-8314-5029766107d4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To effectively process the PSP feed, essential fields like amount, currency, and transaction date are identified as critical. These key business data elements are extracted and structured into a standardized, normalized format known as PSPEvent. This standardized format ensures consistency and clarity of the extracted information. Later, the PSPEvent is transmitted to the feed-processing component for further stages of processing and analysis.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098214,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;4d009874-8211-4bf0-b66f-0fbe3f72b935&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;486&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/rules-17297147319977-1024x486.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098214&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/rules-17297147319977.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/rules-17297147319977.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/rules-17297147319977.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1500,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/rules-17297147319977.png 1500w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Sample normalization for a PSPEvent.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;54447c35-7d55-4f53-90f1-8f77d9ffd0be&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;2d3a5c07-5d52-490b-b070-a6f1350e3a50&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-feed-processor-service&#34;&gt;&lt;br&gt;Feed Processor Service&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;80ebb41f-7de5-4ef1-86f1-a5a066604d0a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As summarized previously, the Feed Parser divides the incoming PSP file data into distinct buckets called splits. This targeted segmentation ensures that each payment event is processed in a contextually relevant manner, setting the foundation for a more efficient and precise reconciliation process.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098217,&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;0545ac55-542c-4be4-b198-4c9f868190a4&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;2394&#34; height=&#34;1584&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.25pm-17297151251181.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1098217&#34; style=&#34;width:700px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2394,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.25pm-17297151251181.jpeg 2394w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.25pm-17297151251181.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.25pm-17297151251181.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.25pm-17297151251181.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.25pm-17297151251181.jpeg 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.25pm-17297151251181.jpeg 2048w&#34; sizes=&#34;(max-width: 2394px) 100vw, 2394px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: The functioning of the batching and aggregating of the normalized events.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;11d8a3d0-09aa-4d3b-9f98-4f8208afc210&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c6c07030-bdf5-48ef-9d9a-346f6f6e39c0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Following the parsing phase, the Feed Processor steps in to handle each of these buckets in parallel. This parallel processing approach significantly accelerates the handling of large volumes of PSP events, reducing overall processing time and enhancing throughput. For each PSP event within a split, the Feed Processor calls the Reconciliation Service. This service meticulously matches these PSP events with Uber’s Payment Platform records, ensuring that every transaction is accurately reconciled.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a4096ec0-fc67-4b80-ac77-182f538c9999&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;However, not all reconciliation attempts are successful. For events where reconciliation fails, the system marks them as unhealthy and submits them to the DLQ (Dead Letter Queue). The DLQ acts as a safety net, ensuring that these events are retried and resolved at a later time. This mechanism maintains the integrity and accuracy of our payment processing pipeline by ensuring no event is lost or forgotten.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a3b70a01-7181-4b9e-8951-8882272e6c38&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Once the financial events are enriched, they’re sent back to the Feed Processor. After completing the processing of a split, these enriched financial events are forwarded to our accounting engine. At this stage, the financial events are meticulously processed, and the corresponding accounting transactions are persistently stored in our data repository. This ensures that every financial event is accurately accounted for, maintaining the fidelity of Uber’s financial records.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;7f5e5564-d4e9-48e6-933d-3e87e853d094&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-reconciliation-amp-accounting-service&#34;&gt;&lt;br&gt;Reconciliation &amp;amp; Accounting Service&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;71ec042c-2efb-4a80-8e4e-991d1d11c9a2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;According to the &lt;a href=&#34;https://www.withum.com/resources/2022-acfe-report-to-the-nations-fraud-trends-and-key-takeaways/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Association of the Certified Fraud Examiners&lt;/a&gt;, businesses typically lose around 5% of their annual revenue to fraud, much of which stems from discrepancies in financial records.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;55820ed7-f53e-4578-8328-0e0028a967eb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Payment reconciliation, in essence, is the process of cross-referencing and verifying financial transactions between the payment service providers and the bank records. The primary goal is to ensure that all transactions are accounted for accurately and that the settlements by the payment service providers match the expected revenue.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;797a34a5-7a2c-473b-9739-2a3191525d19&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Besides protecting against fraud, effective payment reconciliation enables data-driven decision-making, features the trends among various payment service providers, and manages compliance with legal and financial regulations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;11b8223b-83e4-4f2f-adfc-1de3e28ff83c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Reconciliation Service plays a crucial role in reconciling PSPEvents with records on the Uber Payment Platform, ensuring that Uber receives payment for every trip where PSPs were involved in processing transactions. The reconciliation process hinges on matching precise records from both the PSP and Uber Payment Platform, facilitated by a deterministic field called &lt;em&gt;transactionReference&lt;/em&gt; shared between them. This acts as a unique reference, established and stored during the payment transaction process between Uber and the PSP. Uber retains these references to validate incoming data from the PSP during reconciliation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;42bd3ea2-54f3-4efe-b09a-2011ba1e0f09&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098219,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;a9e8c9a0-f704-4d2a-b6d3-b1ba17bade0c&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;974&#34; height=&#34;1024&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.27pm-17297152992089-974x1024.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1098219&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=974,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.27pm-17297152992089.jpeg 974w, https://blog.uber-cdn.com/cdn-cgi/image/width=285,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.27pm-17297152992089.jpeg 285w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.27pm-17297152992089.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1461,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.27pm-17297152992089.jpeg 1461w, https://blog.uber-cdn.com/cdn-cgi/image/width=1632,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10-23-24-at-1.27pm-17297152992089.jpeg 1632w&#34; sizes=&#34;(max-width: 974px) 100vw, 974px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: The reconciliation and accounting architecture for the PSP events.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;42bd3ea2-54f3-4efe-b09a-2011ba1e0f09&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bf8b9c19-9ecc-403c-89dc-5fd8245d87d0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Reconciliation operations aren’t immediate upon trip completion but can occur with a delay due to the PSP sending data to Uber on a scheduled basis—typically daily or weekly, about T+7 days after the transaction. Given Uber processes around 1 billion trips per month via PSPs, the system must accommodate high scalability and robust storage capabilities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d814020e-61c7-4622-b76a-cff09e2839e3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To streamline operations and segregate responsibilities between trip ingestion and PSPEvent processing, we designed the system with a dedicated Trip Ingestion Service. Trip information is ingested into the system via an Apache Kafka&lt;sup&gt;®&lt;/sup&gt; consumer triggered on an event basis, immediately upon trip completion. The Kafka consumer hydrates the cache with essential details such as trip ID and the &lt;em&gt;transactionReference&lt;/em&gt;, enabling swift retrieval and correlation when processing PSPEvents.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;243e1731-aed9-426f-a6dc-619c286e78c4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When reconciliation is successful, the events undergo an enrichment process. They’re supplemented with data from 15 different upstream sources, transforming them into comprehensive financial events. These financial events are self-sufficient data models, containing all the information necessary for precise and accurate accounting.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c0a9fd4d-71b1-4057-a277-6762284ba3ca&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;These financial events are sent to the accounting service to generate the financial accounting transactions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b3c213e7-e361-4b8f-8986-1174650c4763&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Upon creation of a financial event, it’s promptly routed to the accounting engine, where meticulously configured accounting rules come into play. Each event type is associated with specific accounting rules that guide the evaluation process. These financial events carry all necessary parameters to facilitate the application of relevant accounting rules.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;92a24c3d-04f2-4e9c-a4e4-b1b32fca9704&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Every financial event has pre-configured rulesets designed to calculate various segments of the accounting treatment. These events are tagged with attributes such as location, line of business, account type, etc. The account types are broadly categorized into assets, liabilities, and profit and loss. Each of these categories is further subdivided into revenue, contra-revenue, receivables, and payables and expenses.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f5524533-ae41-4f0f-b9c7-bb5bbf318fca&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;After ‌accounting rules are evaluated for a given event, a transaction model is generated based on the outcomes. This model represents the accounting treatment applied to the event. The transaction model undergoes a series of validations to ensure accuracy and compliance with accounting standards. Once validated, the transaction is saved in the data store and then published to a Kafka topic for downstream systems to consume.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;607ccc00-6ca1-4e7f-b5a3-1e648320e60a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The validated transactions are aggregated into a ledger, which provides a comprehensive view of all financial activities. This ledger is essential for financial reporting, audit trails, and strategic decision-making.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d41bc132-3f05-4d65-a1f0-8ebca8cdd9f8&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;d0279e52-e7fc-4433-ad9b-ed1edc9108aa&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;300d14ed-d5f7-4d92-8d92-5d647f81fea9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our comprehensive settlement accounting system at Uber is designed to efficiently handle the immense volume of transactions processed each month. By using a structured approach that includes parsing, processing, reconciliation, enrichment, and accounting, we ensure that each financial event is accurately captured and recorded.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;062b88af-8ec0-4b95-9269-0e06bb8896dd&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This robust system not only accelerates processing time but also enhances the accuracy and integrity of our financial operations. Automated reconciliation and real-time reporting improve operational efficiency, support strategic business decisions, and maintain regulatory compliance. Additionally, it helps in managing transaction costs, preventing fraud, and fostering customer trust through precise and timely resolution of payment issues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dbd560d5-73b2-4dc6-b86e-a15319458955&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Ultimately, this settlement accounting framework underscores Uber’s commitment to operational excellence and reliability, ensuring that our financial processes are secure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;77267101-94c4-4706-bb0a-d07e537f27df&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Apache&lt;sup&gt;®&lt;/sup&gt;, Apache Kafka&lt;sup&gt;®&lt;/sup&gt;, Kafka&lt;sup&gt;®&lt;/sup&gt;, Apache Cassandra&lt;sup&gt;®&lt;/sup&gt;, Cassandra&lt;sup&gt;®&lt;/sup&gt;, Apache Spark&lt;sup&gt; ™&lt;/sup&gt;, Spark&lt;sup&gt; ™&lt;/sup&gt;, Apache Hive&lt;sup&gt; ™&lt;/sup&gt;, and Hive&lt;sup&gt; ™&lt;/sup&gt; are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;】&lt;h1 data-data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：1，”哈希：“ 1801F856-06D7-4D1E-B983-5C0E34944441” -block-neading“ id =” H-Instruction“&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ d28e00ac-0240-440-44d8-bd8D8D-0f744441623771”，“ dropcap”&gt;与PSP（支付服务提供商）相关的金融科技，定居点，退款和退款是关键交易，涉及在不同的金融实体之间转移资金以完成付款过程。 PSP充当商人和消费者之间的中介，促进了资金的平稳和安全转移。在此上下文中的定居点是指从消费者那里收取的资金向商家发出的，减去任何费用或费用的流程。&lt;/strong&gt;。&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 4B613F6A-B4A6-43C8-896E-18EE-18EE740601AF”，“ dropcap”，“ dropcap”，“ dropcap”：false}一个关键的财务流程，涉及对和解和记录与定居点，退款和其他通过PSP进行的其他财务活动相关的所有交易。在Uber，由于交易量的庞大以及需要精确的财务跟踪，结算会计是必不可少的。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098207，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ aLign”：“” center&#34;,&#34;hash&#34;:&#34;98096e93-b824-4c92-af22-468fab18e202&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width= “ 1024” height =“ 555” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width = 2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-content/uploads /2024/10/image-1-17297140298650-1024x5555.png“ alt =” class =“ wp-image-1098207” srcset =“ https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/imimage/width/width/width/width/width = 1024，质量= 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/10/image-1-17297140298650.png 1024W，https://blog.uber.uber.uber-ber-ber-cdn.com/cdn-c.com/cdn-cgi/图像/宽度= 300，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/image-1-17297140298650.png 300W，https://blog.uber.uber-ber-cdn.com/cdn -cgi/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/10/image-1-17297140298650.png 768w，https：//blog.uber-cdn。 com/cdn-cgi/image/width = 1536，质量= 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/10/image-1-17297140298650.png 1536W，https：//blog.uber -cdn.com/cdn-cgi/image/width=2048, Quality=80，onErr = redirect，format = auto/wp-content/uploads/2024/2024/10/image-1729714140298650.png 2048w“ sizes =”（最大宽度：1024px）100VW，1024px“ reverrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图1：卡付款处理的摘要和市场的主要参与者。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/paragrapH“ data-wp-block =” {“ hash”：“ 8D5CD00F-8537-4ACF-B571-6AD5F217245B”，“ dropcap”：false}：“ false}”&gt;我们每月处理约12亿个定居点，处理约1.2亿美元的现金。每年从50个不同的PSP中进行过境。并分析与PSP的合同，以确定与交易相关的费用，税收和其他费用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 48f1933-df8a-4d4f-822b-822b-457c257c257c25df29f0”，“ dropcap”&gt; dropcap} Uber的高级和解会计系统。和解委员会对于确保财务准确性，防止欺诈和维持监管合规性至关重要。通过自动化和解并提供近实时的报告，它提高了运营效率并支持战略业务决策。此外，它通过分析PSP费用和税收来帮助管理交易成本。可靠的和解会计会通过准确的处理和及时解决付款问题来促进客户信任。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ B1730C08-4E9D-47AF-ABAB-3C1BDDE1ED18”，“ opacity”，“ obsitical”：“ Alpha-Channel”}“}”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ 2AD61C98-7341-4FAC-8CA2-4AE6B933F88DA”，“ level”：2} class =“ WP -Block-neading“ ID =” H-Motivation“&gt;动机&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 78F806F0-9DDA-4C0A-4C0A-81D1-45AB56A9CD38”，“ DROPCAP”支付服务提供商的各种活动，每一项由不同的当​​事人发起，对于维持准确的财务运营至关重要。我们构建了解决这些事件的结算会计系统。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，”哈希： -Block-neading“ ID =” H-uber发射的事件“&gt; &lt;strong&gt; Uber发射的事件&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ a04b5ef0-e7fe-4406-4406-8eca-89838535154b”，“ dropcap”：dropcap“：dropcap”：false}付款生态系统，Uber发起的事件是Uber直接发起的动作。它们包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ 40ffc0fa-1d14-4162-b6662-b666-1Aae618cdd2d”，“ orded”：fords“：false”：false，false，“ values”值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;集合：&lt;/strong&gt; uber启动集合从骑手提供服务的资金。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;退款：&lt;/strong&gt;当骑手退还货币时，Uber会发起退款流程。这可能是由于乘车取消，服务问题或其他需要将资金退还给骑手的原因。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ 012D12C3-1FC1-4C5B-BA15-C3A0ECDB4B60”} -block-neading“ ID =” H骑手发射的事件“&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;骑手发动的事件&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ EB657940-A4BA-4677-B0A0-9F6E0-9F6E4850A063”，“ dropcap”，“ dropcap”：false}事件是由骑手触发的，通常是针对问题或争议的。这些包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ C8CC5949-2582-45A0-BB0F-730690789D3F”，“订购”，“ false”：false，“值，”值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt; dackbacks：&lt;/strong&gt;骑手可以对交易提出异议，从而导致退款。此过程涉及在骑手质疑其合法性之后逆转交易，通常导致资金从Uber的帐户中撤回并返回骑手。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ 42FB3550-4E62-4B1E-8A4A-8A4A-7C84AAAAAD656544”} -Block-neading“ ID =” H-PSP-Inipiated-Events“&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt; PSP发射事件&lt;/strong&gt; &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 9F392DF5-7980-4E5B-BF4B-BF4B-E0B197D55F2B7”，“ dropcap”：dropcap“：fals}”&gt; psps-pspsinitiated事件由PSP管理。这些包括几个关键的财务流程：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ CEEE52B8-0632-4673-4673-88BE-E36B511D3901”，“订购”：fords“：false”：false，“值“}” class =“ wp-block-list”&gt;&#xA;在例如网关费用，卡网络费用等&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;非旅行费：&lt;/strong&gt;这些是在汇总级别上应用的费用而不是每次旅行，例如网关费用或卡网络费。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;税收：&lt;/strong&gt; psps通常处理对交易的适用税款的收集和汇款，根据税法。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;付款验证：&lt;/strong&gt;这涉及验证付款的真实性和有效性。 PSP执行检查以防止欺诈，确保付款细节正确，并且资金可用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p数​​据-wp-block-name =“ core/conagraph” data-wp-block =“ {“ hash”：“ 4FB659A4-BB1A-4​​CE4-960A-0BF593B62EF3”，“ dropcap”，“ dropcap”，“ dropcap”：false}在综合财务管理系统中的重要作用，确保准确处理交易，正确处理争议，并保持监管合规性。有效理解和管理这些事件对于维持付款处理生态系统中的财务完整性和运营效率至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 4C6D2080-A59C-4DD6-9DCC-DCC-DA1BBBBBB84DEDD55”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}“}”}“}”}“}”} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ e9947bc4-e53c-4618-8fcc-1c6c6442a2a5”，“ level”，“ level”：2} class =“ class =” wp -Block-neading“ ID =” h-challenges-with-the-psp-files&gt; psp文件&lt;/h2&gt;挑战&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ D444489E2-2461-4C5F-86BA-86BA-62C4BF266F75”，“ dropcap”，“ dropcap”管理对于当今的数字景观至关重要。支付服务提供商促进这些交易，但是对PSP结算文件进行调解可能具有挑战性。这是PSP结算文件的常见挑战：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ e2af04b3-ff0b-4ee3-b248-3a66666Adbdd8c9”，“ orded”：fords&#39;：false“：false”，“值，” valuation，“ values”： “}” class =“ wp-block-list”&gt;&#xA;在可用的交付机制。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;重复：&lt;/strong&gt;重复发生相同的交易或条目多次记录在解决文件中。这导致财务记录差异，并导致和解问题。例如，付款100美元的交易可能会记录两次，导致总计200美元，而不是实际的100美元。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;失踪或错误‌参考：&lt;/strong&gt;此挑战涉及没有必要的参考信息或在结算文件中包含错误的引用，因此很难准确匹配交易。交易记录可能缺乏唯一的事务ID或具有与付款平台中的记录相匹配的不正确ID，从而导致对帐问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;格式问题：&lt;/strong&gt;当结算文件中的数据不在符合预期的格式，导致处理与和解的困难。例如，结算文件可能包括daTES以DD/MM/YYYY格式而不是预期的MM/DD/YYYY格式，或包含处理系统未预料的额外列。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;平衡方程不满足：&lt;/strong&gt;平衡方程式&lt;em&gt; settlements  - 扣除=支付&lt;/em&gt; &lt;strong&gt; &lt;/strong&gt;确保总和减去扣除额应等于支付金额。任何差异都表示解决数据中的潜在错误。例如，如果定居点为10,000美元，扣除额为2,000美元，则支出应为8,000美元。如果文件的支出为$ 7,500，则需要调查差异。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;大型一次性交易监视：&lt;/strong&gt; PSP执行大型一单位 - 取消交易，需要进行特殊监控，以确保其行为预期并且不会引起干扰。例如，PSP可能会进行一次性交易，收取1000万美元。系统必须密切监视此交易，以确保其正确处理并在所有财务记录中准确反映。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 24185785-9FB5-4637-B66B-6B66B-6AB93E5D81AA”，“ opitical class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 042BB279-3A9B-4765-9A3A-27E587175551”，“级别”：2} -block-heading“ id =“ H-Architecture”&gt; Architecture &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2f029662-28f5-46d4-bc36-bc36-bc36-d4bed0c7fe1b”，“ dropcap”，“ dropcap”：false}系统通过PSP文件来管理挑战，并简化财务精确度。 Uber的和解委员会有3个主要组成部分：饲料摄入服务，饲料处理器服务以及对帐与会计服务。每项服务都有特定的合同责任，这对于了解其在整体和解过程中的角色至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098209，“ width”：“ 802px”，“高度”：“自动”，“ sizeSlug”：“”大”，“ linkDestination”：“无”，“ ALIGN”：“中心”，“ hash”：“ 2CF7B2F1-C3CF-4A82-9466-E32365E18F44”，“ ALT”：“}” class =“ AmignCenter size-large固定的“&gt; &lt;img loading =“ lazy” dexoding =“ async” width =“ 1024” height =“ 309” src =“ https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 2160，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/架构1729714141812639-1024X309.PNG“ 802px;高度：自动“ srcset =” https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80，onerror=重定向，格式= auto/wp-content/uploads/2024/10/Architecture 17297141812639.png 1024W，https://blog.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/width=300,00，quality = 300，quality = 80 cquality = 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/Architecture 17297141812639.png 300W，https://blog.uber..uber-cdn.com/cdn-cdn.com/cdn-cgi/image/image/image/image/image/width = 768,quality = 80 OnError =重定向，格式= auto/wp-content/uploads/2024/10/架构17297141812639.png 768W，https://blog.uber.uber-cdn.com/cdn-cdn-cgi/image/image/image/image/image/width=1536,quality=80 ，OnError =重定向，格式= auto/wp-content/uploads/2024/10/Architecture 17297141812639.png 1536W，https://blog.uber.uber-cdn.com/cdn-cdn-cgi/image/image/image/width=2048,quality = 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/架构17297141812639.png 2048w“ sizes =”（max-width：1024px）100VW，1024px“ referrerPolicyCeverrerPolyCilyCy =” no-re-referrerrerererererererererer&#39;s&gt; &lt;&gt; &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FIGCAPTION类=“ WP-元素捕获”&gt;图2：定居会计基础架构的部分。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 271B7874-C0F5-42D4-B2DE-9FB7A47F5322”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 4630a1b6-0d11-4c40d11-4c40-a3eb-d8e18e18fc53c00”，“ dropcap”，“ dropcap”：false}服务是管理从第三方PSP获得的结算文件不可或缺的。它的主要功能包括将这些文件从第三方来源获取并将其传输到指定的文件存储位置。这种方法可确保我们通过内部存储文件来避免从第三派对来源进行过度检索或重新处理请求。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ a38fcd16-cab7-4543-a646-a646-2cb6901920c0”} -Block-neading“ ID =” H-Feed-ingestion-Service“&gt; &lt;br&gt; feed摄入服务&lt;/h3&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1098212，“ sizeLug”：“ sizeSlug”：“大”，“ linkDestination”：“ none”，“ aLign”：“”中心“，”哈希：“ 44A29C2A-E362-4A5F-9230-ECF216A8D297”，“ ALT”：“：” class =“ AlignCenter size-large”&gt; &lt;img loading&gt; &lt;img loading =“ lazy lazy” dododing =“ “ 1024” height =“ 812” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-contents/uploads /2024/10/feed-ingestion-17297145987610-1024x812.png“ alt =” class =“ wp-image-1098212” srcset =“ https：///blog.uber.uber.uber-ber..uber-cdn.com/cdn-cdn-c.com/cdn-cgi/image/image/image/image/width/width- = 1024，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610.png 1024W，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/图像/宽度= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610.png 300W，https://blog.uber-cdn.com/cdn -cgi/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610.png 768W，https：https：//blog.uber-cdn。 com/cdn-cgi/image/width = 1536，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610.png 1536W，https：//blog.uber.uber.uber-cdn.com/cdn-cdn-cgi/image/image/width = 2048，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/feed-ingestion-17297145987610.png 2048w“ size =”（max-width：max-width：1024px）100VW，1024px“ notrerpolicy =” notrerpolicy =“ referrerpolicy =”推荐人“&gt; &lt;figcaption class =“ WP-元素caption”&gt;图3：文件摄入服务的功能，包括下载，解析和归一化。&lt;/figcaption&gt; &lt;/figuction&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ F98EECF3-70EE-4BB1-B9F3-FC36F92A6C6C65”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ D0971FAC-9043-487D-A283-DC4ED214ED214EF72”，“ dropcap”，“ dropcap”：false} PSP涉及通过各种数据源（例如SFTP，API或BLOB存储）访问PSP发布的结算文件。文件摄入服务将这些文件直接从源检索，并将其上传到指定的BLOB商店。该商店用作集中式存储库，可以从中访问文件以进行后续阅读和处理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ C3136627-CB64-4FF8-4FF8-A6AC-D76FB389C721”，“ dropcap”，“ dropcap”，“ dropcap”：false}由于来自不同PSP的和解文件之间缺乏标准化格式，因此很大的挑战。这需要针对每种格式和PSP量身定制的动态解析。文件摄入服务在很大程度上依赖于配置来解析PSP发送的文件。对于进入系统的每个PSP入门，解析器规则都是为了解析用于处理的文件。在应用解析规则之前，我们将文件数据分为必要的令牌以进行进一步处理。这称为数据的象征化。令牌化涉及使用定界符分裂并将数据标记为配置的令牌。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ eae27851-4064-46e4-a52b-a52b-f863b04115e7”，“ dropcap”，“ dropcap”：false}以其独特格式的数据使数据处理过程复杂化。为了应对这一挑战，文件摄入服务执行一个关键功能，称为归一化。在解析过程中，该服务将从PSP收到的各种数据格式转换为标准化的，消耗的格式。这个归一化过程可确保数据始终如一地构建，从而促进更轻松，更有效的处理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 3B466219-0AEB-487B-487B-8314-5029766107D4”，“ dropcap”：dropcap“：false} PSP提要，金额，货币和交易日期等基本领域被确定为关键。这些关键的业务数据元素被提取并结构为标准化的标准化格式，称为PSPEVENT。这个标准大小格式确保提取信息的一致性和清晰度。后来，将PSPEVENT传输到饲料处理组件以进行进一步的处理和分析阶段。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098214，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ aLign”：“” center&#34;,&#34;hash&#34;:&#34;4d009874-8211-4bf0-b66f-0fbe3f72b935&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width= “ 1024” height =“ 486” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width=2160,quality = 80，onerror = redirct，formect，format = auto/wp-content/wp-content/uploads /2024/10/rules-1729714731977-1024X486.png“ alt =” class =“ wp-image-1098214” srcset =“ https://blog.uber.uber.uber.uber-ber..uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/image/width，10124 ，质量= 80，OnError =重定向，格式=自动/wp-content/uploads/2024/10/rules-17297147319977.png 1024W，https：//blog.uber.uber-cdn.com/cdn-cdn.com/cdn-cgi/image/image/width= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/10/rules-17297147319977.png 300W，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/width = 768，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/10/rules-17297147319977.png 768W，https://blog.uber.uber.uber.ulber-c.com/cdn-c.com/cdn-cgi/image/宽度= 1500，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/10/rules-17297147319977.png 1500W 1500W“ size =”（max-witth：max-witth：1024px）100vw，1024px，1024px“ referrercolicy =” No-Referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图4：pspevent的样本归一化。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/figife&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 54447c35-7d55-7d55-4f53-90f1-90f1-8f1-8f77d9ffd0be”，“ dropcap”，“ dropcap”：dropcap“：false}”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ 2D3A5C07-5D52-490B-b070-a6f1350e3aa} -Block-heading“ id =” H-Feed Processor-Service“&gt; &lt;br&gt; feed处理器服务&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 80EBBB41F-7DE5-7DE5-4EF1-86F1-86F1-A5A0666604D0A”，“ dropcap”，“ dropcap”：false} ，Feed解析器将传入的PSP文件数据分为称为拆分的不同存储桶。该针对性的细分可确保以上下文相关的方式处理每个付款事件，从而为更高效，更精确的和解过程奠定基础。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098217，“ width”：“ 700px”，“高度”：“自动”，“ sizeSlug”：“”完整”，“ linkdestination”：“无”，“对齐”：“中心”，“ hash”：“ 0545AC5555-542C-4BE4BBE4-B198-4C98-4C9F868190A4”，“ ALT”：“：”}“}” class =“ AnignCenter Size-Full固定的“&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 2394” height =“ 1584” src =“ https：//blog.uber.uber-cdn.com/cdn-cgi/image/width = 2160，Quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/10/image-10-23-24-at-1.25pm​​-172971512511251181.jpeg“ alt =” class =“” “ wp-image-1098217”样式=“宽度：700px;高度：auto” srcset =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width = 2394,quality=80，onerror = redirect ，格式= auto/wp-content/uploads/2024/10/image-10-23-24-at-1.25pm​​-17297151251181.jpeg 2394W，https://blog.uber.uber-cdn.com/cdn.com/cdn-cgi/image /width = 300，Quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/10/image-10-23-24-at-1.25pm​​-172971512511251181.jpeg 300w，https：https：// blog .uber-cdn.com/cdn-cgi/image/width = 1024，质量= 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/10/image-10-23-24-AT-1.25 PM-17297151251181.JPEG 1024W，https：//blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80，onerror = redirt = redirct，format = autt = auto/wp-content/wp-content/wp-content/uploads/2024/2024/10 /Image-10-23-24-AT-1.25PM-17297151251181.JPEG 768W，https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width=1536,1536,quality = 80,80,80,90,80,90,90,90,80,9 = auto/wp-content/uploads/2024/10/image-10-23-24-at-1.25pm​​-17297151251181.jpeg 1536W，https://blog.uber.uber-cdn.com/cdn-cdn-cdn-cgi/image/image/width = 2048，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/image-10-23-23-24-at-1.25pm​​-17297151251181.jpeg 2048w“ sizes =”（最大宽度：2394px）100VW，2394px“ referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp-element-caption”&gt;图5：归一化事件的批处理和聚合的功能。 &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 11D8A3D0-09AA-4D3B-9F98-4F98-4F8208208208AFC210”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash&#39;：” C6C07030-BDF5-48EF-9D9A-346F6F6EF6E39C0“相位，进料处理器逐步处理以并联处理这些存储桶。这种并行处理方法显着加速了大量PSP事件的处理，减少了整体处理时间并增强吞吐量。对于拆分中的每个PSP事件，提要处理器都会调用对帐服务。此服务将这些PSP事件与Uber的付款平台记录进行了仔细的匹配，从而确保每笔交易都准确地进行了调和。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A4096EC0-FC67-4B80-AC77-AC77-182F538C999999”，“ dropcap”，“ dropcap”：false}所有的和解尝试都是成功的。对于和解失败的事件，该系统将它们标记为不健康，并将其提交给DLQ（死信队列）。 DLQ充当安全网，以确保这些事件在以后进行并解决。这种机制通过确保不会丢失或遗忘的付款处理管道的完整性和准确性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a3b70a01-7181-4b9e-8951-8882272e6c38&#34;,&#34;dropCap&#34;:false}&#34;&gt;Once the financial事件是en我被送回饲料处理器。完成分拆的处理后，这些丰富的财务事件将转发给我们的会计引擎。在此阶段，财务事件经过精心处理，相应的会计交易持续存储在我们的数据存储库中。这样可以确保准确考虑每个金融活动，并保持Uber财务记录的保真度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ 7f55564-d4e9-48e9-48e6-9333d-3e87E853d094 -Block-neading“ ID =” H-Reconciliation-amp-accouscouncing-service“&gt; &lt;br&gt;对帐和会计服务&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 71ec042c-2efb-4A80-80-80-8E4E-991D1D1D11C9A2”，“ dropcap”，“ dropcap”：false} &lt;a href =“ https://www.withum.com/resources/2022-acfe-report-to-the-the-nation-fraud-trend-trend-trends-and-key-takeaways/” target =“ _ blank” rel =“ noreferrer noopener “&gt;认证欺诈审查员的协会&lt;/a&gt;，企业通常会损失其年收入的5％，而欺诈的大约是财务记录中的差异。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 55820 ed7-f53e-4578-4578-8328-8328-0E0028A967EB”，“ dropcap”，“ dropcap”：false}本质上，是付款服务提供商与银行记录之间的交叉引用和验证财务交易的过程。主要目标是确保所有交易都准确地解释了所有交易，并且支付服务提供商的定居点与预期的收入相匹配。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 797A34A5-7A2C-473B-9739-9739-2A3191525219”，“ dropcap”：dropcap“：false}”&gt;欺诈，有效的付款对帐可以实现数据驱动的决策，以各种支付服务提供商之间的趋势为特征，并管理遵守法律和财务法规。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 11B8223B-83E4-4F2F-ADFC-1DE3E28FF83C”，“ dropcap”，“ dropcap”：false}在UBER支付平台上与记录核对PSPEVENT中起着至关重要的作用，以确保Uber收到PSP参与处理交易的每次旅行的付款。对帐过程取决于来自PSP和UBER支付平台的匹配精确记录，这是由确定性字段促进的，称为&lt;em&gt; transactionReference &lt;/em&gt;之间共享它们之间。这是在Uber和PSP之间的付款交易过程中建立和存储的独特参考。 Uber保留这些参考，以验证对帐期间从PSP验证传入数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 42BD3EA2-54F3-4F3-4EFE-B09A-2011-2011ba1e0f09“，” dropcap“：false}”&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098219，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ aLign”：“”中心”，“ hash”：“ A9E8C9A0-F704-4D2A-B6D3-B1BA14BADE0C”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” “ 974” height =“ 1024” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width = 2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-contents/uploads /2024/10/image-10-23-24-at-1.27pm-17297152992089-974x1024.jpeg“ alt =” class =“ wp-image-1098219” srcset =“ srcset =” https：//blog.uber-cdn。 com/cdn-cgi/image/width = 974，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/10/image-10-23-23-24-at-1.27pm-172971529992089.jpeg 974w, https://blog.uber-cdn.com/cdn-cgi/image/width=285,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/image-10- 23-24-AT-1.27PM-17297152992089.JPEG 285W，https：//blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 768,quality = 80，quality = 80，onerror = redirctemt = redirect，format inform = autto = auuto/wp--wp--wp--wp--wp--wp--wp--wp--wp--wp--内容/上载/2024/10/Image-10-23-24-at-1.27pm-17297152992089.jpeg 768w，https://blog.uber.uber..uber-cdn.com/cdn-cgi/cgi/image/image/image/width=1461,quality== 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/image-10-23-23-24-AT-1.27PM-17297152992089.JPEG 1461W，https://blog.uber-cdn.com/ cdn-cgi/image/width = 1632，质量= 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/10/image-10-23-23-24-at-1.27pm-1729715299202089.jpeg 1632w wp sizes =“（最大宽度：974px）100VW，974px” reverrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图6：PSP事件的对帐和会计结构。&lt;/figcaption。 &gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 42BD3EA2-54F3-4EFE-B09A-2011B2011ba1e0f09”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ BF8B9C19-9ECC-403C-89DC-5FDC-5FD8245D87D0”，“ DROPCAP” t立即完成行程完成，但由于PSP按计划将数据发送给Uber，可能会延迟发生 - 每天或每周，大约在交易后大约t+7天。给定Uber流程每月通过PSP进行大约10亿次旅行，该系统必须可容纳高可扩展性和可靠的存储功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ D814020E-61C7-4622-B76A-CFF09E2839E3”，“ dropcap”，“ dropcap”：false}并隔离了旅行摄入和PSPEVENT处理之间的责任，我们设计了专门的旅行摄入服务的系统。旅行信息通过Apache Kafka &lt;sup&gt;®&lt;/sup&gt;在事件的基础上触发的消费者摄入到系统中。 Kafka消费者将高速缓存水化，例如Trip ID和&lt;em&gt; TransActionReference &lt;/em&gt;，ENAB处理PSPEVENTS时的Ling Swift检索和相关性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 243e1731-aed9-426f-a6dc-619c286e78c4”，“ dropcap”，“ dropcap”成功的事件会经历一个丰富的过程。他们补充了来自15种不同上游来源的数据，将其转变为全面的财务事件。这些财务事件是自给自足的数据模型，其中包含精确和准确会计所需的所有信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ C0A9FD4D-71B1-4057-A277-6762284BA3CA”，“ Dropcap”&gt;这些财务事件被发送到会计服务以生成财务会计交易。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ B3C213E7-E361-4B8F-8986-1174650C4763”，“ Dropcap”&gt; Fals}这是一项财务活动，它很快被路由到会计引擎，在该引擎中精心策划的会计规则开始发挥作用。每种事件类型都与指导评估过程的特定会计规则相关联。这些财务事件携带所有必要的参数，以促进相关的会计规则的应用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 92A24C3D-04F2-4E9C-A4E4-B1B32FCA9704”，“ dropcap”&gt; dropcap“已经预先配置的规则集旨在计算会计处理的各个部分。这些事件的标记为属性，例如位置，业务范围，帐户类型等。帐户类型大致归类为资产，负债和损益。这些类别中的每一个都被进一步细分为收入，逆转，应收账款以及应付额和费用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ F55524533-AE41-41F0F-B9C7-BB5BBBBBF318FCA”，“ dropcap”，“ dropcap”：false}评估给定事件，基于结果生成事务模型。该模型代表适用于事件的会计处理。交易模型经过一系列验证，以确保准确性和遵守会计标准。经过验证后，该交易将保存在数据存储中，然后发布到KAFKA主题以使下游系统消耗。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 607ccc00-6ca1-4e7f-b5a3-1e648320e60a”，“ dropcap”，“ dropcap”：false}被汇总到分类帐中，该分类帐提供了所有财务活动的全面看法。该分类帐对于财务报告，审计跟踪和战略决策至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ D41BC132-3F05-4D65-A1F0-A1F0-8EBCA8CDD9F8”，＆quot; opacity&#39;：“ alpha-channel”}“ class =” wp-block-separator has-alpha-channel-opacity&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，“ hash”：“ D0279E52-E7FC-4433-AD9B-AD9B-ED9B-ED1EDC9108AA”} -Block-neading“ ID =“ H-Conconclusion”&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 300D14ED-D5F7-4D92-8D92-592-5D647F81FEA9”，“ dropcap”，“ dropcap”：false} Uber的会计系统旨在有效处理每个月处理的大量交易。通过使用包括解析，处理，对帐，丰富和会计的结构化方法，我们确保每个财务事件都被准确捕获和记录。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 062B888AF-8EC0-4B95-9269-0E06BBBB888896DD”，“ dropcap”，“ dropcap”：false}不仅加速处理时间，而且还提高了我们的财务运营的准确性和完整性。自动对帐和实时报告提高了运营效率，支持战略业务决策并保持监管合规性。此外，它有助于通过精确且及时解决付款问题来管理交易成本，防止欺诈和促进客户信任。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ dbd560d55-73b2-4dc6-b86e-a153194589555”，“ dropcap”：dropcap“：false}”和解委员会框架强调了Uber对运营卓越和可靠性的承诺，以确保我们的财务流程安全。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 77267101-94C4-4706-4706-BB0A-D07E537E537E537F27DF”，“ dropcap” ：false}“ class =” hap-small-font-size”&gt; &lt;em&gt; apache &lt;sup&gt;®&lt;/sup&gt;，apache kafka &lt;sup&gt;®&lt;/sup&gt;，kafka &lt;sup&gt;®&lt;/sup&gt;， Apache Cassandra &lt;Sup&gt;®&lt;/sup&gt;，Cassandra &lt;sup&gt;®&lt;/sup&gt;，Apache Spark &lt;Sup&gt;™&lt;/sup&gt;™&lt;/sup&gt;，Spark &lt;sup&gt;™&lt;/sup&gt;™&lt;/sup&gt;，Apache Hive Hive &lt;SUP&gt;™&lt;/&lt;/&lt;/&lt;/&lt;/ Sup&gt;和Hive &lt;Sup&gt;™&lt;/sup&gt;是美国和/或其他国家/地区Apache软件基金会的注册商标或商标。使用这些标记，Apache软件基金会没有任何认可。&lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 24 Oct 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How Uber Uses Ray® to Optimize the Rides Business】Uber如何使用Ray®优化乘车业务</title>
      <link>https://www.uber.com/blog/how-uber-uses-ray-to-optimize-the-rides-business/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;6d4db847-5b7c-4304-8e08-f8f10adad1e6&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;98553b3a-2116-4d3d-8689-809446b59914&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Computational efficiency is a significant challenge when scaling solutions to a marketplace as large and as complex as Uber. The running and tuning of the Uber rides business relies on substantial numbers of machine learning models and optimization algorithms. Luckily, many pieces of the system can be treated in parallel. &lt;a href=&#34;https://www.ray.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ray&lt;/a&gt;&lt;sup&gt;®&lt;/sup&gt; is a general compute engine for Python® that’s designed for ML, AI, and other algorithmic workloads. We describe how Uber has adopted Ray to enable mission-critical systems. Using Uber’s mobility marketplace allocation tuning system as an example, we found performance improvements of up to 40 times that unlocked new capabilities. It also improved developer productivity by increasing iteration speed, reducing incident mitigation time, and lowering code complexity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;24bc7b6a-4e02-4ec2-b304-1ce564234cf7&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5fafdb91-c35e-411d-8867-695b33547d03&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-motivation-and-background&#34;&gt;Motivation and Background&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f019c193-5447-427b-9955-ce38bda5ac78&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To manage the health and efficiency of the mobility marketplace, Uber has several levers it can adjust, such as offering incentives for drivers to complete a certain number of trips per week or promotions that provide riders with discounts on their trips. Figuring out how to set these levers to efficiently achieve various targets and maximize outcomes is both a technically challenging task and a high-value opportunity for the company.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d4a8bd64-9c55-4ca6-a646-6f0a6226128d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One of the problems we’d like to solve is shown in Figure 1:&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1102900,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;7896eba9-0b13-4be1-ac5e-355b6d9ad115&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;408&#34; height=&#34;161&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/01/figure-1-17363101223168.png&#34; alt=&#34;&#34; class=&#34;wp-image-1102900&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=408,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/01/figure-1-17363101223168.png 408w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/01/figure-1-17363101223168.png 300w&#34; sizes=&#34;(max-width: 408px) 100vw, 408px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Marketplace incentive objective function.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b82215ba-5c00-45f0-beef-299dde7b571c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fe9f3f3c-e70c-4a1d-95ba-924428069524&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In this problem, we’d like to maximize some objective “f” that has some value to the business by changing the variables we control, “b.” Since these variables are controlled per city, we refer to the granularity as city-lever. We’re also subject to some constraints that are meant to keep the marketplace healthy. In practice, this is a problem that gets solved weekly, and the control variables remain in effect for a week.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5ccfb09e-1c98-4694-a7b2-bc0e7f12bf8e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To accomplish this, we leverage the vast amount of observational and experimental data at our disposal to inform these decisions. This requires building a system that can scale to handle large amounts of data for model training and inference, and accommodate many decision variables.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ab142ea2-a84c-40f3-8ee2-8dd231a2d60d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We designed a workflow shown in Figure 2 to achieve our goal. There’s a feature store system at the beginning to process the data and populate features for ML models for machine learning models. The second ML model training part does the model training and serving for predicting budget allocations. The third budget allocation part is doing the optimization and evaluation based on the equation in Figure 1 to find the most optimal budget allocation solution.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;84a371a9-b2b8-497e-bc68-d7433c0df820&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfqqWRtH072l_ep3noNNwZuaCagDtKO71HZoHvS-ACQKOu76s2Un8HuAXnGdvyg7mGeFcI7eCik03dAUc08SD_EzHQt70z8tprDLyIkfWHVkAg18qTxnKuGuijOe5JoqtePrQJEtNUtXzRogqroa0Bm2VFl?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Budget allocation system workflow.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;32ee6859-0bef-4a41-9c53-5f1f914f822a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c48b9695-c709-4982-b38f-8906c7c75a22&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This original workflow is purely based on ‌Apache Spark&lt;sup&gt;™&lt;/sup&gt; for distributed computations. Spark works pretty well when it comes to the data processing in the first feature store system part. However, when it comes to Pandas isn’t as good. We’ve tried Pandas UDF (User-Defined Function) or multi-threading for parallelism, but the speed improvement isn’t ideal. So, we decided to try Ray, as it’s designed for natural Python code parallelism.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bdb75536-fc7b-49c4-a0ac-be487a3f5e2b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b73fa749-93f8-4b1c-9da1-3286bc1beff0&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-development-and-deployment-challenges&#34;&gt;Development and Deployment Challenges&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;659518be-ac2f-4b02-bf1a-66484316a33d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;There are some major bottlenecks in the original Spark-based budget allocation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;7fdcc9c8-2e05-4f32-ad7b-b5d6ddeaf4d6&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-parallel-nature-of-spark-vs-ray-distributed-framework-choice-bottleneck&#34;&gt;&lt;br&gt;Parallel Nature of Spark vs. Ray: Distributed Framework Choice Bottleneck&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6f443bf9-2797-4467-b49b-d23a88b30d4b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As briefly introduced at the end of the previous section, Spark and Ray have their own pros and cons as a distributed framework. Spark is good at handling data processing given specific Spark/PySpark APIs, and it takes care of all the parallelisms between different Spark executors under the hood. However, Spark can’t accept Pandas operations or user-customized Python code and make them run in parallel automatically. On the contrary, Ray can easily make Pandas code or natural Python functions run in parallel, which is a perfect use case for applications that Spark can’t accelerate in our workflow. However, Ray can’t support Spark-related APIs so far and Ray itself has limited data processing API support like Spark. Ray data may be a potential solution in the future, but so far it’s mainly used for machine learning instead of general data processing purposes. So, it’s difficult to just use one simple distributed framework to achieve our goal. Both Spark and Ray have their own benefits we can take advantage of.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;663f37e9-d88e-4bdb-adb4-cfea54cb71dd&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-high-concurrency-lightweight-parallelism-application-speed-bottleneck&#34;&gt;&lt;br&gt;High-Concurrency, Lightweight Parallelism: Application Speed Bottleneck&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d51eaeca-7245-4fcb-8215-ff5a7d349c69&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We have many high-concurrency, lightweight parallel Python functions inside our applications. For example, we have an optimization function for each city and they can finish quickly in 1-2 seconds. However, if we want to do thousands of cities’ optimization functions simultaneously, the ‌ arrangement and allocation can be a problem. We’ve considered several methods:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;98ae92d3-8b45-43ce-8575-ac1d9c20bd95&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Spark&lt;/strong&gt;: Since Spark doesn’t support Python functions in parallel without using Spark APIs, all these city optimization functions are‌ running in series in Spark’s driver node only.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Pandas UDF&lt;/strong&gt;: We tried Pandas UDF on Spark to accelerate the Pandas dataframe operation speed. However, the speed improvement isn’t ideal. Also, Pandas UDF can’t parallelize general Python code.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Independent job for each city&lt;/strong&gt;: We need to launch a Docker&lt;sup&gt;®&lt;/sup&gt; container for each city to run, which contains a launching overhead and potential computing resource waste.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;beab0f37-e28f-4557-933c-933eb40f086e&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-spark-and-pandas-based-codebase-code-migration-bottleneck&#34;&gt;&lt;br&gt;Spark and Pandas-Based Codebase: Code Migration Bottleneck&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;476fe46e-6593-4202-b20e-2c850aedd6d1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Since we have legacy code running on a Spark-based cluster, there’s a lot of PySpark code written to do the data preprocessing and postprocessing. However, Ray doesn’t naturally support PySpark or Spark-related code. If we want to migrate all of our code to run on Ray, the code migration cost can be huge and requires many engineers to work together to convert all the legacy PySpark code to some equivalent Ray-understandabledable code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c0dd0a4d-9b75-4a78-a8d8-b1c36a77a34a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;86b680a1-7bbc-4598-b49a-fa91a881dfc5&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture-solutions&#34;&gt;Architecture Solutions&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6f9c2a1c-56fd-417b-8e05-2b337d5b00ad&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To address the bottlenecks mentioned in the previous section, we developed a hybrid mode with both Spark and Ray available in Figure 3. We think we should take advantage of the benefits from both Spark and Ray. The logic is simple and straightforward: put the data-processing related work on Spark and put the parallel Python functions on Ray.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;be792b5b-afe1-49fb-b423-ee9b004e2e5c&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfRi56StMWb49BA7ThjaNgJpstMqXzxFk2RjPgny7kIFn3elCOdEofPCCkIlSUcKSw9KXHgHNx_ndT7AZuRHhFPIlPV3zjGyaNUevcaXU622M4M2N0K0JIlrJKQ1HLTgNeDnnXh2fGbk_AKvIOvR9lJa6qe?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Spark and Ray hybrid execution mode.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3bc15eaf-6c76-44ef-a992-17ca9bed7b5a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;da9cc907-8b38-4081-bb1c-1f45c0600557&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 4 shows the application workflow. Spark driver plays an application master role here, and the application code mainly runs on Spark driver. When loading the data from Apache HDFS&lt;sup&gt;™&lt;/sup&gt; or doing data preprocessing, Spark driver distributes the workload to Spark executors and does any data-related computations. When the Spark driver encounters something that can’t be computed in parallel on Spark, it sends the task to Ray. The Ray cluster serves as an external computation server here on request. After receiving the function requests from Spark, it executes the functions sent from Spark driver in parallel and sends the results back to Spark driver when it’s done. Spark driver summarizes the output from Ray and does some data post-processing together with Spark executors. Finally, Spark writes the output data frame back to HDFS.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;89e7acaa-40cf-472a-adcb-86b13bfc51a6&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXetdUpXnTHfnqKQhs-rJgL9qpLhHbC7mduH5CCRBEAMT_BOPI37DXmhMcq873xPd_F_rzOROVhV3tQgZv2tgKGaSVhyzEAHrE7_TxvlJ-1jm-sCkULpQbMC2ccUzuC_gTmqf6b0GlKfPhRD3jH7ekc8BgXq?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Spark and Ray application workflow.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8a2eb10d-20b3-4cb1-954d-da89fd9e00c4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;36c2f76c-db7c-4705-b1be-ac701213e496&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This design can resolve the previous main blockers for our applications. We don’t need to worry about the trade-offs between Spark and Ray because we have both of them. As an external server to Spark, Ray can accept any high-concurrent requests from Spark and return the compute result back to Spark efficiently. Since Ray has a controller inside to arrange the tasks sent to the Ray cluster, we don’t need to implement an orchestrator to monitor the existing tasks or a message queue to arrange all the waiting tasks. The code migration cost is also low because we can still keep most of the PySpark code inside the Spark cluster to be executed. Only the functions suitable for Ray will be moved to the Ray cluster to be executed in parallel.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6538b045-f1ae-40c3-8fb2-2ce2bc4987ad&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Following up on this hybrid design, we have also developed several features and tools to help further improve our application speed and also help our engineers improve their developing iteration speed.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;f10c6d36-59ee-4e7a-9b12-583e649428c5&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-deployment-and-launch-time-optimization-iteration-speed-improvement&#34;&gt;&lt;br&gt;Deployment and Launch Time Optimization: Iteration Speed Improvement&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c0ba2548-5e10-4066-b523-4b903ee6586a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 5 shows how we optimize our job deployment and launch methods for our engineers to improve the development iteration speed. We find that it can be time-consuming for users if they want to do a remote test because they need to build a new Docker image every time, even if they just do a small change to the application code. Usually it takes about 15-20 minutes to build a Docker image. To accelerate this process, we use an object store like Amazon S3&lt;sup&gt;®&lt;/sup&gt; as an intermediate storage layer for application code. Every time a user launches a job, they just need to provide a basic Docker image that only stores the libraries. The changed application code gets deployed in real time, so they don’t need to build a new Docker image every time. As a result, we can control our job deployment and launch time within 2 minutes, which significantly increases our experiment iteration speed.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;89d59452-3a43-404b-b058-4d3b39004d85&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf1ZfT9gn2YWCZkHti3Q71Q4iHZhFudLFEFuI4AfalgafjlK5BNS11Ty1jC_JiKhVNeLXl9P_9HWxxUKuZ2SM5A6Te26R_L2G9HrkzFv6GE6H0Z-iVKkhZJd9wGHgVNzXVPKDw0jA6d9uODTL4O1GXevou8?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Ray cluster deployment and launch process.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8e9ae225-e41e-4ab4-bf33-a1ffa261bebd&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;df00e836-1035-45ed-8a55-d9e3ea5c28dc&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-data-transmission-speed-optimization&#34;&gt;&lt;br&gt;Data Transmission Speed Optimization&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7281956d-90fd-4862-9ace-e04b96b51ee7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When introducing a Ray cluster as an external cluster, communication between the Spark cluster and Ray cluster can sometimes become an issue. It’s good when the data size is small so that we can send the data quickly and ignore the transmission overhead. However, when the data size is big at the GB or TB level, the transmission time can’t be ignored. If directly sending the data from a Spark cluster to Ray, several factors can affect the transmission rate:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;562c3dfe-b24e-4a41-b2c1-58081816b103&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Internet bandwidth&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Data serialization and deserialization&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Spark driver Pandas converting speed&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b13ade3f-8f60-492a-ac94-ff1ec893facb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Since Ray doesn’t support Spark dataframe, Spark driver needs to collect the Spark dataframe from different executors into Spark driver and convert that into a Pandas dataframe. Also, it can potentially cause an out-of-memory issue on Spark driver if the Pandas dataframe is too large.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;532ac1ab-0b64-4d16-8d68-44f59e9539be&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfVIoGLcaYYYMPZ_A1J_ftBDNs95K-_QUBAlbCtfyfimUhZLJukWjsJDcOPXBy0HPp2HKbPCIKEYZHe4psv7zDNp_24m-VWnosHuQCUHV0DkDWyG1stSuIJtjodg9OR4bAhuGkkFl7pzEYdlRadkJSvRn6U?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Data transmission between Spark and Ray.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;39fe1c02-9e98-4cdf-8344-7455ae0ed05c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;53cadc0f-8112-4c36-a344-f40c29e49d94&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To accelerate ‌data transfer speed and avoid the potential out-of-memory issue, we introduced HDFS as an intermediate storage layer for large dataset transfers. We get a bigger bandwidth when communicating with HDFS. More importantly, we can directly use Spark to write data to HDFS as Parquet files and use Ray’s data API to load the data from HDFS to Ray.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;c9fcc6f9-8bd1-4c72-9d71-5e9838c37337&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-production-and-development-environment-aligned-notebook&#34;&gt;&lt;br&gt;Production and Development Environment-Aligned Notebook&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ef582e36-d3af-492b-a3f0-2876b74e1faf&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To help developers improve their speed and decrease the workload to convert ‌staging code into production, we designed a notebook that has the same environment setup and standard as the production environment. Our developers can test their code in the notebook. After they make the program run in Notebook, the same code can also run in production. A classic example is our data scientists prefer to write Pandas related code in Notebook. However, previously we didn’t have a good method to accelerate Pandas operations in parallel in production. Sometimes backend engineers need to manually convert these operations into Pyspark to make the program faster. After adopting Ray, data scientists can directly write their Pandas code in the Notebook and backend engineers can easily migrate those Pandas code into production without much conversion.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;23cabf88-20a1-4dfc-a2ab-968553404efd&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdnotI1dkCTova1OLQqKmUVlnixdP5MhM15RW8Pd3txLln0ec4wMGDygwcjh4XY9GgWQo8yf6XRfMJypTAcX4xikAt__aTVlGAUlAgDvMdwTwqCOBc6L9opCe_Av7kguTAzGosLzLxZH4uOcXjs-vqD-_A?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Production and development environment-aligned notebook.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eb644d2c-10f5-4377-80c7-ed130cae6707&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e180eaf8-8e0d-405b-ab0e-d00f223699ee&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;89fc67ee-3624-4d06-900e-e525c1dbd9ce&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-use-cases-at-uber-admm-optimizer&#34;&gt;Use Cases at Uber: ADMM Optimizer&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;071b4ced-c104-43d3-a5ed-4ba3dc818c5f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In this section, we describe the implementation of one component within our incentive budget allocation system with Ray, the optimizer that divides a total budget into a vector of allocations for each city-lever.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9cf35de9-6865-4852-8379-3b3240499378&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Because we impose simple, conic constraints on the allocations and impose smoothness conditions on our machine learning models, the ADMM (Alternating Direction Method of Multipliers) is a good fit solving our allocation problem, given its ability to solve non-linear, non-convex, differentiable problems.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f16e26be-59f7-4537-b3df-72f895131d81&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One additional advantage of the ADMM algorithm is that it can parallelize well, which allows our system to scale when we add cities or levers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;836bf0f7-c9fc-4578-b1dc-51213ff06d18&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To solve our optimization problem, we translate it to a slightly different formulation in Figure 8:&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;ec1f3e64-016d-4b45-bf1d-2401ca6edf7f&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeoaGP55ysoOT1y0NerkCw1bFEuAMbX38rMW10EMsqFLmUnrIhhWMs8xjJmwUWzNFyMfGy4SbeRba6SaxsRjOmQ3rFzW2-3SD-VB7_8gBdp9cltOhe5FHfYTDfBJiNQCqAS6Lhl3z8Y-FnuXPiZvvkHXpY?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8: Optimization formulation.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;743ceca4-4508-499e-8dda-3a7abddaaa6f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a5a52dcc-6ec4-4522-ad1c-a7144cdb3505&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;That results in update steps, which we solve to execute the ADMM algorithm in Figure 9:&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f54b8a15-a0b3-42ba-bbdf-293e7ffebc7a&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeimruB8A1gbb_dt-93BrrBKj0m4-jG7IzRZk926_vpatRAHtLplzWcNNfOYrPdMhTvSKVUW27yJSDXH9mPevAOwupZM_9kjWiXlLcskVnFfrv_b2FTdW9fmqcjuXj-qrOpzebMFqJfxryCouhjdx6lnCNW?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 9: Optimization solver.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8513c251-769f-4b80-802b-a07b2c85f758&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a7388e24-93f0-4399-a3be-931cc7472974&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The first step is solved in parallel, using Ray, with a primal-dual interior point algorithm implemented in cvxopt. Rho can be tuned to ensure this problem has a positive semi-definite Hessian. The second step can be solved analytically, and the third step is trivial.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c13fce89-ec2e-4233-9a8e-3022576a2510&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This is the workflow for our ADMM optimization algorithm and how Ray is applied to this architecture in Figure 10. Basically, it’s a loop for recurrent budget allocation ADMM optimization. It can be divided into the following steps:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9a977171-1f85-4cdd-944d-25df5bae3567&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Step 1: Initialize the problem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b82a92ec-2aae-4561-a2c3-f1d15a5ce0f5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Step 2: Optimization in a for loop.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;bcc32ae6-d982-4f10-a94a-2a46a7539056&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Solve the individual city problems for each week in parallel [Ray].&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Summarize the city optimization result [Spark].&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Update cross-city constraint variables [Spark].&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Update the slack variables. [Spark].&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Check convergence criteria [Spark].&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9b95a230-f850-4c58-9dd2-975014a6e992&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Step 3: Record optimal allocation values, metadata, and convergence variables.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;545199c2-1565-4382-b2f9-a916bfb65b21&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&lt;/ol&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;83e61d49-cf0b-4a38-8943-dcb5ce0b9802&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf_sfjVThyK76EzeSPEqJH-IEelIIOMJ53gAM3g3BwkJqYcwDkkHYC7O0RIr-LACqPbSc44JNj6QdwThAfx0ItulzLmFsZwhHIKAl2VKERWiYldjDuvnPdpEmvqUPoabZObwjuMERChn03sCuGEWB9ONhgV?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 10: ADMM optimization workflow.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2349c725-068d-4601-b16b-42532ed3c803&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;66fb3d30-8144-4129-a658-42f210fea55b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Each city week optimization function with ADMM is very lightweight, which takes about 1-2 seconds to finish. However, due to the large volume of high-concurrent optimization functions, the optimization speed becomes a bottleneck for our optimizer. After applying Ray for the city parallel optimization computations, we’ve achieved about a 40-time improvement for our budget allocation optimizer.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ea6d149f-78cf-4d1e-b50d-6cf6cdbf3979&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9b0076be-6133-4f40-8342-ab64940eaa48&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-kuberay-back-end-support-from-uber-michelangelo&#34;&gt;KubeRay Back End Support from Uber Michelangelo&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;23b64f73-81bb-47ec-8cf6-3c3eab887683&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A good Ray application should have a good parallelism strategy at the application level and a solid Ray back end to support all these parallel computations. In this section, we describe how the &lt;a href=&#34;https://www.uber.com/blog/from-predictive-to-generative-ai/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Michelangelo (Uber’s AI platform)&lt;/a&gt; team built a reliable Ray back end for all the client teams to use in Uber.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0ba763e7-3698-4b86-b33f-83c1d56736c6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 11 shows how the Ray cluster is provisioned in the back end. When Ray clusters are initiated upon job submission, resources for the Ray cluster are provisioned dynamically based on the job’s requirements, such as the number of nodes, CPU, GPU, and memory specifications. Once the Ray cluster is provisioned, the Ray head node is first established, then it discovers and connects all of Ray’s worker nodes. The application connects to the Ray head node, which coordinates the distributed execution of Ray tasks across worker nodes. The connection details (IP address and port) for the Ray head node are automatically discovered and provided to the application, allowing seamless execution without manual intervention. After job completion, the application sends a request to the compute layer and releases the allocated resources back to the pool, ensuring efficient utilization across the platform.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;15d1b3b5-98ff-46db-a08c-820c2253fbc0&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXegzZLISz3aS6ggnyA3UcVk3PrhB5pxWxBnGtVk-y2a8F_Ttw7Kf4ReKfd7ck_Vh0FnIWV9dCH8W8YYQ7R2hYVgP_afVEYxXd3d2j58WugVlURDZIbTyimZ2fzNgbEcw_wLboCzbYOqdaiEdtgaGTjyekj_?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 11: Ray cluster provision workflow.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ad5c5720-1bb5-40c0-81e2-e520bf0b058f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c7d48eb8-82b0-4fac-ab88-ce554fd83a98&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We also investigated and adopted ‌other modules outside of Ray’s Core service. Ray integrates well with a variety of open-source frameworks and libraries in the ecosystem, and makes it easier to experiment with new techniques from industry. We integrated &lt;a href=&#34;https://www.uber.com/blog/horovod-ray/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Horovod with Ray&lt;/a&gt;, adopted &lt;a href=&#34;https://www.uber.com/blog/elastic-xgboost-ray/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ray XGBoost&lt;/a&gt;, Ray Data, Heterogeneous training cluster, and Ray Tune, which made Ray the common layer in Michelangelo for training and fine tuning XGB, DL, and LLM models.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4e7dadae-db90-47ec-a264-fb94108889aa&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In 2023, we modernized our resource cluster from &lt;a href=&#34;https://www.uber.com/blog/resource-scheduler-cluster-management-peloton/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Peloton&lt;/a&gt; (old resource scheduler) to a new Kubernetes&lt;sup&gt;®&lt;/sup&gt; based &lt;a href=&#34;https://www.uber.com/blog/scaling-ai-ml-infrastructure-at-uber/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Michelangelo Job Controller&lt;/a&gt; service, and uplevel the resource management experience for both CPU and GPU training jobs.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;56e235a1-b3c2-48c2-b9ef-188b8a482fda&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Despite infrastructure constraints across on-premises and cloud providers, the service abstracts compute cluster and hardware complexities from the user, and ensures a dynamic resource selection, high scalability and flexibility, and more efficient resource scheduling, which makes it well-suited for diverse user needs in Uber. Benefits include:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ca6f83cb-7b8b-420e-b412-b58f46261e06&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Automated Resource Allocation&lt;/strong&gt;: The design uses CRDs to define resource pools, automatically assigning jobs to appropriate pools based on organizational hierarchy, cluster size, and HW type requirements. This eliminates manual resource allocation, reducing contention and oversubscription.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Dynamic Scheduling&lt;/strong&gt;: A federated scheduler intelligently matches jobs to clusters, considering factors like resource availability, affinities, and job priorities. This ensures optimal resource usage and prevents scheduling failures.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Cluster Health Monitoring&lt;/strong&gt;: Continuous monitoring of cluster health and maintaining an up-to-date resource snapshot ensures jobs are only scheduled on healthy clusters with available resources.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Simplified User Experience&lt;/strong&gt;: Users don’t need to manage the underlying infrastructure—the system abstracts complexities, allowing them to focus on their workloads while the system handles resource management.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Scalability and Extensibility&lt;/strong&gt;: The design supports new hardware, cloud bursting, and is compatible with emerging technologies, ensuring it can scale and adapt to future needs while maintaining efficient resource management.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d5a3f1be-a170-4c50-be4f-56848d8a942c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Later in early 2024, we successfully migrated all existing XGB and deep learning training jobs to the Michelangelo Job controller. With the benefits from the job controller, we keep unblocking more use cases, like large language model fine-tuning and optimization applications.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;65033d4c-f363-487b-9629-f1a89e2216ce&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;2fe3859d-0f0f-4143-abc7-e1c523a72018&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;27937173-9673-496d-bd90-1b7e0c8ccc7f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Ray has become a critical tool in Uber for machine learning and everything that has the potential to be parallelized, like optimization algorithms, evaluation algorithms, and more. Ray is now widely used at Uber, starting with the Uber Michelangelo team as a fundamental back end and applied to different application teams like the Marketplace Investment team to do budget allocation optimization for Uber. By using Ray in Uber applications, we’ve achieved a huge performance improvement and provided a more friendly user experience to our data analysts and developers.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;56dcedb1-91d0-4f97-ac4c-93cd6520a2d6&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-acknowledgments&#34;&gt;Acknowledgments&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0bb1342b-ad46-45ed-9d99-721bce369294&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Thanks to all the members from the Uber Marketplace Investment team and the Uber Michelangelo team for the great effort.&amp;nbsp;Thanks to Ryan Clark for actively reviewing the blog and giving valuable feedback.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;32beef5a-6370-4a6c-9536-78743702801c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Cover Photo Attribution: ”&lt;a href=&#34;https://www.flickr.com/photos/40803964@N08/4712207733&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Fast Train&lt;/a&gt;” by &lt;a href=&#34;https://openverse.org/image/collection?source=flickr&amp;amp;creator=Sander+van+der+Wel&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Sander van der Wel&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/2.0/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CC BY-SA 2.0&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;96d29206-02d2-4650-ae6e-1fb050dc8928&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Amazon Web Services, AWS, Amazon S3, and the Powered by AWS logo are trademarks of Amazon.com, Inc. or its affiliates.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;59a5cba3-be93-4729-a5a2-2f4530473fe4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Apache&lt;sup&gt;®&lt;/sup&gt;, Apache Spark&lt;sup&gt;™&lt;/sup&gt;, HDFS, and the star logo are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f9421f9f-1104-4649-880e-39ba6dc193a5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Docker&lt;sup&gt;®&lt;/sup&gt; is a registered trademark of Docker, Inc in the United States and/or other countries. No endorsement by Docker, Inc is implied by the use of this mark.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;3bc99d4f-9762-45e3-890f-085e9145e52e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Kubernetes&lt;sup&gt;®&lt;/sup&gt;, etcd&lt;sup&gt;®&lt;/sup&gt;, and Kubernetes&lt;sup&gt;®&lt;/sup&gt; logo are registered trademarks of the Linux Foundation in the United States and/or other countries. No endorsement by The Linux Foundation is implied by the use of these marks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;33c27c14-0493-445d-8d88-9b83ee14aadc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Python&lt;sup&gt;®&lt;/sup&gt; and the Python logos are trademarks or registered trademarks of the Python Software Foundation.&lt;/p&gt;】&lt;h1 data-data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，”哈希：“ 6D4DB847-5B7C-4304-8E08-F8F8F10AD1E6”} -block-neading“ id =” H-Instruction“&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 98553b3a-2116-4d3d-8689-8689-809446b59914”，“ dropcap”：dropcap“：false}”&gt;计算效率是当将解决方案扩展到市场时，这是一个重大挑战。 Uber Rides业务的运行和调整取决于大量的机器学习模型和优化算法。幸运的是，系统的许多部分都可以并行处理。 &lt;a href =“ https://www.ray.io/” target =“ _ blank” rel =“ noreferrer noopener”&gt; ray &lt;/a&gt; &lt;/a&gt; &lt;sup&gt;®&lt;/sup&gt;是Python®的一般计算引擎专为ML，AI和其他算法工作负载而设计。我们描述了Uber如何采用Ray启用关键任务系统。以Uber的Mobility Market Place分配调整系统为例，我们发现绩效提高了40倍，可以解锁新功能。它还通过提高迭代速度，减少事件缓解时间并降低代码复杂性来提高开发人员的生产率。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 24BC7B6A-4E02-4EC2-B304-1CE564234CF7“ class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ 5fafdb91-c35e-411d-8867-8867-695b33547d03”，“ level”，“：2}” -Block-neading“ ID =” H-Motivation-and-background”&gt;动机和背景&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ F019C193-5447-427B-9955-CE38BDA5AC78”，“ Dropcap”&gt; Uber的健康和效率是移动市场的健康和效率，可以调整几个杠杆，例如为驾驶员提供每周完成一定数量的旅行或为骑手提供旅行折扣的促销活动的激励措施。弄清楚如何设置这些杠杆以有效实现各种目标并最大化结果既是技术挑战性的任务，又是公司的高价值机会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ D4A8BD64-9C55-4CA6-A646-A646-646-6F0A6226128D”，“ dropcap”&gt;我们要解决的问题如图1：&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1102900，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ 7896EBA9-0B13-4BE1-AC5E-355B6D9AD115”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 408”高=“ 161” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2025/01/figure-1-17363101223168.png“ alt =“ class =” wp-image-11102900“ srcset =” srcset =“ /blog.uber-cdn.com/cdn-cgi/image/width=408,quality=80，onerror = redirect，format = auto/wp-content/uploads/2025/01/figure-1-1736363631012223168.png，401/figure-17363123168.png， https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror=redirect，format = auto/wp-content/uploads/2025/01/01/2025/01/figure-1-17363101223168。 PNG 300W“ sizes =”（最大宽度：408px）100VW，408px“ reverrerpolicy =“ no-referferrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图1：市场奖励目标函数。 /图&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ B82215BA-5C00-45F0-BEEF-299DDE7B571C”，“ dropcap”，“ dropcap”：false} &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ Fe9f3f3c-e70c-4a1d-95ba-924428069524”，“ dropcap”&gt;在此问题中， ，我们希望通过更改我们控制的变量“ b”来最大化某些客观的“ F”，这些客观“ F”对业务具有一定的价值。由于这些变量是每个城市控制的，因此我们将粒度称为城市杠杆。我们还受到一些限制，旨在使市场保持健康。实际上，这是一个每周解决的问题，并且控制变量保持了一周的有效。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 5ccfb09e-1c98-4694-a7b2-a7b2-bc0e7f12bf8e”，“ dropcap”，“ dropcap”：dropcap“：false} ，我们利用大量的观察和实验数据来供应这些决定。这需要建立一个可以扩展的系统以处理大量数据进行模型培训和推理，并适应许多决策变量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ AB142EA2-A84C-40F3-8EEE2-8DD231A2D60D”，“ dropcap”，“ dropcap”：false}工作流程如图2所示，以实现我们的目标。开始时有一个功能存储系统，可以处理数据并填充机器学习模型的ML模型。第二个ML模型培训零件可以进行模型培训和服务，以预测预算分配。第三个预算分配部分是根据图1中的方程进行优化和评估，以找到最佳的预算分配解决方案。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 84A371A9-B2B8-497E-BC68-D7433C0DF820”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfqqWRtH072l_ep3noNNwZuaCagDtKO71HZoHvS-ACQKOu76s2Un8HuAXnGdvyg7mGeFcI7eCik03dAUc08SD_EzHQt70z8tprDLyIkfWHVkAg18qTxnKuGuijOe5JoqtePrQJEtNUtXzRogqroa0Bm2VFl?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34; No-Referrer“&gt; &lt;figcaption class =” wp-e露天捕获”&gt;图2：预算分配系统工作流程。&lt;/figcaption&gt; &lt;/fig&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 32EE6859-0BEF-4A41-9C53-53-5F1F1F914F822A”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C48B9695-C709-4982-B38F-8906C75A22”，“ dropcap”&gt;纯粹基于分布式计算的‌Apache Spark &lt;sup&gt;™&lt;/sup&gt;。在第一个功能存储系统部件中的数据处理方面，Spark效果很好。但是，当涉及到熊猫不是那么好。我们已经尝试了Pandas UDF（用户定义的功能）或多线程以进行并行性，但是速度提高并不理想。因此，我们决定尝试Ray，因为它是为天然Python代码并行性设计的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ BDB75536-FC7B-49C4-A0AC-BE487A3F5E2B”，“ opitical class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ b73fa749-93f8-4b1c-9da1-9da1-3286bc1beff0”，“ level”级-Block-neading“ ID =” H-Development-and-Deployment-Challenges”&gt;开发和部署挑战&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 659518BE-AC2F-4B02-BF1A-66484316A33D”，“ dropcap”，“ dropcap”：false}原始的基于火花的预算分配中的主要瓶颈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，” hash&#39;：“ 7fdcc9c8-2e05-4f32-ad7b-ad7b-b5d6ddeaf4d6”} -Block-neading“ ID =” H-乘式Spark-VS-VS-VS-VS-VS-distribed-FrameWork-choice-bottleneck“&gt; &lt;br&gt; &lt;br&gt; Spark vs. Ray的平行性质：分布式框架选择瓶装&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6f443bf9-2797-4467-b49b-d23a88888888888b30d4b”，“ dropcap”，“ dropcap”：false}在上一节的末尾，Spark和Ray有自己的利弊作为分布式框架。在特定的Spark/Pyspark API下，Spark擅长处理数据处理，并且它可以照顾引擎盖下不同火花执行者之间的所有并行性。但是，Spark无法接受Pandas操作或用户注定的Python代码，并使它们自动并行运行。相反，Ray可以轻松地使PANDAS代码或天然Python函数并联运行，这对于Spark无法在我们的工作流程中无法加速的应用程序是一个完美的用例。但是，到目前为止，Ray无法支持与火花相关的API，Ray本身具有有限的数据处理API支持，例如Spark。射线数据将来可能是潜在的解决方案，但到目前为止，它主要用于机器学习，而不是通用数据处理。因此，很难只使用一个简单的分发D框架以实现我们的目标。 Spark和Ray都可以利用自己的利益。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ 663f37e9-d88e-4bdb-adb-adb-adb4-cfea54cb71dd”} -Block-neading“ ID =” H-High-corrency-lightweight-Weights-parallelism-应用速度 - 底层“&gt; &lt;br&gt;高频率，轻量级并行性：应用速度瓶装瓶装&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ D51EECA-7245-4FCB-8215-FF5A7D349C69”，“ dropcap”，“ dropcap”：false}我们的应用程序中的高频率，轻量级并行python功能。例如，我们对每个城市都有一个优化功能，它们可以在1-2秒内快速完成。但是，如果我们想同时执行数千个城市的优化功能，则‌排列和分配可能是一个问题。我们考虑了几种方法：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name =“ core/list” data-wp-block =“ {“ ordered”：true，“ hash”：“ 98AE92D3-8B45-43CE-8575-AC1D9C20BD95”，“值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt; spark &lt;/strong&gt;：由于Spark不支持Python在不使用Spark的情况下并行功能API，所有这些城市优化功能仅在Spark的驱动程序节点中串联运行。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt; pandas udf &lt;/strong&gt;：我们尝试了Spark上的Pandas Udf以加速Pandas DataFrame操作速度。但是，提高速度并不理想。另外，Pandas UDF无法并行化一般Python代码。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;每个城市的独立作业&lt;/strong&gt;：我们需要启动一个docker &lt;sup&gt; ®&lt;/sup&gt;每个城市运行的容器，其中包含启动开销和潜在的计算资源浪费。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ BEAB0F37-E28F-4557-933C-933C-933EB40F086E” -Block-neading“ ID =” H-Spark-and-Pandas基于-sodbase-code-code-igration-bottleneck“&gt; &lt;br&gt; Spark和Pandas基于代码库：代码迁移瓶颈&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 476fe46e-6593-4202-b20e-b20e-2c850aeedd6d6d1”，“ dropcap”：false}在基于火花的群集上运行的旧版代码，有很多Pyspark代码编写了用于进行数据预处理和后处理的代码。但是，Ray自然不会支持Pyspark或Spark相关的代码。如果我们想迁移所有代码以在射线上运行，则代码迁移成本可能很大，并且需要许多工程师一起工作以将所有旧版Pyspark代码转换为某些等效的Ray可遇到的代码。&lt;/p&gt;。&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ C0DD0A4D-9B75-4A78-A8d8-b1c36a77a34a“，“不透明度”：“ alpha-channel”}“ class =” wp-block-separator has-alpha-channel-opacity&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ 86B680A1-7BBC-4598-B49A-FA91A8881DFC5”，“ level”，“ level”：2} class =“ class =” WP -Block-neading“ ID =” H-Architecture-Solutions”&gt; Architecture Solutions &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6f9c2a1c-56fd-417b-8e05-2b337d5b00ad”，“ dropcap”，“ dropcap”：false}在上一节中提到的瓶颈，我们开发了一种混合模式，并在图3中使用了Spark和Ray。我们认为我们应该利用Spark和Ray的好处。逻辑简单明了：将与数据处理相关的工作放在Spark上，并将并行的Python功能放在射线上。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;digue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ be792b5b-afe1-49fb-b423-ee9b004e2e5c”，“ alt” :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfRi56StMWb49BA7ThjaNgJpstMqXzxFk2RjPgny7kIFn3elCOdEofPCCkIlSUcKSw9KXHgHNx_ndT7AZuRHhFPIlPV3zjGyaNUevcaXU622M4M2N0K0JIlrJKQ1HLTgNeDnnXh2fGbk_AKvIOvR9lJa6qe?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-推荐人“&gt; &lt;figcaption class =“ WP-元素caption”&gt;图3：Spark和Ray混合执行模式。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 3BC15EAF-6C76-44EF-A992-17CA9BED7B5A”，“ dropcap”，“ dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ da9cc907-8b38-4081 bb1c-1f45c06005757”，“ dropcap”，“ dropcap”：false}应用程序工作流程。 Spark Driver在此处扮演应用程序主角，并且应用代码主要在Spark Driver上运行。加载来自Apache HDFS &lt;sup&gt;™&lt;/sup&gt;的数据或进行数据预处理时，Spark Driver将工作负载分发以激发执行者并进行任何与数据相关的计算。当Spark驱动程序遇到无法在Spark上并行计算的东西时，它将任务发送到Ray。射线群集可应要求用作外部计算服务器。从SPARK接收到功能请求后，它将并行执行从Spark驱动程序发送的功能，并在完成后将结果发送回Spark驱动程序。 Spark Driver总结了Ray的输出，并与Spark Executor一起进行了一些数据后处理。最后，Spark将输出数据框架写回HDFS。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;digue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 89E7ACAA-40CF-472A-472A-ADCB-86B13B13B13BFC51A6”，“ ：“”“}” class =“ aligncenter”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleusercontent.com/docsz/ad_4nxetdUpXnTHfnqKQhs-rJgL9qpLhHbC7mduH5CCRBEAMT_BOPI37DXmhMcq873xPd_F_rzOROVhV3tQgZv2tgKGaSVhyzEAHrE7_TxvlJ-1jm-sCkULpQbMC2ccUzuC_gTmqf6b0GlKfPhRD3jH7ekc8BgXq?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Spark and Ray application workflow.&lt;/figcaption&gt;&lt; /图&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 8A2EB10D-20B3-4CB1-954D-DA89FD9E00C4”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 36C2F76C-DB7C-4705-B1BE-AC701213E496”，“ dropcap”，“ dropcap”：false}解决我们应用程序的先前主要阻滞剂。我们不必担心Spark和Ray之间的权衡，因为我们都有两个。作为火花的外部服务器，射线可以接受Spark中的任何高额电流请求，并将计算结果返回以有效启动。由于Ray内部有一个控制器来安排发送到Ray群集的任务，因此我们不需要实现编目来监视现有任务或消息队列以安排所有等待任务。代码迁移成本也很低，因为我们仍然可以将大多数Pyspark代码保留在火花集群中以执行。仅适用于射线的功能将移至并行执行的射线群集。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6538B045-F1AE-40C3-8FB2-2CE2BC4987AD”，“ dropcap”，“ dropcap”：false}这种混合设计，我们还开发了几种功能和工具，以帮助进一步提高应用速度，并帮助我们的工程师提高其发展的迭代速度。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ F10C6D36-59EE-4E7A-4E7A-9B12-583E649428C5”} -Block-heading“ ID =” H-启用和节目 - 启动 - 优化速度 - 改进”&gt; &lt;br&gt;部署和启动时间优化：迭代速度改进&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C0BA2548-5E10-4066-B523-4B523-4B903EE6586A”，“ dropcap”，“ dropcap”：false}我们如何优化工作部署和启动方法，以提高开发迭代速度。我们发现，如果用户想进行远程测试，那么对于用户来说，这可能是耗时的，因为他们每次都需要构建新的Docker映像，即使他们只是对应用程序代码进行了较小的更改。通常，建造码头图像大约需要15-20分钟。为了加速此过程，我们使用像Amazon S3 &lt;Sup&gt;®&lt;/sup&gt;这样的对象存储作为应用程序代码的中间存储层。每次用户启动作业时，他们只需要提供仅存储库的基本Docker映像即可。更改的应用程序代码将实时部署，因此他们无需每次构建新的Docker映像。作为结果，我们可以控制我们的工作部署并在2分钟内启动时间，从而大大提高了我们的实验迭代速度。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 89D59452-3A43-404B-B058-4D3B39004D85”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf1ZfT9gn2YWCZkHti3Q71Q4iHZhFudLFEFuI4AfalgafjlK5BNS11Ty1jC_JiKhVNeLXl9P_9HWxxUKuZ2SM5A6Te26R_L2G9HrkzFv6GE6H0Z-iVKkhZJd9wGHgVNzXVPKDw0jA6d9uODTL4O1GXevou8?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34; No-Referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图5：射线群集部署和启动过程。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 8E9AE225-E41E-41E-4AB4-BF33-A1FFA261BEBD”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ df00e836-1035-45ed-8a555555555555c28c28dc“}” -Block-heading“ ID =” H-DATA-TRANSMISSIRSSED-SPEED-OPTIMAIDE”&gt; &lt;br&gt;数据传输速度优化&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7281956D-90FD-4862-4862-9ACE-E04B96B51EE7”，“ dropcap”，“ dropcap”：false}射线群集作为外部群集，火花集群和射线群集之间的通信有时可能成为一个问题。当数据大小很小时，这很好，因此我们可以快速发送数据并忽略传输开销。但是，当数据大小在GB或TB级别上很大时，传输时间就不会被忽略。如果直接将数据从火花集群发送到射线，则几个因素会影响传输速率：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ 562c3dfe-b24e-4a41-b2c1-58081816b103”，“ ordered”，“ fords”：false，“值，”值，“值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;互联网带宽&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;数据序列化和挑选化&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; spark驱动程序pandas转换速度&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ b13ade3f-8f60-492a-492a-ac94-ac94-ff1ec893facb”，“ dropcap”，“ dropcap”：false} &#39;t支持Spark DataFrame，Spark Driver需要将Spark DataFrame从不同的执行者收集到Spark驱动程序中，并将其转换为PANDAS DataFrame。另外，如果Pandas DataFrame太大。&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;digue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 532AC1AB-0B64-4D16-4D16-8D68-44F59E9539BE”，“ ALT＆quot;:&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfVIoGLcaYYYMPZ_A1J_ftBDNs95K-_QUBAlbCtfyfimUhZLJukWjsJDcOPXBy0HPp2HKbPCIKEYZHe4psv7zDNp_24m-VWnosHuQCUHV0DkDWyG1stSuIJtjodg9OR4bAhuGkkFl7pzEYdlRadkJSvRn6U?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34; “ referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图6：Spark和Ray之间的数据传输。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/figife&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 39fe1c02-9e98-4cdf-8344-74555ae05c”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 53CADC0F-8112-4C36-A344-F40C29E49D94”，“ dropcap”，“ dropcap”：false}传输速度并避免潜在的内存外问题，我们引入了HDF作为大型数据集传输的中间存储层。与HDFS通信时，我们会获得更大的带宽。更重要的是，我们可以直接使用Spark将数据写入HDFS作为Parquet文件，并使用Ray的Data API将数据从HDFS加载到Ray。&lt;/p&gt;。&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：3，“ hash”：“ C9FCC6F9-8BD1-4C72-9D71-5E9838C373737373737373737373737”} -Block-neading“ ID =” H-ID =“与环境相协调的Notebook”&gt; &lt;br&gt;生产和开发环境一致的笔记本&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ EF582E36-D3AF-492B-492B-A3F0-2876B74E1FAF”，“ dropcap”，“ dropcap”，“ dropcap”：false}提高其速度并减少工作量以将‌级代码转换为生产，我们设计了一个笔记本，其设置和标准与生产环境相同。我们的开发人员可以在笔记本中测试其代码。在将程序运行在笔记本上后，同一代码也可以在生产中运行。一个经典的例子是我们的数据科学家更喜欢在笔记本中编写与大熊猫相关的代码。但是，以前，我们没有一种很好的方法可以同时加速熊猫的作业。有时，后端工程师需要手动将这些操作转换为Pyspark，以使程序更快。采用射线后，数据科学家可以在笔记本上直接编写其熊猫代码，而后端工程师可以轻松地将这些熊猫代码迁移到生产中，而无需进行太多转换。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 23CABF88-20A1-4DFC-A2AB-968553404EFD”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdnotI1dkCTova1OLQqKmUVlnixdP5MhM15RW8Pd3txLln0ec4wMGDygwcjh4XY9GgWQo8yf6XRfMJypTAcX4xikAt__aTVlGAUlAgDvMdwTwqCOBc6L9opCe_Av7kguTAzGosLzLxZH4uOcXjs-vqD-_A?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp-lement-caption“&gt;图7：生产和开发环境一致的笔记本。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ EB644D2C-10F5-4377-80C7-ED130CAE6707”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ e180eaf8-8e0d-405b-ab0e-ab0e-d00f223699ee”，“ obcitice”，“ obcitice”：“ alpha-channel”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 89FC67EE-3624-4D06-4D06-900E-E525C1DBD9CE”，“ LEVEL”，“级别”：2} class =“ class =” WP -Block-heading“ ID =” H-use-cases-at-uber-admm-optimizer”&gt; Uber上的用例&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 071b4ced-c104-43d3-a5ed-4bA3dc81818c5f”，“ dropcap”，“ dropcap”：false} ，我们描述了我们激励预算分配系统中一个组件的实施，Ray的优化器将总预算分为每个城市杠杆的分配。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9cf35de9-6865-4852-4852-8379-3B3240499378”，“ dropcap”&gt;简单的，圆锥形的限制对我们的机器学习模型上的平滑度施加了平滑度，ADMM（交替的乘数方向方法）是一个很好的适合解决我们的分配问题，鉴于其能够解决非线性，非线性，非键，可区分的问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ f16e26be-59f7-4537-4537-b3df-72f-72f-72f895131d81”，“ dropcap”&gt; ADMM算法是它可以很好地平行，这使我们的系统在添加城市或杠杆时可以扩展。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 836BF0F7-C9FC-4578-B1DC-51213FF06D18”，“ dropcap”，“ dropcap”：false}优化问题，我们将其转化为图8中的略有不同的公式：&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;Figue Data-Wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ EC1F3E64-016D-4B4B45-B45-BF1D-2401CA6EDF7F”，“ ALT” ：“”“}” class =“ aligncenter”&gt; &lt;img解码=“ async” src =“ https://lh7-rt.googleuserercontent.com/docsz/ad_4nxeoot1ys.bby 6SAXSRJOMQ3RFZW2-3SD-VB7_8GBDP9CLTOHE5FHFYTDFBJINQCCQCAS6LHLHL3Z8Y-FNUXPIZVKHXPY？ “ referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图8：优化配方。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 743ceca4-4508-499e-8dda-3a7abddaaaaa6f”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：a5A52DCC-6EC4-4522-AD1C-A7144CDB3505“，” dropcap“：false}”&gt;导致更新步骤，我们求解以执行图9中的ADMM算法：&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ F54B8A15-A0B3-42BA-BBDF-293E7FFEBC7A”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeimruB8A1gbb_dt-93BrrBKj0m4-jG7IzRZk926_vpatRAHtLplzWcNNfOYrPdMhTvSKVUW27yJSDXH9mPevAOwupZM_9kjWiXlLcskVnFfrv_b2FTdW9fmqcjuXj-qrOpzebMFqJfxryCouhjdx6lnCNW?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34; “ referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图9：优化求解器。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 8513C251-769F-4B80-802B-A07B-A07B2C85F758”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ a7388e24-93f0-4399-a3be-a3be-931cc7472974”，“ dropcap”：dropcap“：false}”&gt;第一步使用Ray并行解决，并在CVXOPT中实现了原始的双重内部点算法。可以对Rho进行调整，以确保此问题具有阳性的半明确Hessian。第二步可以分析解决，第三步是微不足道的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C13FCE89-EC2E-4233-9A8E-3022576A2510”，“ dropcap”，“ dropcap”：false}我们的ADMM优化算法的工作流以及如何在图10中应用于此体系结构。基本上，它是经常性预算分配ADMM优化的循环。它可以分为以下步骤：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9A977171-1F85-4CDD-944D-944D-25DF5BAE3567”，“ dropcap”，“ dropcap”：false}初始化问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ B82A92EC-2AAE-4561-A2C3-F1D15A5A5CE0F5”，“ dropcap”，“ dropcap”：false}在循环中的优化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name =“ core/list” data-wp-block =“ {“ ordered”：true，“ hash”：“ BCC32AE6-D982-4F10-A94A-A94A-2A46A7539056”，“值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;在并行[ray]中解决每个星期的单个城市问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;总结城市优化结果[spark]。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;更新跨城市约束变量[spark]。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;更新Slack变量。 [SPARK]。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;检查收敛标准[spark]。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9B95A230-F850-4C58-9DD2-975014A6E992”，“ dropcap”：false}”&gt;步骤3：记录最佳分配值，元数据和收敛变量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name =“ core/list” data-wp-block =“ {“ ordered”：true，“ hash”：“ 545199C2-1565-4382-B2F9-A916BFB65B21 “}” class =“ wp-block-list”&gt; &lt;/ol&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;tig data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 83E61D49-CF0B-4A38-4A38-8943-DCB5CE0B9802”，“ ：“”“}” class =“ aligncenter”&gt; &lt;img decoding =“ async” src =“ https://lh7-rt.googleuserercontent.com/docsz/ad_4nxf_sf_sfjvthyk76ezespeqjh-ieeliomj53gkirhhycirhhhycirhhycirhhycirhhycirhhyciry cirhhyciry cirhhycqiry cirhhycqir cir cir circir cirfir 4JNJ6QDWTHAFX0ITULZLMFSZWHHIKAL2VKERWIYLDJDUVNPDPDPEMVQUPOPOABZOBWJUMERCHN03SCUGEWB9ONHGV？ =“ no-refferrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图10：admm优化工作流程。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fig&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 2349C725-068D-4601-B16B-42532ED3C803”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 66fb3d30-8144-4129-A658-428-42F210FEA55B”，“ dropcap”，“ dropcap”：false}使用ADMM的优化功能非常轻巧，大约需要1-2秒才能完成。但是，由于大量的高连流优化功能，优化速度成为我们优化器的瓶颈。在将Ray应用于城市并行优化计算之后，我们为预算分配优化器进行了40次改进。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ EA6D149F-78CF-4D1E-B50D-B50D-6CF6CF6CDBF3979”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/heading” data-wp-block =“ {“ hash”：“ 9B0076BE-6133-4F40-8340-8342-AB6494940EAA48”，“ level”：2} class =“ class =” WP -Block-neading“ ID =” H-Kuberay-back-back-end-sup-from-uber-uber-michelangelo“&gt; kuberay的后端支撑&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 23B64F73-81BB-47EC-47EC-8CF6-3C3C3EB8887683”，“ dropcap”，“ dropcap”：false}应用程序应在应用级别具有良好的并行性策略，并具有坚实的射线后端，以支持所有这些并行计算。在本节中，我们描述了&lt;a a href =“ https://www.uber.com/blog/from-prem-premendictive-to-generative-iag/” target =“ _ blank” rel =“ noreferrer noopener”&gt; michelangelo（ Uber的AI平台）&lt;/a&gt;团队为所有客户团队建立了可靠的射线后端。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 0BA763E7-3698-4B86-B33F-83C1D56736C6”，“ dropcap”&gt;图11显示射线群是如何在后端。当射线簇在作业提交时启动时，射线群集的资源将根据作业的要求动态提供，例如节点，CPU，GPU和内存规格的数量。一旦配置了射线群集，首先建立了射线头节点，然后发现并连接Ray的所有工人节点。该应用程序连接到射线头节点，该节点可以协调跨工作节点的射线任务的分布式执行。射线头节点的连接详细信息（IP地址和端口）自动发现并提供给应用程序，从而无缝执行而无需手动干预。完成工作后，应用程序将请求发送到计算层并将分配的资源释放回池，以确保整个平台上有效利用。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;&lt;图data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 15D1B3B5-98FF-46DB-46DB-A08C-820C2253FBC0”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXegzZLISz3aS6ggnyA3UcVk3PrhB5pxWxBnGtVk-y2a8F_Ttw7Kf4ReKfd7ck_Vh0FnIWV9dCH8W8YYQ7R2hYVgP_afVEYxXd3d2j58WugVlURDZIbTyimZ2fzNgbEcw_wLboCzbYOqdaiEdtgaGTjyekj_?key=49MxSqxpePS_HACi2LK4Iw&#34; alt=&#34;&#34; referrerpolicy=&#34; No-Referrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图11：射线群集提供工作流程。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ AD5C5720-1BB5-40C0-81E2-E520BF0B058F”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C7D48EB8-82B0-4FAC-AB88-CE54FD83A98”，“ Dropcap”，“ dropcap”：false}并在Ray核心服务之外采用了其他模块。 Ray与生态系统中的各种开源框架和图书馆融为一体，并使尝试来自行业的新技术变得更加容易。我们集成了&lt;a href =“ https://www.uber.com/blog/horovod-ray/” target =“ _ blank” rel =“ noreferrer noopener”&gt; horovod with ray &lt;/a&gt;，采用&lt;a href =“ https://www.uber.com/blog/elastic-xgboost-ray/“ target =” _ blank“ rel =” noreferrer noopener“&gt; ray xgboost”&gt; ray xgboost &lt;/a&gt;，射线数据，射线数据，异质训练集群和雷·塔恩（Ray Tune）使雷成为米开朗基罗的公共层，用于训练和微调XGB，DL和LLM型号。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 4e7dadae-db90-47ec-a264-fb941088888889aa”，“ dropcap”，“ dropcap”：false}我们从&lt;a href =“ https://www.uber.com/blog/resource-scheduler-cluster-management-management-peloton/” target =“ _ _ black” rel =“ noreferrer noopener”&gt; peloton &lt;/peloton &lt;/a &gt;（旧资源调度程序）到新的kubernetes &lt;sup&gt;®&lt;/sup&gt;基于&lt;a href =“ https://www.uber.com/blog/blog/scaling-ai-ml-infrasture--infrastructure-attracture-at-at-uber/” target =“ _ blank” rel =“ noreferrer noopener”&gt; miChelangelo工作控制器&lt;/a&gt;服务，并为CPU和GPU培训工作提供了资源管理经验。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 56e235a1-b3c2-48c2-b9ef-b9ef-b9ef-188b8a482fda”，“ dropcap”，“ dropcap”：false}在本地和云提供商之间，该服务摘要从用户计算群集和硬件复杂性，并确保动态的资源选择，高可扩展性和灵活性以及更有效的资源调度，这使得它非常适合Uber的多元化用户需求。好处包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ CA6F83CB-7B8B-420E-B412-B412-B58F46261E06”，“订购”，“：false”：false，“ valse”值，“值”值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;自动资源分配&lt;/strong&gt;：设计使用CRD来定义资源池，自动分配根据组织层次结构，群集大小和HW类型要求的作业。这消除了手动资源分配，减少了争夺和超额标准。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;动态调度&lt;/strong&gt;：一个联合的调度程序智能地将作业匹配到群集，考虑因素，例如资源可用性，亲和力和工作优先级。这样可以确保最佳资源使用情况并防止调度失败。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt; cluster健康监控&lt;/strong&gt;：连续监视群集健康并保持最新 - 日期资源快照可确保仅将工作安排在具有可用资源的健康集群上。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;简化的用户体验&lt;/strong&gt;：用户无需管理基础架构 - 该系统抽象复杂性，使他们能够专注于工作负载，同时系统处理资源管理。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []“&gt; &lt;strong&gt;可伸缩性和可扩展性&lt;/strong&gt;：该设计支持新的硬件，云破裂，并且是与新兴技术兼容，确保它可以扩展并适应未来的需求，同时保持有效的资源管理。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ d5a3f1be-a170-4c50-be4f-56848d8a942c”，“ dropcap”，“ dropcap”：false} 2024年，我们成功地将所有现有的XGB和深度学习培训工作迁移到了米开朗基罗的工作控制器。有了工作控制器的好处，我们不断解除更多用例，例如大型语言模型微调和优化应用程序。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 65033d4c-f363-487b-9629-f1a89e2216ce”，“ obacity＆quot”;：“ alpha-channel”}“ class =” wp-block-separator has-alpha-channel-opacity&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，”哈希：“ 2FE3859D-0F0F-4143-ABC7-E1C523A72018”} -Block-neading“ ID =“ H-Conconclusion”&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 27937173-9673-496D-bd90-1b7E0c8cccc7f”，“ dropcap”，“ dropcap”：false} Uber中的一个关键工具，用于机器学习以及所有具有并行化的可能性，例如优化算法，评估算法等。 Ray现在在Uber中广泛使用，从Uber Michelangelo团队作为基本的后端开始，并应用于Marketplace Investment Team等不同应用团队，以对Uber进行预算分配优化。通过在Uber应用程序中使用Ray，我们实现了巨大的性能，并为我们的数据分析师和开发人员提供了更友好的用户体验。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 56DCEDB1-91D0-4F97-AC4C-93CD6520A2D6”，“ level”：2} class =“ WP -block-neading“ ID =” H-AckNowledgments”&gt;确认&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 0BB1342B-AD46-45ED-9D99-721BCE369294”，“ dropcap”，“ dropcap”：false} Uber Marketplace投资团队和Uber Michelangelo团队的成员付出了巨大的努力。 感谢瑞安·克拉克（Ryan Clark）积极审查博客并提供了宝贵的反馈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 32Beef5A-6370-4A6C-9536-78743743702801C”，“ dropcap” ：false}“ class =” hap-small-font-size“&gt; cover photo属性：” &lt;a href =“ https：//www.flickr.com/photos/40803964@n0808/47122077733 =“ noreferrer noopener”&gt;快速火车&lt;/a&gt;” &lt;a href =“ https://openvers.org/image/collection/collection？source = flickr＆creator = sander+sander+sander+van+van+van+dert =“ targ “ noreferrer noopener”&gt; sander van der wel &lt;/a&gt;在&lt;a href =“ https://creativecommons.org/licenses/by-sa/2.0/”下获得许可CC BY-SA 2.0 &lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 96D29206-02D2-4650-AE650-AE6E-1FB050DC8928”，“ Dropcap” ：false}“ class =”具有small-font-size”&gt; Amazon Web服务，AWS，Amazon S3和由AWS徽标提供动力的是Amazon.com，Inc。或其分支机构的商标。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 59A5CBA3-BE93-BE93-4729-A5A2-2F453047335FE4”，“ dropcap” ：false}“ class =” hap small-font-size&gt; apache &lt;sup&gt;®&lt;/sup&gt;，apache spark &lt;sup&gt;™&lt;/sup&gt;，hdfs，hdfs和star徽标是注册的商标或商标单元中的Apache软件基金会埃德州和/或其他国家。使用这些标记不暗示Apache软件基金会的认可。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ F9421F9F-11104-4649-880E-39BA6DBA6DC193A5”，“ DROPCAP” ：false}“ class =” hap-small-font-size&gt; docker &lt;sup&gt;®&lt;/sup&gt;是美国和/或其他国家的Docker，Inc的注册商标。 Docker，Inc不认可此标记。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 3BC99D4F-9762-45E3-890F-0890F-085E9145E52E”，“ Dropcap” ：false}“ class =” hapmall-font-size&gt; kubernetes &lt;sup&gt;®&lt;/sup&gt;，etcd &lt;sup&gt;®&lt;/sup&gt;和kubernetes &lt;sup&gt;®&lt;/sup®&lt;/sup&gt;徽标已注册在美国和/或其他国家/地区的Linux基金会。 Linux基金会没有使用这些标记的认可。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 33C27C14-0493-445D-8D88-9B83EB83EEK14AADC”，“ DROPCAP” ：false}“ class =” hap-small-font-size&gt; python &lt;sup&gt;®&lt;/sup&gt;，而python徽标是Python软件基金会的商标或注册商标。&lt;/p&gt;</description>
      <pubDate>Thu, 09 Jan 2025 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Enabling Infinite Retention for Upsert Tables in Apache Pinot】在Apache Pinot中启用无限保留率</title>
      <link>https://www.uber.com/blog/enabling-infinite-retention-for-upsert-tables/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;6f464e0d-95aa-47d4-b91b-ff78b73e82ad&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3bf72380-da88-4457-b301-5a8b1f33f317&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;a href=&#34;https://github.com/apache/pinot&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Apache Pinot&lt;/a&gt;&lt;sup&gt;™&lt;/sup&gt; was originally designed as an append-only OLAP (online analytical processing) database. After some redesign, it was modified to support upserts, which are UPdates plus inSERTs. This allows you to update a record for a given primary key or insert new primary keys. Deletion is a natural extension of upserts, addressing the need for efficient memory and disk usage in upsert use cases that require indefinite retention periods with deletions based on specific business needs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;60776145-55b5-404a-a4ec-df832fd2fef4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This blog highlights recent feature developments in &lt;a href=&#34;https://github.com/apache/pinot&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Apache Pinot&lt;/a&gt; that now support deletions at both memory and disk levels. It also shows how these developments have enabled Uber to sustainably support infinite retention for Pinot upsert use cases.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5d7874d5-8553-4c9f-907f-66e93b70ae56&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;98ed0dc4-373d-46f6-a88e-92130099a954&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-upsert-overview&#34;&gt;Upsert Overview&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c28bed20-e3db-456b-b4a3-32f63b67707b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Upsert is a feature of Pinot used for things like point updates, backfills, and data correction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7ae2a065-d825-4e86-9825-0d070419ff7a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 1 presents a high-level overview of upsert architecture, highlighting how upserts are highly memory-intensive.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098831,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;2ad046e2-dfe3-41b4-8633-e2a59301fa2a&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;428&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-1-upsert-high-level-architecture-17303485305469-1024x428.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098831&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-1-upsert-high-level-architecture-17303485305469.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-1-upsert-high-level-architecture-17303485305469.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-1-upsert-high-level-architecture-17303485305469.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1053,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-1-upsert-high-level-architecture-17303485305469.png 1053w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Figure 1&lt;/em&gt;:&lt;em&gt; High-level architecture of upsert in Pinot.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9e441de2-02e6-4d81-ac1a-aaf46746c488&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c789f689-5369-4d82-a15b-3f0bb04df0f8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Upsert-Metadata is an in-memory hashmap that maintains a mapping of Record-Primary-keys to Record-locations. The Record-Primary-key, a unique identifier, is used for partitioning upstream Kafka and serves as a reference for updates if they already exist in the Upsert-Metadata map. The Record-location points to the &lt;a href=&#34;https://docs.pinot.apache.org/basics/concepts/components/table/segment&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;segment&lt;/a&gt; where the latest record for a given Record-Primary-key is stored. This entire Upsert-Metadata mapping is kept in memory for fast upsert operation, contributing to the high memory usage of upserts. To illustrate the memory-intensive nature of upserts, at Uber, our standard host with 376 GiB of memory and 1.1 TiB of disk storage experiences 80% memory utilization and approximately 10% disk utilization for upsert use cases. To draw a comparison with non-upsert append-only use-cases, these hosts experience higher disk utilization (~80%) with memory and cpu utilization at around ~30-40% (highly dependent on query shapes).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6ffd6fd5-44ff-4ab9-a63b-28c939d4d819&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This blog discusses strategies to improve both memory and disk footprints for upsert use cases that require very high (indefinite) retention periods.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098833,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;ddd7ab5c-b872-4e58-a955-92a7a84cd9c2&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;495&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-2-upsert-low-level-architecture-17303490841159-1024x495.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098833&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-2-upsert-low-level-architecture-17303490841159.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-2-upsert-low-level-architecture-17303490841159.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-2-upsert-low-level-architecture-17303490841159.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-2-upsert-low-level-architecture-17303490841159.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-2-upsert-low-level-architecture-17303490841159.png 2048w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Figure 2&lt;/em&gt;:&lt;em&gt; Example explaining the low-level architecture of upsert.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e6650171-6279-4ab7-be14-b8215e2f7322&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5cc29ea0-9ad8-4e0e-b43a-3744fd3aa4d6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Consider Figure 2, which shows upsert behavior at the partition level within a specific server instance. Here, there’s a sealed segment S1 and a consuming segment S2. The Upsert-Metadata map stores a mapping of primary keys to record locations, represented as (segment-name, DocId). The DocId can be understood as the row number within a segment where the record is located. Figure 2 shows, via a dotted line, that when the same primary key appears in the consuming segment, the Upsert-Metadata map updates the record location to the new consuming segment, overwriting the reference to the old record.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;65e57f3d-f92a-4880-9f34-d79cb2e6885d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Additionally, there’s an in-memory segment bitmap that stores the queryable records for a given segment and is updated with each ingested record. During query processing for upsert tables, this bitmap is used as an implicit filter.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5e732668-f72a-431b-915f-d9fdaf8c745d&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;55a87a0f-15f6-4d4a-b20a-304128177f02&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-point-deletes&#34;&gt;Point Deletes&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;588352aa-4b80-4243-8443-231351742fc7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When describing upserts, another important use case is deletes. Once you mark a Record-Primary-key as deleted, it shouldn’t be selected in subsequent queries anymore. They should also be subsequently deleted from in-memory and disk for cost savings.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;19afce3f-05e0-4edf-bc27-dea569945c24&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In Pinot, you can enable the point deletes feature by setting a table-level configuration.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098835,&amp;quot;width&amp;quot;:&amp;quot;568px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;dc5667b8-be55-461c-be1c-9001ea13e8ca&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;216&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-3-point-deletes-config-17303491308002-1024x216.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098835&#34; style=&#34;width:568px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-3-point-deletes-config-17303491308002.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-3-point-deletes-config-17303491308002.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-3-point-deletes-config-17303491308002.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1252,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-3-point-deletes-config-17303491308002.png 1252w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Figure 3&lt;/em&gt;:&lt;em&gt; Configuration to enable point-deletes.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;50bfa0e5-42c3-4558-ad92-a9630a88b86b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;348cb2da-3c55-48fa-826d-6cab7184eae8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Once the point deletes feature is enabled, Pinot starts tracking an additional bitmap called queryableDocIds. It operates similarly to validDocIds with one key difference: whenever the value in the deleteRecordColumn is true, the corresponding entries are removed from queryableDocIds but not from validDocIds. During query time, you then strictly use queryableDocIds acting as an implicit filter. Ideally, queryableDocIds and validDocIds are identical unless a delete record is present for a table.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098837,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;a9be6149-c76f-4fe4-972d-c344307edf24&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;410&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-point-deletes-architecture-17303491608467-1024x410.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098837&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-point-deletes-architecture-17303491608467.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-point-deletes-architecture-17303491608467.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-point-deletes-architecture-17303491608467.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-point-deletes-architecture-17303491608467.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1862,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-4-point-deletes-architecture-17303491608467.png 1862w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Figure 4&lt;/em&gt;:&lt;em&gt; Architecture of the point deletes feature.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6e6709ac-fbe8-4e64-b768-b73ce5db41ca&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;552aa8a6-7a03-4329-9e00-02412ab7c6fb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the example in Figure 4, the only action different from the normal ingestion flow whenever a delete-record comes up is to remove the entry from queryableDocIds. The rest of the flow remains the same. This feature is very similar to adding a filter where &lt;em&gt;deleteRecordColumn = false&lt;/em&gt; in all of your queries on this table.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0cb6e955-eec7-44da-85bc-9ff9126983f8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pinot doesn’t immediately delete the key from the upsert-metadata map upon receiving a deletion message. This approach ensures consistency in deletion, particularly in cases where an out-of-order event arrives after the deletion event for that key.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3788335a-0090-4b38-980e-5a18a73d054a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;It’s clear that this function acts more as a soft-delete feature, as it doesn’t achieve any savings by removing metadata from the hashmap or from disk. We have a use case at Uber where the delete messages scale is around 5,000 per second, equivalent to 600 million keys being deleted daily. Based on the standard host configuration mentioned above, we can accommodate approximately 250-300 million keys per host. With a replication factor of 2, accommodating 600 million keys per day, that means adding 4 hosts daily. This becomes a critical issue if we want to support high or indefinite retention, as it results in the cost of adding 4 hosts every day just to manage the metadata of deleted records.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6162ad21-cef0-4213-980a-cf32cf952c5b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9eb6ec06-9c6b-4b95-bcd9-f0c476c9d878&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-metadata-retention-on-deleted-keys&#34;&gt;Metadata Retention on Deleted Keys&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b587ba8a-b675-4d04-a222-1620822b88fc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To address the problem mentioned above, we introduced &lt;a href=&#34;https://github.com/apache/pinot/issues/11736&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;a new feature in Pinot&lt;/a&gt; that removes metadata for deleted keys after a TTL window. This buffer TTL window ensures that any out-of-order events occurring within this period won’t reverse the deletion.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098839,&amp;quot;width&amp;quot;:&amp;quot;578px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;2cf8b259-d875-4e5d-9ae3-e4f6554e4199&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;254&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-deleted-keys-ttl-config-17303492939394-1024x254.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098839&#34; style=&#34;width:578px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-deleted-keys-ttl-config-17303492939394.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-deleted-keys-ttl-config-17303492939394.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-deleted-keys-ttl-config-17303492939394.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1252,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-deleted-keys-ttl-config-17303492939394.png 1252w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Figure 5&lt;/em&gt;:&lt;em&gt; Configuration to enable retention of metadata of deleted keys.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;04619d44-ef9f-4b7a-9ebe-ba50df77caee&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098841,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;4936f41b-6629-40cc-8ff4-c1dd68770750&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;360&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-low-level-architecture-of-deleted-keys-ttl-17303494211495-1024x360.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098841&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-low-level-architecture-of-deleted-keys-ttl-17303494211495.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-low-level-architecture-of-deleted-keys-ttl-17303494211495.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-low-level-architecture-of-deleted-keys-ttl-17303494211495.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-low-level-architecture-of-deleted-keys-ttl-17303494211495.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1902,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-6-low-level-architecture-of-deleted-keys-ttl-17303494211495.png 1902w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Figure 6&lt;/em&gt;:&lt;em&gt; Low-level architecture of metadata retention of deleted keys.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c30884a8-46cc-4a41-b0a8-648e37475ec2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bba4c59b-ef7d-45af-8262-5b409005c444&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The design is straightforward. After each segment commit cycle, Pinot iterates through the keys in a table’s partition in the upsert-metadata-manager. If a key points to a record that exists in validDocIds but not in queryableDocIds (indicating the record is deleted), and it’s exceeded the deletedKeysTTL threshold, Pinot removes the metadata for that key from the map and marks the validDocId as invalid. As shown in Figure 6, where red indicates removal, Pinot removes the 4th row from validDocId as well.&lt;br&gt;&lt;br&gt;The next section of this blog covers why Pinot marks the validDocId as invalid.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098843,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;c0576c7c-bd24-4ee0-aac0-31aaffcaa6c0&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;289&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-7-low-level-code-for-deletedkeysttl-17303494918158-1024x289.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098843&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-7-low-level-code-for-deletedkeysttl-17303494918158.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-7-low-level-code-for-deletedkeysttl-17303494918158.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-7-low-level-code-for-deletedkeysttl-17303494918158.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-7-low-level-code-for-deletedkeysttl-17303494918158.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1730,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-7-low-level-code-for-deletedkeysttl-17303494918158.png 1730w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Figure 7&lt;/em&gt;:&lt;em&gt; Pseudo-code for deleted keys TTL flow.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8204bef8-c3c1-49fd-8c10-481e4052ea65&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5f0cd937-4e99-470d-80af-e7deec686a33&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 8 illustrates the scale of deletion we achieved at Uber after enabling this feature on a table with a deletion rate of approximately 2,000 messages per second. The metric shows that up to 300 million keys were deleted from the metadata-manager map per day, considering a replication factor of 2.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098845,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;179cfea9-8182-42b3-9537-2dc589891402&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;404&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-8-deleted-keys-ttl-impact-17303496032610-1024x404.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098845&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-8-deleted-keys-ttl-impact-17303496032610.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-8-deleted-keys-ttl-impact-17303496032610.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-8-deleted-keys-ttl-impact-17303496032610.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-8-deleted-keys-ttl-impact-17303496032610.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-8-deleted-keys-ttl-impact-17303496032610.png 2048w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Figure 8&lt;/em&gt;:&lt;em&gt; Deleted keys TTL feature impact in production.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;27480f2b-c480-4169-8aa2-9221c9eb52b2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;170a8587-a8bc-4bf9-8ab6-977dec3ca062&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2596619c-4815-4f28-8923-b98137a7e86b&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-upsert-compaction&#34;&gt;Upsert Compaction&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;44c5307e-38d8-49ca-a3ac-ae22532e8c2b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;During server restarts, Pinot loads all the keys persisted on disk back into the in-memory hashmap before triggering the deleted-keys-retention on them again. This has caused OOM issues as the stale keys weren’t removed from the disk and are in the scale of millions. This can be resolved by gradually removing the stale keys from the disk, thereby also regaining disk space savings and not loading them back into memory during restarts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;493cb873-80ee-4b2a-8cae-125a566fd00f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At Uber, we use the &lt;a href=&#34;https://github.com/apache/pinot/pull/10463&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;UpsertCompactionTask minion task&lt;/a&gt; to compact old segments and remove stale or deleted rows from the disk. For this, we use the validDocId bitmap snapshot flow. After every segment commit cycle, we snapshot these bitmaps for all segments and persist them to disk. During each task run, we loop through all these bitmaps to find the segments that’ll provide the maximum compaction efficiency, where the highest value of &lt;em&gt;invalidDocs = totalDocs − validDocs&lt;/em&gt;.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5c6ada86-b1b9-4d03-9d80-467cb9245304&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Referencing the previous examples, after an Upsert-compaction task runs on the segment, the segment on disk will be updated as shown in Figure 9. We see ‌records related to &lt;em&gt;primary key=3&lt;/em&gt; are removed from disk as well.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098847,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;3389947a-b60a-4997-9865-88a2216fe707&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;288&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-9-low-level-architecture-of-upsert-compaction-17303496455383-1024x288.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098847&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-9-low-level-architecture-of-upsert-compaction-17303496455383.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-9-low-level-architecture-of-upsert-compaction-17303496455383.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-9-low-level-architecture-of-upsert-compaction-17303496455383.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-9-low-level-architecture-of-upsert-compaction-17303496455383.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1878,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-9-low-level-architecture-of-upsert-compaction-17303496455383.png 1878w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Figure 9: Low-level architecture of upsert compaction.&amp;nbsp;&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;60b5ffc6-e7f6-492a-9139-255e21f10e5e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;aa036b3a-d22b-413e-b23c-74a369483933&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As mentioned earlier, during the metadata retention workflow for deleted keys, Pinot marked the validDocId as invalid for deleted primary keys. This allowed them to be snapshotted in the next cycle, enabling the removal of the deleted record entry from the disk via upsert compaction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3297bbf8-670f-42db-a170-06fca407dd6f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 10 shows the impact of enabling upsert compaction for 1 of our production tables. The table grew to approximately 8 TiB in size, but after enabling compaction, the size was reduced to around 850 GiB, resulting in a space saving of about 90%. Additionally, the rate of data growth significantly decreased from approximately 85 GiB/day to about 3 GiB/day.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1098849,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;03b08f5a-2743-4eff-8c2a-888b3e21097f&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;309&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-impact-of-upsert-compaction-task-at-production-scale.-17303498706695-1024x309.png&#34; alt=&#34;&#34; class=&#34;wp-image-1098849&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-impact-of-upsert-compaction-task-at-production-scale.-17303498706695.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-impact-of-upsert-compaction-task-at-production-scale.-17303498706695.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-impact-of-upsert-compaction-task-at-production-scale.-17303498706695.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-impact-of-upsert-compaction-task-at-production-scale.-17303498706695.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-impact-of-upsert-compaction-task-at-production-scale.-17303498706695.png 2048w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;em&gt;Figure 10: Impact of upsert compaction task at production scale.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c2a7fe2a-7670-4ab9-a36f-52d424b2c6e6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;5c015e29-a878-4acc-8fab-9df3126a3230&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-ensuring-data-consistency-with-deletion-and-compaction&#34;&gt;&lt;br&gt;Ensuring Data Consistency with Deletion and Compaction&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2fb6d20d-9b99-4a6a-9b62-1484a31602c6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One challenge with enabling compaction along with deletion is we could end up in a situation where an older non-deleted record for a particular key isn’t compacted, but the deleted record is. During a server restart, when all segments are loaded, Pinot would incorrectly mark the record as non-deleted and start returning it as a valid primary key, leading to an inconsistent state in the table.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8b68305f-2087-43ae-982e-f48f19271e92&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For example, consider a primary key PK1 with records in segments S0 and S1. In S1, the record is marked as deleted. If S1 gets compacted but S0 doesn’t due to threshold reasons in the upsert compaction flow, during a server restart, the upsert-metadata-manager map would incorrectly point PK1 to S0, even though it should be considered deleted for the end user.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;86bb47ba-8878-4574-800c-0c722ad7fc09&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To resolve this situation, we proposed a &lt;a href=&#34;https://github.com/apache/pinot/pull/13347&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;design in Pinot to maintain a state of Primary Key&amp;nbsp; →&amp;nbsp; distinct-segment-count&lt;/a&gt;. This means tracking the number of segments where a record exists for a given primary key. If the count is &amp;lt;= 1, Pinot will allow deletion of metadata on the record, followed by marking the validDocId as invalid. Pinot can now compact the deleted record, ensuring that all other records in other segments are removed.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;238b50a4-0c7e-4faa-a6b9-4ad3a501a455&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1284d8a3-f06d-4fa8-826c-28ee992219e1&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-use-cases-at-uber&#34;&gt;Use Cases at Uber&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;78f3eacb-6acb-409b-91a4-20763d84c171&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As of writing, we’ve enabled infinite retention on upsert tables for over 20 tables, with the total primary key count across all tables being approximately 6 billion keys (without replication) and a deletion rate of around 600 million keys per day.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;57086e77-68d3-4503-9445-2979304f5655&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Infinite retention on upsert tables will benefit the following types of long-running use cases at Uber and many more:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;166919b3-4707-4aef-a4a9-842d37ad58a7&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Tracking Uber for Business ‌use cases where organizations are active for years and have regular updates regarding employee count, payment entities, etc.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Following Uber vouchers use cases where vouchers are active for years and receive updates on voucher redemption count, voucher expiry.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Cadence workflow analytics, as each workflow can run for hours, months, or years, with deletion enabled on closed workflows.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e8edb46e-3fd1-4226-a538-6141bfd46be2&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4c862e22-f807-4c74-8f15-83e0112383a1&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-next-steps-nbsp&#34;&gt;Next Steps&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;235f6f61-db25-4acf-ac58-6c25fc91e4e0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One challenge we have is the creation of many small segments for a particular table over time. This can lead to longer loading times during server restarts and higher query latency, as more segments need to be processed by the same number of threads during query execution.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0ae209af-bd6e-40b5-8188-d7fc56b8f86d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One possible solution is to enable upsert compaction across multiple segments, merging them to create larger segments, controlling the overall segment count growth over time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ffb7cee3-09ce-43e4-835b-be30f8bfc94a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;88951a08-8e0a-4188-bc28-d55268b08a69&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;514436bc-0ef2-4cd1-907d-e8239168f7b3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This powerful feature in Apache Pinot meets a crucial need for many Pinot users at Uber and beyond, enabling higher retention for upsert tables and supporting deletions directly within Pinot. This unlocks numerous new use cases for Pinot upserts at Uber and brings Pinot’s functionality closer to that of a row-level database.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4fff3aad-3e6d-44ec-934e-01aa3d7ca10d&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e4c7c315-71fb-491b-bbe4-1c6ad36bb3e1&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-acknowledgments&#34;&gt;Acknowledgments&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;db131410-81a0-4b9f-b365-cd7d432d6fc8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Special thanks to the Apache Pinot&lt;sup&gt;™&lt;/sup&gt; community members who actively contributed to and reviewed the numerous changes required to enable this feature in Pinot.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;132c57fc-915d-4f35-ad45-844bb47ad56c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Special thanks to Navina Ramesh in designing point deletes, Robert Zych who designed upsert compaction, and Yupeng Fu for crafting the original upsert design document.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;744f7acb-2945-49f9-a5c4-677304116510&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Apache Pinot&lt;sup&gt;™,&lt;/sup&gt; Pinot, Apache, the Apache feather logo, and the Apache Pinot project logo are registered trademarks of The Apache Software Foundation. ‌No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;br&gt;Cover Photo attribution: “&lt;a href=&#34;https://openverse.org/image/bc95682f-5a02-46a3-98eb-86f364835de0&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Infinite Wine&lt;/a&gt;” by &lt;a href=&#34;https://www.flickr.com/photos/47105685@N00/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Adam Brill&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/2.0/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CC BY-NC-SA 2.0&lt;/a&gt;. No modifications.&lt;/p&gt;】&lt;h1 data-data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，“ hash”：“ 6F464E0D-95AA-47D4-B91B-FF78B-FF78B73E82AD”} -block-neading“ id =” H-Instruction“&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 3BF72380-DA88-4457-B301-5A8B1F33317”，“ dropcap”，“ dropcap”：false} =“ https://github.com/apache/pinot” target =“ _ blank” rel =“ noreferrer noopener”&gt; apache pinot &lt;/a&gt; &lt;/a&gt; &lt;sup&gt;™&lt;/sup&gt;最初是设计为仅将附录olap设计的（在线分析处理）数据库。经过一些重新设计后，它被修改为支持UPSERTS，即更新和插入物。这使您可以更新给定的主键或插入新主键的记录。删除是UPSERTS的自然扩展，解决了需要根据特定业务需求删除的UPSERT用例中有效的内存和磁盘用法的需求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 60776145-55b5-404a-a4ec-a4ec-df832fd2fef4”，“ dropcap”，“ dropcap”：false} &lt;a href =“ https://github.com/apache/pinot” target =“ _ blank” rel =“ noreferrer noopener”&gt; apache pinot &lt;/a&gt;现在支持在内存和磁盘级别上支持缺失。它还显示了这些发展如何使Uber能够可持续支持Pinot Upsert用例的无限保留。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash“：” 5D7874D555-8553-4C9F-907F-66E93B70AEAE56，“ opacity”，“ opacity” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {” hash&#39;：“ 98ED0DC4-373D-46F6-A88E-92130099A954”，“级别”，“级别”：2} -block-heading“ id =” h-upSert-overview“&gt; upSert概述&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C28Bed2020-E3DB-456B-B4A3-32F63B67707B”，“ dropcap”，“ dropcap”：false} Pinot用于点更新，回填和数据校正之类的功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7ae2a065-d825-4e86-982-9825-0d070419ff7a”，“ dropcap”，“ dropcap”：false} UPSERT体系结构的高级概述，强调了UPSERT如何高度记忆密集型。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1098831，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ alecn”：“”中心“，”哈希：“ 2AD046E2-DFE3-41B4-8633-E2A59301FA2A”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading&gt; &lt;img loading =“ lazy” “ 1024” height =“ 428” src =“ https://blog.uber-cdn.com/cdn-cgi/image/mimage/width=2160,quality=80，onerror = redirct，format = auto/wp-contents/wp-contents/uploads /2024/10/figure-1-upsert-high级别 - 架构re-17303485305469-1024x428.png“ alt =” class =“ wp-image-1098831” srcset =“ https://blog.uber.uber-cdn.com/cdn-cdn.com/cdn-cgi/image/image/image/image/image/image/width=1024,quality = 80， OnError =重定向，格式= auto/wp-content/uploads/2024/10/figure-1-upSert-upSert-high-level-Architecture-17303485305469.png 1024W，https://blog.uber.uber.uber-ber-cdn.com/cdn-cgi /image/width = 300，Quality = 80，OnError = Redirect，Format = auto/wp-content/uploads/2024/2024/10/figure-1-upsert-1-upsert-high-level-level-achitection-17303485305469.png 300w，https：// https：// blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-1-upsert-high-level-架构17303485305469.png 768W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1053,quality=80,80,80，onerror=redirt = redirect，format = autot = auto/wp-content/wp-content/uploads/2024/10/10 /figure-1-upsert-ter-thevel-Archituction-17303485305469.png 1053W“ sizes =”（max-width：1024px）100VW，1024px，1024px“ referrerpolicy =” no-referferrer =“ no-referferrer”&gt; “&gt; &lt;em&gt;图1 &lt;/em&gt;：&lt;em&gt; upsert的高级体系结构。&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 9E441DE2-02E6-4D81-AC1A-AAF46746C488”，“ dropcap”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C789F689-5369-4D82-A15B-3F0BBB04DF0F8”，“ dropcap”&gt; upsert-metadata是一个内存的哈希图，可维护记录 - 钥匙到记录 - 位置的映射。唱片主要键是一种唯一标识符，用于分区上游Kafka，如果它们已经存在于UPSERT-METADATA MAP中，则用作更新的参考。记录-Location指向&lt;a href =“ https://docs.pinot.apache.org/basics/concepts/concepts/components/components/table/sement/sement/sement” target =“ _空白” rel =“ noreferrer noopener” &gt;存储给定记录键的最新记录。整个UPSERT-METADATA映射都保存在内存中，以进行快速UPSERT操作，从而有助于UPSERTS的高度记忆使用。为了说明UPSERTS的内存密集型性质，在Uber，我们的标准主机，具有376个内存和1.1 TIB的磁盘存储体验80％的内存利用率和大约10％的磁盘利用率，用于UPSERT用例。为了与非上述附加用例进行比较，这些宿主在〜30-40％左右的内存和CPU利用率上经历了较高的磁盘利用率（〜80％）（高度取决于查询形状）。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash“：” 6ffd6fd5-44ff-44ff-4b9-a63b-28c93939d4d819“，dropcap”，“ dropcap”：false}改善需要非常高（不确定）保留期的UPSERT用例的记忆和磁盘足迹的策略。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098833，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ DDD7AB5C-B872-4E58-A955-92A7A84Cd9c2“，“ alt”：“”}“ class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” decoding =“ async” width =“ 1024” height =“ 495” src =“ src =” https：// .uber-cdn.com/cdn-cgi/image/width = 2160，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/10/fige-2 upsert-lof-low-low-lovel-level-aRCRACTOCTURT -17303490841159-1024X495.png“ alt =”“ class =” wp-image-1098833“ srcset =” https://blog.uber-cdn.com/cdn-c.com/cdn-cggi/image/image/image/image/image/width=1024,1024,4,OnerRor=1024，Quelati =重定向，格式= auto/wp-content/uploads/2024/10/fige-2-upSert-low-level-Architecture-17303490841159.png 1024W，https://blog.uber.uber-cdn.com/cdn.com/cdn-cdn-cgi/图像/宽度= 300，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/fige-2-upSert-low-low-law-aRchitecture-17303490841159.png 300W，https：https：// blog .uber-cdn.com/cdn-cgi/image/width = 768，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/10/fige-2 upsert-lod-low-low-lovel-level-architectuct -17303490841159.PNG 768W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1536,quality=80，onerror = redirt = redirct，format， figure-2-upsert-low-level-architecture-17303490841159.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto /wp-content/uploads/2024/10/figure-2-upSert-Low--level-Architecture-17303490841159.png 2048w“ sizes =”（max-width：1024px）100VW，1024px，1024px“ referrerPolicyCeledrerPolicy =” no-referrererrerererererererererrererererererererererererererererererererererer&gt; &lt;figcaption class =“ wp-元素caption”&gt; &lt;em&gt;图2 &lt;/em&gt;：&lt;em&gt;示例解释了UpSert的低级体系结构。&lt;/em&gt; &lt;/em&gt; &lt;/em&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/fige&gt; &lt;/div &gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ E66650171-6279-4AB7-BE14-B8215E2F7322”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 5cc29ea0-9ad8-4e0e-b43a-3744444fd3aa4d6”，“ dropcap”，“ dropcap”：false} ，在特定服务器实例中显示在分区级别上的UPSERT行为。在这里，有一个密封的段S1和一个消费段S2。 UPSERT-METADATA MAP存储了主键的映射，以记录表示位置（semgment-name，docID）。文档可以理解为记录所在的段中的行号。图2通过虚线显示，当在消费段中出现相同的主键时，Upsert-Metadata地图将记录位置更新为新的消费段，将引用引用到旧记录。&lt;/p&gt;。&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 65E57F3D-F92A-4880-9F34-D79CB2E6885D”，“ dropcap”：dropcap“：false}”&gt;此外，还有，还有，还有一个内存段位图，可存储给定段的可查询记录，并随着每个摄入的记录进行更新。在upsert表的查询处理过程中，此位图用作隐式过滤器。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 5E732668-F72A-431B-915F-D9FD9FD9FDAF8C745D”，“ opacity”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel&#39;} class =“ wp-block-sepaRator Has-Alpha-encher-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ 55A87A0F-15F6-4D4A-B20A-30A-304128177F02”，“ level”：2} -block-neading“ id =” h-point-deletes“&gt;点删除&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 5888352aa-4b80-4243-4243-8443-231351742fc7”，“ dropcap”&gt; ，另一个重要的用例是删除。一旦将记录键键标记为已删除，就不应在随后的查询中选择它。随后，它们还应从内存和磁盘中删除以节省成本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 19AFCE3F-05E0-4EDF-BC27-DEA569945C24”，“ dropcap”，“ dropcap”：false}您可以通过设置表级配置来启用点删除功能。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098835，“ width”：“ 568px”，“高度”：“自动”，“ sizeSlug”：“”大”，“ linkdestination”：“无”，“对齐”：“中心”，“ hash”：“ DC5667B8-BE55-461C-BE1C-9001EA1EA13E13E8CA”，“ ALT”：“}” class =“ AlignCenter size-large固定的“&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 1024” height =“ 216” src =“ https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 2160，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-3点 - 列表 - 列表config-17303491308002-1024x216.png“ -1098835“ style =”宽度：568px;高度：auto“ srcset =” https://blog.uber-cdn.com/cdn-cgi/image/image/width=1024,quality=80，quality = 80，onerror = redirtirect = reforct informat = auto /wp-content/uploads/2024/10/figure-3-point-deletes-config-17303491308002.png 1024W，https://blog.uber.uber-cdn.com/cdn-cgi/image/image/image/image/width=300,quality= = 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-3点deletes-config-17303491308002.png 300W，https://blog.uber.uber-cdn.com/cdn-cgi /image/width=768，Quality=80,OnError=redirect，format = auto/wp-content/uploads/2024/2024/10/figure-3-point-deletes-config-17303491301308002.png 768w，https：https：//博客。 uber-cdn.com/cdn-cgi/image/width=1252,180，onerror = redirect，format = auto/wp-content/uploads/2024/2024/10/figure-3-point-3-point-deletes-coneletes-coneletes-config-17303491308002。 png 1252W“ sizes =”（最大宽度：1024px）100VW，1024px“ referrerpolicy =“ no-referferrer”&gt; &lt;figcaption class =“ wp-element-caption”&gt; &lt;em&gt; &lt;em&gt;图3 &lt;/em&gt;：启用点删除的配置。&lt;/em&gt; &lt;/figcaption&gt; &lt;/fig&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 50BFA0E5-42C3-4558-AD92-A9630A88B86B”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 348CB2DA-3C55-3C55-48FA-826D-6CAB7184EAE8”，“ dropcap”：proctcap“：false}”&gt;一次已启用删除功能，Pinot开始跟踪一个名为QueryableDocids的额外位图。它的运行与VA类似具有一个关键区别的LidDocids：每当deleterecordcolumn中的值正确时，相应的条目就会从Queryabledocid中删除，但不会从有效docids中删除。然后，您严格使用用作隐式过滤器的QueryableDocids。理想情况下，除非存在删除记录。&lt;/p&gt;都存在删除记录，否&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098837，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ aLign”：“”中心”，“ hash”：“ A9BE6149-C76F-4FE4-972D-C344307EDF24”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” “ 1024” height =“ 410” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/10/figure-4-point-deletes-Architection-17303491608467-1024x410.png“ alt =” class =“ wp-image-1098837” srcset =“ srcset =” -cgi/image/width = 1024，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/fige-4-point-deletes-architecter-17303491608467.png 1024w，https：// https：// blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/10/figure-4-point-4-point-4-point-deletes--teletes-architect--architection-architector--architector--Architector-inkitector-arkitector--Architector-inkitect- 17303491608467.png 300W，https：//blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80，quality = 80，onerror = redirt = redirct，format = auto/wp-content/wp-content/wploads/uploads/2024/1024/10/10/10/figigure -4点deletes-Architecture-17303491608467.png 768W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width = 1536,quality = 80，oonerror = rediRect e redirect，format efterctem form gorm form，form tem form tem form gorm form tem gp--p--p-auto/wp---wp----wp------内容/上载/2024/10/figure-4点deletes-architecture-17303491608467.png 1536W，https：//blog.uber.uber-cdn.com/cdn-cgi/image/image/width=1862,1862,quality=80000,80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/figure-4点 - 列表 - 架构17303491608467.png 1862w“ size =”（max-width：1024px） -Referrer“&gt; &lt;figcaption class =“ WP-元素caption”&gt; &lt;em&gt;图4 &lt;/em&gt;：&lt;em&gt; point deletes的体系结构特征。 Div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 6E6709AC-FBE8-4E64-B768-B768-B73CE5DB41CA”，“ dropcap”，“ dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 552AA8A6-7A03-4329-9E00-02412412AB7C6FB”，“ dropcap”&gt;在图4中，每当出现删除记录时，唯一与正常摄入流不同的动作是从Queryabledocid中删除条目。其余的流量保持不变。此功能与添加过滤器非常相似&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 0cb6e955-eec7-44da-85bc-9ff9126983f8”，“ dropcap”，“ dropcap”：dropcap“ t立即从收到时从UpSert-Metadata地图中删除键输入删除消息。这种方法确保了删除的一致性，尤其是在删除事件之后到达该密钥之后的订购外事件的情况下。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 3788335a-0090-4B38-980E-5A18A73D054A”，“ dropcap”&gt;很明显，很明显，很明显，很明显，该功能更能充当软削弱功能，因为它通过从哈希图或磁盘上删除元数据而无法节省任何节省。我们在Uber上有一个用例，其中删除消息量表每秒约5,000，相当于每天删除6亿键。根据上述标准主机配置，我们可以容纳每个主机约2.50-3亿键。复制因子为2，每天可容纳6亿键，这意味着每天增加4个主机。如果我们想支持高或无限期保留，这将成为一个关键问题，因为它导致每天增加4个主机的成本只是为了管理已删除的记录的元数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 6162AD21-CEF0-4213-980A-CF32CF952C5B”，“ opticaly class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 9eb6ec06-9c6b-4b95-bcd95-bcd9-f0c476c9d878”，“ level”，“ level”：2} -block-heading“ id =” h-metadata-noted-neleted-keys&#39;&gt;删除键上保留元数据&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ b587ba8a-b675-4d04-a222222222222222222b8888888 fc”，“ dropcap”，“ dropcap”：false}上面提到的问题，我们引入了&lt;a href =“ https://github.com/apache/pinot/issues/11736” target =“ _ blank” rel =“ noreferrer noopener”&gt; pinot中的新功能&lt;/a&gt; TTL窗口后删除键的元数据。此缓冲区TTL窗口可确保在此期间内发生的任何订购事件都不会扭转删除。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098839，“ width”：“ 578px”，“高度”：“自动”，“ sizeSlug”：“”大”，“ linkdestination”：“无”，“对齐”：“中心”，“哈希”：“ 2CF8B259-D875-4E5D-9AE3-E4F6554E4199”，“ ALT”：“”} class =“ AnignCenter size-large）固定的“&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 1024” height =“ 254” src =“ https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 2160，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-5-deleted-deleted-keys-ttl-config-17303492939394-1024x254x254.png.png =“ class =” wp -image-1098839“ style =”宽度：578px;高度：自动“ srcset =” https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1024,quality=80,80,80,80,80,80，onerror = redirect，formate = auto/wp-content/uploads/2024/10/fige-5-deleted-keys-ttl-config-1730349293939394.png 1024W，https://blog.uber.uber-cdn.com/cdn-cgi/im年龄/宽度= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-5-deleted-keys-keys-ttl-config-1730349293939394.png 300W，https：//博客.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-5-deleted-keys-ttl-config -17303492939394.png 768W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1252,quality=80，onerror = redirt = redirct，format = autt = auto/wp-content/wp-content/wp-content/uploads/2024/2024/10/10/图-5删除 - 键 -  ttl-config-173034929393944.png 1252w“ sizes =”（max-width：1024px）100VW，1024px，1024px“ referrerpolicy =” no-referferrer“ no-referferrer”&gt; &gt; &lt;em&gt;图5 &lt;/em&gt;：&lt;em&gt;配置以启用删除键的元数据。&lt;/em&gt; &lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 04619d44-ef9f-4b7a-9ebe-ba-ba50df77777777.caee”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098841，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ 4936f41b-6629-40cc-8ff4-c1dd68770750”，“ alt”：“” class =“ alignCenter size-large”&gt; &lt;img loading&gt; &lt;img加载=“ lazy” “ 1024” height =“ 360” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality = 80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/10/figure-6-low--level-Architecture of-deleted-keys-ttl-17303494211495-1024x360.png“ alt =” class =“ wp-image 10988841” srcset =“ srcset =” .uber-cdn.com/cdn-cgi/image/width = 1024，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/10/fige-6-lof-6-low级别 - 架构-deleted-keys-ttl-17303494211495.png 1024W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width = 300，quality=80，quality = 80，onerror = redirct，formect，format，format = auto/wp-content/上载/2024/10/figure-6-low-level-aRCHITETUCE-of deleted-keys-ttl-17303494211495.png 300W，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/image/width=768 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-6-low-law-level-aRCHITETER-DETETED-keys-keys-keys-ttl-17303494211495.png 768W，https：// https：// https：// blog.uber-cdn.com/cdn-cgi/image/width = 1536，quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/10/figure-6-6-6-low-level-level-level-aart-arkitecture--Low-aarkitector- deleted-keys-ttl-17303494211495.png 1536W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1902，Quality = 80，quality = 80，onerror = redirtirt = rediRect，format = format = auto/wp-content /uploads/2024/10/figure-6-low-level-architecture-of-deleted-keys-ttl-17303494211495.png 1902w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer “&gt; &lt;figcaption class =“ WP-元素接合”&gt; &lt;em&gt;图6 &lt;/em&gt;：&lt;em&gt;删除键的元数据保留的低级体系结构。 &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ C30884A8-46CC-4A41-B0A8-648E374775EC2”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ bba4c59b-ef7d-45aF-8262-5B409005C444“，” dropcap“：false}”&gt;设计很简单。在每个段提交周期之后，Pinot在UpSert-Metadata-Manager中表的划分中迭代。如果一个关键指向有效的docids中存在的记录，而不是在Queryabledocid中（表示记录已删除），并且超过了deletedKeykekysttl阈值，则Pinot从地图中删除该键的元数据，并将有效性的元素标记为无效的。如图6所示，其中红色指示删除，Pinot也从有效的docid中删除了第四行。&lt;br&gt; &lt;br&gt;本博客的下一部分涵盖了为什么Pinot将有效的Docid标记为无效。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098843，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心”，“哈希”：“ C0576C7C-BD24-4EE0-AAC0-31AAFFCAA6C0”，“ ALT”：“”} class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy lazy” decoding =“ dododing =” async“ async” async“ async” async“ async” async“ async” async“ async” async“ async” async“ async” “ 1024” height =“ 289” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format，format = auto/wp-content/wp-content/uploads /2024/10/figure-7-low-level-code-for-deletedkeysttl-1730349494918158-1024x289.png“ alt =” class =“ wp-image-1098843” .com/cdn-cgi/image/width = 1024，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/fige-7-low level-level-code-code-deletedkeysttl-1730349494918158 。 7-low级 -  code-for-deletedKeysttl-17303494918158.png 300W，https://blog.uber.uber-cdn.com/cdn-cgi/image/image/image/width=768,quality=80，queality=80，yerrtor = recrect = rediart = rediart = rediart = rediart = redirct，gormformat = auto /wp-content/uploads/2024/10/figure-7-low-level-code-for-deletedkeysttl-173034949494918158.png 768w，https://blog.uber.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/width= 1536，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-7-low-low-level-code-code-for-deletedkeysttl-1730349494918158.png 1536W，https：//blog.uber -cdn.com/cdn-cgi/image/width=1730，quality=80，onerrtor=redirect，format = auto/wp-content/uploads/2024/2024/10/figure-7-low-7-low-level-level-level-code-code-for-for-for-delet-deletedkeysttl -17303494918158.png 1730w“ sizes =”（最大宽度：1024px）100VW，1024px，1024px“ referrerpolicy =“ no-referferrer”&gt; &lt;figcaption class =“ wp-element-caption” &lt;em&gt;删除键的伪代码ttl流。&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 8204BEF8-C3C1-49FD-8C10-481E4052EA65”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 5F0CD937-4E99-470D-80AF-80AF-E7DEEC686A33”，“ dropcap”&gt;图8&gt;图8说明了在Uber上启用此功能的删除规模，其删除率每秒约为2,000条消息。指标显示从元数据中删除了多达3亿键每天A-Manager地图，考虑2。&lt;/p&gt;的复制因子&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1098845，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ aLign”：“”中心“，”哈希：“ 179CFEA9-8182-42B3-9537-2DC589891402”，“ alt”：“” class =“ AlignCenter size-large”&gt; &lt;img loading“ “ 1024” height =“ 404” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality = 80，onerror = redirct，format，format，format= auto/wp-content/wp-content/wp-content/uploads /2024/10/figure-8-delet--keys-ttl-impact-17303496032610-1024x404.png“ alt =” class =“ wp-image-1098845” srcset =“ srcset =” /cdn-cgi/image/width=1024，quality=80，onerror=redirect，format = auto/wp-content/uploads/2024/2024/10/figure-8-delet--keys-telet-keys-ttl-impact-17303496032610.png， https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror = redirect，format = auto/wp-content/wp-content/uploads/2024/2024/10/10/figure-8-8-8-8-deleted--deleted--deleted-- Keys-TTL-IMPACT-17303496032610.PNG 300W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=768,quality=80，quality = 80，oonerr = redirtirt = redirct，formect，formect，format = autot = auto/wp-content/wp-content/uploads /2024/10/figure-8-deleted-keys-ttl-impact-17303496032610.png 768W，https：//blog.uber.uber-cdn.com/cdn-cgi/image/image/width=1536,1536,quality=80，oonerror =重定向，格式= auto/wp-content/uploads/2024/10/fige-8-deleted-keys-ttl-impact-17303496032610.png 1536W，https://blog.uber.uber.uber-cdn.com/cdn-com/cdn-cgi/image/image /width = 2048，Quality=80,OnErr = redirect，format = auto/wp-content/uploads/2024/10/figure-8-deleted-keys-ttl-impact-17303496032610.png 2048w“ sizes =”宽度：1024px）100VW，1024px“ reverrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp-element-caption”&gt; &lt;em&gt;图8 &lt;/em&gt;：&lt;em&gt;删除键在生产中删除键TTL特征ttl特征在生产中的影响。&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;。 /em&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 27480f2b-c480-4169-8AAA2-9221C9EB52B2”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 170A8587-A8BC-4BF9-8AB6-8AB6-977DEC3CA062”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}“}”}“}”}“}”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 2596619C-4815-4815-4F28-8923-B98137A7E86B”，“ level”级别“：2} -Block-neading“ ID =” H-UpSert-Compaction“&gt; UpSert Compaction &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 44C5307E-38D8-49CA-A3AC-A3AC-A3AC-AE22532E8C2B”，“ dropcap”，“ dropcap”：false} ，Pinot在再次触发已删除的keys-retention的磁盘上的磁盘上的所有钥匙都持续到内存中。这引起了OOM问题，因为陈旧的钥匙没有从磁盘中删除，并且处于数百万的规模。可以通过逐渐从磁盘上删除陈旧的键来解决这一问题，从而在重新启动期间还重新恢复磁盘空间节省并不将其加载到内存中。/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 493cb873-80ee-4b2a-8cae-8cae-125a5666666f00f”，“ dropcap”，“ dropcap”：我们使用&lt;a href =“ https://github.com/apache/pinot/pull/10463” target =“ _ blank” rel =“ noreferrer noopener”&gt; upsertcompactionTask奴才&lt;/a&gt;或从磁盘中删除行。为此，我们使用有效的位图快照流。在每个细分市场提交周期之后，我们为所有段都拍摄了这些位图，并将它们持续到磁盘上。在每个任务运行期间，我们循环遍历所有这些位图，以找到将提供最大压实效率的段，其中&lt;em&gt; invaliddocs = totaldocs- totaldocs- valivedocs &lt;/em&gt;的最高值。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 5c6ada86-b1b9-4d03-4d03-9d80-467cb9245304”，“ dropcap”，“ dropcap”：false}示例，在该细分市场上运行UPSERT compaction任务后，磁盘上的片段将如图9所示更新。我们看到与&lt;em&gt; primary key = 3 &lt;/em&gt;相关的记录也从磁盘中删除。&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; /p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1098847，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ 3389947A-B60A-4997-9865-88A2216FE707”，“ alt”：“&#39;}” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy lazy lazy” dododing =“ “ 1024” height =“ 288” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality = 80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/10/figure-9-low-level-arvel-architecture of-upSert-compaction-17303496455383-1024x288.png“ alt =” class =“ wp-image-1098847” srcset =“ srcset =” -cdn.com/cdn-cgi/image/width=1024，quality=80，onErr = redirect，format = auto/wp-content/uploads/2024/2024/10/figure-9-low-low-level-level-level-level-ArchiteTEN- -compaction-17303496455383.png 1024W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=300,quality = 80，onerror = redirt = redirct，format = reforect，format = autot = auto/wp-content/wp-content/wp-content/uploads/2024/2024/2024/2024/2024/ 10/figure-9-low-level-architecture of-upSert-compaction-17303496455383.png 300W，https：//blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 768，quality = 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/fige-9-low-level-level-aRchitecter-upSert-compaction-17303496455383.png 768W，https://blog.uber-cdn.com/ https://blog.uber-cdn.com/ CDN-CGI/IMAGE/WIDTH = 1536，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-9-low-low-lovel-aRchitecture of-compaction-compaction-compaction-173034966455383。 PNG 1536W，https://blog.uber-cdn.com/cdn-cgi/image/width=1878,quality=80，onerror = redirect，format，format = auto/wp-content/wp-content/uploads/2024/10/10/figure-9 -low-level-Architeconter-upSert-Compaction-17303496455383.png 1878W“ sizes =”（Max-Width：1024px）100VW，1024px，1024px“ referrerpolicy =” no-referrer =“ no-referrer”&gt; “&gt; &lt;em&gt;图9：UPSERT压实的低级体系结构。 &lt;/em&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 60b5ffc6-e7f6-492a-9139-9139-255e21f10e5e”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ aa036b3a-d22b-413e-b23c-74a3694839333”，“ dropcap”&gt;，如前所述，如前所述，在删除键的元数据保留工作流程中，Pinot将有效的Docid标记为已删除的主键无效。这使它们可以在下一个周期中被刺穿，从而通过UPSERT压实从磁盘上删除已删除的记录条目。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 3297BBF8-670F-42DB-A170-06FCA407DD6F”，“ dropcap”&gt;图10显示在我们的1个生产表中启用UPSERT压实的影响。该表的大小增加到大约8个TIB，但是在启用压实后，尺寸降低到850 GIB左右，从而节省了约90％的空间。另外，数据增长率从大约85 GIB/天显着降低到大约3 GIB/天。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1098849，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ aLign”：“”中心“，”哈希：“ 03B08F5A-2743-4EFF-8C2A-888888888B3E21097F”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” “ 1024” height =“ 309” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality = 80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/10/figure-10-impact-upsert-compaction-task-at-at-production-cale.17303498706695-1024x309.png“ alt =” alt =“ class =” wp-image-1098849 //blog.uber-cdn.com/cdn-cgi/image/width=1024，quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/10/figure-10/figure-10-impact-ompact-om UPSERT-COMPACTION-TASK-AT-AT生产 -  17303498706695.png 1024W，https://blog.uber.uber-cdn.com/cdn-cgi/image/image/image/width = 300,quality=80,80,80, ererror = rediect，formemtaT = auto/wp-content/uploads/2024/10/figure-10-impact-of-upsert-compaction-task-at-production-scale.-17303498706695.png 300w, https://blog.uber-cdn.com/ cdn-cgi/image/width = 768，质量= 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/fige-10/fige-10/fige-10-impact-of-of-of-upsert-compactaction-at-at as at-at-at production- scale.-17303498706695.png 768w，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1536,quality = 80，onerror = redrect = yredirt = yredirct，format = autot = auto/wp-content/wp-content/wp-content/2024/2024/2024/2024/2024/2024/ 10/figie-10-Impact-of-of-of-compaction-task-at-at-at-at-aT-aT-aT-aT-aT-accale-17303498706695.png 1536W，https：//blog.uber.uber.uber-cdn.com/cdn-cgi/image/image/image/width = 2048，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-10/fige-10-Impact-of-of-compaction-compaction-compaction-task-at-at-at-at-at-at-aT-aT-aT-aT-aT-aT-aT-aT-aT-aT-aT-aT-aT-aT-aT-aT-ag at production-cale.17303498706695.png 2048w“ simess = “（最大宽度：1024px）100VW，1024px” reverrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt; &lt;em&gt;图10：UPSERT压实任务在生产规模上的影响。/em&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ C2A7FE2A-7670-4AB9-A36F-52D42424B2C6E6”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ 5C015E29-A878-4ACC-4ACC-8FAB-9DF3126A323230”} -Block-neading“ ID =” H-启用data-consistency-deletion and compaction&gt; &lt;br&gt;确保数据一致性与删除和压实&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2fb6d20d-9b999999999999b62-1484a31602c6”，“ dropcap”&gt;一个挑战启用压实与删除一起，我们可能最终会在某个特定键的较旧的未删除记录中，但已删除的记录是。在服务器重新启动期间，当加载所有片段时，Pinot将错误地将记录标记为未删除的记录，并开始将其作为有效的主键返回，从而导致表中的状态不一致。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 8B68305F-2087-43AE-982E-982E-F48F48F19271E92”，“ dropcap”，“ dropcap”：false}考虑一个主要的键PK1，其中具有段S0和S1中的记录。在S1中，记录被标记为已删除。如果S1被压实，但是S0并不是由于UPSERT压实流中的阈值原因，在服务器重新启动期间，UpSert-Metadata-Manager映射将错误地将PK1点为pk1至S0，即使应将其视为最终用户的删除。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 86BB47BA-8878-4574-4574-800C-0C7222AD7FC09”，“ dropcap”，“ dropcap”：dropcap“：false}情况，我们提出了a &lt;a href =“ https://github.com/apache/pinot/pull/13347” target =“ _ blank” rel =“ noreferrer noopener”&gt;在pinot中设计以维持主键的状态→ - 段计数&lt;/a&gt;。这意味着跟踪给定主键存在记录的段数。如果计数为&lt;= 1，则Pinot将允许在记录中删除元数据，然后将有效的二子标记为无效。 Pinot现在可以紧凑已删除的记录，以确保删除其他段中的所有其他记录。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 238B50A4-0C7E-4FAA-4FAA-A6B9B9-4AD3A501A455”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}“}”}“}”}“}”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/heading” data-wp-block =“ {“ hash”：“ 1284D8A3-F06D-4FA8-826C-28EE9992219E1”，“ level”：2} -Block-heading“ id =” uber &lt;/h2&gt;的用例&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 78F3EACB-6ACB-409B-409B-91A4-20763D84C171”，“ dropcap”，“ dropcap”：false} ，我们已经在超过20个表上启用了UPSERT表上的无限保留，所有表的总钥匙总数每天约为60亿键（无复制），删除率约为6亿键。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 57086E777777777777777777-4503-9445-2979304F5655”，“ dropcap”，“ dropcap”：false} UPSERT表将受益于Uber的以下长期用例，以及更多类型：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ 166919b3-4707-4aef-aef-a4a9-842d37ad58a7”，“ ordered”：fordeed&#39;：fords&#39;：false，“值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;跟踪业务范围的Uber ‌使用组织活动多年，并且有关员工数量，付款实体的定期更新等等&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;遵循Uber代金券的使用情况，这些情况在这些情况下活跃了多年，并且会收到有关代金券兑换计数的更新，代金券到期。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; Cadence Workflow Analytics，因为每个工作流可以运行数小时，几个月或几年，并且启用了删除工作流程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ E8EDB46E-3FD1-4226-A538-6141BFD46BE2”，“ opacity”，“ optical class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ 4C862E22-F807-4C74-8F15-83E0112383A1“，”级-block-heading“ id =” H-Next-steps-nbsp“&gt;下一步&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 235f61-db25-4acf-acf-acf-ac58-6c258-6c25fc91e4e0”，“ dropcap”，“ dropcap”：false}随着时间的流逝，有许多小细分市场的创建。这可能会导致服务器重新启动期间更长的加载时间和更高的查询延迟，因为在查询执行过程中需要通过相同数量的线程处理更多的段。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 0ae209AF-BD6E-40B5-8188-D7FC56B8F86D”，“ dropcap”，“ dropcap”，“ dropcap”：false}是为了启用多个细分市场的UPSERT压实，将它们合并以创建更大的细分市场，控制整个细分市场计数随时间的增长。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ ffb7cee3-09ce-43e4-835b-be30f8bfc94a”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}“}”}“}”}“}”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：1，”哈希：“ 88951A08-8E0A-4188-4188-BC28-D55268B08A69”} -Block-neading“ ID =“ H-Conconclusion”&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 5144436BC-0EF2-4CD2-4CD1-907D-E8239168F7B3”，“ dropcap”&gt; falscap“：false}”&gt;Apache Pinot中的这一强大功能满足了Uber及其他许多Pinot用户的至关重要需求，从而为UpSert桌子提供了更高的保留，并直接在Pinot中支持删除。这可以在Uber上解锁用于Pinot UpSerts的许多新用例，并使Pinot的功能更接近行级数据库。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 4FFF3AAD-3E6D-44EC-934E-934E-01AA3D7CA10D”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}“}”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ E4C7C315-71FB-491B-BBE4-1C6AD36BB3E1”，“ LEVEL”：2} class =“ WP -block-neading“ ID =” H-AckNowledgments”&gt;确认&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ DB131410-81A0-4B9F-B365-CD7D432D6FC8”，“ dropcap”，“ dropcap”：false} Apache Pinot &lt;sup&gt;™&lt;/sup&gt;社区成员积极贡献并审查了在Pinot中启用此功能所需的众多更改。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 132C57FC-915D-4F35-AD45-AD45-844BBB47AD56C”，“ dropcap”，“ dropcap”：false}设计点删除的Navina Ramesh，设计UpSert压实的Robert Zych和Yupeng Fu用于制作原始Upsert设计文档。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 744F7ACB-2945-49F9-A5C4-6777304116510” ：false}“ class =” hap small-font-size&gt; apache pinot &lt;sup&gt;™，&lt;/sup&gt; pinot，apache，apache feather徽标和apache paint Project logo是Apache Software Foundation的注册商标。 Apache软件基金会的认可并不暗示这些标记的使用。 =“ _ blank” rel =“ noreferrer nooopener”&gt; infinite Wine &lt;/a&gt;” &lt;a href =“ https://www.flickr.com/photos/photos/47105685@n00/ nooopener“&gt; adam brill &lt;/a&gt;在&lt;a href =”下许可在https://creativecommons.org/licenses/by-nc-sa/2.0/“ target =” target =“ _ blank” rel =“ noreferrer noopener”&gt; cc by by -NC-SA 2.0 &lt;/a&gt;。没有修改。&lt;/p&gt;</description>
      <pubDate>Thu, 31 Oct 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【The Accounter: Scaling Operational Throughput on Uber’s Stateful Platform】Accounter：在Uber的状态平台上扩展操作吞吐量</title>
      <link>https://www.uber.com/blog/the-accounter/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;5d505d4c-32fc-41ff-afce-776cbebc303c&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;18a13a8e-26ba-4783-b225-7a6549308072&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In a &lt;a href=&#34;https://www.uber.com/en-DK/blog/odin-stateful-platform/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;previous post&lt;/a&gt;, we introduced Uber’s stateful platform, Odin. We discussed how the platform’s scale and the growing need for fleet-wide operations required better coordination among its many remediation loops. Multiple conflicting operations could compromise storage clusters without centralized coordination, leading to availability or durability issues. As shown in Figure 1, when uncoordinated remediation loops operate a quorum-based storage cluster, it causes problems. This post explores how we overcame this problem and scaled Odin’s throughput by introducing global coordination of all operations.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;4342cea2-fc72-47de-9749-7319ca399cee&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdaIUkYf9iJQIdmP5crzAtKJTaRz5LAR_5O_-XKdzeajomTuvyukefXs5KWFvePaao91eUzkebkaCDIbq1PSmCFGtiV57ybtWfs-f544fcir-75M6byjHMW5NbLku9pEknPmuPTKtlxDn1Em0-g8Q2Z4You?key=b-AdKuusNx_dhDAHvkwz_g&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Example of conflicting operations resulting in cluster availability loss.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3f8302bd-08de-4e17-9918-e0bf5d0bf41b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;a href=&#34;https://lucid.app/lucidchart/be5aad2b-cb17-4ece-a07b-2d1d3d9603b1/edit?page=0&amp;amp;v=232&amp;amp;s=465&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6d90e788-6294-434d-85e0-ceb36505cf9c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Operations on Odin are implemented using Cadence workflows. When an actor, whether human or automated, wants to operate one of the managed storage clusters, it does so through workflows. A workflow consists of actions, like changes to the system state, and waiting periods, like waiting for system converges, that collectively orchestrate transitioning the system from one state to another. Workflow executions can range from seconds, such as upgrading container images, to hours, like migrating workloads between hosts (Uber’s fleet uses locally attached disks). We’ll refer to these workflows as operations from this point forward.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;279aaa4c-a3e8-453d-aa5a-ff54261e5430&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We needed a mechanism to gate the initiation of new operations or, to put it another way, answer the question:&lt;em&gt; Given the current circumstances, is it safe to proceed with this operation on this cluster?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7c64aa80-fe8e-4de8-a4e3-5d6c9be7b3a4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our design requirements were as follows:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;52b602ab-3bde-46cb-a0a6-6956c515d54a&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Independent remediation loops&lt;/strong&gt;: These loops should remain unaware of each other. This is crucial for scaling the development of high-level functionality. In other words, remediation loops shouldn’t hard-code rules for determining when it’s safe to perform operations on ‌clusters.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Technology-specific policies&lt;/strong&gt;: Odin manages all stateful technologies at Uber, and each technology has unique safety tolerances for cluster operations. So, different technologies may require different policies.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Platform-wide limits&lt;/strong&gt;: The system should support enforcing global limits across all technologies/operations on the platform.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4cc2a929-4d98-48c1-ab5f-ccc3dddca544&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The solution we chose is a global software component called The Accounter, which provides operation coordination as-a-service. Its name reflects its core purpose: to serve as a central registry that tracks all ongoing operations, to understand the relationship between operations, and to act as a gatekeeper for initiating new operations. A good mental model is to think of The Accounter as an advanced disruption budget or a fuzzy semaphore.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;56bb2492-fe44-4855-aad8-d123e8ad7416&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When an operation is initiated, permission to operate on the target storage cluster must first be requested from The Accounter, a process we call taking a claim. The claim covers the entire operation, which might involve multiple changes to the system state.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;652ecab4-2d56-4292-8860-82fb24cd0759&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Accounter uses a technology-specific policy to determine whether a claim can be granted. The policy takes two inputs: cluster health, a collection of the current health state stored in &lt;a href=&#34;https://www.uber.com/en-DK/blog/grail/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Grail&lt;/a&gt;, and the currently ongoing operations, which are tracked and stored in etcd&lt;sup&gt;®&lt;/sup&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3e7bf56e-5d58-4e58-993f-cdb20923166b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;58e0af82-e829-40b3-bcab-680a9345050e&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-cluster-health&#34;&gt;Cluster Health&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;beb49c97-9d38-40d3-8537-f027c56a0d73&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfe6nv0NFbBiHe3fLUyfVxDlx0aMIs0VsodtTGOa5ULHXvlNDWniFa7J9q7ZlCcbhVZ6FTWYoIIAFfo2WVYyHzGYuVg6Gkhhd_VpWBhdeYTzlSH6OhHYkmnamHgNo9K5sk5ZMnoTrJzXtmocONLFdK5VvH6?key=b-AdKuusNx_dhDAHvkwz_g&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Overview of the cluster health collection on Odin.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;72ea256b-f8af-4151-8ef3-a0da00ef9b47&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;a href=&#34;https://lucid.app/lucidchart/43371f6c-1761-42e9-ba36-50e6a081cea9/edit?page=0&amp;amp;v=536&amp;amp;s=672&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1e553712-51cb-4082-b972-d73d09584791&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A storage cluster on Odin consists of one or more workloads, like a Raft, Apache Cassandra&lt;sup&gt;®&lt;/sup&gt;, or similar database cluster node. Each workload is a collection of containers: a worker container, a primary database container, and potentially several sidecar containers. The worker is responsible for managing the host-level life cycle of the database and sidecar containers. It monitors the workload’s status continuously and communicates with the control plane. The most recent workload state is stored in Grail.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;040cc737-c482-436f-81fb-760c6f1e5e03&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When determining cluster health, several other health signals must be considered beyond what can be observed within individual workloads. For example, does the cluster have under-replicated data? Is the cluster experiencing stress from excessive data shuffling or an increased client load? Storage teams typically manage/collect cluster-level health information like this, and Odin provides ways to ingest the cluster status into Grail.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1c6f4371-d466-4586-8992-9220aa431873&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A technology’s tolerance for unhealthy workloads varies significantly depending on the specific technology, and this is captured in ‌technology-specific health policies—more on this later.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9e05f7a8-03ee-4a90-a2fc-85809279660d&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9591126e-be90-474b-a839-2b5602d8ba3e&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-ongoing-operations-nbsp&#34;&gt;Ongoing Operations&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cd08ec06-1439-475c-92c1-0c4aa6cc3704&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The system models ongoing operations using two key concepts: &lt;em&gt;operations&lt;/em&gt; and &lt;em&gt;groups&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;aa68ba88-99ac-4b51-a0e2-2e74ae167c03&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Each operation is represented by an operation object, which contains critical details such as the targeted storage workload, the type of operation (like drain or downtime), and its potential disruption to the storage cluster. Every operation is associated with one or more groups.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;81200b77-d173-4320-a11f-d6ad2631aa6f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A group tracks the number of operations linked to it and stores additional metadata beyond the operations count. For example, it records the most recently started and completed operations. This data allows for enforcing time-based rate limits on the operations permitted within each group.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a9c2cad5-c5b0-48a9-a792-714520f6693c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Although there are many groups, they can be broadly categorized into two types: platform-wide groups (for example, failure domains like regions, zones, and racks) and technology-specific groups (for example, individual storage clusters and workloads). A global group tracks all ongoing operations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;edb4505f-8a6e-4b62-8f10-99f0adee1f97&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Platform-wide groups enforce global concurrency limits, helping to prevent overloading Odin and the underlying infrastructure. At the same time, technology-specific policies leverage cluster and workload groups to protect cluster availability and durability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7fc72d01-2afd-46ee-9dd5-a5d6f3993d5c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The number of operations permitted on a cluster varies depending on the technology. Some technologies restrict operations to a single workload at a time, while others allow a percentage of the cluster to be operated on concurrently. More specialized groups can be created dynamically to track operations on specific subsets of workloads within a cluster, such as roles. This flexibility enables more nuanced safety policies tailored to different storage technologies’ requirements.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f1ddc4f1-d0e5-496b-847a-4679aa648bef&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The figure below illustrates how an operation is modeled, with the operation object linked to several group objects. These explicit associations facilitate the cleanup process when an operation completes or fails.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f024bc6a-8095-4654-8e69-a281e55fbe9e&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdUxx49TQHC2EwXgir_x7cX3CehhM61yc5TGL0BZ2aXsRkS8_7Odr-G_60BWCjIuRYbkEtZfYogfVhC0aEwNhYJY3elWUGb6oQ7yNBwB4K9bUJIKmRlCjk_s8C9UakIUClZvse1HXWGUawkeD6g5d0w5byj?key=b-AdKuusNx_dhDAHvkwz_g&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Overview of the data model used to represent the relationship between operations and groups.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f162871a-8d83-440f-8098-027ea3605100&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;a href=&#34;https://lucid.app/lucidchart/4e05a85c-d7f0-4a2b-8ca1-c0685f1aef83/edit?page=0&amp;amp;v=1611&amp;amp;s=612&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0bea51db-6a1e-40c5-b7e7-ece8863e57e5&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;da147268-514b-4568-bca0-cd3819ad8742&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-safety-policies&#34;&gt;Safety Policies&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ea7b7ea1-8485-4862-8c7f-07e1e4eaca19&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Now that we can efficiently gauge cluster health and get an overview of all ongoing operations, we can introduce safety policies. A safety policy is a codified disruption budget that allows the expression of technology-specific policies for how operations can be overlapped within the storage clusters.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;adc5367e-1a21-4321-8c5b-1b4de1a3b153&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Safety policies comprise two parts: the &lt;em&gt;health policy&lt;/em&gt; and the &lt;em&gt;limit policy&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a25a8360-5e66-4230-9aa0-8c3999b761a6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The health policy uses the latest collected cluster health information to determine whether the requested operation can be performed. For example, the technology team might want to prevent operations from being started on a cluster that’s seeing an increase in client load or has unhealthy workloads.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b9ca44e9-c9fc-487a-9ee7-3ad07a62473a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Limit policies, on the other hand, can limit the number of concurrent operations affecting a group, implement grace periods between sequential operations, or provide operations exclusivity so that if one group is being operated, other groups will reject all claims. This is particularly useful when you want to operate a single rack at a time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dde3d889-02e1-4c97-b8db-7b8c779f626c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Accounter provides a collection of functionalities for policy implementers, such as:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;82c24b34-5d62-4e09-8ed5-d598a9fc928e&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Methods for gauging workload and cluster health&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;em&gt;CheckMaxOperations(group, max):&lt;/em&gt; Check that the specified group has at most max operations&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;em&gt;CheckElapsedFromLastClaim(group, duration):&lt;/em&gt; Check that the given time has elapsed since the last claim associated an operation with the specified group&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;em&gt;CheckElapsedFromLastUnclaim(group, duration):&lt;/em&gt; Check that the given time has elapsed since a claim associated with an operation was last released from the specified group&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ab5a85e9-7962-47e3-bf9e-558454d9b7c5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Health evaluations are a point-in-time check and can’t provide hard guarantees about the safety of operations. Health data collection inherently involves latency in a distributed system, meaning two simultaneous requests for disruptive operations might be approved based on an outdated view of cluster health. The checks performed by limit policies do provide hard guarantees as they are conditionally committed through an etcd transaction. Let’s explore how that works.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cf11f91a-6480-44bf-97ae-aa661a8f523e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;80101e32-fc99-4e92-b8ed-6c1d214c29b9&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture&#34;&gt;Architecture&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1100184,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;77539bbf-037e-4050-9f24-c6c0dca5ee59&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;676&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/blogfigure4-17321696658887-1024x676.png&#34; alt=&#34;&#34; class=&#34;wp-image-1100184&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/blogfigure4-17321696658887.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/blogfigure4-17321696658887.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/blogfigure4-17321696658887.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/blogfigure4-17321696658887.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/blogfigure4-17321696658887.png 2048w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: The Accounter architecture and claim granting process.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;12513284-7271-401c-980b-42f55c5ce634&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;da75e2ea-9113-409b-8176-250a4eec58ea&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To persist operations and groups, we use etcd as a key-value store. When a workflow wants to make a change to one of the storage clusters, it goes through the following process:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c9492c1e-9928-4200-9d4b-5c8f12747215&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The workflow that wants to take a claim calls The Accounter, with information about the target storage workload and the purpose of the operation (1).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The Accounter retrieves the current cluster health state from Grail (2) and the current operations state from etcd (3).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The Accounter evaluates platform-wide concurrency and rate limits before evaluating the target workload (4).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Next, ‌ technology-specific health and limit policies are evaluated against the state from etcd&amp;nbsp; (5). If either policy fails, the claim is rejected immediately without resulting in a transaction.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Otherwise, if all the criteria are met, a single transaction for the required changes is built and committed to etcd (6).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The claim is accepted or rejected depending on the success of the etcd transaction (7).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The operation can now proceed (8).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;After the operation, the workflow is responsible for releasing the claim through The Accounter.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2d205b96-135b-4430-8450-d86cd6c614a9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Changes in etcd are executed transactionally, ensuring a consistent view of ongoing operations. Specifically, we use optimistic locking to verify assumptions about the number of operations within groups before committing changes.&amp;nbsp; A transaction builder library abstracts this complexity for safety policy developers, giving them the impression of working directly in memory. This approach is similar to &lt;a href=&#34;https://github.com/etcd-io/etcd/blob/main/client/v3/concurrency/stm.go&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;etcd’s STM&lt;/a&gt; (Software Transactional Memory) library but with optimizations tailored to improve throughput.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4b15994d-02e0-44b4-a3e8-83a3a63f4215&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;If the transaction is rejected due to optimistic concurrency conflicts, it’s retried internally a few times. If the claim is rejected, we rely on the operation to retry as long as the operation remains relevant. If the rejection is due to a violation of the rate limit on a group, the Accounter provides a meaningful backoff time that the operation can use to decide how to proceed.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2e65edf2-8787-47d5-a453-0783b0b5ccfa&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To avoid all claims having to fetch state from etcd directly (3), all claims are first evaluated against a continuously updated in-memory snapshot of the data. If the claim violates either of the policies using the cached state, it’s immediately rejected without attempting to commit the transaction to etcd. This is essential as the system has to scale to 3,000-4,000 claim attempts per second. Most of this traffic comes from the platform auditing workloads’ ability to move through dry-run claim attempts.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7f555a1a-bccf-4a97-bd78-e09779105318&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The etcd transaction finalizes taking the claim and checks for operational limits transactionally, granting the claim when the transaction is committed.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0e6b08f4-e6c0-44fa-96d8-38173a802ccf&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5dfe78d2-ae09-4da5-8f72-a0db28154ee8&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-claim-life-cycle&#34;&gt;Claim Life Cycle&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;96d661d8-8126-41a9-9d44-13a5b548817c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our operations are often hierarchical, so we designed The Accounter to support the passing of claims from parent to child operation. These passed-down claims are reentrant, meaning that when a child operation attempts to claim, it becomes a no-op. This design allows for more complex operations while keeping the operation logic straightforward. Programmers don’t need to understand the entire operation structure to determine whether a claim has already been taken—they simply take the claim as needed, knowing the system will handle it correctly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;aa4aa757-d051-4607-a05b-eb2845346a3d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Operations are responsible for releasing claims once their operations are completed. However, there are cases where an operation may be terminated, fail unexpectedly, or contain bugs. While these instances are rare, they do occur at our scale. The system must ensure that claims are eventually released, as stale claims can block operational throughput. The Accounter can always trace back to the operation since operations are linked to their claims in the data model. This is used to identify inactive operations and safely release stale claims.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a0f55035-1a46-48b0-a950-f6ae2e88711e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d2b8cd75-c991-4fcd-8945-512799392927&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-auditing&#34;&gt;Auditing&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8a62f129-bd41-4475-a536-ba30040361aa&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With great power comes great responsibility. Delegating policy development to technology teams carries the risk that overly conservative policies could hinder the platform’s ability to perform fleet-wide operations. Uber colocates workloads of different technologies on the same hosts, resulting in hundreds of workloads on the same hosts. When the platform has to drain a host, all workloads must first be drained (that is, moved to other hosts). Restrictive safety policies increase the risk of only being able to drain the host partially.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;065d0b30-bc9e-4635-b11e-74290cf41f53&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To address this issue, we’ve implemented an extensive auditing system. This system continuously evaluates the &lt;em&gt;claimability&lt;/em&gt; of workloads, providing an accurate snapshot of which operations are possible across the platform. This information is published to Grail and used by remediation loops as a pre-filter to identify feasible operations.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cd52e911-bb11-4bd8-9b5c-0ede76028f78&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Additionally, the Odin team leverages this data to gain insights into workloads whose operations have been blocked for extended periods, allowing the Odin team to alert the team responsible for the affected storage technology.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0f753d1e-2356-401c-a2c5-a0779e4fd4ba&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5a19b9d5-34b6-48db-bf17-8c1081a1ea54&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-alternative-approaches&#34;&gt;Alternative Approaches&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0b79e0b1-f348-4c7e-b1fe-94e4fecfcac0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We’ve encountered at least two other common approaches for coordinating operations: distributed lock managers and Kubernetes&lt;sup&gt;®&lt;/sup&gt; &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/disruptions/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;disruption budgets&lt;/a&gt;. Here, we explain how they differ from The Accounter’s approach.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;90ac573c-b34b-48de-b790-15634226352c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Distributed lock managers typically involve acquiring a lock on a cluster, ensuring that only one operation can be performed at a time. However, given the lengthy time required to operate on a single workload in Odin—primarily due to locally attached disks—locking an entire cluster for a single workload operation would be inefficient and impractical.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d38b4f0f-ad43-4a79-ac92-455fa20e23aa&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A more flexible alternative to locks could be to extend the lock to a semaphore, allowing a predefined number of tokens to be granted simultaneously. This is similar to the approach taken by Kubernetes, where the disruption budget sets a fixed number of operations upfront. The Accounter, however, diverges from these approaches by focusing solely on counting operations, leaving the responsibility of enforcing limits to a separate policy. This method offers much greater flexibility in policy design. For example, it allows for specifying that only a certain number of optimization moves are permitted. Still, if a host fails and a request is made for an emergency move, that’s always granted. Keeping these emergency cases represented in the model is an advantage because the policy could then state that no efficiency moves are granted from that time on until the host failure is fully remediated. This flexibility is crucial in maintaining operational efficiency while adapting to real-time conditions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cc797c74-5c1f-4b7b-b4ab-4f1ce27e4c72&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c8458d63-f070-413a-b601-07fa8feb090d&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-scale&#34;&gt;Scale&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;63355cfa-615a-47d7-b76c-8f6490d9d68d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Accounter has now been fully integrated into all operations, and the number of operations done by the platform translates to a lot of traffic. Let’s take a look at the current numbers:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;346d0f16-c987-4634-aebb-1b520d4906d3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Traffic&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1ceef2db-4db7-4166-95d9-476676e9332e&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&amp;gt;300,000 claim evaluations per hour&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&amp;gt;7 million dry-run claim evaluations per hour&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e6313ebc-797e-4373-bf0f-b07a618cff7c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Active Operations and Groups&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c7913b1e-26c5-4bd8-9943-a930634b3805&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&amp;gt;2,000 active operations&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&amp;gt;700,000 distinct groups&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;061733d3-4c18-4ecb-893d-487ee40db6e3&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7a7b116b-7d6b-4eac-a84c-d17562b9a593&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-results&#34;&gt;Results&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;980045ba-187b-49f0-8339-6486eb00855e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Over the years, The Accounter has significantly improved Odin’s operational efficiency, enabling small teams to manage thousands of clusters safely. It’s facilitated centralized efficiency programs and empowered leadership to treat Uber’s physical infrastructure as flexible and impermanent. Moreover, The Accounter has preserved the independence of teams through a clear separation of concerns: remediation loop owners focus solely on determining which operations are necessary without needing to worry about safety considerations.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c91f0eab-494b-4ef9-91e5-f679cff07372&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One noteworthy example was our effort to adopt encryption-at-rest. A process that we’ve been able to drive fully centralized. All we had to do was ask our automation to move workloads to hosts with encryption-at-rest, and The Accounter ensured that it happened safely. This process involved migrating 2.1 million vCores and 1.6EiB locally attached disks. In the past, operations like this would have required extensive planning/execution, involving all the technology stakeholders and costing years of engineering time. &lt;strong&gt;Now, they are a no-op.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;0c8631c0-0b86-4321-b0fa-1124614856b3&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf9ke1obdn_A5SCJO98Si-zmTAX7ehygvUwbOzbfFXMFSMIJcZno4qaiijgDH9Us9XbOZJNs-E60pB-t3wcMlaDtauVTMI_p_R1hJ0lwusZZHi2I7kJgHNUsKaeTNYUU5N4L0F_D0QRS8lR96qh91NXJbY?key=b-AdKuusNx_dhDAHvkwz_g&#34; alt=&#34;&#34; title=&#34;Chart&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Timeline of Uber’s transition to encryption-at-rest.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;880c1309-40c3-4e9f-8186-d4fe9768a736&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;add83f5b-3776-4924-8cd6-be8e819efc74&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8be63190-b606-494f-b957-c335dccda674&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-future-work&#34;&gt;Future Work&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ac04a251-021d-4809-8a98-dba96ab2e81b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Accounter paradigm is actively evolving, and we’re working to address some of its current limitations. One significant area for improvement is support for prioritizing operations. Currently, operations rely on continuous polling to obtain a claim, which generates unnecessary traffic and doesn’t allow for the prioritization of different operation types. This becomes particularly problematic when lower-priority efficiency optimizations block high-priority, human-initiated operations. Another area of interest is the ability to define circuit breakers directly within The Accounter. Currently, each loop in Odin implements this functionality to protect against misbehavior caused by bugs. We aim to offer this as a built-in feature of The Accounter, streamlining the process and enhancing overall system resilience.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;65c6ae57-0747-4f76-bc1c-1bb6dfb7906a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;59c7f492-08c9-4664-b14e-f3bba5735c8d&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-summary&#34;&gt;Summary&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ea9c0508-fbdb-4a7e-b7a8-59c59ffbeaba&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In this post, we introduced The Accounter, a global coordination system designed to improve the throughput and safety of operations on Uber’s stateful platform, Odin. Providing operation coordination as-a-service, The Accounter allows for the efficient execution of large-scale operations while maintaining cluster safety and avoiding conflicting actions. It tracks ongoing operations, enforces technology-specific policies, and ensures that new operations are only initiated when safe. The Accounter has significantly enhanced Uber’s operational efficiency, allowing small teams to manage thousands of clusters safely and drive centralized programs like encryption-at-rest migrations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;239b805b-3c25-4020-916e-cc0597347e03&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Kubernetes&lt;sup&gt;®&lt;/sup&gt;, etcd&lt;sup&gt;®&lt;/sup&gt;, and its logo are registered trademarks of The Linux Foundation&lt;sup&gt;®&lt;/sup&gt; in the United States and other countries. No endorsement by The Linux Foundation is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;5269e747-7779-465f-b5de-78e1363ba453&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Apache Cassandra&lt;sup&gt;®&lt;/sup&gt; are registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. The use of these marks does not imply endorsement by the Apache Software Foundation.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;94534b87-4345-401b-8341-9409e5e40ab6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;The cover photo was generated using OpenAI’s ChatGPT Enterprise and edited using Pixlr.&lt;/em&gt;&lt;/p&gt;】&lt;h1 data-data-wp-block-name =“ core/heading” data-wp-block =“ {”级别“：1，” hash&#39;：“ 5DD505D4C-32FC-41FF-41FF-41FF-AFCE-776CBEBC303C”} -block-neading“ id =” H-Instruction“&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 18a13a8e-26ba-4783-b225-7a6549308072”，“ dropcap”，“ dropcap”：false} a href =“ https://www.uber.com/en-dk/blog/odin-stateful-platform/” target =“ _ blank” rel =“ noreferrer noopener”&gt;上一篇文章&lt;/a&gt;，我们介绍平台，奥丁。我们讨论了该平台的规模和对范围内部运营的日益增长的需求，需要在其许多补救循环中更好地协调。多次冲突的操作可能会损害存储群集而无需集中协调，从而导致可用性或耐用性问题。如图1所示，当不协调的补救回路运行基于法定的存储群集时，会导致问题。这篇文章探讨了我们如何克服这个问题，并通过引入所有操作的全球协调来缩放奥丁的吞吐量。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 4342cea2-fc72-47de-9749-9749-7319ca39999999999cee”，“ alt alt” ：“”“}” class =“ aligncenter”&gt; &lt;img decoding =“ async” src =“ https://lh7-rh7-googleusercentent.com/docsz/ad_4nxdaiukyf9ijqidmp5crzjtarz5crarz5crar_5o_5o_5o_5o_-xkkyjomtaukeweukeefeue BKACDIBQ1PSMCFGTIV57YBTWFS-F544FCIR-75M6BYJHMW5NBLKU9PEKNPMUPTKTLXDN1EM0-G8Q2Z4YOU？ “ alt =”“ referrerpolicy =“ no-the-referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图1：相互冲突的操作示例，导致群集可用性损失。&lt;/figcaption&gt; &lt;/fig&gt; &lt;/fig&gt; &lt;/div&gt;&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 3F8302BD-08DE-4E17-9918-E0BF5D0BF41B”，“ dropcap” =“ https://lucid.app/lucidchart/be5aad2b-cb17-4ece-a07b-2d1d3d9603b1/edit?page=0&amp;v=232&amp;s=465”&gt; &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6D90E788-6294-434D-85E0-CEB36505CF9C”，“ dropcap”：dropcap“：false}”&gt;使用节奏工作流实施。当演员（无论是人类还是自动化）想要操作一个托管存储簇之一时，它会通过工作流程进行。工作流程包括动作，例如更改系统状态，等待时间（例如等待系统收敛）共同协调从一个状态到另一个状态的过渡。工作流执行的范围从秒数（例如升级容器映像）到数小时，例如主机之间的工作负载（Uber的车队使用本地连接的磁盘）。我们将这些工作流程称为从这一点开始的操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 279aaaa4c-a3e8-453d-aa5a-ff54261e5430”，“ dropcap”：false}一种机制来启动新操作，或者，以换句话说，回答以下问题：&lt;em&gt;在当前情况下，可以安全地在此集群上进行此操作？&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 7C64AAA80-FE8E-4DE-4DE8-A4E3-5D6C9BE7B3A4”，“ dropcap”&gt;我们的设计要求如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ 52B602AB-3BDE-46CB-A0A6-6956C51515D54A”，“订购”，“ “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;独立的补救回路&lt;/strong&gt;：这些循环应保持不知道。这对于扩展高级功能的发展至关重要。换句话说，补救循环不应硬编码规则来确定何时安全地执行‌clusters的操作。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;技术特定的策略&lt;/strong&gt;：奥丁管理Uber的所有状态技术，每种技术技术具有独特的安全性公差用于集群操作。因此，不同的技术可能需要不同的政策。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;平台范围范围&lt;/strong&gt;：该系统应支持在所有技术上执行全局限制/平台上的操作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 4cc2a929-4d98-48c1-ab5f-ccccccccc3dddca544”，“ dropcap”，“ dropcap”：false}选择是一个名为“ Accounter”的全球软件组件，该组件提供操作协调为服务。它的名称反映了其核心目的：作为跟踪所有正在进行的操作，了解操作之间关系的中央注册表，并充当启动新操作的守门人。一个良好的心理模型是将辅助视为高级破坏预算或模糊信号。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 56BB2492-FE444444444444444444444444444444444444444-AAD8-D123E8AD7416”，“ dropcap”，“ dropcap”：false}启动，必须​​首先从Accounter中请求在目标存储集群上操作的权限，这是我们称为索赔的过程。索赔涵盖了整个操作，这可能涉及系统状态的多次更改。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 652ecab4-2d56-4292-8860-8860-82fb24cd0759”，“ dropcap”，“ dropcap”&gt; accounter用途一项针对技术特定的政策，以确定是否可以批准索赔。该策略采用两个输入：集群健康，这是存储在&lt;a href =“ https://www.uber.com/en-dk/blog/grail/” target =“ _ _ blank“ rel =”的当前健康状态的集合。 Noreferrer noopener“&gt; Grail &lt;/a&gt;，以及正在进行的正在进行的操作，这些操作已被跟踪和ST在etcd &lt;sup&gt;®&lt;/sup&gt;。&lt;/p&gt;中ored&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 3E7BF56E-5D58-4E58-4E58-993F-CDB20923166B”，“ opticaly class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 58e0af82-e829-40b3-bcab-680a93450ee”，“ level”：2} -Block-neading“ ID =“ H-Cluster-Health”&gt; Cluster Health &lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;Figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ beb49c97-9d38-40d3-40d3-8537-f027c56a0d73” :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfe6nv0NFbBiHe3fLUyfVxDlx0aMIs0VsodtTGOa5ULHXvlNDWniFa7J9q7ZlCcbhVZ6FTWYoIIAFfo2WVYyHzGYuVg6Gkhhd_VpWBhdeYTzlSH6OhHYkmnamHgNo9K5sk5ZMnoTrJzXtmocONLFdK5VvH6?key=b-AdKuusNx_dhDAHvkwz_g&#34; alt=&#34;&#34; referrerpolicy=&#34; No-Referrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图2：Odin上的群集健康收集的概述。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 72EA256B-F8AF-4151-4151-8EF3-A0DA00EF9B47”，“ dropcap”，“ dropcap”：false} =“ https://lucid.app/lucidchart/43371f6c-1761-42e9-ba36-50e6a081cea9/edit?page=0&amp;v=536&amp;s=672”&gt; &lt;/a&gt; &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 1E5553712-51CB-4082-B972-D73D73D09584791”，“ dropcap”：dropcap“：false} ODIN由一个或多个工作负载组成，例如木筏，Apache Cassandra &lt;sup&gt;®&lt;/sup&gt;或类似的数据库群集节点。每个工作负载都是一个容器的集合：一个工作容器，一个主数据库容器，以及可能是几个辅助容器。该工人负责管理数据库和Sidecar容器的主机级生命周期。它连续监视工作负载的状态并与控制平面进行通信。最新的工作负载状态存储在Grail中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 040cc737-c482-436f-81fb-760c60c6f1e5e03”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt;在确定群集时，健康，必须考虑其他几个健康信号，超出了单个工作量中可以观察到的东西。例如，群集是否复制数据？群集是否会因数据改组过多还是增加客户负载而产生的压力？储存团队通常会管理/收集类似这样的集群级健康信息，Odin提供了将群集状态摄入Grail的方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 1c6f4371-d466-4586-4586-8992-9220aa431873”，“ dropcap”：dropcap“：false}”因为不健康的工作负载取决于特定技术，这在特定技术特定的健康政策中被捕获。以后再说。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash“：” 9E05F7A8-03EE-4A90-A90-A2FC-858092796660D“，” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/heading” data-wp-block =“ {“ hash”：“ 9591126E-BE90-BE90-474B-A839-2B5602D8BA3E”，“ LEVEL”，“ LEVEL”：2} class =“ WP” WP -block-heading“ id =” H-Gongoing-operations-nbsp“&gt;正在进行的操作&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ CD08EC06-1439-475C-92C-92C1-0C4AAA6CC3704”，“ dropcap”，“ dropcap”：false}正在进行的操作使用两个关键概念：&lt;em&gt;操作&lt;/em&gt;和&lt;em&gt;组&lt;/em&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ AA688888-99AC-4B51-A0E2-2E74AEAE167C03”，“ dropcap”，“ dropcap”：false}由操作对象表示，其中包含关键细节，例如目标存储工作负载，操作类型（例如排水或停机时间）以及其对存储群集的潜在中断。每个操作都与一个或多个组相关联。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 81200b77-d173-4320-a11f-a11f-d6Ad2631aaa6f”，“ dropcap”，“ dropcap”：false}链接到它的操作数量，并在操作数量之外存储其他元数据。例如，它记录了最近开始并完成的操作。该数据允许对每个组中允许的操作实施基于时间的费率限制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A9C2CAD5-C5B0-48A9-A792-714520F6693C”，“ dropcap”：false}许多组，它们可以将它们广泛分为两种类型：平台范围的组（例如，区域，区域和机架等故障域）和特定于技术的组（例如，单个存储群和工作负载）。一个全球小组跟踪所有正在进行的操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ EDB4505F-8A6E-4B62-8F10-8F10-99F0ADEE1F97”，“ dropcap”，“ dropcap”：false}组强制执行全球并发限制，有助于防止ODIN和基础架构的过载。同时，技术特定的政策利用集群和工作量组来保护群集可用性和耐用性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7fc72d01-2Afd-46ee-46EE-9DD5-a5dd6f39999393d5c“，dropcap”，“ dropcap”：false}群集上允许的操作取决于技术。一些技术一次将操作限制为单个工作量，而另一些技术则允许同时进行一定比例的集群。可以动态创建更多专业的组，以跟踪集群中工作负载的特定子集的操作，例如角色。这种灵活性实现了针对不同存储技术要求量身定制的更细微的安全政策。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ f1ddc4f1-d0e5-496b-847a-4679a648bef”，“ dropcap”&gt; propcap“：false}”&gt;下面的图说明了如何建模操作，并且操作对象链接到多个组对象。这些明确的关联促进了操作完成或失败时的清理过程。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ F024BC6A-8095-4654-8E69-A281E5555555FBE9E”，“ ALT” :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdUxx49TQHC2EwXgir_x7cX3CehhM61yc5TGL0BZ2aXsRkS8_7Odr-G_60BWCjIuRYbkEtZfYogfVhC0aEwNhYJY3elWUGb6oQ7yNBwB4K9bUJIKmRlCjk_s8C9UakIUClZvse1HXWGUawkeD6g5d0w5byj?key=b-AdKuusNx_dhDAHvkwz_g&#34; alt=&#34;&#34; referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图3：用于表示操作和组之间关系的数据模型的概述。&lt;/figcatpion&gt; &lt;/figaption&gt; &lt;/figif&gt; &lt;/div&gt;&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/pragraph” data-wp-block =“ {” hash&#39;：“ F162871A-8D83-440F-8098-8098-027EA3605100”，“ dropcap”：dropcap“ =“ https://lucid.app/lucidchart/4E05A85C-D7F0-4A2B-8CA1-C0685F1AEF83/Edit?page=0&amp;v=1611&amp;s=612”&gt; &lt;/a&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 0BEA51DB-6A1E-40C5-B7E-ECE7-ECE88863E57E5”，“ opacity”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}“}”}“}”}“}”}“}”}“}”}“” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/heading” data-wp-block =“ {“ hash”：“ DA147268-514B-4568-BCA0-CD3819AD8742”，“ LEVEL”：2} -Block-neading“ ID =” H-Safety-Policies&gt;安全政策&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“可以有效地衡量组合健康，并概述所有正在进行的操作，我们可以介绍安全政策。安全政策是一个编纂的破坏预算，它允许表达技术特定的政策，以使操作如何重叠在存储簇中。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ ADC5367E-1A21-4321-4321-8C5B-1B4DE1A3B153”，“ dropcap”，“ dropcap”：false}两个部分：&lt;em&gt;健康政策&lt;/em&gt;和&lt;em&gt;限制策略&lt;/em&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A25A8360-5E6666666-4230-9AA0-8C39999B761A6”，“ Dropcap”使用最新收集的集群健康信息来确定是否可以执行所请求的操作。例如，技术团队可能希望防止运营成为St在一个集群上挥舞着客户负载的增加或工作量不健康。  &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ b9ca44e9-c9fc-487a-9EE7-3AD07A62473A”，“ dropcap”，“ dropcap”：false}另一方面，可以限制影响组的并发操作的数量，在顺序操作之间实施宽限期，或提供操作排他性，以便如果一个组正在操作，其他组将拒绝所有索赔。当您想一次操作单个机架时，这特别有用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ dde3d889-02e1-4c97-b8db-7b7b8c7799f626c“，” dropcap}政策实施者的功能集合，例如：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ 82C24B34-5D62-4E09-8ED5598A9FC928E”，“订购”，“：fords”：false，“ values”：“：” “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;测量工作量和群集健康的方法&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;em&gt; chem&gt; chepmaxoperations（group，max）：&lt;/em&gt;检查指定的组是否最多具有最大操作&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;em&gt; checkelapsedfromlastclaim（group，持续时间）：&lt;/em&gt;检查给定时间以来是否已经过去了最后的声明将操作与指定组相关联&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;em&gt; checkelapsedfromlastunclaim（group，持续时间）：&lt;/em&gt;检查给定时间以来的时间已经过去了与操作相关的索赔上次是从指定组&lt;/li&gt;中发布的&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ ab5a85e9-7962-47e3-bf9e-558454545454d9b7c5”，“ dropcap”，“ dropcap”：false}一项时间检查，不能为操作安全提供艰难的保证。健康数据收集本质上涉及分布式系统中的延迟，这意味着可以基于过时的集群健康视图批准两个同时进行破坏性操作的请求。极限策略执行的检查确实提供了艰苦的保证，因为它们是通过ETCD交易有条件地进行的。让我们探索如何工作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ CF11F91A-6480-44BF-97AE-AA6661A8F523E”，“ opcity”，“ opcity”：“ alpha-channel&#39;} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 80101E32-FC99-4E92-B8ED-6C1D214C29B9”，“ level”：2} -block-heading“ id =“ H-Architecture”&gt; Architecture &lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;图Data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1100184，” sizelug”：“大”，“ linkdestination”：“无”，“对齐”：“中心”，“ hash”：“ 77539BBF-037E-4050-4050-9F24-C6C0DCA5EE59”，“ ALT”，“ alt”：“ alt”：“}” class =” class =“” AlignCenter size-large“&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 1024” height =“ 676” src =“ https://blog.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/width = 2160，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/11/blogfigure4-1732169666658887-1024x676.png“ alt =” ://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/blogfigure4-17321696658887.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror=redirect，format，format = auto/wp-content/uploads/2024/2024/11/blogfigure4-blogfigure4-blogfigure4-173216966666588888888888888888887.png 300.pn00w ，https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80，onerror = redirect，format，format = auto/wp-content/uploads/2024/2024/2024/11/11/blogfigure4-blogfigure4-173216666666666658888888888888.png 768W，https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80，onerror = redirct，format = auto/wp-content/uploads/2024/2024/11/blogfigure4-bblogfigure4-1732166666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665887。 png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/blogfigure4-17321696658887 。 /figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 12513284-7271-401C-980B-980B-42F5555C5CE634”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ da75e2ea-9113-9113-409B-8176-250A4EEC58EA”，“ dropcap”，“ dropcap”：false}和组，我们将ETCD用作钥匙值商店。当工作流程想要更改一个存储簇时，它会经过以下过程：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ C9492C1E-9928-4200-9D4B-5C8C8F12747215”，“订购” “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;想要提取索赔的工作流程，并提供有关目标存储工作负载和目的的信息操作（1）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; Accounter从Grail（2）和当前的操作状态从ETCD中检索当前的群集健康状态（3 ）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;在评估目标工作负载之前，Accounter评估平台范围的并发限制和速率限制（4）。&lt;/li &gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;接下来，‌技术特定的健康和限制策略将根据ETCD（5）的状态进行评估。如果任何一种政策失败，则立即拒绝索赔在交易中。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;否则，如果满足了所有条件，则建立并承诺将所需更改的单个事务（6）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;根据ETCD交易的成功，索赔被接受或拒绝（7）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;现在可以继续（8）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;在操作后，工作流程负责通过辅助释放索赔。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2d205b96-135b-4430-4430-8450-d86cd6c614a9”，“ dropcap”，“ dropcap”：false}通过交易执行，以确保对正在进行的操作的一致观点。具体来说，我们使用乐观的锁定在进行更改之前，请验证组内部操作数量的假设。  交易构建器库为安全政策开发人员抽象这一复杂性，从而给他们留下了直接在内存中工作的印象。这种方法类似于&lt;a href =“ https://github.com/etcd-io/etcd/blob/main/main/client/v3/concurrency/strency/stm.go” target =“ _ blank” rel =“ noreferrer noopener”&gt; ETCD的STM &lt;/a&gt;（软件交易内存）库，但具有为改善吞吐量而定制的优化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 4B15994D-02E0-44B4-A3E8-83A3A3A63F4215”，“ dropcap”：falle}“：false}”&gt;如果交易，则由于乐观的并发冲突而被拒绝，在内部进行了几次。如果索赔被拒绝，只要操作仍然相关，我们就会依靠行动重试。如果拒绝是由于违反了组的费率限制，则辅助提供了一个有意义的退缩时间，该操作可以用来决定如何进行。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 2E65EDF2-8787-47D5-A453-A453-0783B0B5CCFA”，“ dropcap”，“ dropcap”：false}要求直接从ETCD获取状态的索赔（3），首先根据不断更新数据的内存快照对所有索赔进行评估。如果索赔违反了使用缓存国家的任何一种政策，则立即拒绝而无需尝试将交易提交给ETCD。这是必不可少的，因为该系统必须每秒进行3,000-4,000次索赔尝试。这些流量的大部分来自平台审计工作负载通过旱压索赔尝试进行的能力。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7f5555A1A-BCCF-4A97-BD78-E09779105318”，“ dropcap”，“ dropcap”：false}最终确定索赔并进行运营限制的支票，并在交易时授予索赔。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/sapyator“ data-wp-block =” {“ hash”：“ 0E6B08F4-E6C0-44FA-96D8-38173A802CCF”，“不透明度”：“ alpha-channel”}“ alpha-channel“ - 开放性”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 5dfe78d2-ae09-4da5-8f72-a02-a0db28154ee8”，“ level”，“：2} -Block-neading“ ID =” H-Claim-Life-Cycle&gt;索赔生命周期&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 96D661D8-8126-41A9-9D44-13A5B54817C”，“ dropcap”通常是层次结构，因此我们设计了辅助因素来支持从父母到子行动的索赔的通过。这些通过的索赔是重新进入的，这意味着，当儿童操作试图索赔时，它就变成了无障碍。这种设计允许在保持操作逻辑直接的同时进行更复杂的操作。程序员不需要了解整个操作结构即可确定是否已经提取索赔，他们只是根据需要采取索赔，知道系统将正确处理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ aa4aa757-d051-4607-a05b-eb-eb-eb2845346a3d”，“ dropcap”&gt;一旦完成索赔，就可以发布索赔。但是，在某些情况下，操作可能会终止，意外失败或包含错误。尽管这些情况很少见，但它们确实发生在我们的规模上。系统必须确保最终释放索赔，因为陈旧的索赔可以阻止操作吞吐量。由于操作在数据模型中链接到其索赔，因此辅助始终可以追溯到操作。这用于识别非活动操作并安全释放过时的主张。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash&#39;：” A0F55035-1A46-48B0-A950-F6AE2E88711E“ class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ d2b8cd75-c991-4fcd-8945-51279999292927”，“ -block-heading“ id =“ h-auditing”&gt;审计&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 8A62F129-BD41-441-4475-A536-BA30040361AA”，“ dropcap”，“ dropcap”：false}承担着巨大的责任。将政策制定委派给技术团队的风险使过度保守的政策可能会阻碍该平台执行机队范围内的运营能力。 Uber Colocates在同一主机上的不同技术的工作负载，导致同一主机上的数百个工作负载。当平台必须排出主机时，所有工作负载必须首先被排干（即移至其他主机）。限制性安全政策增加了仅能够部分排出主机的风险。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block=“ {” HASH”：“ 065D0B30-BC9E-4635-B11E-74290CF41F53”，“ DropCap”：false}“：为解决此问题，我们实施了广泛的审计系统。该系统不断评估工作负载的&lt;em&gt;可索赔性&lt;/em&gt;，提供了整个平台上可能进行操作的准确快照。该信息发表在Grail中，并由补救循环用作识别可行操作的前过滤器。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ CD52E911-BB11-4BD8-9BD8-9B5C-0EDE76028F78”，“ dropcap”，“ dropcap”：false} Odin团队利用这些数据来洞悉工作负载，其操作已被阻止了长时间，从而使Odin团队能够提醒负责受影响的存储技术的团队。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 0f753d1E-2356-401C-A2C5-A2C5-A0779E4FD4BA”，“ opcity”，“ optical” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ 5a19b9d55-34b6-48db-bf17-8c1081a1a1e54”，“ level”，“：2}” class =“ class =” WP -Block-neading“ ID =” H-Anternative-Ablecrainges&gt;替代方法&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 0b79e0b1-f348-4c7e-b1fe-94e4e4e4e4e4e4fecfcac0”，“ dropcap”，“ dropcap”：false}“：false}”&gt;至少遇到了另外两种协调操作的常用方法：分布式锁定经理和kubernetes &lt;Sup&gt;®&lt;/sup&gt; &lt;a href =“ https://kubernetes.io/docs/concepts/concepts/concepts/works/workloads/workloads/pods/pods/pods/distrimes/” target =“” “ _blank” rel =“ noreferrer nooopener”&gt;破坏预算&lt;/a&gt;。在这里，我们解释了它们与Accounter的方法有何不同。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 90AC573C-B34B-48DE-B790-15634226352C”，“ dropcap”，“ dropcap”：false}通常涉及在集群上获取锁，以确保一次只能执行一个操作。但是，鉴于在ODIN中（主要是由于本地磁盘）进行单个工作负载所需的冗长时间 - 将整个群集用于单个工作负载操作，将是效率和不切实际的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ D38B4F0F-AD43-4A79-AC92-455FA20E23AA”，“ dropcap”，“ dropcap”：false}换锁的替代方法可能是将锁扩展到信号量，从而可以同时授予预定义的令牌。这类似于Kubernetes采用的方法，在该方法中，中断预算预先设定了固定数量的操作。但是，Accounter通过仅专注于计算操作，从而使限制限制到单独的政策，从而与这些方法不同。此方法在策略设计方面具有更大的灵活性。例如，它允许指定认为只有一定数量的优化动作。尽管如此，如果主机失败并提出了紧急行动的请求，那总是被授予的。将这些紧急情况保留在模型中是一个优势，因为该政策可以说明从那时起，没有效率移动到完全修复主机故障为止。这种灵活性对于在适应实时条件的同时保持运营效率至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ CC797C74-5C1F-4B7B-B4AB-B4AB-4F1CE27E4C72”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}： class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ C8458D63-F070-413A-B601-07FA8FEB090D”，“ LEVEL”，“ LEVEL”：2} -block-heading“ id =” h-cale“&gt; scale &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 633355CFA-615A-47D7-B76C-8F6490D9D68D“现在已完全集成到所有操作中，并且该平台完成的操作数量转化为很多流量。让我们看一下当前的数字：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 346D0F16-C987-4634-AEBB-1BBB-1B520D4906D3”，“ dropcap”，“ dropcap”：false}&gt; &lt;strong&gt; &lt;strong&gt;流量&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ 1CEEF2DB-4DB7-4166-95D9-476676E9332E”，“订购”，“：fords”：false，“ values，“ values”：“：” “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []” &gt;&gt;每小时300,000个索赔评估&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []” &gt;&gt;每小时700万次干式索赔评估&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ E6313EBC-797E-437E-4373-BF0F-B07A618CFF7C”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;strong&gt; &lt;strong&gt; &lt;strong&gt;主动操作和组&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ C7913B1E-26C5-4BD8-4BD8-9943-A930634B3805”，“ ordered”，“ ordered”：fordeed&#39;：fordeed&#39;：fords“：false，false，“ values”：“：” “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []” &gt;&gt; 2,000个活动操作&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []” &gt;&gt; 700,000个不同的组&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash“：” 061733-4C18-4C18-4ECB-893D-487EEE40DB6E3“ class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 7A7B116B-7D6B-4EAC-4EAC-A84C-D17562B9A593”，“ LEVEL”，“级别”：2} class =“ class =” WP -block-heading“ id =” h-results“&gt;结果&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 980045BA-187B-49F0-49F0-8339-6486EB00855E”，“ dropcap”：false}”&gt;多年来，助攻大大提高了奥丁的运营效率，使小型团队能够安全地管理数千个集群。它促进了集中式效率计划，并授权领导能力将Uber的物理基础设施视为灵活和不适。此外，通过明确的关注点，助攻保留了团队的独立性：补救循环所有者只专注于确定哪些操作是必要的，而无需担心安全考虑&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ c91f0eab-494b-494b-4ef9-91e5-f679cff07372”，“ dropcap”，“ dropcap”：false}是我们采取加密的努力。我们能够完全集中的过程。我们要做的就是要求我们的自动化将工作负载移至带有加密的主机，而Accounter确保了它安全地发生。该过程涉及迁移210万个VCORS和1.6EIB本地磁盘。过去，像这样的运营将需要大量的计划/执行，涉及所有技术利益相关者以及花费多年的工程时间。 &lt;strong&gt;现在，它们是一个no-op。&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 0C8631C0-0B86-4321-B0FA-1124614856B3”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf9ke1obdn_A5SCJO98Si-zmTAX7ehygvUwbOzbfFXMFSMIJcZno4qaiijgDH9Us9XbOZJNs-E60pB-t3wcMlaDtauVTMI_p_R1hJ0lwusZZHi2I7kJgHNUsKaeTNYUU5N4L0F_D0QRS8lR96qh91NXJbY?key=b-AdKuusNx_dhDAHvkwz_g&#34; alt =“” title =“图表” referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图5：Uber的时间表向加密 -  at-at-Rest。&lt;/figcaption&gt; &lt;/figig&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 880C1309-40C3-40C3-4E9F-8186-D4FE9768A736”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ add83f5b-3776-4924-8cd6-be8e819efc74”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ 8BE63190-B606-494F-B957-C33357-C335DCCDA674”，“ level”：2} -Block-neading“ ID =“ H-Future-Work”&gt;未来工作&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ac04a251-021d-4809-8a98-dba96ab2e81b&#34;,&#34;dropCap&#34;:false}&#34;&gt;The Accounter paradigm正在积极发展，我们正在努力解决其当前局限性。改进的一个重要领域是支持优先考虑操作。目前，操作依靠连续的投票来获得索赔，这会产生不必要的流量，不允许优先考虑不同的操作类型。当较低优先效率的优化阻止高优先级，人为启发的操作时，这变得尤其有问题。感兴趣的另一个领域是能够直接在辅助中定义断路器。当前，ODIN中的每个循环都实现了此功能，以防止错误引起的不当行为。我们的目的是将其作为辅助的内置功能，简化流程并增强整体系统的弹性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 65C6AE57-0747-4F76-BC1C1C1BBBBBBB6DFB7906A”，“ opacity”，“ opacity”，“ opacity”，“ optical”： class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，“ hash”：“ 59C7F492-08C9-4664-B14E-B14E-F3BBA5735C8D”} -block-heading“ id =” h-summary“&gt;摘要&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ ，我们介绍了Accounter，这是一种全球协调系统，旨在改善Uber状态平台Odin上运营的吞吐量和安全性。提供操作协调为服务，因此可以在保持集群安全性并避免矛盾的行动的同时有效地执行大型操作。它跟踪正在进行的操作，执行特定技术的政策，并确保只有在安全时才启动新操作。该备用大大提高了Uber的运营效率，使小型团队可以安全地管理数千个集群，并驱动集中式程序，例如左右的迁移。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 239B805B-3C25-4020-916E-CC0597347E03”，“ dropcap” ：false}“ class =” hap-small-font-size&gt; &lt;em&gt; kubernetes &lt;sup&gt;®&lt;/sup&gt;，etcd &lt;sup&gt;®&lt;/sup&gt;，其徽标是Linux Foundation的注册商标&lt;在美国和其他国家/地区，SUP&gt;®&lt;/sup&gt;。 Linux基金会没有使用这些标记的认可。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 5269E747-77779-465F-B5DE-B5DE-78E136363BABBA ：false}“ class =”具有small-font-size”&gt; &lt;em&gt; apache cassandra &lt;sup&gt;®&lt;/sup&gt;是美国和/或其他国家/地区Apache Software Foundation的注册商标或商标。这些标记的使用并不意味着Apache Software Foundation认可。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 94534B87-4345-401B-8341-941-9409E5E40AB6”，“ ：false}“ class =”有small-font-size”&gt; &lt;em&gt;封面照片是g使用Openai的Chatgpt Enterprise充满活力，并使用Pixlr进行编辑。&lt;/em&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 21 Nov 2024 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Presto® Express: Speeding up Query Processing with Minimal Resources】PRESTO®Express：使用最少资源加速查询处理</title>
      <link>https://www.uber.com/blog/presto-express/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;7404d726-deb9-4f91-bde8-c282b1b4c7e2&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9663f6c7-9977-4746-afb2-88dc6a604b87&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Presto&lt;sup&gt;®&lt;/sup&gt; is an open-source, distributed SQL query engine designed for running interactive analytic queries on data sources of any size, from gigabytes to petabytes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;362e44f0-2468-4329-9435-ffed45e334cc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At Uber, Presto is a critical engine for data analytics across various departments. The Operations team relies on it for dashboarding, while Uber Eats and marketing teams use its query results for pricing decisions. Presto is also essential to Uber’s compliance, growth marketing, and ad-hoc data analytics, making it a cornerstone of the company’s data-driven operations.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099424,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;6efcea4d-040e-40a3-95db-b0e9712dc5f3&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;611&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure1-17309536886116-1024x611.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099424&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure1-17309536886116.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure1-17309536886116.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure1-17309536886116.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1438,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure1-17309536886116.png 1438w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Uber Presto operational overview.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a703b98a-6d2b-4ccc-82eb-d5a6df09da59&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ede00cc6-18ce-4412-920c-aee41913e0d2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber operates around 20 Presto clusters across over 10,000 nodes in 2 regions, supporting approximately 12,000 weekly active users. These users run about 500,000 queries daily, reading around 100 PB from HDFS. Presto is used to query multiple data sources, including Apache Hive™, Apache Pinot™, MySQL&lt;em&gt;&lt;sup&gt;®&lt;/sup&gt;&lt;/em&gt;, and Apache Kafka&lt;sup&gt;®&lt;/sup&gt;, through its extensible data source connectors.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;44406267-0f63-4baa-a9d5-b7758c76a709&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This blog describes how Uber designed Presto express to reduce end-to-end SLA for fast-running Presto queries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0ac6b117-f506-43b8-83d8-0fa524bed549&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;88ceb908-18a4-4dd9-a2df-1a7d84af4705&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-problem-statement&#34;&gt;Problem Statement&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0c3532d4-4c5a-4002-b66c-a45bab4126e3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Earlier last year, we observed Presto experiencing query slowness for multiple months. To work around this, we had to add more capacity. The problem of query slowness was caused by throttling. To keep ‌Presto clusters from getting overloaded, we have concurrency limits that limit the number of queries that can run concurrently on the cluster. This creates a fixed pipe, and all the queries have to contend for a spot in that pipe.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099426,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;e8252f50-2846-496b-b962-e3d5f03d62df&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;546&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure2-17309537151369-1024x546.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099426&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure2-17309537151369.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure2-17309537151369.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure2-17309537151369.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1320,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure2-17309537151369.png 1320w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: High-level Presto architecture.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;be59cfe0-8ccb-4b31-9c02-b3b710d3a12c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7cacc5e8-7653-4247-ae97-0bfd9be6c6a4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For a query to get accepted for execution, it has to pass the user, consumer, cluster, and cluster group level concurrency checks. Incoming queries are queued up in Exeggutor post-validation and released to Prism for routing if they satisfy the checks. For a particular user or consumer, queries are processed in a first-come, first-served manner.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9b411a1f-1327-490e-b433-a40a3e3d9752&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 3 shows how many times user and consumer-level limits throttled scheduled queries over a 7-day period.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099428,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;170ee10e-7bf1-46d5-868a-755ac029bc69&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;976&#34; height=&#34;470&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure3-3-17309538282644.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099428&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=976,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure3-3-17309538282644.png 976w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure3-3-17309538282644.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure3-3-17309538282644.png 768w&#34; sizes=&#34;(max-width: 976px) 100vw, 976px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Queries throttled due to consumer and user limitations.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a2287193-136a-4872-b6a3-aef60a38e140&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1b8962db-8797-459f-827f-7fa745d08832&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The cluster concurrency level limit also throttles queries. For example, throttling for batch low-tier queries based on cluster limits.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099430,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;5ed08639-7998-4271-9efd-f1d0998f8228&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;429&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure4-17309539067428-1024x429.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099430&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure4-17309539067428.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure4-17309539067428.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure4-17309539067428.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure4-17309539067428.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1600,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure4-17309539067428.png 1600w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Queries throttled due to cluster availability.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1c30a50d-d93b-4da3-a39a-933d6104b49a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0d04af4b-d31c-4a7e-9dfb-9737ba45af6a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figures 3 and 4 show the significant throttling that Presto queries have to go through.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;76edbd98-ad88-4aba-81c5-8ca9de8b569b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;However, looking at the Presto query latencies, we saw that P50 execution times of the queries were well under a minute. Here, the execution time only refers to the running time of the query in Presto and doesn’t include any queuing time for the query in Exeggutor.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099432,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;c693237f-80b2-4767-86fc-22113301276c&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;279&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure5-17309539465304-1024x279.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099432&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure5-17309539465304.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure5-17309539465304.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure5-17309539465304.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1056,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure5-17309539465304.png 1056w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Interactive query latency.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d3990c25-aaff-4918-a120-a4f94f126fc7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099433,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;31c90169-3460-415a-a93d-9bf7166b37b2&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1025&#34; height=&#34;280&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure6-17309539701128.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099433&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1025,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure6-17309539701128.png 1025w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure6-17309539701128.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure6-17309539701128.png 768w&#34; sizes=&#34;(max-width: 1025px) 100vw, 1025px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Batch query latency.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8cc9dae3-ea12-44ab-ad24-bcefeac6f1ff&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3f029991-97ec-4602-970d-0c3ebd997b6c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;That meant that out of the roughly 500,000 queries that Presto executed every day, more than half of the queries could easily finish in under a minute. To reduce the queue time of these fast-running queries, we designed a new approach.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8fa2ee6e-cb3f-456d-bb24-f11aa8bde6d3&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d28a19b8-6197-47a3-84d7-4bbf55d04a19&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-identifying-express-queries&#34;&gt;Identifying Express Queries&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6731793b-83ba-450f-af97-d24c25eafa14&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We define an &lt;em&gt;express query&lt;/em&gt; as any Presto query that can finish within 2 minutes. To identify express queries, we developed a method using historical data to predict whether an upcoming query is an express query. To do this, we tested the P90 and P95 query execution times using the exact fingerprint and abstract fingerprint of the query with lookback windows of 2 days, 5 days, and 7 days. An exact fingerprint is a query hash after removing comments and whitespaces. An abstract fingerprint also removes literal values from the query. An abstract fingerprint can identify similar queries coming from the same pipeline or data services even though the query isn’t the same.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9dd17e03-1bc3-4008-869c-04fd37436f29&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We used this candidate definition to predict if a query was express: &lt;em&gt;if the X runtime of the query in the last Y days based on Z fingerprint was less than 2 minutes. &lt;/em&gt;We explored variations where &lt;em&gt;X&lt;/em&gt; was P90 or P95, &lt;em&gt;Y&lt;/em&gt; was 2, 5, or 7, and &lt;em&gt;Z&lt;/em&gt; was exact or abstract.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a37178a0-62f8-4db3-9008-4ebd0c209cde&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This gave us 12 candidate definitions. To compare the various candidates, we defined Accuracy as &lt;em&gt;True Positive/(True Positive +False Positive)&lt;/em&gt; and Coverage as &lt;em&gt;(True Positive+False Positive)/ALL&lt;/em&gt;.&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099435,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;bc8f4f3d-6374-49b0-9bef-60a13b107856&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;155&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure7-17309540503346-1024x155.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099435&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure7-17309540503346.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure7-17309540503346.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure7-17309540503346.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure7-17309540503346.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure7-17309540503346.png 2048w, https://blog.uber-cdn.com/cdn-cgi/image/width=2064,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure7-17309540503346.png 2064w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Confusion matrix of predictions for express queries.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9583e821-8ed3-4cfe-9d7e-eabf618930f6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;13bb5569-844b-4167-b5d4-ed725a20a500&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To test the accuracy of the prediction, we wrote a SQL query to analyze the historical data and come up with the prediction. In the analysis, we found that the P90 value of the abstract fingerprint with a 5-day lookback window provided the best accuracy and coverage, with values of 95.7% and 48.99%, respectively. So, we decided to use this query as our primary indicator for express queries moving forward. By implementing this optimized approach, we could better predict and identify express queries. We’ll continue to monitor and refine our model to ensure its ongoing accuracy and effectiveness.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099436,&amp;quot;width&amp;quot;:&amp;quot;606px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;991b38aa-3e33-41e6-bf6c-c93b2cdbaaee&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;2024&#34; height=&#34;758&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure8-17309540801369.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099436&#34; style=&#34;width:606px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure8-17309540801369.png 2024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure8-17309540801369.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure8-17309540801369.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure8-17309540801369.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure8-17309540801369.png 1536w&#34; sizes=&#34;(max-width: 2024px) 100vw, 2024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8: Experiment result.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;da10709d-d9bc-40f5-9720-f3f33244bf93&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7bfda52e-77d3-44ef-ae44-155d50eb852c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We added a sink to ingest data from our query events topic to a Pinot table that can be queried in real time. Now when a query comes to Presto, we can determine whether that query is express using the Pinot query shown in Figure 9.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099438,&amp;quot;width&amp;quot;:&amp;quot;489px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;722bd5e0-5123-49e7-9c22-0bd1e0e6db3e&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;403&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure9-17309541541205-1024x403.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099438&#34; style=&#34;width:489px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure9-17309541541205.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure9-17309541541205.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure9-17309541541205.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1424,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure9-17309541541205.png 1424w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 9: Pinot query determines if a query is express.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;027e4244-1bcb-4347-9a6b-90f526cd71f0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b49d8a0d-5a68-43c2-8d98-7c3bf8263547&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We use the &lt;em&gt;_count&lt;/em&gt; to make sure that we make the prediction based on at least 5 previous runs of the query. If the percentile that we get above is less than 2 minutes and the count is greater than 5, then the query is deemed an express query. Since the Pinot table has the exact fingerprint and data for the last 90 days, we can easily change the method to use the exact fingerprint, a different percentile and/or larger or smaller lookback window.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ff22cbdf-fbd3-4407-a770-2221a791d665&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One drawback of using historical data for prediction is that we won’t be able to predict accurately for new queries coming to the system. However, this isn’t a problem for batch workloads, where most of the queries are scheduled and repeat themselves over a set frequency.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;16705ebc-8773-4f1e-9057-9ec541d55e3f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The query prediction latency is very minimal, with most of the predictions being made in under 100 milliseconds.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099440,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;08270d34-f370-49e2-a1ec-34a26779aef7&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;748&#34; height=&#34;299&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure10-17309544008135.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099440&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=748,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure10-17309544008135.png 748w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure10-17309544008135.png 300w&#34; sizes=&#34;(max-width: 748px) 100vw, 748px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 10: Express query latency.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;98739c05-5aba-4185-8b37-3f43348e25ed&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ae811d7a-e2ff-473f-88e4-33513d099ce6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6868cbd6-1500-4e6d-9fe6-518599583eb7&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-initial-express-design&#34;&gt;Initial Express Design&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ea173013-a44c-4463-a838-e8405887ce68&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In our initial design of the express feature, we designated one of our existing batch clusters to be an express cluster and added the aforementioned logic in Prism to determine if a query was express and should be sent to the express clusters.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1102105,&amp;quot;width&amp;quot;:&amp;quot;559px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;1ed7e1fc-8d4e-448d-a701-24d765ec8a8d&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;664&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure11.ng-17345532339493-1024x664.png&#34; alt=&#34;&#34; class=&#34;wp-image-1102105&#34; style=&#34;width:559px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure11.ng-17345532339493.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure11.ng-17345532339493.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure11.ng-17345532339493.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1532,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure11.ng-17345532339493.png 1532w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 11: High-level architecture of initial Presto express design.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c4e8797a-6709-4664-85ad-8f4d1408cc8d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;00d92174-eae7-448d-ad31-046104e42c54&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;However, this approach faced several issues:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;c2404b55-5c61-4955-a504-07a2acaffa7e&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Underutilization&lt;/strong&gt;: The express cluster operated significantly below its full capacity, with CPU usage hovering at approximately 20%, while other low-tier clusters operated at nearly 90%. This disparity was evident in metrics, showcasing a noticeable decrease in CPU usage for batch3_b20b, which was designated as the express cluster. This situation highlighted a substantial underutilization of the express cluster’s resources.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5f3b978c-28c8-4fef-8a25-e9640346208e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099444,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;4caf5909-a40b-436f-ba42-ccf867e9cec7&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;908&#34; height=&#34;334&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure12-17309544759023.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099444&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=908,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure12-17309544759023.png 908w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure12-17309544759023.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure12-17309544759023.png 768w&#34; sizes=&#34;(max-width: 908px) 100vw, 908px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 12: Daily CPU usage of each cluster.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5f3b978c-28c8-4fef-8a25-e9640346208e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;start&amp;quot;:2,&amp;quot;hash&amp;quot;:&amp;quot;1ad2bea0-e454-4a93-badc-253a475a39d0&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; start=&#34;2&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Our approach, limited to including the express tag only in the execution process, had inadvertently overlooked query throttling in QR queues. This oversight resulted in our system remaining within consumer and user limits. Paradoxically, the express cluster, despite being designed for quick queries, often remained idle due to meeting these limits. Consequently, other clusters were burdened with an increased query load, exacerbating the situation.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099445,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;8b6e5608-eeb2-4185-97e6-de6fac2dc001&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;926&#34; height=&#34;295&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure13-17309544934077.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099445&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=926,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure13-17309544934077.png 926w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure13-17309544934077.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure13-17309544934077.png 768w&#34; sizes=&#34;(max-width: 926px) 100vw, 926px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 13: Daily query count of each cluster.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d6eaca6e-10fc-46e4-a657-8f8ad62ca41e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;094fa422-0ad4-43e6-aa28-a61c264727c6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our initial attempt revealed crucial insights. Even though more than 50% of the low-tier batch queries were express queries, they consumed much less CPU. The resources allocated to express and non-express queries should match the CPU requirements of those queries. Beyond that, the slowdown experienced by the express queries couldn’t be solved just by the runtime isolation of the express queries from the non-express queries. ‌Express queries needed their own queues in the upstream systems (Exeggutor), so that an express query for a user or consumer didn’t get blocked by a non-express query for the same user or consumer sent earlier.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2dfff7fc-76b6-4fc9-84a4-bb91995ea220&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0931343f-c3a3-4d4e-859e-74759d81157f&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-final-design&#34;&gt;Final Design&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1102107,&amp;quot;width&amp;quot;:&amp;quot;534px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;678dbdd1-e0b8-4617-aa3d-b8c7558b61be&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;559&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure14-17345532572712-1024x559.png&#34; alt=&#34;&#34; class=&#34;wp-image-1102107&#34; style=&#34;width:534px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure14-17345532572712.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure14-17345532572712.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure14-17345532572712.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure14-17345532572712.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1672,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure14-17345532572712.png 1672w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 14: High-level architecture of Presto express final design.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6112f0e8-9203-4039-a266-cc02fd3919a8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;480aa367-a35c-4168-8dc1-06523ef0f5ba&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the final system that’s currently in production, we created a separate queue for express queries in Exeggutor that’s matched by a set of small express clusters. The express determination is done at the time of query validation itself, and the query is added to the express queue if applicable. The express queue has much higher user or consumer-level concurrencies, letting them run much more express queries than non-express queries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a4c20d41-aef7-48aa-b7b9-1f0a7771c90f&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ad1c1bf3-c163-4fa9-9c9a-6adf9a552926&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-impact&#34;&gt;Impact&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;30a77cd0-49ed-42b8-ae12-abf86f258a42&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Currently the express feature is only enabled for batch low-tier queries. The low-tier express clusters use around 10% of the total batch low-tier Presto resources, yet they run about 75% of the batch low-tier queries.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099448,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;9c5c17e2-c33f-4d4d-be07-656b6f57ca9b&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;738&#34; height=&#34;254&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure15-17309545442114.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099448&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=738,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure15-17309545442114.png 738w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure15-17309545442114.png 300w&#34; sizes=&#34;(max-width: 738px) 100vw, 738px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 15: Comparing query count of express and non-express queries in the on-prem batch low tier.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;751ca32e-6e42-417b-8213-66ec4f41d30a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c312ebfe-1da5-441e-ad78-677273fabf40&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;They also provide a much better SLA to ‌users. The p90 queuing time for express queries is about 10 seconds, whereas it can be in hours for non-express queries. 01:37:06 in Figure 16 refers to 1 hour, 37 minutes, and 6 seconds.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099450,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;e359b75c-cc8e-4c11-ac25-477a675db113&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;746&#34; height=&#34;258&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure16-17309545843619.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099450&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=746,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure16-17309545843619.png 746w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure16-17309545843619.png 300w&#34; sizes=&#34;(max-width: 746px) 100vw, 746px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 16: Comparing P90 queuing time for the express and non-express queries.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6f4b46cd-c162-4744-97d7-3f17cb9c41c7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7e4f3a4c-eb4c-4057-98bb-2f7756f07c96&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The p90 running time of the express queries is also obviously less, and the express queries provide a much better end-to-end SLA for users.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1099419,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f75ca99a-2d3b-4a3e-bb11-539edde28e97&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;737&#34; height=&#34;249&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure17-17309527374882.png&#34; alt=&#34;&#34; class=&#34;wp-image-1099419&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=737,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure17-17309527374882.png 737w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure17-17309527374882.png 300w&#34; sizes=&#34;(max-width: 737px) 100vw, 737px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 17: Comparing the P90 runtime for ‌express and non-express queries.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ace869bc-c889-43d0-aaef-bddbeef0f7c6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0626068b-e055-45c1-9294-c1bcda29a592&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;907e8a8b-e7e4-4bc8-8272-33c015204a31&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-next-steps-nbsp&#34;&gt;Next Steps&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;33c06a69-2ff8-480e-a2b9-defc925f6af5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For next steps, we want to look at separating the express cluster group. In our current implementation, express clusters are a sub-group of the major cluster groups like batch low tier, batch high tier, and interactive. The idea was that each cluster group would have its own set of express clusters. However, based on our experience in production,‌ express can be a separate cluster group instead of being a subgroup. So, an express query should be sent to this cluster group regardless of whether the query is a batch high tier, low tier or interactive query. The reasons for this are:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;521b9e82-a6a7-4c3b-8a14-4887ecde79be&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The current express clusters seem to have low utilization and can‌ run much more queries.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Simplified routing logic. We can just determine that a query is express at query submission time and route it to this cluster group.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The SLA given by the express system is low enough that we don’t need to differentiate between batch and interactive queries.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f339da68-8805-4e0e-8386-0798070f209f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;So far, we have only differentiated between express and non-express queries, but we can have more classifications like small/medium/large and each classification going to a separate cluster group.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;485bc75d-25b2-42b8-9ec0-38fbfebd549b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Another area we’re exploring is query cost prediction. Historical data has been our primary tool for predicting whether a query qualifies as an express query. Having historical data can be a challenge for interactive workloads. To address this, we can harness machine learning models to determine whether incoming queries should be classified as express or not. By integrating advanced algorithms, we can accurately assess the nature of new queries, ensuring more precise and timely classifications, even for previously unseen queries in our system.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6c4a2ec0-107e-4acc-90ed-4fa63ca40f51&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;b9ccff27-56a3-49fd-93c8-34ff75280f3e&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fdfd207e-f816-48ba-8746-e0a2bbd337ec&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This blog explored the design and implementation of Uber’s Presto express, aimed at reducing the end-to-end SLA for short-running queries. We discussed how express queries are defined, how they integrate into the overall ecosystem, and the challenges we encountered. Additionally, we highlighted the performance gains achieved through our deployment, with Presto express delivering an order-of-magnitude improvement in end-to-end SLA for over 75% of scheduled queries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;e5f6e121-eae9-4740-a6d8-67a6d5b36f5f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Apache&lt;sup&gt;®&lt;/sup&gt;, Apache Kafka&lt;sup&gt;®&lt;/sup&gt;, Apache Hive&lt;sup&gt;™&lt;/sup&gt;, and Apache Pinot&lt;sup&gt;™ &lt;/sup&gt;are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;c01f2c0c-f857-45b1-b6c0-3c744ea63341&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Oracle, Java, MySQL, and NetSuite are registered trademarks of Oracle and/or its affiliates.&amp;nbsp;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;9149a51f-6ad7-4a68-8c7b-f4fb23d4b282&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Presto® is a registered trademark of LF Projects, LLC.&lt;/em&gt;&lt;br&gt;&lt;br&gt;“&lt;a href=&#34;https://www.flickr.com/photos/95482862@N00/3889341309&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;1st Avenue traffic&lt;/a&gt;” by &lt;a href=&#34;https://www.flickr.com/photos/95482862@N00&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Oran Viriyincy&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/2.0/?ref=openverse&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CC BY 2.0&lt;/a&gt;.&lt;/p&gt;】&lt;h1 data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，”哈希：“ 7404D726-DEB9-4F91-BDE8-C282B1B4C7E2”} -block-neading“ id =” H-Instruction“&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 9663F6C7-9977-4746-AFB2-88DC6A604B87”，“ dropcap”&gt; presto &lt;sup &gt;®&lt;/sup&gt;是一种开源的，分布式的SQL查询引擎，旨在在任何大小的数据源上运行交互式分析查询，从千兆字节到pet。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 362E44F0-2468-4329-9435-FFED45E334CC”，“ dropcap”，“ dropcap”：false} Presto是各个部门数据分析的关键引擎。运营团队依靠它来进行仪表板，而Uber饮食和营销团队则使用其查询结果进行定价决策。 Presto对于Uber的合规性，增长营销和临时数据分析也是必不可少的，使其成为公司数据驱动的运营的基石。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1099424，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ aLign”：“” center&#34;,&#34;hash&#34;:&#34;6efcea4d-040e-40a3-95db-b0e9712dc5f3&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width= “ 1024” height =“ 611” src =“ https://blog.uber-cdn.com/cdn-cgi/image/mimage/width=2160,quality=80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/11/figure1-1730953686116-1024x611.png“ alt =” class =“ wp-image-1099424” srcset =“ https://blog.uber.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/image/width/width，1024 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige1-17309536886116.png 1024W，https：//blog.uber.uber-cdn.com/cdn-cdn-cgi/image/image/width= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige1-17309536886116.png 300W，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige1-17309536886116.png 768w，https://blog.uber.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/宽度= 1438，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige1-17309536886116.png 1438W“ sizes =”（max-witth：max-witth：1024px）100vw，1024px，1024px，1024px“ referrercolicy =” No-Referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图1：Uber Presto操作概述。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A703B98A-6D2B-4CCC-82EB-D5A6DF09DA59”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ eDe00cc6-18ce-4412-920c-aee41913e0d2”，“ dropcap”，“ dropcap”：false}在两个区域的10,000多个节点上有20个Presto簇，支持大约12,000个活跃用户。这些用户每天运行约500,000个查询，从HDFS读取大约100 pb。 Pres用于查询多个数据源，包括Apache Hive™，Apache Pinot™，MySQL &lt;em&gt; &lt;sup&gt;®&lt;/sup&gt; &lt;/em&gt;，以及Apache Kafka &lt;sup&gt;®&lt;/sup&gt;，通过其可扩展数据源连接器。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 4444406267-0F63-4BAA-4BAA-A9D5-B77758C76A709”，“ dropcap”&gt; dropcap“：false}”&gt;此博客描述Uber如何设计Presto Express来减少快速运行的Presto查询的端到端SLA。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 0AC6B117-F506-43B8-83D8-0FA524Bed549”，“ obcitice”，“ obcitice”：“ alpha-channel”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ 88CEB908-18A4-4DD9-A2DF-1A7D84AF4705”，“ level”：2} -Block-neading“ ID =” H-Problem-Statement“&gt;问题语句&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 0c3532d4-4c5a-4002-b66c-a45bab4126e3”，“ dropcap”，“ dropcap”：false} ，我们观察到Presto经历了数月的查询缓慢。为了解决这个问题，我们必须增加更大的能力。查询缓慢的问题是由节流引起的。为了防止‌Presto集群超载，我们具有限制可以同时在群集上运行的查询数量的并发限制。这会产生固定的管道，所有查询都必须在该管道中争夺一个位置。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099426，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ E8252F50-2846-496B-B962-E3D5F03D62DF”，“ ALT”：“}” class =“ AlignCenter size-large”&gt; &lt;img loading&gt; &lt;img loading =“ lazy” lazy&#39;dododing =“ “ 1024” height =“ 546” src =“ https://blog.uber-cdn.com/cdn-cgi/image/mimage/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-contents/uploads /2024/11/figure2-17309537151369-1024X546.png“ alt =” class =“ wp-image-1099426” srcset =“ https://blog.uber.uber.uber.urber-c.com/cdn-c.com/cdn-cgi/image/image/image/image/width，1024 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige2-17309537151369.png 1024W，https://blog.uber.uber-cdn.com/cdn-cdn-cgi/image/image/width= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige2-17309537151369.png 300W，https：//blog.uber.uber-cdn.com/cdn-cdn.com/cdn-cgi/image/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige2-17309537151369.png 768w，https://blog.uber.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/宽度= 1320，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige2-17309537151369.png 1320w“ size =”（max-width：1024px） No-Referrer”&gt; &lt;figcaption class =“ WP-元素caption”&gt;图2：高级Presto架构。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ be59cfe0）-8CCB-4B31-9C02-B3B710D3A12C“，” dropcap“：false}”&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7cacc5e8-7653-4247-ae97-0bfd9be6c6a4”，“ dropcap”，“ dropcap”：forse}要接受执行，它必须通过用户，消费者，群集和集群组级别的并发检查。传入的查询在验证后的Exeggutor中排队排队，并在prism释放出来，以进行路由，以便他们满足支票。对于特定的用户或消费者，查询以先到先得的方式处理。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 9B411A1F-1327-490E-B433-A40A3E3E3D9752”，“ dropcap”，“ dropcap”&gt;图3显示在7天的时间内，用户和消费者级别的限制进行了多少次。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099428，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ aLign”：“”中心“，”哈希：“ 170EE10E-7BF1-46D5-868A-75555AC029BC69”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 976” height =“ 470” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format = auto/wp-content/wp-contents/uploads /2024/11/figure3-3-17309538282644.png“ alt =” class =“ wp-image-1099428” srcset =“ https://blog.uber.uber..uber-cdn.com/cdn-cgi/cdn-cdn-cgi/image/image/width = 97667667676 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige3-3-3-17309538282644.png 976W，https://blog.uber.uber-cdn.com/cdn.com/cdn-c.com/cdn-cgi/image/宽度= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige3-3-3-17309538282644.png 300W，https://blog.uber.uber.uber-ber-cdn.com/cdn-cgi /image/width=768，Quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/11/figure3-3-3-17309538282644.png 768w“ size =” 976px“ reverrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图3：由于消费者和用户限制而限制了查询。&lt;/figcaption&gt; &lt;/fig&gt; &lt;/dig&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ A22287193-136A-4872-B6A3-AEF60A38E140”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 1B8962DB-8797-459F-827F-827F-7FA745D08832“，” dropcap“：false}”级别限制也会进行查询。例如，基于群集限制的批次低层查询的节点。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099430，“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“” center&#34;,&#34;hash&#34;:&#34;5ed08639-7998-4271-9efd-f1d0998f8228&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width= “ 1024” height =“ 429” src =“ https：//blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/11/figure4-17309539067428-1024x429.png&#34; alt=&#34;&#34; class =“ wp-image-1099430” srcset =“ https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80，onerror=rectect，formect，format，format = auto/wp-content/wp-content/uploads /2024/11/figure4-17309539067428.png 1024W，https：//blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 300，quality = 80，oonerror = redirctect，format = redirect，format = autto，format = aUto上载/2024/11/Figure4-17309539067428.png 300W，https://blog.uber-cdn.com/cdn-cgi/image/image/width=768,quality=80，oonerror = redirct，format = redirect，format eformat = auto/wp-content /UPLOADS/2024/11/figure4-17309539067428.png 768w，https://blog.uber.uber-cdn.com/cdn-cgi/cdn-cgi/image/image/width=1536,1536,quality=80，quality=80000,80,9内容/上载/2024/11/Figure4-17309539067428.png 1536W，https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 1600，quality = 80,80，horror = rediRect = rediRect = redirect，format = auto/wp -content/uploads/2024/11/figure4-17309539067428.png 1600W“ sizes =”（max-Width：1024px）100VW，1024px，1024px“ referrerpolicy =” no-referrer“ no-referrer”&gt;图4：由于群集的可用性而限制的查询。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 1C30A50D-D93B-4DA3-A39A-933D6104B49A”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 0d04af4b-d31c-4a7e-9dfb-9737ba45af6a”，“ dropcap”，“ dropcap”：false} 4显示了Presto查询必须经过的重要节流。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 76EDBD98-AD88-4ABA-81C5-81C5-8CA9DE8B569B”，“ dropcap”，“ dropcap”：false}在Presto查询潜伏期中，我们看到P50执行时间不到一分钟。在这里，执行时间仅是指presto中查询的运行时间，并且不包括Exeggutor中查询的任何排队时间。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1099432，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ aLign”：“” center&#34;,&#34;hash&#34;:&#34;c693237f-80b2-4767-86fc-22113301276c&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width= “ 1024” height =“ 279” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirect，format，format，format = auto/wp-content/wp-content/uploads /2024/11/figure5-17309539465304-1024x279.png“ alt =” class =“ wp-image-1099432” srcset =“ https://blog.uber.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/image/width/width，10124 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige5-17309539465304.png 1024w，https://blog.uber.uber-cdn.com/cdn-cdn-cgi/image/image/image/width= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige5-17309539465304.png 300W，https://blog.uber.uber-cdn.com/cdn-cdn-cgi/image/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/图5-17309539465304.png 768W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1056,quality=80，onerror=redirt = redirct，format = auto/wp-content/wp-content/uploads/2024/11 /figure5-17309539465304.png 1056w“ sizes =”（最大宽度：1024px）100VW，1024px，“ reverrerpolicy =“ no-referrer”&gt; &lt;figcaption&gt; &lt;figcaption class =“ wp- element-option =” wp- element-aption =“ wp-element-oft caption” /figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ D3990C25-AAFF-4918-A120-A120-A4F94F94F126FC7”，“ Dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1099433，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ 31C90169-3460-415A-A93D-9BF7166B37B2”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ “ 1025” height =“ 280” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/11/figure6-17309539701128.png“ alt =” class =“ wp-image-1099433” srcset =“ https://blog.uber.uber-cdn.com/cdn-cdn.com/cdn-cgi/image/image/image/image/width=1025,1025,1025,1125,1025， = 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige6-17309539701128.png 1025W，https://blog.uber.uber.uber-cdn.com/cdn-cgi/image/image/image/width = 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige6-17309539701128.png 300W，https://blog.uber.uber-cdn.com/cdn-cdn-cgi/image/image/width=768 ，质量= 80，OnError =重定向，格式=自动/wp-content/uploads/2024/11/fige6-17309539701128.png 768w“ size =”（max-width：1025px）100VW，100VW，1025px“ referrerpolypolycolicy =” no-no-re-re-repreferrerrerer “&gt; &lt;figcaption class =” WP-元素捕获&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 8cc9dae3-ea12-44ab-ad24bad24-beccefefefeac6f1ff”，“ dropcap”，“ dropcap”：false}}“&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 3F029991-97EC-4602-970D-0C3EBD997B6C”，“ dropcap”&gt;，这意味着那意味着在每天执行的大约500,000个查询中，超过一半的查询很容易在一分钟内轻松完成。为了减少这些快速运行的查询的队列时间，我们设计了一种新方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 8fa2ee6e-cb3f-456d-bb24-f11aaa8bde6d3“ class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ d28a19b8-6197-47a3-84d7-4bbf5555555555504a19”，“ -block-heading“ id =” H-endissify-express-queries&gt;识别express查询&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6731793b-83ba-450f-450f-af97-d24c25eafaeafa1414”，“ dropcap”，“ dropcap”：false} &lt;em&gt; express查询&lt;/em&gt;作为可以在2分钟内完成的任何PRESTO查询。到识别快递查询，我们使用历史数据开发了一种方法来预测即将到来的查询是否是明确查询。为此，我们使用了2天，5天和7天的查工窗口的查询窗口的确切指纹和抽象的指纹测试了P90和P95查询执行时间。在删除评论和空格之后，确切的指纹是一个查询哈希。抽象的指纹还可以从查询中删除字面价值。抽象的指纹可以识别来自同一管道或数据服务的类似查询，即使查询不相同。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 9DD17E03-1BC3-4008-4008-869C-04FD37436F29”，“ dropcap”：dropcap“：false}”&gt;我们使用了候选定义预测查询是否表现出来：&lt;em&gt;如果在最后y天的X运行时间基于Z指纹的时间少于2分钟。 &lt;/em&gt;，我们探索了&lt;em&gt; x &lt;/em&gt;的变化是p90或p95，&lt;em&gt; y &lt;/em&gt;是2、5或7，而&lt;em&gt; z &lt;/em&gt;是精确或摘要。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A37178A0-62F8-4DB3-9008-4EBD0C209CDE”，“ dropcap”：dropcap“：false}”&gt;这给了我们12个候选定义。为了比较各种候选人，我们将准确性定义为&lt;em&gt; true -agity/（true asperty +frese falus）&lt;/em&gt;，覆盖范围为&lt;em&gt;（true aspertain +fromical forade）/all &lt;/em&gt;。&lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099435，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ BC8F4F3D-6374-49B0-9BEF-60A13B107856”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading&gt; &lt;img loading =“ lazy lazy” dododing =“ “ 1024” height =“ 155” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format，format = auto/wp-content/wp-content/uploads /2024/11/figure7-1730954050346-1024x155.png“ alt =” class =“ wp-image-1099435” srcset =“ https://blog.uber.uber.uber-cdn.com/cdn-c.com/cdn-cdn-cgi/image/image/image/width/width/width，10124 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige7-1730954050503346.png 1024W，https://blog.uber.uber.uber-cdn.com/cdn-cdn-cgi/image/image/width = 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige7-1730954050503346.png 300W，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige7-173095405033346.png 768w，https://blog.uber.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/宽度= 1536，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige7-17309540503346.png 1536W，https://blog.uber.uber.uber-ber.ulber-cdn.com/cdn-c.com/cdn-cgi/image /width=2048，Quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/11/figure7-17309540503346.png 2048w，https：///blog.uber.uber.uber-cdn.com/cdn.com/cdn-cggi/图像/宽度= 2064，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige7-17309540503346.png 2064W“ size =”（max-tidth：1024px）100vw，1024px，1024px”referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ WP元素捕获”&gt;图7：表示快递查询的预测的混淆矩阵。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 9583E821-8ED3-4CFE-9D7E-9D7E-EABF618930F6”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 13BB5569-844B-4167-B5D4-ED725A20A500”，“ dropcap”，“ dropcap”：false}预测的准确性，我们编写了一个SQL查询来分析历史数据并提出预测。在分析中，我们发现抽象指纹的P90值使用为5天的回顾窗口提供了最佳的准确性和覆盖范围，其值分别为95.7％和48.99％。因此，我们决定将此查询用作明确查询前进的主要指标。通过实施这种优化的方法，我们可以更好地预测和确定明确的查询。我们将继续监视和完善我们的模型，以确保其持续的准确性和有效性。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099436，“ width”：“ 606px”，“高度”：“自动”，“ sizeSlug”：“”完整”，“ linkDestination”：“无”，“ ALIGN”：“中心”，“ HASH”：“ 991B38AA-3E33-41E6-BF6C-C93B2CDBAAEE”，“ ALT”：“”} class =“ AlignCenter size-full固定的“&gt; &lt;img loading =“ lazy” decoding =“ async” width =“ 2024” height =“ 758” src =“ https：//blog.uber.uber-cdn.com/cdn-cgi/image/image/width = = 2160，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige8-17309540801369.png“ alt =“ class =” class =“ wp-image-1099436高度：自动“ srcset =” https://blog.uber-cdn.com/cdn-cgi/image/width=2024,quality=80, ererror=redirect，format，format = auto/wp-content/wp-content/uploads/uploads/2024/11 /FIGURE8-17309540801369.PNG 2024W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=300,quality = 80，onerror = redirt = refform = reformect，format = auto = auto/wp-content = auto/wp-content/wp-content/uploads/upploads/2024/2024//2024// 11/figy8-17309540801369.png 300W，https：//blog.uber-cdn.com/cdn-cgi/image/width=1024,quality = 80，onerror=redirt = redrect reform = reformat = autat = auto/wp-content/wp-content/wp-content/uploads/2024 /11/figure8-17309540801369.png 1024W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width = 768,quality=80，quality=80，oonerr = redirtirt = redirct，formect，formect，formect，format = auto/wp-content/wp-content/wp-content/wp-content/wp-content/uploads/ 2024/11/fige8-17309540801369.png 768W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1536,quality=80，quality=80，oonerr = redirtirect，formect，formect，formect，format = auttomet = autto = auuto/wp-contents/uploads /2024/11/figure8-17309540801369.png 1536W“ sizes =”（最大宽度：2024px）100VW，2024px，2024px“ referrerpolicy =“ no-referferrer”结果。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ da10709d-d9bc-40f5-9720-f5-9720-f333244bf93”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 7BFDA52E-77D3-44EF-44EF-AE44-155D50EB852C“，” dropcap“：false}”&gt;我们在查询事件主题中的摄入数据中添加了一个水槽，可以实时查询pinot表。现在，当查询Presto时，我们可以使用图9所示的Pinot查询来确定该查询是否表达&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099438，“ width”：“ 489px”，“高度”：“自动”，“ sizeSlug”：“”大”，“ linkdestination”：“无”，“对齐”：“中心”，“哈希”：“ 722BD5E0-5123-49E7-9C22-0BD1E0E6DB3E”，“ ALT”，“ ALT”：“}” class =“ AlignCenter size-large固定的“&gt; &lt;img loading =“ lazy”解码=“ async” width =“ 1024” height =“ 403” src =“ https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 2160，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige9-17309541541205-1024x403.png“ alt =“ class =” class =“ WP-Image-1099438” 489px;高度：自动“ srcset =” https：//blog.uber-cdn.com/cdn-cgi/image/image/width=1024,quality=80，onerror = redirct，format，format，format = auto/wp-content/wp-content/wp-content/wploads/2024 /11/figure9-17309541541205.png 1024W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=300,quality = 80，yerror = redirt = redirct，format = autot = auto/wp-content/wp-content/wp-content/wp-content/uploads//uploads//uploads//uploads/ 2024/11/fige9-17309541541205.png 300W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=768,quality = 80，yerror = redirt = redirct，formect，format eformat = autt = auto/wp-content/wp-content/wp-content/uploads /2024/11/figure9-17309541541205.png 768w，https：//blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 1424,quality=80，quality = 80，onerror = redirctect，format = redirect，format = auto comp.format = auto/wp-content/wp-content/上载/2024/11/Fige9-17309541541205.png 1424w“ sizes =”（最大宽度：1024px）100VW，1024px，“ referrerpolypolycy =” no-referferrer =“ no-referferrer”&gt; Pinot查询确定查询是否表达。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 027E4244-1BCB-4347-9A6B-90F526CD71F0”，“ dropcap”，“ dropcap”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ B49D8A0D-5A68-43C2-8D98-7C3BF8263547”，“ dropcap”：false} &lt;em&gt; _count &lt;/em&gt;确保我们至少基于查询的至少5次运行进行预测。如果我们超过的百分位数少于2分钟，并且计数大于5，则该查询被认为是明确的查询。由于Pinot表具有过去90天的确切指纹和数据，因此我们可以轻松地更改使用精确指纹的方法，即不同的百分位和/或更大或更小的回顾窗口。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ FF22CBDF-FBD3-4407-A770-22221A791D665”，“ Dropcap”&gt; dropcap“：false}”&gt;使用历史数据进行预测，我们将无法准确预测系统的新查询。但是，对于批处理工作负载来说，这不是问题，大多数查询都被安排并在集合中重复频率。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 16705EBC-8773-4F1E-9057-9057-9057-9EC541D55E3F”，“ dropcap”，“ dropcap”&gt; QUERY PEDICTION PEDICTION PEDICTION PEDICTION PEDICTION PEDICTION PRICTICA延迟非常小，大多数预测都在100毫秒以下进行。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099440，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ 08270D34-F370-49E2-A1EC-34A26779AEF7”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 748” height =“ 299” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-content/uploads /2024/11/figure10-17309544008135.png“ alt =” class =“ wp-image-1099440” srcset =“ https：//blog.uber.uber-cdn.com/cdn-cdn.com/cdn-cgi/image/image/image/image/width=748,8,8,8,8,, qual = 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige10-173095444008135.png 748w，https://blog.uber.uber.uber-cdn.com/cdn-cgi/image/image/image/image/width = 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige10-17309544008135.png 300W“ sizes =”（max-width：748px）100VW，748px，748px“ referrerpolicy&#39;reverrerPolicy =“ no-referrerer” &gt; &lt;figcaption class =“ WP-元素捕获”&gt;图10：表达查询延迟。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 98739c05-5aba-4185-8b37-8b37-3f43348e25ed”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ AE811D7A-E2FF-473F-88E4-33513D099CE6”，“ opitical class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ 6868cbd6-1500-4e6d-9fe6fe6-518599583eb7”，“ level”级别“：2} -Block-neading“ ID =” H-Initial-Express-Design”&gt;初始Express Design &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ Express功能的设计，我们将现有的批处理簇之一指定为Express群集，并在Prism中添加了上述逻辑，以确定是否征询查询，并应将其发送到Express簇。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1102105，“ width”：“ 559px”，“高度”：“自动”，“ sizeSlug”：“”大”，“ linkDestination”：“无”，“ ALIGN”：“ CENTER”，“ HASH”：“ 1ED7E1FC-8D4E-448D-A701-24D765EC8A8DA8D”，“ ALT”：“”} class =“ AnignCenter size-large）固定的“&gt; &lt;img loading =“ lazy” decoding =“ async” width =“ 1024” height =“ 664” src =“ https://blog.uber.uber-cdn.com/cdn-cgi/image/image/image/width = = 2160，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige11.ng-1734553239493-1024x6644x664.png“ alt =” class =“ wp-image-11102105” style =“ width：559px; height; height; height：auto“ srcset =” srcset =“ .com/cdn-cgi/image/width = 1024，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/11/fige11.ng-17345532339493.png 1024w，https：//博客。 uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror = redirct，format = auto/wp-content/uploads/2024/2024/11/figure11.ng-1734555553239493.png 300w，https：/https：/https：/https：/https：/https：/https：/ /blog.uber-cdn.com/cdn-cgi/image/width = 768，quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/2024/11/figure11.ng-17345555532339493.png 768w，768w， https://blog.uber-cdn.com/cdn-cgi/image/width = 1532,quality=80，onerror=redirt = redirect，format = auto/wp-content/uploads/2024/2024/2024/11/figure11/figure11.ng-1734555553233339493。 PNG 1532W“ sizes =”（最大宽度：1024px）100VW，1024px“ referrerpolicy =“ no-referferrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图11：初始Presto Express Design的高级体系结构。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ C4E8797A-6709-4664-85AD-85AD-8F4D1408CC8D”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 00d92174-ee7-448d-ad31-046104e42c54”，“ dropcap”：dropcap“：false}”&gt;方法面临几个问题：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name =“ core/list” data-wp-block =“ {” ordered“：true，hash”：“ C2404B55-5C61-4955-A504-A504-A504-07A2ACAFFA7E”，“值”，“值”值“}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt; &lt;strong&gt;少&gt; &lt;/strong&gt;：Express cluster的运行明显低于其全容量，使用CPU使用徘徊在约20％的情况下，而其他低层簇的运行量接近90％。这种差异在指标中显而易见，表明batch3_b20b的CPU使用情况明显下降，该差异被指定为Express群集。这种情况强调了Express Cluster资源的实质性遗憾。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 5F3B978C-28C8-4FEF-8A25-E9640346208E”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1099444，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ aLign”：“”中心“，” hash”：“ 4CAF5909-A40B-436F-BA42-CCF867E9CEC7”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 908” height =“ 334” src =“ https://blog.uber-cdn.com/cdn-cgi/image/mimage/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-content/uploads /2024/11/figure12-17309544759023.png“ alt =” class =“ wp-image-10994444” srcset =“ https://blog.uber.uber-cdn.com/cdn-cgi/cdn-cdn-cgi/image/image/image/width = 908,08， = 80，onError =重定向，格式= auto/wp-content/uploads/2024/11/fige12-17309544759023.png 908W，https：//blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,180, ererr = ReDirtect，formect，format = auto/wp-content/wp-content/wp-content/uploads/2024/2024/11/figure12 -17309544759023.png 300W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=768,quality=80，onerror = redirt = redirct，format = autot = auto/wp-content/wp-content/uploads/2024/11/2024/11/2024/11/ figif12-17309544759023.png 768w“ sizes =”（最大宽度：908px）100VW，908px，908px“ referrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-aption =” wp- element-aption =“ wp- element-aption” 。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 5F3B978C-28C8-4FEF-8A25-E9640346208E”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name =“ core/list” data-wp-block =“ {“ ordered”：true，“ start”：2，“ hash”：“ 1AD2BEA0-E454-4A93-BADC-253A4775A39D0” ，“ values”：“”}“ start =“ 2” class =“ wp-block-list”&gt;&#xA;&lt;li data-data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;我们的方法仅限于在执行过程中仅包含快递标签队列。这种监督导致我们的系统仍在消费者和用户限制内。矛盾的是，尽管是为了快速查询而设计的，但由于达到这些限制而经常闲置。因此，其他集群因查询负荷增加而加剧了这种情况。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099445，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ 8B6E5608-EEB2-4185-97E6-DE6FAC2DC001”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 926” height =“ 295” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-content/uploads /2024/11/figure13-17309544934077.png“ alt =” class =“ wp-image-10994445” srcset =“ https://blog.uber.uber.uber-cdn.com/cdn-cdn.com/cdn-cdn-cgi/image/image/width/width = 926,quality = 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige13-17309544934077.png 926W，https：//blog.uber.uber.uber-cdn.com/cdn-cdn-cgi/image/image/width = 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige13-17309544934077.png 300W，https://blog.uber.uber.uber-cdn.com/cdn-cdn-cgi/image/image/width = 768 ，质量= 80，onError =重定向，格式=自动/wp-content/uploads/2024/11/fige13-17309544934077.png 768w“ sizes =”（max-width：max-width：926px）100VW，926px“ 926px” reverrerpolicy =“ not-notrerpolicy =” not-referrerrerer “&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图13：每个集群的每日查询计数。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ d6eaca6e-10fc-46e4-a657-8f8f8ad62ca41e”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 094FA422-0AD4-43E4-43E6-AA28-AA28-A61C264727C6”，“ DROPCAP”&gt;我们的初始尝试揭示了c会议见解。即使超过50％的低层批次查询是明确的查询，但它们消耗的CPU却少得多。分配给表达和非表达查询的资源应符合这些查询的CPU要求。除此之外，仅仅通过从非表达查询中的快递查询的运行时隔离来解决，就无法解决Express查询所经历的放缓。 ‌表达查询需要在上游系统（EXEGGUTOR）中自己的队列，因此，对于用户或消费者的明确查询不会被较早发送的同一用户或消费者的非express询问所阻止。&lt;/p&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 2DDFFF7FC-76B6-4FC9-84A4BB919995EA220”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}“}”}“}”} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ 0931343F-C3A3-4D4E-859E-859E-74759D81157F”，“ LEVEL”，“级别”：2} class =“ class =” WP -Block-neading“ ID =“ H-Final-Design”&gt;最终设计&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1102107，“ width”：“ 534px”，“高度”：“自动”，“ sizeSlug”：“”大”，“ linkdestination”：“无”，“对齐”：“中心”，“ hash”：“ 678DBD1-E0B8-4617-AA3D-B8C75558B61BE”，“ ALT”：“”} class =“ AnignCenter size-large）固定的“&gt; &lt;img loading =“ lazy” dexoding =“ async” width =“ 1024” height =“ 559” src =“ https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width = = 2160，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige14-17345532572712-1024x55599.png“ alt =” alt =“ class =” class =“ WP-Image-102107” 534px;高度：auto“ srcset =” https://blog.uber-cdn.com/cdn-cgi/image/image/width=1024,quality=80，onerror = redirct，format，format，format = auto/wp-content/wp-content/wp-content/wploads/2024 /11/figure14-17345532572712.png 1024W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width = 300,quality=80，quality = 80，onerror = redirct，formect，formect，formect，formect，formaT = autto = auto/wp-content/wp-content/wp-content/uploads/ 2024/11/fige14-17345532572712.png 300W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width = 768,quality=80，quality=80，oonerr = redirtirt = redirct，format inforct，formect，formect，formect，format = autto = autto = auuto/wp-contents/uploads /2024/11/figure14-17345532572712.png 768W，https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width = 1536,quality=80，onerror = rediRect = rediRect，form = rediRect，form corm form corm form corm form corm to uploads/2024/11/fige14-17345532572712.png 1536w，https://blog.uber.uber-cdn.com/cdn-cgi/image/image/width=1672,quality=80，quality=80，onError = rediRect = rediRect = redirct，form corm form corm formt = auto/wp-content /UPLOADS/2024/11/figure14-173455532572712.png 1672W“ sizes =”（max-width：1024px）100VW，1024px，1024px“ referrerpolicy =” no-referrer =“ no-referrer”&gt; ：Presto Express最终设计的高级体系结构。&lt;/figcaption&gt; &lt;/fig&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 6112F0E8-9203-4039-A266-CC02FD3919A8”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 480a）A367-A35C-4168-8DC1-06523EF0F5BA“，” DropCap“：false}”&gt;在当前正在生产中的最终系统中，我们创建了一个由Exeggutor中的快速查询的单独的排队，该快速查询与一组小型表达簇相匹配。明确确定是在查询验证本身时完成的，如果适用，查询将添加到明确队列中。 Express队列具有更高的用户或消费者级的并发率，使其与非表达查询相比，它们运行得更多。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ A4C20D41-AEF7-48AA-B7B9-1F0A77777771C90F”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}“}”}“}”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {” hash&#39;：“ ad1c1bf3-c163-4fa9-9c9a-6c9a-6Adf9a5552926”，“ level”级别“：2} -Block-neading“ ID =“ H-Impact”&gt; Impact &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 30A77CD0-49ED-42B8-AE12-ABF86F86F86F258A42”，“ dropcap”，“ dropcap”：false}功能仅适用于批次低层查询。低层快递群集使用了总批量低层Presto资源的10％，但它们运行了大约75％的低层查询。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099448，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ 9C5C17E2-C33F-4D4D-BE07-656B6F57CA9B”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 738” height =“ 254” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/11/figure15-17309545442114.png“ alt =” class =“ wp-image-1099448” srcset =“ https://blog.uber.uber-cdn.com/cdn-cdn.com/cdn-cgi/image/image/image/image/width=738,8,8,8， = 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige15-17309545442114.png 738w，https://blog.uber.uber.uber-cdn.com/cdn-cgi/image/image/image/width = 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige15-173095454442114.png 300W“ sizes =”（max-width：738px）100VW，738px“ referrerPolerpolicyCeledrerPolyCilyCy =” no-redreferrerrerer&#39; &gt; &lt;figcaption class =“ WP-元素捕获”&gt;图15：比较本地批处理低层中快递和非表达查询的查询计数。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 751CA32E-6E42-417B-8213-6666EC4F41D30A”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ C312EBFE-1DA5-441E-AD78-677273FABF40”，“ dropcap”，“ dropcap”：false}对使用者更好的SLA。 p90快速查询的排队时间约为10秒，而非表达查询的数小时可能是在数小时内。图16中的01:37:06指1小时37分钟和6秒s。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099450，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ align”：“中心“，”哈希：“ E359B75C-CC8E-4C11-AC25-4777775DB113”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 746” height =“ 258” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format efformat，format = auto/wp-content/wp-content/uploads /2024/11/figure16-17309545843619.png“ alt =” class =“ wp-image-1099450” srcset =“ https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/image/width=746,quality = 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige16-17309545843619.png 746W，https://blog.uber.uber.uber-cdn.com/cdn-cdn-cdn-cgi/image/image/width = 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige16-17309545843619.png 300W 300W“ sizes =”（max-width：746px）100VW，100VW，746px“ referrerPolerPolicy =” no-no-Referrerrerrer&#39; &gt; &lt;figcaption class =“ WP-元素捕捉”&gt;图16：比较express和非表达查询的P90排队时间。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/figie&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 6F4B46CD-C162-4744-97D7-3F17CB9C41C7”，“ dropcap”，“ dropcap”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 7E4F3A4C-EB4C-4C-4057-98BB-2F77756F07C96”，“ dropcap”&gt; p90&gt; P90运行明确查询的时间显然也很少，而快速查询为用户提供了更好的端到端SLA。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1099419，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ aLign”：“”中心“，”哈希：“ F75CA99A-2D3B-4A3E-BB11-539EDDE28E97”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 737” height =“ 249” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality = 80，onerror = redirct，format，format = auto/wp-content/wp-content/uploads /2024/11/figure17-17309527374882.png“ alt =” class =“ wp-image-1099419” srcset =“ https://blog.uber.uber-cdn.com/cdn-cdn-cgi/image/image/image/image/width = 737,quality = 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige17-173095273748882.png 737W，https://blog.uber.uber.uber-cdn.com/cdn-cdn-cgi/image/image/width/width = 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/11/fige17-173095273748882.png 300W“ sizes =”（max-width：737px）100vw，100vw，737px“ referrerpolerpolicy =” no-no-re-repreferrerrerer&#39; &gt; &lt;figcaption class =“ WP-元素caption”&gt;图17：比较‌ express和非express查询的p90运行时。&lt;/figcaption&gt; &lt;/figic&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ ACE869BC-C889-43D0-AAEEF-BDDBDBEDBEEF0F7C6”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 0626068b-e055-455c1-9294-c1BC1BCDA29A592”，“不透明度”：“ alpha-channel”}“ class =” wp-block-eparator has-alpha-channel-opacity&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ 907E8A8B-E7E4-4BC8-8272-33C015204A31”，“级别”，“级别”：2} -block-heading“ id =” H-Next-steps-nbsp“&gt;下一步&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 33c06a69-2ff8-480e-a2b9-defc925f6af5”，“ dropcap”，“ dropcap”：false} ，我们想查看分离Express群集组。在我们当前的实施中，快递簇是主要集群组的子组，例如批处理低层，批处理高层和交互式。这个想法是每个集群组都有自己的快速群集。但是，根据我们在生产方面的经验，‌Express可以是一个单独的集群组，而不是作为亚组。因此，无论查询是批量高层，低层还是交互式查询，都应将快速查询发送到此集群组。原因是：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {” hash&#39;：“ 521B9E82-A6A7-4C3B-8A14-488887ECDE79BE”，“ ordered”，“ ordered”：ordered&#39;：ordered&#39;：forde&#39;：fords&#39;：false“：false，“ values”：“：”：“：” “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;当前的快递簇似乎具有较低的利用率，并且可以运行更多的查询。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt;简化的路由逻辑。我们可以确定查询在查询提交时间上表达并将其路由到此集群组。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; Express系统给出的SLA足够低，以至于我们不需要区分批处理和交互式查询。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ F339DA68-8805-4E0E-8386-079807070F209F”，“ dropcap”&gt; dropcap“：false}”&gt;到目前为止，到目前为止，我们只有在Express和非表达查询之间进行区分，但是我们可以进行更多的分类，例如小型/中/大，每个分类都可以转到一个单独的群集组。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 485BC75D-25B2-25B2-42B8-9EC0-38FBFEBD549B”，“ dropcap”，“ dropcap”：false} &#39;重新探索是查询成本预测。历史数据一直是我们预测查询是否符合明确查询的主要工具。拥有历史数据可能是交互式工作负载的挑战。为了解决这个问题，我们可以利用机器学习模型来确定是否应将传入查询归类为明确的查询。通过集成高级算法，我们可以准确评估新查询的性质，确保更精确和及时的分类，即使是我们系统中以前看不见的查询。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 6C4A2EC0-107E-4ACC-90ED-4FA63CA40F51“，“不透明度”：“ alpha-channel”}“ class =” wp-block-separator has-alpha-channel-opacity&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：1，”哈希：“ b9ccff27-56a3-49fd-93c8-34ff75280f3e”} -Block-neading“ ID =“ H-Conconclusion”&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ FDFD207E-F816-48BA-8746-E0A2BBD337EC”，“ dropcap”，“ dropcap”：false} Uber的Presto Express的设计和实施旨在减少端到端SLA的短运行查询。我们讨论了如何定义明确的查询，它们如何集成到整体生​​态系统中以及我们遇到的挑战。此外，我们强调了通过我们的部署实现的性能增长，Presto Express在端到端SLA方面提供了超过75％的计划查询的质量提高。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ E5F6E121-EAE9-4740-A6D8-67A6D8-67A6D5B36F5F”，“ ：false}“ class =” hap-small-font-size”&gt; &lt;em&gt; apache &lt;sup&gt;®&lt;/sup&gt;，apache kafka &lt;sup&gt;®&lt;/sup&gt;，apache hive hive &lt;sup&gt;™&lt;/sup&gt;™&lt;/sup&gt; ，Apache Pinot &lt;sup&gt;™&lt;/sup&gt;是美国和/或其他国家/地区Apache软件基金会的注册商标或商标。使用这些标记，Apache软件基金会没有任何认可。&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ C01F2C0C-F857-45B1-B1-B6C0-3C744EAK6C744EA6333341，“ DROPCAP” ：false}“ class =” hap-small-font-size&gt; &lt;em&gt; oracle，java，mysql和netsuite是Oracle和/或其分支机构的注册商标。 &lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 9149A51F-6AD7-4A68-4A68-8C7B-F4F4F4FB23D4B282 ：false}“ class =” hap-small-font-size&gt; &lt;em&gt;presto®是LF Projects，LLC的注册商标。&lt;/em&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;“ &lt;a href =” /www.flickr.com/photos/95482862@n00/3889341309“ target =“ _ blank” rel =“ noreferrer noopener”&gt; 1st Avenue clocer /photos/95482862@n00“ target =“ _ blank” rel =“ noreferrer noopener”&gt; oran viriyincy &lt;/a&gt;在&lt;a href =“ https://creativecommons.org/commons.org/license/license/byby/2.0/?ref-2.0/?ref2.0/？ref=下，已获得许可openverse“ target =” _ blank“ rel =“ noreferrer noopener”&gt; cc by 2.0 &lt;/a&gt;。&lt;/p&gt;</description>
      <pubDate>Thu, 07 Nov 2024 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Genie: Uber’s Gen AI On-Call Copilot】Genie：Uber Gen AI呼叫副驾驶</title>
      <link>https://www.uber.com/blog/genie-ubers-gen-ai-on-call-copilot/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;e7b16816-7feb-4864-8765-c97c5e712233&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;83ceaad1-2639-48b3-a7fe-b65336676e02&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In today’s fast-paced tech environment, maintaining robust on-call operations is crucial for ensuring seamless service functioning. Modern platform engineering teams face the challenge of efficiently managing on-call schedules, incident response, communication during critical moments, and strong customer support on Slack&lt;sup&gt;®&lt;/sup&gt; channels.&lt;br&gt;&lt;br&gt;This post describes Genie, an on-call copilot we built that uses generative AI to optimize communication and question-answering with on-call engineers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;44f18be0-34d4-4eea-b7dc-a66f7c356686&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4d9ace85-d435-4f79-bc16-ca7545517062&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-a-closer-look-problem-and-motivation&#34;&gt;A Closer Look: Problem and Motivation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e42ca7aa-2298-49d4-bb40-466989b1deb0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At Uber, different teams like the Michelangelo team have Slack support channels where their internal users can ask for help. People ask around 45,000 questions on these channels each month, as shown in Figure 1. High question volumes and long response wait times reduce productivity for users and on-call engineers.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097494,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;139eb3c9-7dca-4316-842f-78d479d072dc&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;636&#34; height=&#34;233&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure1-17285117876372.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097494&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=636,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure1-17285117876372.png 636w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure1-17285117876372.png 300w&#34; sizes=&#34;(max-width: 636px) 100vw, 636px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: The high number of questions asked across Slack channels at Uber over 5 months.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6f3202a6-b275-41b8-afd6-a034baa192bd&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;392586df-9bd9-4f14-9628-730f13b3e53f&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-cumbersome-process&#34;&gt;&lt;br&gt;Cumbersome Process&lt;/h3&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097496,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;6e32b91d-85cf-49bf-8b23-04b1a787fca6&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;864&#34; height=&#34;281&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure2-17285118129665.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097496&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=864,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure2-17285118129665.png 864w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure2-17285118129665.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure2-17285118129665.png 768w&#34; sizes=&#34;(max-width: 864px) 100vw, 864px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: The slow process of waiting for an on-call engineer to answer a question.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;52bc6081-d1db-42d1-bb04-bcb7387358df&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;br&gt;Typically, when users ask a question in a Slack channel, they have to wait for the on-call engineer to respond. The on-call engineer either answers the user’s initial question or asks for more details. Users might then ask follow-up questions, seek more clarification, or provide extra information. This leads to another wait for a response from the on-call engineer. After several rounds of back-and-forth communication, the user’s question eventually gets resolved.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;53b2c110-525b-4ae2-bffd-f2b6d5be6e8a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e2b1d2ee-bf35-4150-b995-3e291c9948a7&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-hard-to-find-information&#34;&gt;Hard to Find Information&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;555a7e9d-308d-498a-9d0c-d3d06c52b16a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Many questions could‌ get answered by referring to existing documentation, but the information is fragmented across Uber’s internal wiki called Engwiki, internal Stack Overflow, and other locations, making it challenging to find specific answers. As a result, users often ask the same questions repeatedly, leading to a high demand for on-call support across hundreds of Slack channels.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;523bac00-5e5d-419b-a101-3509db9a4c45&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c65afede-93c3-465d-8b31-e8add6c3edb8&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architectural-challenges&#34;&gt;Architectural Challenges&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fdeaec3c-30d5-4218-af3b-8ca8990f0898&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For building an on-call copilot, we chose between fine-tuning an LLM model or leveraging &lt;a href=&#34;https://www.anyscale.com/blog/a-comprehensive-guide-for-building-rag-based-llm-applications-part-1&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Retrieval-Augmented Generation (RAG)&lt;/a&gt;. Fine-tuning requires curated data with high-quality, diverse examples for the LLM to learn from. It also requires compute resources to keep the model updated with new examples.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;744ef140-d7d0-4aea-8221-b3b3ea0f9688&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In contrast, RAG doesn’t require any diverse examples to begin with. This reduced the time to market for the copilot launch, so we chose this approach for our copilot.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;99175e3c-e91c-45cc-aa82-2be9b7386c35&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Building an on-call copilot presented several challenges, including addressing hallucination, protecting data sources, and improving the user experience. Here’s an overview of how we solved each challenge.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e9110a7c-4bf5-454c-bb29-41de6910fdff&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For hallucination, we focused on:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eedf199c-34fc-47a2-8b5c-1af71d316e77&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Accuracy of responses&lt;/strong&gt;: We ensure that the copilot retrieves relevant knowledge for the question, which prevents the LLM engine from generating incorrect or misleading information&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Verification mechanisms&lt;/strong&gt;: We implement methods to verify the copilot’s responses against authoritative sources to reduce the likelihood of hallucination&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Continuous learning&lt;/strong&gt;: We ensure that the copilot has access to the most updated data to enhance its accuracy&lt;br&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;079a03e0-3175-42d9-a799-f2db1cbd69f4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For data security, we chose the data sources to ingest carefully, as many data sources can’t be exposed in Slack channels.&lt;br&gt;&lt;br&gt;To improve the user experience, we designed:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9b32f175-7af2-4cb8-a3fd-e478d6c979b6&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Intuitive interface&lt;/strong&gt;: We designed an easy-to-use interface that allows users to interact with the copilot efficiently&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Feedback loop&lt;/strong&gt;: We created a system for users to provide feedback on responses to continually refine the copilot’s performance&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;544fa9a3-d103-49f1-bd3f-0ea3e60a5fe7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We addressed these challenges when developing our on-call copilot to ensure that it’s reliable, user-friendly, and secure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8595d9fd-d250-4111-a0ae-c65a880b660f&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;775af645-d734-43db-8617-596ded3f17e1&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-deep-dive-architecture&#34;&gt;Deep Dive: Architecture&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e3acd865-7c12-403d-a1dd-c12e0cfd66a5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Let’s explore the architecture of our on-call copilot, called Genie.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097498,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;b1baea01-32a1-4ee9-ac99-52df5911b2a8&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;443&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure3-3-17285118456072-1024x443.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097498&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure3-3-17285118456072.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure3-3-17285118456072.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure3-3-17285118456072.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure3-3-17285118456072.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2000,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure3-3-17285118456072.png 2000w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Architecture of the on-call copilot.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;18321915-dd26-4e3e-9ea7-3905b8a51726&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;418a7ac1-114d-4079-bebe-6277461f0ad5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At a high level, we scrape internal data sources like Uber’s internal wiki, Uber’s internal Stack Overflow, engineering requirement documents, and create vectors from these data sources using an Open AI embedding model. Those embeddings get stored in a vector database. Then, when a user posts a question in a Slack channel, the question gets translated to embeddings. The service searches for relevant embeddings related to the question in a vector database. The results indexed by embeddings get used as prompts to the LLM to get back a response.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bbbba4d6-3bfb-47db-8917-95748eba02b5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The following steps for data prep, embeddings, and pushing the artifacts for serving can be generalized as a RAG application using Apache Spark&lt;sup&gt;™&lt;/sup&gt;. These general steps form the basis of a RAG application.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;94026da2-9931-4e3e-852b-dcd6665156ea&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7ccaf504-43aa-4a72-a0d6-96471408651e&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-etl&#34;&gt;ETL&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097500,&amp;quot;width&amp;quot;:&amp;quot;521px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;aspectRatio&amp;quot;:&amp;quot;4\/3&amp;quot;,&amp;quot;scale&amp;quot;:&amp;quot;cover&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;c2dadb8f-040e-4a17-afd8-3cf88890e063&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;816&#34; height=&#34;1024&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure4-17285118719035-816x1024.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097500&#34; style=&#34;aspect-ratio:4/3;object-fit:cover;width:521px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=816,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure4-17285118719035.png 816w, https://blog.uber-cdn.com/cdn-cgi/image/width=239,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure4-17285118719035.png 239w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure4-17285118719035.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=940,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure4-17285118719035.png 940w&#34; sizes=&#34;(max-width: 816px) 100vw, 816px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Spark application for data ingest.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a3677069-38fe-4d57-9b36-6ee85aeb3ea8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;78d8d942-525e-4c13-ab8d-79d3d980353d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 4 shows a custom Spark application that contains the steps for ingesting data to a vector database. A Spark application runs those steps using Spark executors.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;2e768fa5-c1b6-4c6a-ba46-d642732c1be9&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-data-prep&#34;&gt;&lt;br&gt;Data Prep&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a5923920-e1e5-4281-8a97-4821b2ae661f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A Spark app fetches content from the respective data source using Uber’s internal wiki, called Engwiki, or Uber Stack Overflow APIs. A Spark dataframe gets outputted from this data prep stage. The schema has the Engwiki link in a column and the content of the Engwiki in a separate column, both in string format.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097502,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;abbd21e9-5275-4ac1-8273-11af89807749&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;220&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure5-17285119354055-1024x220.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097502&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure5-17285119354055.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure5-17285119354055.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure5-17285119354055.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1284,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure5-17285119354055.png 1284w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Columns of the Spark dataframe from the Engwiki datasource.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d307d345-ce2b-4274-af28-d2713e6f8005&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a0213e51-4c9b-4bea-9c22-fde19d3849ff&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 5 shows the columns of the Spark dataframe with Uber’s internal wiki as the original data source. It has the source URL, content, and other columns storing metadata.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;900833c0-b219-4f9b-bf03-a6c037e70413&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-embedding-generation&#34;&gt;&lt;br&gt;Embedding Generation&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fa364112-7193-470a-ae5d-1120d6bd5e94&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Once the data is scraped, embeddings get created using the OpenAI embedding model and pushed to Terrablob, Uber’s blob storage. The embeddings created are only accessible through a particular Slack channel related to the Engwiki space. The output format is a dataframe with a schema of chunked content mapped to the corresponding vector of that chunk. Uber’s internal wiki content is chunked using langchain and embeddings are generated through OpenAI with PySpark UDFs.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;95723f82-760a-4697-ac97-71700d164769&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf4DX2PBW9iHR6npUbfBZlpuNq7pEZ9stydlXT94UlJNgeLsPs3n6gwe1rcsSDFCWKDKYiQ9JS1NNt6wPCkjbmB3K4NrFXd5Ql16Y8Fmdf3OkPwPcl7yppTkl7DznlJnWAbxu6bswf3dhwIukjV--SLHag?key=Cul8rOkHqArI5wi0MdurWQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Columns of the Spark dataframe with vector embeddings.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;df3248a1-b648-4a1e-8d38-14ddc846a9a5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d26434ed-fb67-4781-969b-18478fa7b608&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 6 shows the columns of the Spark dataframe with Uber’s internal wiki as the original data source. It has the source URL, content, chunked content, and embeddings for that particular chunk.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a42e77cd-a2e6-490f-b6f1-500a195f2d66&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8422f718-6035-4458-b9d6-d150217f2714&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-pusher&#34;&gt;Pusher&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097505,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;15bc5c0c-6300-4e90-9ff1-4000afc37ea7&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;456&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure7-17285121216461-1024x456.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097505&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure7-17285121216461.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure7-17285121216461.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure7-17285121216461.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1399,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure7-17285121216461.png 1399w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Flow of vectors getting pushed to Terrablob.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;925589cc-cfb6-42c4-85ae-50b997c1f75b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;96764c30-7e39-416f-8a35-8b6bfd29b4a9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 7 shows how vectors are pushed to Terrablob. A bootstrap job is triggered to ingest data from a data source to Sia, Uber’s in-house vector database solution. Then, two Spark jobs are triggered for the index build and merge and ingest data to Terrablob. Every leaf syncs and downloads a base index and snapshot stored in Terrablob. During retrieval, a query is directly sent to each leaf.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c83baa9b-0da1-4226-8912-f3918309b9e0&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e55d7c63-e2d6-4f4d-90d8-4db67d0d800e&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-knowledge-service&#34;&gt;Knowledge Service&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097508,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;d1952dd4-d236-42e5-a1f1-49eda9714865&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;533&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure8-17285122683730-1024x533.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097508&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure8-17285122683730.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure8-17285122683730.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure8-17285122683730.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure8-17285122683730.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1819,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure8-17285122683730.png 1819w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8: Flow of the back-end Knowledge Service.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d51d2f61-620b-497b-90b3-33159c9b573f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1aa84d55-9c15-4da0-9464-3f72e7a637a2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Genie has a back-end service called Knowledge Service, which serves incoming requests for all incoming queries by first converting the incoming query into an embedding and then fetching the most relevant chunks from the vector database.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;00b12d8a-403b-41d0-ad77-0eb9d5db4039&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bfd1c1c7-ff26-495a-aab2-a536972d1288&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-cost-tracking&#34;&gt;Cost Tracking&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097510,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f3d3a3dd-1430-4e46-9139-6906e12b17b6&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;466&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure9-17285128268595-1024x466.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097510&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure9-17285128268595.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure9-17285128268595.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure9-17285128268595.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure9-17285128268595.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1538,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure9-17285128268595.png 1538w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 9: Flow of Genie cost tracking.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ff527243-716c-489e-b627-22d696350692&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1fc50b8e-0cdf-4138-a8e2-314b72818355&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For cost tracking, when the Slack client or other platforms call Knowledge Service, a UUID gets passed to Knowledge Service, which in turn passes the UUID through the context header to Michelangelo Gateway. Michelangelo Gateway is a pass-through service to the LLM so that it can be added to an audit log used to track costs by that UUID.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;43875a90-77f2-4acc-ac34-df25281d3e51&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8fa72504-db7a-4ece-80ef-7e3714b0189a&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-genie-performance-evaluation&#34;&gt;Genie Performance Evaluation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;a453e184-134d-423e-987f-5c2c51383195&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-metrics-framework&#34;&gt;Metrics Framework&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1515629e-7d00-4f78-936c-9553ed1f6cbe&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Users can provide feedback right away in Slack by clicking the relevant button in the Genie’s reply. We give users the option to choose from:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;32dde48a-387a-4bae-a2b3-9d0525d3826c&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Resolved&lt;/strong&gt;: the answer completely resolved the issue&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Helpfu&lt;/strong&gt;l: the answer partially helped, but the user needs more help&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Not Helpful&lt;/strong&gt;: the response is wrong or not relevant&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Not Relevant&lt;/strong&gt;: the user needs help from someone on call and Genie can’t assist (like for a code review)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097512,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;03c44d96-15a9-4c38-b363-e4a2706e8fbc&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;116&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-17285128486660-1024x116.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097512&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-17285128486660.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-17285128486660.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-17285128486660.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-17285128486660.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-17285128486660.png 2048w, https://blog.uber-cdn.com/cdn-cgi/image/width=2139,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-10-17285128486660.png 2139w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 10: Flow of user feedback for Genie.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1a39fc28-3c28-4116-9f55-6d19ae315c90&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;857e39a6-853d-4547-9869-e92e41699b5c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;br&gt;When the user leaves their feedback, a Slack plugin picks it up and uses a specific Kafka topic to stream metrics into a Hive table with the feedback and all the relevant metadata. We later visualize these metrics in a dashboard.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;979e8cb5-13b2-4bfa-bdeb-9fee00e198ee&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-performance-evaluation&#34;&gt;&lt;br&gt;Performance Evaluation&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5a818e05-9a10-4b1b-af8b-d87178bcd50a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We provide Genie users with the option to run custom evaluations. They can evaluate hallucinations, answer relevancy, or any other metric that they deem important for their use case. This evaluation can be used for better tuning of all the relevant RAG components—retrieval and generation.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097514,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;3f2db8f8-1c88-400c-bc43-cafba48a1524&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;474&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-11-17285128734740-1024x474.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097514&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-11-17285128734740.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-11-17285128734740.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-11-17285128734740.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-11-17285128734740.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-11-17285128734740.png 2048w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 11: Performance evaluation process.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8c2a3927-19b6-4db3-9707-b4e7387f4bb8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bb9431c5-4a78-4afc-a264-ede6c44f7ac0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 11 shows the evaluation process, which is a separate ETL pipeline that uses already-built Michelangelo components. Genie’s context and responses are retrieved from Hive and joined on any other relevant date, like Slack metadata and user feedback. It gets processed and passed to the Evaluator. Evaluator fetches specified prompt and runs LLM as a Judge. The specified metrics are extracted and included in the evaluation report, which is available to users in the UI.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;e2225358-ed38-49c8-9016-00b050230665&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-document-evaluation&#34;&gt;&lt;br&gt;Document Evaluation&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;476397f2-a2f6-40aa-a21b-56cd9fdf3670&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Accurate information retrieval depends on the clarity and accuracy of the source documents. If the quality of the documentation is poor itself, no matter how good the LLM performs, there’s no way to have a good performance. Therefore, the ability to evaluate documents and make actionable suggestions to improve document quality is essential for an efficient and effective RAG system.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;86fb2e66-3a6d-44b4-a503-4df31f230238&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097516,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;df6c991d-50fe-4b9f-a1d5-8d1ffa31c15a&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;800&#34; height=&#34;600&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-12-17285129625698.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097516&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=800,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-12-17285129625698.png 800w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-12-17285129625698.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-12-17285129625698.png 768w&#34; sizes=&#34;(max-width: 800px) 100vw, 800px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 12: Workflow of the document evaluation app.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7fd0361d-27f8-4ec0-9c68-2afdcd6caf0b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;749bc0f6-cb3e-43dc-821d-4646be34267c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Figure 12 shows the workflow of the document evaluation app. After the data is scraped, documents in the knowledge base are transformed into a Spark dataframe. Each row in the dataframe represents one document in the knowledge base. Then the evaluation is processed by calling LLM as the judge. Here, we feed LLM with a custom evaluation prompt. The LLM returns an evaluation score, together with explanations of the score and actionable suggestions on how to improve the quality of each document. All these metrics get published as an evaluation report, which users can access in the Michelangelo UI.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;06cc4f29-732c-4eab-9eb4-0e8fd386b55b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6ad29c63-bdbd-40fd-852c-20b68861cf10&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-solutions-to-challenges&#34;&gt;Solutions to Challenges&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1d2a3a6f-deb7-490c-be46-055790382f2d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To reduce hallucinations&lt;strong&gt;, &lt;/strong&gt;we changed the way we sent prompts to the LLM that we got from the vector database. We explicitly added for all the results obtained from the vector database a section called sub-context along with the source URL for that sub-context. We asked the LLM to only give answers from the various sub-contexts provided and return the source url to cite the answer. This seeks to provide a source URL for every answer it returns.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0427a52a-b8be-4769-87d4-dbe168c385df&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To ensure we don’t leak the data sources for which we create embeddings to Open AI or on Slack to folks who might not be able to access to sensitive data sources, we pre-curated data sources which are widely available to most Uber engineers and only allowed using those data sources for generating embeddings.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3614a771-313c-4df7-ae34-d854bd369dad&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To maximize Genie’s potential in answering questions, we developed a new interaction mode. This mode allows users to ask follow-up questions more conveniently and encourages them to read Genie’s answers more attentively. If Genie can’t answer their questions, users can easily escalate the issue to on-call support.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;22c66eba-4b1d-4f55-8a61-8bfb697e9f4e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1097518,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;44f606b1-fecc-453b-95d9-59fb126fb25d&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;391&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-13-17285130008667-1024x391.png&#34; alt=&#34;&#34; class=&#34;wp-image-1097518&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-13-17285130008667.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-13-17285130008667.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-13-17285130008667.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-13-17285130008667.png 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=2048,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/10/figure-13-17285130008667.png 2048w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 13: Flow of how Genie responds to user questions.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;22c66eba-4b1d-4f55-8a61-8bfb697e9f4e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bc41c3aa-eac1-46b6-936d-7a1e67af4ea1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the new interaction mode, when a user asks a question, Genie will answer with next step action buttons provided. Using those buttons, users can easily ask followup questions, mark questions as resolved, or contact human support.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;79f5346a-c345-4c2c-88c8-6f935ed481b8&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d70fa89b-a6e4-4e10-95d3-38e538b6c409&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-results&#34;&gt;Results&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ca43db45-05d5-415d-ad84-a7e0796db4f1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Since its launch in September of 2023, Genie has expanded its presence to &lt;em&gt;154 Slack channels&lt;/em&gt; and has answered over &lt;em&gt;70,000 questions&lt;/em&gt;. Genie boasts a &lt;em&gt;48.9% helpfulness rate&lt;/em&gt;, showcasing its growing effectiveness. We estimate it’s saved us &lt;em&gt;13,000 engineering hours&lt;/em&gt; so far since its launch.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e73c09e1-274a-42a5-92e9-adb69b58474a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b132ac5a-370a-4354-852c-bf77d294ef71&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-future&#34;&gt;Future&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8d1b8f31-767c-4c6d-8966-374e09f1fe7f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Genie is a cutting-edge Slack bot designed to streamline on-call management, optimize incident response, and improve team collaboration. Developed with a focus on simplicity and effectiveness, Genie serves as a comprehensive assistant, empowering engineering teams to handle on-call responsibilities seamlessly.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;01426ba8-3693-43a5-83f5-446a0e1d3e48&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This on-call assistant copilot has the scope to change the entire experience of how users and on-call engineers of any platform interact and engage within the respective platform’s Slack channel. It can also change the experience within each product, like Michelangelo or IDEs, where users can find product-specific help within the product or a product-specific Slack channel without having to wait for on-call assistance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9a0acdb7-601d-4d57-ac93-00495e498efb&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;4890f555-add4-4b02-9966-a448c71b2d81&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;157fe169-dc52-4ed0-b048-bb834225462a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Genie, the on-call assistant copilot, revolutionizes the way engineering teams manage on-call duties. By facilitating auto-resolution and providing insightful analytics, Genie empowers teams to handle on-call responsibilities efficiently and effectively.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a7436f34-ba56-435b-a0d6-089c152bc929&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7063b9e6-3aba-4ab9-a7e6-6978598c2c6e&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-acknowledgements&#34;&gt;Acknowledgements&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;59559f57-4e2e-4e69-af78-260327769ca4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The roll-out of this on-call copilot couldn’t have happened without the many team members who contributed to it. A huge thank you to the folks within Uber’s Michelangelo team. We also thank our partners on other Uber teams for making this idea a reality.&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;2c90521c-3176-44ec-ad7d-d89cc4be2729&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Slack&lt;sup&gt;®&lt;/sup&gt; is a registered trademark and service mark of Slack Technologies, Inc.Apache&lt;sup&gt;®&lt;/sup&gt;, Apache Spark&lt;sup&gt;™&lt;/sup&gt;, and Spark&lt;sup&gt;™&lt;/sup&gt; are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;2c90521c-3176-44ec-ad7d-d89cc4be2729&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Header Image Attribution: The image was generated by a generative AI tool.&lt;/p&gt;】&lt;h1 data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：1，“ hash”：“ e7b16816-7feb-4864-4864-8764-8765-c97c5e7122233”} -block-neading“ id =” H-Instruction“&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 83CEAAD1-2639-48B3-A7FE-B65336676E02”，“ dropcap”，“ dropcap”：false} - 步伐的技术环境，保持强大的通话操作对于确保无缝服务功能至关重要。现代平台工程团队面临有效管理呼叫时间表，事件响应，关键时刻的沟通以及在Slack &lt;sup&gt;®&lt;/sup&gt;频道上的强大客户支持的挑战。&lt;br&gt; &lt;br&gt; &lt;br&gt;这篇文章描述了精灵，我们构建了一个使用生成AI来优化通信和与呼叫工程师的问题的通话副词。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 44f18be0-34d4-4eea-b7dc-a666f7c356686”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”}： class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/heading” data-wp-block =“ {“ hash”：“ 4D9ACE85-D435-4F79-BC16-C16-CA7545517062”，“ level”：2} -Block-neading“ ID =” H-A-Closer-look-took-Problemblemblem and Motivation”&gt;更近的外观：问题和动机&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ e42ca7aa-2298-49d4-bb40-466989b1deb0像米开朗基罗团队这样的不同团队都有松弛的支持渠道，其内部用户可以在其中寻求帮助。如图1所示，人们每个月都会在这些渠道上提出大约45,000个问题。高问题量和长时间的回答等待时间降低了用户和呼叫工程师的生产率。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1097494，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ nock”，“ align”：“”中心“，” hash”：“ 139EB3C9-7DCA-4316-842F-78D479D072DC”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 636” height =“ 233” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/10/figure1-17285117876372.png“ alt =” class =“ wp-image-1097494” srcset =“ https://blog.uber.uber-cdn.com/cdn-cgi./cdn-cgi/image/image/image/image/width，width，width，width，width，witth = 636，quality = 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige1-17285117876372.png 636w，https://blog.uber.uber.uber-cdn.com/cdn-cdn-cgi/image/image/image/width = 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige1-17285117876372.png 300w 300W“ sizes =”（max-width：636px）100VW，636px“ referrerPolerpolicyCeledrerPolyCilyCy =” no-redreferrerrererer&#39;&#39;&#39; &gt; &lt;figcaption class =“ WP-元素捕获”&gt;图1：在5个月内，Uber的跨频道跨通道的大量问题。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落”data-wp-block =“ {“ hash”：“ 6F3202A6-B275-41B8-AFD6-A034BAA192BD”，“ dropcap”：false}&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ 392586DF-9BD9-4F14-4F14-9628-730F13B3B3E53F”} -block-neading“ id =” H-Cumbersome-Process“&gt; &lt;br&gt;繁琐的过程&lt;/h3&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097496，“ sizeLug”：“ full”，“ linkDestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ 6E32B91D-85CF-49BF-8B23-04B1A787FCA6”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ “ 864” height =“ 281” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/10/figure2-17285118129665.png“ alt =” class =“ wp-image-1097496” srcset =“ https://blog.uber.uber-cdn.com/cdn-cdn.com/cdn-cgi/image/image/image/image/width=864,quality = 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige2-17285118129665质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige2-17285118129665.png 300W，https://blog.uber.uber-cdn.com/cdn-cdn-cdn-cgi/image/image/width=768 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige2-17285118129665 “&gt; &lt;figcaption class =” WP-元素捕获&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 52BC6081-D1DB-42D1-BB04-BB04-BCB7387358DF”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;br&gt; &lt;br&gt;通常，当用户在Slack频道中提出问题时，他们必须等待呼叫工程师的响应。呼叫工程师要么回答用户的初始问题，要么索要更多详细信息。然后，用户可能会提出后续问题，寻求更多澄清或提供额外的信息。这导致了另一项等待呼叫工程师的回应。经过几轮来回交流后，用户的问题最终得到解决。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 53b2c110-525b-4ae2-bffd-f2b6d5be6e8a”，“ obsicity”，“ obyacity”：“ alpha-channel”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/heading” data-wp-block =“ {” hash&#39;：“ e2b1d2ee-bf35-4150-b995-3e291c9948a7”，“ level”：2} class =“ wp =” wp -block-neading“ id =” H-Hard-to-find-information&gt;很难找到信息&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 5555A7E9D-308D-498A-498A-9D0C-D0C-D3D06C52B16A”，“ dropcap”，“ dropcap”：false}通过参考现有文档来回答，但信息在Uber的内部Wi中分散Ki称为Engwiki，Internal Stack Overflow和其他位置，因此找到具体答案的挑战。结果，用户经常反复提出相同的问题，从而导致数百个Slack渠道对电话支持的高度需求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 523BAC00-5E5D-419B-A101-3509DB9A4C45”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ c65afede-93c3-465d-8b31-e8add6c3edb8”，“ level”：2} -Block-neading“ ID =” H-Architectural-Challenges”&gt;建筑挑战&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ FDEAEC3C-30D5-4218-4218-AF3B-8CA89990F0898”，“ dropcap”，“ dropcap”：false}我们选择的副唱片，我们选择了llm型号或利用&lt;a href =“ https://www.anyscale.com/blog/a-comprehend-guide-guide-guide-for-building-rag-rag-rag-las-llm-applications- -part-1“ target =“ _ blank” rel =“ noreferrer noopener”&gt;检索效果生成（rag）&lt;/a&gt;。微调需要具有高质量，不同示例的策划数据，以供LLM学习。它还需要计算资源，以使模型更新新示例。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 744F140-D7D0-4AEA-8221-B3B3B3EA0F9688”，“ dropcap”，“ dropcap”：false}抹布不需要任何不同的例子。这减少了上市发射的市场，因此我们为副驾驶选择了这种方法。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 99175E3C-E91C-45CC-AA82-2BE9B7386C35”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; -  Call Copilot提出了一些挑战，包括解决幻觉，保护数据源以及改善用户体验。这是我们如何解决每个挑战的概述。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“我们专注于：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ EEDF199C-34FC-47A2-8B5C-1AF71D316E77”，“订购”：false“：false，“ values”值，“值”：“：” “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;响应的准确性&lt;/strong&gt;：我们确保副驾驶检索该问题的相关知识，这可以防止LLM引擎产生错误或误导性信息&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;验证机制&lt;/strong&gt;：我们实施方法来验证副副词针对权威来源的响应减少幻觉的可能性&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt; contin学习&lt;/strong&gt;：我们确保Copilot可以访问最新的数据以提高其准确性&lt;br&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 079A03E0-3175-42D9-A799-F2DB1CBD69F4”，“ Dropcap”&gt;用于数据安全，我们选择数据源仔细摄入，因为许多数据源不能在松弛渠道中暴露。&lt;br&gt; &lt;br&gt;为了改善用户体验，我们设计了：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {“ hash”：“ 9B32F175-7AF2-4CB8-A3FD-E478D6C979B6”，“订购” “}” class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;直觉接口&lt;/strong&gt;：我们设计了一个易于使用的接口，可以允许用户有效与副驾驶互动&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;在不断完善副驾驶的性能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 544fa9a3-d103-49f1-bd3f-0EA3E3E3E60A5FE7”，“ dropcap”，“ dropcap”：false}在开发我们的呼叫副驾驶时面临挑战，以确保其可靠，用户友好且安全。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 8595d9fd-d250-4111-a0ae-a0ae-c65a88880b660f”，“ opacity”，“ obacity”：“ alpha-channel”}“}”}“}” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 775af645-d734-434-43db-8617-596ded3f17e1”，“ level”，“：2}” class =” wp -block-neading“ id =” H-Deep-Dive-Architecture“&gt;深层潜水：体系结构&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ e3acd865-7c12-403d-a1dd-c12e0cfd66a5”，“ dropcap”，“ dropcap”：false}我们的呼叫副驾驶的建筑，称为Genie。 &lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097498，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ B1BAEA01-32A1-4EE9-AC99-52DF5911B2A8”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” “ 1024”高=“ 443” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-content/uploads /2024/10/figure3-3-17285118456072-1024x4443.png“ alt =” class =“ wp-image-1097498” srcset =“ https:///blog.uber.uber.uber-c.com/cdn-c.com/cdn-cdn-cgi/image/image/image/image/image/width/width- = 1024，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige3-3-3-17285118456072.png 1024W，https://blog.uber.uber.uber-c.com/cdn.com/cdn-cdn-cgi/图像/宽度= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige3-3-3-17285118456072.png 300W，https：//blog.uber-cdn.com/cdn-cgi/image/width=768，quality=80，onerrtor=redirct，format = auto/wp-content/uploads/2024/2024/10/figure3-figure3-3-17285118456072.png 768w，https：/https：/https：/https：/https：/https：/https：/ /blog.uber-cdn.com/cdn-cgi/image/width=1536，quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/10/figure3-3-3-3-17285118456072.png， https://blog.uber-cdn.com/cdn-cgi/image/width=2000，quality=80，onerror = redirct，format = auto/wp-content/uploads/2024/1024/10/10/figure3-3-3-3-3-17285118456072。 png 2000w“ sizes =”（最大宽度：1024px）100VW，1024px“ referrerpolicy =“ no-referferrer”&gt; &lt;figcaption class =“ wp-element-caption =“ wp-element-caption”&gt;图3：call copilot的体系结构。&lt;/ copilot。&lt;/ figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 18321915-dd26-4e3e-9EA7-3905B8A51726”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 418A7AC1-114D-4079-BEBE-6277461F0AD5”，“ dropcap”，“ dropcap”：false}级别，我们刮擦了内部数据源，例如Uber的内部Wiki，Uber的内部堆栈溢出，工程要求文档，并使用开放的AI嵌入模型从这些数据源创建向量。这些嵌入被存储在矢量数据库中。然后，当用户在Slack频道中发布问题时，问题将转换为嵌入。该服务搜索与矢量数据库中问题相关的相关嵌入。嵌入索引的结果被用作LLM的提示以获取响应。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ bbbba4d6-3bfb-47db-47db-8917-95748eba02b5”，“ dropcap”&gt; false}对于数据准备，嵌入和推动服务工件可以推广为使用Apache Spark &lt;Sup&gt;™&lt;/sup&gt;的RAG应用程序。这些一般步骤构成了RAG应用程序的基础。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 94026DA2-9931-4E3E-852B-DCD66665156EA”，“ opcity”，“ optical” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ 7CCAF504-43AA-4A72-A72-A0D6-964714​​08651E”，“ level”，“ level”：2} class =“ class =” WP -block-neading“ id =” h-etl“&gt; etl &lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {” id“：1097500，“ width”：“ 521px”，“高度”：“自动”，“ appectratio”： 4 \/3“，“比例”：“封面”，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ Align”：“ Center”，“ Hash”：“ C2DADB8F-040E-4A17-A17-AFD8 -3cf888890e063“，“ alt”：“”}“ class =” AlignCenter size-large iS-strized&#39;&gt; &lt;img loading =“ lazy” dexoding =“ async” width =“ 816” height ：//blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirect，format = auto/wp-content/wp-content/uploads/2024/10/10/figure4-17285118719035-816x1024.png“ alt =” class =“ wp-image-1097500” style style =“ facket-ratio：4/3; object-fit：object-fit：cover; width; width; width; width; width; height; height; auto：auto&#39;srcset =“ https” https ：//blog.uber-cdn.com/cdn-cgi/image/width=816，quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/10/figure4-figure4-17285118719035.png 81719035.png，816w， https://blog.uber-cdn.com/cdn-cgi/image/width=239，quality=80，onerror=redirt = redirct，format = auto/wp-content/uploads/2024/2024/10/10/10/figure4-figure4-figure4-17285118719035.png 239w ，https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80，onerror=redirt = redirct，format = auto/wp-content/uploads/2024/2024/1024/10/10/10/10/figure4-figure4-figure4-17285118719035.png 768W，https：//blog.uber-cdn.com/cdn-cgi/image/width=940,quality=80，onerror = redirt = redirct，format = auto/wp-content/uploads/2024/2024/10/10/10/figure4-17285118719035。 PNG 940W“ sizes =”（最大宽度：816px）100VW，816px“ referrerpolicy =“ no-referferrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图4：数据摄入的火花应用。 &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ A3677069-38FE-4D57-4D57-9B36-6EE85AEB3EA8”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 78d8d942-525e-4c13-ab8d-79d980353d“，” dropcap}一个自定义Spark应用程序，其中包含将数据摄入矢量数据库的步骤。 Spark应用程序使用Spark Executor运行这些步骤。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ 2E768FA5-C1B6-4C6A-BA46-D642732C1BE9”} -Block-neading“ ID =” H-DATA-PREP“&gt; &lt;br&gt;数据准备&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A5923920-E1E5-4281-8A97-4821B2AE661F”，“ dropcap”，“ dropcap”：false}使用Uber的内部Wiki（称为Engwiki或Uber堆栈溢出API）从相应的数据源中获取内容。 Spark DataFrame从此数据准备阶段输出。该模式在列中具有Engwiki链接，并且在单独的列中具有Engwiki的内容，均为字符串格式。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097502，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，”哈希：“ ABBD21E9-5275-4AC1-8273-11AF89807749”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading =“ “ 1024” height =“ 220” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality = 80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/10/figure5-17285119354055-1024x220.png“ alt =” class =“ wp-image-1097502” srcset =“ https://blog.uber.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/image/width/width，10124 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige5-17285119354055.png 1024W，https://blog.uber.uber.uber-cdn.com/cdn-cdn-cgi/image/image/width= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige5-17285119354055.png 300w，https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,OnError=redirt = rediRect，format = auto/wp-content/uploads/2024/2024/10/10/10/10/10/figure5-17285119354055。 PNG 768W，https://blog.uber-cdn.com/cdn-cgi/image/width=1284,quality=80，onerror = redirect，format，format = auto/wp-conto/wp-content/uploads/2024/2024/10/10/figure5-172851193555555 。 . &lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ D307D345-CE2B-4274-AF28-D2713E6F8005”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ A0213E51-4C9B-4B-4B-4BEA-9C22-FDE19D3849FF”，“ dropcap”，“ dropcap”：false}以Uber的内部Wiki作为原始数据源的Spark DataFrame的列。它具有存储元数据的源URL，内容和其他列。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，”哈希：“ 900833C0-B219-4F9B-BF03-BF03-A6C037E70413”} -block-neading“ ID =” H-Embedden-Generation”&gt; &lt;br&gt;嵌入生成&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ FA364112-7193-470A-470A-AE-AE5D-1120D6BD5E94”，“ dropcap”，“ dropcap”：false}被刮擦，使用OpenAI嵌入模型创建嵌入，并将其推向Uber的Blob存储塔拉布洛布。仅通过与Engwiki空间相关的特定松弛通道可以访问创建的嵌入。输出格式是一个数据框架，其构图构图映射到该块的相应向量。 Uber的内部Wiki内容是使用Langchain和Embeddings通过Pyspark UDFS生成的。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ align”：“ center”，“ hash”：“ 95723F82-760A-4697-4697-AC97-AC97-71700D164769”，“ :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf4DX2PBW9iHR6npUbfBZlpuNq7pEZ9stydlXT94UlJNgeLsPs3n6gwe1rcsSDFCWKDKYiQ9JS1NNt6wPCkjbmB3K4NrFXd5Ql16Y8Fmdf3OkPwPcl7yppTkl7DznlJnWAbxu6bswf3dhwIukjV--SLHag?key=Cul8rOkHqArI5wi0MdurWQ&#34; alt=&#34;&#34; referrerpolicy= “ No-Referrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图6：带有向量嵌入的Spark DataFrame的列。&lt;/figcaption&gt; &lt;/figcaption&gt; &lt;/figie&gt; &lt;/div&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ DF3248A1-B648-4A1E-8D38-14D38-14DDDC846A9A5”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ d26434ed fb67-4781-969b-1847878fa7b608”，“ dropcap”，“ dropcap”&gt;图6显示以Uber的内部Wiki作为原始数据源的Spark DataFrame的列。它具有源URL，内容，内容块，并且该特定部分的嵌入。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ A42E77CD-A2E6-490F-B6F1-500A195F2D66”，“ optical class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 8422F718-6035-44458-B9D6-D150217F2714”，“ level”：2} class =“ class =” WP -block-heading“ id =“ h-pusher”&gt; Pusher &lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097505，“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ nock”，“ align”：“”中心“，”哈希：“ 15BC5C0C-6300-4E90-9F1-4000AFC37EA”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” “ 1024” height =“ 456” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width = 2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-contents/uploads /2024/10/figure7-17285121216461-1024x456.png“ alt =” class =“ wp-image-1097505” srcset =“ https://blog.uber.uber.uber.us.uber-c.com/cdn-c.com/cdn-cgi/image/image/image/image/width，10124 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige7-17285121216461.png 1024W，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/width= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige7-1728512121216461.png 300W，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/width = 768，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/fige7-17285121216461.png 768W，https://blog.uber.uber.uber-ber..uber-cdn.com/cdn-cdn.com/cdn-cdn-cgi/image/宽度= 1399，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige7-17285121216461.png 1399w“ sizes =”（max-width：1024px）100vw，1024px）100vw，1024px，1024px“ crererpolicy =” No-Referrer”&gt; &lt;figcaption class =“ WP元素捕获”&gt;图7：向量的流被推到terrablob。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 925589cc-cfb6-42c4-85ae-50B997c1f75b”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 96764C30-7E39-416F-8A35-8A35-8B6BFD29B4A9”，“ dropcap”&gt;图7显示如何将矢量推向塔拉布布。引导作业是触发的，从数据源摄入数据源到Uber的内部矢量数据库解决方案SIA。然后，为索引构建，合并并摄入数据触发了两个火花作业。每个叶子都同步并下载了存储在Terrablob中的基本索引和快照。在检索期间，查询直接发送到每个叶子。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ C83BAA9B-0DA1-4226-8912-F3918309B9E0”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”：“ alpha-channel”}“}”}“}”}“}”} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ e555d7c63-e2d6-4f4d-90d8-4d8-4db67d0d800e”，“ -Block-heading“ ID =“ H-知识服务”&gt;知识服务&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097508，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ align”：“”中心“，” hash”：“ D1952DD4-D236-42E5-A1F1-49EDA9714865”，“ ALT”：“：” class =“ AlignCenter size-large”&gt; &lt;img loading&gt; &lt;img loading =“ lazy lazy” dododing =“ “ 1024” height =“ 533” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width = 2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-contents/uploads /2024/10/figure8-17285122683730-1024x533.png“ alt =” class =“ wp-image-1097508” srcset =“ https://blog.uber.uber.uber-cdn.com/cdn-c.com/cdn-cdn-cgi/image/image/image/width/width，10124 ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige8-172851222683730.png 1024W，https：//blog.uber.uber-cdn.com/cdn-cgi/image/image/width= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige8-172851222683730.png 300W，https://blog.uber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige8-172851222683730.png 768w，https://blog.uber.uber.uber.us.uber-cdn.com/cdn-cgi/image/宽度= 1536，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige8-17285122683730.png 1536W，https://blog.uber.uber.uber-cdn.com/cdn-com/cdn-cgi/image /width=1819，Quality = 80，ONERROR = REDIRECT = auto/wp-content/uploads/2024/2024/10/figure8-17285122683730.png 1819w 1819w“ size =”（max-width：max-width：max-width：1024px）100vw，1024vw，10224px “ No-Referrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图8：后端知识服务的流程。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ D51D2F61-620B-497B-90B-90B-90B3-33159B573F”，“ Dropcap”，“ dropcap”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 1AAA84D55-9C15-9C15-4DA0-9464-3F72E7A637A2“，” dropcap“：fals}后端服务称为知识服务，它通过将传入查询转换为嵌入式，然后从矢量数据库中获取最相关的块来提供所有传入查询的传入请求。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 00b12d8a-403b-41d0-ad77-AD77-0EB9D5B4039”，“ opacity” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ bfd1c1c7-ff26-495a-aab2-aab2-a536972d1288”，“ level”级-block-neading“ ID =” H-COST跟踪“&gt;成本跟踪&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097510，“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心”，“ hash”：“ F3D3A3DDDD-1430-4E46-9139-6906E12B17B6”，“ ALT”：“}” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” dododing =“ dododing =” as as async“ width =” 1024“高度=” 466“ src =” https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = 80，onerror = redrect， -content/uploads/2024/10/Fige9-17285128268595-102466.png“ alt =” class =“ wp-image-1097510” srcset =“ /WIDTH=1024，Quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/10/figure9-17285128268595.png 1024W，https：// https：///blog.uber.uber..uber.uber-cdn.com/cdn.com/cdn-cggi/图像/宽度= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige9-17285128268595.png 300W，https://blog.uber.uber.uber-cdn.com/cdn-cgi-cdn-cgi /image/width=768，Quality=80,OnError=redirect，format = auto/wpcontent/uploads/2024/2024/10/figure9-17285128268595.png 768w， CGI/IMAGE/WIDTH = 1536，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige9-17285128268595.png 1536W，https：//blog.uber-cdn.com/cdn -cgi/image/width = 1538，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/fige9-17285128268595.png 1538w“ size =”（最大宽度：1024px）100vw，100vw，100vw，100vw，100vw，100vw，100vw，100vw，100vw，100vw，100vw，100vw， 1024px“ reverrerpolicy =” no-toferrer”&gt; &lt;figcaption class =“ WP-元素捕获”&gt;图9：精灵成本跟踪的流程。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ FF527243-716C-489E-B627-227-22D696350692”，“ dropcap”，“ dropcap”：false}&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 1FC50B8E-0CDF-4138-A8E2-314B72818355”，“ DROPCAP” ，当Slack客户端或其他平台致电知识服务时，UUID将传递给知识服务，而知识服务又通过上下文标题将UUID传递到Michelangelo Gateway。 Michelangelo Gateway是对LLM的通行服务，因此可以将其添加到用于跟踪该UUID成本的审核日志中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ 43875A90-77F2-4ACC-4ACC-ACC-ACC34-DF25281D3E51”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 8fa72504-DB7A-4ECE-4ECE-80EF-80EF-7E3714B0189A”，“ LEVEL”，“ level”：2} class =“ class =” WP -Block-neading“ ID =” H-Genie-performance-Evaluation&gt; Genie Performance评估&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data data-wp-block-name =“ core/preading” data-wp-block =“ {”级别“：3，“ hash”：“ A453E184-134D-423E-987F-5C2C51383195” -Block-neading“ ID =” H-Metrics-FrameWork“&gt; Metrics Framework &lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 1515629E-7D00-4F78-936C-936C-9553ED1F6CBE”，“ dropcap”，“ dropcap”：false}通过单击Genie回复中的相关按钮，立即在Slack中反馈。我们为用户提供选择：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name =“ core/list” data-wp-block =“ {” hash&#39;：“ 32DDDE48A-387A-4BAE-A2B3-9D052525D3826C”，“ ordered” “}” Class =“ wp-block-list”&gt;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;解决&lt;/strong&gt;：答案完全解决了问题&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt; helpfu &lt;/strong&gt; l：答案部分帮助了，但是用户需要更多的帮助&lt; /li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;不有用&lt;/strong&gt;：响应是错误的，或不相关&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data data-wp-block-name =“ core/list-item” data-wp-block =“ []”&gt; &lt;strong&gt;不相关&lt;/strong&gt;：用户需要通话中的某人的帮助，而精灵可以&#39; T协助（例如代码审查）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097512，“ sizeLug”：“ sizeSlug”：“大”，“ linkdestination”：“ none”，“ aLign”：“”中心“，”哈希：“ 03C44D96-15A9-4C38-B363-E4A2706E8FBC”，“ ALT”：“}” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” lazy lazy dododing =“ “ 1024” height =“ 116” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，onerror = redirct，format，format，format，format = auto/wp-content/wp-content/wp-content/uploads /2024/10/figure-10-17285128486660-1024x116.png“ alt =” class =“ wp-image-1097512” srcset =“ https:///blog.uber.uber..uber-ber-cdn.com/cdn-c.com/cdn-cdn-cgi/image/image/image/image/image/width- = 1024，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-10-10-17285128486660.png 1024W，https:///blog.uber.uber-ber..uber-cdn.com/cdn-c.com/cdn-cgi/图像/宽度= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-10-10-17285128486660.png 300W，https://blog.uber-cdn.com/cdn -cgi/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-10/fige-10-17285128486660.png 768w，https：//blog.uber-cdn。 com/cdn-cgi/image/width = 1536，质量= 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/10/fige-10-17285128486660.png 1536W，https：https：//blog.uber -cdn.com/cdn-cgi/image/width=2048，quality=80，onerrtor=redirect，format = auto/wp-content/uploads/2024/2024/10/figure-10/figure-172851284866660.png 2048w，https：/https：/https：/https：//// blog.uber-cdn.com/cdn-cgi/image/width=2139，quality=80，onerror = redirect，format = auto/wp-content/uploads/2024/2024/10/figure-10/figure-10-17285128512851284866660.png 2139w“ siless” =“（最大宽度：1024px）100VW，1024px” reverrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element caption”&gt;图10：Genie用户反馈的流动。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 1A39FC28-3C28-3C28-4116-9F55-6D19AE315C90”，“ dropcap”，“ dropcap”：fals}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 857E39A6-853D-4547-9869-E92E41699B5C”，“ dropcap”：dropcap“：false}”&gt; &lt;br&gt;当用户留下反馈时，Slack插件会选择它，并使用特定的Kafka主题将指标流式蜂巢表和所有相关元数据。后来，我们在仪表板上可视化这些指标。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name =“ core/preading” data-wp-block =“ {” latver“：3，＆quot; hash&#39;：“ 979E8CB5-13B2-4BFA-BDEB-9FEE00E198EE”}“ class =” wp-block-heading“ id =” h-performance-evaluation&gt; &lt;br&gt;绩效评估&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 5A818E05-9A10-4B1B-AF-AF8B-D87178BCD50A”，“ dropcap”，“ dropcap”：false}具有运行自定义评估的选项的用户。他们可以评估幻觉，回答相关性或对其用例很重要的任何其他指标。该评估可用于更好地调整所有相关的抹布组件 - 重新定位和生成。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097514，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心”，“哈希”：“ 3F2DB8F8-1C88-400C-BC43-CAFBA48A1524”，“ ALT”：“” class =“ AlignCenter size-large”&gt; &lt;img loading =“ lazy” “ 1024” height =“ 474” src =“ https://blog.uber-cdn.com/cdn-cgi/image/mimage/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-content/uploads /2024/10/figure-11-1728512874740-1024x474.png“ alt =” class =“ wp-image-1097514” srcset =“ https:///blog.uber.uber.uber-ber.uber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/image/width/width- = 1024，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-11-17285128734740.png 1024W，https://blog.uber.uber..uber-cdn.com/cdn-c.com/cdn-cgi/图像/宽度= 300，质量= 80，onError =重定向，格式= auto/wp-content/uploads/2024/10/fige-11-17285128734740.png 300W，https://blog.uber-cdn.com/cdn -cgi/image/width = 768，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-11-11-17285128734740.png 768w，https：//blog.uber-cdn。 com/cdn-cgi/image/width = 1536，质量= 80，onerror =重定向，格式= auto/wp-content/uploads/2024/10/fige-117285128734740.png 1536W，https：//blog.uber -cdn.com/cdn-cgi/image/width=2048，quality=80，onErr = redirct，format = auto/wp-content/uploads/2024/2024/10/figure-11-11-1728512874740.png 2048wg 2048w size最大宽度：1024px）100VW，1024px“ reverrerpolicy =“ no-referrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图11：绩效评估过程。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 8c2a3927-19b6-4db3-9707-b4e7387f4bb8”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ bb9431c5-4a78-4a78-4a78-4aafc-a264-e264-ede6c444444f7ac0”，“ dropcap”，“ dropcap”：false}评估过程是一种使用已构建的米开朗基罗组件的单独的ETL管道。 Genie的上下文和响应将从Hive检索，并在任何其他相关日期（如Slack Metadata和用户反馈）中加入。它被处理并传递给评估员。评估者获取指定的提示，并作为法官运行LLM。提取指定的指标并包括在评估报告中，该报告可用于UI中的用户。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name =“ core/headIng“ data-wp-block =” {“级别”：3，“哈希”：“ E22225358-ED38-49C8-9016-00B050230665“}” class =“ wp-block-heading” “&gt; &lt;br&gt;文档评估&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 476397f2-a2f6-40aa-a21b-56cd9fd9fdf3670”，“ dropcap”&gt;准确的信息检索取决于源文档的清晰度和准确性。如果文档的质量本身很差，那么无论LLM表现如何，都无法获得良好的性能。因此，评估文档并提出可行的建议以提高文档质量的能力对于高效有效的破布系统至关重要。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 86fb2e6666d-3a6d-44b4b4-a503-4df31f230238”，“ dropcap”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097516，“ sizeLug”：“ full”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，” hash”：“ DF6C991D-50FE-4B9F-A1D5-8D1FFA31C15A”，“ ALT”：“” class =“ AlignCenter size-full”&gt; &lt;img loading =“ lazy” “ 800” height =“ 600” src =“ https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80，quality = 80，onerror = redirct，format，format，format = auto/wp-content/wp-content/uploads /2024/10/figure-12-17285129625698.png“ alt =”“ class =” wp-image-1097516“ srcset =” ，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-12-17285129625698.png 800W，https://blog.uber.uber-cdn.com/cdn.com/cdn-c.com/cdn-cgi/image/宽度= 300，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/fige-12/fige-12-17285129625698.png 300W，https://blog.uber.uber.uber-cdn.com/cdn-cgi-cdn-cgi /image/width=768，Quality=80,OnError=redirect，format = auto/wp-content/uploads/2024/2024/10/figure-12-17285129625698.png 768w“ sizes =” 800px“ referrerpolicy =“ no-toferrer”&gt; &lt;figcaption class =“ wp- element-caption”&gt;图12：文档评估应用程序的工作流程。 &lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 7fd0361d-27f8-4ec0-9c68-9c68-2afdcd6caf0b”，“ dropcap”，“ dropcap”：false}“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 749BC0F6-CB3E-43DC-821D-4646BE34267C”，“ dropcap”&gt;图12显示文档评估应用程序的工作流程。刮擦数据后，知识库中的文档被转换为Spark DataFrame。数据框中的每一行代表知识库中的一个文档。然后，通过将LLM称为法官来处理评估。在这里，我们使用自定义评估提示为LLM。 LLM返回评估得分，以及分数的解释以及有关如何提高每个文档质量的可行建议。所有这些指标都被发表为n评估报告，用户可以在Michelangelo UI中访问哪些。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 06cc4f29-732c-4eab-9EB-9EB-9EB4-0EB4-0E8FD386B55B”，“ optical class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ 6AD29C63-BDBD-40FD-852C-852C-20B20B68861CF10CF10”，“ level”：2} -Block-neading“ ID =” H-Solutions-to-Challenges”&gt;挑战的解决方案&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 1d2a3a6f-deb7-490c-be46-055790382f2d”，“ dropcap”：dropcap“：false}” &lt;strong&gt;，&lt;/strong&gt;我们更改了向向量数据库中获得的提示发送给LLM的方式。我们明确添加了从矢量数据库获得的所有结果，该部分称为sub-context，以及该子语言的源URL。我们要求LLM仅给出提供的各种子函数的答案，然后返回源URL来引用答案。这旨在为返回的每个答案提供一个源URL。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 0427A52A-B8BE-4769-4769-87D4-DBE168C385DF”，“ dropcap”，“ dropcap”：false}不要泄露我们为可能无法访问敏感数据源的人们打开AI或Slack的嵌入的数据源，我们预先策划了大多数Uber工程师可用的数据源，并且仅允许使用这些用于生成嵌入的数据源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 3614a771-313c-4df7-ae34-d854bd369dad”，“ dropcap”，“ dropcap”：false}在回答问题时，我们开发了一种新的互动模式。这种模式使用户可以更方便地提出后续问题，并鼓励他们更专注地阅读Genie的答案。如果Genie无法回答他们的问题，则用户可以轻松地将问题升级为呼叫支持。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 22C66EBA-4B1D-4F55-8A61-8A61-8BFB697E9F4E”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&lt;div class =“ wp-block-image”&gt;&#xA;&lt;figue data-wp-block-name =“ core/image” data-wp-block =“ {“ id”：1097518，“ sizeLug”：“大”，“ linkdestination”：“ none”，“ none”，“ align”：“”中心“，” hash”：“ 44F606B1-FECC-453B-95D9-59-59FB126FB25D”，“ ALT”：“}” class =“ AlignCenter size-large”&gt; &lt;img loading =“ “ 1024” height =“ 391” src =“ https://blog.uber-cdn.com/cdn-cgi/image/image/width=2160,quality=80，onerror = redirct，formect，format = auto/wp-content/wp-contents/uploads /2024/10/figure-13-17285130008667-1024x391.png“ alt =” class =“ wp-image-1097518” srcset =“ https://blog.uber.uber.uber.ulber-cdn.com/cdn-c.com/cdn-cgi/image/image/image/width/width/width- = 1024，质量= 80，OnError =重定向，格式= auto/wp-content/uploads/2024/10/figure-13-17285130008667.png 1024W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=300,quality = 80, ereror = 80，yrect = yredirt = reforct，format = auto = auto/wp-content/wp-content/wp-content/wp-content/uploads//uploads//uploads//uploads//uploads//uploads/ 2024/10/FIGE-13-17285130008667.PNG 300W，https：//blog.uber-cdn.com/cdn-cgi/image/image/width=768,quality=80，quality=80，onerror = redirtirctemt = redirect，format = autto = auto/wp-content /UPLOADS/2024/10/figure-13-17285130008667.png 768W，https://blog.uber.uber-cdn.com/cdn-cgi/image/image/image/width = 1536,quality=800，quality=80000,80,90,80,conErtor = Rectectecrect，grumirtect，gorment = auto/ wp-content/uploads/2024/10/fige-13-17285130008667.png 1536W，https：//blog.uber.uber-cdn.com/cdn-cgi/image/width=2048，2048,80,80,80,80,90,80,90,80，oreRtor=rectect，format = auto/wp-content/uploads/2024/10/figure-13-17285130008667.png 2048w“ sizes =”（最大宽度：1024px）100VW，1024px，1024px“ referrerpolicy =” referrerpolicy =“ no-rederferrer” - 元素捕获“&gt;图13：Genie如何回答用户问题的流程。&lt;/figcaption&gt; &lt;/fige&gt; &lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 22C66EBA-4B1D-4F55-8A61-8A61-8BFB697E9F4E”，“ dropcap”，“ dropcap”：dropcap“：false}”&gt; &lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ bc41c3aa-eac1-46b6-936d-7a1e67af4ea1”，“ dropcap”：dropcap“：false}”&gt;交互模式，当用户提出问题时，Genie将使用提供的下一步操作按钮回答。使用这些按钮，用户可以轻松地提出后续问题，标记解决问题或联系人类支持。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 79F5346A-C345-4C2C-88C8C8-6F935ED481B8”，“ opacity”，“ opcity” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/preading” data-wp-block =“ {“ hash”：“ D70FA89B-A6E4-4E4-4E4-4E10-95D3-38E538E538E538B6C409”，“ -block-heading“ id =” h-results“&gt;结果&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ CA43DB45-05D5-415D-415D-AD84-A7E0796DB4F1”，“ dropcap”&gt;自启动以来在2023年9月，Genie将其存在扩展到&lt;em&gt; 154 Slack Channels &lt;/em&gt;，并在&lt;em&gt; 70,000个问题上得到了回答&lt;/em&gt;。 Genie拥有A &lt;em&gt; 48.9％的帮助率&lt;/em&gt;，展示了其不断增长的有效性。我们估计，自推出以来，它已经为我们节省了13,000个工程时间&lt;/em&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ E73C09E1-274A-42A-42A5-92E9-ADB69B69B69B58474A”，“ opcity”，“ optical” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {“ hash”：“ b132ac5a-370a-4354-4354-852c-bf77d294f71”，“ level”，“ level”：2} -block-neading“ id =“ h-future”&gt;未来&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 8d1b8f31-767c-4C4C6D-8966-8966-374E09F1FE7F”，“ dropcap”：dropcap“：false}”&gt;尖端的松弛机器人旨在简化通话管理，优化事件响应并改善团队Coll团队磨难。 Genie侧重于简单性和有效性，是一名综合助手，赋予工程团队以无缝处理现有职责。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {” hash&#39;：“ 01426BA8-3693-43A5-43A5-83F5-446A0E1D3E48”，“ dropcap”：dropcap“：false}”&gt; Call Assistant Copilot具有更改任何平台用户和呼叫工程师如何交互并参与相应平台的Slack频道中的整个体验的范围。它还可以改变每种产品中的体验，例如米开朗基罗或IDE，用户可以在产品或特定于产品的Slack频道中找到特定于产品的帮助，而不必等待呼叫援助。&lt;/p&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {“ hash”：“ 9A0ACDB7-601D-4D57-AC93-00495E498EFB”，“ opacity”，“ opacity”，“ opacity”：“ alpha-channel”} class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name =“ core/tearing” data-wp-block =“ {”级别“：1，”哈希：“ 4890f555-add4-4b02-4b02-9966-a4448c71b2d81” -Block-neading“ ID =“ H-Conconclusion”&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落“ data-wp-block =” {“ hash”：“ 157FE169-DC52-4ED0-B048-BBBB834225462A”，“ dropcap”，“ dropcap”：false}呼叫助理副作用，彻底改变了工程团队管理呼叫职责的方式。通过促进自动分辨率并提供有见地的分析，精灵使团队有效地应对责任。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name =“ core/saparator” data-wp-block =“ {” hash&#39;：“ A74436F34-BA56-435B-A0D6-089C152BC929”，“ opacity”，“ opacity” class =“ wp-block-separator has-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name =“ core/tearing” data-wp-block =“ {” hash&#39;：“ 7063b9e6-3aba-4ab-4ab9-a7e6-6978598c2c6e”，“ level”，“级别”：2} class =“ class =” wp -Block-neading“ ID =” H-AckNowledgements&gt; benspledgments &lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ hash”：“ 59559f57-4e2e-4E2E-4E2E-4E69-AF78-260327769CA4”，“ dropcap”，“ dropcap”：fall-}如果没有为此做出贡献的许多团队成员，就不会发生这种通话中的副驾驶。非常感谢Uber的Michelangelo团队中的人们。我们还要感谢其他Uber团队的合作伙伴，使这个想法成为现实。&lt;br&gt; &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 2C90521C-3176-44EC-AD7D-D89CC4BE2727272729” ：false}“ class =” hapmall-font-size“&gt; slack &lt;sup&gt;®&lt;/sup&gt;是Slack Technologies，Inc.apache &lt;Sup&gt;®&lt;/sup&gt;的注册商标和服务标记，Apache Spark &lt;Sup&gt;™&lt;/sup&gt;和Spark &lt;sup&gt;™&lt;/sup&gt;是美国和/或其他国家/地区Apache Software Foundation的注册商标或商标。没有认可Apache软件基础是使用这些标记所隐含的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name =“ core/段落” data-wp-block =“ {“ fontsize”：“ small”，“ hash”：“ 2C90521C-3176-44EC-AD7D-D89CC4BE2727272729” ：false}“ class =” hap-small-font-size&gt;标头图像归因：图像是由生成的AI工具生成的。&lt;/p&gt;</description>
      <pubDate>Thu, 10 Oct 2024 05:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>