<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Uber Engineering Blog</title>
    <link>http://rsshub.rssforever.com/uber/blog</link>
    <description>The technology behind Uber Engineering - Powered by RSSHub</description>
    <managingEditor>contact@rsshub.app (RSSHub)</managingEditor>
    <item>
      <title>【Transforming Executive Travel: Delegate Booking with Uber】改变高管旅行：通过 Uber 进行代表预订</title>
      <link>https://www.uber.com/blog/executive-travel/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;b27400c4-033d-479b-8343-f721dfb6a373&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;89dee566-0235-4f75-9899-b95adc486649&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the competitive world of corporate travel, efficiency and precision are paramount. At Uber, we’ve recognized a specific need within this sector: senior executives and their assistants require a streamlined and reliable booking experience. To address this, we developed the Delegate Booking tool, a significant enhancement to our platform designed to empower executive assistants (EAs) to manage travel with ease and precision.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bdce132a-1f3b-4f19-a1f2-74ce82231597&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4f39f205-3ed5-4ba2-8d2d-9f6f982fd4a2&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-why-we-developed-delegate-booking&#34;&gt;Why We Developed Delegate Booking&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cf5ca665-348a-43b8-bc47-3e558630475c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Recognizing the unique challenges faced by EAs tasked with arranging travel for their executives, we saw a significant opportunity to enhance their experience. Traditionally, EAs relied on multiple third-party services to meet the sophisticated demands of executive travel, striving to provide high-quality, seamless journeys. With the introduction of our Delegate Booking tool, we have elevated Uber’s offerings to align with the premium standards expected in executive travel, enhancing control over trip modifications and communications for a superior service experience.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;c1f9cc66-4834-41f7-adda-a275b3b3547d&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-key-considerations&#34;&gt;Key Considerations:&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f03d4af2-6cac-42e1-a472-581127608355&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;User Experience Continuity:&lt;/strong&gt; Maintaining the same quality of experience for the executive as if they had booked the ride themselves.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Control and Visibility for EAs:&lt;/strong&gt; Providing EAs with the ability to fully manage the ride, including the flexibility to modify or cancel trips and communicate directly with both the executive and the driver.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4eeac287-6e02-4d3b-9a3a-9de4d311bd10&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c349ca5a-7fe7-465c-a64e-94948ee1e968&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-the-engineering-challenge&#34;&gt;The Engineering Challenge&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;58c685ca-fbb1-4aa1-9074-2a1059dda1d9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our main focus was to evolve the existing architecture to accommodate the participant model in the trip booking process, aimed at enhancing flexibility and inclusivity. The objective was to develop a seamless integration that allows executive assistants to manage bookings effortlessly, while maintaining the high-quality experience for executives. This advancement necessitated a strategic transformation in how our platform manages user roles and permissions, reinforcing our commitment to a more adaptable and user-friendly service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4cd05f6e-409e-45bf-b624-b06c5b6e7fff&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Service Expansion:&lt;/strong&gt; We expanded our service layers to accommodate multiple user profiles interacting with the same trip.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Notification System:&lt;/strong&gt; We extended our notification system to send relevant updates to both the executive and the EA throughout the journey.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Billing and Auditing:&lt;/strong&gt; We integrated our billing engine with the new model so that financial transactions are accurate and reflect the delegated booking accurately.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;04e1c30c-28f8-4ef9-bcab-062cc0958908&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ee2a2d83-a4ab-491a-bdca-0ca05b5c0e63&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture-overhaul&#34;&gt;Architecture Overhaul&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;73407d17-f148-4bde-9382-3ca71aee0ea2&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeZOLNXNIy22CWLdesUzT3GBT7XLlzkgY4CUAuCBz_kof8yA-4_ydShJB8hlj3B_Py0VViO40jTSWNeNx34AgcMnCtmb-7xjZWQvkE_kuLASRaawDK_tD8LZj-6sJMjZWRLnF3-d4_HnGEuxuyG2IW-qQo?key=DuSIbdUxytqjw1jh-r69qg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Flow diagram demonstrates high level architecture flow of the delegate booking system.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0598de3d-0b4f-4f0e-afd9-36e0be5e4afc&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c6fcf013-bdb8-4bde-8656-75e237cc8447&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our platform was originally designed with a simple and user-centric model: the person booking the ride is intimately involved in all stages of the journey. To introduce Delegate Booking, a feature that enhances flexibility and inclusivity, we embraced the challenge of innovating across our ecosystem. This expansive upgrade spanned over 30 services and 5 different platforms, integrating a diverse array of technologies from backend systems like GO, Java®, and Node, to frontend applications such as Fusion, iOS®, and Android®. This holistic transformation not only broadens our service capabilities but also enriches the user experience.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b82adcb0-eba2-424a-9b9e-fdcc443c9ca6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;15953ed2-3933-4071-bc65-907942153c93&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-how-delegate-booking-works&#34;&gt;How Delegate Booking Works&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5eacda76-9fbc-45c1-9d44-506a91a08212&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Delegate Booking tool integrates deeply with our existing infrastructure:&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;98156b0e-1b17-475b-b175-bc641e1dda2a&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeALh8hTbUZpQw-bf44ErjTB6f_egaKY45HEJWOSXQ5SkvDSCY3JUB6waQJjB6tJkD9rmggKoqt3Jy8vpocQPkH8O4NxNIZEcr0xR-lcMdGRwv-zHQGqQdkYPB3QR569cpmd_qgdP-ihipjttNjUHPXbQGn?key=DuSIbdUxytqjw1jh-r69qg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Flow diagram following the Executive onboarding their EA using Uber rider app.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;69228b67-11cc-4ecd-bcc1-fe15859f94d4&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;e815ac96-6508-4fa5-928b-164c8d245bc7&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;User Interface:&lt;/strong&gt; Executives assign a delegate (the EA) from within their Uber rider app by entering the EA’s business email and specifying permissions.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3d619fa0-6915-4161-8872-fd5512475cc7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;&lt;/strong&gt;Figure 3: Flow diagram following the request for a ride from an EA for their executive.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;start&amp;quot;:2,&amp;quot;hash&amp;quot;:&amp;quot;71a97212-c5e2-45f6-b427-fa328b476b9f&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34; start=&#34;2&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Booking and Management:&lt;/strong&gt; EAs access their delegated profile through their version of the Uber rider app, where they can book rides, select preferences, and manage trip details in real time.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Backend Integration:&lt;/strong&gt; Our backend systems support these operations by ensuring that all data flows are secure and that every action taken by an EA on behalf of an executive is logged and auditable.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cd588d27-6501-4b26-b8df-e6789336f80f&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;512eaadb-552b-4e0b-b88a-94aa9f05b86d&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-impact-and-future-directions&#34;&gt;Impact and Future Directions&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c3e914b3-81a3-4cc2-9e0d-504923194281&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The introduction of Delegate Booking has not only improved our service offering, but has also opened up new avenues for feature expansion. We are now exploring how these changes can benefit other user groups, such as office managers or team coordinators, who may also require similar functionalities.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c08b4f12-e110-429d-8ecc-4c39cc2203db&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This feature introduces a delightful unlock of a segment where trips can be conveniently booked by another party while the payment is gracefully managed by the rider. This offers both flexibility and ease, enriching the user experience.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f62b2f4a-4ccd-4a4d-a89a-0f0f9ddf47c2&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;104ed716-f22c-4dc3-aed5-30f796f3f1a7&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-next-steps&#34;&gt;Next Steps&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;f002f771-0bd2-4138-b76b-796e8f76db4a&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-reuse-of-design&#34;&gt;Reuse of Design:&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5a5672e2-0b55-408c-8699-0d110f417aab&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Utilizing the existing design framework for new feature unlocks&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Adapting the technology to support scenarios involving multiple trip participants&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Aim to enhance the seamless trip experience on the rider app&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;1a0898c5-e275-4c6e-8c2d-362321d5385f&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-integration-into-uber-s-vision-and-goals&#34;&gt;Integration into Uber’s Vision and Goals:&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c3dda00d-a177-4603-8cc3-3674f3c44be8&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Ensuring the success of Uber Platinum through a robust delegated business solution&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Expanding up-market with tailored business offerings such as Biz Comfort and Platinum&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Targeting a user base that demands high-quality, executive-grade booking experiences&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d47a2416-d276-4648-8550-f5f0871077f1&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;50e66936-b406-4fc5-8a49-31c9547d8673&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;09573c19-7a67-4a8a-8c3c-fdf15eadcf06&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The introduction of delegate booking by Uber marks a significant advancement in our service offerings, particularly for executive travel. This feature responds to the evolving needs of our clientele. By empowering executive assistants to efficiently manage travel arrangements through the Uber platform, we strive to&amp;nbsp; simplify logistics while enhancing user satisfaction and loyalty.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5ebf37cd-6e68-4dca-baec-bf6950826d66&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This innovation is not just about adding a new feature—it’s about transforming how business is done. It underscores our commitment to continuous improvement and customer-centric solutions. We will continue to refine this technology, exploring new use cases and expanding its capabilities to meet the demands of a dynamic corporate world.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;313f9d91-7b8b-4f45-b3f0-4370e48bf2b9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a10a23a4-bf40-4062-a0b9-ad96265d776d&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-acknowledgments&#34;&gt;Acknowledgments&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;243f82cf-7588-49c2-b185-e6027303b0a4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;I would like to extend my heartfelt thanks to &lt;a href=&#34;https://www.linkedin.com/in/saravab/&#34;&gt;Sarav&lt;/a&gt;&lt;a href=&#34;https://www.linkedin.com/in/saravab/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;a&lt;/a&gt;&lt;a href=&#34;https://www.linkedin.com/in/saravab/&#34;&gt;nan Balasubramanian&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/anshukumar/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Anshu Kumar&lt;/a&gt;,&lt;a href=&#34;https://www.linkedin.com/in/alex-cao-4ab915306?trk=contact-info&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ning Cao&lt;/a&gt; &amp;amp;&amp;nbsp; &lt;a href=&#34;https://www.linkedin.com/in/khannaisha17/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Isha Khanna&lt;/a&gt; for their invaluable contributions to this blog. Their dedicated efforts in reviewing the content and providing insightful feedback were instrumental in shaping the final version.&lt;/p&gt;】&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;b27400c4-033d-479b-8343-f721dfb6a373&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-introduction&#34;&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;89dee566-0235-4f75-9899-b95adc486649&#34;,&#34;dropCap&#34;:false}&#34;&gt;在竞争中在商务旅行的世界里，效率和精确度至关重要。在优步，我们已经认识到该行业的特殊需求：高级管理人员及其助理需要简化且可靠的预订体验。为了解决这个问题，我们开发了代表预订工具，这是对我们平台的重大增强，旨在使行政助理 (EA) 能够轻松、精确地管理差旅。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;bdce132a-1f3b-4f19-a1f2-74ce82231597&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4f39f205-3ed5-4ba2-8d2d-9f6f982fd4a2&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-why-we-development-delegate-booking&#34;&gt;为什么我们开发代表预订&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cf5ca665-348a-43b8-bc47-3e558630475c&#34;,&#34;dropCap&#34;:false}&#34;&gt;识别唯一性面对负责为高管安排差旅的 EA 所面临的挑战，我们看到了增强他们体验的重要机会。传统上，EA 依靠多种第三方服务来满足高管差旅的复杂需求，努力提供高质量、无缝的旅程。随着我们的代表预订工具的推出，我们提升了 Uber 的服务水平，使其符合高管旅行预期的优质标准，增强了对行程修改和沟通的控制，以提供卓越的服务体验。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;c1f9cc66-4834-41f7-adda-a275b3b3547d&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-key-considerations&#34;&gt;主要注意事项：&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f03d4af2-6cac-42e1-a472-581127608355&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;用户体验连续性&lt;/strong&gt;：为管理人员保持相同的体验质量他们自己预订了行程。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;EA 的控制和可见性&lt;/strong&gt;：为 EA 提供全面管理行程，包括灵活修改或取消行程以及直接与管理人员和司机沟通。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;核心/分隔符&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4eeac287-6e02-4d3b-9a3a-9de4d311bd10&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c349ca5a-7fe7-465c-a64e-94948ee1e968&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-the-engineering-challenge&#34;&gt;工程挑战&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;58c​​685ca-fbb1-4aa1-9074-2a1059dda1d9&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的主要焦点的目标是改进现有架构，以适应旅行预订流程中的参与者模型，旨在增强灵活性和包容性。目标是开发无缝集成，使行政助理能够轻松管理预订，同时保持高管的高质量体验。这一进步需要我们的平台管理用户角色和权限的方式进行战略转型，从而加强我们对提供更具适应性和用户友好性服务的承诺。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4cd05f6e-409e-45bf-b624-b06c5b6e7fff&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;服务扩展&lt;/strong&gt;：我们扩展了服务层，以适应多个用户配置文件的交互同一次旅行。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;通知系统&lt;/strong&gt;：我们扩展了通知系统，将相关更新发送到执行官和 EA 贯穿整个过程。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;计费和审核&lt;/strong&gt;：我们将计费引擎与新模型集成，以便财务交易准确并准确反映委托预订。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;04e1c30c-28f8-4ef9-bcab-062cc0958908&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ee2a2d83-a4ab-491a-bdca-0ca05b5c0e63&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-architecture-overhaul&#34;&gt;架构大修&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;73407d17-f148-4bde-9382-3ca71aee0ea2&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeZOLNXNIy22CWLdesUzT3GBT7XLlzkgY4CUAuCBz_kof8yA-4_ydShJB8hlj3B_Py0VViO40jTSWNeNx34AgcMnCtmb-7xjZ WQvkE_kuLASRaawDK_tD8LZj-6sJMjZWRLnF3-d4_HnGEuxuyG2IW-qQo?key=DuSIbdUxytqjw1jh -r69qg&#34; alt=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 1：流程图展示了代表预订系统的高级架构流程。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0598de3d-0b4f-4f0e-afd9-36e0be5e4afc&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c6fcf013-bdb8-4bde-8656-75e237cc8447&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的平台是最初设计时采用了一个简单且以用户为中心的模型：预订乘车的人密切参与旅程的所有阶段。为了推出代表预订这一增强灵活性和包容性的功能，我们接受了整个生态系统创新的挑战。此次大规模升级涵盖 30 多种服务和 5 个不同平台，集成了从 GO、Java® 和 Node 等后端系统到 Fusion、iOS® 和 Android® 等前端应用程序的各种技术。这种整体转型不仅拓宽了我们的服务能力，也丰富了用户体验。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b82adcb0-eba2-424a-9b9e-fdcc443c9ca6&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;15953ed2-3933-4071-bc65-907942153c93&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-how-delegate-booking-works&#34;&gt;代表预订如何运作&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5eacda76-9fbc-45c1-9d44-506a91a08212&#34;,&#34;dropCap&#34;:false}&#34;&gt;代表预订工具与我们现有的基础设施深度集成：&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;98156b0e-1b17-475b-b175-bc641e1dda2a&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeALh8hTbUZpQw-bf44ErjTB6f_egaKY45HEJWOSXQ5SkvDSCY3JUB6waQJjB6tJkD9rmggKoqt3Jy8vpocQPkH8O4NxNIZE cr0xR-lcMdGRwv-zHQGqQdkYPB3QR569cpmd_qgdP-ihipjttNjUHPXbQGn?key=DuSIbdUxytqjw1jh-r69qg &#34; alt=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 2：执行人员使用 Uber 乘客应用程序加入其 EA 后的流程图。&lt;/figcaption&gt;&lt;/figure&gt;&lt; /div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;69228b67-11cc-4ecd-bcc1-fe15859f94d4&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;ordered&#34;:true,&#34;hash&#34;:&#34;e815ac96-6508-4fa5-928b-164c8d245bc7&#34;,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;核心/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;用户界面&lt;/strong&gt;：管理人员通过输入 EA 的业务电子邮件并指定权限，从其 Uber 乘客应用程序中分配代理人（EA）。&lt; /里&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3d619fa0-6915-4161-8872-fd5512475cc7&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt; &lt;/strong&gt;图 3：EA 为其主管提出乘车请求后的流程图。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;ordered&#34;:true,&#34;start&#34;:2,&#34;hash&#34;:&#34;71a97212-c5e2-45f6-b427-fa328b476b9f&#34; ,&#34;values&#34;:&#34;&#34;}&#34; class=&#34;wp-block-list&#34; start=&#34;2&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;预订和管理&lt;/strong&gt;：EA 通过其 Uber 版本访问其委托资料乘客应用程序，他们可以在其中预订行程、选择偏好并实时管理行程详细信息。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;后端集成：&lt;/strong&gt;我们的后端系统通过确保所有数据流来支持这些操作是安全的，并且 EA 代表高管采取的每项行动都会被记录并可审计。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cd588d27-6501-4b26-b8df-e6789336f80f&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;512eaadb-552b-4e0b-b88a-94aa9f05b86d&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-impact-and-future-directions&#34;&gt;影响和未来方向&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c3e914b3-81a3-4cc2-9e0d-504923194281&#34;,&#34;dropCap&#34;:false}&#34;&gt;引入代表预订不仅改进了我们的服务，还开辟了功能扩展的新途径。我们现在正在探索这些变化如何使其他用户群体受益，例如办公室经理或团队协调员，他们可能也需要类似的功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c08b4f12-e110-429d-8ecc-4c39cc2203db&#34;,&#34;dropCap&#34;:false}&#34;&gt;此功能介绍令人愉快地解锁了一个细分市场，其中另一方可以方便地预订行程，而付款则由乘客优雅地管理。这提供了灵活性和易用性，丰富了用户体验。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f62b2f4a-4ccd-4a4d-a89a-0f0f9ddf47c2&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;104ed716-f22c-4dc3-aed5-30f796f3f1a7&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-next-steps&#34;&gt;下一步附：&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;f002f771-0bd2-4138-b76b-796e8f76db4a&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-reuse-of-design&#34;&gt;设计重用：&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5a5672e2-0b55-408c-8699-0d110f417aab&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;利用现有设计框架解锁新功能&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;调整技术以支持涉及多个行程参与者的场景&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;旨在增强乘客应用上的无缝出行体验&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;1a0898c5-e275-4c6e-8c2d-362321d5385f&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-integration-into-uber-s-vision-and-goals&#34;&gt;融入 Uber 的愿景和目标：&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c3dda00d-a177-4603-8cc3-3674f3c44be8&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;通过强大的委托业务解决方案确保 Uber Platinum 取得成功&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;通过 Biz Comfort 和 Platinum 等定制业务产品拓展高端市场&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;瞄准需要高品质、行政级预订体验的用户群&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d47a2416-d276-4648-8550-f5f0871077f1&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;50e66936-b406-4fc5-8a49-31c9547d8673&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-conclusion&#34;&gt;结论&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;09573c19-7a67-4a8a-8c3c-fdf15eadcf06&#34;,&#34;dropCap&#34;:false}&#34;&gt;引入优步的代表预订标志着我们服务的重大进步，特别是在商务旅行方面。此功能响应了我们客户不断变化的需求。通过让行政助理能够通过优步平台高效管理出行安排，我们努力简化物流，同时提高用户满意度和忠诚度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5ebf37cd-6e68-4dca-baec-bf6950826d66&#34;,&#34;dropCap&#34;:false}&#34;&gt;这项创新是不仅仅是添加新功能，而是改变业务开展方式。它强调了我们对持续改进和以客户为中心的解决方案的承诺。我们将继续完善这项技术，探索新的用例并扩展其功能，以满足动态企业世界的需求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;313f9d91-7b8b-4f45-b3f0-4370e48bf2b9&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a10a23a4-bf40-4062-a0b9-ad96265d776d&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-acknowledgments&#34;&gt;致谢&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;243f82cf-7588-49c2-b185-e6027303b0a4&#34;,&#34;dropCap&#34;:false}&#34;&gt;我想要向 &lt;a href=&#34;https://www.linkedin.com/in/saravab/&#34;&gt;Sarav&lt;/a&gt;&lt;a href=&#34;https://www.linkedin.com/in/saravab/&#34;&gt;Sarav 致以衷心的感谢/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;a&lt;/a&gt;&lt;a href=&#34;https://www.linkedin.com/in/saravab/&#34;&gt;nan Balasubramanian&lt;/a&gt;，&lt;a href =&#34;https://www.linkedin.com/in/anshukumar/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;安舒·库马尔&lt;/a&gt;，&lt;a href=&#34;https://www.linkedin.com /in/alex-cao-4ab915306?trk=contact-info&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;宁曹&lt;/a&gt; &amp;  &lt;a href=&#34;https://www.linkedin.com/in /khannaisha17/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Isha Khanna&lt;/a&gt; 感谢他们对此博客做出的宝贵贡献。他们在审查内容和提供富有洞察力的反馈方面所做的不懈努力对于最终版本的形成发挥了重要作用。&lt;/p&gt;</description>
      <pubDate>Thu, 12 Sep 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【How to Measure Design System at Scale】如何大规模测量设计系统</title>
      <link>https://www.uber.com/blog/design-system-at-scale/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;1bbfd30a-c5f4-4a2c-9079-08dda007a726&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;40c024e9-461d-490a-a802-9a2b9e1e1958&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Uber Rider app launches features simultaneously on a global scale, changing details across hundreds of screens using thousands of feature flags. It is no longer possible for any designers, engineers, quality assurance, or product managers to fully visualize every single user flow. Uber needs an observability system of similar scale for measuring design quality to prevent subpar user experience, especially when it comes to adopting the existing UI libraries and accessibility best practices packaged under the Uber’s Design System, Base. Without such an observability system–let’s call it Design System Observability–it could be too late when Uber learned through complaints and public media about the end users who would suffer confusing onboarding rides, inconsistent layouts, and frustrating voiceovers/talkbacks sessions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;49d10ef1-9be8-4790-9c58-d2cd2d9ae0f8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Design System Observability consists of two main components: an eye and an ear.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;493b3ad1-547a-445e-9e4e-3520390f4f93&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5fca9790-a155-4c93-b0a3-a9e3618e8b00&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-the-designer-eye-challenge&#34;&gt;The designer-eye challenge&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d57d0a35-22d2-4eed-8e32-09c9b182b651&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;It is often hard to tell by the naked eye the differences between the design specs handoffs and the final implementation in the actual apps.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2741c28a-3e02-47b0-8f86-c1bee61492e8&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;a648c103-7f0b-437c-ab87-7c531e833e51&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeL3qxGyZ4RdQc-XcJ0NfNfS8DRedxiUrS7i5_yn6WekNpXxzS9vLebu5DGKhJc-BuvPNLaz3dLiVuAcNnhlebwmmA83g8PYbTT_O3R5miKOloLQ0249aeMd9hm0X2qc6jb3u1dEU3ECEFSlrYtmdBIH138?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Designer-eye challenge. Without the marking, very few could tell the “Confirm your pickup spot” sheet and the back button implementations (left) were not up to Base design hand-off (right).&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;117f1000-9871-450a-8346-c5c01ecd2e6e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;215a40a2-231e-4648-93bb-a8bcf907e883&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc6eOA9mbHFilS2-kDKs4CAPlzF8_EX6pzSwf0q6mt9MHal3elFV5l3wZfys_1WYQtCwa3cYb5Ze0tuxkD0asORVH4jA5U_9dkXW0cl_d1QyM00p8mqQmbGz3-3Iy_FLsorMa8ywNzIkaMBALYEgflQr0U?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: All Base UI library components were marked as green while one-off custom components were marked as red. This helped both designers and non-designers see what can be made with Base.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a74be4f8-e3a8-4b79-b19c-b608763351fc&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d1f32c48-0e7a-4280-88c5-719df13410c9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At Uber, we strive to reuse components if they have already been built. Hence, it has become critical for us to measure this very important metric consistently like any other important engineering quality metric such as test coverage, downtime, latency, etc. Base is Uber’s design system with shared components across Design and Code. This provides a consistent user experience, with a reduced learning curve, accessibility, etc., coming for free.&amp;nbsp; Based on internal research, benefits of using Base components include 3X faster development, 4X fewer visual parity issues, 50% less code, than using custom components.&amp;nbsp; Moreover, future changes like theme and typography updates only take a few lines of code changes then rollout in matters of weeks, not months. Thus, it is important to visualize and measure Base adoption.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7a5d98bb-49bb-44c0-a8f6-1b63975c8920&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2f1c54fd-0db8-4a40-8a3d-14f51db803c4&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-deterministics-counter-the-eye-for-everyone&#34;&gt;Deterministics Counter – the eye for everyone&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;67022da3-df65-422c-b8cb-58e2b9bc34e8&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;90f194d3-e033-4a1e-a9ae-d78c9ac106e4&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdCLmLnF2JBlHH_-b_C4_pDlzoj1W19mkH_L-T6es1rLuJOmcm1bpYXyzVi25TaeCC8N5ULoPdUGRpxauZbmAPa8BkR0-FLZShCt3U0MaBSrP960NAWM3JDBNWCz_ngrQWrdA3yNaV4_bftJZYkM72JGO8?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Deterministic counter to rewards usage of Base components and discourage usage of one-off custom components in a consistent manner. Non-Base implies a layout&lt;strong&gt; looks-like-Base-but-not&lt;/strong&gt;-Base.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0975f648-bea8-40dc-aa52-9e3958039ad5&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;71746240-78b5-4d68-96c1-d6dcde51be68&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Users turn on Base Counter, see different elements on the screen getting highlighted, and understand what can be improved. This is a first-of-it-kind deterministic measurement with visual highlights for design system adoption. Instead of a small group of experts who understand design quality, now thousands of people from different functions can measure and start work items to improve their own screens, making quality at scale possible.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7f3f861c-9d2d-43f8-8da6-19017cc969f7&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;55f040cb-1a3a-4687-9612-1d26fd6ba886&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfw5FOGQNEF_eTQQjPng6wUgN1toNsOXtL6u3lRwfnI4cnvJ8TGlh9qQKcCIMIwxJGuPT4nzM_6wsVgZhRaYyfl5-IhZ4hJhwbsBh47LjqBqCgL-2_-zouDwGyq5KDeYiLadmRDLdnlk4qMQ76n8igdWvYF?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: The counting algorithm traverses view trees looking for known component classes.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c4127c18-83a1-4ec9-bb76-d1cf8c92f37e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8fbc4092-13f1-41c2-b68c-2633e355626e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;There are three major steps in the Base Counter tooling: Trigger, Counting Algorithm, and Decorator.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;27877de6-f321-4303-b026-ab4a1565fc13&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Trigger for counting: We use an internal framework to capture the screen-level navigation, and trigger the start of the Base Counter. Periodic screen updates automatically trigger the base counting and help us in quantifying the Base stats for a screen without additional manual intervention. Using screen change as a trigger ensures that we are running the Base Counter only when it’s required.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;52414012-1889-4c7f-bd0c-adc4360d5829&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Counting algorithm: Once the tool receives a trigger it starts counting the Base stats for the screen. We first need to figure out which screen is currently being shown to the user. Starting from the application window, we find the topmost view controller that is being shown to the user. Once we get the top view controller, we start the postorder view DFS (depth-first search) traversal, starting at the root view of the top view controller.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;196c402a-6565-4169-8687-fa78b6b9d844&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Decorators were built to provide support for visualizations to developers, and to also have extensible architecture, which can support future cases when they arise. Coloring of view nodes after identification is done by using the coloring node decorator. All decorators implement the decorator protocol.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0f15accb-9ce3-4178-bde9-f215b8381e17&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;9e841c2c-ae42-4c07-99c4-422cb3cdbc5e&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd65u9UA4aUx224Lkri_fVV-9ZoxAND9c4udFQ-TTc7a1zpRlGvE5kHUuXSwTN-OND0GPDEfVqshs8gtTeVUqfjJ5dUxhgFVLFjpi2CHFI4f86Q03HKnj3VxbXIbL0dJwdsv5nvGSkkshn5h7j3nOKQrU8?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Visitor implementations are used in order to perform the DFS post order traversal.&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ebde1f52-7965-41dc-b9f1-ae8927e2f35b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;cef855c1-6162-4de2-bd2c-4d0c59fce6fe&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf8O3iWGPdtZlcQJJqvaadzem1TuopHQl3STdzzQFIO-K51HJoWUjGq3sWLs7yVe6ab5rkBkW50BwVX2obwfUHeeLozsWhxdCaM7ytCROX54mJCP3aKdsUbFbuunnAzlzrAwR7F-IhixRQvyfGMFwAt63HL?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: The same deterministics counters were used across designers and engineering’s workflows. Everyone having the same goal of 100% is the key for quality at scale.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0f458bf3-49df-4b1a-a152-b862b0bc05dc&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;afb313b2-d085-48a7-b3f0-355ac5181766&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-the-have-you-heard-questions&#34;&gt;The have-you-heard questions&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a5eee0d6-77a7-45b7-8be3-46a8535f96f7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our teammates often ask each other questions like: “Have you heard about that new home screen launch for the India market?” or “When did that Uber shortcuts experience launch?”&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fcb5b01e-d319-463d-98ee-94a6a5e17743&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In apps like Uber, it’s common to have a wide variety of user experiences coexisting, due to its massive user base spread across different regions. The feature teams are also very scattered across Uber offices around the world, and work independently. Each feature team conducts A/B experiments to determine the design that offers the best user engagement. Additionally, legal requirements may necessitate displaying certain screens in specific regions of the world. This makes it challenging to objectively tag a screen with a single Base stats metric at scale, as changes in its UI composition results in different Base stats for the screen.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cf9907b1-022b-48e1-abcf-f949f7ab5269&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We experimented with various aggregation techniques and ultimately decided to use the mode of all the baseline metrics as the single metric for tagging a screen. The mode automatically captures what the majority of users are actually viewing on your screen.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2dba1e37-8c3c-4fb3-af74-2280679e72c6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bc568ad2-3020-49d9-8f34-f6b2c2deb93d&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-daily-automated-analysis-the-ear-to-stay-on-top-of-launches&#34;&gt;Daily Automated Analysis – the ear to stay on top of launches&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;28385019-f299-4e66-989d-3bdd2290b827&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With the Base Counter tooling we have the tool required to calculate the score, but we still have to manually go count this on each screen. We need a pipeline to measure thousands of different screens.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;91e9bc8c-04b4-486a-8430-464b5cc10d93&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We deployed two complementary approaches to automation. The first approach gathers the broad statistics through analytics events triggered by default for all internal testers. Another approach using testing frameworks to take screenshots and run in-depth analysis including which components were used as well as known custom components we want to track.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7dfb6a03-a8fc-4644-a0ec-854c4073565c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;04ad8918-1b92-405f-9abf-79cd885387c7&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdX1M28ZwFPnYeiMYWj1S7U9PVQz5VywU9F_rl2yHawu9sN1tnoH2ZajgUIdy95ZkcEPl_lANvlrSdVdLV2OGnmdykI9xjJ3zMUmTPUtGCOO0xwk2wUzM4Mr0TeDeiriypfB0EoxpjRdGD59fqq5iRMZ5Mi?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Broad statistics were aggregated across all users, providing us with crowdsourced data that reflected real-world usage.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;595a2b59-caaa-4083-b589-0fce16984928&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;a9d5982f-654a-4c2f-a651-9b477598fb0e&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdKPpgKoXCpo7M_VKatHVMVveCWUu5AfudfdQLW93XH_LOXjtLCkaSP69azrJUfbrhGOmEGrnL0Bk2wfdLetQjsoR5HY1CoiJaQ0q9x3PEoI3LEvhhNjZWj4mevibTYuJoYf_K5J-ziGkp2oMesqGjrI8s?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8: Existing E2E test suites were utilized to take regular screenshots and calculate detailed design metrics&amp;nbsp;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;db9c0dc9-645b-4f60-ac17-6e608cea234b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;01b6455e-1689-43ad-96fa-ba491065b137&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With each screen having a defined quality score, we can track it on daily CD builds. Any violations would result in an automated Jira ticket assigned to the respective screen-owning Design and Engineering managers. Combining this automated process with a human Feature Review Readiness process where stakeholders verify the scores, we will ensure that &lt;strong&gt;future developments do not degrade and only improve design quality.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a1358661-b081-4231-9504-7e78408454ac&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;51e475b8-8dbf-4648-a3ff-d65274298f1a&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-real-world-examples&#34;&gt;Real-world examples&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e8578000-0135-4beb-8264-a3669e632519&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The new eye and ear have helped every product team of Uber Rider drive towards the same goal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b51cf021-5eaa-4784-b96b-ada731b9ba1a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;922d454f-a38f-46e7-8792-87f93f1bfe97&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd0hhhqBPZipIXgy0yQhJu8ymY1M1DsUOR7FCbpzjy_Vkl5bBbIsLB3IVGcLcmdb4dXYReimcXV91Pl5e-UQZyQezS9mVgJ6mxlfqqXCuYeX3EgSrRMS44vPoNQKGfHhLJhiXrPmG0HsUqeOcqaMLwmj0uA?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 9: Real impacts where many engineer teams improved Uber screens in seamless coordination thanks to Design System Observability (measured in June 2024, Rider iOS app).&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;09dcb249-c4a2-402a-9ca2-af1b44f7fef3&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;5ad2797e-a62d-4112-9f18-30c780da9509&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXex8WJYFlzCswieg89VpxSAeQ6wmHchXHM9cajUWQko-Gtjb3dshS6A64pVr-IqrPvN83ethSl5C1JXTIzv27LuqCIRt63kBE1QXpWYurwfBbDOiu2rN6l1WHa9bgFmBAd42mIVOD7bhV-e2M5k-VXn_ZU?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 10: When hearing about an accidental design degradation due to an infrastructure migration in early 2024, our engineer teams jumped in to fix it quickly.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8876cdc1-0958-4cc8-a4da-d155e3ba9008&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;5340daa7-c26c-4a22-ad3e-f52f324ac7c9&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b6c7d762-c2df-44b1-ad02-64704695771d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We believe Design System Observability is a must-have for any technology organization that needs both velocity and quality. Here are our learnings:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;6a851675-e21a-4995-b035-edf83892f173&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;While all teams expressed enthusiasm for applying a Design System, most have competing priorities. &lt;strong&gt;Hence, it is important to have a shared and trackable OKR.&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;There’s a lack of shared understanding about what a Design System truly encompasses. Some believe that simply using a text style or a color style is enough, while others attempt to recreate a component’s appearance without leveraging the existing code. &lt;strong&gt;Defining a Design System metrics meant to define an organization’s design quality expectations.&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Always assume people have good intentions and degradation is caused by the lack of guardrails. &lt;strong&gt;The earlier an issue is caught in the product development pipeline, the fewer days it takes to fix it&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9fd7887e-e466-495a-a867-3d84e94d87c4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At the end of the day, all Uber teams want to improve user experience, but often get lost in finding design resources or reaching out to other teams. These metrics were excellent conversation starters for both the Design and Engineering teams to improve their checkpoint and handoff experiences.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4a19d319-1f1d-4089-aaba-cd2cdd250adb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our biggest win has been elevating design metrics to be as important as engineering and business metrics. It was a journey of steady progress, starting with building awareness around Base, our design system. We hosted Base Race challenges to encourage adoption, and eventually secured executive buy-in for adoption push. Trust was built through countless hours of manual audits with domain experts. We addressed pushbacks, refined our methodology, and aligned more managers. Today, what once took hours of manual work each month is now an automated system accessible to everyone, highlighting the impact of our design system journey.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9a506791-e872-4ec0-ae5d-09df36edad58&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;5f67ce36-7698-452c-a571-435ca78b7eec&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXefjemrgY8I6CrwkLCvlMhMLlNiUYswBRG8GdMJdLvYMNcWqWiU6YIbkTBualhR4pejGLdYTnxYnldbg7RblX113O0ZioaFDVSdcKbYS-NzhaWlE1FLk37Qq67cEmC80Z-yTPRTaX018OitHGtXVzoH0JM?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 11: Design System metric is now a trackable business-impact metric&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;636b413c-700f-457a-a5ec-d9e1f799ce73&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;efaeabaf-0112-4202-b969-1863148d1663&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Above was our work with the Rider Android and iOS apps, we will apply the approach to the broader Uber product portfolios. In the future, as Uber constantly evolves different technology stacks within Android, iOS, and Web, the Design System Observability will be an effective system to stop reinventing UI components, launching accessible features, and rolling out high-quality design to thousands of screens quickly. We also have many partners in the company from content designers to researchers who are interested in building on top of our system to deliver best practices at scale. More metrics to come.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3fa19de8-bce5-4ec3-8771-90345318ab8a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e000362e-2d80-400a-af80-22924e3aeefc&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-acknowledgments&#34;&gt;Acknowledgments&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;d15be2d3-1845-4ee6-915b-33556770ab1e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Special thank you to Mohit Gupta, Reshma Naik, Anukalp Katyal, Arun Babu A S P,&amp;nbsp; Lucia Pineda, and other colleagues for your technical contributions to the Design System Observability infrastructure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;36cee99a-8ad4-4884-8763-00cff8240e0c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Last but not least, this project can’t happen without the love and attention to details of our Design System team at base.uber.com and the support of the Uber Design organization.&lt;/p&gt;】&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;1bbfd30a-c5f4-4a2c-9079-08dda007a726&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-introduction&#34;&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;40c024e9-461d-490a-a802-9a2b9e1e1958&#34;,&#34;dropCap&#34;:false}&#34;&gt;优步乘客应用程序在全球范围内同时启动功能，使用数千个功能标志在数百个屏幕上更改详细信息。任何设计师、工程师、质量保证或产品经理不再可能完全可视化每个用户流程。 Uber 需要一个类似规模的可观测系统来衡量设计质量，以防止用户体验不佳，特别是在采用 Uber 设计系统 Base 下打包的现有 UI 库和可访问性最佳实践时。如果没有这样的可观察性系统（我们称之为设计系统可观察性），当 Uber 通过投诉和公共媒体了解最终用户将遭受令人困惑的入职行程、不一致的布局和令人沮丧的画外音/对讲会话时，可能就太晚了。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;49d10ef1-9be8-4790-9c58-d2cd2d9ae0f8&#34;,&#34;dropCap&#34;:false}&#34;&gt;设计系统可观察性由两个主要部分组成：眼睛和耳朵。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;493b3ad1-547a-445e-9e4e-3520390f4f93&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5fca9790-a155-4c93-b0a3-a9e3618e8b00&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-the-designer-eye-challenge&#34;&gt;设计师眼睛挑战&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d57d0a35-22d2-4eed-8e32-09c9b182b651&#34;,&#34;dropCap&#34;:false}&#34;&gt;通常是肉眼很难看出设计规范交接与实际应用中的最终实现之间的差异。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2741c28a-3e02-47b0-8f86-c1bee61492e8&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;a648c103-7f0b-437c-ab87-7c531e833e51&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeL3qxGyZ4RdQc-XcJ0NfNfS8DRedxiUrS7i5_yn6WekNpXxzS9vLebu5DGKhJc-BuvPNLaz3dLiVuAcNnhlebwmmA83 g8PYbTT_O3R5miKOloLQ0249aeMd9hm0X2qc6jb3u1dEU3ECEFSlrYtmdBIH138?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption 类=&#34;wp-element-caption&#34;&gt;图 1：设计师眼中的挑战。如果没有标记，很少有人能看出“确认您的上车地点”表和后退按钮实现（左）不符合 Base 设计交接（右）的要求。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;117f1000-9871-450a-8346-c5c01ecd2e6e&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;215a40a2-231e-4648-93bb-a8bcf907e883&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc6eOA9mbHFilS2-kDKs4CAPlzF8_EX6pzSwf0q6mt9MHal3elFV5l3wZfys_1WYQtCwa3cYb5Ze0tuxkD0asORVH4jA 5U_9dkXW0cl_d1QyM00p8mqQmbGz3-3Iy_FLsorMa8ywNzIkaMBALYEgflQr0U?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; 推荐政策=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 2：所有基本 UI 库组件都标记为绿色，而一次性自定义组件则标记为红色。这有助于设计师和非设计师了解可以用 Base 制作什么。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a74be4f8-e3a8-4b79-b19c-b608763351fc&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d1f32c48-0e7a-4280-88c5-719df13410c9&#34;,&#34;dropCap&#34;:false}&#34;&gt;在 Uber，如果组件已经构建，我们会努力重用它们。因此，对我们来说，像测试覆盖率、停机时间、延迟等任何其他重要的工程质量指标一样，一致地衡量这个非常重要的指标变得至关重要。Base 是 Uber 的设计系统，在设计和代码中具有共享组件。这提供了一致的用户体验，并减少了学习曲线、可访问性等，而且是免费的。  根据内部研究，与使用自定义组件相比，使用基础组件的好处包括开发速度提高 3 倍、视觉奇偶校验问题减少 4 倍、代码减少 50%。  此外，主题和排版更新等未来的变化只需要几行代码更改，然后在几周而不是几个月内推出。因此，可视化和衡量 Base 采用情况非常重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7a5d98bb-49bb-44c0-a8f6-1b63975c8920&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2f1c54fd-0db8-4a40-8a3d-14f51db803c4&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-deterministics-counter-the-eye-for-everyone&#34;&gt;确定性计数器 – 每个人的眼睛&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;67022da3-df65-422c-b8cb-58e2b9bc34e8&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha -通道不透明度&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;90f194d3-e033-4a1e-a9ae-d78c9ac106e4&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdCLmLnF2JBlHH_-b_C4_pDlzoj1W19mkH_L-T6es1rLuJOmcm1bpYXyzVi25TaeCC8N5ULoPdUGRpxauZbmAPa8BkR0-FLZ ShCt3U0MaBSrP960NAWM3JDBNWCz_ngrQWrdA3yNaV4_bftJZYkM72JGO8?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 3：奖励使用基本组件并阻止以一致的方式使用一次性自定义组件的确定性计数器。 Non-Base 意味着布局&lt;strong&gt;看起来像-Base-但不是&lt;/strong&gt;-Base。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0975f648-bea8-40dc-aa52-9e3958039ad5&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;71746240-78b5-4d68-96c1-d6dcde51be68&#34;,&#34;dropCap&#34;:false}&#34;&gt;用户开启基本计数器，查看屏幕上突出显示的不同元素，并了解可以改进的地方。这是首个确定性测量，具有设计系统采用的视觉亮点。现在，来自不同职能部门的数千名人员可以衡量并启动工作项目来改进自己的屏幕，从而使大规模质量成为可能，而不是一小群了解设计质量的专家。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7f3f861c-9d2d-43f8-8da6-19017cc969f7&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;55f040cb-1a3a-4687-9612-1d26fd6ba886&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfw5FOGQNEF_eTQQjPng6wUgN1toNsOXtL6u3lRwfnI4cnvJ8TGlh9qQKcCIMIwxJGuPT4nzM_6wsVgZhRaYyfl5-IhZ4 hJhwbsBh47LjqBqCgL-2_-zouDwGyq5KDeYiLadmRDLdnlk4qMQ76n8igdWvYF?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 4：计数算法遍历视图树查找已知组件类。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c4127c18-83a1-4ec9-bb76-d1cf8c92f37e&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p 数据-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8fbc4092-13f1-41c2-b68c-2633e355626e&#34;,&#34;dropCap&#34;:false}&#34;&gt;Base Counter主要分为三个步骤工具：触发器、计数算法和装饰器。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;27877de6-f321-4303-b026-ab4a1565fc13&#34;,&#34;dropCap&#34;:false}&#34;&gt;计数触发器：我们使用内部框架来捕获屏幕级导航，并触发基本计数器的启动。定期屏幕更新会自动触发基本计数，并帮助我们量化屏幕的基本统计数据，而无需额外的手动干预。使用屏幕更改作为触发器可确保我们仅在需要时运行基本计数器。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;52414012-1889-4c7f-bd0c-adc4360d5829&#34;,&#34;dropCap&#34;:false}&#34;&gt;计数算法：一旦该工具收到触发器，它就会开始计算屏幕的基本统计数据。我们首先需要弄清楚当前正在向用户显示哪个屏幕。从应用程序窗口开始，我们找到向用户显示的最顶层视图控制器。一旦我们获得顶视图控制器，我们就开始后序视图 DFS（深度优先搜索）遍历，从顶视图控制器的根视图开始。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;196c402a-6565-4169-8687-fa78b6b9d844&#34;,&#34;dropCap&#34;:false}&#34;&gt;已构建装饰器为开发人员提供可视化支持，并具有可扩展的架构，可以在未来出现的情况下支持它们。识别后视图节点的着色是使用着色节点装饰器完成的。所有装饰器都实现装饰器协议。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0f15accb-9ce3-4178-bde9-f215b8381e17&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;9e841c2c-ae42-4c07-99c4-422cb3cdbc5e&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd65u9UA4aUx224Lkri_fVV-9ZoxAND9c4udFQ-TTc7a1zpRlGvE5kHUuXSwTN-OND0GPDEfVqshs8gtTeVUqfjJ5dUx hgFVLFjpi2CHFI4f86Q03HKnj3VxbXIbL0dJwdsv5nvGSkkshn5h7j3nOKQrU8?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 5：使用访问者实现来执行 DFS 后序遍历。 &lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ebde1f52-7965-41dc-b9f1-ae8927e2f35b&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator has-alpha-channel-op”能力&gt;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;cef855c1-6162-4de2-bd2c-4d0c59fce6fe&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf8O3iWGPdtZlcQJJqvaadzem1TuopHQl3STdzzQFIO-K51HJoWUjGq3sWLs7yVe6ab5rkBkW50BwVX2obwfUHeeLozsWhx dCaM7ytCROX54mJCP3aKdsUbFbuunnAzlzrAwR7F-IhixRQvyfGMFwAt63HL?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34; 推荐政策=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 6：设计人员和工程人员的工作流程中使用了相同的确定性计数器。每个人都有 100% 的相同目标，这是大规模质量的关键。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0f458bf3-49df-4b1a-a152-b862b0bc05dc&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;afb313b2-d085-48a7-b3f0-355ac5181766&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-the-have-you-heard-questions&#34;&gt;你听说过的问题&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a5eee0d6-77a7-45b7-8be3-46a8535f96f7&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的队友经常互相询问以下问题：“您听说过针对印度市场推出的新主屏幕吗？”或“Uber 快捷方式什么时候推出？” &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fcb5b01e-d319-463d-98ee-94a6a5e17743&#34;,&#34;dropCap&#34;:false}&#34;&gt;在以下应用中Uber，由于其庞大的用户群分布在不同地区，因此多种用户体验并存是很常见的。功能团队也非常分散在世界各地的 Uber 办事处，并且独立工作。每个功能团队都会进行 A/B 实验，以确定提供最佳用户参与度的设计。此外，法律要求可能需要在世界特定地区显示某些屏幕。这使得使用单个基本统计数据指标客观地大规模标记屏幕变得具有挑战性，因为其 UI 组成的变化会导致屏幕的基本统计数据不同。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cf9907b1-022b-48e1-abcf-f949f7ab5269&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们尝试了各种聚合技术，最终决定使用所有基线指标的模式作为标记屏幕的单一指标。该模式会自动捕获大多数用户在屏幕上实际查看的内容。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2dba1e37-8c3c-4fb3-af74-2280679e72c6&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp”-块分隔符具有 alpha 通道不透明度&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;bc568ad2-3020-49d9-8f34-f6b2c2deb93d&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-daily-automated-analysis-the-ear-to-stay-on-top-of-launches&#34;&gt;每日自动分析 – 掌握发布动态的耳朵&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;28385019-f299-4e66-989d-3bdd2290b827&#34;,&#34;dropCap&#34;:false}&#34;&gt;与底座计数器工具我们有计算分数所需的工具，但我们仍然必须在每个屏幕上手动进行计数。我们需要一个管道来测量数千个不同的屏幕。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;91e9bc8c-04b4-486a-8430-464b5cc10d93&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们部署了两个自动化的补充方法。第一种方法通过默认为所有内部测试人员触发的分析事件收集广泛的统计数据。另一种方法是使用测试框架来截取屏幕截图并运行深入分析，包括使用了哪些组件以及我们想要跟踪的已知自定义组件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7dfb6a03-a8fc-4644-a0ec-854c4073565c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;04ad8918-1b92-405f-9abf-79cd885387c7&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdX1M28ZwFPnYeiMYWj1S7U9PVQz5VywU9F_rl2yHawu9sN1tnoH2ZajgUIdy95ZkcEPl_lANvlrSdVdLV2OGnmdykI9xjJ 3zMUmTPUtGCOO0xwk2wUzM4Mr0TeDeiriypfB0EoxpjRdGD59fqq5iRMZ5Mi?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34;referrerpolicy=&#34;no- referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 7：汇总了所有用户的广泛统计数据，为我们提供了反映实际使用情况的众包数据。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;595a2b59-caaa-4083-b589-0fce16984928&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;a9d5982f-654a-4c2f-a651-9b477598fb0e&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdKPpgKoXCpo7M_VKatHVMVveCWUu5AfudfdQLW93XH_LOXjtLCkaSP69azrJUfbrhGOmEGrnL0Bk2wfdLetQjsoR5HY1CoiJaQ0 q9x3PEoI3LEvhhNjZWj4mevibTYuJoYf_K5J-ziGkp2oMesqGjrI8s?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 8：存在使用 E2E 测试套件定期进行屏幕截图并计算详细的设计指标&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;db9c0dc9-645b-4f60-ac17-6e608cea234b&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;01b6455e-1689-43ad-96fa-ba491065b137&#34;,&#34;dropCap&#34;:false}&#34;&gt;每个屏幕有了明确的质量分数，我们就可以在每日 CD 构建中跟踪它。任何违规行为都会导致自动将 Jira 票证分配给各自拥有屏幕的设计和工程经理。将此自动化流程与利益相关者验证分数的人工功能审查准备流程相结合，我们将确保&lt;strong&gt;未来的开发不会降低而只会提高设计质量。&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a1358661-b081-4231-9504-7e78408454ac&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;51e475b8-8dbf-4648-a3ff-d65274298f1a&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-real-world-examples&#34;&gt;真实世界示例&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e8578000-0135-4beb-8264-a3669e632519&#34;,&#34;dropCap&#34;:false}&#34;&gt;新眼睛和 Ear 帮助 Uber Rider 的每个产品团队朝着同一个目标前进。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b51cf021-5eaa-4784-b96b-ada731b9ba1a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;922d454f-a38f-46e7-8792-87f93f1bfe97&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd0hhhqBPZipIXgy0yQhJu8ymY1M1DsUOR7FCbpzjy_Vkl5bBbIsLB3IVGcLcmdb4dXYReimcXV91Pl5e-UQZyQezS9mVgJ6 mxlfqqXCuYeX3EgSrRMS44vPoNQKGfHhLJhiXrPmG0HsUqeOcqaMLwmj0uA?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 9：由于设计系统可观察性（2024 年 6 月测量，Rider iOS 应用程序），许多工程师团队无缝协调地改进了 Uber 屏幕，产生了实际影响。&lt;/图标题&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;09dcb249-c4a2-402a-9ca2-af1b44f7fef3&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&amp;quot;,&#34;hash&#34;:&#34;5ad2797e-a62d-4112-9f18-30c780da9509&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt .googleusercontent.com/docsz/AD_4nXex8WJYFlzCswieg89VpxSAeQ6wmHchXHM9cajUWQko-Gtjb3dshS6A64pVr-IqrPvN83ethSl5C1JXTIzv27LuqCIRt63kBE1QXpWYurwfBbDOiu2rN6l1WHa9bgF mBAd42mIVOD7bhV-e2M5k-VXn_ZU?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 10：听到时关于 2024 年初基础设施迁移导致的意外设计退化，我们的工程师团队迅速介入修复。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8876cdc1-0958-4cc8-a4da-d155e3ba9008&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;5340daa7-c26c-4a22-ad3e-f52f324ac7c9&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-conclusion&#34;&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b6c7d762-c2df-44b1-ad02-64704695771d&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们相信设计系统可观察性是任何需要速度和质量的技术组织的必备条件。以下是我们的经验教训：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;ordered&#34;:true,&#34;hash&#34;:&#34;6a851675-e21a-4995-b035-edf83892f173&#34;,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;虽然所有团队都表达了应用设计系统的热情，但大多数团队都有相互竞争的优先事项。 &lt;strong&gt;因此，拥有一个共享且可追踪的 OKR 非常重要。&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;对于设计系统真正包含的内容缺乏共识。有些人认为简单地使用文本样式或颜色样式就足够了，而另一些人则尝试在不利用现有代码的情况下重新创建组件的外观。 &lt;strong&gt;定义设计系统指标旨在定义组织的设计质量期望。&lt;/strong&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;始终假设人们的意图是好的，而退化是由于缺乏护栏造成的。 &lt;strong&gt;在产品开发流程中越早发现问题，解决问题所需的天数就越少&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9fd7887e-e466-495a-a867-3d84e94d87c4&#34;,&#34;dropCap&#34;:false}&#34;&gt;最后如今，所有 Uber 团队都希望改善用户体验，但常常在寻找设计资源或联系其他团队时迷失方向。这些指标对于设计和工程团队来说都是很好的对话起点，可以改善他们的检查点和切换体验。&lt;/p&gt;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4a19d319-1f1d-4089-aaba-cd2cdd250adb&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们最大的胜利一直在提升设计指标与工程和业务指标一样重要。这是一个稳步进步的旅程，首先是围绕我们的设计系统 Base 建立意识。我们举办了基础竞赛挑战赛以鼓励采用，并最终获得了高管的支持以推动采用。信任是通过与领域专家进行无数个小时的手动审核而建立的。我们解决了阻力，完善了我们的方法，并协调了更多的管理者。如今，曾经每月需要花费数小时手动工作的系统现在已成为每个人都可以使用的自动化系统，凸显了我们设计系统之旅的影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9a506791-e872-4ec0-ae5d-09df36edad58&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;5f67ce36-7698-452c-a571-435ca78b7eec&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXefjemrgY8I6CrwkLCvlMhMLlNiUYswBRG8GdMJdLvYMNcWqWiU6YIbkTBualhR4pejGLdYTnxYnldbg7RblX113O0ZioaFDVS dcKbYS-NzhaWlE1FLk37Qq67cEmC80Z-yTPRTaX018OitHGtXVzoH0JM?key=7feEAiFy2WYWGVjQFc7yPQ&#34; alt=&#34;&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 11：设计系统指标现在是可跟踪的业务影响指标&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;636b413c-700f-457a-a5ec-d9e1f799ce73&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;efaeabaf-0112-4202-b969-1863148d1663&#34;,&#34;dropCap&#34;:false}&#34;&gt;以上是我们的通过与 Rider Android 和 iOS 应用程序合作，我们将把该方法应用到更广泛的 Uber 产品组合中。未来，随着 Uber 在 Android、iOS 和 Web 中不断发展不同的技术堆栈，设计系统可观察性将成为一个有效的系统，以停止重新发明 UI 组件、推出可访问的功能以及快速将高质量设计推广到数千个屏幕。我们公司还有许多合作伙伴，从内容设计师到研究人员，他们有兴趣在我们的系统之上构建以大规模提供最佳实践。更多指标即将推出。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3fa19de8-bce5-4ec3-8771-90345318ab8a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e000362e-2d80-400a-af80-22924e3aeefc&#34;,&#34;level&#34;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-acknowledgments&#34;&gt;致谢&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;d15be2d3-1845-4ee6-915b-33556770ab1e&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;特别感谢 Mohit Gupta、Reshma Naik、Anukalp Katyal、Arun Babu A SP、Lucia Pineda 和其他同事对设计系统可观测性基础设施的技术贡献。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;36cee99a-8ad4-4884-8763-00cff8240e0c&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;最后但并非最不重要的一点是，如果没有 base.uber.com 设计系统团队对细节的热爱和关注以及来自Uber 设计组织。&lt;/p&gt;</description>
      <pubDate>Tue, 24 Sep 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Preon: Presto Query Analysis for Intelligent and Efficient Analytics】Preon：用于智能高效分析的 Presto 查询分析</title>
      <link>https://www.uber.com/blog/preon/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;bd450234-c86f-4e6f-b773-8427ffd60fe8&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;66363a5e-b873-4dbc-bd75-c1e14743f43b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Presto&lt;sup&gt;™&lt;/sup&gt; is an open source SQL query engine used on a large scale at Uber. Uber has around 20+ Presto clusters comprising over 12,000 hosts. We have about 7,000 weekly users and run about half a million queries per day. Presto has various use cases at Uber like ad hoc interactive analytics, ETL and batch workloads, dashboarding, data quality checks, report generation, experimentation, and data-driven services. Due to the scale of the system, there are various opportunities to make&amp;nbsp; it more efficient. However, these opportunities need intelligence regarding the queries being processed by the system.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2c7041ea-bb35-461e-89b3-398712c78fc8&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cc06ed60-e777-487c-a9f2-0e4303c9163e&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-motivation-background-behind-project&#34;&gt;Motivation/Background Behind Project&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4254560c-9953-49fb-afa0-55312937048a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Presto is a query engine and provides an SQL interface for running queries, but there are many cases where we need to be able to analyze queries in order to get specific actionable insights. Some examples are:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ca8e6ab2-c196-4ae8-8906-67b76809af08&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;To be able to analyze predicates used to query tables&lt;/strong&gt; – This can be used to reformat (sort, bucket, partition) the tables on those columns leading to less data being read from the backend during query execution and faster and more efficient queries.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;To be able to ascertain the tables/columns being read/written in the query&lt;/strong&gt; – This can be used to route queries to specific clusters based on availability of those tables in specific regions of the Uber data lake or to do permissions checks.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;To determine the type of a query –&lt;/strong&gt; For example, DDL/DML to route ETL queries to certain clusters.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;To ascertain what is the most recent modification time of any of the datasets being queried –&lt;/strong&gt; This can be used to ascertain if results from a previous run of the query are still valid and can be reused instead of rerunning the query.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;To fingerprint queries&lt;/strong&gt; – There are many use cases where we need to know if a query is the same or similar to a previous query. The fingerprint has to be immune to whitespaces and comments in the query and thus just a string hash does not work very well. Finding similar queries (e.g., queries with only the literal values changed are even more difficult.)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;To validate queries&lt;/strong&gt; – It is important to fail queries with syntax errors early, at the time of submission itself rather than the query having to get through the queue and fail when it starts running.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5381540a-abc2-44dd-b1b1-8c0773a4d195&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;All these analyses need to be able to parse the query structurally. Before we created Preon, all query analysis was done in the context of executing the query in a Presto cluster and on completion the analysis results were published to a Presto Query Events topic along with other stats related to the query execution. Also, logging any arbitrary information was difficult since the information had to be generated in the course of executing the query (i.e., either in the analysis/planning/optimization or execution phase and carried forward to the point of query completion). Also, the analysis code had to be carried as a private patch in the main Uber Presto repo, which could become problematic when upgrading Presto.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b2d3aefc-ff9c-4c13-a798-36476ef27a15&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Query Execution and Query Analysis are two different services with very different form factors, as summarized below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/table&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;91d0850d-c45f-4362-9b6f-46281b135fb0&amp;quot;,&amp;quot;hasFixedLayout&amp;quot;:true,&amp;quot;head&amp;quot;:[],&amp;quot;body&amp;quot;:[],&amp;quot;foot&amp;quot;:[]}&#34; class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Query Analysis&lt;/td&gt;&lt;td&gt;Query Execution&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Needs to only parse/analyze/optimize query&lt;/td&gt;&lt;td&gt;Needs to parse/analyze/plan/execute query&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Needs to only be a standard microservice&lt;/td&gt;&lt;td&gt;Runs in distributed clusters on bare metal (for performance), multiple clusters per DC&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Any information can be logged at any time&lt;/td&gt;&lt;td&gt;Logging is limited to query completion; any information to be logged has to be brought to that point&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Standard CI/CD for microservices; changes can be deployed fast&lt;/td&gt;&lt;td&gt;Making changes is slow; needs to be deployed after land on every cluster separately&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Each type of analysis can be a separate endpoint&lt;/td&gt;&lt;td&gt;Only a single query execution endpoint&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;An analysis can return a result, log the result to a DB, or return a transformed query&lt;/td&gt;&lt;td&gt;The only output is the query execution results&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;An analysis can involve multiple queries (e.g., to find common structures between them)&lt;/td&gt;&lt;td&gt;Each query is run independently&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Analysis can be done offline (e.g., by tailing a Kafka topic on query completions)&lt;/td&gt;&lt;td&gt;Online by definition&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;We can do the analysis using the Presto modules as libraries&lt;/td&gt;&lt;td&gt;Would involve making changes in the core engine code&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Service can be scaled automatically horizontally by the Uber auto-scaler based on traffic&lt;/td&gt;&lt;td&gt;Static configuration&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Does not need powerful machines&lt;/td&gt;&lt;td&gt;Presto coordinators need powerful hosts&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;26b7b3c6-8556-402c-95b0-d6f9fdadc04f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8c3db597-494e-4e4b-bcac-90f7826b2ebd&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8257d41f-eb1f-4c4a-88cb-a47fa933b414&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture&#34;&gt;Architecture&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2828b7bc-4c9a-42a7-a668-4af59489c735&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The requirements for the query analysis service were:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;c9162000-c285-4487-8079-a5b5ac796f95&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;It should be able to run in a microservice form factor in the Uber Stateless Microservices platform (UP).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The service should have a minimal CPU/memory footprint.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The service should have 100% coverage for all Presto query shapes at Uber (including in-house UDFs).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The service should have 100% coverage for the entire Uber Data Lake (i.e., support for all Presto connectors and catalogs).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The analysis should be done based on the current state of the Uber Data Lake by talking to the production catalogs.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The analyzed query should be similar to the query that would be in production (i.e., with all the transformations and optimizations that would happen during query execution).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Ability to parse non-Presto query shapes was not a requirement.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Fast development times (i.e., any new analysis should not require a change in the Presto modules, but could be done in the microservice itself).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e84d7e0d-cf4e-4855-b40e-60dd0b7cdc1e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The query parsing could have been done using an Apache Calcite&lt;sup&gt; ™&lt;/sup&gt; parser. This would have had the advantage of being able to parse non-Presto query shapes, too. However, it had the following drawbacks:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;f8388119-bd75-45cf-b643-a219d21c19f6&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Apache Calcite might not be able to parse all Presto query shapes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;We not only need to be able to parse the query, but analyze and even optimize the query using the Presto production optimization rules.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;We wanted to be able to share code (e.g., query fingerprinting logic) between the Production Presto and Preon as needed.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fd22bc68-bb09-42af-bb1b-cdeacb1caf33&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;295c9374-a11a-4f80-b331-8e26ec571b4b&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-service-design&#34;&gt;Service Design&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b3f8ff74-ccac-46c7-a6c8-5efe2c8a18f1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The service was designed in the shape of a microservice that creates a mini Presto server with various REST interfaces added to enable different analyses. Since the Presto server would not need to talk to any workers, all HTTP clients and task communication machinery was removed from the server.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1096434,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;bb88323e-9c76-45c5-82b8-2a3c739f060e&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;387&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure1-17273059861351-1024x387.png&#34; alt=&#34;&#34; class=&#34;wp-image-1096434&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure1-17273059861351.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure1-17273059861351.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure1-17273059861351.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1406,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure1-17273059861351.png 1406w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Preon as a microservice&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a8c501ed-041a-4309-abf9-bba93b7e588e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;77602bf6-d93d-4183-8c5c-18a5e647fa6a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Preon service uses Presto modules from the Uber Presto repo in order to do the analysis. We have had to make minimal changes to the Presto modules for them to be used by Preon. In addition, we also had to create a presto-preon module in Presto to give us the bindings to instantiate this mini Presto Server.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;649be9b5-d9e6-4f43-98cf-c4b4df59c423&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Preon provides internal APIs to:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c68a3b01-9f2c-406d-8da2-7a7d62bd2d51&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Create query statement i.e. just parse the Query&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Analyze query i.e. resolve table and columns against the production data lake&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Create a Plan for a Query with full Planning Optimizers&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Create a Plan for a Query with a given list of Optimizers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;656a78f5-ebdd-49ba-9331-eb20c3599321&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In general the analyzers then implement the analysis as a visitor on the in memory parsed/analyzed/optimized query. Various analysis endpoints have been created in Preon using these internal APIs. Some example analysis are:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9d8a3e46-4cad-44d5-9f2d-614af2536f77&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Predicate Analysis: This endpoint takes a query and returns the predicate columns that are used to filter data from a table and their predicate values. A query such as “select * from some_table where uuid = 20” would return a predicate of &amp;lt;table:some_table, column: uuid, value: 20&amp;gt;. Only single value and range value predicates are returned.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b5336b99-145a-4f98-94e9-689115ea9289&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;LastUpdate: This endpoint takes a query and returns the last modification time of any of the datasets read in the query. It does this by creating a query plan (the same plan that would be created by production Presto) and for each leaf tablescan node, gets the last modification time as registered in HMS. Optionally the endpoint can look further into the modification time of files in Uber Data lake as well.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;67efa249-937e-4fad-974b-4cb1beac3db4&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Materialized view: The endpoint ascertains whether a given query is candidate for improvement using a materialized view. To meet this criteria, the query should have been aggregated by one partition column throughout the query. Then the query can be potentially sped up by materializing the computation for a partition only once.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;15fa67f7-fe84-462a-b207-7d603f2b417e&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Structural validation of a query e.g. syntax errors&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fc543375-b0eb-48bc-9314-f1e498b7ba96&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Getting the list of tables/columns read/updated by the given query.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;52afa3f2-7535-4af8-8b53-3422a31c1a33&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b53c993b-1cdb-469e-af23-5085a399c56a&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-development-and-deployment-challenges&#34;&gt;Development and Deployment Challenges&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;69e2fa78-b887-464e-b61a-5cf9ac9cab81&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Since Preon is a micro service hosted in the Uber UP infrastructure, it enjoys many of the benefits of the ecosystem such as:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;74bfb4d5-6c0a-44c0-bc8a-7e31e789481c&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Automatic horizontal&amp;nbsp; auto scaling of the # of Preon instances based on utilization&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Load balancing of the requests between the instances&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Ability to vertically scale the instances&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Automated logging, monitoring and alerting in case of service failure, CPU utilization and latency spikes&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Different environments for different classes of traffic e.g. staging, critical, non-critical&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Standard CI/CD&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Infrastructure support to scaffold new API calls&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;75cf7244-ab54-42cc-887b-7aa03dd4dd0f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In addition, the latency and reliability of each endpoint in Preon is monitored separately through additional metrics. Though Preon provides reliability SLA at par with production Presto clusters, yet the endpoints are integrated into the callers in a fail open manner so that the query flow still continues even if an endpoint call fails or times out.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b0cd619a-e394-47c7-b022-4aa903d24298&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Though Preon provides many benefits as mentioned above, it also creates the additional responsibility of keeping the Presto used in Preon in sync with the Uber Presto. The Uber Presto code sits in a separate repository to make it easier to upgrade from open source. Preon code meanwhile sits in the main Uber java repository to make better use of developer tools.&amp;nbsp; So, we have to make sure that the Preon uses the latest artifacts from the Uber Presto repo. Using a new artifact sometimes requires changes in analysis code as well. Not using the latest artifacts can cause analysis to fail.&amp;nbsp; For example, if any new SQL functions or UDFs have been added in the Uber Presto, then the query validation (using Preon) would fail if the query is using those new functions/UDFs unless the Presto modules used by Preon are also upgraded. Towards this end, we have created a rotation to upgrade Preon Presto on a regular cadence.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a05d8824-ccb1-4742-8ade-9dc51fdb677f&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;763aa2e7-a20d-4265-8794-384449ee8896&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-use-cases-at-uber&#34;&gt;Use Cases at Uber&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fe552e73-4855-4f73-a4de-7ea4e9a4a766&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;There are many production use cases at Uber that require Preon to get insights about queries. Two major use cases of Preon are Query result caching and Data layout formatting.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;a2d4ec8d-d001-4cb9-8dc8-8ae812a1be0c&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-query-result-caching&#34;&gt;Query Result Caching&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;15a00c71-31d6-43c5-8d58-d54f0a0388b9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Preon provides an API (LastUpdate) for the Upstream callers to check the validity of the previous runs of the query. There are two upstream callers at Uber that use this functionality in order to reduce redundant query traffic. In the case of the first caller, the hash of every executed query is stored in Redis with a TTL of 24 hrs. When a new query is submitted and its hash is present in redis, then Preon is consulted to see if the most recent modification time of any of the datasets in the query is prior to its last execution time. If yes, then the previous results are returned to the caller. Since the underlying data has not changed, it is safe to return the previous results. Additionally, sometimes just matching the query hash is not sufficient. For example when a query is reading data over a moving window e.g. last 7 days, then while the query would look similar to a previous one, but the data being read may not be exactly the same and hence we have to exclude such queries from this feature.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;34b7540c-da8d-4479-ae67-ae6773294d89&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&amp;nbsp;This feature has been running for over 2 years at Uber and we have seen around 5 – 7% of queries getting deduplicated due to this feature. Given that Presto at Uber runs about 500k queries per day, this is a significant reduction in # of queries.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1096436,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;c90f493c-f93c-4e21-9c3d-544ec1456c53&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;243&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure2-17273060195956-1024x243.png&#34; alt=&#34;&#34; class=&#34;wp-image-1096436&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure2-17273060195956.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure2-17273060195956.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure2-17273060195956.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1334,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure2-17273060195956.png 1334w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Number of queries deduplicated by count and by percentage&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;41233185-95c8-42ed-92bc-4556bcdb78f2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;512a107d-5dbf-403e-b8ea-bfa6f51a2778&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-data-layout-formatting&#34;&gt;Data Layout Formatting&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a94ede9a-d107-4660-b16f-3333ec2d65d1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Every Presto query executed at Uber is post processed through the Preon Predicate Analysis endpoint. The post processing is done&amp;nbsp; by tailing the Presto Query Events topic and making a call to Preon and logging the results in another kafka topic.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1096439,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;5ac9acb1-67b1-4f6a-9bea-0a8f4c4f774f&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;425&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure3-3-17273060601434-1024x425.png&#34; alt=&#34;&#34; class=&#34;wp-image-1096439&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure3-3-17273060601434.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure3-3-17273060601434.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure3-3-17273060601434.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1384,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure3-3-17273060601434.png 1384w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Table Format Recommender system&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2a7691c6-b623-4a6e-b421-886ec9a04934&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2a7e0112-316f-46d1-9128-b99ed7a02519&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Then an offline analysis is done periodically to examine what columns are often used as predicates to query the top tables. Based on the values used for the predicates and the cardinality of those columns, a recommendation is generated about which column the data in the table should be sorted on and expected read savings by sorting the data. The read savings are realized because of predicate pushdown in Presto where Presto can skip reading sections of files or entire files because the min/max statistics in the file footer does not match the value that is being used for filtering the data. We have seen significant reduction in the amount of data read from just a couple of tables after sorting them based on the recommendation.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1096442,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;bbb4b436-c023-4c72-a0d2-720050fc632b&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;750&#34; height=&#34;256&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure4-17273061334001.png&#34; alt=&#34;&#34; class=&#34;wp-image-1096442&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=750,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure4-17273061334001.png 750w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure4-17273061334001.png 300w&#34; sizes=&#34;(max-width: 750px) 100vw, 750px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Weekly Data read savings from the Data Layout Reformatting.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;034fb341-e382-4996-a018-6d3cdb553540&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;35e298a0-61bd-4381-b891-4dec7fdde438&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the first case, the weekly data read from the table reduced from 4PB per week to about 2PB per week and in the second case the reduction was from 40PB per week to about 20PB per week.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e07a0c8c-1ef5-460d-9368-744a308faf91&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Bucketing is another option to consider but it might require backfill of data which can be costly. Also, since changing the table layout would also need compute resources, the benefit from the query savings need to be weighed against the cost of reformatting and thus this might only make sense for the heavily read tables.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;98e91f82-71de-4db8-8cec-28688c4a7a55&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Some other use cases that currently use Preon are:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d8e0503a-65b1-440f-8eb6-6f8787ecd809&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Query validation i.e. checking queries for structural issues before Query is accepted.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Permission check i.e. rejecting query early if the user does not have permissions on the tables/columns.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Routing queries to &lt;a href=&#34;https://www.uber.com/blog/modernizing-ubers-data-infrastructure-with-gcp/?uclick_id=1d3e4386-1f42-4d4f-92d9-3816206f3720&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cloud clusters&lt;/a&gt; based on the presence of tables in the Cloud.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8806e51b-883d-42d5-ba59-d6260bc7c4f3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Preon currently gets invoked multiple times in the lifetime of a Presto query execution at Uber.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1096445,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f1aa9df0-dc73-4b9a-a07e-8a92dd1a2872&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;842&#34; height=&#34;495&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure5-17273061772075.png&#34; alt=&#34;&#34; class=&#34;wp-image-1096445&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=842,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure5-17273061772075.png 842w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure5-17273061772075.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure5-17273061772075.png 768w&#34; sizes=&#34;(max-width: 842px) 100vw, 842px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Preon calls in Query Processing Workflow at Uber&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;18e9d271-4866-4159-8c74-3fd77d7313fa&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6eda09e4-fef1-43d4-92e2-ad78c1e0af03&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;a0729a16-cd7e-4968-8cf4-ae5761ca6db6&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-next-steps&#34;&gt;Next Steps&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b7fc32a9-1957-4b71-88fe-74b4c01db304&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We also plan to use Preon for cost based routing and automatically enabling certain optimizations such as CTE materialization when the query analysis shows significant cost benefit from it. Another potential use case is just in time scheduling of ETL workloads based on when the input partitions become available. This will need insights regarding what partitions are being read by a query.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;648f0a52-76d0-4b37-8bf4-5cf338e274cd&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;bf7d3536-5027-4cc4-8be1-065daf6e8a74&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fc2c553c-27fa-41e6-bfa8-5561949b5b2a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We believe that query analysis should be promoted as a first class citizen and query engines should provide custom pluggable analysis facilities. While there has been some progress regarding query rewrite capabilities within the engine, however as we have shown above in many cases, insights are needed regarding a query before its execution. We hope to see developments regarding standalone query analysis in the open source community and be able to contribute to it.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;b0800bb7-954d-4462-a43a-41ad0bf613e7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Presto is a registered trademark of LF Projects, LLC in the United States and/or other countries. No endorsement by The LF Projects, LLC is implied by the use of this mark. Kafka and Apache Calcite is a trademark of Apache Software Foundation in the United States and/or other countries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;8b25d545-5534-42c0-9660-a575b4a636f7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Cover Photo Attribution: &amp;nbsp;“&lt;a href=&#34;https://www.flickr.com/photos/188454520@N02/49917389986&#34;&gt;Torx Bits Metal Iron Tool Edited 2020&lt;/a&gt;” by &lt;a href=&#34;https://www.flickr.com/photos/188454520@N02&#34;&gt;chimpwithcan&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/2.0/?ref=openverse&#34;&gt;CC BY 2.0&lt;/a&gt;.&lt;/p&gt;】&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;bd450234-c86f-4e6f-b773-8427ffd60fe8&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-introduction&#34;&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;66363a5e-b873-4dbc-bd75-c1e14743f43b&#34;,&#34;dropCap&#34;:false}&#34;&gt;Presto&lt;sup &gt;™&lt;/sup&gt; 是 Uber 大规模使用的开源 SQL 查询引擎。 Uber 拥有大约 20 多个 Presto 集群，包含 12,000 多个主机。我们每周约有 7,000 名用户，每天运行约 50 万个查询。 Presto 在 Uber 拥有各种用例，例如临时交互式分析、ETL 和批量工作负载、仪表板、数据质量检查、报告生成、实验和数据驱动服务。由于系统规模庞大，有多种机会可以提高其效率。然而，这些机会需要有关系统正在处理的查询的智能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2c7041ea-bb35-461e-89b3-398712c78fc8&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cc06ed60-e777-487c-a9f2-0e4303c9163e&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-motivation-background-behind-project&#34;&gt;项目背后的动机/背景&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4254560c-9953-49fb-afa0-55312937048a&#34;,&#34;dropCap&#34;:false}&#34;&gt;Presto 是一个查询引擎并提供用于运行查询的 SQL 接口，但在很多情况下，我们需要能够分析查询以获得具体的可操作的见解。一些例子是：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ca8e6ab2-c196-4ae8-8906-67b76809af08&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;能够分析用于查询表的谓词&lt;/strong&gt; – 这可以使用重新格式化（排序、存储桶、分区）这些列上的表，从而减少查询执行期间从后端读取的数据，并实现更快、更高效的查询。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;能够确定查询中正在读取/写入的表/列&lt;/strong &gt; – 这可用于根据 Uber 数据湖特定区域中这些表的可用性将查询路由到特定集群，或进行权限检查。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;确定查询的类型 -&lt;/strong&gt; 例如，DDL/DML将 ETL 查询路由到某些集群。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;确定最近的修改是什么正在查询的任何数据集的时间 - &lt;/strong&gt;这可用于确定先前运行查询的结果是否仍然有效并且可以重复使用而不是重新运行查询。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;指纹查询&lt;/strong&gt; – 在很多用例中，我们需要知道是否查询与先前的查询相同或相似。指纹必须不受查询中的空格和注释的影响，因此仅使用字符串哈希并不能很好地工作。查找类似的查询（例如，仅更改文字值的查询更加困难。）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;验证查询&lt;/strong&gt; – 尽早使出现语法错误的查询失败非常重要，在提交本身时发生，而不是查询必须通过队列并在开始运行时失败。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5381540a-abc2-44dd-b1b1-8c0773a4d195&#34;,&#34;dropCap&#34;:false}&#34;&gt;所有这些分析需要能够从结构上解析查询。在我们创建 Preon 之前，所有查询分析都是在 Presto 集群中执行查询的上下文中完成的，完成后，分析结果与与查询执行相关的其他统计信息一起发布到 Presto 查询事件主题。此外，记录任意信息也很困难，因为信​​息必须在执行查询的过程中生成（即，在分析/规划/优化或执行阶段并继续到查询完成点）。此外，分析代码必须作为 Uber Presto 主存储库中的私有补丁进行携带，这在升级 Presto 时可能会出现问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b2d3aefc-ff9c-4c13-a798-36476ef27a15&#34;,&#34;dropCap&#34;:false}&#34;&gt;查询执行和查询分析是两种不同的服务，具有截然不同的形式因素，总结如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/table&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;91d0850d-c45f-4362-9b6f-46281b135fb0&#34;,&#34;hasFixedLayout&#34;:true,&#34;head&#34;:[ ],&#34;body&#34;:[],&#34;foot&#34;:[]}&#34; class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;查询分析&lt;/td&gt;&lt;td&gt;查询执行&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;仅需要解析/分析/优化查询&lt;/td&gt;&lt;td&gt;需要解析/分析/计划/执行查询&lt; /td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;只需成为标准微服务&lt;/td&gt;&lt;td&gt;在裸机上的分布式集群中运行（为了性能），每个 DC 多个集群&lt;/td&gt;&lt;/tr &gt;&lt;tr&gt;&lt;td&gt;可以随时记录任何信息&lt;/td&gt;&lt;td&gt;记录仅限于查询完成；任何要记录的信息都必须到达该点&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;微服务的标准 CI/CD；可以快速部署更改&lt;/td&gt;&lt;td&gt;进行更改很慢；需要在电动汽车着陆后部署单独的每个集群&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;每种类型的分析都可以是一个单独的端点&lt;/td&gt;&lt;td&gt;只有一个查询执行端点&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt;分析可以返回结果、将结果记录到数据库或返回转换后的查询&lt;/td&gt;&lt;td&gt;唯一的输出是查询执行结果&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td &gt;分析可以涉及多个查询（例如，找到它们之间的共同结构）&lt;/td&gt;&lt;td&gt;每个查询独立运行&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;分析可以离线完成（例如， ，通过跟踪有关查询完成的 Kafka 主题）&lt;/td&gt;&lt;td&gt;根据定义在线&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;我们可以使用 Presto 模块作为库进行分析&lt;/td&gt;&lt; td&gt;将涉及对核心引擎代码进行更改&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Uber 自动缩放器可以根据流量自动水平缩放服务&lt;/td&gt;&lt;td&gt;静态配置&lt; /td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;不需要强大的机器&lt;/td&gt;&lt;td&gt;Presto协调员需要强大的主机&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;26b7b3c6-8556-402c-95b0-d6f9fdadc04f&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8c3db597-494e-4e4b-bcac-90f7826b2ebd&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8257d41f-eb1f-4c4a-88cb-a47fa933b414&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-architecture&#34;&gt;架构&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2828b7bc-4c9a-42a7-a668-4af59489c735&#34;,&#34;dropCap&#34;:false}&#34;&gt;以下要求查询分析服务是：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;ordered&#34;:true,&#34;hash&#34;:&#34;c9162000-c285-4487-8079-a5b5ac796f95&#34;,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;它应该能够在 Uber 无状态微服务平台 (UP) 中以微服务形式运行。&lt; /里&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;该服务应具有最小的 CPU/内存占用量。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;服务应 100% 覆盖 Uber 的所有 Presto 查询形状（包括内部 UDF）。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;服务应 100% 覆盖整个 Uber 数据湖（即支持所有 Presto 连接器和目录）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;应根据 Uber 数据湖的当前状态，通过与生产目录对话来完成分析。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;分析的查询应与生产中的查询类似（即，包含所有转换和优化查询执行期间会发生的变化）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;不要求能够解析非 Presto 查询形状。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;快速开发时间（即，任何新分析都不需要更改 Presto 模块，但可以在微服务本身中完成）。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e84d7e0d-cf4e-4855-b40e-60dd0b7cdc1e&#34;,&#34;dropCap&#34;:false}&#34;&gt;查询解析可以使用 Apache Calcite&lt;sup&gt; ™&lt;/sup&gt; 解析器来完成。这也有能够解析非 Presto 查询形状的优点。然而，它有以下缺点：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;ordered&#34;:true,&#34;hash&#34;:&#34;f8388119-bd75-45cf-b643-a219d21c19f6&#34;,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Apache Calcite 可能无法解析所有 Presto 查询形状。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;我们不仅需要能够解析查询，还需要使用 Presto 分析甚至优化查询生产优化规则。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;我们希望能够在 Production Presto 和 Preon 之间共享代码（例如，查询指纹逻辑），如下所示需要。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fd22bc68-bb09-42af-bb1b-cdeacb1caf33&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;295c9374-a11a-4f80-b331-8e26ec571b4b&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-service-design&#34;&gt;服务设计&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b3f8ff74-ccac-46c7-a6c8-5efe2c8a18f1&#34;,&#34;dropCap&#34;:false}&#34;&gt;该服务是以微服务的形式设计，创建一个迷你 Presto 服务器，并添加各种 REST 接口以实现不同的分析。由于 Presto 服务器不需要与任何工作人员通信，因此所有 HTTP 客户端和任务通信机制都从服务器中删除。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1096434,&#34;sizeSlug&#34;:&#34;large&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心”，“散列”：“bb88323e-9c76-45c5-82b8-2a3c739f060e”，“alt”：“”}“类=“aligncenter size-large”&gt;&lt;img加载=“惰性”解码=“异步”宽度= “1024”高度=“387”src=“https://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量= 80，onerror=重定向，format=auto/wp-content/uploads /2024/09/figure1-17273059861351-1024x387.png&#34; alt=&#34;&#34; class=&#34;wp-image-1096434&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09 /figure1-17273059861351.png 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/ 09/figure1-17273059861351.png 300w，https://blog.uber-cdn.com/cdn-cgi/image/width=768，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024 /09/figure1-17273059861351.png 768w，https://blog.uber-cdn.com/cdn-cgi/image/width=1406，quality=80，onerror=redirect，format=auto/wp-content/uploads/ 2024/09/figure1-17273059861351.png 1406w&#34;sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 1：Preon 作为微服务&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a8c501ed-041a-4309-abf9-bba93b7e588e&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;77602bf6-d93d-4183-8c5c-18a5e647fa6a&#34;,&#34;dropCap&#34;:false}&#34;&gt;Preon 服务使用 Uber Presto 存储库中的 Presto 模块进行分析。我们必须对 Presto 模块进行最小的更改才能让 Preon 使用它们。此外，我们还必须在 Presto 中创建一个 presto-preon 模块，以便为我们提供实例化这个迷你 Presto 服务器的绑定。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;649be9b5-d9e6-4f43-98cf-c4b4df59c423&#34;,&#34;dropCap&#34;:false}&#34;&gt;Preon 提供内部API 用于：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c68a3b01-9f2c-406d-8da2-7a7d62bd2d51&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;创建查询语句，即仅解析查询&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;分析查询，即根据生产数据湖解析表和列&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;使用完整的规划优化器创建查询计划&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;使用给定的优化器列表为查询创建计划&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;656a78f5-ebdd-49ba-9331-eb20c3599321&#34;,&#34;dropCap&#34;:false}&#34;&gt;一般来说然后分析器作为内存中解析/分析/优化查询的访问者实施分析。使用这些内部 API 在 Preon 中创建了各种分析端点。一些示例分析如下：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9d8a3e46-4cad-44d5-9f2d-614af2536f77&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;谓词分析：此端点接受查询并返回用于过滤表中数据的谓词列及其谓词值。诸如“select * from some_table where uuid = 20”之类的查询将返回谓词 &lt;table:some_table, column: uuid, value: 20&gt;。仅返回单值和范围值谓词。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b5336b99-145a-4f98-94e9-689115ea9289&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;LastUpdate：此端点接受查询并返回查询中读取的任何数据集的最后修改时间。它通过创建一个查询计划（与生产 Presto 创建的计划相同）并为每个叶表扫描节点获取 HMS 中注册的最后修改时间来实现此目的。 （可选）端点还可以进一步查看 Uber 数据湖中文件的修改时间。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;67efa249-937e-4fad-974b-4cb1beac3db4&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;物化视图：端点使用物化视图确定给定查询是否适合改进。为了满足这一条件，查询应该在整个查询中由一个分区列聚合。然后，通过仅实现分区的计算一次，可以潜在地加快查询速度。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;15fa67f7-fe84-462a-b207-7d603f2b417e&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;查询的结构验证，例如语法错误&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fc543375-b0eb-48bc-9314-f1e498b7ba96&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;获取给定查询读取/更新的表/列的列表。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;52afa3f2-7535-4af8-8b53-3422a31c1a33&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b53c993b-1cdb-469e-af23-5085a399c56a&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-development-and-deployment-challenges&#34;&gt;开发和部署挑战&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;69e2fa78-b887-464e-b61a-5cf9ac9cab81&#34;,&#34;dropCap&#34;:false}&#34;&gt;因为 Preon 是托管在 Uber UP 基础设施中的微服务，它享有生态系统的任何好处，例如：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;74bfb4d5-6c0a-44c0-bc8a-7e31e789481c&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;根据利用率自动水平缩放 Preon 实例数量&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;实例之间的请求负载均衡&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;能够垂直缩放实例&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;在出现服务故障、CPU 利用率和延迟峰值时自动记录、监控和发出警报&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;不同流量类别的不同环境，例如分期、关键、非关键&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;标准 CI/CD&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;为新 API 调用提供基础设施支持&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;75cf7244-ab54-42cc-887b-7aa03dd4dd0f&#34;,&#34;dropCap&#34;:false}&#34;&gt;此外， Preon 中每个端点的延迟和可靠性通过附加指标单独监控。尽管 Preon 提供与生产 Presto 集群同等的可靠性 SLA，但端点以故障开放方式集成到调用方中，因此即使端点调用失败或超时，查询流仍会继续。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b0cd619a-e394-47c7-b022-4aa903d24298&#34;,&#34;dropCap&#34;:false}&#34;&gt;虽然 Preon 提供如上所述，它具有许多优点，但它还产生了额外的责任，即保持 Preon 中使用的 Presto 与 Uber Presto 同步。 Uber Presto 代码位于单独的存储库中，以便更轻松地从开源升级。同时，Preon 代码位于 Uber java 主存储库中，以便更好地利用开发人员工具。  因此，我们必须确保 Preon 使用 Uber Presto 存储库中的最新工件。使用新工件有时还需要更改分析代码。不使用最新的工件可能会导致分析失败。  例如，如果 Uber Presto 中添加了任何新的 SQL 函数或 UDF，那么如果查询使用这些新函数/UDF，则查询验证（使用 Preon）将会失败，除非 Preon 使用的 Presto 模块也进行了升级。为此，我们创建了轮换机制，定期升级 Preon Presto。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a05d8824-ccb1-4742-8ade-9dc51fdb677f&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;763aa2e7-a20d-4265-8794-384449ee8896&#34;,&#34;level&#34;:2}&#34; class=&#34;wp- block-heading&#34; id=&#34;h-use-cases-at-uber&#34;&gt;Uber 的用例&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fe552e73-4855-4f73-a4de-7ea4e9a4a766&#34;,&#34;dropCap&#34;:false}&#34;&gt;有很多Uber 的生产用例需要 Preon 来获取有关查询的见解。 Preon 的两个主要用例是查询结果缓存和数据布局格式化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;a2d4ec8d-d001-4cb9-8dc8-8ae812a1be0c&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-query-result-caching&#34;&gt;查询结果缓存&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;15a00c71-31d6-43c5-8d58-d54f0a0388b9&#34;,&#34;dropCap&#34;:false}&#34;&gt;Preon 提供API（LastUpdate）供上游调用者检查先前运行的查询的有效性。 Uber 有两个上游调用者使用此功能来减少冗余查询流量。对于第一个调用者，每个执行查询的哈希值都存储在 Redis 中，TTL 为 24 小时。当提交新查询并且其哈希值存在于 Redis 中时，会查询 Preon 以查看查询中任何数据集的最新修改时间是否早于其上次执行时间。如果是，则将之前的结果返回给调用者。由于底层数据没有改变，所以返回之前的结果是安全的。此外，有时仅匹配查询哈希是不够的。例如，当查询通过移动窗口读取数据时，例如最近 7 天，那么虽然查询看起来与之前的查询类似，但读取的数据可能不完全相同，因此我们必须从该功能中排除此类查询。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;34b7540c-da8d-4479-ae67-ae6773294d89&#34;,&#34;dropCap&#34;:false}&#34;&gt; 此功能具有该功能在 Uber 运行了 2 年多，我们发现大约 5-7% 的查询由于此功能而得到了重复数据删除。鉴于 Uber 的 Presto 每天运行约 50 万个查询，查询数量显着减少。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1096436,&#34;sizeSlug&#34;:&#34;large&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心”，“散列”：“c90f493c-f93c-4e21-9c3d-544ec1456c53”，“alt”：“”}“class =“aligncenter size-large”&gt;&lt;img加载=“惰性”解码=“异步”宽度= “1024”高度=“243”src=“https://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量= 80，onerror=重定向，format=auto/wp-content/uploads /2024/09/figure2-17273060195956-1024x243.png&#34; alt=&#34;&#34; class=&#34;wp-image-1096436&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure2-17273060195956.png 1024w，https://blog.uber-cdn.com/cdn -cgi/image/width=300，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure2-17273060195956.png 300w，https://blog.uber-cdn.com/ cdn-cgi/image/width=768，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure2-17273060195956.png 768w，https://blog.uber-cdn.com /cdn-cgi/image/width=1334，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure2-17273060195956.png 1334w“尺寸=”（最大宽度：1024px） 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 2：按计数和百分比进行重复数据删除的查询数量&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;41233185-95c8-42ed-92bc-4556bcdb78f2&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;512a107d-5dbf-403e-b8ea-bfa6f51a2778&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-data-layout-formatting&#34;&gt;数据布局格式&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a94ede9a-d107-4660-b16f-3333ec2d65d1&#34;,&#34;dropCap&#34;:false}&#34;&gt;每个 Presto 查询在 Uber 执行的操作是通过 Preon 谓词分析端点进行后处理的。后处理是通过跟踪 Presto 查询事件主题并调用 Preon 并将结果记录在另一个 kafka 主题中来完成的。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1096439,&#34;sizeSlug&#34;:&#34;large&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心”，“散列”：“5ac9acb1-67b1-4f6a-9bea-0a8f4c4f774f”，“alt”：“”}“类=“aligncenter size-large”&gt; &lt;img加载=“惰性”解码=“异步”宽度= “1024”高度=“425”src=“https://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量= 80，onerror=重定向，format=auto/wp-content/uploads /2024/09/figure3-3-17273060601434-1024x425.png&#34; alt=&#34;&#34; class=&#34;wp-image-1096439&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width =1024，质量=80，onerror=重定向，格式=auto/wp-content/uploads/2024/09/figure3-3-17273060601434.png 1024w，https://blog.uber-cdn.com/cdn-cgi/图片/宽度=300，质量=80，onerror=重定向，格式=auto/wp-content/uploads/2024/09/figure3-3-17273060601434.png 300w，https://blog.uber-cdn.com/cdn -cgi/image/width=768，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure3-3-17273060601434.png 768w，https://blog.uber-cdn。 com/cdn-cgi/image/width=1384，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/figure3-3-17273060601434.png 1384w“尺寸=”（最大宽度: 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 3：表格格式推荐系统&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p数​​据-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2a7691c6-b623-4a6e-b421-886ec9a04934&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2a7e0112-316f-46d1-9128-b99ed7a02519&#34;,&#34;dropCap&#34;:false}&#34;&gt;然后离线定期进行分析，以检查哪些列经常用作谓词来查询顶级表。根据用于谓词的值和这些列的基数，生成有关表中数据应按哪一列进行排序的建议，以及通过对数据进行排序预计节省的读取量。读取节省的实现是由于 Presto 中的谓词下推，其中 Presto 可以跳过文件或整个文件的读取部分，因为文件页脚中的最小/最大统计信息与用于过滤数据的值不匹配。根据建议对几个表进行排序后，我们发现从其中读取的数据量显着减少。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1096442,&#34;sizeSlug&#34;:&#34;full&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心”，“散列”：“bbb4b436-c023-4c72-a0d2-720050fc632b”，“alt”：“”}“类=“aligncenter size-full”&gt;&lt;img加载=“惰性”解码=“异步”宽度= “750”高度=“256”src=“https://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量= 80，onerror=重定向，format=auto/wp-content/uploads /2024/09/figure4-17273061334001.png&#34; alt=&#34;&#34; class=&#34;wp-image-1096442&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=750,quality =80，onerror=重定向，format=auto/wp-content/uploads/2024/09/figure4-17273061334001.png 750w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，质量= 80，onerror =重定向，格式=自动/可湿性粉剂内容/上传/2024/09/figure4-17273061334001.png 300w“尺寸=”（最大宽度：750px）100vw，750px“referrerpolicy=”无引荐” &gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 4：通过数据布局重新格式化每周数据读取节省。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;034fb341-e382-4996-a018-6d3cdb553540&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;35e298a0-61bd-4381-b891-4dec7fdde438&#34;,&#34;dropCap&#34;:false}&#34;&gt;在第一个在第一种情况下，从表中读取的每周数据从每周 4PB 减少到每周约 2PB，在第二种情况下，从每周 40PB 减少到每周约 20PB。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e07a0c8c-1ef5-460d-9368-744a308faf91&#34;,&#34;dropCap&#34;:false}&#34;&gt;分桶是另一种方法可以考虑的选项，但可能需要回填数据，这可能成本高昂。此外，由于更改表布局也需要计算资源，因此查询的好处需要权衡节省的成本和重新格式化的成本，因此这可能只对大量读取的表有意义。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;98e91f82-71de-4db8-8cec-28688c4a7a55&#34;,&#34;dropCap&#34;:false}&#34;&gt;一些其他用途目前使用Preon的案例有：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d8e0503a-65b1-440f-8eb6-6f8787ecd809&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;查询验证，即在接受查询之前检查查询是否存在结构问题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;权限检查，即如果用户没有表/列的权限，则提前拒绝查询。&lt;/li &gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;将查询路由到 &lt;a href=&#34;https://www.uber.com/blog/modernizing- ubers-data-infrastruct-with-gcp/?uclick_id=1d3e4386-1f42-4d4f-92d9-3816206f3720&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;云集群&lt;/a&gt;基于云中表的存在.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8806e51b-883d-42d5-ba59-d6260bc7c4f3&#34;,&#34;dropCap&#34;:false}&#34;&gt;Preon 目前获取在 Uber 的 Presto 查询执行的生命周期中被调用多次。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1096445,&#34;sizeSlug&#34;:&#34;full&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心”，“散列”：“f1aa9df0-dc73-4b9a-a07e-8a92dd1a2872”，“alt”：“”}“class =“aligncenter size-full”&gt;&lt;img加载=“惰性”解码=“异步”宽度= “842”height =“495”src =“https://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量= 80，onerror =重定向，format = auto/wp-content/uploads /2024/09/figure5-17273061772075.png&#34; alt=&#34;&#34; class=&#34;wp-image-1096445&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=842,quality =80，onerror=重定向，format=auto/wp-content/uploads/2024/09/figure5-17273061772075.png 842w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，质量=80，onerror=重定向，format=auto/wp-content/uploads/2024/09/figure5-17273061772075.png 300w，https://blog.uber-cdn.com/cdn-cgi/image/width=768 ,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure5-17273061772075.png 768w&#34; 尺寸=&#34;(最大宽度: 842px) 100vw, 842px&#34;referrerpolicy=&#34;no-referrer &#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 5：Uber 查询处理工作流程中的 Preon 调用&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;18e9d271-4866-4159-8c74-3fd77d7313fa&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6eda09e4-fef1-43d4-92e2-ad78c1e0af03&#34;,&#34;不透明度&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;a0729a16-cd7e-4968-8cf4-ae5761ca6db6&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-next-steps&#34;&gt;后续步骤&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b7fc32a9-1957-4b71-88fe-74b4c01db304&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们还计划使用 Preon 进行基于成本的路由，并在查询分析显示显着的成本效益时自动启用某些优化，例如 CTE 实现。另一个潜在的用例是根据输入分区何时可用来及时调度 ETL 工作负载。这需要了解查询正在读取哪些分区。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;648f0a52-76d0-4b37-8bf4-5cf338e274cd&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;bf7d3536-5027-4cc4-8be1-065daf6e8a74&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-conclusion&#34;&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fc2c553c-27fa-41e6-bfa8-5561949b5b2a&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们相信查询分析应该被提升为一等公民，查询引擎应该提供自定义的可插入分析工具。虽然引擎内的查询重写功能已经取得了一些进展，但是正如我们在上面的许多情况下所示，需要在查询执行之前对其进行深入了解。我们希望看到开源社区中独立查询分析的发展并能够为其做出贡献。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;b0800bb7-954d-4462-a43a-41ad0bf613e7&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;Presto 是 LF Projects, LLC 在美国和/或其他国家/地区的注册商标。使用此标志并不暗示 The LF Projects, LLC 的认可。 Kafka 和 Apache Calcite 是 Apache Software Foundation 在美国和/或其他国家/地区的商标。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;8b25d545-5534-42c0-9660-a575b4a636f7&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;封面照片出处：“&lt;a href=&#34;https://www.flickr.com/photos/188454520@N02/49917389986&#34;&gt;Torx Bits 金属铁工具2020 年编辑&lt;/a&gt;”由 &lt;a href=&#34;https://www.flickr.com/photos/188454520@N02&#34;&gt;chimpwithcan&lt;/a&gt; 获得 &lt;a href=&#34;https://creativecommons.org 许可/licenses/by/2.0/?ref=openverse&#34;&gt;CC BY 2.0&lt;/a&gt;。&lt;/p&gt;</description>
      <pubDate>Thu, 26 Sep 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【DataMesh: How Uber laid the foundations for the data lake cloud migration】DataMesh：Uber 如何为数据湖云迁移奠定基础</title>
      <link>https://www.uber.com/blog/datamesh/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;401572ae-639f-4c19-86ef-84e3b9b4801d&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fdb502df-ebe1-4382-b2ee-6e3f4d876d28&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber’s batch data platform is used by over 10,000 active internal users, ranging from data scientists, city operations, and business analysts to engineers. It hosts around 1.5 exabytes of Apache Hadoop&lt;sup&gt;Ⓡ&lt;/sup&gt; Distributed File System (HDFS) storage across two on-prem regions, serving over 500,000 Presto queries and over 370,000 Apache Spark&lt;sup&gt;TM&lt;/sup&gt; apps daily.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9877877f-e962-4011-b044-e2b97e39b060&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As discussed in our previous post, &lt;a href=&#34;https://www.uber.com/blog/modernizing-ubers-data-infrastructure-with-gcp/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;Modernizing Uber’s Batch Data Infrastructure with Google Cloud Platform&lt;/em&gt;&lt;/a&gt;, Uber is migrating the batch data platform to the cloud (GCP). Our strategy is to utilize the cloud’s object storage (GCS) for the data lake while transitioning the rest of our data infrastructure to cloud-based Infrastructure as a Service (IaaS).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;be53613f-6b03-46fb-9014-fc913e06674b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the previous blog, &lt;a href=&#34;https://www.uber.com/blog/securing-hadoop-on-gcp/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;Enabling Security for Hadoop Data Lake on Google Cloud Storage&lt;/em&gt;&lt;/a&gt;, we explored the security considerations of the migration and strategies for bridging the gap between HDFS and GCS security models.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9e79bc47-c3e2-4039-9f28-7243e9a50be1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In this blog, we delve into the details of how Uber laid the foundations for the batch data cloud migration by incorporating key &lt;a href=&#34;https://martinfowler.com/articles/data-mesh-principles.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;data mesh principles&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;92712175-8328-4243-97b2-d1439b35c1e6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;aed21c53-8df6-4a15-837e-f5d12f118c50&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-motivation&#34;&gt;Motivation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cd9d6d1d-8444-40c8-92b4-714a9408786b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Cloud providers have &lt;a href=&#34;https://cloud.google.com/storage/quotas&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;various limits&lt;/a&gt; on storage and IAM policies that pose challenges while migrating batch data to the cloud. Our major considerations while planning the cloud migration were:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cd73ebbd-d932-4995-8ec6-c55a0430d483&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Optimal Data Mapping:&lt;/strong&gt; Map HDFS files and directories to storage buckets in a Goldilocks manner–not map too much data to too few buckets, thus running into per-project or per-bucket quotas, and not spread the data out to too many buckets to run into the overhead of maintaining too many buckets.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dbf88336-b8ae-40e3-81c4-7f913e724c78&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Access Control:&lt;/strong&gt; Place access controls at the appropriate level in the storage hierarchy without running into hard limits from the cloud providers, while also not overly elevating privileges for existing users.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2516611e-caa8-4c34-a461-5d7a0afc28fe&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Additionally,&amp;nbsp; we also saw the cloud migration as an opportunity to make improvements to our data lake:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;922befb6-bd92-4968-b9eb-ac8a9c6a0dd4&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Security group consolidation:&lt;/strong&gt; Address the issue of proliferation of security groups with overlaps and consolidate users into fewer groups such that per-user access stays the same.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;63dbb565-c670-4055-bed6-4594229eca03&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Decentralized data ownership:&lt;/strong&gt; Cleanly map Hive DBs and tables belonging to an organization into a bucket belonging to that org, thus leveraging cloud primitives to formalize &lt;a href=&#34;https://martinfowler.com/articles/data-mesh-principles.html#PrinciplesSummaryAndTheHighLevelLogicalArchitecture&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;data mesh principles&lt;/a&gt; of data ownership and easier cost attribution.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7016f88d-4a1b-4f50-a5e2-a8b1de356fe3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Today, the “Data team” acts as an intermediary admin and manages access controls for ingested raw datasets. Say someone requests access to a raw table: the Data Ingestion L1 team first asks approval from the owner of this raw table, then grants access to the requestor once approved.&amp;nbsp; With decentralized ownership, this intermediary role can be avoided and the owner can take charge of data access, just like model tables.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f4382787-f1a8-486d-a2ce-600750cb6865&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Data governance:&lt;/strong&gt; Take this opportunity to further improve data governance by mapping data based on its intended usage and lifetime. For example, place well-modeled datasets meant for broad consumption into a bucket with appropriate access control, while placing raw datasets into a bucket which can have reduced access. Place less-business-critical data into separate buckets with appropriate TTL, restricted access, and object lifecycle management policies.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;10188db3-16b8-445c-9c44-4debc444918d&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Automated environment setup:&lt;/strong&gt; We also wanted to automate setting up our infrastructure, starting with the cloud assets. This enables us to set up and tear down environments easily, thus helping with testing, staging, and production. Additionally this facilitates quickly bootstrapping new data analytics use cases and bringing up the stack in multiple regions for DR.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f0dd306d-2a59-4156-b096-9c93350601f6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The cloud migration presented an unique opportunity to address this by incorporating ideas from &lt;a href=&#34;https://martinfowler.com/articles/data-mesh-principles.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;data mesh principles&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6cfa4eef-f7ed-4700-81a4-f4edc280cc4a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2b6909b6-4a8d-44bc-9a52-b25b8cad4ca6&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-data-mesh-and-corresponding-cloud-concepts&#34;&gt;Data Mesh and Corresponding Cloud Concepts&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ab90d8c3-057c-4fef-8a69-74837da568af&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We introduced generic concepts modeled around the data mesh principles, to abstract the cloud constructs and easily adapt it to any chosen cloud provider.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9f27482c-ce9f-466a-ae8e-e44a97388b37&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Domain:&lt;/strong&gt; A hierarchical unit of organizing all the resources in an organization or team. In data mesh terms, domains can be both at the organization level or at a sub-organization/team level.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Domain Resources:&lt;/strong&gt; Cloud providers have resource containers, which are a unit of access control, resource grouping, and cost accounting.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Data Collection: &lt;/strong&gt;A logical container for data (DB/tables/files) belonging to the same category (e.g., raw data, tables for internal consumption or modeled tables for external broad access). This may be captured as labels in the corresponding cloud resources.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Domain Storage:&lt;/strong&gt; The storage buckets which are a unit of access control,&amp;nbsp; cost accounting, geographic location, storage class (hot, warm, cold), data lifecycle policies (TTL, legal holds, etc.), and data replication (to either standby store or archival store).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Data Product:&lt;/strong&gt; A curated, discoverable, and usable representation of data, which includes the Hive tables, BI dashboards, workflow pipelines, etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9f07e8ae-12a9-43eb-805b-94df0ebd8ec7&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1095631,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;42c56277-70fc-47af-9512-2b3ac034509d&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;703&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/screenshot-2024-09-10-at-12.37.33-17259646958993-1024x703.png&#34; alt=&#34;&#34; class=&#34;wp-image-1095631&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/screenshot-2024-09-10-at-12.37.33-17259646958993.png 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/screenshot-2024-09-10-at-12.37.33-17259646958993.png 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/screenshot-2024-09-10-at-12.37.33-17259646958993.png 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1384,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/screenshot-2024-09-10-at-12.37.33-17259646958993.png 1384w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Fig 1: Abstractions modeled around DataMesh and its mapping to cloud provider concepts.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b96336da-8bec-48f3-988f-022c5b6250e3&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;53b6652c-3fae-4b06-b7cb-62ba51afddea&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The below figure depicts how the data can be organized to align with the organizational hierarchy via the above constructs modeled around the data mesh principles.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;64766914-1b79-4946-b72b-473b0900ab56&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;9d4a06f9-02d6-44a1-8deb-f9dd043d7170&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcNBYoG3NmdpcxKHRFq6A3grJbF0RgAiN0vilpWcLZ2tLz6seG2VX_QkqMD-6uUjXk5MtxWVUkIMBifoSOnsPGOLbapb0Mide_9h7SW718cy9DYn_-vCHg6kJwslcbADyNVPiiO_iLHnnGahrRc5cRjfb4?key=Z4nUnZcVVVjMulk9CZK0Pg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Fig 2: A logical view of the DataMesh components and the hierarchy.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a746dd40-7970-4c52-a5db-ca18290436ef&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;52ad0365-c483-4726-ae3d-bbef7ff32bc6&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-datamesh-service&#34;&gt;DataMesh Service&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a87abc1b-6366-428c-b9e7-616cdc229ab2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We built “DataMesh,” a cloud resources management service that organizes data resources in an organization-centric hierarchical manner. The service allows administration of changes to these resources in a safe and compliant manner, and periodically reconciles the state in the cloud with the desired goal state.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ff3ffcaf-869b-40a1-b39e-b331e25bbf46&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;By abstracting away the complexities of managing the underlying infrastructure, the DataMesh service empowers the organizations to take charge and maximize the value of their data, and easily share the data with other teams via well-known interface points.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;91ff8c97-8d56-4afb-ae2e-5e03c160f823&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0df9ec79-97ad-4321-b79e-d766b17be45d&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture&#34;&gt;Architecture&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e6045b96-89f4-4c2b-969f-b34fabf7ccef&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The DataMesh service forms the foundation of Batch DataLake’s cloud control plane. It bootstraps the cloud resources like GCP projects and storage buckets for each organization (domain), sets up bucket IAM and OLM policies, collects the cloud metrics, and pushes them into Uber’s internal framework for monitoring and alerting.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e90b49aa-c64b-4da8-acf6-3c04b13f0cf4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The DataMesh service pulls the organization hierarchy (teams and sub-teams) from Uber’s central ownership repository (uOwn), determines the table ownership, and maps the data to the corresponding organization’s cloud resources. The service also extracts table metadata from &lt;a href=&#34;https://www.uber.com/blog/databook/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;uMetadata&lt;/a&gt; (an internal repository of the schema, lineage, and business criticality of data) to label the cloud resources (like buckets) with relevant information.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7600d21d-fe52-49c7-8380-0bb46bb3e3c2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;All of this management is automated via reconciliation workflows, which are triggered either by events or time-based schedules. The reconciliation logic ensures that the data is mapped based on its ownership to the right cloud resources and the appropriate security, governance, and lifecycle policies are applied to the cloud resources.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;55ee19f9-6b49-49d5-b8da-e54039152aaf&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1095520,&amp;quot;sizeSlug&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;44cb95f0-8958-422c-996c-d8a96c4dbddb&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;768&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/draft-datamesh-blog-17258996155985.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095520&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/draft-datamesh-blog-17258996155985.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/draft-datamesh-blog-17258996155985.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/draft-datamesh-blog-17258996155985.jpeg 768w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Fig 3: The DataMesh service powering the cloud control plane.&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e546fb3a-3635-4b6b-8c63-a82dcecf0405&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;651b1f71-f3c6-4e77-83c4-9fa125e20c81&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-dashboard-ui&#34;&gt;Dashboard/UI&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4c71503e-5312-46da-95cb-555e21762822&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The DataMesh dashboard/UI provides domain administrators with a comprehensive view of their domain’s underlying cloud infrastructure like buckets, quotas, metrics, etc., and their data products (currently focused on Hive databases and tables). While initially designed for domain administrators, we plan to expand the dashboard to include features that are relevant to users to discover data and for the domain admins to manage the infra in a self-service manner.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fb30a199-0caa-4ee9-8d4a-ecf91af88f04&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ae18ee53-a7f8-4797-bb6e-98880485a65c&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-simplifying-the-migration-and-future-proofing-the-system&#34;&gt;Simplifying the migration and future-proofing the system&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;07769ea8-88a0-44e3-bae8-27c2ff7a6738&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One of our migration goals was to make the migration less painful for our users. There are over 100,000 &lt;a href=&#34;https://www.uber.com/blog/managing-data-workflows-at-scale/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;user workflows&lt;/a&gt; and millions of lines of user code in the Uber’s Batch Data platform.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;03e5e51c-589f-4590-8f18-329c38b9a7be&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Many of the workflows and the underlying Spark applications have hard-coded HDFS paths in the code and configs. Asking users to update their code would have slowed down the overall migration process. Instead, we built an automated path translation logic to map the on-prem paths to cloud-based paths.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;46795360-4c83-4683-b70b-67668e4809d8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The DataMesh service captures the on-prem path to bucket path mapping as a part of the migration in a “Path Translation Service” (PTS). The PTS is looked up at runtime by the storage clients to automatically rewrite the on-prem paths to its corresponding cloud destination. Watch out for a future blog post detailing how we handled the hard-coded paths that we encountered in our jobs and pipelines as many companies accumulate these over time!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2b8f5808-56c9-4b80-b5fa-7b19e625cf1e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To future-proof the system and make it cloud-agnostic, one of our principles was to NOT leak the bucket paths in the user code or pipelines going forward. The data may need to be moved across buckets due to various reasons (e.g., ownership changes, compliance requirements, changing data access patterns, new cloud provider features, etc.).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c0f0b6f9-41f7-4d88-9cfc-b221a7af4e12&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We created a new “logical file system” to abstract the bucket paths, and have consistent naming across cloud providers.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;064baadb-cc8c-4c1c-838c-6e836c874ea3&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e0bab1f4-4416-440d-814e-4373e0501d0c&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-challenges&#34;&gt;Challenges&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;20204da1-1e87-453a-b890-6fd9ddeca8f2&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-ownership-changes&#34;&gt;Ownership changes&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;36fea77d-1ff3-45c5-aa57-f709dbbeb80f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The DataMesh service organizes both cloud resources and data assets based on their ownership. For newly created assets (tables), if the ownership is not explicitly provided at creation time, the service uses various heuristics like the bucket location of the data, the organization of the asset creator, etc., to determine the ownership.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;70dfe27c-0d04-4d63-9378-af3ea1ac2a7b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;However the ownership of the assets can change due to users explicitly re-assigning the asset’s ownership or team reorgs, necessitating remapping the assets or moving the data to the target org’s cloud resources.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;035ee838-d00d-4cbc-aa01-fd5d8be057b7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We have implemented an automated process that continuously monitors ownership changes and performs remapping in the background.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;64f1c04a-3fb5-4b1e-98f6-d182eb8da339&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To minimize the data movement, the service re-labels the assets and/or moves GCP projects to the parent folder of target org whenever possible. For cross-bucket transfers, we leverage the GCP &lt;a href=&#34;https://cloud.google.com/storage-transfer/docs/cloud-storage-to-cloud-storage&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Storage Transfer Service&lt;/a&gt;, which optimizes for metadata-only copies when source and destination storage classes match.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;55f06d65-aa0c-4cc9-b66a-8a73164f5924&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-cloud-provider-limits-and-quotas&#34;&gt;Cloud provider limits and quotas&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0d895fca-b2ed-48e9-b8a0-288ec53d67f3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;GCS imposes various limits and quotas. Our service considers these constraints while mapping the data into the GCP Projects and buckets for optimal distribution.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ae6f3e1b-4ecb-4b2e-a163-399f1d3dcce7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For example, to avoid hitting GCS &lt;a href=&#34;https://cloud.google.com/storage/docs/request-rate#auto-scaling&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;read/write IOPS throttling&lt;/a&gt;, heavily-used tables (identified through metrics) are placed in separate buckets. This not only improves performance, but also provides readily available GCS metrics for those tables in the GCS dashboard for easier troubleshooting.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;b223434e-3ca9-4976-9bd3-22e96651da68&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-resource-usage-attribution-and-cost-control&#34;&gt;Resource usage attribution and cost control&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;111ccb0d-5fd4-4375-b5a4-176ae92a35f7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;On-premises, we leverage HDFS directory quotas and custom monitoring to manage the data usage. However, GCS lacks native mechanisms for setting object storage quotas. To bridge the gap, we built a system for organization admins to monitor usage (cost, bytes, operations, egress, etc.) at the org, bucket, and table levels, and optionally set storage quotas. This ensures storage costs align with organizational targets. The system continuously monitors GCS resource usage and takes action like sending notifications and blocking access when limits are exceeded.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c7eb96d2-8a80-4a7f-b6a4-019e1f8fd146&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-next-steps&#34;&gt;Next steps&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6efe3fc3-af06-4bf3-add4-5ff697282159&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We want to continue to build up on the principles of datamesh and empower data owners and users by creating a&amp;nbsp; “data domains” platform where:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7bfe124f-1484-412d-b192-c270a49be83c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Data is self-governed:&lt;/strong&gt; Users logically organize data, metadata and related artifacts (code/pipeline, notebooks, etc.) into domains that align with the ownership boundaries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;abfe4dee-814b-41ab-a907-7f714d3002a0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Infrastructure management is simplified:&lt;/strong&gt; Enable capability to manage the cloud infrastructure for data processing in a self-serve manner. Automatically optimize the infrastructure to drive efficiency and cost savings.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;67ca08fa-8066-4b8b-8291-51c39b2355cb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Data Governance becomes intuitive:&lt;/strong&gt; Leverage capabilities available in different Uber services and &lt;a href=&#34;https://www.uber.com/blog/metadata-insights-databook/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;tools like Databook&lt;/a&gt;, build the missing features and integrate it into a single pane of glass view for managing all aspects of data in the cloud.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;a97dfafd-a34b-4805-ad03-e84b08d82b9b&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dd65c097-5a5d-4a13-8594-e7661dfaedc1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber’s cloud migration of its exabyte-scale batch data platform involves multiple teams, and challenges stemming from a legacy on-premises stack.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c0ddc95b-4ae2-4289-bf80-f38f372fdbce&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;By building the DataMesh service, we were able to deliver the following key wins:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1ebf68a8-8f76-49dd-8e71-5af6cf7c1f3f&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Simplified Cloud Resource Management: &lt;/strong&gt;Abstracted away the complexities of cloud infrastructure, automating resource provisioning, configuration, and management.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Optimized Data Placement:&lt;/strong&gt; Optimally mapped data to buckets, navigating various GCS quota limits and ensuring performance parity with HDFS.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Ownership:&lt;/strong&gt; Organized data based on ownership, streamlining cost attribution, simplifying quota management, and fostering decentralized data ownership.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;49ddc6a2-640f-407a-a460-85141e3c4cae&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;By embracing Data Mesh principles, we not only aim to streamline the migration, but also establish a foundation for a more agile, secure, and cost-effective data ecosystem.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a673c51a-2b3b-43b7-af20-1a7e0b32ea2c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We hope that by sharing our experiences and learnings, we can inspire and guide other organizations embarking on similar cloud migrations. We’re excited to continue innovating in this space, and look forward to sharing more insights, execution progress and the lessons learned in the future blog posts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b3c28bb6-58c2-4ccb-99a3-45b89fecde70&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f2d985a6-c8c8-4268-bce6-d9a5e6edfd7a&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34;&gt;Acknowledgments&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e0f7bbeb-6879-4afd-ad4c-369b699d6b76&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We are really grateful for the invaluable contributions of the DataMesh team members Charles Huang, Bugra Cavdar, and Yue Peng. Their dedication has been instrumental in the success of this initiative. We would also like to thank Mithun “Matt” Mathew for his insightful review and feedback for this blog.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;a6c2b7d0-c13b-448a-8c72-065a111376ee&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Apache&lt;sup&gt;®&lt;/sup&gt;, Apache Hadoop&lt;sup&gt;Ⓡ&lt;/sup&gt;, Apache Parquet™, Apache Hudi™, Apache Spark™, Apache Hadoop YARN™ are registered trademarks or trademarks of the &lt;/em&gt;&lt;a href=&#34;http://www.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;Apache Software Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt; in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;43e7c70b-cfc6-4070-8f28-c5e53f30116f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Oracle, Java, MySQL, and NetSuite are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;51ee3b72-968e-45eb-8586-532a820f21a3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;The Grafana Labs Marks are trademarks of Grafana Labs, and are used with Grafana Labs’ permission. We are not affiliated with, endorsed or sponsored by Grafana Labs or its affiliates.Cover Photo Attribution: “&lt;/em&gt;&lt;a href=&#34;https://www.flickr.com/photos/100359919@N08/48083867888&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;Biosphere Environmental Museum&lt;/em&gt;&lt;/a&gt;&lt;em&gt;” by &lt;/em&gt;&lt;a href=&#34;https://www.flickr.com/photos/100359919@N08&#34;&gt;&lt;em&gt;vmokry&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is licensed under &lt;/em&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/?ref=openverse&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;CC0 1.0&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;】&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;401572ae-639f-4c19-86ef-84e3b9b4801d&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-introduction&#34;&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fdb502df-ebe1-4382-b2ee-6e3f4d876d28&#34;,&#34;dropCap&#34;:false}&#34;&gt;Uber 批量数据该平台有超过 10,000 名活跃的内部用户使用，其中包括数据科学家、城市运营、业务分析师和工程师。它在两个本地区域托管约 1.5 艾字节的 Apache Hadoop&lt;sup&gt;Ⓡ&lt;/sup&gt; 分布式文件系统 (HDFS) 存储，每天为超过 500,000 个 Presto 查询和超过 370,000 个 Apache Spark&lt;sup&gt;TM&lt;/sup&gt; 应用程序提供服务.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9877877f-e962-4011-b044-e2b97e39b060&#34;,&#34;dropCap&#34;:false}&#34;&gt;如中所述我们之前的帖子，&lt;a href=&#34;https://www.uber.com/blog/modernizing-ubers-data-infrastruct-with-gcp/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;现代化Uber 的批量数据基础设施与 Google Cloud Platform&lt;/em&gt;&lt;/a&gt;，Uber 正在将批量数据平台迁移到云端（GCP）。我们的策略是利用云的对象存储 (GCS) 作为数据湖，同时将其余数据基础设施过渡到基于云的基础设施即服务 (IaaS)。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;be53613f-6b03-46fb-9014-fc913e06674b&#34;,&#34;dropCap&#34;:false}&#34;&gt;在前面博客，&lt;a href=&#34;https://www.uber.com/blog/securing-hadoop-on-gcp/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;为 Hadoop Data Lake 启用安全性Google Cloud Storage&lt;/em&gt;&lt;/a&gt;，我们探讨了迁移的安全注意事项以及弥合 HDFS 和 GCS 安全模型之间差距的策略。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9e79bc47-c3e2-4039-9f28-7243e9a50be1&#34;,&#34;dropCap&#34;:false}&#34;&gt;在此博客中，我们深入研究了 Uber 如何通过合并关键 &lt;a href=&#34;https://martinfowler.com/articles/data-mesh-principles.html&#34; target=&#34;_blank&#34; rel 为批量数据云迁移奠定基础的细节=&#34;noreferrer noopener&#34;&gt;数据网格原理&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;92712175-8328-4243-97b2-d1439b35c1e6&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;aed21c53-8df6-4a15-837e-f5d12f118c50&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-motivation&#34;&gt;动机&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cd9d6d1d-8444-40c8-92b4-714a9408786b&#34;,&#34;dropCap&#34;:false}&#34;&gt;云提供商有&lt;a href=&#34;https://cloud.google.com/storage/quotas&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;va存储和 IAM 策略的严重限制给批量数据迁移到云端带来了挑战。我们在规划云迁移时的主要考虑因素是：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cd73ebbd-d932-4995-8ec6-c55a0430d483&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;最佳数据映射：&lt;/strong&gt;将 HDFS 文件和目录映射到 Goldilocks 中的存储桶方式 - 不要将太多数据映射到太少的存储桶，从而导致每个项目或每个存储桶的配额，也不要将数据分散到太多的存储桶，以免产生维护太多存储桶的开销。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dbf88336-b8ae-40e3-81c4-7f913e724c78&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;访问控制：&lt;/strong&gt;将访问控制置于存储层次结构中的适当级别，无需遇到云提供商的硬性限制，同时也不会过度提升现有用户的权限。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2516611e-caa8-4c34-a461-5d7a0afc28fe&#34;,&#34;dropCap&#34;:false}&#34;&gt;此外，我们还认为云迁移是改进我们的数据湖的机会：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;922befb6-bd92-4968-b9eb-ac8a9c6a0dd4&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;安全组整合&lt;/strong&gt;：解决存在重叠和安全组激增的问题将用户合并到更少的组中，以便每个用户的访问权限保持不变。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;63dbb565-c670-4055-bed6-4594229eca03&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;去中心化数据所有权&lt;/strong&gt;：将属于组织的 Hive 数据库和表清晰地映射到属于该组织的存储桶，从而利用云原语来形式化 &lt;a href=&#34;https://martinfowler.com/articles/data-mesh-principles.html#PrinciplesSummaryAndTheHighLevelLogicalArchitecture&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;数据所有权的数据网格原则&lt;/a&gt;和更简单的成本归因。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7016f88d-4a1b-4f50-a5e2-a8b1de356fe3&#34;,&#34;dropCap&#34;:false}&#34;&gt;今天， “数据团队”充当中间管理员，管理摄取的原始数据集的访问控制。假设有人请求访问原始数据表：数据摄取 L1 团队首先请求该原始表所有者的批准，然后在获得批准后向请求者授予访问权限。  通过分散所有权，可以避免这种中间角色，所有者可以负责数据访问，就像模型表一样。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f4382787-f1a8-486d-a2ce-600750cb6865&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;数据治理&lt;/strong&gt;：借此机会，通过基于数据的映射来进一步改进数据治理关于其预期用途和使用寿命。例如，将用于广泛使用的建模良好的数据集放入具有适当访问控制的存储桶中，同时将原始数据集放入可减少访问的存储桶中。将业务不太关键的数据放入具有适当 TTL、限制访问和对象生命周期管理策略的单独存储桶中。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;10188db3-16b8-445c-9c44-4debc444918d&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;自动化环境设置&lt;/strong&gt;：我们还希望自动设置我们的基础设施，从与云资产。这使我们能够轻松地设置和拆除环境，从而有助于测试、登台和生产。此外，这有助于快速引导新的数据分析用例，并在多个区域中建立堆栈以进行灾难恢复。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f0dd306d-2a59-4156-b096-9c93350601f6&#34;,&#34;dropCap&#34;:false}&#34;&gt;云迁移通过结合&lt;a href=&#34;https://martinfowler.com/articles/data-mesh-principles.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;数据网格原则&lt;的想法来解决这个问题提供了一个独特的机会/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6cfa4eef-f7ed-4700-81a4-f4edc280cc4a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2b6909b6-4a8d-44bc-9a52-b25b8cad4ca6&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-data-mesh-and-corresponding-cloud-concepts&#34;&gt;数据网格和相应的云概念&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ab90d8c3-057c-4fef-8a69-74837da568af&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们引入了泛型围绕数据网格原则建模的概念，以抽象云结构并轻松使其适应任何选定的云提供商。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9f27482c-ce9f-466a-ae8e-e44a97388b37&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34;&#34;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;域：&lt;/strong&gt;组织组织或团队中所有资源的分层单元。用数据网格术语来说，域可以是组织级别的，也可以是子组织/团队级别的。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;域资源&lt;/strong&gt;：云提供商拥有资源容器，这是一个访问单元控制、资源分组和成本核算。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;数据收集：&lt;/strong&gt;数据的逻辑容器（数据库/表/文件）属于同一类别（例如，原始数据、供内部使用的表或供外部广泛访问的建模表）。这可以被捕获为相应云资源中的标签。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;域存储&lt;/strong&gt;：作为访问控制单位的存储桶、成本会计、地理位置、存储类别（热、温、冷）、数据生命周期策略（TTL、合法保留等）以及数据复制（到备用存储或归档存储）。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;数据产品&lt;/strong&gt;：精心策划、可发现且可用的数据表示形式，包括 Hive 表、BI 仪表板、工作流程管道等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9f07e8ae-12a9-43eb-805b-94df0ebd8ec7&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1095631,&#34;sizeSlug&#34;:&#34;large&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心”，“散列”：“42c56277-70fc-47af-9512-2b3ac034509d”，“alt”：“”}“类=“aligncenter size-large”&gt;&lt;img加载=“惰性”解码=“异步”宽度= “1024”高度=“703”src=“https://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量= 80，onerror=重定向，format=auto/wp-content/uploads /2024/09/screenshot-2024-09-10-at-12.37.33-17259646958993-1024x703.png&#34; alt=&#34;&#34; class=&#34;wp-image-1095631&#34; srcset=&#34;https://blog.uber-cdn .com/cdn-cgi/image/width=1024，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/screenshot-2024-09-10-at-12.37.33-17259646958993 .png 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/screenshot- 2024-09-10-at-12.37.33-17259646958993.png 300w，https://blog.uber-cdn.com/cdn-cgi/image/width=768，quality=80，onerror=redirect，format=auto /wp-content/uploads/2024/09/screenshot-2024-09-10-at-12.37.33-17259646958993.png 768w，https://blog.uber-cdn.com/cdn-cgi/image/width=第1384章，质量=80，onerror=重定向，表格at=auto/wp-content/uploads/2024/09/screenshot-2024-09-10-at-12.37.33-17259646958993.png 1384w“尺寸=”（最大宽度：1024px）100vw，1024px“referrerpolicy=” no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 1：围绕 DataMesh 建模的抽象及其与云提供商概念的映射。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b96336da-8bec-48f3-988f-022c5b6250e3&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;53b6652c-3fae-4b06-b7cb-62ba51afddea&#34;,&#34;dropCap&#34;:false}&#34;&gt;下图描述了如何通过围绕数据网格原则建模的上述构造来组织数据以与组织层次结构保持一致。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;64766914-1b79-4946-b72b-473b0900ab56&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;9d4a06f9-02d6-44a1-8deb-f9dd043d7170&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXcNBYoG3NmdpcxKHRFq6A3grJbF0RgAiN0vilpWcLZ2tLz6seG2VX_QkqMD-6uUjXk5MtxWVUkIMBifoSONsPGOLbapb0Mide_9h7SW718cy9DYn_-vCHg6kJwslcbADyNVPiiO_i LHnnGahrRc5cRjfb4?key=Z4nUnZcVVVjMulk9CZK0Pg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图2：DataMesh 组件和层次结构的逻辑视图。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a746dd40-7970-4c52-a5db-ca18290436ef&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;52ad0365-c483-4726-ae3d-bbef7ff32bc6&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-datamesh-service&#34;&gt;DataMesh 服务&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a87abc1b-6366-428c-b9e7-616cdc229ab2&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们构建了“ DataMesh，一种云资源管理服务，以组织为中心的分层方式组织数据资源。该服务允许以安全且合规的方式管理对这些资源的更改，并定期使云中的状态与所需的目标状态保持一致。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ff3ffcaf-869b-40a1-b39e-b331e25bbf46&#34;,&#34;dropCap&#34;:false}&#34;&gt;通过抽象管理的复杂性作为底层基础设施，DataMesh 服务使组织能够掌控并最大化其数据价值，并通过众所周知的接口点轻松与其他团队共享数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;91ff8c97-8d56-4afb-ae2e-5e03c160f823&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0df9ec79-97ad-4321-b79e-d766b17be45d&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-architecture&#34;&gt;架构&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e6045b96-89f4-4c2b-969f-b34fabf7ccef&#34;,&#34;dropCap&#34;:false}&#34;&gt;DataMesh 服务构成 Batch DataLake 云控制平面的基础。它为每个组织（域）引导 GCP 项目和存储桶等云资源，设置存储桶 IAM 和 OLM 策略，收集云指标，并将其推送到 Uber 的内部框架中进行监控和警报。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e90b49aa-c64b-4da8-acf6-3c04b13f0cf4&#34;,&#34;dropCap&#34;:false}&#34;&gt;DataMesh 服务从 Uber 的中央所有权存储库 (uOwn) 中提取组织层次结构（团队和子团队），确定表所有权，并将数据映射到相应组织的云资源。该服务还从 &lt;a href=&#34;https://www.uber.com/blog/databook/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;uMetadata&lt;/a&gt;（数据中心的内部存储库）中提取表元数据。数据的架构、沿袭和业务关键性），用相关信息标记云资源（如存储桶）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7600d21d-fe52-49c7-8380-0bb46bb3e3c2&#34;,&#34;dropCap&#34;:false}&#34;&gt;所有这些管理通过对帐工作流程实现自动化，该工作流程由事件或基于时间的计划触发。协调逻辑确保数据根据其所有权映射到正确的云资源，并将适当的安全、治理和生命周期策略应用于云资源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;55ee19f9-6b49-49d5-b8da-e54039152aaf&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1095520,&#34;sizeSlug&#34;:&#34;full&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;hash&#34;:&#34; 44cb95f0-8958-422c-996c-d8a96c4dbddb&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;wp-block-image size-full&#34;&gt;&lt;img 加载=&#34;lazy&#34; 解码=&#34;async&#34; 宽度=&#34;1024&#34; 高度=&#34;768&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/draft-datamesh-blog-17258996155985.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095520&#34; srcset=&#34;https://blog.uber-cdn.com/cdn- cgi/image/width=1024，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/draft-datamesh-blog-17258996155985.jpeg 1024w，https://blog.uber-cdn .com/cdn-cgi/image/width=300，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/draft-datamesh-blog-17258996155985.jpeg 300w，https:// blog.uber-cdn.com/cdn-cgi/image/width=768，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/draft-datamesh-blog-17258996155985.jpeg 768w &#34;size=&#34;(max-width: 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 3：为云控制平面提供支持的 DataMesh 服务。&lt;/figcaption &gt;&lt;/图&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e546fb3a-363​​5-4b6b-8c63-a82dcecf0405&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;651b1f71-f3c6-4e77-83c4-9fa125e20c81&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-dashboard-ui&#34;&gt;仪表板/UI&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4c71503e-5312-46da-95cb-555e21762822&#34;,&#34;dropCap&#34;:false}&#34;&gt;DataMesh 仪表板/UI 为域管理员提供了其域的底层云基础设施（如存储桶、配额、指标等）及其数据产品（当前专注于 Hive 数据库和表）的全面视图。虽然最初是为域管理员设计的，但我们计划扩展仪表板以包含与用户发现数据以及域管理员以自助服务方式管理基础设施相关的功能。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fb30a199-0caa-4ee9-8d4a-ecf91af88f04&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ae18ee53-a7f8-4797-bb6e-98880485a65c&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-simplifying-the-migration-and-future-proofing-the-system&#34;&gt;简化迁移并确保系统面向未来&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;07769ea8-88a0-44e3-bae8-27c2ff7a6738&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的其中一个迁移目标是减少用户的迁移痛苦。有超过 100,000 个&lt;a href=&#34;https://www.uber.com/blog/managing-data-workflows-at-scale/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;用户工作流程&lt;/a&gt;以及 Uber 批量数据平台中的数百万行用户代码。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;03e5e51c-589f-4590-8f18-329c38b9a7be&#34;,&#34;dropCap&#34;:false}&#34;&gt;许多工作流程和底层 Spark 应用程序在代码和配置中具有硬编码的 HDFS 路径。要求用户更新代码会减慢整个迁移过程。相反，我们构建了一个自动路径转换逻辑，将本地路径映射到基于云的路径。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;46795360-4c83-4683-b70b-67668e4809d8&#34;,&#34;dropCap&#34;:false}&#34;&gt;DataMesh 服务捕获本地路径到存储桶路径映射，作为“路径转换服务”(PTS) 中迁移的一部分。存储客户端在运行时查找 PTS，以自动重写到其相应云目标的本地路径。请留意未来的博客文章，详细介绍我们如何处理在工作和管道中遇到的硬编码路径，因为许多公司随着时间的推移积累了这些路径！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2b8f5808-56c9-4b80-b5fa-7b19e625cf1e&#34;,&#34;dropCap&#34;:false}&#34;&gt;到未来-为了证明系统并使其与云无关，我们的原则之一是不要泄漏用户代码或管道中的存储桶路径。由于各种原因（例如，所有权变更、合规性要求、不断变化的数据访问模式、新的云提供商功能等），数据可能需要跨存储桶移动。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c0f0b6f9-41f7-4d88-9cfc-b221a7af4e12&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们创建了一个新的“逻辑文件系统”用于抽象存储桶路径，并在云提供商之间具有一致的命名。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;064baadb-cc8c-4c1c-838c-6e836c874ea3&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e0bab1f4-4416-440d-814e-4373e0501d0c&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-challenges&#34;&gt;挑战&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;20204da1-1e87-453a-b890-6fd9ddeca8f2&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-ownership-changes&#34;&gt;所有权变更&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;36fea77d-1ff3-45c5-aa57-f709dbbeb80f&#34;,&#34;dropCap&#34;:false}&#34;&gt;DataMesh 服务根据所有权组织云资源和数据资产。对于新创建的资产（表），如果在创建时未明确提供所有权，则服务会使用各种启发式方法（例如数据的存储桶位置、资产创建者的组织等）来确定所有权。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;70dfe27c-0d04-4d63-9378-af3ea1ac2a7b&#34;,&#34;dropCap&#34;:false}&#34;&gt;但是由于用户明确地重新分配资产的所有权或团队重组，因此需要重新映射资产或将数据移动到目标组织的云资源，资产的所有权可能会发生变化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;035ee838-d00d-4cbc-aa01-fd5d8be057b7&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们已经实施一个自动化过程，持续监控所有权变更并在后台执行重新映射。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;64f1c04a-3fb5-4b1e-98f6-d182eb8da339&#34;,&#34;dropCap&#34;:false}&#34;&gt;要最小化数据移动时，该服务会尽可能重新标记资产和/或将 GCP 项目移动到目标组织的父文件夹。对于跨存储桶传输，我们利用 GCP &lt;a href=&#34;https://cloud.google.com/storage-transfer/docs/cloud-storage-to-cloud-storage&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;存储传输服务&lt;/a&gt;，当源和目标存储类匹配时，它会针对仅元数据副本进行优化。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;55f06d65-aa0c-4cc9-b66a-8a73164f5924&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-cloud-provider-limits-and-quotas&#34;&gt;云提供商限制和配额&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0d895fca-b2ed-48e9-b8a0-288ec53d67f3&#34;,&#34;dropCap&#34;:false}&#34;&gt;GCS 强加了各种限制和配额。我们的服务在将数据映射到 GCP 项目和存储桶中以实现最佳分配时会考虑这些限制。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ae6f3e1b-4ecb-4b2e-a163-399f1d3dcce7&#34;,&#34;dropCap&#34;:false}&#34;&gt;例如，避免达到 GCS &lt;a href=&#34;https://cloud.google.com/storage/docs/request-rate#auto-scaling&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;读/写 IOPS 限制&lt;/ a&gt;，频繁使用的表（通过指标识别）被放置在单独的桶中。这不仅提高了性能，还为 GCS 仪表板中的这些表提供了现成的 GCS 指标，以便更轻松地进行故障排除。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;b223434e-3ca9-4976-9bd3-22e96651da68&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-resource-usage-attribution-and-cost-control&#34;&gt;资源使用归因和成本控制&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;111ccb0d-5fd4-4375-b5a4-176ae92a35f7&#34;,&#34;dropCap&#34;:false}&#34;&gt;本地，我们利用 HDFS 目录配额和自定义监控来管理数据使用。然而，GCS 缺乏设置对象存储配额的本机机制。为了弥补这一差距，我们为组织管理员构建了一个系统，用于监控组织、存储桶和表级别的使用情况（成本、字节、操作、出口等），并可选择设置存储愤怒配额。这可确保存储成本与组织目标保持一致。系统持续监控GCS资源使用情况，并在超出限制时采取发送通知、阻止访问等措施。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c7eb96d2-8a80-4a7f-b6a4-019e1f8fd146&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-next-steps&#34;&gt;后续步骤&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6efe3fc3-af06-4bf3-add4-5ff697282159&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们想要继续建立数据网格原则，并通过创建“数据域”平台来增强数据所有者和用户的能力，其中：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7bfe124f-1484-412d-b192-c270a49be83c&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;数据是自我管理的：&lt;/strong&gt;用户按照逻辑将数据、元数据和相关工件（代码/管道、笔记本等）组织到与所有权边界一致的域中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;abfe4dee-814b-41ab-a907-7f714d3002a0&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;基础设施管理得到简化：&lt;/strong&gt;能够以自助方式管理用于数据处理的云基础设施。自动优化基础设施以提高效率并节省成本。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;67ca08fa-8066-4b8b-8291-51c39b2355cb&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;数据治理变得直观：&lt;/strong&gt;利用不同 Uber 服务和&lt;a href=&#34;https://www.uber.com/blog/metadata-insights-databook/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer 中提供的功能noopener&#34;&gt;像 Databook 这样的工具&lt;/a&gt;，构建缺失的功能并将其集成到单一管理平台视图中，以管理云中数据的各个方面。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;a97dfafd-a34b-4805-ad03-e84b08d82b9b&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-conclusion&#34;&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dd65c097-5a5d-4a13-8594-e7661dfaedc1&#34;,&#34;dropCap&#34;:false}&#34;&gt;Uber 的云迁移其 EB 级批量数据平台涉及多个团队，并且面临来自遗留本地堆栈的挑战。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c0ddc95b-4ae2-4289-bf80-f38f372fdbce&#34;,&#34;dropCap&#34;:false}&#34;&gt;通过构建通过 DataMesh 服务，我们取得了以下关键成果：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1ebf68a8-8f76-49dd-8e71-5af6cf7c1f3f&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;简化云资源管理：&lt;/strong&gt;消除云基础设施的复杂性，实现资源调配、配置和管理的自动化。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;优化数据放置&lt;/strong&gt;：将数据优化映射到存储桶，应对各种 GCS 配额限制并确保与 HDFS 的性能相当。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;所有权：&lt;/strong&gt;根据所有权组织数据，简化成本归属，简化配额管理，并促进去中心化的数据所有权。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;49ddc6a2-640f-407a-a460-85141e3c4cae&#34;,&#34;dropCap&#34;:false}&#34;&gt;拥抱数据网格原则，我们不仅旨在简化迁移，还为更加敏捷、安全和经济高效的数据生态系统奠定基础。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a673c51a-2b3b-43b7-af20-1a7e0b32ea2c&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们希望通过分享我们的经验和学习，我们可以激励和指导其他组织开展类似的云迁移。我们很高兴能够在这一领域继续创新，并期待在未来的博客文章中分享更多见解、执行进度和经验教训。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b3c28bb6-58c2-4ccb-99a3-45b89fecde70&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f2d985a6-c8c8-4268-bce6-d9a5e6edfd7a&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34;&gt;致谢&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e0f7bbeb-6879-4afd-ad4c-369b699d6b76&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们真的感谢 DataMesh 团队成员 Charles Huang、Bugra Cavdar 和 Yue Peng 的宝贵贡献。他们的奉献精神对这一举措的成功发挥了重要作用。我们还要感谢 Mithun “Matt” Mathew 对此博客的富有洞察力的评论和反馈。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;a6c2b7d0-c13b-448a-8c72-065a111376ee&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Apache&lt;sup&gt;®&lt;/sup&gt;、Apache Hadoop&lt;sup&gt;Ⓡ&lt;/sup&gt;、Apache Parquet™、Apache Hudi™、Apache Spark ™、Apache Hadoop YARN™ 是 Apache Software 的注册商标或商标&lt;/em&gt;&lt;a href=&#34;http://www.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;美国和/或其他国家的基金会&lt;/em&gt;&lt;/a&gt;&lt;em&gt;。使用这些标记并不暗示 Apache 软件基金会的认可。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p 数据-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;43e7c70b-cfc6-4070-8f28-c5e53f30116f&#34;,&#34;dropCap&#34;:false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Oracle、Java、MySQL 和 NetSuite 是 Oracle 和/或其附属公司的注册商标。其他名称可能是其各自所有者的商标。&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;51ee3b72-968e-45eb-8586-532a820f21a3&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;&lt;em&gt;Grafana Labs 标记是 Grafana Labs 的商标，经 Grafana Labs 许可使用。我们不隶属于 Grafana Labs 或其附属机构，也不受其认可或赞助。封面照片归属：“&lt;/em&gt;&lt;a href=&#34;https://www.flickr.com/photos/100359919@N08/48083867888&#34; target= “_blank” rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;生物圈环境博物馆&lt;/em&gt;&lt;/a&gt;&lt;em&gt;”作者：&lt;/em&gt;&lt;a href=&#34;https://www.flickr.com/photos/ 100359919@N08&#34;&gt;&lt;em&gt;vmokry&lt;/em&gt;&lt;/a&gt;&lt;em&gt; 已获得许可&lt;/em&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/?ref=openverse &#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;CC0 1.0&lt;/em&gt;&lt;/a&gt;&lt;em&gt;。&lt;/em&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 10 Sep 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Continuous deployment for large monorepos】大型单一仓库的持续部署</title>
      <link>https://www.uber.com/blog/continuous-deployment/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;74a29a78-98aa-4e44-9a05-28b950154f6c&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0b2bf6ee-9262-4a04-abe9-0ffbf6e2f079&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber’s business runs on a myriad of microservices. Ensuring that changes to all of these services are deployed safely and in a timely manner is critical. By utilizing continuous deployment to automate this process, we ensure that new features, library updates, and security patches are all delivered to production without unnecessary delays, improving the overall quality of code serving our business.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9a72ee63-87be-4b92-8ed5-fd056464f5f4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In this article, we share how we reimagined continuous deployment of microservices at Uber to improve our deployment automation and the user experience of managing microservices, while tackling some of the peculiar challenges of working with large monorepos with increasing commit volumes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;179ec782-a13f-45ed-a40f-82918bfbcdc8&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ad37c6de-6055-467d-a212-e621224018d1&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-background&#34;&gt;Background&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5c743339-aca6-4bf1-b8d5-4b519cd96799&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Over the last few years we have invested heavily in maturing our tools to accommodate the continued growth of our business, while reducing production incidents. With a steady growth in code output, and more than 50% of all incidents being caused directly by code changes, our ability to enable continuous, safe deployments without impeding productivity as the business scales, is crucial for Uber’s success.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ab4556a5-7469-4d64-aaa7-9104c6581825&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;It is commonly known and evident in the industry &lt;a href=&#34;https://continuousdelivery.com/evidence-case-studies/#research&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;https://services.google.com/fh/files/misc/state-of-devops-2021.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[2]&lt;/a&gt; that continuous deployment (CD) of code to production intrinsically reduces the risk of introducing bugs or defects. This is not only due to the use of CD itself ensuring that bugs and vulnerabilities are patched in a timely manner, but more so the best practices, culture, and discipline that must be in place before engineers gain enough confidence to let a machine automatically deploy their code. Before enabling CD, engineers tend to ensure they have adopted good engineering practices, such as:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3e3968ae-2199-4a89-9378-a9813e8f529a&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Code reviews&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Continuous integration (unit- integration- and load tests)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Detection (continuous monitoring and alerting, automated rollback mechanisms)&lt;br&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8e948041-261b-4bf9-a00e-1d515497224d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;em&gt;What constitutes good code reviews, sufficient unit/integration test coverage, etc, is a heavily debated topic, which is beyond the scope of this article&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;99708628-96a9-4c8b-a1ac-7109320dfdf5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber has a vast platform of engineering and dev tools (e.g., &lt;a href=&#34;https://www.uber.com/en-DK/blog/introducing-ballast-an-adaptive-load-test-framework/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ballast&lt;/a&gt;, &lt;a href=&#34;https://www.uber.com/en-DK/blog/simplifying-developer-testing-through-slate/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SLATE&lt;/a&gt;), supporting good practices for engineers to adopt. However, historically, there have been a multitude of deployment processes in place, with limited company-wide standards or best practices for individuals and teams to adhere to. With our recent migration of all microservices to our internal cloud platform, &lt;a href=&#34;https://www.uber.com/en-DK/blog/up-portable-microservices-ready-for-the-cloud/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Up&lt;/a&gt;, we identified the opportunity to change this for the better.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;13daeda6-556e-46da-bf56-2bcbd56949ba&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When we kicked off this project in 2022, we had approximately:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;edab0eb4-6852-4c8f-82e8-3344149606b5&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;4,500 microservices distributed across 3 monorepos (Go, Java, and Web)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;5,600 commits per week, with &lt;a href=&#34;https://www.uber.com/en-DK/blog/ubuild-fast-and-safe-building-of-thousands-of-container-images/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;many commits affecting &amp;gt;1 service&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;7,000 production deployments per week&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;34% manually triggered (not using any kind of CD at all)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;7% of services deploying automatically to production using CD&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2a70429e-fa9c-4b12-9e84-9733a55efeb7&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;740f9a13-cf0e-4432-92bd-f052ee457992&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-the-prior-state-of-cd-at-uber&#34;&gt;The prior state of CD at Uber&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;072b7498-dae4-4f22-81b0-3165c4cca8ad&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;CD is not a new discipline at Uber. Historically, Uber’s CD system ran as a standalone and separate CD system, making it opt-in and left to each individual team to configure.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c6f383ba-621a-40c1-ae91-b8e0a898e8a5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;It was highly flexible and offered the ability to build completely customized CD pipelines in a YAML-based DSL. With this flexibility, we inevitably ended up with more than 100 unique pipeline templates for deploying microservices, with no enforcement of testing, monitoring, or what else it might (or might not) be doing, outside of running a sequence of actions as illustrated below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c8a22d41-af42-41cf-992a-997e3d0b6942&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;09b72964-a937-4b4a-9435-5d7dbcef0414&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdD4Z6y2otyHDiJ4tqKnKm4HhYEMUSPWJtfc7D4sXQKxLmhXZoZsszvrCe-34cnCYHMkIKCKTmnMATEV91hyn02o25Le_5CNX91CS4PNEZu5DVlEr5rkntHysEzJD6xb8Q3ges-2fCl8d34z87YNYwN-_QR?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Pipeline actions in Uber’s legacy CD system.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;321aa72f-cec6-45a9-b4d2-39e3b4ab5c31&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7acaf26d-e2b0-46c4-a87e-f9a858e7e98f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As a consequence, the lack of standardization in CD pipelines impeded our ability to improve deployment safety and reliability company-wide, which carries significant risk when managing a microservice fleet at Uber’s scale, with a large number of changes going into production every day.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d04fbe3b-21c0-4cf9-b3d1-5d5f816f4fc5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Besides these shortcomings, having two separate deployment systems was, in itself, confusing and undesirable. Therefore, with the recent migration to &lt;a href=&#34;https://www.uber.com/en-DK/blog/up-portable-microservices-ready-for-the-cloud/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Up&lt;/a&gt;, and given its maturity and adoption, we decided to sunset the existing CD system in favor of a new, integrated CD experience: Up CD.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;95af3e63-42d5-4cba-a7a3-e4abc0107030&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;311ae835-1c03-4fbf-9339-a44e2494ec53&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-goals&#34;&gt;Goals&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;109d6a75-8ad1-4ea1-b1d2-71b1e3c2700d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Built from the ground up to continuously apply changes in a repeatable and safe way, we sought to automate deployments to prevent human errors, converge on existing tooling for testing, and ensure monitoring of regressions as changes are being applied.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0d1b06aa-f23d-4c6a-a82f-a23d36cb2b33&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To this end, Up CD provides:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8991de37-24bb-45d6-8315-f3c99e1c92a4&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Standardized and automated deployments to production&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Safety at its core, integrating closely with Uber’s observability and testing stacks&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;A CD experience integrated tightly with the Up platform, and enabled by default&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;UI/UX tailored to the needs of Uber engineers, with built-in support for monorepo-based development&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;18ade1bf-d4a0-4426-90f5-00f11758b5d0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;By building a CD system with these features, our expectation was that we could increase the adoption of automation and allow more services to be automatically deployed to production. Additionally, it was crucial that we could do so while decreasing (or at least not increasing) the rate of incidents in production.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7b33593b-c6dc-4f3f-8289-18b6f7afaa6d&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;655f53ec-0385-4c26-8bed-a8fe239f4079&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-designing-for-automation&#34;&gt;Designing for automation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cc940733-f7af-4737-ad45-b2b3f6130209&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In order to realize our vision, we set out with the goal of designing the most streamlined deployment experience possible. The system should safely advance every service’s production environments to run a build with all relevant changes on the Git repository’s main branch.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;292f0635-d138-40cf-913c-6326ce41eb10&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;68ddb4fe-82e4-44c0-accd-108239bbcdb1&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcAxerVOf7ZNN0YsuWRrWCyh4n5Xyg6VNdmeZZORhkm7EcZPeTD1Bd1g5EfT4liKpBYzP0-eZ1GgqQT9F_xpFHQKBH-2kEmhLuq6Ox3wj4hpedWs6JzgtNGS2pAUboGJCKCfNKBsbco7fLiq4DHkemGWk4N?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: The architecture of the new CD system.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2073610f-be98-4704-ab78-2f02948edb37&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;63af962a-5d26-4d1a-b515-1ae185051c31&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the following section, we highlight some of the most important principles for our revamped CD system.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8a497b72-84a6-4eff-b8e8-ef7025c30ef3&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;01cad03e-7102-449f-99cd-72a90a210e0b&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-simple-core-data-structures&#34;&gt;Simple core data structures&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b0abc03c-5934-44a1-84e6-e8bf1aa862ba&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As is evident in many of Uber’s blog posts, one challenge was the scale of our monorepos. For example, at time of writing in 2024 our Go monorepo sees more than 1,000 commits per day, and is the source for almost 3,000 microservices, which could all be affected by a single commit. It is clear that building and deploying every service in the repository for every commit would be extremely inefficient. More importantly, there’s also little advantage to doing so, as most commits only impact a small subset of services. The set of services that actually have their code binaries impacted by a commit could be &lt;a href=&#34;https://www.uber.com/blog/research/keeping-master-green-at-scale/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;computed via the repository’s Bazel graph&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fb7d3da8-087a-4a40-a46e-01c7cad986fb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With this in mind, we determined that while our CD system had to understand the entire history of a Git repository to ensure that commits were deployed in the correct order, for individual services we could–and should–reduce the scope dramatically. By scoping each service to the subset of commits that actually changed the code binary, it is also much easier for service owners to identify what exact changes their service is picking up with each deployment, compared to diving into the voluminous Git log for the monorepo.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a789c16a-9d55-4ade-9a31-1c158ed34d35&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This allowed us to settle on a relatively simple data structure, where each service would be linked to all the commits in the history that are actually associated with it. This is illustrated in the following figure:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e274b7c5-ec31-481e-a95f-8303774c0cb7&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;26c21ac8-ab5b-4ba8-b9ba-dc5442b682d6&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe66g5dv80xbUgmTQ7XpZDBaciUiwAJdsUZZG1-uNtkuIwaDZIEfnYnWoNh4_LkweZdR2dv25eJNFCRlvjD7uVHPM_q6QH4b4poLmbUGe4AlorZc0wDzL5CX22p7OgV-i9i73-q3Y13UE8zqkq0VeBEyhY_?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Mapping of service to commit history.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f3a49982-1125-4d2f-9c06-bc8ff3e78eed&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;c63a6217-288b-4212-b642-b92643107211&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-a-unified-commit-flow-model-for-all-services&#34;&gt;A unified commit flow model for all services&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7f6beb9a-8a05-4a9c-b634-ccdbbf7a617f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To get to this point, we decided to utilize Uber’s &lt;a href=&#34;https://www.uber.com/en-DK/blog/kafka-async-queuing-with-consumer-proxy/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Kafka Consumer Proxy&lt;/a&gt; to consume a Kafka topic emitting an event when a commit is pushed to a Git repository. Whenever this occurs, an analysis phase is conducted to organize the commit into the appropriate structure, and determine the set of services that were impacted (changed) by the commit:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ebf133e1-5c1d-4241-8060-43d4fb3e6e81&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;e13aeb1e-2e5b-40c0-ad61-8d6a3aaea2c9&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeksuoy11nym0hEEzrzP6B2YE1KZmdOk2N8Kk9Oj2ayu2t_lIJ50VJiYFY9w2wVO92pc_wMw5e24qYDoUuwBZ0amfxMi3LgQAUxkyka6h17rWhvf2n1Ln-8BydFjv5q0IgbEQ3hExX8n6BplfVMgKuauVQ?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Unified commit flow, from push to service processing.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;468de68c-452a-4843-9fe4-e2b812f3951d&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6fe9d016-5171-4066-9306-290d54458da9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Obviously, the first step for each service impacted by a commit, would have to be to build it into a deployable container image. Afterwards, we allow engineers to customize a series of deployment stages relevant for their service. For an arbitrary service, the flow of a single commit might then be represented as the following figure shows:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e57e30d7-f698-4351-ab44-379dce5cc5f9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;bd6f6c7c-9fb5-4557-9d38-127f908f4389&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfYZIzjtCQdFL-q8uEY82wJK8CGxACpXlnU2xZiNOb19orkZ5_pOXbWlgjJUzN7MY6zaFbhabspJaXLhHS2WUBtXpo7Ry6D_BGCIbAGFQHS2DHNqbtIlgTdLHn3beb0BeKY_INDJKFtv3Q_KPS9fnW3cG6d?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Unified commit flow, from build to deployment.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ea94aa9c-abb1-4bc3-98fe-a494f7d779ce&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;adb7f53c-1078-4f42-a01d-9d8ab87579b7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Given our experience with the prior, highly customizable, CD system, we knew that the flow had to be opinionated. Thus, we decided that the stages themselves had to be fairly simple. The configurability was primarily limited to the gating conditions, where users could combine a variety of predefined options to express what must be satisfied before a deployment stage is started. These conditions could include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;00a04be6-3ecb-44b1-962d-3c9a161701ec&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Has the commit soaked in the previous stage for the desired time?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Are we within a user-defined deployment window (e.g., during the team’s business hours)?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Are there any other operations running for the service (e.g., a manually triggered deployment, or an automatic horizontal scaling)?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Are there any firing service alerts that would cause a deployment to roll back?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0124bfcb-d65b-42a9-bb80-099f8ae8fdba&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Each stage is run independently of any other. For each stage, the newest commit that has successfully completed the prior stage, and is satisfying all gating conditions (if any), is thus immediately advanced to the next stage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;423ecec7-6aa0-495b-b5fe-8e827fb9affe&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To implement these mechanisms, we utilized &lt;a href=&#34;https://www.uber.com/en-DK/blog/announcing-cadence/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cadence&lt;/a&gt;, an open-source workflow orchestration engine built at Uber. It was straightforward to implement build and deployment workflows to be started on demand. Moreover, we implemented the gating mechanisms as workflows. Each deployment stage has its own gate workflow, which runs periodically to check whether any commit has passed the prior stage. If that is the case, it then considers its gate conditions to determine if a deployment should be triggered now.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;14a8171d-c1a6-46ec-b751-3ee6b0e4dd98&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;16b18378-0f64-47f0-899c-20c9d077f56d&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-intuitive-user-experience&#34;&gt;Intuitive user experience&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;82fcad29-1fe4-483a-9cd5-8291c7c0384b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To ensure we got the product design right, we conducted user research and outreach in order to understand what our engineers would actually need from a CD system, given our existing tooling and monorepo scale. Based on this, we designed a user experience around a service’s commit history, where engineers can easily see the complete list of commits that were determined to impact their service, along with the current state of the service.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3354fa77-e54a-4fe2-b5c2-b6b35d8ac694&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Given the commit volume of the monorepos, it was also clear that even with automatic deployments, not every commit impacting the service could–nor should–be deployed to production stages. To make it simple to reason about what exactly had been serving production traffic or other commits deemed “interesting,” we collapsed in-between commits to provide a clearer view, addressing a key pain point of our engineers. This means that if an issue is discovered for a given production deployment, it would be very easy to expand the section down to the prior deployment to see the exact set of changes that were made to the service with that deployment. It should be immediately apparent how this view is backed by the service-level data structure of the commit history.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;041b2098-3e51-4002-bdc4-a13c1937bf9a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;09393440-55cc-472d-bf23-866a1902b9ad&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdD1QRulIpC2fgI_ZG85PEsxek53zsqjPrMGGhswon5lrSjRwzZg5D0qAiQQG7SovXyVVHD9uHry2LMKKVHhBC-4OlnDnnoJtUIlHUFK2z2asjzOs-Q_rt5QTPNptzykQwxjAoBK0OWo_jhb7yAf6ZplNk?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Collapsed view of commit history, showing just the relevant commits to the current state of the service.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1c9478d2-04c0-48bd-a0be-22b81029f543&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;51298020-115e-4bba-ad09-35f7b52ca941&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The current state of the world is concisely represented via the so-called “swimlanes” on the left of the commit history. Each of these lanes displays exactly what code is and has been deployed to the different service environments. By hovering over the lanes, details about the deployment status for that environment can be obtained. See the figure below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;216fe511-d6a0-41c7-8af2-5f15b36966f6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;d8d5c293-64c1-4143-b388-fcb2832926cf&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfsa9pQ6mpsc9zmHyfj5LzDJ5mHYliAQzxETDeNAiyrfv3Xtl0RUfCz-54_DII0it2LpQYagH4utLkCKxH9Dx2N3gULUH1Ko5AA_YAXq0O_y2pNjslZ-FN7d02xUBBU9_sNcVwtCmQNiqhJloyxvdQ8C7A?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Environments represented by swimlanes, visualizing how commits progress through the CD pipeline.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;368c1105-2b17-4ced-86e8-a3be466444d9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fda68b1c-618c-4260-9ffb-59841709afd1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Furthermore, we associate a series of events with every commit. The top-level view shows the most relevant event for the commit, though every commit can be expanded to understand not only exactly what has happened to it already, but also what is going to happen for it in the future, given the deployment stages and gating events configured for the service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e5dd7e3c-bcca-4865-8996-145099767b34&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;c60b65e0-4403-452f-9ff0-bb64e46f26bd&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfboVkIIQJhX4QuRkXGPgAuiQt_LyiMJPlaAnMRaLYOFZWlPYfOe5CP2C7-9F2yqMbVuIikduGWoG14VXJz7w9MFMdBKxlVWhBsYnF-inTAdNxCCOk6tN20w7G94zvzlwun_om5lbMYzECWKKki1c9WVZda?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8:The history of a specific commit, followed by current state and scheduled deployment actions.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;178fc3f7-5f4b-4ee1-8bfd-6744faa2b2c6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;332df2aa-341c-4cc5-850e-184dc7ee91e5&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-tight-coupling&#34;&gt;Tight coupling&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8ddfb47a-1b48-4000-bfa3-c2472aa7fa30&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In order to provide trust in and increase adoption of automation, it was clear that we had to provide a unified, streamlined deployment experience; it would not be satisfactory to simply bolt a separate CD orchestration layer on top of the deployment system.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f3bc92ce-2b97-4b91-9e2a-709de3917c20&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We built the new CD system to not only do its own thing, but to be tightly coupled to Up and mindful of other operations, guaranteeing that its actions would not catch users by surprise. For example, this means that if an engineer manually starts a deployment to a production environment outside the CD pipeline, then the CD UI will incorporate this deployment in the service’s commit history. Moreover, the system’s internal state is mutated to incorporate the fact that the commit (and anything prior to it in the Git history) was already deployed to the targeted environments.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;82df7ce1-fa21-4e14-a789-5b4057dc838d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This is also the case if an engineer builds a commit not strictly related to the service (e.g., by building from HEAD of main) and deploys that to their service, then that commit is added to the internal state, so the CD view is able to always represent the correct state of affairs and isn’t misleading to users who use this as the primary place to understand their service state.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1a2db057-80c0-4678-8661-b9678293b122&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This was an important strategic decision, as it allowed an incremental shift from manual deployments towards CD, instead of being an all-or-nothing approach. This also means that whenever an engineer takes some manual action to, for example, mitigate an incident, the CD system will be able to automatically do the right thing (which frequently is to not do anything, or pause), given the situation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4d96e1c1-01b2-439d-8e12-f7be9f0edb17&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2d323077-9b21-48b3-88b4-90b166775f64&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-post-release-observations&#34;&gt;Post-release observations&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;58729e94-cf9c-45aa-b9df-1c32b825c158&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In this section, we highlight some of the effects that we saw from the release of Up CD.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;999058e8-8874-4d16-8f7a-a83453c710fc&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;0db3f75b-6b43-4ee0-a633-2107164328ba&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-increase-in-adoption-of-automation&#34;&gt;Increase in adoption of automation&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;81c03cf4-a88d-456b-956d-345ed1207d77&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;After releasing our CD experience internally, we started seeing significant shifts in behavior. As we had hoped for, engineers started embracing it and we saw immediate adoption, which kept rising: Concretely, we saw the number of services being deployed automatically increase from less than 10% to almost 70% over a 12 month period.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;da865d9b-8cd1-4b7f-89b4-7697ba25a6a1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As services are deployed more frequently, it has also become easier to attribute fault to specific commits, as fewer commits are going out with each deployment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;81a68168-44ab-49a0-81e8-8eed3bb3faa6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;32a3771a-c7b7-44c9-8bcc-df7ff865b0fa&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-no-increase-in-production-incidents&#34;&gt;No increase in production incidents&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9622779d-a4ce-4b5c-b46b-5ccd98fd9bfc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;While increasing the rate of deployments, we were happy to find that the overall rate of production incidents did not increase proportionally. In fact, during the same 12 month period where CD adoption climbed, we saw a decrease in reported incidents per 1,000 code changes of more than 50%.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fa7585e0-fd4a-45aa-b0ce-ce005dab8a03&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As there were other efforts ongoing while this was carried out, which will be detailed in a separate blog post, we cannot claim causation for this feat. However, it is clear that we could in fact succeed in our vision to get our engineers to deploy their services to production automatically, without increasing the frequency or severity of incidents.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6803f4b7-a11d-4350-ae69-073a1d2bf9b0&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;4ba89534-ea4d-4885-ad2e-9455570acc02&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-new-challenges&#34;&gt;New challenges&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;23ca1a99-2324-4829-a083-9f3c0a91c73e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;However, we also started seeing new challenges. In particular, we found that the risk of making changes to monorepo code shared by many services (e.g., if someone changed a common RPC library shared by all services), had suddenly increased, as the changes would more rapidly get deployed to all the impacted services (and many of those deployments might happen in parallel). This meant that if such a change introduced a significant bug that wasn’t caught during CI, automation would be able to quickly break a lot of services simultaneously.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;767e8f7a-966c-4ef0-9a7c-5e9104c7e51d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Generally, some services would have mechanisms in place to detect the issue and automatically roll the deployment back, but it is unlikely that the problem would be automatically detected for every service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;71c6fb58-2ac5-4d37-9e7e-6cb8598f3633&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For this reason, we introduced the ability to utilize signals about a commit across services, so if some significant fraction of the services did not deploy successfully, the commit was considered to be problematic.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;00b23978-4571-460a-92f4-a782269c5b35&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To get as clear a signal as possible, we stagger the deployment of risky, cross-cutting commits according to our &lt;a href=&#34;https://www.uber.com/en-DK/blog/cinnamon-using-century-old-tech-to-build-a-mean-load-shedder/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;internal service tiering&lt;/a&gt;. Initially, Up CD deploys it to our least important cohort of services, and, when a sufficient percentage of those are successfully deployed, it advances to the following tier. If a significant fraction of the services start experiencing problems, the deployment is halted and the commit author notified about a potential issue.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;348ac0ab-613e-4876-b91e-5bc645892513&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With this deployment strategy, we mitigated the risk of customer impact from such risky changes to acceptable levels and, just as importantly, increased trust in automated production deployments by providing additional guardrails for particularly risky changes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dd3ed3f4-335f-478f-87f8-5584b5f2cfa7&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;f5fc3556-386e-4041-88f0-ea1d2d18ac1b&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-key-metrics&#34;&gt;Key metrics&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1c08aa92-93ac-4ba8-9c2f-3673f1ed22c3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To quantify the results of this project, we summarized how some of our key metrics changed during this project in the following table:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/table&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;a39c5ffa-469b-42b7-b2c3-7893d8732790&amp;quot;,&amp;quot;hasFixedLayout&amp;quot;:true,&amp;quot;head&amp;quot;:[],&amp;quot;body&amp;quot;:[],&amp;quot;foot&amp;quot;:[]}&#34; class=&#34;wp-block-table aligncenter&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Metric&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Before Up CD (primo 2022)&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Post Up CD (March 2024)&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;# services&lt;/td&gt;&lt;td&gt;4,500&lt;/td&gt;&lt;td&gt;5,000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Monorepo commits / week&lt;/td&gt;&lt;td&gt;5,600&lt;/td&gt;&lt;td&gt;11,000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Production deployments / week&lt;/td&gt;&lt;td&gt;7,000&lt;/td&gt;&lt;td&gt;50,000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;% of deployments CD orchestrated (partially or fully to production)&lt;/td&gt;&lt;td&gt;66%&lt;/td&gt;&lt;td&gt;95%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;% of services fully automated to production&lt;/td&gt;&lt;td&gt;7%&lt;/td&gt;&lt;td&gt;65%&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fb9afa3f-4c1e-43a7-98b8-0f43ab66e12e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;f9591e21-ed1d-4577-904a-2070fe685878&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;66d53876-9133-4bd9-abd1-6c347d60b215&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As we have detailed in the previous sections, our revamped CD system, Up CD, embodies a strategic shift towards automation as a core principle in our deployment methodology. We deem that this shift has been crucial for managing the complexity and scale of our operations with heightened safety and efficiency, shifting the burden of delivering code to production from our engineers to automation.&lt;/p&gt;】&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;74a29a78-98aa-4e44-9a05-28b950154f6c&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-introduction&#34;&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0b2bf6ee-9262-4a04-abe9-0ffbf6e2f079&#34;,&#34;dropCap&#34;:false}&#34;&gt;Uber 的业务运行在无数的微服务上。确保安全、及时地部署所有这些服务的更改至关重要。通过利用持续部署来自动化此过程，我们确保新功能、库更新和安全补丁全部交付到生产中，而不会出现不必要的延迟，从而提高为我们的业务服务的代码的整体质量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9a72ee63-87be-4b92-8ed5-fd056464f5f4&#34;,&#34;dropCap&#34;:false}&#34;&gt;在本文中，我们分享了如何在 Uber 重新构想微服务的持续部署，以提高我们的部署自动化和管理微服务的用户体验，同时解决与不断增加的提交量的大型单一存储库合作的一些特殊挑战。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;179ec782-a13f-45ed-a40f-82918bfbcdc8&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ad37c6de-6055-467d-a212-e621224018d1&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-background&#34;&gt;​​背景&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5c743339-aca6-4bf1-b8d5-4b519cd96799&#34;,&#34;dropCap&#34;:false}&#34;&gt;过去几年来，我们投入了大量资金来完善我们的工具，以适应业务的持续增长，同时减少生产事故。随着代码输出的稳定增长，并且超过 50% 的事件是由代码更改直接引起的，我们能够实现持续、安全的部署，并且不会随着业务规模的扩大而影响生产力，这对于 Uber 的成功至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ab4556a5-7469-4d64-aaa7-9104c6581825&#34;,&#34;dropCap&#34;:false}&#34;&gt;通常是在业界众所周知且明显&lt;a href=&#34;https://continuousdelivery.com/evidence-case-studies/#research&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[1]&lt;/a&gt; &lt;a href =&#34;https://services.google.com/fh/files/misc/state-of-devops-2021.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[2]&lt;/a&gt; 持续部署代码到生产的（CD）本质上降低了引入错误或缺陷的风险。这不仅是由于 CD 本身的使用确保了错误和漏洞得到及时修补，更重要的是在工程师获得足够的知识之前必须落实的最佳实践、文化和纪律。有信心让机器自动部署其代码。在启用 CD 之前，工程师往往会确保他们采用了良好的工程实践，例如：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3e3968ae-2199-4a89-9378-a9813e8f529a&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;代码审查&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;持续集成（单元集成和负载测试）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;检测（持续监控和警报、自动回滚机制）&lt;br&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8e948041-261b-4bf9-a00e-1d515497224d&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;em&gt;什么构成了良好的代码审查、足够的单元/集成测试覆盖率等，这是一个备受争议的话题，这超出了本文的范围&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;99708628-96a9-4c8b-a1ac-7109320dfdf5&#34;,&#34;dropCap&#34;:false}&#34;&gt;Uber 有一个庞大的工程和开发工具平台（例如，&lt;a href=&#34;https://www.uber.com/en-DK/blog/introducing-ballast-an-adaptive-load-test-framework/&#34; target=&#34;_blank “ rel=&#34;noreferrer noopener&#34;&gt;镇流器&lt;/a&gt;，&lt;a href=&#34;https://www.uber.com/en-DK/blog/simplifying-developer-testing-through-slate/&#34; target=&#34;_blank “ rel=&#34;noreferrer noopener&#34;&gt;SLATE&lt;/a&gt;），支持工程师采用的良好实践。然而，从历史上看，已经存在多种部署流程，而个人和团队需要遵守的公司范围标准或最佳实践有限。随着我们最近将所有微服务迁移到内部云平台，&lt;a href=&#34;https://www.uber.com/en-DK/blog/up-portable-microservices-ready-for-the-cloud/&#34; 目标=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;向上&lt;/a&gt;，我们发现了改善这一情况的机会。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;13daeda6-556e-46da-bf56-2bcbd56949ba&#34;,&#34;dropCap&#34;:false}&#34;&gt;当我们踢出时到 2022 年，完成这个项目后，我们大约有：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;edab0eb4-6852-4c8f-82e8-3344149606b5&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;分布在 3 个单一存储库（Go、Java 和 Web）的 4,500 个微服务&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;每周提交 5,600 次，&lt;a href=&#34;https://www.uber.com/en -DK/blog/ubuild-fast-and-safe-building-of-thousands-of-container-images/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;许多提交影响 &gt;1 项服务&lt;/a&gt;&lt;/李&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;每周 7,000 次生产部署k&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;ordered&#34;:false,&#34;values&#34;:&#34;&#34;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;34% 手动触发（根本不使用任何类型的 CD）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;7% 的服务使用 CD 自动部署到生产&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2a70429e-fa9c-4b12-9e84-9733a55efeb7&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;740f9a13-cf0e-4432-92bd-f052ee457992&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-the-prior-state-of-cd-at-uber&#34;&gt;Uber CD 的先前状态&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;072b7498-dae4-4f22-81b0-3165c4cca8ad&#34;,&#34;dropCap&#34;:false}&#34;&gt;CD 不是Uber 的一项新纪律。从历史上看，Uber 的 CD 系统作为独立且单独的 CD 系统运行，使其可以选择加入并留给每个单独的团队进行配置。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c6f383ba-621a-40c1-ae91-b8e0a898e8a5&#34;,&#34;dropCap&#34;:false}&#34;&gt;这是高度灵活，并提供在基于 YAML 的 DSL 中构建完全定制的 CD 管道的能力。有了这种灵活性，我们不可避免地会得到 100 多个用于部署微服务的独特管道模板，除了运行如下所示的一系列操作之外，无需强制执行测试、监控或其他可能（或可能不）执行的操作：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c8a22d41-af42-41cf-992a-997e3d0b6942&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;09b72964-a937-4b4a-9435-5d7dbcef0414&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdD4Z6y2otyHDiJ4tqKnKm4HhYEMUSPWJtfc7D4sXQKxLmhXZoZsszvrCe-34cnCYHMkIKCKTmnMATEV91hyn02o2 5Le_5CNX91CS4PNEZu5DVlEr5rkntHysEzJD6xb8Q3ges-2fCl8d34z87YNYwN-_QR?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 1：Uber 旧 CD 系统中的管道操作。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;321aa72f-cec6-45a9-b4d2-39e3b4ab5c31&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7acaf26d-e2b0-46c4-a87e-f9a858e7e98f&#34;,&#34;dropCap&amp;quot;:false}&#34;&gt;因此，CD 管道缺乏标准化，阻碍了我们提高全公司部署安全性和可靠性的能力，这在管理 Uber 规模的微服务团队（存在大量变更）时会带来巨大风险每天投入生产。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d04fbe3b-21c0-4cf9-b3d1-5d5f816f4fc5&#34;,&#34;dropCap&#34;:false}&#34;&gt;除了这些缺点，拥有两个独立的部署系统本身就是令人困惑且不可取的。因此，最近迁移到 &lt;a href=&#34;https://www.uber.com/en-DK/blog/up-portable-microservices-ready-for-the-cloud/&#34; target=&#34;_blank&#34; rel= “noreferrer noopener&#34;&gt;Up&lt;/a&gt;，鉴于其成熟度和采用率，我们决定淘汰现有的 CD 系统，转而采用新的集成 CD 体验：Up CD。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;95af3e63-42d5-4cba-a7a3-e4abc0107030&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;311ae835-1c03-4fbf-9339-a44e2494ec53&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-goals&#34;&gt;目标&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;109d6a75-8ad1-4ea1-b1d2-71b1e3c2700d&#34;,&#34;dropCap&#34;:false}&#34;&gt;从为了以可重复且安全的方式持续应用变更，我们寻求自动化部署以防止人为错误，集中于现有的测试工具，并确保在应用变更时监控回归。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0d1b06aa-f23d-4c6a-a82f-a23d36cb2b33&#34;,&#34;dropCap&#34;:false}&#34;&gt;为此，Up CD提供：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8991de37-24bb-45d6-8315-f3c99e1c92a4&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;标准化、自动化的生产部署&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;以安全为核心，与 Uber 的可观察性和测试堆栈紧密集成&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;与 Up 平台紧密集成且默认启用的 CD 体验&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;根据 Uber 工程师的需求量身定制的 UI/UX，内置对基于 monorepo 的开发的支持&lt; /里&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;18ade1bf-d4a0-4426-90f5-00f11758b5d0&#34;,&#34;dropCap&#34;:false}&#34;&gt;通过构建具有这些功能的CD系统，我们的期望是我们可以增加自动化的采用并允许更多的服务自动化自动部署到生产。此外，至关重要的是，我们能够在减少（或至少不增加）生产事故发生率的同时做到这一点。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7b33593b-c6dc-4f3f-8289-18b6f7afaa6d&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;655f53ec-0385-4c26-8bed-a8fe239f4079&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-designing-for-automation&#34;&gt;自动化设计&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cc940733-f7af-4737-ad45-b2b3f6130209&#34;,&#34;dropCap&#34;:false}&#34;&gt;为了为了实现我们的愿景，我们的目标是设计尽可能简化的部署体验。系统应该安全地推进每个服务的生产环境，以便在 Git 存储库的主分支上运行包含所有相关更改的构建。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;292f0635-d138-40cf-913c-6326ce41eb10&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;68ddb4fe-82e4-44c0-accd-108239bbcdb1&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXcAxerVOf7ZNN0YsuWRrWCyh4n5Xyg6VNdmeZZORhkm7EcZPeTD1Bd1g5EfT4liKpBYzP0-eZ1GgqQT9F_xpFHQKBH-2kEmhLuq6Ox3wj4hpedWs6JzgtNGS2pAUboGJCKCfNK Bsbco7fLiq4DHkemGWk4N?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图2：新CD系统的架构。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2073610f-be98-4704-ab78-2f02948edb37&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;63af962a-5d26-4d1a-b515-1ae185051c31&#34;,&#34;dropCap&#34;:false}&#34;&gt;在下面部分，我们重点介绍了我们改进后的 CD 系统的一些最重要的原则。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8a497b72-84a6-4eff-b8e8-ef7025c30ef3&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;01cad03e-7102-449f-99cd-72a90a210e0b&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-simple-core-data-structs&#34;&gt;简单核心数据结构尿素&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b0abc03c-5934-44a1-84e6-e8bf1aa862ba&#34;,&#34;dropCap&#34;:false}&#34;&gt;显而易见在 Uber 的许多博客文章中，挑战之一是我们的单一存储库的规模。例如，在 2024 年撰写本文时，我们的 Go monorepo 每天会看到超过 1,000 次提交，并且是近 3,000 个微服务的来源，这些微服务都可能受到一次提交的影响。显然，为每次提交构建和部署存储库中的每项服务效率极低。更重要的是，这样做也没有什么好处，因为大多数提交只影响一小部分服务。实际上其代码二进制文件受提交影响的服务集可能是 &lt;a href=&#34;https://www.uber.com/blog/research/keeping-master-green-at-scale/&#34; target=&#34;_blank “ rel=&#34;noreferrer noopener&#34;&gt;通过存储库的 Bazel 图计算&lt;/a&gt;。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fb7d3da8-087a-4a40-a46e-01c7cad986fb&#34;,&#34;dropCap&#34;:false}&#34;&gt;有了这个请注意，我们确定，虽然我们的 CD 系统必须了解 Git 存储库的整个历史记录，以确保按正确的顺序部署提交，但对于各个服务，我们可以而且应该大幅缩小范围。与深入研究 monorepo 的大量 Git 日志相比，通过将每个服务的范围限定为实际更改了代码二进制文件的提交子集，服务所有者也可以更轻松地确定他们的服务在每次部署中获取的确切更改。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a789c16a-9d55-4ade-9a31-1c158ed34d35&#34;,&#34;dropCap&#34;:false}&#34;&gt;这允许我们选择一个相对简单的数据结构，其中每个服务都将链接到历史记录中实际与其关联的所有提交。如下图所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e274b7c5-ec31-481e-a95f-8303774c0cb7&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;26c21ac8-ab5b-4ba8-b9ba-dc5442b682d6&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXe66g5dv80xbUgmTQ7XpZDBaciUiwAJdsUZZG1-unTkuIwaDZIEfnYnWoNh4_LkweZdR2dv25eJNFCRlvjD7uVHPM_q6QH4b4poLmbUGe4AlorZc0wDzL5CX22p7OgV-i9 i73-q3Y13UE8zqkq0VeBEyhY_?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34; &gt;图 3：服务到提交历史记录的映射。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f3a49982-1125-4d2f-9c06-bc8ff3e78eed&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;c63a6217-288b-4212-b642-b92643107211&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-a-unified-commit-flow-model-for-all-services&#34;&gt;所有服务的统一提交流程模型&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7f6beb9a-8a05-4a9c-b634-ccdbbf7a617f&#34;,&#34;dropCap&#34;:false}&#34;&gt;要到达此时，我们决定利用 Uber 的 &lt;a href=&#34;https://www.uber.com/en-DK/blog/kafka-async-queuing-with-consumer-proxy/&#34; target=&#34;_blank&#34; rel=&#34; noreferrer noopener&#34;&gt;Kafka Consumer Proxy&lt;/a&gt; 用于使用 Kafka 主题，在提交推送到 Git 存储库时发出事件。每当发生这种情况时，就会进行分析阶段，将提交组织成适当的结构，并确定受提交影响（更改）的服务集：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ebf133e1-5c1d-4241-8060-43d4fb3e6e81&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;e13aeb1e-2e5b-40c0-ad61-8d6a3aaea2c9&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeksuoy11nym0hEEzrzP6B2YE1KZmdOk2N8Kk9Oj2ayu2t_lIJ50VJiYFY9w2wVO92pc_wMw5e24qYDoUuwBZ0 amfxMi3LgQAUxkyka6h17rWhvf2n1Ln-8BydFjv5q0IgbEQ3hExX8n6BplfVMgKuauVQ?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 4：统一提交流程，从推送到服务处理。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;468de68c-452a-4843-9fe4-e2b812f3951d&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6fe9d016-5171-4066-9306-290d54458da9&#34;,&#34;dropCap&#34;:false}&#34;&gt;显然，对于受提交影响的每个服务，第一步必须是将其构建到可部署的容器映像中。之后，我们允许工程师定制一系列与其服务相关的部署阶段。对于任意服务，单个提交的流程可能如下图所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e57e30d7-f698-4351-ab44-379dce5cc5f9&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div类=“wp-块图像&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;bd6f6c7c-9fb5-4557-9d38-127f908f4389&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfYZIzjtCQdFL-q8uEY82wJK8CGxACpXlnU2xZiNOb19orkZ5_pOXbWlgjJUzN7MY6zaFbhabspJaXLhHS2WUBtXpo7Ry6D _BGCIbAGFQHS2DHNqbtIlgTdLHn3beb0BeKY_INDJKFtv3Q_KPS9fnW3cG6d?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 5：从构建到部署的统一提交流程。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ea94aa9c-abb1-4bc3-98fe-a494f7d779ce&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;adb7f53c-1078-4f42-a01d-9d8ab87579b7&#34;,&#34;dropCap&#34;:false}&#34;&gt;根据我们的经验对于之前的高度可定制的 CD 系统，我们知道流程必须是固定的。因此，我们决定阶段本身必须相当简单。可配置性主要限于门控条件，用户可以组合各种预定义选项来表达部署阶段开始之前必须满足的条件。这些条件可能包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;00a04be6-3ecb-44b1-962d-3c9a161701ec&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;提交是否在前一阶段中浸泡了所需的时间？&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;我们是否处于用户定义的部署窗口内（例如，在团队的工作时间内）？&lt;/li &gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;该服务是否正在运行任何其他操作（例如，手动触发的部署或自动水平扩展） ）？&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;是否触发任何会导致部署回滚的服务警报？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0124bfcb-d65b-42a9-bb80-099f8ae8fdba&#34;,&#34;dropCap&#34;:false}&#34;&gt;每个阶段都是独立于任何其他运行。对于每个阶段，已成功完成前一阶段并满足所有门控条件（如果有）的最新提交将立即进入下一阶段。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;423ecec7-6aa0-495b-b5fe-8e827fb9affe&#34;,&#34;dropCap&#34;:false}&#34;&gt;实现这些机制，我们利用了 &lt;a href=&#34;https://www.uber.com/en-DK/blog/announcing-cadence/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cadence&lt;/a&gt;，一个开放的-源工作流程Uber 构建的编排引擎。实现按需启动的构建和部署工作流程非常简单。此外，我们将门控机制实现为工作流程。每个部署阶段都有自己的门控工作流程，该工作流程定期运行以检查是否有任何提交已通过前一阶段。如果是这种情况，它会考虑其门条件来确定是否现在应该触发部署。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;14a8171d-c1a6-46ec-b751-3ee6b0e4dd98&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;16b18378-0f64-47f0-899c-20c9d077f56d&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-intuitive-user-experience&#34;&gt;直观的用户体验&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;82fcad29-1fe4-483a-9cd5-8291c7c0384b&#34;,&#34;dropCap&#34;:false}&#34;&gt;为了确保我们在产品设计正确后，我们进行了用户研究和推广，以了解我们的工程师在考虑到我们现有的工具和 monorepo 规模的情况下，实际上需要从 CD 系统中获得什么。基于此，我们围绕服务的提交历史记录设计了用户体验，工程师可以轻松查看确定影响其服务的提交的完整列表以及服务的当前状态。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3354fa77-e54a-4fe2-b5c2-b6b35d8ac694&#34;,&#34;dropCap&#34;:false}&#34;&gt;鉴于提交考虑到 monorepos 的数量，很明显，即使采用自动部署，也不是每个影响服务的提交都可以（也不应该）部署到生产阶段。为了更容易地推断出到底是什么服务于生产流量或其他被认为“有趣”的提交，我们在提交之间折叠以提供更清晰的视图，解决了工程师的关键痛点。这意味着，如果在给定的生产部署中发现问题，则可以很容易地将该部分扩展到之前的部署，以查看对该部署对服务所做的确切更改集。应该立即显而易见的是该视图是如何由提交历史记录的服务级别数据结构支持的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;041b2098-3e51-4002-bdc4-a13c1937bf9a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;09393440-55cc-472d-bf23-866a1902b9ad&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdD1QRulIpC2fgI_ZG85PEsxek53zsqjPrMGGhswon5lrSjRwzZg5D0qAiQQG7SovXyVVHD9uHry2LMKKVHhBC-4OlnDnnoJtUIlHUFK2z2asjzOs-Q_rt5QTPNptzykQwxjAoBK0OWo_jhb7yAf6ZplNk?key=Oxu4WZYqSolAv 1oG8zB5fg&#34; alt=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 6：提交历史记录的折叠视图，仅显示对服务的当前状态。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1c9478d2-04c0-48bd-a0be-22b81029f543&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;51298020-115e-4bba-ad09-35f7b52ca941&#34;,&#34;dropCap&#34;:false}&#34;&gt;当前状态世界的情况通过提交历史左侧所谓的“泳道”简洁地表示。每个通道都准确显示代码是什么以及已部署到不同的服务环境。通过将鼠标悬停在通道上，可以获得有关该环境的部署状态的详细信息。见下图：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;216fe511-d6a0-41c7-8af2-5f15b36966f6&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;d8d5c293-64c1-4143-b388-fcb2832926cf&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfsa9pQ6mpsc9zmHyfj5LzDJ5mHYliAQzxETDeNAiyrfv3Xtl0RUfCz-54_DII0it2LpQYagH4utLkCKxH9Dx2N3gULUH1 Ko5AA_YAXq0O_y2pNjslZ-FN7d02xUBBU9_sNcVwtCmQNiqhJloyxvdQ8C7A?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 7：由泳道表示的环境，可视化如何通过 CD 管道提交进度。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;368c1105-2b17-4ced-86e8-a3be466444d9&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fda68b1c-618c-4260-9ffb-59841709afd1&#34;,&#34;dropCap&#34;:false}&#34;&gt;此外，我们将一系列事件与每次提交相关联。顶级视图显示了与提交最相关的事件，尽管每个提交都可以扩展，不仅可以准确了解它已经发生的情况，还可以了解它未来将发生的情况，考虑到部署阶段和为服务配置的门控事件。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e5dd7e3c-bcca-4865-8996-145099767b34&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator”有-alpha-通道不透明度&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;c60b65e0-4403-452f-9ff0-bb64e46f26bd&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfboVkIIQJhX4QuRkXGPgAuiQt_LyiMJPlaAnMRaLYOFZWlPYfOe5CP2C7-9F2yqMbVuIikduGWoG14VXJz7w9MFMdBKxl VWhBsYnF-inTAdNxCCOk6tN20w7G94zvzlwun_om5lbMYzECWKKki1c9WVZda?key=Oxu4WZYqSolAv1oG8zB5fg&#34; alt=&#34;&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 8：特定提交的历史记录，后跟当前状态和计划的部署操作。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;178fc3f7-5f4b-4ee1-8bfd-6744faa2b2c6&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;332df2aa-341c-4cc5-850e-184dc7ee91e5&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-tight-coupling&#34;&gt;紧密耦合&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8ddfb47a-1b48-4000-bfa3-c2472aa7fa30&#34;,&#34;dropCap&#34;:false}&#34;&gt;为了提供对自动化的信任并增加自动化的采用，很明显，我们必须提供统一、简化的部署体验；简单地在部署系统之上附加一个单独的 CD 编排层是不够的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f3bc92ce-2b97-4b91-9e2a-709de3917c20&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们构建了新的CD系统不仅要做自己的事情，而且要与Up紧密耦合并关注其他操作，保证其行为不会让用户措手不及。例如，这意味着如果工程师在 CD 管道之外手动启动到生产环境的部署，则 CD UI 会将此部署合并到服务的提交历史记录中。此外，系统的内部状态会发生变化，以纳入提交（以及 Git 历史记录中之前的任何内容）已经部署到目标环境的事实。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;82df7ce1-fa21-4e14-a789-5b4057dc838d&#34;,&#34;dropCap&#34;:false}&#34;&gt;这也是如果工程师构建与服务不严格相关的提交（例如，通过从 main 的 HEAD 构建）并将其部署到他们的服务，则该提交将添加到内部状态，因此 CD 视图始终能够表示正确的事务状态，并且不会误导使用此作为了解其服务状态的主要位置的用户。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1a2db057-80c0-4678-8661-b9678293b122&#34;,&amp;quot;dropCap&#34;:false}&#34;&gt;这是一个重要的战略决策，因为它允许从手动部署逐步转向 CD，而不是一种全有或全无的方法。这也意味着，每当工程师采取一些手动操作（例如，缓解事件）时，CD 系统将能够根据情况自动执行正确的操作（通常是不执行任何操作或暂停）。&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4d96e1c1-01b2-439d-8e12-f7be9f0edb17&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2d323077-9b21-48b3-88b4-90b166775f64&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-post-release-observations&#34;&gt;发布后观察&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;58729e94-cf9c-45aa-b9df-1c32b825c158&#34;,&#34;dropCap&#34;:false}&#34;&gt;在本节中，我们重点介绍了我们在 Up CD 发行中看到的一些效果。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;999058e8-8874-4d16-8f7a-a83453c710fc&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;0db3f75b-6b43-4ee0-a633-2107164328ba&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-increase-in-adoption-of-automation&#34;&gt;自动化采用率提高&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;81c03cf4-a88d-456b-956d-345ed1207d77&#34;,&#34;dropCap&#34;:false}&#34;&gt;发布我们的在内部 CD 体验中，我们开始看到行为的重大转变。正如我们所希望的那样，工程师开始接受它，我们立即看到采用率不断上升：具体来说，我们看到在 12 个月内，部署的服务数量自动从不到 10% 增加到近 70%。&lt;/p &gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;da865d9b-8cd1-4b7f-89b4-7697ba25a6a1&#34;,&#34;dropCap&#34;:false}&#34;&gt;因为服务是部署更频繁，将错误归因于特定提交也变得更容易，因为每次部署的提交更少。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;81a68168-44ab-49a0-81e8-8eed3bb3faa6&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;32a3771a-c7b7-44c9-8bcc-df7ff865b0fa&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-no-increase-in-product-incidents&#34;&gt;生产事件没有增加&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9622779d-a4ce-4b5c-b46b-5ccd98fd9bfc&#34;,&#34;dropCap&#34;:false}&#34;&gt;在提高部署率的同时，我们很高兴地发现生产事故的总体发生率并没有按比例增加。事实上，在 CD 采用率攀升的同一 12 个月期间，我们发现每 1,000 次代码更改报告的事件减少了 50% 以上。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fa7585e0-fd4a-45aa-b0ce-ce005dab8a03&#34;,&#34;dropCap&#34;:false}&#34;&gt;因为有在进行此操作的同时，正在进行其他工作（将在单独的博客文章中详细说明），但我们不能声称这一壮举的原因。然而，很明显，我们实际上可以成功实现我们的愿景，让我们的工程师自动将他们的服务部署到生产中，而不会增加事件的频率或严重性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6803f4b7-a11d-4350-ae69-073a1d2bf9b0&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;4ba89534-ea4d-4885-ad2e-9455570acc02&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-new-challenges&#34;&gt;新挑战&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;23ca1a99-2324-4829-a083-9f3c0a91c73e&#34;,&#34;dropCap&#34;:false}&#34;&gt;但是，我们也开始看到新的挑战。特别是，我们发现对许多服务共享的 monorepo 代码进行更改的风险（例如，如果有人更改了所有服务共享的公共 RPC 库）突然增加，因为更改会更快地部署到所有受影响的服务服务（其中许多部署可能会并行发生）。这意味着，如果此类更改引入了 CI 期间未发现的重大错误，自动化将能够同时快速破坏大量服务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;767e8f7a-966c-4ef0-9a7c-5e9104c7e51d&#34;,&#34;dropCap&#34;:false}&#34;&gt;一般来说，一些服务将有适当的机制来检测问题并自动回滚部署，但不太可能为每个服务自动检测到问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;71c6fb58-2ac5-4d37-9e7e-6cb8598f3633&#34;,&#34;dropCap&#34;:false}&#34;&gt;因此原因，我们引入了利用有关跨服务提交的信号的功能，因此，如果服务的某些重要部分未成功部署，则该提交被认为是有问题的。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;00b23978-4571-460a-92f4-a782269c5b35&#34;,&#34;dropCap&#34;:false}&#34;&gt;获取为尽可能明确信号，我们根据以下原则错开部署有风险的、跨领域的提交我们的 &lt;a href=&#34;https://www.uber.com/en-DK/blog/cinnamon-using- century-old-tech-to-build-a-mean-load-shedder/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;内部服务分层&lt;/a&gt;。最初，Up CD 将其部署到我们最不重要的服务组中，当成功部署了足够比例的服务时，它会前进到下一层。如果很大一部分服务开始遇到问题，部署就会停止，提交作者会收到有关潜在问题的通知。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;348ac0ab-613e-4876-b91e-5bc645892513&#34;,&#34;dropCap&#34;:false}&#34;&gt;使用此部署战略，我们将此类风险变更对客户影响的风险降低到可接受的水平，同样重要的是，通过为特别危险的变更提供额外的防护措施，增加了对自动化生产部署的信任。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dd3ed3f4-335f-478f-87f8-5584b5f2cfa7&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;f5fc3556-386e-4041-88f0-ea1d2d18ac1b&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-key-metrics&#34;&gt;关键指标&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1c08aa92-93ac-4ba8-9c2f-3673f1ed22c3&#34;,&#34;dropCap&#34;:false}&#34;&gt;量化根据该项目的结果，我们在下表中总结了该项目期间一些关键指标的变化：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/table&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;a39c5ffa-469b-42b7-b2c3-7893d8732790&#34;,&#34;hasFixedLayout&#34; :true,&#34;head&#34;:[],&#34;body&#34;:[],&#34;foot&#34;:[]}&#34; class=&#34;wp-block-tablealigncenter&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong &gt;公制&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Before Up CD（2022 年首次）&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Post Up CD（2024 年 3 月）&lt;/strong&gt;&lt;/ td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;# 服务&lt;/td&gt;&lt;td&gt;4,500&lt;/td&gt;&lt;td&gt;5,000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Monorepo 提交/周&lt;/ td&gt;&lt;td&gt;5,600&lt;/td&gt;&lt;td&gt;11,000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;生产部署/周&lt;/td&gt;&lt;td&gt;7,000&lt;/td&gt;&lt;td&gt;50,000&lt;/td&gt;&lt;td&gt;50,000&lt;/td&gt;&lt;td&gt;7,000&lt;/td&gt;&lt;td&gt;50,000 td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;协调部署 CD 的百分比（部分或全部用于生产）&lt;/td&gt;&lt;td&gt;66%&lt;/td&gt;&lt;td&gt;95%&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;完全自动化生产的服务百分比&lt;/td&gt;&lt;td&gt;7%&lt;/td&gt;&lt;td&gt;65%&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure &gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fb9afa3f-4c1e-43a7-98b8-0f43ab66e12e&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;f9591e21-ed1d-4577-904a-2070fe685878&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-conclusion&#34;&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;核心/段落&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;66d53876-9133-4bd9-abd1-6c347d60b215&#34;,&#34;dropCap&#34;:false}&#34;&gt;正如我们在前面几节中详细介绍的，我们改进的 CD 系统 Up CD 体现了战略性转向自动化作为我们部署方法的核心原则。我们认为，这种转变对于管理我们运营的复杂性和规模、提高安全性和效率、将代码交付到生产的负担从我们的工程师转移到自动化至关重要。&lt;/p&gt;</description>
      <pubDate>Mon, 26 Aug 2024 14:02:56 +0000</pubDate>
    </item>
    <item>
      <title>【Pinot for Low-Latency Offline Table Analytics】用于低延迟离线表分析的 Pinot</title>
      <link>https://www.uber.com/blog/pinot-for-low-latency/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;d0b0567b-b1c7-47fc-9253-50253f445151&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;67baaccd-d1f4-4f09-aad9-56aa29519724&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Apache Pinot&lt;sup&gt;™&lt;/sup&gt; is a real-time OLAP database capable of ingesting data from streams like Apache Kafka® and offline data sources like Apache Hive&lt;sup&gt;™&lt;/sup&gt;. At Uber, Pinot has proven to be really versatile in handling a wide spectrum of use cases: from real-time use cases with over one million writes per second, 100+ QPS, and &amp;lt;500 ms latency, to use cases which require low-latency analytics on offline data.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;408d1e5b-a20f-461c-9c24-f91b1490fa78&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pinot tables fall in three broad categories: &lt;em&gt;real-time&lt;/em&gt;, &lt;em&gt;offline&lt;/em&gt; and &lt;em&gt;hybrid&lt;/em&gt;. Real-time tables support ingesting data from streams like Kafka, offline tables allow uploading pre-built “segments” via Pinot Controller’s HTTP APIs, and hybrid tables have both real-time and offline parts. Hybrid tables allow a single logical table (same name and schema) to ingest data from real-time streams as well as batch sources.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e0349cce-7cf0-466a-aa95-e4c31261fd6c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This article shares how Uber uses Pinot’s offline tables to serve 100+ low-latency analytics use cases spanning all lines of businesses.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8ff09083-e289-4bf5-aded-418f0f076d16&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ff679ca4-a030-4ad3-999c-71a7f30385c9&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-background&#34;&gt;Background&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;41b8c7d7-16ab-4a83-8f34-b260d4c9c096&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber has a huge data lake with more than 100 PB of data, and we have been using Presto®, Apache Spark&lt;sup&gt;™&lt;/sup&gt; and Apache Hive&lt;sup&gt;™&lt;/sup&gt; since almost a decade to serve many of our internal analytics use-cases. Presto® in particular is quite good at handling use-cases with low QPS (in the low 10s) and latencies on the order of a few seconds. However, there are a lot of use-cases where our users need sub-second p99 latency at a higher QPS. Most users also want dedicated resources for their use-cases to avoid noisy neighbors.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;549f949b-724a-4b2b-9005-d240f0921229&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Apache Pinot’s ability to run low-latency queries at high qps, with built-in multi-tenancy and offline data ingestion support, made it a natural fit for serving these use-cases. We have seen this play out over the last few years and Pinot now supports 100+ offline table analytics use-cases at Uber, with 500+ offline tables running in production.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;808bf1b3-157c-4475-bcf1-82a3ce3958aa&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bc3284e3-c73c-4d24-aaa8-ed942906b141&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-pinot-offline-table-ingestion-primer&#34;&gt;Pinot Offline Table Ingestion Primer&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;31051218-84dd-40c8-9fcf-b6d16d136fe0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pinot stores data for its tables in “segments” for both real-time and offline tables. For real-time tables, the data from Kafka is consumed in memory in a “mutable segment” until a threshold is reached, after which the segment is committed to build an “immutable segment.” After the commit is done, a new mutable segment is created to continue consumption from the last read offset.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1fd27012-e249-4f11-8c60-03b7b214c4cf&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For offline tables, Pinot allows uploading pre-built immutable segments via a POST /segments API in the Pinot controller. Building segments outside Pinot can be achieved using the “SegmentIndexCreationDriver” and “RecordReader” interfaces. The RecordReader interface allows feeding data to the segment driver from any arbitrary source. The segment driver also allows configuring the indexes and the encodings that should be used for each column.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f7c9317f-676d-4528-86e3-39ea565a079e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Once a segment for an Offline table is built outside Pinot, you can create a tarball out of it, upload it to a “deep-store” location, which Pinot servers can access, and hit the POST /segments API in the controller. The controller will create a new segment or update an existing segment’s metadata if one with the same name exists already. It will then send a message to the servers to download and load the segments, making them queryable. The controller also has an API to delete an existing segment, which means that for offline tables you can manage your Pinot data at segment level by adding a new segment, replacing an existing segment, or removing an existing segment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;87ad7115-f832-4479-a5c6-3605d913ba8c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;886e379e-0c35-4f0f-9bef-289977654dc9&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-self-serve-platform&#34;&gt;Self-Serve Platform&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b531ea11-81be-46d5-a151-608313cf9cef&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Given how segments are built and added/updated/removed, the question is how do we build a self-serve platform to allow 100+ users to create and manage new offline Pinot tables seamlessly?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0a94e7fd-05e8-4034-923d-e7e68f731254&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For this, we leveraged our internal no-code workflow orchestration framework called &lt;a href=&#34;https://www.uber.com/blog/no-code-workflow-orchestrator/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;uWorc&lt;/a&gt;. We have a dedicated workflow type for ingesting data from Hive to Pinot. uWorc provides users a UI where they can set their table name, their Apache Spark&lt;sup&gt;TM&lt;/sup&gt; or Presto® query, the indexes they want, etc. It also allows users to configure when a job should run, and has rich support for tracking execution history, which can be used to see the status and logs for each run.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b804b111-dd1e-499c-8efd-ad1558eaedc2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In each pipeline run, we run the SparkSQL or PrestoSQL specified by the users, and the output set of records is added/updated in the table.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;567db32f-15e6-4aec-bf2d-481aa0b690ab&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;cabba826-d3ac-4555-a839-2998c161834e&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXekLZSA8Z6kP2lVH54G9FoQtMaw7H_VzSCo3FKw93r1AEFaF6D1ar_hiQbz_4yPgEFC6domG92vEpj2jTTs_ACKQ9XE021IstDD2jVR4bxRCct0d34ENGFhAgvrISKlDmPdrfJcUp3pMXwMeN52_QS4Gac?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Shows a sample Hive to RTA Pipeline which runs daily in uWorc.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;25cd8ec9-b58c-4010-8367-74012b392223&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3d7a2a35-7033-47ac-ae98-ab929ed9f368&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-data-modeling&#34;&gt;Data Modeling&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9f8f2e4f-0763-45e3-bb74-332eb6486a5e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We support two types of offline tables via uWorc:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f167793a-94e7-48e9-b13e-d45dccb667a8&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Overwrite Tables&lt;/strong&gt;: When a table is marked as Overwrite, each run of the pipeline will rewrite all of the data for the table completely.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Append Tables&lt;/strong&gt;: These tables have “day-based partitions” reminiscent of the datestr-based partitions found in Hive tables. A pipeline run for a given day will either add data for that day, or if it already exists, update data for that day.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4acee207-7936-4740-bbc9-8af117862eff&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Both of these table-types are required to have a “secondsSinceEpoch” column generated in the SparkSQL query, which is used by Pinot for retention purposes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cf5903da-7fba-4b4c-b486-611d00ea66d5&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d484e0cd-4502-46f9-bc11-6c0b34b20967&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-ingestion-job&#34;&gt;Ingestion Job&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;32853506-73ea-4ffc-b591-10820ebd2bf2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pinot only allows managing data for offline tables at segment level and the overwrite/append table semantics described above do not natively exist in Pinot. We use our ingestion job instead to implement them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;44679f2d-87b4-48f8-864c-d4b71e1992dc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our ingestion job is implemented using &lt;a href=&#34;https://www.uber.com/blog/marmaray-hadoop-ingestion-open-source/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Marmaray&lt;/a&gt;: Uber’s open-source data dispersal framework built on top of Spark. Marmaray supports ingesting data from “any source to any sink.” It does this by providing 3 key SPIs: Source, Sink, and an intermediate data format based on Apache Avro™. We have implemented a PinotSink which can technically ingest from all internally available sources. However, at present we only use it to ingest data from a Hive source.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0827e05d-2ab1-4aac-ab89-49b92ef0a15f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;PinotSink receives a JavaRDD&amp;lt;AvroPayload&amp;gt; from the Source and performs the following steps at a high level:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e6cddac0-d0b6-4988-bf9e-ef6afbfd2564&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Repartition the RDD to meet the number of segments, table-type, and column partitioning requirements. Each Spark partition ultimately corresponds to exactly 1 segment.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Build and upload the segments&amp;nbsp; to deep-store.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Make a HTTP POST /segments call to the Pinot Controller to add/update the built segments.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Remove any segments from Pinot to meet the overwrite/append table-type semantics.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5b41c620-65f6-43c6-95e0-437333ea76be&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Below we explain how each of the table-types are supported.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;351910f9-6a42-44e1-813a-de99ac91b393&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;0231c7be-fcdf-4c08-a34d-013724d6a435&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-overwrite-tables&#34;&gt;Overwrite Tables&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;945803bb-3d00-4c88-a4a7-8e3e3f670398&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Overwrite tables may involve a RDD repartition to meet either the configured “Number of Segments” requirement and/or the “column partitioning” requirement. If we don’t have any column partitioning requirement, then we use a custom Spark &lt;a href=&#34;https://spark.apache.org/docs/latest/api/java/org/apache/spark/Partitioner.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Partitioner&lt;/a&gt; to randomly distribute records across each Spark partition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;835fbf25-0a2e-4e70-a69e-81034ed882f7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;When column partitioning is enabled, we use Murmur2 hash on the configured column to partition the tuples into the required “Number of Segments” partitions. The logic for that is quite simple:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a1c73a7c-335f-423a-bb63-49af48ba0921&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;3f8d49e6-3193-4020-b7aa-9ddfdcc2dfef&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdJkT4aUHGjWn2573GZ__05sG4XsthSrmCufulnqCuxOQGTNFbA5EdocKYACFE3LR1LMZjKD1-bHGwKC-NvSY8VdOXYKtsBMGDnclOjkYkZ3s85HfHXfOhYVI5IgTC0mq-5bI0wjBT7pYUcQUcrTtxbDps?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Spark Partitioner for Overwrite Tables that have Column Partitioning Enabled.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f07a97f2-b36b-475d-bf00-a78997982d01&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a474987a-8470-48a7-8c71-ce9d925a815e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For overwrite tables, we always generate segment names with the format “&amp;lt;table-name&amp;gt;_&amp;lt;spark-partition-number&amp;gt;”. If users decrease their “Number of Segments”, then the subsequent job will produce fewer segments than the one before it. In that case, the subsequent job will delete the extra segments in Pinot to prevent data-duplication.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;15eabb5c-72fa-4d0d-a1f6-85c3bf66ad22&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;370c7015-5283-49f3-8c96-bb8b1d82133d&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-append-tables&#34;&gt;Append Tables&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e3faaac1-d7a7-4ce1-808d-cc9ba2f335de&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For append tables, the “Number of Segments” property is used to control the number of segments that should be created for each unique day in the data. For example, if you configure the number of segments as 4, and your ingestion job generates data for the dates “2022-01-01 to 2022-01-05”, then the total number of segments generated by the job would be 20, 4 for each day. This means that we always have to repartition the RDD for append tables since the Source RDD may be arbitrarily partitioned. Moreover, for each date we have to ensure that we generate a preconfigured number of segments.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;27dafb25-e1bf-443c-98f8-b1af1ee9fc8c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Spark Partitioner API allows us to map a tuple to an integer partition ID. So the question is how do we map a record to an integer partition ID to meet the append table semantics?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a1cc01a1-3805-4a56-8dd6-2189d0fd9e85&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To achieve this, we use a Spark partitioner that looks like the following:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;483675f0-a89a-4338-9ccf-30cc3fc9c733&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;35550e03-3645-4cd1-8ed5-f9c1e88a1df8&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf9mI7DccXdRz5dHm2Gs80y_sa-22Wf-9Xw28M0iOGbnbqQ1jGeiD8JW32PViZRJiUEv4OXaYp4IvGKaiKJ_zq4P_6vS9gri7XeyhE2sqOqz6unZQCZBVHOm3zw7zCQ-vyUIYFYhqqpD4kgz3yP_nsXmF3L?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Spark Partitioner for append tables. Segments per day constraint is met by assigning records to each segment in a round-robin fashion.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;84cfb1b3-77a2-4f36-923a-26ea64310b1a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d62eca43-a825-4053-b709-16a77fd2dd3d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The partitioning is done on the time-column configured by the user. Before calling the partitioner we figure out the “lookbackDays” value, which is the number of days between the smallest and the largest Unix Day in the RDD.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;64d1c65a-d0b5-4d25-a467-35aed683b623&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The algorithm can best be understood visually. Say we have lookbackDays = 5 and segmentsPerDay = 4. Saying that a row belongs to a given day and a given segment is equivalent to assigning it to a cell of a lookbackDays x segmentsPerDay grid. This is depicted below. The rows represent segment number, and the columns represent “unixDays % lookbackDays” (i.e., number of days since 1970-01-01).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cf49d824-1377-45b9-b7d9-1249e3edd76e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As can be seen, we end up with a matrix with row and column numbers from [0, 5) and [0, 4) respectively. The example below assumes that 2022-01-03 has a unixDay that is divisible by 5.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2ae99075-06b6-4f4a-b862-2b9ada495d2c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;1f2a883c-6dcd-4f23-9097-c36c13469b23&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeVPWie8G8MD2gy3Uw1lPrleKqFBs_O-AYEMBj3H1xnYs90_l8ku4K9i83tQ5-sAg4YD5ZawTk1SF4bfN0uthfj87xOXHVs3X4wpwL8MOjrTYTz8ytyYI366P5aokpCrVpz-BI9zCVgFdlw3X8MnALS4JVL?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4:&lt;strong&gt; &lt;/strong&gt;Shows how you can map a record to a Spark partition. The record’s column is assigned based on the date the record represents. Each date has 4 segments, and the row can be assigned either based on the hash of a partitioning column or randomly.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dd4c4df6-c2c5-498d-9a3b-2bd8b88b7028&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;22dfa589-62a5-4b98-9c42-ccdf68ad870d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our pipeline has validations to prevent multiple time-column values for the same Unix day. This is because we want Pinot to apply retention for all segments of a day at the same time, so we can provide the append table semantics consistently. We use the segment name format: “&amp;lt;table-name&amp;gt;_&amp;lt;time-column-value&amp;gt;_&amp;lt;time-column-value&amp;gt;_&amp;lt;sequence-id&amp;gt;”. Here the sequence-ID is an integer between [0, Number of Segments). So for the example above, we will have segments with names as follows:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;16f35265-70f7-4879-b258-45e7a1c0a15e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;0f3d82ca-8440-415a-b195-6fc67b92233f&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeb5jhwPRYmE9IX3Qoxf7v11vJEmBNHw6KMu3UkOzFY_Ar_HUZaw20QAa_OX1pu2fBeEMTlJinlZGCgWRUW5zklp52MWNgmSlHOKKmxCc1Z_h550TtBYOPY9r6fVTwoC78K_TKmYkfvgD6eeyOjNrY8DG8?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5:&lt;strong&gt; &lt;/strong&gt;Sample Segment Names.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c011dcb2-4c66-42b7-b4a4-3b77038c1a7c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d9661fb1-8ae5-420e-821c-28bb59254db6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Finally, we allow users to increase or decrease their number of segments, and the ingestion job can handle deleting extra segments in the Pinot controller as required.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9d53f3e7-fb69-4dd6-9bc1-f57a10212c5a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;9331640a-044b-4778-b41f-c8f0a1630b80&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-column-partitioning-for-append-tables&#34;&gt;Column Partitioning for Append Tables&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7520154d-658c-4e68-a614-332b1e9a0b14&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We support column partitioning for append tables as well. Everything remains the same as described for append tables above, except for the partitioner, which is augmented as follows:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;58b40468-5237-45ca-aab0-f9b073e2c7b6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;4e2b5398-0bc1-4f19-9996-9fb024fbbbd7&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfIMz4IDuy_ln8XdVNtBGTKVWDTYXogUla5o1MgiI356p4A_3qrytlcqIZ0sUHaM76d2N8AuBidk558iUCfYn1gm1x8fWU4aIrxzEWcvc_xkOwEVWJ_JtAHb7s2C9RehCj9o0co160VYfzfBP-Zoas27B0e?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6:&lt;strong&gt; &lt;/strong&gt;Spark Partitioner for Append Tables that also have Column Partitioning enabled on a column. Before calling the partitioner, we concatenate the time column and the partitioning column values with “\0” as the delimiter.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;618e0c7c-a8c2-4d19-8556-4aeaa5fa6c81&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4bf3d955-ac82-42fe-a3ac-24942688c09e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We again reduce it to a problem of assigning a tuple to a Grid. The column number is determined using the Unix Day value and the row number is determined using the hash value of the partitioning column. Additionally, we allow users to keep the number of segments parameter a multiple of the number of logical partitions of the partitioning column, to allow them to tune the segment size without changing the number of partitions.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4d28c455-e93f-44a9-a104-74ff0cec7467&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:4,&amp;quot;hash&amp;quot;:&amp;quot;5510831b-ab0b-4d7e-8fe2-d5c62bf13bc8&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-advantages-of-column-partitioning&#34;&gt;Advantages of Column Partitioning&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;92ccd092-991e-4d35-ab60-cca0eb4781bb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In some cases, we have seen column partitioning reduce data volume by as much as 4x. This is because certain datasets really benefit from dictionary encoding when you partition by a key that colocates similar data in the same Spark partition. Column partitioning can also help with segment pruning, which can often really improve query performance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;347a33d6-f256-4255-ba76-e0058de18c34&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;32cc0eb5-d186-4e84-917c-83937f4d3f49&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-spark-data-exports&#34;&gt;Spark Data Exports&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2d38f181-81eb-4bda-a914-f710d4c94eb2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;So far we talked about ingesting data into Pinot from offline sources, but Pinot can also be used to export data from its real-time upsert tables to offline sinks like Hive/Object Stores.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c91612d9-73b9-4187-9b15-0917d90768d9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;PInot is primarily designed for low-latency analytical queries, which fetch relatively small amounts of data. Uber’s internal usage of Pinot is not different from this paradigm, so we have a 10K limit on the maximum number of rows that can be read from Pinot in a single query. We also keep a close eye on query latency, since our query gateway and query clients are designed around the assumption of short execution time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ff15141d-a42a-4484-9e6f-cb7e549d59fb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;That being said, there are scenarios where our users need to extract large amounts of data from their Pinot tables. Even though Pinot tables are not generally considered to be the source of truth, there are setups with advanced ingestion functionality such as “upsert” or “dedup” that make the Pinot table “cleanest” snapshot of the source data. Also, Pinot retention is typically longer than the real-time source (Kafka topic), which makes it handy if you want to extract data for longer time slices.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3027bb17-f56a-48b6-9038-ee4de2625a08&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For such use cases, we utilize Spark and the Spark-Pinot connector to do batch/bulk reads from Pinot.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;08b10bb4-f1aa-4ee9-b9d7-1ba4678b8f9e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;edf672fd-72c1-4a5a-b538-c1c7f5327b3a&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-spark-pinot-connector&#34;&gt;Spark Pinot Connector&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4d3259f3-aed1-453e-a162-876ebc4f5574&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Apache Spark exposes a standard datasource interface for external service providers to implement. Services can implement this interface and gain interoperability with other built-in or extended formats.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ed3bd45b-d697-4e37-9f6f-eb78eeb9b19f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pinot’s open-source codebase contains packages that implement the “read interface” for Spark 2 and Spark 3. Pinot&amp;nbsp; builds also contain two ready-to-use jars, pinot-spark-connector.jar and pinot-spark-3-connector.jar for corresponding Spark versions. Those artifacts can be included into your Spark application as “external-jars” and will provide the ability to use Pinot as a data source. A simple PySpark application that dumps the last days data of a Pinot table to Hive would look like this:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;909a7925-7d57-4d40-b0b9-91cafd7c1625&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;5ed6f100-59e3-4c18-8fb8-2245d2c33f86&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdrT91FpbRHeFhNp2GJlSrzrLatYNf5IZQ2FJI17vNTZPcRoB09VoA-DnutTWVx-zF8KlfcAD9Z_4TgrjqCEqSc7vYFvWtYEZhGGcHhqdm61OxTla6cT_vrsL17eLlT6tjK__5z5i1uPvEF5ZZWEFT1gPmK?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7:&lt;strong&gt; &lt;/strong&gt;Example PySpark app for exporting Pinot data into Hive.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3af8aaa5-23bd-4cca-a9cc-ab4978007986&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;40456453-3214-4be3-8532-3e9d17596940&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The connector accepts a variety of &lt;a href=&#34;https://github.com/apache/pinot/blob/master/pinot-connectors/pinot-spark-3-connector/documentation/read_model.md&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;options&lt;/a&gt; that control things like controller address and table name, or advanced configs such as read parallelism and timeout.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;28ec613a-6602-438f-a170-fc055a35df44&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;162c53ed-c549-4d09-8c7d-3921e393c399&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-read-model-of-the-spark-pinot-connector&#34;&gt;Read Model of the Spark Pinot Connector&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dff82436-bee2-4355-aed4-affb58b6af25&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Spark reader uses Pinot brokers in order to fetch a server-to-segment mapping, however the queries are executed directly on Pinot servers to avoid resource contention. The connector pushes down filters to Pinot in order to minimize unnecessary data movement, however it doesn’t support aggregation push down. This means if an aggregation query is issued, all needed data needs to be downloaded to Spark executors before the aggregation is done on Spark side. This makes the reader suitable for data exports, but not ideal for general analytics, which should be noted.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;88a33ae1-baf2-452c-800d-5f1b18acefb6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;40f8f426-9b98-4af4-97d9-77b12674560f&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-grpc-streaming&#34;&gt;gRPC Streaming&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;02f7270d-41bd-47a9-9634-89af8b25f07e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One noteworthy feature of the connector which we make use of at Uber is the gRPC streaming support.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;64f2ffca-4553-4e92-a003-fccf14aac5e1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Pinot servers have two interfaces for fetching data. One is a plain HTTP server and the other one is a gRPC endpoint. The plain HTTP endpoint is the more feature-complete and commonly used one, however the gRPC streaming endpoint has a distinct advantage. When executing a query, the plain HTTP endpoint loads the full resultset into heap before returning it to the caller. However the gRPC endpoint supports “chunking” and only needs to load the next chunk into heap while waiting for the caller to consume the available chunk. This alleviates the memory pressure on Pinot servers, especially for large reads.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;073cb6eb-689c-4641-9782-ece26981adb9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Spark reader provides an option to use the gRPC endpoint when fetching data from Pinot. Moreover, when this option is enabled, the connector also uses streaming on Spark side in order to achieve true end-to-end streaming. This means when exporting a table from Pinot to Hive, the pipeline may have already written some chunks to Hive even before the Pinot server has fully processed the local segment.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cbae6370-c79d-41b7-b22c-f408b13bebd9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;635f00a9-1776-4e55-8769-7dd261297a23&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfIs6_TNTUprRBC9k1fuV07RLXp-44Ii5D5YoCRi13lIeWmbKoVaPnln_2oLNzcubH7qwfnYGN6ss8rAhSvY1RPWsh2CZuRFCxpznFBtlkVK-QrAV5kbBWoCrW__o0aFa6MdrkwoEXb9z4F2epaNxk4YU2C?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8:&lt;strong&gt; &lt;/strong&gt;Shows the data flow from Pinot Table to Spark Executor and Hive Sink. Resultset is loaded and transferred in chunks in both Pinot Server and Spark Executor which enables extracting datasets larger than heap.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;df64d9c3-8589-47a3-bf6b-cc55291e7b6d&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;10e5e2a5-4630-4d42-9012-c7b38471be18&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Streaming is critical for export operations that transfer large amounts of data. Non-streaming mode limits per segment export sizes to available memory and either the Pinot server or the Spark executors can quickly run out of resources, failing the pipeline.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b5e88728-4654-4509-9b91-f2cdc7b56234&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6e89f2f2-f137-46a6-ac82-e07deb94eb05&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-usage-at-uber&#34;&gt;Usage at Uber&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dc69ea48-a106-42ff-9ec0-5288dc7bb45e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At Uber, we build a customized version of the connector jar that automatically discovers controller address based on tenant information and injects recommended configurations such as gRPC streaming. As with any Spark application, developers can choose to write their pipelines in Java, Scala, or Python and include the provided jar to enable Pinot read support with little effort. These applications typically cover scenarios like backup or exports.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d2d8fc2f-8741-4b79-81b0-e5ca682aa067&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Expectedly, batch read workflows bring additional load on Pinot servers, which can be detrimental to system performance if not configured correctly. For this reason, we avoid enabling such workloads on shared environments and have some guidelines for users to limit the read parallelism and monitor overall load when onboarding new such pipelines.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cdd8ea35-e369-442c-a151-575378e28bc9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In summary, the Spark connector provides a powerful tool for extracting large volumes of data out of Pinot. However it should be noted that it’s not a general analytics solution. It needs to be configured correctly and its impact on cluster performance should be evaluated carefully before productionisation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4b26f514-d356-426f-9626-cbc4a70d439f&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;49643c83-05a4-4f7a-a2fe-2ddaae4c90e4&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-next-steps&#34;&gt;Next Steps&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fb54fcb6-b47c-4ec3-b5bc-e4a28dd5d3c3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our current ingestion system allows users to write data at a pre-configured cadence, and some of our users have shown interest in on-demand ingestion support. We also have some power users who want to be able to write to Pinot from their own Spark pipelines.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bc2ae31f-21bb-4a03-903c-f23f8a5136b1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We will continue to explore and build out more integrations to enable even more use cases.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;46c0b78b-ef9e-45e4-8b21-ebf3e53e9ff0&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;91dc13ea-1c94-4f9c-9a84-3187786a10a6&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7c4e2950-c420-4209-a7d7-7c5c9b412f00&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Building an easy-to-use, self-serve platform for ingesting data from batch data sources to Pinot has unlocked a whole new set of use cases at Uber that couldn’t be supported before. Uber has a mature data lake ecosystem with Presto and Spark as its core query engines. Pinot augments this ecosystem, providing users a way to run low-latency analytics use cases on data from their offline sources with ease.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0467a3a2-3476-42cd-b414-30fc8e5a85f9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We feel that Pinot’s ability to seamlessly integrate with batch sources, along with its out-of-the-box support for multi-tenancy are severely underrated.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;3b6afd19-01c6-4ee3-b763-04cd0777a5ba&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Apache®, Apache Pinot™, Apache Kafka®, Apache Spark&lt;sup&gt;TM&lt;/sup&gt;, Apache Avro&lt;sup&gt;TM&lt;/sup&gt;, Apache Hive™, Pinot™, Kafka®, Spark&lt;sup&gt;TM&lt;/sup&gt;, Avro&lt;sup&gt;TM&lt;/sup&gt;, and Hive™ are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f31ce4cc-73ca-4f66-8538-fca0c87b7a83&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Oracle, Java, MySQL, and NetSuite are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners.&lt;br&gt;Cover Photo Attribution: “&lt;a href=&#34;https://www.flickr.com/photos/32824724@N02/3145971395&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Vineyard 002&lt;/a&gt;” by &lt;a href=&#34;https://www.flickr.com/photos/32824724@N02&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Caliterra&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/2.0/?ref=openverse&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CC BY-SA 2.0&lt;/a&gt;.&lt;/p&gt;】&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;d0b0567b-b1c7-47fc-9253-50253f445151&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-introduction&#34;&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;67baaccd-d1f4-4f09-aad9-56aa29519724&#34;,&#34;dropCap&#34;:false}&#34;&gt;Apache Pinot&lt; support&gt;™&lt;/sup&gt; 是一个实时 OLAP 数据库，能够从 Apache Kafka® 等流和 Apache Hive&lt;sup&gt;™&lt;/sup&gt; 等离线数据源获取数据。在 Uber，Pinot 已被证明在处理各种用例方面具有真正的多功能性：从每秒超过 100 万次写入、100+ QPS 和 &lt;500 毫秒延迟的实时用例，到需要低延迟的用例。离线数据的延迟分析。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;408d1e5b-a20f-461c-9c24-f91b1490fa78&#34;,&#34;dropCap&#34;:false}&#34;&gt;黑皮诺表下降分为三大类：&lt;em&gt;实时&lt;/em&gt;、&lt;em&gt;离线&lt;/em&gt;和&lt;em&gt;混合&lt;/em&gt;。实时表支持从 Kafka 等流中提取数据，离线表允许通过 Pinot Controller 的 HTTP API 上传预先构建的“段”，混合表同时具有实时和离线部分。混合表允许单个逻辑表（相同的名称和架构）从实时流和批处理源中提取数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e0349cce-7cf0-466a-aa95-e4c31261fd6c&#34;,&#34;dropCap&#34;:false}&#34;&gt;本文分享Uber 如何使用 Pinot 的离线表来服务涵盖所有业务线的 100 多个低延迟分析用例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8ff09083-e289-4bf5-aded-418f0f076d16&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ff679ca4-a030-4ad3-999c-71a7f30385c9&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-background&#34;&gt;​​背景&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;41b8c7d7-16ab-4a83-8f34-b260d4c9c096&#34;,&#34;dropCap&#34;:false}&#34;&gt;Uber 有一个拥有超过 100 PB 数据的庞大数据湖，近十年来我们一直在使用 Presto®、Apache Spark&lt;sup&gt;™&lt;/sup&gt; 和 Apache Hive&lt;sup&gt;™&lt;/sup&gt; 为我们的许多内部客户提供服务分析用例。 Presto® 尤其擅长处理 QPS 较低（低于 10 秒）和延迟约为几秒的用例。然而，在很多用例中，我们的用户需要在更高 QPS 下实现亚秒级 p99 延迟。大多数用户还希望为其用例提供专用资源，以避免吵闹的邻居。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;549f949b-724a-4b2b-9005-d240f0921229&#34;,&#34;dropCap&#34;:false}&#34;&gt;Apache Pinot 的能力运行 l高 qps 下的低延迟查询，以及内置的多租户和离线数据摄取支持，使其非常适合服务这些用例。我们在过去几年中看到了这种情况的发生，Pinot 现在支持 Uber 的 100 多个离线表分析用例，其中有 500 多个离线表在生产中运行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;808bf1b3-157c-4475-bcf1-82a3ce3958aa&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;bc3284e3-c73c-4d24-aaa8-ed942906b141&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-pinot-offline-table-ingestion-primer&#34;&gt;Pinot 离线表摄取入门&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;31051218-84dd-40c8-9fcf-b6d16d136fe0&#34;,&#34;dropCap&#34;:false}&#34;&gt;Pinot 存储数据实时表和离线表的“分段”中的表。对于实时表，来自 Kafka 的数据在内存中的“可变段”中被消耗，直到达到阈值，之后该段被提交以构建“不可变段”。提交完成后，会创建一个新的可变段，从上次读取的偏移量开始继续消费。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1fd27012-e249-4f11-8c60-03b7b214c4cf&#34;,&#34;dropCap&#34;:false}&#34;&gt;对于离线表, Pinot 允许通过 Pinot 控制器中的 POST /segments API 上传预构建的不可变段。可以使用“SegmentIndexCreationDriver”和“RecordReader”接口在 Pinot 之外构建段。 RecordReader 接口允许将数据从任意源馈送到段驱动程序。段驱动程序还允许配置每列应使用的索引和编码。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f7c9317f-676d-4528-86e3-39ea565a079e&#34;,&#34;dropCap&#34;:false}&#34;&gt;一次分段对于在 Pinot 外部构建的离线表，您可以从中创建一个 tarball，将其上传到 Pinot 服务器可以访问的“深层存储”位置，然后点击控制器中的 POST /segments API。控制器将创建一个新段或更新现有段的元数据（如果已存在同名段）。然后，它会向服务器发送一条消息以下载并加载片段，使它们可查询。该控制器还有一个用于删除现有段的 API，这意味着对于离线表，您可以通过添加新段、替换现有段或删除现有段来管理段级别的 Pinot 数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;87ad7115-f832-4479-a5c6-3605d913ba8c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-块-分离”r 有-alpha-通道-不透明度&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;886e379e-0c35-4f0f-9bef-289977654dc9&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-self-serve-platform&#34;&gt;自助服务平台&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b531ea11-81be-46d5-a151-608313cf9cef&#34;,&#34;dropCap&#34;:false}&#34;&gt;给出如何分段建立和添加/更新/删除，问题是我们如何构建一个自助平台，允许100+用户无缝地创建和管理新的离线Pinot表？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0a94e7fd-05e8-4034-923d-e7e68f731254&#34;,&#34;dropCap&#34;:false}&#34;&gt;为此，我们利用了名为 &lt;a href=&#34;https://www.uber.com/blog/no-code-workflow-orchestrator/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;uWorc 的内部无代码工作流程编排框架&lt;/a&gt;。我们有一个专用的工作流程类型，用于将数据从 Hive 摄取到 Pinot。 uWorc 为用户提供了一个 UI，他们可以在其中设置表名称、Apache Spark&lt;sup&gt;TM&lt;/sup&gt; 或 Presto® 查询、所需的索引等。它还允许用户配置作业何时运行，并且具有对跟踪执行历史记录的丰富支持，可用于查看每次运行的状态和日志。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b804b111-dd1e-499c-8efd-ad1558eaedc2&#34;,&#34;dropCap&#34;:false}&#34;&gt;在每个管道中run，我们运行用户指定的SparkSQL或PrestoSQL，并在表中添加/更新输出记录集。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;567db32f-15e6-4aec-bf2d-481aa0b690ab&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;cabba826-d3ac-4555-a839-2998c161834e&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXekLZSA8Z6kP2lVH54G9FoQtMaw7H_VzSCo3FKw93r1AEFaF6D1ar_hiQbz_4yPgEFC6domG92vEpj2jTTs_ACKQ9XE0 21IstDD2jVR4bxRCct0d34ENGFhAgvrISKlDmPdrfJcUp3pMXwMeN52_QS4Gac?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34;referrerpolicy=&#34;no- referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 1：显示了 uWorc 中每天运行的 Hive 到 RTA 管道示例。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;25cd8ec9-b58c-4010-8367-74012b392223&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3d7a2a35-7033-47ac-ae98-ab929ed9f368&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-data-modeling&#34;&gt;数据建模&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p 数据可湿性粉剂块名称=core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9f8f2e4f-0763-45e3-bb74-332eb6486a5e&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们通过 uWorc 支持两种类型的离线表：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f167793a-94e7-48e9-b13e-d45dccb667a8&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;覆盖表&lt;/strong&gt;：当表标记为覆盖时，每次运行pipeline 将完全重写表中的所有数据。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;附加表&lt;/strong&gt;：这些表具有“基于天的分区”，让人想起Hive 表中基于 datestr 的分区。给定日期运行的管道将添加该天的数据，或者如果数据已存在，则更新该天的数据。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4acee207-7936-4740-bbc9-8af117862eff&#34;,&#34;dropCap&#34;:false}&#34;&gt;这两个表类型需要在 SparkSQL 查询中生成“secondsSinceEpoch”列，Pinot 使用该列进行保留。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cf5903da-7fba-4b4c-b486-611d00ea66d5&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d484e0cd-4502-46f9-bc11-6c0b34b20967&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-ingestion-job&#34;&gt;摄取作业&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;32853506-73ea-4ffc-b591-10820ebd2bf2&#34;,&#34;dropCap&#34;:false}&#34;&gt;Pinot 只允许在段级别管理脱机表的数据以及上述的覆盖/追加表语义在 Pinot 中本身并不存在。我们使用摄取作业来实现它们。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;44679f2d-87b4-48f8-864c-d4b71e1992dc&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的摄取工作使用 &lt;a href=&#34;https://www.uber.com/blog/marmaray-hadoop-ingestion-open-source/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Marmaray&lt;/a&gt; 实现：Uber 的构建在 Spark 之上的开源数据分散框架。 Marmaray 支持从“任何源到任何接收器”提取数据。它通过提供 3 个关键 SPI 来实现此目的：源、接收器和基于 Apache Avro™ 的中间数据格式。我们已经实现了一个 PinotSink，从技术上讲，它可以从所有内部可用的来源中摄取。但是，目前我们仅使用它从 Hive 源获取数据。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0827e05d-2ab1-4aac-ab89-49b92ef0a15f&#34;,&#34;dropCap&#34;:false}&#34;&gt;PinotSink 收到一个JavaRDD&lt;AvroPayload&gt; 来自在较高级别上获取并执行以下步骤：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e6cddac0-d0b6-4988-bf9e-ef6afbfd2564&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;重新分区 RDD 以满足段数、表类型和列分区要求。每个 Spark 分区最终对应 1 个段。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;构建细分并将其上传到深层存储。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;对 Pinot 控制器进行 HTTP POST /segments 调用以添加/更新构建的段。&lt;/li &gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;从 Pinot 中删除任何段以满足覆盖/追加表类型语义。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5b41c620-65f6-43c6-95e0-437333ea76be&#34;,&#34;dropCap&#34;:false}&#34;&gt;下面我们解释一下如何支持每种表类型。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;351910f9-6a42-44e1-813a-de99ac91b393&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;0231c7be-fcdf-4c08-a34d-013724d6a435&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-overwrite-tables&#34;&gt;覆盖表&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;945803bb-3d00-4c88-a4a7-8e3e3f670398&#34;,&#34;dropCap&#34;:false}&#34;&gt;可能会覆盖表涉及 RDD 重新分区以满足配置的“段数”要求和/或“列分区”要求。如果我们没有任何列分区要求，那么我们使用自定义 Spark &lt;a href=&#34;https://spark.apache.org/docs/latest/api/java/org/apache/spark/Partitioner.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;分区器&lt;/a&gt;，在每个 Spark 分区上随机分布记录。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;835fbf25-0a2e-4e70-a69e-81034ed882f7&#34;,&#34;dropCap&#34;:false}&#34;&gt;当列分区时启用后，我们在配置的列上使用 Murmur2 哈希将元组分区为所需的“段数”分区。其逻辑非常简单：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a1c73a7c-335f-423a-bb63-49af48ba0921&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;3f8d49e6-3193-4020-b7aa-9ddfdcc2dfef&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;异步&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdJkT4aUHGjWn2573GZ__05sG4XsthSrmCufulnqCuxOQGTNFbA5EdocKYACFE3LR1LMZjKD1-bHGwKC-NvSY8VdOXYKtsBMGDnclOjkY kZ3s85HfHXfOhYVI5IgTC0mq-5bI0wjBT7pYUcQUcrTtxbDps?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34;referrerpolicy=&#34;no -referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 2：用于覆盖启用了列分区的表的 Spark 分区程序。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f07a97f2-b36b-475d-bf00-a78997982d01&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a474987a-8470-48a7-8c71-ce9d925a815e&#34;,&#34;dropCap&#34;:false}&#34;&gt;用于覆盖表，我们总是生成格式为“&lt;table-name&gt;_&lt;spark-partition-number&gt;”的段名称。如果用户减少“段数”，则后续作业将产生比前一个作业更少的段。在这种情况下，后续作业将删除 Pinot 中多余的段以防止数据重复。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;15eabb5c-72fa-4d0d-a1f6-85c3bf66ad22&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;370c7015-5283-49f3-8c96-bb8b1d82133d&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-append-tables&#34;&gt;追加表格&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e3faaac1-d7a7-4ce1-808d-cc9ba2f335de&#34;,&#34;dropCap&#34;:false}&#34;&gt;用于追加表，“分段数”属性用于控制应为数据中的每个唯一日期创建的分段数。例如，如果您将分段数配置为 4，并且您的提取作业生成日期“2022-01-01 至 2022-01-05”的数据，则该作业生成的分段总数将为 20，每天4个。这意味着我们总是必须为追加表重新分区 RDD，因为源 RDD 可能是任意分区的。此外，对于每个日期，我们必须确保生成预先配置的分段数量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;27dafb25-e1bf-443c-98f8-b1af1ee9fc8c&#34;,&#34;dropCap&#34;:false}&#34;&gt;Spark 分区器API 允许我们将元组映射到整数分区 ID。那么问题是我们如何将记录映射到整数分区ID以满足追加表语义？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a1cc01a1-3805-4a56-8dd6-2189d0fd9e85&#34;,&#34;dropCap&#34;:false}&#34;&gt;实现此目的，我们使用如下所示的 Spark 分区器：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;483675f0-a89a-4338-9ccf-30cc3fc9c733&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha -通道不透明度&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;35550e03-3645-4cd1-8ed5-f9c1e88a1df8&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf9mI7DccXdRz5dHm2Gs80y_sa-22Wf-9Xw28M0iOGbnbqQ1jGeiD8JW32PViZRJiUEv4OXaYp4IvGKaiKJ_zq4 P_6vS9gri7XeyhE2sqOqz6unZQCZBVHOm3zw7zCQ-vyUIYFYhqqpD4kgz3yP_nsXmF3L?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 3：用于追加表的 Spark 分区器。通过以循环方式将记录分配给每个分段来满足每天的分段限制。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;84cfb1b3-77a2-4f36-923a-26ea64310b1a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d62eca43-a825-4053-b709-16a77fd2dd3d&#34;,&#34;dropCap&#34;:false}&#34;&gt;分区是在用户配置的时间列上完成。在调用分区器之前，我们计算出“lookbackDays”值，它是 RDD 中最小和最大 Unix Day 之间的天数。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;64d1c65a-d0b5-4d25-a467-35aed683b623&#34;,&#34;dropCap&#34;:false}&#34;&gt;该算法可以最好从视觉上理解。假设我们有lookbackDays = 5和segmentsPerDay = 4。说一行属于给定的一天和给定的段相当于将其分配给lookbackDays xsegmentsPerDay网格的单元格。如下图所示。行代表段编号，列代表“unixDays %lookbackDays”（即自 1970-01-01 以来的天数）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cf49d824-1377-45b9-b7d9-1249e3edd76e&#34;,&#34;dropCap&#34;:false}&#34;&gt;可以是可以看到，我们最终得到一个矩阵，行数和列数分别来自 [0, 5) 和 [0, 4)。下面的示例假设 2022-01-03 的 unixDay 可以被 5 整除。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2ae99075-06b6-4f4a-b862-2b9ada495d2c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;1f2a883c-6dcd-4f23-9097-c36c13469b23&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeVPWie8G8MD2gy3Uw1lPrleKqFBs_O-AYEMBj3H1xnYs90_l8ku4K9i83tQ5-sAg4YD5ZawTk1SF4bfN0uthfj87xOXHVs3X4wpwL8MOjrTYTz8ytyYI366P5aokpCrVpz-BI9zCVgFdlw3X 8MnALS4JVL?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 4：&lt;strong&gt; &lt;/strong&gt;展示了如何将记录映射到 Spark 分区。记录的列根据记录代表的日期进行分配，每个日期有 4 个段，并且可以根据分区列的哈希或随机分配行。&lt;/figcaption&gt;&lt; /图&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dd4c4df6-c2c5-498d-9a3b-2bd8b88b7028&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;22dfa589-62a5-4b98-9c42-ccdf68ad870d&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的管道有验证以防止同一 Unix 天出现多个时间列值。这是因为我们希望 Pinot 同时对一天中的所有时段应用保留，因此我们可以一致地提供追加表语义。我们使用段名称格式：“&lt;table-name&gt;_&lt;time-column-value&gt;_&lt;time-column-value&gt;_&lt;sequence-id&gt;”。这里的序列 ID 是 [0, 段数) 之间的整数。因此，对于上面的示例，我们将拥有名称如下的段：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;16f35265-70f7-4879-b258-45e7a1c0a15e&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;0f3d82ca-8440-415a-b195-6fc67b92233f&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeb5jhwPRYmE9IX3Qoxf7v11vJEmBNHw6KMu3UkOzFY_Ar_HUZaw20QAa_OX1pu2fBeEMTlJinlZGCgWRUW5zklp52MWNgmSl HOKKmxCc1Z_h550TtBYOPY9r6fVTwoC78K_TKmYkfvgD6eeyOjNrY8DG8?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34;referrerpolicy=&#34;no- referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 5：&lt;strong&gt; &lt;/strong&gt;示例段名称。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c011dcb2-4c66-42b7-b4a4-3b77038c1a7c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d9661fb1-8ae5-420e-821c-28bb59254db6&#34;,&#34;dropCap&#34;:false}&#34;&gt;最后，我们允许用户增加或减少分段数量，并且摄取作业可以根据需要删除 Pinot 控制器中的额外分段。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;核心/分隔符&#34; data-wp-block=&#34;{&#34;哈希&#34;:&#34;9d53f3e7-fb69-4dd6-9bc1-f57a10212c5a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;9331640a-044b-4778-b41f-c8f0a1630b80&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-column-partitioning-for-append-tables&#34;&gt;追加表的列分区&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7520154d-658c-4e68-a614-332b1e9a0b14&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们支持列也可以对附加表进行分区。除了分区器之外，所有内容都与上面的附加表所述相同，分区器按如下方式增强：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;58b40468-5237-45ca-aab0-f9b073e2c7b6&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;4e2b5398-0bc1-4f19-9996-9fb024fbbbd7&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfIMz4IDuy_ln8XdVNtBGTKVWDTYXogUla5o1MgiI356p4A_3qrytlcqIZ0sUHaM76d2N8AuBidk558iUCfYn1gm1x8f WU4aIrxzEWcvc_xkOwEVWJ_JtAHb7s2C9RehCj9o0co160VYfzfBP-Zoas27B0e?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 6：&lt;strong&gt; &lt;/strong&gt;用于在列上启用列分区的追加表的 Spark 分区程序。在调用分区器之前，我们使用“\0”作为分隔符连接时间列和分区列值。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;618e0c7c-a8c2-4d19-8556-4aeaa5fa6c81&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4bf3d955-ac82-42fe-a3ac-24942688c09e&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们再次减少它涉及将元组分配给网格的问题。列号是使用 Unix Day 值确定的，行号是使用分区列的哈希值确定的。此外，我们允许用户将段数参数保留为分区列的逻辑分区数的倍数，以允许他们在不更改分区数的情况下调整段大小。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4d28c455-e93f-44a9-a104-74ff0cec7467&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:4,&#34;hash&#34;:&#34;5510831b-ab0b-4d7e-8fe2-d5c62bf13bc8&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-advantAges-of-column-partitioning&#34;&gt;列分区的优点&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;92ccd092-991e-4d35-ab60-cca0eb4781bb&#34;,&#34;dropCap&#34;:false}&#34;&gt;在某些情况下，我们发现列分区将数据量减少了 4 倍之多。这是因为当您按将相似数据并置在同一 Spark 分区中的键进行分区时，某些数据集确实受益于字典编码。列分区还可以帮助进行段修剪，这通常可以真正提高查询性能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;347a33d6-f256-4255-ba76-e0058de18c34&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;32cc0eb5-d186-4e84-917c-83937f4d3f49&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-spark-data-exports&#34;&gt;Spark 数据导出&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2d38f181-81eb-4bda-a914-f710d4c94eb2&#34;,&#34;dropCap&#34;:false}&#34;&gt;到目前为止，我们讨论了从离线源将数据提取到 Pinot 中，但 Pinot 也可用于将数据从其实时更新插入表导出到离线接收器（如 Hive/对象存储）。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c91612d9-73b9-4187-9b15-0917d90768d9&#34;,&#34;dropCap&#34;:false}&#34;&gt;PInot 主要是专为低延迟分析查询而设计，可获取相对少量的数据。 Uber 对 Pinot 的内部使用与这种范例没有什么不同，因此我们对单个查询中可以从 Pinot 读取的最大行数有 10K 的限制。我们还密切关注查询延迟，因为我们的查询网关和查询客户端是围绕短执行时间的假设而设计的。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ff15141d-a42a-4484-9e6f-cb7e549d59fb&#34;,&#34;dropCap&#34;:false}&#34;&gt;话虽这么说，在某些情况下，我们的用户需要从 Pinot 表中提取大量数据。尽管 Pinot 表通常不被认为是事实来源，但有一些具有高级摄取功能的设置，例如“upsert”或“dedup”，可以使 Pinot 表成为源数据的“最干净”快照。此外，Pinot 保留时间通常比实时源（Kafka 主题）更长，如果您想提取更长时间片的数据，这会很方便。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3027bb17-f56a-48b6-9038-ee4de2625a08&#34;,&#34;dropCap&#34;:false}&#34;&gt;对于此类用途在这种情况下，我们利用 Spark 和 Spark-Pinot 连接器从 Pinot 进行批量/批量读取。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;08b10bb4-f1aa-4ee9-b9d7-1ba4678b8f9e&amp;quot;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;edf672fd-72c1-4a5a-b538-c1c7f5327b3a&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-spark-pinot-connector&#34;&gt;Spark Pinot 连接器&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4d3259f3-aed1-453e-a162-876ebc4f5574&#34;,&#34;dropCap&#34;:false}&#34;&gt;Apache Spark 公开供外部服务提供商实施的标准数据源接口。服务可以实现此接口并获得与其他内置或扩展格式的互操作性。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ed3bd45b-d697-4e37-9f6f-eb78eeb9b19f&#34;,&#34;dropCap&#34;:false}&#34;&gt;Pinot 的开放-源代码库包含实现 Spark 2 和 Spark 3 的“读取接口”的包。Pinot 版本还包含两个即用型 jar，即用于相应 Spark 的 pinot-spark-connector.jar 和 pinot-spark-3-connector.jar版本。这些工件可以作为“external-jars”包含到您的 Spark 应用程序中，并将提供使用 Pinot 作为数据源的能力。将 Pinot 表的最后几天数据转储到 Hive 的简单 PySpark 应用程序如下所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;909a7925-7d57-4d40-b0b9-91cafd7c1625&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;5ed6f100-59e3-4c18-8fb8-2245d2c33f86&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdrT91FpbRHeFhNp2GJlSrzrLatYNf5IZQ2FJI17vNTZPcRoB09VoA-DnutTWVx-zF8KlfcAD9Z_4TgrjqCEqSc7vYF vWtYEZhGGcHhqdm61OxTla6cT_vrsL17eLlT6tjK__5z5i1uPvEF5ZZWEFT1gPmK?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34; 推荐策略=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 7：&lt;strong&gt; &lt;/strong&gt;用于将 Pinot 数据导出到 Hive 的示例 PySpark 应用程序。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div &gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3af8aaa5-23bd-4cca-a9cc-ab4978007986&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;40456453-3214-4be3-8532-3e9d17596940&#34;,&#34;dropCap&#34;:false}&#34;&gt;连接器接受各种 &lt;a href=&#34;https://github.com/apache/pinot/blob/master/pinot-connectors/pinot-spark-3-connector/documentation/read_model.md&#34; target=&#34;_blank&#34; rel=&#34; noreferrer noopener&#34;&gt;选项&lt;/a&gt;，用于控制控制器地址和表名称等内容，或高级配置（例如读取并行性和超时）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;小时数据-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;28ec613a-6602-438f-a170-fc055a35df44&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp -块分隔符具有 alpha 通道不透明度&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;162c53ed-c549-4d09-8c7d-3921e393c399&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-read-model-of-the-spark-pinot-connector&#34;&gt;读取 Spark Pinot 连接器的模型&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dff82436-bee2-4355-aed4-affb58b6af25&#34;,&#34;dropCap&#34;:false}&#34;&gt;Spark 阅读器使用Pinot 代理以获取服务器到段的映射，但是查询直接在 Pinot 服务器上执行以避免资源争用。连接器将过滤器下推到 Pinot，以最大限度地减少不必要的数据移动，但它不支持聚合下推。这意味着如果发出聚合查询，则在 Spark 端完成聚合之前，需要将所有需要的数据下载到 Spark 执行器。这使得阅读器适合数据导出，但不适合一般分析，这一点应该注意。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;88a33ae1-baf2-452c-800d-5f1b18acefb6&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;40f8f426-9b98-4af4-97d9-77b12674560f&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-grpc-streaming&#34;&gt;gRPC 流&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;02f7270d-41bd-47a9-9634-89af8b25f07e&#34;,&#34;dropCap&#34;:false}&#34;&gt;一项值得注意的功能我们在 Uber 使用的连接器之一是 gRPC 流支持。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;64f2ffca-4553-4e92-a003-fccf14aac5e1&#34;,&#34;dropCap&#34;:false}&#34;&gt;Pinot 服务器有两个接口用于获取数据。一种是普通 HTTP 服务器，另一种是 gRPC 端点。普通 HTTP 端点是功能更完整且常用的端点，但 gRPC 流端点具有明显的优势。执行查询时，普通 HTTP 端点将完整结果集加载到堆中，然后将其返回给调用者。然而，gRPC 端点支持“分块”，只需要在等待调用者消耗可用块的同时将下一个块加载到堆中。这减轻了 Pinot 服务器的内存压力，特别是对于大量读取。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;073cb6eb-689c-4641-9782-ece26981adb9&#34;,&#34;dropCap&#34;:false}&#34;&gt;Spark 阅读器提供从 Pinot 获取数据时使用 gRPC 端点的选项。此外，当启用此选项时，连接器还会在 o 中使用 Spark 端的流式传输为了实现真正的端到端流媒体。这意味着当将表从 ​​Pinot 导出到 Hive 时，甚至在 Pinot 服务器完全处理本地段之前，管道可能已经将一些块写入 Hive。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cbae6370-c79d-41b7-b22c-f408b13bebd9&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;635f00a9-1776-4e55-8769-7dd261297a23&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfIs6_TNTUprRBC9k1fuV07RLXp-44Ii5D5YoCRi13lIeWmbKoVaPnln_2oLNzcubH7qwfnYGN6ss8rAhSvY1RPWsh2CZu RFCxpznFBtlkVK-QrAV5kbBWoCrW__o0aFa6MdrkwoEXb9z4F2epaNxk4YU2C?key=XXCdwYg2DoEiA4rnJhNrkg&#34; alt=&#34;&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 8：&lt;strong&gt; &lt;/strong&gt;显示从 Pinot Table 到 Spark Executor 和 Hive Sink 的数据流。结果集在 Pinot Server 和 Spark Executor 中以块的形式加载和传输，从而能够提取大于堆的数据集。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;df64d9c3-8589-47a3-bf6b-cc55291e7b6d&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;10e5e2a5-4630-4d42-9012-c7b38471be18&#34;,&#34;dropCap&#34;:false}&#34;&gt;流媒体至关重要用于传输大量数据的导出操作。非流模式将每个段导出大小限制为可用内存，Pinot 服务器或 Spark 执行器可能会很快耗尽资源，从而导致管道失败。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b5e88728-4654-4509-9b91-f2cdc7b56234&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6e89f2f2-f137-46a6-ac82-e07deb94eb05&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-usage-at-uber&#34;&gt;Uber 的使用情况&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dc69ea48-a106-42ff-9ec0-5288dc7bb45e&#34;,&#34;dropCap&#34;:false}&#34;&gt;在 Uber，我们构建了一个定制版本的连接器 jar，它根据租户信息自动发现控制器地址并注入推荐的配置，例如 gRPC 流。与任何 Spark 应用程序一样，开发人员可以选择使用 Java、Scala 或 Python 编写管道，并包含提供的 jar 以轻松启用 Pinot 读取支持。这些应用程序通常涵盖备份或导出等场景。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p 数据可湿性粉剂块名称=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d2d8fc2f-8741-4b79-81b0-e5ca682aa067&#34;,&#34;dropCap&#34;:false}&#34;&gt;预计，批量读取工作流程会给 Pinot 服务器带来额外的负载，如果配置不正确，可能会损害系统性能。因此，我们避免在共享环境中启用此类工作负载，并为用户提供了一些指导原则，以在加入新的此类管道时限制读取并行性并监控总体负载。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cdd8ea35-e369-442c-a151-575378e28bc9&#34;,&#34;dropCap&#34;:false}&#34;&gt;总而言之， Spark 连接器提供了一个强大的工具，用于从 Pinot 中提取大量数据。但应该注意的是，它不是通用的分析解决方案。它需要正确配置，并且在生产之前应仔细评估其对集群性能的影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4b26f514-d356-426f-9626-cbc4a70d439f&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;49643c83-05a4-4f7a-a2fe-2ddaae4c90e4&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-next-steps&#34;&gt;后续步骤&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fb54fcb6-b​​47c-4ec3-b5bc-e4a28dd5d3c3&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们当前的摄取系统允许用户以预先配置的节奏写入数据，我们的一些用户对按需摄取支持表现出了兴趣。我们还有一些高级用户希望能够从自己的 Spark 管道写入 Pinot。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;bc2ae31f-21bb-4a03-903c-f23f8a5136b1&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们将继续探索和构建更多集成以实现更多用例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;46c0b78b-ef9e-45e4-8b21-ebf3e53e9ff0&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;91dc13ea-1c94-4f9c-9a84-3187786a10a6&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-conclusion&#34;&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7c4e2950-c420-4209-a7d7-7c5c9b412f00&#34;,&#34;dropCap&#34;:false}&#34;&gt;构建一个简单的用于将数据从批量数据源提取到 Pinot 的自助服务平台为 Uber 解锁了以前无法支持的一组全新用例。 Uber 拥有成熟的数据湖生态系统，以 Presto 和 Spark 为核心查询引擎。 Pinot 增强了这个生态系统，为用户提供了一种对来自 t 的数据运行低延迟分析用例的方法。轻松继承线下资源。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0467a3a2-3476-42cd-b414-30fc8e5a85f9&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们认为Pinot 与批处理源无缝集成的能力及其对多租户的开箱即用支持被严重低估。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;3b6afd19-01c6-4ee3-b763-04cd0777a5ba&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;Apache®、Apache Pinot™、Apache Kafka®、Apache Spark&lt;sup&gt;TM&lt;/sup&gt;、Apache Avro&lt;sup&gt;TM&lt;/sup&gt;、Apache Hive™、Pinot™、Kafka®、Spark&lt;sup&gt;TM&lt;/sup&gt;、Avro&lt;sup&gt;TM&lt;/sup&gt; 和 Hive™ 是 Apache Software Foundation 在美国的注册商标或商标和/或其他国家。使用这些标记并不暗示 Apache 软件基金会的认可。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;f31ce4cc-73ca-4f66-8538-fca0c87b7a83&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;Oracle、Java、MySQL 和 NetSuite 是 Oracle 和/或其附属公司的注册商标。其他名称可能是其各自所有者的商标。&lt;br&gt;封面照片归属：“&lt;a href=&#34;https://www.flickr.com/photos/32824724@N02/3145971395&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;葡萄园 002&lt;/a&gt;” 作者：&lt;a href=&#34;https://www.flickr.com/photos/32824724@N02&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Caliterra&lt;/a&gt;已获得 &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/2.0/?ref=openverse&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CC BY-SA 2.0&lt;/a&gt; 许可。 &lt;/p&gt;</description>
      <pubDate>Thu, 29 Aug 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Shifting E2E Testing Left at Uber】Uber 的端到端测试左移</title>
      <link>https://www.uber.com/blog/shifting-e2e-testing-left/</link>
      <description>【&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6085e52b-6b27-403c-9ed7-1351d6b7a62b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A few years ago, Uber primarily relied on incremental rollout and production probing/alerts to catch regressions. While this approach is sound, it became very operationally expensive and we also experienced many leakages. Detecting issues late requires developers to bisect the exact bad change and then go back through the whole process again.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9168d5ea-ebc8-414d-8cc2-86971c8e5a4a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;31898c14-1051-4014-8dd3-62376fe4f619&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeTv9oVp0FRXBYsN2h_eWOk892eC4uTeBBIjL4V1G6pKG0cT1NuAR866VuKBy1sG8cKa19zp7K18yp1FTUrWHt8Wp7LIbEd_XB5YWrbJdRIwTtUG03cLXcfVARtGveGAhpkYyfhwu-j2_VRBCrADHWuJsrv?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Catching issues as early as possible (i.e. shifting detection left)&amp;nbsp; reduces the above operational burden.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1955f830-2171-4e24-b02a-6c6f18790ec1&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;01abcd0b-a489-4cf1-a9db-fbcfb868bed3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Many of our outage postmortems indicated little to no testing beyond a few basic unit tests, which were often so dependent on mocks that it was difficult to understand how much protection they actually offered.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;88c8df19-850c-4dcc-9e8b-d1e5112653f7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber is well-known for having fully embraced microservice-based architecture. Our core business logic is encapsulated across large groups of microservices such that it is difficult to validate functionality within a single service without over-mocking. Because of our architecture, the only sane way to test has been to perform E2E testing. At the same time, our internal NPS surveys consistently highlighted that E2E testing was the hardest part of the job for developers – it’s no surprise it was often skipped.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;62f880a5-433b-424e-8669-633d0264676e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A well-known testing blog from 2015, &lt;a href=&#34;https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Just Say No To More End-To-End Tests&lt;/a&gt;, calls out E2E tests as difficult to maintain, expensive to write, flaky, slow, and difficult to debug.&amp;nbsp; Uber’s journey into testing has run into all of the above problems and we’ve had to come up with creative ways to solve them.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;40045377-241c-446d-90b1-3d1eb720e570&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In this blog, we describe how we built a system that gates every code and configuration change to our core backend systems (1,000+ services). We have several thousand E2E tests that have an average pass rate of 90%+ per attempt. Imagine each of these tests going through a real E2E user flow, like going through an Uber Eats group order. We do all this fast enough to run on every diff before it gets landed.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eed67a41-b10b-49c6-bb6f-c6d46f69dbbe&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c919c3a3-1716-4781-bd04-de8f7cd766d2&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-prior-approaches&#34;&gt;Prior Approaches&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;dbf51c90-1961-4ee2-b9e1-b126c0821ebf&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-docker-compose&#34;&gt;Docker Compose&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;45728472-5529-407d-8b2e-c964387b79b8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the past, some teams at Uber have tried to start up all relevant services and datastores locally to run a suite of integration tests against the stack. At a certain point of microservice complexity, this becomes prohibitively expensive with the number of containers that need to be started.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d753f29b-5a9a-4f61-af4d-c3a635a21223&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;7f36bb85-8107-4187-ba3d-9881c08be1ab&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf9KSVI-vAb7Gf0KLqdb_7B3DOTMhE89WWH9o7VglNMENwOFTeI0q3X50RL5fJDbtuZpuCRf2GYs_ym2lUOOBvloQUZo1-9nhMpUegU6_8Cnpj6i4AKe4ZmKeLrQdri48LnGDYd62qPOliQQIjvMvAjhsc?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: How docker compose works early, but fails to scale as microservices proliferate.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;095de1ea-8523-42c8-bd69-17a43cc62c20&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;257d72e1-b4b4-43ac-bdad-2fadc1ad56cd&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-deploy-to-staging&#34;&gt;Deploy to staging&lt;/h3&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;91e2a781-2094-41b5-b7b7-344932e8c832&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXey0P730aPMXRawiFFbszQw5jL7kZ9myEItY4SRJimiNv3WY8DL3_urIYM1dEZnRFBLuK5r9VzY30i4T51tWmsId3ABiIU8monKCrRw8MbUEGn1M3lI1NasnuDEgT4Gdu3xKPr8qNFvEZF9cdTxw6wdryZR?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Once the limits of running docker-compose on a single machine was reached, some folks shifted towards deploying their code to a shared staging or testing environment to run their tests.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;61e10f68-9789-4954-8d02-911eb404ca47&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3d66f0ef-cbe8-4966-ab6a-b5a187e49c24&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At Uber, shared staging became too difficult to keep reliably usable for testing, because a single developer deploying a bad change could break the whole thing for everyone else. This approach only ever worked in small domains where developers could manually coordinate rollouts between a few teams.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7e9ff16d-e70a-41b1-921c-b3ad9689e72e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Could E2E tests really work well at Uber scale? This is the story of how we made it happen.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5f76510b-cd87-4aca-bd95-134a7ebc8e56&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b5336975-0b78-4197-a93c-ba032da6c5f9&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-shift-left-with-bits-uber-s-current-testing-strategy&#34;&gt;Shift Left with BITS – Uber’s Current Testing Strategy&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;74f1aaac-3b00-414b-8a24-dc94f94a4a68&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-we-use-bits-to-slice-production&#34;&gt;We use BITS to slice production&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f85e50c0-add8-4eec-91ac-026f1b11f2a3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In order to shift testing left, we need to enable the ability to test changes without first deploying to production. To solve this, we launched a company-wide initiative called BITS (Backend Integration Testing Strategy) that enables on-demand deployment and routing to test sandboxes. Practically, this means individual commits can be tested in parallel before landing, without interfering with anyone else!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;38e2cac0-fec1-411c-972e-524fe8cfa26e&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-data-isolation&#34;&gt;Data Isolation&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;636b9758-f5f7-4c0a-9855-cfc3daa13b96&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To shift testing left &lt;em&gt;safely&lt;/em&gt;, we need to provide isolation between production and testing traffic. At Uber, production services are expected to receive both testing and production traffic.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:4,&amp;quot;hash&amp;quot;:&amp;quot;d8af4eca-2aa0-4e3c-8371-48b346b688d1&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-user-context&#34;&gt;User Context&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1b667c80-6e13-4639-8743-f7901d13fe13&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Most APIs are entity-scoped, meaning that access is scoped to a particular entity (i.e. user account). Using test users automatically limits the scope of side effects to that account. A small handful of cross-entity interactions (think algorithmic matching or Eats shopping) use the below strategies for isolation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;730c828e-8874-4896-9217-c1e8b655e08c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2f32e9a4-8b9f-4684-83d2-de2fb031312e&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc4_IYf6vuKtd4HJwwIxr8CAF6ellhcG0l31y_U9LKAdae4L4n2w5hPQfYhkqElK14Ju0vFtJntOKaanMbJB_XjfdnWVz4HLprYHpJrl6eYpg7rsFhzrTl-zA4MO3DcudDw040vMpjxguYMFuhDABH7QSPD?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: At Uber, requests are tagged with “tenancy” identifiers and services typically follow one of the above approaches:&lt;br&gt;&lt;br&gt;1. Storage clients route testing traffic to a logically separated datastore&lt;br&gt;2. Data is saved to the prod DB with a tenancy column; range-based queries also pass a tenancy identifier for filtering&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;85240543-a5fe-487e-ad75-d1baeb28c51f&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;947eb176-c516-4588-bf21-016143034d96&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture&#34;&gt;Architecture&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1742e7ef-1881-4ef4-85ff-def75f742b3a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;BITS’ architecture can be expressed as a series of workflows that orchestrate between different infrastructure components to define a meaningful experience for the developer. We use &lt;a href=&#34;https://cadenceworkflow.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cadence&lt;/a&gt;, an open-source workflow engine developed at Uber that gives us a programming model for expressing retries, workflow state, and timers for teardown of resources.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e3f21a3a-6e24-4807-ba8b-2f6e898246b5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our CI workflows run test/service selection algorithms, build and deploy test sandboxes, schedule tests, analyze results, and report results. Our provisioning workflows control container resource utilization and scheduling of workloads across different CI queues optimized for particular workload types (i.e., high network usage vs. CPU usage).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;70b048e8-710b-4dd1-9262-ed822314be77&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1094419,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;7cb274ca-6bb7-45e5-9924-a194a593796d&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;720&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.40.34pm-17240661668495-1024x720.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1094419&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.40.34pm-17240661668495.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.40.34pm-17240661668495.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.40.34pm-17240661668495.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1342,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.40.34pm-17240661668495.jpeg 1342w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: BITS Architectural components.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a9cc7ac2-079d-4de3-86ec-5f85fdadddb9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a241fd68-2882-48b9-80ed-b168a49f1469&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;em&gt;*We’ve previously discussed &lt;/em&gt;&lt;a href=&#34;https://www.uber.com/blog/simplifying-developer-testing-through-slate/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;em&gt;SLATE&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, a sister project built on top of BITS infrastructure primitives for performing manual sanity testing. Check out SLATE if you haven’t already seen it!&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1e472560-e7b7-4a93-b573-14ebe06ca05f&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;45a20d03-2b91-4660-89f6-8a006a9565ea&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-infrastructure-isolation&#34;&gt;Infrastructure Isolation&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a52d2c8f-2218-4c65-8134-5cb8bb142efb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We’ve done a lot of work to properly isolate BITS’ development containers against production side effects.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4db52f9b-4cdd-4fcd-bb6a-a68ec292852b&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;BITS test sandboxes do not receive any production traffic.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The native Apache Kafka™ protocol at Uber is abstracted by a &lt;a href=&#34;https://www.uber.com/blog/kafka-async-queuing-with-consumer-proxy/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;consumer proxy&lt;/a&gt; that remaps messages into a push-based forwarding model over gRPC. This design allows for intelligent routing of messages to BITS test sandboxes and also prevents test sandboxes from inadvertently polling production topics.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;a href=&#34;https://cadenceworkflow.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cadence&lt;/a&gt; workflows created from testing are isolated to the test sandbox.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Metrics and logs are tagged with tenancy, so that they can be filtered out.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Test sandboxes do not participate in production leader election protocols.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;a href=&#34;https://spiffe.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SPIFFE&lt;/a&gt;™ and SPIRE™ provide strongly attested identities to BITS sandboxes and test traffic.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Uber’s forwarding proxy inspects requests and performs a conditional P2P redirect if routing overrides are detected.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d75482da-6daa-4a78-b3b9-27b6514f7dc2&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1094418,&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;a3cc17a4-9ea8-42d4-a520-5034134cb87d&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-image size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;729&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.47.57pm-17240659852082-1024x729.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1094418&#34; style=&#34;width:700px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.47.57pm-17240659852082.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.47.57pm-17240659852082.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.47.57pm-17240659852082.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1258,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.47.57pm-17240659852082.jpeg 1258w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: We encode routing override headers as &lt;a href=&#34;https://opentelemetry.io/docs/specs/otel/context/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;context baggage&lt;/a&gt; and implement the &lt;a href=&#34;https://opentelemetry.io/docs/concepts/context-propagation/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry&lt;/a&gt;™ protocol in our RPC and client middlewares to propagate them across microservices.&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b8ca4c29-d6dd-4f93-8ef6-8f3f48f26d24&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;eac7d5e9-9cc4-48ef-a524-92fe689b635a&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-testing-configuration-changes&#34;&gt;Testing Configuration Changes&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5607b51e-ab18-4579-8164-061998c8405e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At Uber, configuration changes cause up to 30% of incidents. BITS also provides test coverage for configuration rollouts made in our largest backend config management system, Flipr.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;71fcbd28-a8df-4632-864d-0b98f29cd335&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;04202126-8262-4131-bf35-869d370d2990&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc8eADv7yAOroZe27lp8FL7lRsrYpGcufvPWiNY1Ngd0Z97e-k3AcIKnW99DV1WNYHjoH6lOuLpOIpHavY_2K1KvGIwdmWTd_jN26rnpg61rMmnMr2sOEjpVOAPCqS1NqlUiQOgc93i_2yPfGCDMckxwNXU?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: How config changes are tested with BITS.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6f9ef36b-cb20-4e21-b504-1bc941ae06b2&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;ac229b21-9810-43c0-b1ea-93d0630bb4d8&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-test-management-nbsp&#34;&gt;Test Management&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;54f488b1-9782-46f5-8c10-a90ce66eea56&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Developers are able to manage their test suites in real time from our UI to perform actions like downtiming tests, tracking their health, and checking endpoint coverage of their services.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c1cf1be1-e5dd-46c3-a18b-1ff369368079&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;589cc3da-291f-4f2f-9659-f064d23222fe&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXep59SQBQHIFwY8l7DaCzku06cppMCajPYDYvk67_J3JZ0Y2sHzGPW4wJiN0ZvqrwzgwA3URuLZBslaRkIUYgzGFXldx6Jp14DYqWShlyczF8IYSP0ByzfGHQlSjUA7SdWqYusv3Qcr1_i010_v5ClkV4I?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8: How tests are managed in the BITS UI.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;22f4de0f-2a1e-4f24-a60d-2722096687a0&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;c21ee5a3-8ad1-4ca6-8c08-993f987b6d96&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-trace-indexing&#34;&gt;Trace Indexing&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ea3daa04-b072-4daa-80e9-774b5286cc53&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Every test execution is force-sampled with &lt;a href=&#34;https://www.jaegertracing.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jaeger&lt;/a&gt;™. After each test execution, we capture the “trace” and use it to build several indexes:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eb5dc6e6-f544-401f-9ab2-e89f124fc535&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;What services and endpoints were covered by the test flow&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;What tests cover each service and endpoint&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d939dc9a-a9e3-4326-a6bb-577448242f0c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;0ec9e7c5-7c50-40fd-bb6c-0a2e0d809bcc&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfVKWaAL76HFxPz5oprlOyP1T5-rXCFJERDvjFQDqPfjhVYYoPsYOXVrxSJVZrxaDyEqwWjPsTUkMGb-lWQuyFHo0cigzNJloYc-dwQKFgu1RlztuhJA4F2iIqSV31vVMN15fxwtIFl9qHo5QNeqDbQ_Vjv?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 9: How a trace index is used to configure tests.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;28cfd1e2-8b3d-45ff-ac37-b733ec07b5d2&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;09a92871-e759-4070-b9ff-37a8ef03c088&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;These indexes are used to surface endpoint coverage metrics for teams, but more importantly, they allow us to intelligently determine which tests need to run when a given service is changed.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;11a58c65-8200-4caf-9ff8-366dee828e8a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;a8f558cc-a774-48cd-b970-4c152ed9d619&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeqHr2XAFFuQ3xtGERXkDdsNaVjowZnO9BjafnAGDO7Ye53dp11xj4ok6Ni1WHv1XHnvifXYk-bhp8qcOWhI8rR7Cq5sPsQeajhAZqWsb_sHt6smqNT9EXsyOZCDXQqZ113GbCc_N9GWbz2iSstivSK0AA?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 10: How a trace index is used to show endpoint coverage.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2df04fc0-e46c-44ee-a69c-4a50d04543a9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bb910a2d-13ae-4401-af1e-3632f3a431a4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Getting the infrastructure right has always been the easier part of the problem of testing. Machine problems can be solved, but developers at Uber are very sensitive to degradations in productivity and experience. The below captures some of our strategies&amp;nbsp; around mitigating problems with test maintenance, reliability, and signal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f9d0c752-a97c-4afd-b8a3-1a6eb64a81df&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;28f47c91-671c-4474-9db4-d13353856079&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-challenges&#34;&gt;Challenges&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;07af9e2a-039a-4063-966e-f757426b67c5&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-challenge-1-maintenance-state-and-fixture-management-nbsp&#34;&gt;Challenge #1: Maintenance, state, and fixture management&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;97f85784-03c9-4791-b3da-45c0dffdd8f9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Let’s say that you want to test forward dispatch, where a driver gets a new pickup request before they complete their current dropoff. Or shared rides, where you may or may not pick up another rider on the way to your destination. How do you represent the state of the trip in each situation?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;294918d7-25bd-4072-bec4-29028d20b190&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Composable Testing Framework (CTF)&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5922cc80-300a-47b2-94d6-2b2df5350fb0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A foundational building block we built is CTF, a code-level DSL that provides a programming model for composing individual actions and flows and modeling their side effects on centralized trip state. CTF was originally developed to validate &lt;a href=&#34;https://www.uber.com/blog/fulfillment-platform-rearchitecture/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Uber’s Fulfillment Re-architecture&lt;/a&gt; and has since been adopted across the company.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;253174db-efda-4e7d-a349-13bb64756127&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;be6ab631-f10e-4daf-94ce-e0d37ee8a91f&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdCxyV6q-AlgPouJGGa5grzGxOJR2TBx_MUczQLU6RoG5lr9AweuxwMImv_by25m1s6fXM6pqSD4Xxm_U4E9-vhB0a8T6FjyTwfXqNya99x_hdHUVxTu56hXKg3gHUF3VtGtbORv2GvVhQ7jeLEHGamX4FH?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 11: How CTF is used to define a tripflow test.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;807e2e99-88c1-48a6-a522-a8ea0d719fcf&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;05e520af-cf3b-4a1e-82cc-a13cac421023&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Test Cataloging&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bd0ad6dd-1dae-453c-ab86-3748e3d9de34&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Every test case is automatically registered in our datastore on land. Analytics on historical pass rate, common failure reasons, and ownership information are all available to developers who can track the stability of their tests over time. Common failures are aggregated so that they can be investigated more easily.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d8a8caa3-c661-4fe1-9483-05ab3dfe5824&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;fc021a1b-6414-40ab-9e1d-23b249a85eb2&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdqzV5DoH2UNdp0z7yolyM_H3NIVjDEXFzGpGISKpctoomNlvM6rwNgVmrbjEMZhYn-1pI-0jvjHWl_9IWrbL-TnfHrI3TkEFWynUiSRhwNkhrfZRl5HQxAATxwDmwP6M89jEJJYwBqiLVs9JG9qK9KmA7l?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 12: How we aggregate common test failures.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;973e9745-df2e-492a-bd2a-cc5826da1649&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;abd938a3-7f3a-4912-aa1a-f04f1ca65219&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-challenge-2-reliability-and-speed&#34;&gt;Challenge #2: Reliability and Speed&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2f47d5dc-1907-447d-b9ce-8b18bf48cbba&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Test authors get their tests to pass at ≥90% per attempt (against main). Our platform then boosts this to 99.9% with retries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c2b59d3a-8ea9-4428-a89a-a5307c4fb1b1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our largest service has 300 tests. If tests individually pass at 90% per attempt, there is a 26% chance of one test failing due to non-determinism. In this case, we got the 300 tests to pass at 95% and with retries boost the signal up to ≥99%.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e616a807-9876-48a3-9406-37d5fc02f8c2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The above is repeated thousands of times a day, debunking the myth that E2E tests can’t be stable.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cbf9a770-2935-463b-8a03-ade15c0e87b7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Latency&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1761cb82-9bee-4206-a626-50dcbd5f185e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our tests directly hit Uber APIs, so the majority of them run in sub-minute time.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5a0e0707-5909-44df-95fe-83a2b3f9ef2e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8db1266d-4803-487f-8662-8f557e4438ee&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-challenge-3-debuggability-and-actionability&#34;&gt;Challenge #3: Debuggability and Actionability&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9f8bb2b4-779f-4fe5-8cf6-04952746528d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Placebo Executions&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5bb7e5c6-50d0-48eb-9e75-3d8b5ed51085&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;On every test run, we kick off a “placebo” parallel execution against a sandbox running the latest main branch version of code. The combination of these two executions allows us to move beyond a binary signal into a truth table:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1c4c613d-f308-4902-b0f4-e6b58d8da93c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;cd7aa9f9-ee22-4ed2-adb7-887a08a6c83f&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeI1SvhkXKn8DHNvc_rNVSsat2ns5BX04A9H5Ggz06VtLoguKHpHbWqEtbTBJ5Qvyu3GPi6qkVxUNtJJDCukLvd3X6UDUTpydkj0kLNAmkEdmqXWxrSDy1zwbzWSeYMKrqgUMSJYDN3Jlahk7zA9NUktpxd?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 13: Truth table computed by BITS’ placebo runs.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eb40926b-3afb-414a-a312-5ab5e1ec3427&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fb23a01e-85c2-47b2-b4e1-bd36a09639a2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With retries, non-determinism is rare. Either production or your test is broken, or you’ve introduced a real defect. No matter what, the developer has a clear action.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;abe7fe82-a720-437e-a194-62cab37175d5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Automated quarantining of tests&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;21050909-c1ce-49f1-bb0f-b83b0607165d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The pass rate of our tests follows a bimodal distribution–the vast majority of tests are very reliable. A small subset of tests are broken (consistently fail). An even smaller subset of tests pass non-deterministically.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;05df214a-6ac4-4fc9-b3d5-c52b41786239&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3c0eeb53-6a36-448d-b07e-54ceb4ad2916&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-image&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf0s6_csZZtSnrdiWAq3aO9wIU_Q1ecMJPvmHY-5yH_xfQq678xs1p8-nqizbfBvjS6rosj3Ruww6baqBgyufCxstEJq5QX9CMkauWRkjAnlk2M4Jjv5e5gblMWvNml38kVCE-WTpxLwjoDw5yoL-BpqF90?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 14: High level distribution of E2E test states at Uber.&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b8dc3458-5898-4b79-b7ee-16706cd3e1fd&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;21cbd40a-ae48-488c-8e48-f6da0bb33475&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A single broken test can block CI/CD, so we take special care to guard against this. Once a test drops below 90% placebo pass rate, it is automatically marked non-blocking and a ticket and alert are automatically filed against the owning team. Our core flow and compliance tests are explicitly opted out of this behavior, given their importance to the business.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;53676568-687c-4151-8175-e21105882995&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;730d0b1f-fb34-440b-a6b3-e0bda27156c1&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d82d918f-84d0-4974-b37a-12ed34d15fb7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At the end of the day, testing requires a balance between quality and velocity. When tuned well, developers spend less time rolling back deployments and mitigating incidents. Both velocity and quality go up. As part of our testing efforts, we tracked incidents per 1,000 diffs and we reduced this by &lt;strong&gt;71%&lt;/strong&gt; in 2023.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b487908f-9f60-4d9c-b8ac-57cc55c5b190&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Testing is a people problem as much as it is a technical problem&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;67896684-e419-4b34-b9be-15b11c4f7782&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Microservice architecture was born out of a desire to empower independent teams in a growing engineering organization. In a perfect world, we would have clean API abstractions everywhere to reinforce this model. Teams would be able to build AND test without impacting other teams. In reality, shipping most features at Uber requires heavy collaboration–E2E testing is a contract that enforces communication across independent teams, which inevitably breaks down because we’re human!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;06122135-5bd5-4889-9833-5f76325926e2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Testing and Architecture are intrinsically linked&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eb800d6c-a043-4017-8129-d26e6bd185e3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;No one at Uber intentionally planned for heavy reliance on E2E testing, but our microservice-heavy architecture and historical architectural investments in multi-tenancy paved the way to make this the best possible solution.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2c5cf973-f770-4964-b538-4ab87fb8c16a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Trying to fit our testing strategy to the classic “Testing Pyramid” didn’t work for us at Uber. Good testing requires you to think critically about what you’re actually trying to validate. You should try to test the smallest set of modules that serve some meaningful user functionality. At Uber, that just happens to often involve dozens of services.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1441c58b-cbb1-425b-ba33-38dfd85cfb95&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;604ebfbc-efed-4e1c-91e0-66412184cd29&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-acknowledgments&#34;&gt;Acknowledgments&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7fd539c4-6412-4b71-93d0-b6cad6753921&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We are thankful to a dozen+ teams who have collaborated with us to make testing a first-class citizen in Uber Infrastructure, as well as all the various leaders who believed in the BITS initiative.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;e144b5d0-eecf-4341-80c2-2015a1ab651c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Apache®, Apache Kafka, Kafka, and the star logo are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;4a0d50a5-12c9-4803-9801-7ec2d5f6325d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;SPIFFE, OpenTelemetry and its logo are registered trademarks of The Cloud Native Computing Foundation® in the United States and other countries. No endorsement by The Cloud Native Computing Foundation is implied by the use of these marks.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;b160df72-8817-4354-a1d8-037b2e5cceb9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Jaeger and its logo are registered trademarks of The Linux Foundation® in the United States and other countries. No endorsement by The Linux Foundation is implied by the use of these marks.&lt;/p&gt;】&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6085e52b-6b27-403c-9ed7-1351d6b7a62b&#34;,&#34;dropCap&#34;:false}&#34;&gt;几年以前，Uber 主要依靠增量部署和生产探测/警报来捕获回归。虽然这种方法是合理的，但它在运营上变得非常昂贵，而且我们也经历了许多泄漏。较晚检测到问题需要开发人员将确切的错误更改一分为二，然后再次返回整个过程。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9168d5ea-ebc8-414d-8cc2-86971c8e5a4a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;31898c14-1051-4014-8dd3-62376fe4f619&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXeTv9oVp0FRXBYsN2h_eWOk892eC4uTeBBIjL4V1G6pKG0cT1NuAR866VuKBy1sG8cka19zp7K18yp1FTURWHt8Wp7LIbEd_XB5YWrbJdRIwTtUG03clXcfVARtGveGAhpky yfhwu-j2_VRBCrADHWuJsrv?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 1:尽早发现问题（即向左移动检测）可减轻上述运营负担。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1955f830-2171-4e24-b02a-6c6f18790ec1&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;01abcd0b-a489-4cf1-a9db-fbcfb868bed3&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的许多停机事后分析表明，除了一些基本的单元测试之外，几乎没有进行任何测试，这些单元测试通常非常依赖于模拟，以至于很难理解它们实际上提供了多少保护。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;88c8df19-850c-4dcc-9e8b-d1e5112653f7&#34;,&#34;dropCap&#34;:false}&#34;&gt;Uber 很好- 以完全接受基于微服务的架构而闻名。我们的核心业务逻辑被封装在大量的微服务中，因此很难在不过度模拟的情况下验证单个服务中的功能。由于我们的架构，唯一明智的测试方法是执行端到端测试。与此同时，我们的内部 NPS 调查始终强调，端到端测试是开发人员工作中最困难的部分 - 毫不奇怪，它经常被跳过。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;62f880a5-433b-424e-8669-633d0264676e&#34;,&#34;dropCap&#34;:false}&#34;&gt;一个很好的-知道2015 年的测试博客，&lt;a href=&#34;https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Just Say No To More End-To-End Tests&lt;/a&gt;，指出 E2E 测试难以维护、编写成本高昂、不稳定、缓慢且难以调试。  Uber 的测试之旅遇到了上述所有问题，我们必须想出创造性的方法来解决这些问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;40045377-241c-446d-90b1-3d1eb720e570&#34;,&#34;dropCap&#34;:false}&#34;&gt;在此博客中中，我们描述了如何构建一个系统来控制我们核心后端系统（1,000 多个服务）的每个代码和配置更改。我们进行了数千次 E2E 测试，每次尝试的平均通过率为 90% 以上。想象一下每个测试都经过真实的 E2E 用户流程，就像经过 Uber Eats 优食团体订单一样。我们做这一切的速度足够快，可以在每个差异落地之前运行它。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;eed67a41-b10b-49c6-bb6f-c6d46f69dbbe&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c919c3a3-1716-4781-bd04-de8f7cd766d2&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-prior-approaches&#34;&gt;先前的方法&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;dbf51c90-1961-4ee2-b9e1-b126c0821ebf&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-docker-compose&#34;&gt;Docker 撰写&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;45728472-5529-407d-8b2e-c964387b79b8&#34;,&#34;dropCap&#34;:false}&#34;&gt;过去，Uber 的一些团队尝试在本地启动所有相关服务和数据存储，以针对堆栈运行一套集成测试。在微服务复杂性达到一定程度时，随着需要启动的容器数量的增加，这会变得极其昂贵。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d753f29b-5a9a-4f61-af4d-c3a635a21223&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;7f36bb85-8107-4187-ba3d-9881c08be1ab&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf9KSVI-vAb7Gf0KLqdb_7B3DOTMhE89WWH9o7VglNMENwOFTeI0q3X50RL5fJDbtuZpuCRf2GYs_ym2lUOOBvloQUZo1- 9nhMpUegU6_8Cnpj6i4AKe4ZmKeLrQdri48LnGDYd62qPOliQQIjvMvAjhsc?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; 推荐策略=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 2：docker compose 如何早期工作，但无法扩展为微服务增殖。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;095de1ea-8523-42c8-bd69-17a43cc62c20&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;257d72e1-b4b4-43ac-bdad-2fadc1ad56cd&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-deploy-to-staging&#34;&gt;部署到暂存&lt;/h3&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;91e2a781-2094-41b5-b7b7-344932e8c832&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXey0P730aPMXRawiFFbszQw5jL7kZ9myEItY4SRJimiNv3WY8DL3_urIYM1dEZnRFBLuK5r9VzY30i4T51tWmsId3ABiIU8monK CrRw8MbUEGn1M3lI1NasnuDEgT4Gdu3xKPr8qNFvEZF9cdTxw6wdryZR?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34;referrerpolicy=&#34;no- referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 3：一旦达到在单台计算机上运行 docker-compose 的限制，一些人就会转向将代码部署到共享的暂存或测试环境来运行他们的代码。测试。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;61e10f68-9789-4954-8d02-911eb404ca47&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3d66f0ef-cbe8-4966-ab6a-b5a187e49c24&#34;,&#34;dropCap&#34;:false}&#34;&gt;在 Uber，共享暂存变得太难，无法可靠地用于测试，因为部署错误更改的单个开发人员可能会破坏其他所有人的整个事情。这种方法只适用于小领域，开发人员可以手动协调几个团队之间的部署。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7e9ff16d-e70a-41b1-921c-b3ad9689e72e&#34;,&#34;dropCap&#34;:false}&#34;&gt;是否可以进行E2E测试在 Uber 规模上真的运作良好吗？这是我们如何实现这一目标的故事。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5f76510b-cd87-4aca-bd95-134a7ebc8e56&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b5336975-0b78-4197-a93c-ba032da6c5f9&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-shift-left-with-bits-uber-s-current-testing-strategy&#34;&gt;用 BITS 左移 – Uber 当前的测试策略&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;74f1aaac-3b00-414b-8a24-dc94f94a4a68&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-we-use-bits-to-slice-product&#34;&gt;我们使用 BITS 来切片生产&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p 数据可湿性粉剂块-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f85e50c0-add8-4eec-91ac-026f1b11f2a3&#34;,&#34;dropCap&#34;:false}&#34;&gt;为了将测试左移，我们需要无需先部署到生产环境即可测试更改。为了解决这个问题，我们启动了一项名为 BITS（后端集成测试策略）的全公司计划，该计划支持按需部署和路由来测试沙箱。实际上，这意味着可以在落地之前并行测试各个提交，而不会干扰其他任何人！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;38e2cac0-fec1-411c-972e-524fe8cfa26e&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-data-isolation&#34;&gt;数据隔离&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;636b9758-f5f7-4c0a-9855-cfc3daa13b96&#34;,&#34;dropCap&#34;:false}&#34;&gt;切换测试安全地离开，我们需要在生产和测试流量之间提供隔离。在 Uber，生产服务预计会同时接收测试流量和生产流量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:4,&#34;hash&#34;:&#34;d8af4eca-2aa0-4e3c-8371-48b346b688d1&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-user-context&#34;&gt;用户上下文&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1b667c80-6e13-4639-8743-f7901d13fe13&#34;,&#34;dropCap&#34;:false}&#34;&gt;大多数 API 都是实体范围，意味着访问范围仅限于特定实体（即用户帐户）。使用测试用户会自动限制该帐户的副作用范围。少数跨实体交互（例如算法匹配或 Eats 购物）使用以下策略进行隔离。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;730c828e-8874-4896-9217-c1e8b655e08c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2f32e9a4-8b9f-4684-83d2-de2fb031312e&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34; wp-block-image&#34;&gt;&lt;img 解码=&#34;异步&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc4_IYf6vuKtd4HJwwIxr8CAF6ellhcG0l31y_U9LKAdae4L4n2w5hPQfYhkqElK14Ju0vFtJntOKaanMbJB_XjfdnWVz 4HLprYHpJrl6eYpg7rsFhzrTl-zA4MO3DcudDw040vMpjxguYMFuhDABH7QSPD?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34;referrerpolicy=&#34;无引用者&#34; &gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 4：在 Uber，请求被标记为“租赁”标识符，服务通常遵循上述方法之一：&lt;br&gt;&lt;br&gt;1.存储客户端将测试流量路由到逻辑上独立的数据存储&lt;br&gt;2。数据通过租户列保存到产品数据库中；基于范围的查询还传递用于过滤的租赁标识符&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;85240543-a5fe-487e-ad75-d1baeb28c51f&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;947eb176-c516-4588-bf21-016143034d96&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-architecture&#34;&gt;架构&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1742e7ef-1881-4ef4-85ff-def75f742b3a&#34;,&#34;dropCap&#34;:false}&#34;&gt;BITS 的架构可以表示为一系列工作流程，这些工作流程在不同的基础架构组件之间进行编排，为开发人员定义有意义的体验。我们使用 &lt;a href=&#34;https://cadenceworkflow.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cadence&lt;/a&gt;，这是 Uber 开发的开源工作流引擎，为我们提供了一个编程模型表达重试、工作流状态和资源拆卸计时器。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e3f21a3a-6e24-4807-ba8b-2f6e898246b5&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的 CI 工作流程运行测试/服务选择算法、构建和部署测试沙箱、安排测试、分析结果并报告结果。我们的配置工作流程控制容器资源利用率以及针对特定工作负载类型（即高网络使用率与 CPU 使用率）优化的不同 CI 队列之间的工作负载调度。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;70b048e8-710b-4dd1-9262-ed822314be77&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1094419,&#34;sizeSlug&#34;:&#34;large&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心”，“散列”：“7cb274ca-6bb7-45e5-9924-a194a593796d”，“alt”：“”}“类=“aligncenter size-large”&gt;&lt;img加载=“惰性”解码=“异步”宽度= “1024”高度=“720”src=“https://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量= 80，onerror=重定向，format=auto/wp-content/uploads /2024/08/screenshot-2024-02-26-at-4.40.34pm-17240661668495-1024x720.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1094419&#34; srcset=&#34;https://blog.uber-cdn .com/cdn-cgi/image/width=1024，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.40.34pm-17240661668495 .jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/08/screenshot- 2024-02-26-at-4.40.34pm-17240661668495.jpeg 300w，https://blog.uber-cdn.com/cdn-cgi/image/width=768，quality=80，onerror=redirect，format=auto /wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.40.34pm-17240661668495.jpeg 768w，https://blog.uber-cdn.com/cdn-cgi/image/width= 1342，质量= 80，onerror =重定向，格式=自动/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.40.34pm-17240661668495.jpeg 1342w&#34;sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 5：BITS 架构组件。&lt;/figcaption&gt;&lt;/图&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a9cc7ac2-079d-4de3-86ec-5f85fdadddb9&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a241fd68-2882-48b9-80ed-b168a49f1469&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;em&gt; *我们之前讨论过&lt;a href=&#34;https://www.uber.com/blog/simplifying-developer-testing-through-slate/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt; &lt;em&gt;SLATE&lt;/em&gt;&lt;/a&gt;&lt;em&gt;，一个建立在 BITS 基础设施原语之上的姐妹项目，用于执行手动健全性测试。如果您还没有看过 SLATE，请查看它！&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1e472560-e7b7-4a93-b573-14ebe06ca05f&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;45a20d03-2b91-4660-89f6-8a006a9565ea&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-infrastruct-isolation&#34;&gt;基础设施隔离&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a52d2c8f-2218-4c65-8134-5cb8bb142efb&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们已经做了很多工作来正确隔离 BITS 的开发容器以防止生产副作用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4db52f9b-4cdd-4fcd-bb6a-a68ec292852b&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;BITS 测试沙箱不接收任何生产流量。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Uber 的原生 Apache Kafka™ 协议由 &lt;a href=&#34;https://www .uber.com/blog/kafka-async-queuing-with-consumer-proxy/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;消费者代理&lt;/a&gt;，通过 gRPC 将消息重新映射到基于推送的转发模型。这种设计允许将消息智能路由到 BITS 测试沙箱，还可以防止测试沙箱无意中轮询生产主题。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;a href=&#34;https://cadenceworkflow.io/&#34; target=&#34;_blank&#34; rel=&#34; noreferrer noopener&#34;&gt;Cadence&lt;/a&gt; 通过测试创建的工作流程被隔离到测试沙箱。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;指标和日志带有租户标记，以便可以将其过滤掉。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;测试沙箱不参与生产领导者选举协议。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;核心/列表项&#34; data-wp-block=&#34;[]&#34;&gt;&lt;a href=&#34;https://spiffe.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SPIFFE&lt;/a&gt;™ 和 SPIRE™为 BITS 沙箱和测试流量提供经过严格验证的身份。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Uber 的转发代理会检查请求，并在检测到路由覆盖时执行有条件的 P2P 重定向。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d75482da-6daa-4a78-b3b9-27b6514f7dc2&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1094418,&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;sizeSlug&#34;:&#34;大&#34;,&#34;linkDestination&#34;:&#34;无&#34;,&#34;哈希&#34;:&#34;a3cc17a4-9ea8-42d4-a520-5034134cb87d&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;wp-block-image size-large is-resized&#34; &gt;&lt;img 加载=“惰性”解码=“异步”宽度=“1024”高度=“729”src=“https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality= 80,onerror=重定向，格式=自动/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.47.57pm-17240659852082-1​​024x729.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image -1094418&#34; style=&#34;width:700px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto /wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.47.57pm-17240659852082.jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width= 300，质量= 80，onerror =重定向，格式=自动/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.47.57pm-17240659852082.jpeg 300w，https://blog.uber -cdn.com/cdn-cgi/image/width=768，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/08/screenshot-2024-02-26-at-4.47.57pm -17240659852082.jpeg 768w，https://blog.uber-cdn.com/cdn-cgi/image/width=1258，质量=80，onerror=重定向，格式=auto/wp-content/uploads/2024/08/截图-2024-02-26-at-4.47.57pm-17240659852082.jpeg 1258w“尺寸=”（最大宽度：1024px）100vw，1024px“referrerpolicy=“no-referrer”&gt; &lt;figcaption class =“wp-element- title&#34;&gt;图 6：我们将路由覆盖标头编码为 &lt;a href=&#34;https://opentelemetry.io/docs/specs/otel/context/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;上下文行李&lt;/ a&gt; 并在我们的 RPC 中实现 &lt;a href=&#34;https://opentelemetry.io/docs/concepts/context-propagation/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTelemetry&lt;/a&gt;™ 协议客户端中间件将它们传播到微服务。&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b8ca4c29-d6dd-4f93-8ef6-8f3f48f26d24&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;eac7d5e9-9cc4-48ef-a524-92fe689b635a&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-testing-configuration-changes&#34;&gt;测试配置更改&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5607b51e-ab18-4579-8164-061998c8405e&#34;,&#34;dropCap&#34;:false}&#34;&gt;在 Uber，配置更改导致高达 30% 的事件。 BITS 还为我们最大的后端配置管理系统 Flipr 中进行的配置部署提供测试覆盖率。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;71fcbd28-a8df-4632-864d-0b98f29cd335&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;04202126-8262-4131-bf35-869d370d2990&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc8eADv7yAOroZe27lp8FL7lRsrYpGcufvPWiNY1Ngd0Z97e-k3AcIKnW99DV1WNYHjoH6lOuLpOIpHavY_2K1KvGIwdm WTd_jN26rnpg61rMmnMr2sOEjpVOAPCqS1NqlUiQOgc93i_2yPfGCDMckxwNXU?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 7：如何使用 BITS 测试配置更改。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6f9ef36b-cb20-4e21-b504-1bc941ae06b2&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;ac229b21-9810-43c0-b1ea-93d0630bb4d8&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-test-management-nbsp&#34;&gt;测试管理&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;54f488b1-9782-46f5-8c10-a90ce66eea56&#34;,&#34;dropCap&#34;:false}&#34;&gt;开发者能够从我们的 UI 实时管理他们的测试套件，以执行停机测试、跟踪其运行状况以及检查其服务的端点覆盖率等操作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c1cf1be1-e5dd-46c3-a18b-1ff369368079&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;589cc3da-291f-4f2f-9659-f064d23222fe&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXep59SQBQHIFwY8l7DaCzku06cppMCajPYDYvk67_J3JZ0Y2sHzGPW4wJiN0ZvqrwzgwA3URuLZBslaRkIUYgzGFXldx6 Jp14DYqWShlyczF8IYSP0ByzfGHQlSjUA7SdWqYusv3Qcr1_i010_v5ClkV4I?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34;referrerpolicy=&#34;no- referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 8：如何在 BITS UI 中管理测试。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;核心/分隔符&#34; data-wp-block=&#34;{&amp;quot;hash&#34;:&#34;22f4de0f-2a1e-4f24-a60d-2722096687a0&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;c21ee5a3-8ad1-4ca6-8c08-993f987b6d96&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-trace-indexing&#34;&gt;跟踪索引&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ea3daa04-b072-4daa-80e9-774b5286cc53&#34;,&#34;dropCap&#34;:false}&#34;&gt;每次测试执行使用 &lt;a href=&#34;https://www.jaegertracing.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jaeger&lt;/a&gt;™ 进行强制采样。每次测试执行后，我们都会捕获“跟踪”并使用它来构建多个索引：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;eb5dc6e6-f544-401f-9ab2-e89f124fc535&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;测试流程涵盖了哪些服务和端点&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;哪些测试涵盖每个服务和端点&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d939dc9a-a9e3-4326-a6bb-577448242f0c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;0ec9e7c5-7c50-40fd-bb6c-0a2e0d809bcc&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXfVKWaAL76HFxPz5oprlOyP1T5-rXCFJERDvjFQDqPfjhVYYoPsYOXVrxSJVZrxaDyEqwWjPsTUkMGb-lWQuyFHo0cigzNJloYc-dwQKFgu1RlztuhJA4F2iIqSV31vVM N15fxwtIFl9qHo5QNeqDbQ_Vjv?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34; &gt;图 9：如何使用跟踪索引来配置测试。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;28cfd1e2-8b3d-45ff-ac37-b733ec07b5d2&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;09a92871-e759-4070-b9ff-37a8ef03c088&#34;,&#34;dropCap&#34;:false}&#34;&gt;这些索引是用于为团队提供端点覆盖率指标，但更重要的是，它们使我们能够智能地确定在给定服务发生更改时需要运行哪些测试。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;11a58c65-8200-4caf-9ff8-366dee828e8a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator”有-alpha-channel-opa城市&gt;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;a8f558cc-a774-48cd-b970-4c152ed9d619&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeqHr2XAFFuQ3xtGERXkDdsNaVjowZnO9BjafnAGDO7Ye53dp11xj4ok6Ni1WHv1XHnvifXYk-bhp8qcOWhI8rR7Cq5sPsQe ajhAZqWsb_sHt6smqNT9EXsyOZCDXQqZ113GbCc_N9GWbz2iSstivSK0AA?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 10：如何使用跟踪索引来显示端点覆盖范围。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2df04fc0-e46c-44ee-a69c-4a50d04543a9&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;bb910a2d-13ae-4401-af1e-3632f3a431a4&#34;,&#34;dropCap&#34;:false}&#34;&gt;获取基础架构正确一直是测试问题中比较容易的部分。机器问题是可以解决的，但 Uber 的开发人员对生产力和体验的下降非常敏感。下面介绍了我们关于缓解测试维护、可靠性和信号问题的一些策略。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f9d0c752-a97c-4afd-b8a3-1a6eb64a81df&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;28f47c91-671c-4474-9db4-d13353856079&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-challenges&#34;&gt;挑战&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;07af9e2a-039a-4063-966e-f757426b67c​​5&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-challenge-1-maintenance-state-and-fixture-management-nbsp&#34;&gt;挑战 1：维护、状态和装置管理&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;97f85784-03c9-4791-b3da-45c0dffdd8f9&#34;,&#34;dropCap&#34;:false}&#34;&gt;比方说您想要测试前向调度，即司机在完成当前的下车之前收到新的接载请求。或者拼车，您可能会也可能不会在前往目的地的途中接载其他乘客。您如何描述每种情况下的旅行状态？&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;294918d7-25bd-4072-bec4-29028d20b190&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;可组合测试框架（CTF）&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5922cc80-300a-47b2-94d6-2b2df5350fb0&#34;,&#34;dropCap&#34;:false}&#34;&gt;基础建筑我们构建的块是 CTF，一个代码级 DSL它提供了一个编程模型，用于组合单独的动作和流程，并对其对集中式行程状态的副作用进行建模。 CTF 最初开发是为了验证&lt;a href=&#34;https://www.uber.com/blog/fulfillment-platform-rearchitecture/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Uber 的履行重新架构&lt;/a &gt; 此后已在整个公司采用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;253174db-efda-4e7d-a349-13bb64756127&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;be6ab631-f10e-4daf-94ce-e0d37ee8a91f&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXdCxyV6q-AlgPouJGGa5grzGxOJR2TBx_MUczQLU6RoG5lr9AweuxwMImv_by25m1s6fXM6pqSD4Xxm_U4E9-vhB0a8T6FjyTwfXqNya99x_hdHUVxTu56hXKg3gHUF3VtG tbORv2GvVhQ7jeLEHGamX4FH?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图11：如何使用 CTF 定义 Tripflow 测试。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;807e2e99-88c1-48a6-a522-a8ea0d719fcf&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;05e520af-cf3b-4a1e-82cc-a13cac421023&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;测试编目&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;bd0ad6dd-1dae-453c-ab86-3748e3d9de34&#34;,&#34;dropCap&#34;:false}&#34;&gt;每个测试用例自动注册在我们的陆地数据存储中。对历史通过率、常见失败原因和所有权信息的分析都可供开发人员使用，他们可以跟踪测试随着时间的推移的稳定性。常见的故障被汇总起来，以便更容易地进行调查。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d8a8caa3-c661-4fe1-9483-05ab3dfe5824&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;fc021a1b-6414-40ab-9e1d-23b249a85eb2&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdqzV5DoH2UNdp0z7yolyM_H3NIVjDEXFzGpGISKpctoomNlvM6rwNgVmrbjEMZhYn-1pI-0jvjHWl_9IWrbL-TnfHr I3TkEFWynUiSRhwNkhrfZRl5HQxAATxwDmwP6M89jEJJYwBqiLVs9JG9qK9KmA7l?key=eqKHcO_p5nGzUiHHU0afvg&#34;alt=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 12：我们如何汇总常见的测试失败。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;973e9745-df2e-492a-bd2a-cc5826da1649&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;abd938a3-7f3a-4912-aa1a-f04f1ca65219&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-challenge-2-reliability-and-speed&#34;&gt;挑战#2：可靠性和速度&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2f47d5dc-1907-447d-b9ce-8b18bf48cbba&#34;,&#34;dropCap&#34;:false}&#34;&gt;测试作者得到他们的测试每次尝试的通过率≥90%（针对主要测试）。然后，我们的平台通过重试将其提高到 99.9%。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c2b59d3a-8ea9-4428-a89a-a5307c4fb1b1&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们最大的服务有300个测试。如果每次尝试单独测试的通过率为 90%，则一次测试由于不确定性而失败的可能性为 26%。在本例中，我们的 300 次测试通过率达到 95%，并且通过重试将信号提升至 ≥99%。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e616a807-9876-48a3-9406-37d5fc02f8c2&#34;,&#34;dropCap&#34;:false}&#34;&gt;以上是每天重复数千次，揭穿端到端测试不稳定的神话。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cbf9a770-2935-463b-8a03-ade15c0e87b7&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;延迟&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1761cb82-9bee-4206-a626-50dcbd5f185e&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们直接测试命中 Uber API，因此大多数都在不到一分钟的时间内运行。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5a0e0707-5909-44df-95fe-83a2b3f9ef2e&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8db1266d-4803-487f-8662-8f557e4438ee&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-challenge-3-debuggability-and-actionability&#34;&gt;挑战#3：可调试性和可操作性&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9f8bb2b4-779f-4fe5-8cf6-04952746528d&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;安慰剂执行&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5bb7e5c6-50d0-48eb-9e75-3d8b5ed51085&#34;,&#34;dropCap&#34;:false}&#34;&gt;每次测试运行时，我们针对运行最新主分支版本代码的沙箱启动“安慰剂”并行执行。这两个exe的组合切割使我们能够超越二进制信号进入真值表：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1c4c613d-f308-4902-b0f4-e6b58d8da93c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;cd7aa9f9-ee22-4ed2-adb7-887a08a6c83f&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeI1SvhkXKn8DHNvc_rNVSsat2ns5BX04A9H5Ggz06VtLoguKHpHbWqEtbTBJ5Qvyu3GPi6qkVxUNtJJDCukLvd3X6UDUTpyd kj0kLNAmkEdmqXWxrSDy1zwbzWSeYMKrqgUMSJYDN3Jlahk7zA9NUktpxd?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34;referrerpolicy=&#34;no- referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 13：由 BITS 安慰剂运行计算得出的真值表。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;eb40926b-3afb-414a-a312-5ab5e1ec3427&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fb23a01e-85c2-47b2-b4e1-bd36a09639a2&#34;,&#34;dropCap&#34;:false}&#34;&gt;重试后，非决定论很少见。要么生产或你的测试被破坏，要么你引入了真正的缺陷。不管怎样，开发者有明确的行动。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;abe7fe82-a720-437e-a194-62cab37175d5&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;自动隔离测试&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;21050909-c1ce-49f1-bb0f-b83b0607165d&#34;,&#34;dropCap&#34;:false}&#34;&gt;通过率我们的测试遵循双峰分布——绝大多数测试都非常可靠。一小部分测试被破坏（始终失败）。甚至更小的测试子集不确定地通过。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;05df214a-6ac4-4fc9-b3d5-c52b41786239&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3c0eeb53-6a36-448d-b07e-54ceb4ad2916&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34; wp-block-image&#34;&gt;&lt;img 解码=&#34;异步&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXf0s6_csZZtSnrdiWAq3aO9wIU_Q1ecMJPvmHY-5yH_xfQq678xs1p8-nqizbfBvjS6rosj3Ruww6baqBgyufCxstEJq5QX9 CMkauWRkjAnlk2M4Jjv5e5gblMWvNml38kVCE-WTpxLwjoDw5yoL-BpqF90?key=eqKHcO_p5nGzUiHHU0afvg&#34; alt=&#34;&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 14：Uber E2E 测试状态的高级分布。&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;核心/分隔符&#34; data-wp-block=&#34;{&#34;哈希&#34;:&amp;quot;b8dc3458-5898-4b79-b7ee-16706cd3e1fd&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;21cbd40a-ae48-488c-8e48-f6da0bb33475&#34;,&#34;dropCap&#34;:false}&#34;&gt;单破测试可以阻止 CI/CD，因此我们要特别注意防止这种情况。一旦测试的安慰剂通过率低于 90%，它就会自动标记为非阻塞，并且会自动向所属团队提交罚单和警报。鉴于其对业务的重要性，我们的核心流程和合规性测试明确选择不参与这种行为。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;53676568-687c-4151-8175-e21105882995&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;730d0b1f-fb34-440b-a6b3-e0bda27156c1&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-conclusion&#34;&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d82d918f-84d0-4974-b37a-12ed34d15fb7&#34;,&#34;dropCap&#34;:false}&#34;&gt;最后如今，测试需要在质量和速度之间取得平衡。如果调整得当，开发人员可以花更少的时间回滚部署和缓解事件。速度和质量都提高了。作为测试工作的一部分，我们跟踪了每 1,000 个差异的事件，并在 2023 年将这一数字减少了&lt;strong&gt;71%&lt;/strong&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b487908f-9f60-4d9c-b8ac-57cc55c5b190&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;测试既是技术问题，也是人员问题&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;67896684-e419-4b34-b9be-15b11c4f7782&#34;,&#34;dropCap&#34;:false}&#34;&gt;微服务架构诞生于在不断发展的工程组织中赋予独立团队权力的愿望。在完美的世界中，我们将在各处拥有干净的 API 抽象来强化这个模型。团队将能够在不影响其他团队的情况下构建和测试。事实上，Uber 的大部分功能都需要大量协作——E2E 测试是一份强制独立团队之间进行沟通的合同，但由于我们是人，所以不可避免地会出现问题！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;06122135-5bd5-4889-9833-5f76325926e2&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;测试和架构有着内在的联系&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;eb800d6c-a043-4017-8129-d26e6bd185e3&#34;,&#34;dropCap&#34;:false}&#34;&gt;没有人Uber 有意计划严重依赖 E2E 测试，但我们的微服务架构和历史架构投资多点enancy 为使其成为最佳解决方案铺平了道路。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2c5cf973-f770-4964-b538-4ab87fb8c16a&#34;,&#34;dropCap&#34;:false}&#34;&gt;尝试适应我们的经典“测试金字塔”测试策略对 Uber 来说并不适用。好的测试需要您批判性地思考您实际想要验证的内容。您应该尝试测试提供一些有意义的用户功能的最小模块集。在 Uber，这往往涉及数十项服务。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1441c58b-cbb1-425b-ba33-38dfd85cfb95&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;604ebfbc-efed-4e1c-91e0-66412184cd29&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-acknowledgments&#34;&gt;致谢&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7fd539c4-6412-4b71-93d0-b6cad6753921&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们很感激感谢与我们合作使测试成为 Uber 基础设施中的一等公民的十几个团队，以及所有相信 BITS 计划的领导者。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;e144b5d0-eecf-4341-80c2-2015a1ab651c&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;Apache®、Apache Kafka、Kafka 和星形徽标是 Apache Software Foundation 在美国和/或其他国家/地区的注册商标或商标。使用这些标记并不暗示 Apache 软件基金会的认可。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;4a0d50a5-12c9-4803-9801-7ec2d5f6325d&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;SPIFFE、OpenTelemetry 及其徽标是云原生计算基金会® 在美国和其他国家/地区的注册商标。使用这些标记并不暗示云原生计算基金会的认可。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;b160df72-8817-4354-a1d8-037b2e5cceb9&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;Jaeger 及其徽标是 Linux Foundation® 在美国和其他国家/地区的注册商标。使用这些标记并不暗示 Linux 基金会的认可。&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2024 07:08:44 +0000</pubDate>
    </item>
    <item>
      <title>【Lucene: Uber’s Search Platform Version Upgrade】Lucene：Uber搜索平台版本升级</title>
      <link>https://www.uber.com/blog/lucene-version-upgrade/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;7b0fdbd6-d187-4295-b2be-bf054ac3c21f&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;80803c6d-00c4-4f18-8fa1-484c8499126c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the dynamic ecosystem of Uber, search functionality serves as the backbone for numerous critical operations, ranging from matching riders to drivers, to geo search functionalities within Uber ride apps, to facilitating seamless exploration of restaurants and dishes in Uber Eats. The reliance on search is paramount, given the diverse and extensive nature of Uber’s service offerings.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;accf8af1-8567-44a3-a585-101b9b85af7b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The Search Platform team at Uber has built an in-house search engine on top of Apache Lucene, with the primary objective of establishing a unified search infrastructure across all business verticals. Since its inception in 2019, the service has operated on Lucene version 7.5.0, which is two major versions and nearly four years behind the latest iteration.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;01653461-e9e1-4e58-96a8-e1677cf0398e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Over the past four years, we’ve made significant strides in centralizing all search functions under one platform, catering to over 30 internal use cases. However, it’s clear that keeping up with the latest advancements is crucial. Lucene’s version 9+ introduces powerful semantic search capabilities through HNSW graphs, offering the potential for enhanced search accuracy and efficiency.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0d05c7e9-f2f6-4928-86d4-c52f002add9e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Last year, we made the decision to upgrade from version 7.5.0 to 9.4.2. Initially, we contemplated upgrading one major version at a time. However, after careful assessment of the required efforts and considering the significant demand from customers for semantic search support, it became evident that a direct leap to two major version upgrades was the most practical approach&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dba057bf-7cb7-4248-a33a-76ea45d5f840&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1095224,&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;65616227-b539-4444-8a64-a8ff70d7e46f&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;751&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-1-17253628492410-1024x751.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095224&#34; style=&#34;width:700px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-1-17253628492410.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-1-17253628492410.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-1-17253628492410.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1044,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-1-17253628492410.jpeg 1044w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Glimpse of Uber’s Search use-cases.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b1c25a8d-5f60-4a91-abbf-4448e973dfd2&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3df77cce-25fe-4a19-a714-edfea3d34633&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture-overview-of-search-platform&#34;&gt;Architecture Overview of Search Platform&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;29f57f4e-5a03-4b69-a924-657f60062fe7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The search platform at Uber is structured around a robust architecture that encompasses both the serving layer (read path) and the ingestion layer (write path), with additional components for offline processing.&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7a6d3ee5-e1f1-4885-9ad5-538cc6141771&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Serving Layer (Read Path):&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7620f059-b066-49a2-89aa-b3e6f43b9ac3&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The serving layer of the search platform is responsible for handling user queries and retrieving relevant information from the Lucene indices. This layer comprises two key components:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;76bb29d1-bdcc-416b-9736-2b6c7d6db3e2&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Routing Service:&lt;/strong&gt; The routing service acts as a gateway for incoming user queries, directing them to the appropriate search nodes for processing. It manages load balancing and ensures efficient distribution of query traffic across the search nodes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Search Service:&lt;/strong&gt; These nodes are responsible for executing user queries against the Lucene indices. They utilize Lucene’s powerful indexing and querying capabilities to retrieve relevant results in real time.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;97303e05-04f3-4252-a7d7-ccb1c4f46faa&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Ingestion Layer (Write Path):&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e35ed40c-73cc-4732-be37-70863716ca29&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The ingestion layer handles the process of updating the Lucene indices in response to changes in the underlying data. It consists of:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cf7298e1-7f44-424e-b5d5-a7f7fb875fd2&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Ingestion Service: &lt;/strong&gt;Apache Flink is utilized as the ingestion service, responsible for processing real-time updates and propagating them to the Lucene indices. It ensures that the search indices remain up-to-date with the latest changes in the data.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bc079a02-7dfa-4466-a4e8-558538ae2ddc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Offline Processing:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7d3a8447-2ec6-4b29-901e-0b9d6164b5cc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In addition to real-time updates, the search platform incorporates offline processing for building and rebuilding the Lucene indices. This offline component is facilitated by:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5f97730d-dec8-433a-8616-e1d9fb6108e8&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Offline Jobs:&lt;/strong&gt; Apache Spark jobs are employed for offline processing, enabling the bulk construction and reconstruction of Lucene indices. These jobs leverage Spark’s distributed computing capabilities to efficiently process large volumes of data and generate the necessary index structures.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;35a6c9a0-6574-4de3-ac8b-8421de7a990a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1095225,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;b259f758-fab9-426a-85f7-1d5e333e896d&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;854&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-2-17253630865571-1024x854.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095225&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-2-17253630865571.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-2-17253630865571.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-2-17253630865571.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1092,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-2-17253630865571.jpeg 1092w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Search Platform High Level Architecture.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b91828c4-fa77-4605-9fa0-0628feb4e568&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;bff6a349-5119-47aa-9f6a-87a799113bef&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-version-upgrade-considerations&#34;&gt;Version Upgrade Considerations&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ce0382e6-0f00-43d9-a654-be2d18599387&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the context of upgrading the Lucene version, all components of the search platform are involved, either directly or indirectly, due to their dependencies on Lucene libraries. Therefore, a comprehensive upgrade strategy must account for the interdependencies between these components and ensure seamless compatibility with the upgraded Lucene version.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;31f351a0-165a-4573-ac22-f95cd6b9f9e9&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-binary-and-index-compatibility&#34;&gt;Binary and Index Compatibility&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fd688a11-f1ce-4f22-b36a-852d7d586e17&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Lucene only guarantees compatibility one version ahead for both binary and index formats. This means that Lucene 7 indexes are incompatible with Lucene 9, and vice versa. Consequently, upgrading Lucene versions requires careful consideration and planning to ensure a seamless transition without data loss or corruption. This also necessitated that build/deploy and rollout systems ensured that incompatible code or index was not rolled out.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;27aa4241-0f0d-443d-9676-e2eafea32fae&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-dependent-software-stack-upgrade&#34;&gt;Dependent Software Stack Upgrade&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;49482c96-9ee7-469e-8cc8-85ec0141bb2b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Upgrading Lucene also necessitates upgrading other components in the software stack, such as Java, Spark, and Scala. Managing these dependencies and ensuring compatibility across the entire stack pose a significant challenge, particularly in a complex and interconnected environment like Uber’s search platform.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a907f6b3-94d9-4654-bedd-d64ec57eade6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Upgrading to Lucene 9 was a significant overhaul of our software ecosystem, requiring adjustments across various layers. This process began by raising the minimum supported Java version, as Lucene 9 uses the Java Module System introduced in Java 9. This Lucene 9 would not run on Java 8 and required us to move our services to Java 11. This transition to Java 11 required a concurrent upgrade of our Spark framework to Spark 3.0, as Spark 2 and Java 11 are not compatible. This upgrade also impacts our index-building processes, where Spark plays a crucial role. Furthermore, Spark 3 introduces dependencies on Scala version 2.12, mandating alignment with all associated dependencies and jars to maintain seamless interoperability.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;866840bf-bc7e-4690-b0dd-812853f21aee&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Similarly, on the live ingestion side we had Flink jobs earlier running on Java 8 and we upgraded the ingestion pipeline to run on Java 11 as well. Refer to Figure 3 for understanding the dependencies.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0b7fdc75-c859-4b62-a1dd-4635072d1dba&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We decoupled the upgrade in phases by first upgrading the Java, Scala, Spark, and Flink versions of offline and online services and then the actual Lucene library upgrade. This helped reduce the blast radius and limit scope to a defined changeset.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;47016864-0e81-4b83-8524-9752a7aad8da&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1095221,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;ba51594d-3cba-4126-a32c-3d12dcaaea0a&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;418&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-3.jpn-17253625332267-1024x418.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095221&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-3.jpn-17253625332267.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-3.jpn-17253625332267.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-3.jpn-17253625332267.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1514,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-3.jpn-17253625332267.jpeg 1514w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Software Stack upgrade.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2c2586d7-52e7-45bf-9dcb-1373b94c9fcc&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;657ca536-f68d-49a5-b234-72c9e9dddd86&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-upgrade-across-monorepo&#34;&gt;Upgrade Across Monorepo&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;93713a40-d42c-4902-b780-63895ff2a37e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber organizes all of its code in monorepo, consolidating all codebases for different languages into a single repository. While this approach offers benefits in terms of code sharing and version control, it introduces challenges in managing dependencies across diverse projects.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;67fa74fe-3360-4ffa-a2e6-b8a041fa3089&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For the Lucene version upgrade, our focus was to upgrade it across Java monorepo. Additionally, with the growing demand for vector similarity, fueled by the rise of large language models, we are actively developing semantic search capabilities. This development is taking place in a separate branch. It was crucial to maintain synchronization across all these changes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;16aaa582-7919-4534-9f89-e61b1972da07&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With monorepo, one of the major challenges is &lt;strong&gt;version control of different dependencies.&lt;/strong&gt; FA typical build pipeline for a micro-repo-based setup would look like the following:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;10adba6c-4c0e-4929-9f99-9af3b3ad968f&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;c94f80ad-d642-4169-bbcc-b076fd73e97d&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXci7CLq_UJzQxguZsBFnHb2RJEhXcfhL6F0kIRM-WPukUMzh1eIagw8yJnmu0wM3KlhIlGg5Q_5d7snBYV-Ztxu5000EoTWsX5fFot0M4rC504l-16ibonFB_TIZa8sKz22qFNnSF1ci8IEUJjHLxZwE_qS?key=gggaCILkb0uUY8sf6mieiw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Figure 4:&amp;nbsp; Micro-repo Development.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3a5d97ed-977c-4312-b460-ea589dc9a559&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2a8c9604-08cc-4e65-a3fb-7a72e91b2ee9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For example, as shown in Figure 4 for a typical micro-repo-based build pipeline, we can keep only the different dependencies as per need on a feature branch, and switch to using this branch in different build pipelines.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dc404e69-2c68-40b1-99a6-9964a6c806d0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Another peculiar characteristic of monorepo is that with large diffs, &lt;strong&gt;Git merge becomes untenable&lt;/strong&gt;. Hence, Uber’s monorepo uses Git rebase workflows for landing our diffs (code changes).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6a076152-4693-4133-96e5-f2245eec9e82&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To solve this, all the upgrade related code changes were kept in a &lt;strong&gt;branch&lt;/strong&gt;. We set up an auto-rebase pipeline. To ensure sanity of build after every rebase, we would run all the downstream builds and unit tests.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e394ce6a-f7ef-41c4-be9d-9f5078d9853c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;734e5588-c4fd-4d50-97be-148d3c2a1a97&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdbd35bgxRoTL7lCopy2fRlD0FgJF2ziJoPnMzkgdydCWzoKB-tNo_Yi1QE3RKQEITlut8rAyKgawg8r-A-TD3jdfDPNoTZZJ2g5Fi78_OTFdKhZxNr6edqxa4z3r4FFpv4H2rX6DxCF8P_n82mfLZ0Y81V?key=gggaCILkb0uUY8sf6mieiw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&amp;nbsp;Figure 5:&amp;nbsp; Mono-repo development.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cce978e6-8997-4b21-a3c8-3e3c0f480f5e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;b51a6744-9fd1-449b-8992-67f988d9f9fb&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-diverse-query-patterns&#34;&gt;Diverse Query Patterns&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;30f07f6b-a08f-4d97-be2f-446dca585b18&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We support numerous critical business flows, each with distinct query patterns and utilization of Lucene’s features. Ensuring performance and functional parity across different query types and use cases is paramount. The upgrade process must account for these variations to maintain the platform’s reliability and responsiveness.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8c679de8-6d02-4319-b472-93534d29467c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a12466f9-fee1-48f6-925c-85113e9803ee&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-the-upgrade-strategy&#34;&gt;The Upgrade Strategy&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;20808cf3-9a78-4ba7-b2f7-b00e37e705fb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We made extensive changes in a separate feature branch: the “Lucene 9 branch,” which affected over 400+ files in the monorepo. These changes weren’t compatible with the current codebase in the monorepo. As a result, we decided to implement a phased rollout strategy for the Lucene update.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f47965d7-4cd9-474b-bb0b-9ff312af206b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Since rolling out to 30+ use cases of different business criticality (external and internal) is a non-trivial and long-running effort, the branch had to be rebased with main to ensure it was regularly updated. The upgrade was done in a phased manner by first rolling it out to low-tier internal use cases and gradually moving up the tier. The entire upgrade took close to 6 months as it involved rigorous code reviews, validations, close collaborations with customer teams, and tiered rollout and branch merge.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;04721608-c374-4867-a348-d22678904967&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1095223,&amp;quot;width&amp;quot;:&amp;quot;701px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;12c139ce-46ae-44fe-8b74-832cc1c46697&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;573&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-6-17253627008257-1024x573.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095223&#34; style=&#34;width:701px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-6-17253627008257.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-6-17253627008257.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-6-17253627008257.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1486,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-6-17253627008257.jpeg 1486w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Branch Build Automation Pipeline.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4f6da58b-e80a-4579-9937-0ca64f5910bf&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;248402d8-14d8-4058-bbb0-a553bdd0459b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We built an automation around the branch maintenance pipeline, which handled both regular rebasing of the lucene 9 branch with the main branch and the feature branch sanity validation. Figure 6&amp;nbsp; shows the automated pipeline overview.&amp;nbsp; It consists of two crons:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;343f416d-0a9c-4e94-9b32-c82189b37c76&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Rebase Cron: This rebases Lucene 9 branch with the main branch and notifies developers through slack and email in case of any conflict encountered during rebasing.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;start&amp;quot;:2,&amp;quot;hash&amp;quot;:&amp;quot;98b04fe4-3ff2-4cd6-9703-b532c1202cb7&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34; start=&#34;2&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Deploy Cron : This cron periodically deploys the binary from the Lucene 9 branch (rebased with main) to Search nodes. It consists of the following sub-steps:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;ordered&amp;quot;:true,&amp;quot;hash&amp;quot;:&amp;quot;ef3dd543-26d9-4be1-9104-1303afd7d6d6&amp;quot;,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Creates binary from the rebased branch&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Identifies the instances that opted for continuous automated rollouts. (configured in our system)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Deploys the binary to the search service nodes that were subjected to production-shadowed traffic to validate branch sanity (functional correctness and performance regressions). More on it in the &lt;a href=&#34;https://docs.google.com/document/d/1GoBbiDq5QB_Oz9Jqyw18A5RrZoL1ako8tIt4M3B9xmo/edit#heading=h.gskth0kwsewl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;validation section&lt;/a&gt;.&lt;br&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0fb874ab-33b6-4bbd-8349-87e8e18f24e2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Doing this significantly reduced developer time and effort. Prior to this, it was a lot of grunt work with multiple manual and monotonous rebases and builds, which was becoming operation-heavy. From the time we started validating and rolling out the feature branch gradually to the use cases until we merged this branch with the main in production, this automation pipeline ran about 700 times, automatically pulling in new changes. Only ~10% of the time, a developer had to manually fix conflicts. Every time a conflict arose we promptly fixed it. By implementing this straightforward yet highly effective approach, we ensured the maintenance of critical branches throughout the Lucene migration process.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5d7c18f5-bde8-4b56-a922-55f8e574b30a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;20040ffa-a4d6-4f7c-8fdc-eebb62adb8f9&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-validation&#34;&gt;Validation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5f409beb-f677-4969-b549-6089ed00f3da&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In order to gain confidence with extensive changes done within the monorepo and to uncover any unknowns, we built a robust validation framework. Figure 7 illustrates the search validation framework. This framework is currently being utilized for many production releases, and is designed to be generic and extensible.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;44a0b46a-cfa4-4225-a844-afe10534b707&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1095226,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;630d3e3d-5524-4e5a-9e3a-15f29388360b&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;554&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-7-17253633715895-1024x554.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095226&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-7-17253633715895.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-7-17253633715895.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-7-17253633715895.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1379,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-7-17253633715895.jpeg 1379w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Search Validation Framework.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;57427c70-85b7-485a-a09d-ef6d3761fbb9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;13d4d9a8-e0bf-4ab7-a305-f7d54d33799d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Each client utilizing our search service has separate infra modules each for real-time updates, Lucene query processing, and request processing. Each of these modules run independently with different versions of code. As our changes touched all of these modules, hence the need for validating each module arose.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;13d4d9a8-e0bf-4ab7-a305-f7d54d33799d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;br&gt;We created a parallel setup for these infra modules each running Lucene 9 changes.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Read Flow Validation&lt;/strong&gt;: Routing service is the entry point of any search requests. It aggregates responses from all shards and returns to the client. This service sampled some of the read requests along with their responses, compressed them and pushed them to the queue, which were then consumed by the validator framework.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1124cede-15b2-4ce2-97af-667c3e216d09&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Validation framework consumed the sampled requests and utilized parallel setup with Lucene 9 changes running across modules and hit the same request to the Lucene 9 setup. Responses from both production and Lucene 9 setup were matched. Any mismatch found was published via metrics and was alerted to the team when threshold was breached.&lt;br&gt;&lt;br&gt;Robust metrics and alerts visibility to detect any discrepancies between the production environment and the Lucene 9 parallel setup significantly helped in a smooth Lucene migration process.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Write Flow Validation:&lt;/strong&gt; Similar to read validation, sampled real-time updates events for selected documents were validated against both the index versions for sanity.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a60837df-12db-4124-916a-cbacc5ffd7e6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In certain scenarios, real-time updates reflected in production documents while the same was being processed by the parallel Lucene 9 setup and vice versa, which led to discrepant results during the read validation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;174bc0b6-b1ad-46ed-80fc-d13af4bdc58a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To addreess such scenarios, we implemented a retry mechanism, taking in account the QPS for production. Response matching percentage of 95+% was enough to give us the confidence to move ahead with the rollout.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d4e5e735-a229-4c81-8e9b-c067a110c47b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e5b098f9-8d17-4bad-ac9c-dffeb6b36a93&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-rollout-via-blue-green-setup&#34;&gt;Rollout via Blue Green Setup&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;14f90cdb-fa55-4ef8-abf2-5ab45fb741eb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We got extra capacity temporarily to follow the standard blue-green setup and rollout. This ensured quick mitigation in case of any issue being encountered. Figure 8 demonstrated how a gradual percentage&amp;nbsp; rollout was done. We have our custom routing logic implemented at the routing service, which distributes the request across various instances.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;91d5a51e-0d74-45e0-a05b-541f73d95f5b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1095227,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;d0e08233-2afc-4436-8c84-21d627e2f756&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;629&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-8-17253635255376-1024x629.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095227&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-8-17253635255376.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-8-17253635255376.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-8-17253635255376.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1087,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-8-17253635255376.jpeg 1087w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8: Rollout via blue green setup.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8aeafcbf-e5c6-4dbc-804f-d987d986999b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;764836e1-eab4-4c7a-b440-7d805f010a22&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-performance-wins&#34;&gt;Performance Wins&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;613b3483-2681-488d-b018-9f2f762d4cb9&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-enhanced-efficiency-with-cpu-utilization-reduction&#34;&gt;Enhanced Efficiency With CPU Utilization Reduction&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4a3717ce-50c1-4365-999b-629366eb9337&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our search requests are primarily CPU-intensive, so achieving a reduction in CPU utilization marks a significant victory for us. This decrease not only signifies reduced infrastructure costs but also allowed us to scale down our clusters by decreasing the number of machines required for several customers.&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;19ed2d5b-1249-4f8c-8a0a-dae2c7ae4f01&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1095228,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;9bd41f0b-2dfb-437b-89af-098442967b03&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;351&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-9-17253636129653-1024x351.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095228&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-9-17253636129653.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-9-17253636129653.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-9-17253636129653.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1536,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-9-17253636129653.jpeg 1536w, https://blog.uber-cdn.com/cdn-cgi/image/width=1600,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-9-17253636129653.jpeg 1600w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 9: CPU utilization improvements post upgrade.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7042e3ec-980c-4744-ab4e-fb0f44d2e0f6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;ff8c8ef0-cc24-409b-87d8-8b2d5631d827&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-improved-latency&#34;&gt;Improved Latency&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d45559b6-3736-4bf1-afbe-911e3583ab62&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Search platform serves many critical, real-time business flows of Uber. Any reduction in search latency translates to faster response time for our users. Customers have experienced notable improvements in latency, with a maximum reduction of 30% at the 95th percentile.&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;17f9ee52-8069-43c2-8cfd-b066f8b08359&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;96e33891-6144-4eb5-a35f-62bdc9d64429&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXepNA1hVBiYFx0DE7zOXOPvTVQm8xHY_3J3Gy_ef9F7n7NaoiyXn56qEnaxHMQs_CdK4gm5Vj8Hk3c4iX46TGaAhPrmVxUNAaaY2Mkeg_3WZhxy8BUHm12fSQLEER_PX2UxfKi5u-VdgZzHyBWnxf2zb_sE?key=gggaCILkb0uUY8sf6mieiw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 10: Latency improvements post upgrade.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e39abab8-b5a3-4acb-8cef-f2451cfc9e29&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;072724b3-e596-4170-be93-8611c7390761&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-indexing-improvements&#34;&gt;Indexing Improvements&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8f989686-36a5-4b8a-bd38-914f172caa0f&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Additionally, about 10% reduction was observed in index sizes, alongside faster index build times.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1bcacc2c-d4c4-4621-b00f-840156360b31&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;d1f1f443-bfe9-453f-9ccf-a24a974a375c&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-key-learnings&#34;&gt;Key Learnings&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;a3f85f4f-27d9-4157-926b-b160e46fd10b&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-automation-and-validation-tooling&#34;&gt;Automation and Validation Tooling&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ddd016bb-c0e4-4d66-81c2-707dd82cf514&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This is an important investment for sustainable technology upgrade. Our search architecture is a complex distributed system using both batch and real-time data. Investing in tools and validation services that validate across different layers proved to be very useful when migrating &amp;gt;30 customers. This also helps in easier future migrations.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;bde4c2d5-1893-4b5b-9aea-6ce0bd75b287&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-regular-version-upgrades-nbsp&#34;&gt;Regular Version Upgrades&amp;nbsp;&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;193d3387-9cb2-476e-991a-942155a8b6a4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A significant hurdle during the upgrade was the incompatibility of indexes and binaries, stemming from the leap across two major versions. Regularly staying updated with the latest releases minimizes the operational effort required for deployment and validation. Additionally, this practice simplifies troubleshooting, as it reduces the volume of changes that need to be reviewed when an issue arises.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;05dfaa43-3a01-4622-95e5-37ef5ad54e90&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-active-passive-setup&#34;&gt;Active/Passive Setup&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e394ff70-a366-4a2e-bbba-6ea15ad2fe89&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Search architecture is complex and business-critical. There are several subcomponents, so active/passive setup is critical to allow fast rollout and immediate mitigation. For each customer upgrade, we kept a passive setup, running on the older versions in sync with production data. This allowed quick fallback to mitigate any issue that came in production queries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;8cf3de04-25bb-44e7-8773-a044ec51710b&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-tiered-rollout-and-coordination&#34;&gt;Tiered Rollout and Coordination&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;93f0916b-9899-4e75-9ab4-80f734a8fae0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Executing a tiered rollout strategy is crucial for validating the Lucene version upgrade while minimizing potential disruptions to critical business flows. We updated the customers in a staggered manner with higher tier (i.e., less business-critical) use cases upgraded first and then gradually rolling out to higher-tier use cases.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;124dc275-d6e3-4008-ab60-bbeffe925379&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Upgrading Uber’s search platform to Lucene 9.4.2 was a challenging but rewarding journey. The upgrade not only unlocked powerful new features like semantic search but also led to significant performance gains, including reduced CPU utilization and improved query latency.&lt;/p&gt;】&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;7b0fdbd6-d187-4295-b2be-bf054ac3c21f&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-introduction&#34;&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;80803c6d-00c4-4f18-8fa1-484c8499126c&#34;,&#34;dropCap&#34;:false}&#34;&gt;在动态中在 Uber 的生态系统中，搜索功能是许多关键操作的支柱，从匹配乘客到司机，到 Uber 乘车应用程序中的地理搜索功能，再到促进 Uber Eats 优食中餐厅和菜肴的无缝探索。鉴于 Uber 服务产品的多样性和广泛性，对搜索的依赖至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;accf8af1-8567-44a3-a585-101b9b85af7b&#34;,&#34;dropCap&#34;:false}&#34;&gt;搜索平台Uber 团队在 Apache Lucene 之上构建了一个内部搜索引擎，其主要目标是在所有业务垂直领域建立统一的搜索基础设施。自 2019 年推出以来，该服务一直在 Lucene 7.5.0 版本上运行，该版本是两个主要版本，并且比最新版本落后了近四年。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;01653461-e9e1-4e58-96a8-e1677cf0398e&#34;,&#34;dropCap&#34;:false}&#34;&gt;过去四年来，我们在将所有搜索功能集中在一个平台上方面取得了重大进展，可满足 30 多个内部用例。然而，很明显，跟上最新的进展至关重要。 Lucene 的 9+ 版本通过 HNSW 图引入了强大的语义搜索功能，提供了增强搜索准确性和效率的潜力。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0d05c7e9-f2f6-4928-86d4-c52f002add9e&#34;,&#34;dropCap&#34;:false}&#34;&gt;去年，我们决定从版本 7.5.0 升级到 9.4.2。最初，我们考虑一次升级一个主要版本。然而，在仔细评估所需的工作量并考虑客户对语义搜索支持的巨大需求后，很明显，直接跳跃到两个主要版本升级是最实用的方法&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dba057bf-7cb7-4248-a33a-76ea45d5f840&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1095224,&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;sizeSlug&#34;:&#34;大&#34;,&#34;linkDestination&#34;:&#34;无&#34;,&#34;align&#34;:&#34;中心&#34;,&#34;散列&#34;:&#34;65616227-b539-4444-8a64-a8ff70d7e46f&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter 大小-large is-resized&#34;&gt;&lt;img 加载=“lazy”解码=“async”宽度=“1024”高度=“751”src=“https://blog.uber-cdn.com/cdn-cgi/image/宽度=2160，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/figure-1-17253628492410-1024x751.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095224&#34; 样式=&#34;宽度：700px；高度：自动&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024，quality=80，onerror=redirect，format=auto/wp-content /uploads/2024/09/figure-1-17253628492410.jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror=redirect，format=auto/ wp-content/uploads/2024/09/figure-1-17253628492410.jpeg 300w，https://blog.uber-cdn.com/cdn-cgi/image/width=768，quality=80，onerror=redirect，格式=auto/wp-content/uploads/2024/09/figure-1-17253628492410.jpeg 768w，https://blog.uber-cdn.com/cdn-cgi/image/width=1044，quality=80，onerror=重定向，format=auto/wp-content/uploads/2024/09/figure-1-17253628492410.jpeg 1044w&#34;sizes=&#34;(最大宽度：1024px)100vw，1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption 类=&#34;wp-element-caption&#34;&gt;图 1：Uber 搜索用例一览。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b1c25a8d-5f60-4a91-abbf-4448e973dfd2&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3df77cce-25fe-4a19-a714-edfea3d34633&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-architecture-overview-of-search-platform&#34;&gt;搜索平台架构概述&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;29f57f4e-5a03-4b69-a924-657f60062fe7&#34;,&#34;dropCap&#34;:false}&#34;&gt;搜索平台Uber 的架构围绕一个强大的架构构建，该架构包含服务层（读取路径）和摄取层（写入路径），以及用于离线处理的附加组件。   &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7a6d3ee5-e1f1-4885-9ad5-538cc6141771&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;服务层（读取路径）：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7620f059-b066-49a2-89aa-b3e6f43b9ac3&#34;,&#34;dropCap&#34;:false}&#34;&gt;服务层搜索平台负责处理用户查询并从 Lucene 索引中检索相关信息。该层包含两个关键组件：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;76bb29d1-bdcc-416b-9736-2b6c7d6db3e2&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;路由服务&lt;/strong&gt;：路由服务充当传入用户查询的网关，将它们引导到适当的搜索节点进行处理。它管理负载平衡并确保高效t 跨搜索节点的查询流量分布。&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;搜索服务：&lt;/strong&gt;这些节点负责针对 Lucene 索引执行用户查询。他们利用 Lucene 强大的索引和查询功能来实时检索相关结果。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;97303e05-04f3-4252-a7d7-ccb1c4f46faa&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;摄取层（写入路径）：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e35ed40c-73cc-4732-be37-70863716ca29&#34;,&#34;dropCap&#34;:false}&#34;&gt;摄取层处理更新 Lucene 索引以响应基础数据变化的过程。它包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cf7298e1-7f44-424e-b5d5-a7f7fb875fd2&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Ingestion Service：&lt;/strong&gt;采用 Apache Flink 作为 Ingestion 服务，负责处理实时更新并将其传播到 Lucene 索引。它确保搜索索引与数据的最新变化保持同步。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;bc079a02-7dfa-4466-a4e8-558538ae2ddc&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;离线处理：&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7d3a8447-2ec6-4b29-901e-0b9d6164b5cc&#34;,&#34;dropCap&#34;:false}&#34;&gt;除了实时更新，搜索平台结合了离线处理来构建和重建 Lucene 索引。这个离线组件是通过以下方式实现的：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5f97730d-dec8-433a-8616-e1d9fb6108e8&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;离线作业：&lt;/strong&gt; Apache Spark 作业用于离线处理，支持批量处理Lucene索引的构建和重建。这些作业利用 Spark 的分布式计算功能来高效处理大量数据并生成必要的索引结构。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;35a6c9a0-6574-4de3-ac8b-8421de7a990a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1095225,&#34;sizeSlug&#34;:&#34;large&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心&#34;,&#34;哈希&#34;:&#34;b259f758-fab9-426a-85f7-1d5e333e896d&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img 加载=&#34;lazy&#34; 解码=&#34;async&#34; width=&#34;1024&#34; height=&#34;854&#34; src=&#34;https ://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量=80，onerror=重定向，format=auto/wp-content/uploads/2024/09/figure-2-17253630865571-1024x854 .jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095225&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,格式=auto/wp-content/uploads/2024/09/figure-2-17253630865571.jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror=重定向，format=auto/wp-content/uploads/2024/09/figure-2-17253630865571.jpeg 300w，https://blog.uber-cdn.com/cdn-cgi/image/width=768，quality=80 ，onerror=重定向，format=auto/wp-content/uploads/2024/09/figure-2-17253630865571.jpeg 768w，https://blog.uber-cdn.com/cdn-cgi/image/width=1092，质量= 80，onerror =重定向，格式=自动/ wp-content/uploads/2024/09/figure-2-17253630865571.jpeg 1092w“尺寸=”（最大宽度：1024px）100vw，1024px“referrerpolicy=”无- referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 2：搜索平台高级架构。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b91828c4-fa77-4605-9fa0-0628feb4e568&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;bff6a349-5119-47aa-9f6a-87a799113bef&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-version-upgrade-considerations&#34;&gt;版本升级注意事项&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ce0382e6-0f00-43d9-a654-be2d18599387&#34;,&#34;dropCap&#34;:false}&#34;&gt;在上下文中在升级Lucene版本的过程中，由于对Lucene库的依赖，直接或间接地涉及到搜索平台的所有组件。因此，全面的升级策略必须考虑这些组件之间的相互依赖关系，并确保与升级后的Lucene版本的无缝兼容。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;31f351a0-165a-4573-ac22-f95cd6b9f9e9&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-binary-and-index-compatibility&#34;&gt;二进制和索引兼容性&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fd688a11-f1ce-4f22-b36a-852d7d586e17&#34;,&#34;dropCap&#34;:false}&#34;&gt;Lucene 仅保证二进制和索引格式的兼容性提前一个版本。这意味着 Lucene 7 索引与 Lucene 9 不兼容，反之亦然。因此，升级 Lucene 版本需要仔细考虑和规划，以确保无缝过渡而不会丢失或损坏数据。这还需要构建/部署和部署系统确保不兼容的代码或索引不会被部署。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 数据可湿性粉剂块名称=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;27aa4241-0f0d-443d-9676-e2eafea32fae&#34;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h -dependent-software-stack-upgrade&#34;&gt;依赖软件堆栈升级&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;49482c96-9ee7-469e-8cc8-85ec0141bb2b&#34;,&#34;dropCap&#34;:false}&#34;&gt;同时升级 Lucene需要升级软件堆栈中的其他组件，例如 Java、Spark 和 Scala。管理这些依赖关系并确保整个堆栈的兼容性构成了重大挑战，特别是在像 Uber 搜索平台这样复杂且相互关联的环境中。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a907f6b3-94d9-4654-bedd-d64ec57eade6&#34;,&#34;dropCap&#34;:false}&#34;&gt;升级到 Lucene 9 是对我们软件生态系统的重大改革，需要跨各个层进行调整。此过程首先提高支持的最低 Java 版本，因为 Lucene 9 使用 Java 9 中引入的 Java 模块系统。此 Lucene 9 无法在 Java 8 上运行，需要我们将服务迁移到 Java 11。向 Java 11 的转换需要由于 Spark 2 和 Java 11 不兼容，我们的 Spark 框架同时升级到 Spark 3.0。此次升级还会影响我们的索引构建流程，其中 Spark 发挥着至关重要的作用。此外，Spark 3 引入了对 Scala 2.12 版的依赖项，要求与所有关联的依赖项和 jar 保持一致，以保持无缝的互操作性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;866840bf-bc7e-4690-b0dd-812853f21aee&#34;,&#34;dropCap&#34;:false}&#34;&gt;同样，在实时摄取方面，我们之前有 Flink 作业在 Java 8 上运行，并且我们升级了摄取管道以在 Java 11 上运行。请参阅图 3 了解依赖关系。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0b7fdc75-c859-4b62-a1dd-4635072d1dba&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们解耦了分阶段升级，首先升级离线和在线服务的Java、Scala、Spark、Flink版本，然后升级实际的Lucene库。这有助于减少爆炸半径并将范围限制在定义的变更集内。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;47016864-0e81-4b83-8524-9752a7aad8da&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1095221,&#34;sizeSlug&#34;:&#34;large&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心”，“散列”：“ba51594d-3cba-4126-a32c-3d12dcaaea0a”，“alt”：“”}“类=“aligncenter size-large”&gt;&lt;img加载=“惰性”解码=“异步”宽度= “1024”高度=“418”src=“htt”ps://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-3.jpn- 17253625332267-1024x418.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095221&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=重定向，format=auto/wp-content/uploads/2024/09/figure-3.jpn-17253625332267.jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，质量=80，onerror=重定向，format=auto/wp-content/uploads/2024/09/figure-3.jpn-17253625332267.jpeg 300w，https://blog.uber-cdn.com/cdn-cgi/image/宽度=768，质量=80，onerror=重定向，格式=auto/wp-content/uploads/2024/09/figure-3.jpn-17253625332267.jpeg 768w，https://blog.uber-cdn.com/cdn -cgi/image/width=1514，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/figure-3.jpn-17253625332267.jpeg 1514w“尺寸=”（最大宽度： 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 3：软件堆栈升级。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2c2586d7-52e7-45bf-9dcb-1373b94c​​9fcc&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;657ca536-f68d-49a5-b234-72c9e9dddd86&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-upgrade-across-monorepo&#34;&gt;跨 Monorepo 升级&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;93713a40-d42c-4902-b780-63895ff2a37e&#34;,&#34;dropCap&#34;:false}&#34;&gt;Uber 整理了所有内容monorepo 中的代码，将不同语言的所有代码库整合到一个存储库中。虽然这种方法在代码共享和版本控制方面提供了好处，但它在管理不同项目之间的依赖关系方面带来了挑战。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;67fa74fe-3360-4ffa-a2e6-b8a041fa3089&#34;,&#34;dropCap&#34;:false}&#34;&gt;对于 Lucene版本升级，我们的重点是跨 Java monorepo 进行升级。此外，随着大型语言模型的兴起，对向量相似性的需求不断增长，我们正在积极开发语义搜索功能。这项开发是在一个单独的分支机构进行的。在所有这些变化中保持同步至关重要。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;16aaa582-7919-4534-9f89-e61b1972da07&#34;,&#34;dropCap&#34;:false}&#34;&gt;使用 monorepo，主要挑战之一是&lt;strong&gt;不同依赖项的版本控制。&lt;/strong&gt;基于微存储库的设置的 FA 典型构建管道如下所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;10adba6c-4c0e-4929-9f99-9af3b3ad968f&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;c94f80ad-d642-4169-bbcc-b076fd73e97d&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXci7CLq_UJzQxguZsBFnHb2RJEhXcfhL6F0kIRM-WPukUMzh1eIagw8yJnmu0wM3KlhIlGg5Q_5d7snBYV-Ztxu500 0EoTWsX5fFot0M4rC504l-16ibonFB_TIZa8sKz22qFNnSF1ci8IEUJjHLxZwE_qS?key=gggaCILkb0uUY8sf6mieiw&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;    图 4：微型存储库开发。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3a5d97ed-977c-4312-b460-ea589dc9a559&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2a8c9604-08cc-4e65-a3fb-7a72e91b2ee9&#34;,&#34;dropCap&#34;:false}&#34;&gt;例如，如图 4 所示，对于典型的基于微存储库的构建管道，我们可以根据需要在功能分支上仅保留不同的依赖项，并切换到在不同的构建管道中使用此分支。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dc404e69-2c68-40b1-99a6-9964a6c806d0&#34;,&#34;dropCap&#34;:false}&#34;&gt;另一个特殊特征monorepo 的缺点是，如果差异较大，&lt;strong&gt;Git 合并就变得站不住脚&lt;/strong&gt;。因此，Uber 的 monorepo 使用 Git rebase 工作流程来实现差异（代码更改）。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6a076152-4693-4133-96e5-f2245eec9e82&#34;,&#34;dropCap&#34;:false}&#34;&gt;解决此问题，所有与升级相关的代码更改都保存在&lt;strong&gt;分支&lt;/strong&gt;中。我们建立了一个自动变基管道。为了确保每次变基后构建的完整性，我们将运行所有下游构建和单元测试。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e394ce6a-f7ef-41c4-be9d-9f5078d9853c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;734e5588-c4fd-4d50-97be-148d3c2a1a97&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdbd35bgxRoTL7lCopy2fRlD0FgJF2ziJoPnMzkgdydCWzoKB-tNo_Yi1QE3RKQEITlut8rAyKgawg8r-A-TD3jdfDPNoTZZJ2g 5Fi78_OTFdKhZxNr6edqxa4z3r4FFpv4H2rX6DxCF8P_n82mfLZ0Y81V?key=gggaCILkb0uUY8sf6mieiw&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt; 图 5：Mono 存储库开发。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cce978e6-8997-4b21-a3c8-3e3c0f480f5e&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;b51a6744-9fd1-449b-8992-67f988d9f9fb&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-diverse-query-patterns&#34;&gt;多样化的查询模式&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;30f07f6b-a08f-4d97-be2f-446dca585b18&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们支持众多关键业务流程，每个流程都有不同的查询模式和 Lucene 功能的利用。确保不同查询类型和用例之间的性能和功能奇偶校验至关重要。升级过程必须考虑这些变化，以维持平台的可靠性和响应能力。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8c679de8-6d02-4319-b472-93534d29467c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a12466f9-fee1-48f6-925c-85113e9803ee&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-the-upgrade-strategy&#34;&gt;升级策略&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;20808cf3-9a78-4ba7-b2f7-b00e37e705fb&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们做了广泛的单独功能分支中的更改：“Lucene 9 分支”，影响了 monorepo 中的 400 多个文件。这些更改与 monorepo 中的当前代码库不兼容。因此，我们决定对 Lucene 更新实施分阶段推出策略。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f47965d7-4cd9-474b-bb0b-9ff312af206b&#34;,&#34;dropCap&#34;:false}&#34;&gt;自推出以来30 多个不同业务关键性（外部和内部）的用例是一项不平凡且长期运行的工作，分支必须使用 main 进行重新调整，以确保定期更新。升级是分阶段完成的，首先将其推广到低层内部用例，然后逐渐向上移动。整个升级花费了近 6 个月的时间，因为它涉及严格的代码审查、验证、与客户团队的密切合作以及分层部署和分支合并。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;04721608-c374-4867-a348-d22678904967&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1095223,&#34;width&#34;:&#34;701px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;sizeSlug&#34;:&#34;大”，“linkDestination”：“无”，“对齐”：“中心”，“哈希”：“12c139ce-46ae-44fe-8b74-832cc1c46697&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;imgloading=&#34;lazy&#34;decoding=&#34;async&#34;width=&#34;1024&#34;height=&#34;573&#34;src=&#34; https://blog.uber-cdn.com/cdn-cgi/image/width=2160，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure-6-17253627008257- 1024x573.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095223&#34; style=&#34;width:701px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width =1024，质量=80，onerror=重定向，格式=auto/wp-content/uploads/2024/09/figure-6-17253627008257.jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/图像/宽度=300，质量=80，onerror=重定向，格式=auto/wp-content/uploads/2024/09/figure-6-17253627008257.jpeg 300w，https://blog.uber-cdn.com/cdn -cgi/image/width=768，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure-6-17253627008257.jpeg 768w，https://blog.uber-cdn。 com/cdn-cgi/image/width=1486，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/figure-6-17253627008257.jpeg 1486w“尺寸=”（最大宽度: 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 6：分支构建自动化管道。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4f6da58b-e80a-4579-9937-0ca64f5910bf&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;248402d8-14d8-4058-bbb0-a553bdd0459b&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们构建了一个围绕分支维护管道的自动化，它处理 lucene 9 分支与主分支的定期变基以及功能分支健全性验证。图 6 显示了自动化管道概览。  它由两个 cron 组成：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;ordered&#34;:true,&#34;hash&#34;:&#34;343f416d-0a9c-4e94-9b32-c82189b37c76&#34;,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Rebase Cron：这会将 Lucene 9 分支与主分支重新建立基础，并在出现以下情况时通过 slack 和电子邮件通知开发人员变基过程中遇到的任何冲突。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;ordered&#34;:true,&#34;start&#34;:2,&#34;hash&#34;:&#34;98b04fe4-3ff2-4cd6-9703-b532c1202cb7&#34; ,&#34;values&#34;:&#34;&#34;}&#34; class=&#34;wp-block-list&#34; start=&#34;2&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;部署 Cron ：此 cron 定期将二进制文件从 Lucene 9 分支（与主分支重新建立基础）部署到搜索节点。它由以下子步骤组成：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;ordered&#34;:true,&#34;hash&#34;:&#34;ef3dd543-26d9-4be1-9104-1303afd7d6d6&#34;,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;Cre从重新调整的分支中获取二进制文件&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;标识选择连续自动部署的实例。 （在我们的系统中配置）&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;将二进制文件部署到受到生产影子流量影响的搜索服务节点，以验证分支健全性（功能性）正确性和性能回归）。有关详细信息，请参阅&lt;a href=&#34;https://docs.google.com/document/d/1GoBbiDq5QB_Oz9Jqyw18A5RrZoL1ako8tIt4M3B9xmo/edit#heading=h.gskth0kwsewl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;验证部分&lt;/ a&gt;.&lt;br&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0fb874ab-33b6-4bbd-8349-87e8e18f24e2&#34;,&#34;dropCap&#34;:false}&#34;&gt;显着地执行此操作减少了开发人员的时间和精力。在此之前，需要进行大量繁琐的工作，包括多个手动且单调的变基和构建，这变得操作繁重。从我们开始验证功能分支并将其逐渐推出到用例，直到我们将该分支与生产中的主分支合并，这个自动化管道运行了大约 700 次，自动引入新的更改。只有约 10% 的情况下，开发人员必须手动修复冲突。每次出现冲突我们都会及时解决。通过实施这种简单而高效的方法，我们确保了整个 Lucene 迁移过程中关键分支的维护。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5d7c18f5-bde8-4b56-a922-55f8e574b30a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;20040ffa-a4d6-4f7c-8fdc-eebb62adb8f9&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-validation&#34;&gt;验证&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5f409beb-f677-4969-b549-6089ed00f3da&#34;,&#34;dropCap&#34;:false}&#34;&gt;为了为了通过在 monorepo 中进行的大量更改获得信心并发现任何未知因素，我们构建了一个强大的验证框架。图 7 说明了搜索验证框架。该框架目前被用于许多生产版本，并且被设计为通用和可扩展的。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;44a0b46a-cfa4-4225-a844-afe10534b707&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1095226,&#34;sizeSlug&#34;:&#34;large&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心&#34;,&#34;哈希&#34;:&#34;630d3e3d-5524-4e5a-9e3a-15f29388360b&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter size-large&#34;&gt;&lt;img 加载=“惰性”解码=“异步”宽度=“1024”高度=“554”src=“https://blog.uber-cdn.com/cdn-cgi/image/width =2160，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/figure-7-17253633715895-1024x554.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095226&#34; srcset= “https://blog.uber-cdn.com/cdn-cgi/image/width=1024，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure-7-17253633715895 .jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure- 7-17253633715895.jpeg 300w，https://blog.uber-cdn.com/cdn-cgi/image/width=768，质量=80，onerror=重定向，format=auto/wp-content/uploads/2024/09 /figure-7-17253633715895.jpeg 768w，https://blog.uber-cdn.com/cdn-cgi/image/width=1379，quality=80，onerror=redirect，format=auto/wp-content/uploads/ 2024/09/figure-7-17253633715895.jpeg 1379w&#34;sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 7:搜索验证框架。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;57427c70-85b7-485a-a09d-ef6d3761fbb9&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;13d4d9a8-e0bf-4ab7-a305-f7d54d33799d&#34;,&#34;dropCap&#34;:false}&#34;&gt;每个客户端使用我们的搜索服务有单独的基础设施模块，每个模块都用于实时更新、Lucene 查询处理和请求处理。这些模块中的每一个都使用不同版本的代码独立运行。由于我们的更改涉及所有这些模块，因此需要验证每个模块。  &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;13d4d9a8-e0bf-4ab7-a305-f7d54d33799d&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;br&gt;我们为这些基础模块创建了一个并行设置，每个模块都运行 Lucene 9 更改。&lt;br&gt;&lt;br&gt;&lt;strong&gt;读取流验证&lt;/strong&gt;：路由服务是任何搜索请求的入口点。它聚合来自所有分片的响应并返回给客户端。该服务对一些读取请求及其响应进行采样，压缩它们并将它们推送到队列，然后由验证器框架使用。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1124cede-15b2-4ce2-97af-667c3e216d09&#34;,&#34;dropCap&#34;:false}&#34;&gt;使用的验证框架采样的请求并利用 Lucene 9 的并行设置更改跨模块运行，并对 Lucene 9 设置发出相同的请求。生产和 Lucene 9 设置的响应是匹配的。发现的任何不匹配都会通过指标发布，并在违反阈值时向团队发出警报。&lt;br&gt;&lt;br&gt;强大的指标和警报可见性，可检测生产环境与 Lucene 9 并行设置之间的任何差异对顺利的 Lucene 迁移过程有很大帮​​助。&lt;br&gt;&lt;br&gt;&lt;strong&gt;写入流验证：&lt;/strong&gt;与读取验证类似，针对选定文档的采样实时更新事件根据两个索引版本进行验证，以确保完整性。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a60837df-12db-4124-916a-cbacc5ffd7e6&#34;,&#34;dropCap&#34;:false}&#34;&gt;在某些情况下，实时更新反映在生产文档中，而并行 Lucene 9 设置正在处理相同的内容，反之亦然，这导致在读取验证期间出现不一致的结果。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;174bc0b6-b1ad-46ed-80fc-d13af4bdc58a&#34;,&#34;dropCap&#34;:false}&#34;&gt;要解决这样的问题场景中，我们实现了重试机制，同时考虑到生产的 QPS。 95% 以上的响应匹配率足以让我们有信心继续推出。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d4e5e735-a229-4c81-8e9b-c067a110c47b&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e5b098f9-8d17-4bad-ac9c-dffeb6b36a93&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-rollout-via-blue-green-setup&#34;&gt;通过蓝绿设置推出&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;14f90cdb-fa55-4ef8-abf2-5ab45fb741eb&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们有额外的容量暂时遵循标准蓝绿设置和部署。这确保了遇到任何问题时都能快速缓解。图 8 展示了如何逐步实施百分比部署。我们在路由服务中实现了自定义路由逻辑，该逻辑将请求分发到各个实例。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;91d5a51e-0d74-45e0-a05b-541f73d95f5b&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1095227,&#34;sizeSlug&#34;:&#34;large&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心”，“散列”：“d0e08233-2afc-4436-8c84-21d627e2f756”，“alt”：“”}“类=“aligncenter size-large”&gt;&lt;img加载=“惰性”解码=“异步”宽度= “1024”高度=“629”src=“https://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量= 80，onerror=重定向，format=auto/wp-content/uploads /2024/09/figure-8-17253635255376-1024x629.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095227&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width =1024，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/figure-8-17253635255376.jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure-8-17253635255376.jpeg 300w，https:// /blog.uber-cdn.com/cdn-cgi/image/width=768，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/figure-8-17253635255376.jpeg 768w， https://blog.uber-cdn.com/cdn-cgi/image/width=1087，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure-8-17253635255376。 jpeg 1087w&#34;sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 8：通过蓝绿色设置推出。&lt;/figcaption&gt; &lt;/图&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8aeafcbf-e5c6-4dbc-804f-d987d986999b&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;764836e1-eab4-4c7a-b440-7d805f010a22&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-performance-wins&#34;&gt;性能获胜&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;613b3483-2681-488d-b018-9f2f762d4cb9&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-enhanced-efficiency-with-cpu-utilization-reduction&#34;&gt;通过降低 CPU 利用率提高效率&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4a3717ce-50c1-4365-999b-629366eb9337&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的搜索请求主要是 CPU 密集型，因此降低 CPU 利用率标志着我们的重大胜利。这种减少不仅意味着基础设施成本的降低，还使我们能够通过减少多个客户所需的机器数量来缩小集群规模。&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;19ed2d5b-1249-4f8c-8a0a-dae2c7ae4f01&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1095228,&#34;sizeSlug&#34;:&#34;large&#34;,&#34;linkDestination&#34;:&#34;none&#34;,&#34;align&#34;:&#34;中心”，“散列”：“9bd41f0b-2dfb-437b-89af-098442967b03”，“alt”：“”}“class =“aligncenter size-large”&gt;&lt;img加载=“惰性”解码=“异步”宽度= “1024”高度=“351”src=“https://blog.uber-cdn.com/cdn-cgi/image/width=2160，质量= 80，onerror=重定向，format=auto/wp-content/uploads /2024/09/figure-9-17253636129653-1024x351.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1095228&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width =1024，质量=80，onerror=重定向，格式=auto/wp-content/uploads/2024/09/figure-9-17253636129653.jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/图像/宽度=300，质量=80，onerror=重定向，格式=auto/wp-content/uploads/2024/09/figure-9-17253636129653.jpeg 300w，https://blog.uber-cdn.com/cdn -cgi/image/width=768，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure-9-17253636129653.jpeg 768w，https://blog.uber-cdn.com /cdn-cgi/image/width=1536，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure-9-17253636129653.jpeg 1536w，https://blog.uber- cdn.com/cdn-cgi/image/width=1600，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure-9-17253636129653.jpeg 1600w“尺寸=”（最大-width: 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 9：升级后 CPU 利用率改进。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7042e3ec-980c-4744-ab4e-fb0f44d2e0f6&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;ff8c8ef0-cc24-409b-87d8-8b2d5631d827&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-improved-latency&#34;&gt;改善延迟&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d45559b6-3736-4bf1-afbe-911e3583ab62&#34;,&#34;dropCap&#34;:false}&#34;&gt;搜索平台服务Uber 的许多关键的实时业务流程。搜索延迟的任何减少都会为我们的用户带来更快的响应时间。客户体验到延迟显着改善，在第 95 个百分位时最大降低了 30%。&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;17f9ee52-8069-43c2-8cfd-b066f8b08359&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;96e33891-6144-4eb5-a35f-62bdc9d64429&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXepNA1hVBiYFx0DE7zOXOPvTVQm8xHY_3J3Gy_ef9F7n7NaoiyXn56qEnaxHMQs_CdK4gm5Vj8Hk3c4iX46TGaAhPrmVx UNAaaY2Mkeg_3WZhxy8BUHm12fSQLEER_PX2UxfKi5u-VdgZzHyBWnxf2zb_sE?key=gggaCILkb0uUY8sf6mieiw&#34; alt=&#34;&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 10：升级后的延迟改进。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e39abab8-b5a3-4acb-8cef-f2451cfc9e29&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;072724b3-e596-4170-be93-8611c7390761&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-indexing-improvements&#34;&gt;索引改进&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8f989686-36a5-4b8a-bd38-914f172caa0f&#34;,&#34;dropCap&#34;:false}&#34;&gt;此外，关于10% 红色观察到索引大小的减少，以及更快的索引构建时间。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1bcacc2c-d4c4-4621-b00f-840156360b31&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;d1f1f443-bfe9-453f-9ccf-a24a974a375c&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-key-learnings&#34;&gt;主要学习内容&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;a3f85f4f-27d9-4157-926b-b160e46fd10b&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-automation-and-validation-tooling&#34;&gt;自动化和验证工具&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ddd016bb-c0e4-4d66-81c2-707dd82cf514&#34;,&#34;dropCap&#34;:false}&#34;&gt;这是一个可持续技术升级的重要投资。我们的搜索架构是一个使用批量和实时数据的复杂分布式系统。事实证明，在迁移超过 30 个客户时，投资跨不同层进行验证的工具和验证服务非常有用。这也有助于将来更轻松地迁移。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;bde4c2d5-1893-4b5b-9aea-6ce0bd75b287&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-regular-version-upgrades-nbsp&#34;&gt;常规版本升级&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;193d3387-9cb2-476e-991a-942155a8b6a4&#34;,&#34;dropCap&#34;:false}&#34;&gt;一个重大障碍在升级过程中，由于跨越两个主要版本，导致索引和二进制文件不兼容。定期保持最新版本的更新可以最大限度地减少部署和验证所需的操作工作量。此外，这种做法还简化了故障排除，因为它减少了出现问题时需要检查的更改量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;05dfaa43-3a01-4622-95e5-37ef5ad54e90&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-active-passive-setup&#34;&gt;主动/被动设置&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e394ff70-a366-4a2e-bbba-6ea15ad2fe89&#34;,&#34;dropCap&#34;:false}&#34;&gt;搜索架构为复杂且对业务至关重要。有多个子组件，因此主动/被动设置对于快速部署和立即缓解至关重要。对于每次客户升级，我们都保持被动设置，在旧版本上运行与生产数据同步。这允许快速回退以缓解生产查询中出现的任何问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;8cf3de04-25bb-44e7-8773-a044ec51710b&#34;}&#34; class=&#34;wp -块标题&#34; id=&#34;h-tiered-rollout-and-coordination&#34;&gt;分层部署和协调&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;93f0916b-9899-4e75-9ab4-80f734a8fae0&#34;,&#34;dropCap&#34;:false}&#34;&gt;执行分层推出策略对于验证 Lucene 版本升级同时最大限度地减少对关键业务流程的潜在干扰至关重要。我们以交错的方式更新客户，首先升级较高层（即业务关键性较低）的用例，然后逐步推广到较高层的用例。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;124dc275-d6e3-4008-ab60-bbeffe925379&#34;,&#34;dropCap&#34;:false}&#34;&gt;升级 Uber 的搜索从平台升级到 Lucene 9.4.2 是一次充满挑战但收获颇丰的旅程。此次升级不仅解锁了语义搜索等强大的新功能，还带来了显着的性能提升，包括降低了 CPU 利用率并改善了查询延迟。&lt;/p&gt;</description>
      <pubDate>Thu, 05 Sep 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【Making Uber’s ExperimentEvaluation Engine 100x Faster】让 Uber 的实验评估引擎速度提高 100 倍</title>
      <link>https://www.uber.com/blog/making-ubers-experiment-evaluation-engine-100x-faster/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;d64b6745-f796-4cb8-872e-6ae0157f15d7&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f3c10d4f-01d7-4aec-9f1f-7b770ab21fc8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This blog post describes how we made efficiency improvements to Uber’s Experimentation platform to reduce the latencies of experiment evaluations by a factor of 100x (milliseconds to microseconds). We accomplished this by going from a remote evaluation architecture (client to server RPC requests) to a local evaluation architecture (client-side computation). Some of the terminology in this blog post (e.g., parameters, experiments, etc.) is referenced from our previous blog post on Uber Experimentation. To learn more, check out &lt;a href=&#34;https://www.uber.com/blog/supercharging-a-b-testing-at-uber/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Supercharging A/B Testing at Uber&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ac4c1504-882c-4649-933c-fa6b5b8b1afc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Experimentation is used heavily throughout Uber’s backend microservices, mobile apps, and web surfaces to measure improvements of product launches across all business units–Delivery, Mobility, Freight, Uber For Business (U4B), etc. We will cover the current and new architecture of the system as well as technical challenges, and learnings. This blog post specifically focuses on latency improvements to &lt;strong&gt;backend&lt;/strong&gt; Golang microservices rather than mobile or web-based experimentation. We are also focusing on A/B tests rather than other experimentation designs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8db03731-b49f-4b16-b029-f3c0c476f829&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;50bc6c10-54b3-4842-8202-209b25f285cc&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-background&#34;&gt;Background&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a5e74f0b-28b2-41cf-bfc3-8d915ee23d65&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In 2020, Uber began a long journey to rewrite the A/B testing platform (internally referred to as Project Citrus). One of the key architectural decisions for this new system was to unify Uber’s existing backend configuration platform, &lt;a href=&#34;https://www.uber.com/blog/flipr/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Flipr&lt;/a&gt;, with the Experimentation platform. We built Experimentation to exist as a temporary override layer on top of Flipr configurations (also referred to as parameters)&lt;strong&gt; &lt;/strong&gt;in order to perform randomization, conduct causal inference, and help teams determine the best performing value to use for their parameters.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fc14f607-ac7b-4402-aaab-d17095a1697e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Below is an example to illustrate the difference between a parameter and an experiment. Here we have a &lt;strong&gt;parameter&lt;/strong&gt;, which controls the button color of a specific screen in the Rider app. The default value is red, but in some situations (e.g., if the user is in &lt;em&gt;city_id = 1&lt;/em&gt;) the value would be blue for &lt;em&gt;all users&lt;/em&gt; in that city.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b2b71d62-7a60-47d0-b089-cf5005aac389&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;7707510c-e913-4343-9940-4277b2619ab0&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcCn3OE-lw_syq4RP3ju2DpQ0D1xl16leZdP_eDI5i8anem_mVIFYBvXrlIXwFhe_3-0eUrXFomadWp52ObiNyxP9uzsxIDoFFz-z4Yn7xmlpVZ6YXqP5YQPCamrzUemoEyFfU13XDYaM3CFDtSgpCIsMab?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Parameter representation.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;96551fce-9bac-46a9-a7f6-1a31edb0ca3b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e083eb58-1309-410f-a1e2-66e77997f412&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;These parameter rules engines are evaluated using a Flipr client:&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;2c2f8923-a7ad-47b7-8f66-cb3d159a6e78&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcc7pse1Iyq0IKcOY4i8gl6_jnxlu6rD8oWL_i9wXvyYplJtZdR8whcpSTMiaOv-R5iGp_5cxF3olsqFcCKZ7YRaWqr0rMSef2R2WTq9NRWgl9fU-ukIR83Tl31VzwExH7x5SLe2NG2YkLXTa3ZYqWSrHQs?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Flipr client parameter evaluation.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6ab1ea4c-fe8c-4749-8670-d82d3312f7c9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b73e9c72-55bd-4de3-b9bd-1bc5f54e2187&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The calls to the &lt;strong&gt;get&lt;/strong&gt; method return different parameter values based on the runtime arguments passed in (e.g.,&lt;em&gt; city_id&lt;/em&gt;, &lt;em&gt;user_id&lt;/em&gt;, &lt;em&gt;app_version&lt;/em&gt;, etc.).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;940a53cb-bbe3-459f-be5b-41a1fa8635c7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;An &lt;strong&gt;experiment&lt;/strong&gt; allows us to randomize the behavior of the parameter for some unit of measurement (e.g., users, sessions, devices, or trips). While an experiment is active, the parameter has additional &lt;strong&gt;parameter metadata&lt;/strong&gt;, noting down the associated experiment that would override the behavior of the parameter. When the experiment is concluded, this metadata is removed.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b49aafcb-1c4c-40ea-8930-4f58126234f1&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;ecc0933e-c3ca-4036-b013-db0cc0c0adaa&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXexjiP3-po3l3ihs_fQd3guWL5DTCZIvUQ772FVqMyctGFS63DhRvCHKsa42Y4IRoRFVvjrFSi-sBaj4WT8AzkaGF-WHVkbGIvETqmFw-cRmWFNcTyONLV1AdAYj6qRoS1h_7_zWrui0c12CCfToHX514IZ?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: Parameter metadata representation.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f1193605-535c-4c70-9563-e1aaf3f89757&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e8ca6b41-3c1c-464b-a349-899fb7e7fcd8&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In the below example, 2 different users in &lt;em&gt;city_id = 1&lt;/em&gt; could get 2 different values of a button color based on which &lt;strong&gt;treatment group&lt;/strong&gt; they belong to in the experiment (the below A/B test is set up as 50% treatment and 50% control and is randomized by &lt;em&gt;user_id&lt;/em&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d15399a5-c8ee-4cac-8c9d-c99b9ab591b9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;937986bc-64db-4d52-a6d7-32f9dd1d7f6a&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdHmTE23QiXnNEgxYPnx68cAEN8Hzl3NP88Fs8vJsUpajG6berW6mTMScplnEc7VPxfd0nAVIIoRHZxkW82a5vZTVbw1kVKlBtDRxy7P2meDrb1CfveKOv5rRbX8L7Ztq4HAoeXXCLkOoztJBNhDCC4ZxnL?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: Experiment and experiment metadata representations.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;36504ba8-03a6-4c23-9c55-183d16794848&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;42fede90-4b58-403d-933b-b753ebc5d5e2&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The &lt;strong&gt;experiment&lt;/strong&gt; and &lt;strong&gt;experiment metadata&lt;/strong&gt; are read by the Flipr client and the return value of any parameters impacted by the experiment will vary based on the experiment randomization (e.g., &lt;em&gt;user_id = 123&lt;/em&gt; may get blue because they are part of the control group, while &lt;em&gt;user_id = 456&lt;/em&gt; would get the value green):&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;52345ac8-1e9b-4d86-8478-06ee41a7948e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;ce15ddb4-a0f2-4f3f-93ac-ef97e39d89fe&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcpoEA_nfVd7LsWMyhG3bziMUdl4ITrlKuwOtg9-K5aTcXjrE-0wFCBDJe2Z6vFrZ3P-6mZsucF4Q8WrR41jm2TY0yWAJqs6U1oKeAoe53vx9ve95P9WITM_EgX77UIxLXKyhCUNj_ZwgS9hhFDCeH5o18?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: Flipr client parameter evaluation with experiment override.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dcadd599-ede1-4988-9f5e-43b259d9738c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f969ee60-3503-4da6-afd6-e8542ee55b8a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We log the exposure of users to experiments so that we can measure the impact that these changes have on key business outcomes, such as completed trips or gross bookings.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d65583f0-bd34-4a63-a299-3e1fb6807568&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c48b0622-aecd-423c-be13-474c76ae16b6&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-problem-statement&#34;&gt;Problem Statement&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6310153c-1cd3-47e0-9c90-7606539284fe&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Historically, all experiment evaluations happened through network calls to a centralized microservice, whereas evaluation of parameters with no active experiments happened locally (referred to as “local evaluation”). As part of project Citrus, we kept a pattern where all backend microservices made RPCs to a central service to evaluate active experiments. This approach allowed us to ship the new platform relatively quickly and it reduced migration cost for our customers to adopt the new platform. All of our clients (backend systems, mobile devices, and web services) adopted the new platform by making RPC calls to the new evaluation service (internally referred to as &lt;strong&gt;Parameter Service&lt;/strong&gt;).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0e39eb67-e7b6-4544-b5e6-cd0e09994579&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;040d5459-23bf-4773-9821-b0bedffb41ce&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfgi_tto5GyZSqw-RsesbyPBH2Z9YCFlvmsRI7ZSyHqC9NiZ8W_qgxgcktI7Hp4DxV2jk2pd6gREQLrlHYj-2XM13BoqE2i-eMYe-OoxJUgM3yQg5xz7cfZZehnyr2cu3NKQFZidRPn735nN9xvj0K0doo?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Parameter Service Architecture (RPC evaluation).&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eb7ea424-ecc9-42fb-a03b-087856d826d8&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;aabc8519-d3b2-450e-a7b7-ed893eff3615&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;br&gt;However, this pattern also left several problems unaddressed for backend callers of experimentation, that we wanted to solve as part of our experimentation platform rewrite.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f6745bde-0355-48de-848c-1f9869dc7691&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Latency&lt;/strong&gt;: RPC based evaluations are relatively slow (p99 latency of ~10 ms). Given the real-time nature of the Uber marketplace, there are many applications that needed their experiments to be evaluated faster in order to onboard to the new platform.&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Reliability&lt;/strong&gt;: The parameter service became a single point of failure. To mitigate this concern, we invested heavily in the reliability of parameter service, eventually maintaining an availability SLA of 99.95% for each of its endpoints. We also encouraged teams to rely on a fallback value in case of RPC failure. However, given the scale of the system and the fact that hundreds of teams and microservices call parameter service to evaluate thousands of parameters and experiments at any given time, the behavior of every fallback could not be guaranteed. Occasionally, the fallback value would become unsafe, resulting in outages that would then need to be promptly fixed.&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Developer Productivity&lt;/strong&gt;: In order to reduce the number of requests to parameter service, we introduced a prefetch mechanism. As part of this mechanism, a backend service would send a batch RPC request to parameter service to evaluate and return &lt;strong&gt;all&lt;/strong&gt; of the parameters under active experimentation needed to process business logic for that specific request. The experiment values and exposure logs returned from the parameter service would be stored in the local in-memory cache of the backend service.&amp;nbsp;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;The backend app would then &lt;strong&gt;get &lt;/strong&gt;the value of each individual parameter needed in that request (which was impacted by an experiment) exactly when it was needed, and this is the point at which we would emit an exposure log for the user entering the experiment.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a4427471-3ff1-4905-96a9-91dc1d65829d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;While this batching helped reduce the total number of RPC calls, it also meant that backend developers needed to be cognizant of the prefetch mechanism while coding their application. They would need to plan for which parameters to prefetch upfront so that these parameter values would be available later. A failure to do so would result in unexpected bugs that would then need to be debugged and fixed, resulting in inefficiency.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;015fdac7-4719-46b9-a1a3-2ea244c3b0a0&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;d887cb33-7e66-4dd0-a4b3-ac2d087b1233&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfDVtfii-J4qcPg2YJtWSkXfvWDWv-KTwuM72AULRUI3zxzma2dj2vPfvaMSzugIOKLQsoKsg5TQLmva-uAEPUDcTuwJ2bDjZRCviyCOlFY58-llmflatbDIxCJ0heqp3C5C3UqF7X7zttrx8fl-G0q1HA?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Initial Architecture: Prefetch parameters mechanism.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7b0ea81f-c7eb-45ff-9531-316815e29e09&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5033feb0-daf7-44d6-a24f-5e4fb50e46ce&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We believed that all of these concerns could be addressed by a new architecture involving client-side evaluation of experiments (and parameters) without any RPC requests to the parameter service.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;934b57ef-115b-4707-be3e-e2665432395b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;445e90ae-10ba-4ffa-9353-5dba81b4f6a6&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture&#34;&gt;Architecture&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;55e76b60-4589-41d2-becd-ed057a9a1bb1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber’s existing architecture involved a distribution mechanism where Flipr parameters were sent to all host agents at Uber (&lt;a href=&#34;https://www.uber.com/blog/how-we-unified-configuration-distribution-across-systems-at-uber/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;see previous eng blog for more details&lt;/a&gt;). Each microservice running on such host machines would rely on the Flipr client to periodically bootstrap these parameter rules engines by reading from file caches which results in a much higher availability than online RPC architecture.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2f5c86e6-e578-4ab8-a75e-dae062dcdb43&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;b088ac78-b735-4c9d-88d2-e3ff47ecc8fd&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd3OYBBowDH_C3r1DhN2tu-fEtjHEzLZv_vRtEsIBtk6G0NUszEUquFnpCt5gtTVc4dK1JB_qVY4cKJ7F8LzP-wRac-Hsq-EsKBANHoSrqECWjOuwotA77-5jTT0R7GJo46YKflS3j-dFkmh2mHQ6AZgG4z?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8: Parameter host agent distribution.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d1f41a6a-5b70-44d2-b665-a0ca62124f06&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4a048935-c4fa-4b94-96b6-eac2134b2e36&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One of the major changes in the new architecture was to distribute &lt;em&gt;experiments&lt;/em&gt; to all host agents by using the same distribution layer as regular Flipr parameters. This change in the distribution layer would unlock the ability for each microservice to locally read experiment data without any RPC to Parameter Service at all.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;63099f92-3738-4998-9b54-fcbe2db2f94e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;7ee272d4-aa04-46ff-9b6c-45e6ecf33fff&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcKDN5DxoAaBdHAZTOrJUzsoefqhlUErYvD0g7UAyln6llauKDecQnwhH7ul3yoseZyAFP4Ds7CdbQsh-b8ja6QbUmzbMjRvcdEWJoqh3wtL-AK389xl8ey4M6CeYmShCFTQkLWx-zt0s62OHHxoSpBBbc?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 9: Experiment host agent distribution.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6b0ffc43-1496-4c55-b262-d5f1f46ac85d&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;adfabe5c-dde3-4abd-82c3-c2dd8a677fee&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The next step for us was to port all experimentation specific business logic of the Parameter Service into an &lt;strong&gt;ExperimentPlugin&lt;/strong&gt;,&lt;strong&gt; &lt;/strong&gt;which would be embedded directly within the Flipr client. We intended to pilot this new capability directly within the Parameter Service before exposing this new capability of Local Experiment Evaluation to external microservices. The benefit of being the first users of Local Experiment Evaluation was to allow for &lt;strong&gt;rigorous shadow testing&lt;/strong&gt; to ensure correctness and performance parity.&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f04d2aa4-af87-446b-9270-ee28e8debd82&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;9f4bd2fa-4ae3-406c-98e3-8de044fe66cf&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfX4ur07iZOXrXm_yBZqMT96lUUkK6UtKEDPoysWcVop9gUKKnTb9wNvXHHgEq4TzyoanjOlN-C2qw89l36IkzOIaTRyPlWOqivL6bVigFeR7pCyZ6sXRm8a7zvoIRM9pxVEVCEo_oqtcf3uXBIgxwklble?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 10: Intermediate Architecture: Shadow evaluations in Parameter Service.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f6c86324-e4e6-4da9-bf01-fa62d9a5907b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9aa41247-e80c-4554-8e8d-8aedda0f1439&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;After a thorough shadow testing process through which we uncovered and addressed 13 separate bugs, the final step in this journey was to allow teams to directly opt in to use the Local Experiment Evaluation capabilities and remove their usage of the PrefetchParameters API entirely.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3c32247a-108e-4d0f-ad93-71e4adcb0330&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;6437ed43-38f5-4090-be47-ed6975e71eb7&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdOxStMOvaEm58g-JwGuIeMTKJ7qgzjAgDFm3BXhDz8eA0-aaV59TajP0JzHWu4-tuvrwuWukh76OXkZ-VBCI4-pIr6-p5wN1YkHWrG3M1owopRG0jgiGVhaIC_XFJovE5g-Zn0Y1-B1_bQs60EmLImumzT?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 11: Final Architecture:&amp;nbsp;Direct usage of Local Experiment Evaluation in backend microservices.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b92ed6f5-7e4d-442e-bc53-a1087605e9d3&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ac67e08a-3e62-4ee2-a97c-72c18708e894&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-challenges-amp-learnings&#34;&gt;Challenges &amp;amp; Learnings&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;1b107d54-09cb-488a-b808-2871f6e8a911&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-1-verification-at-scale&#34;&gt;1) Verification at scale&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dad739ab-b35a-4899-b3fc-3fe873f1e031&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One of the major challenges of building this new local evaluation functionality was to ensure that it was performing correctly at scale. In order to do this, we implemented a shadow testing capability to ensure that a sampling of requests that went to the V1 legacy evaluation code path would also trigger a separate async goroutine to evaluate and compare results with the V2 local experiment evaluation code path.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0abdd297-983f-4ac0-99e6-9dd68729bfcd&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The scale of such evaluations was enormous (roughly 20 million evaluations per second) and required heavy sampling to prevent any degradation to Parameter Service to perform these comparisons. Additionally,&amp;nbsp; the types of evaluations varied greatly from backend, mobile, and web surfaces. For this reason, we found it necessary to prove that every mismatch we encountered was explainable. And eventually we achieved a match rate &amp;gt;99.999% (1 explainable discrepancy out of 100,000 evaluations on average).&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;506c3496-912b-4c65-99e2-1a791658c7bc&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f0932322-4158-4a84-a4b5-79d79a887fbc&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfkDB3JeA0i5JY19L-Cw7R0uM4WGps4Kd8N6MUC1FkhCWPDOcYZyILjrFgviTGd8a8h6ZakoGVNup_x6zXt98AM7NWLBcHakzuxk2DbvUhmi-kZm_sNiYS9sTi6qNuQBbkz-ZtEDKCP_07nxp5gfnfTtiY?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 12: Shadow evaluation match rate.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;34acc681-281b-4bff-a037-e658f65264c7&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;63e623d2-a89a-4d65-9813-028a25e7444d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Some of the key learnings from this process included:&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b9a6d2df-c22c-4063-9fc5-2f86b4606e00&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Known discrepancies during parameter or experiment updates&lt;/strong&gt; – Whenever users updated the values or rules engine for parameters or experiments, this would predictably result in a race condition. The V1 evaluation methodology might use version X of the parameter or experiment whereas the shadow comparison using V2 methodology could use version X+1 based on the timing of Flipr distribution. This became the &lt;em&gt;only&lt;/em&gt; source of acceptable discrepancies in the system.&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Bugs in the old methodology&lt;/strong&gt; – Although 100% parity with the old system was the goal, at times we decided to “fix forward” and address minor bugs and edge cases in the legacy system instead of the new system. This proved to be a major benefit of this migration: in addition to providing new functionality, we were able to fix difficult-to-detect edge cases in the legacy system too.&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Race conditions and timeouts&lt;/strong&gt; – Similar to the issue of “known discrepancies” during parameter or experiment updates, we realized that some subtle race conditions could affect our shadow evaluation match rate. One example was to set an adequate timeout for the shadow evaluation–it should mimic the same context deadline provided to the original evaluation to do an apples-to-apples comparison not just for logical correctness, but also performance.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f33fe512-c94d-4246-9029-230911eb591b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;c9ffdcb3-3f47-43ee-afe0-1f9ef83790c5&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-2-logging-volume-concerns&#34;&gt;2) Logging volume concerns&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b478fb6d-949a-4af6-a4c7-1a7b6e5ddff7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The dramatic improvement in evaluation speed introduced a risk to experiment log production and processing. Evaluating a parameter that is being experimented on may produce an exposure log to Apache Kafka®. If parameters can be evaluated 100 times faster, this means logs can potentially be produced 100 times faster too, and there is a risk of potentially overwhelming the infrastructure that produces, distributes, and processes the logs. In particular, we were concerned about dropping experiment logs due to hitting rate limits on our Kafka topic (either byte rate or message rate throughput limits).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7870c783-6532-4bc4-a380-2d60402a7fc6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;One common experimentation use-case where a large cohort of users can be processed in bulk is producing marketing copy for an email campaign involving hundreds of millions of users.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;da4724f7-a7ab-4235-ab53-2152cb58de80&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To mitigate this risk we did the following:&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;373275bf-50a4-4d3c-9445-e57403f31b6d&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Telemetry &amp;amp; alerting on log volume production&lt;/strong&gt; – First of all, we added telemetry to understand how many experiment logs were produced per second by each client, and alerting our on-call team if any one of them was producing greater than 5% of the total quota for our Kafka topic. This allowed us to identify hotspots and build solutions to address them.&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;In-memory LRU cache&lt;/strong&gt; – Because our experiment log processing pipeline only cares about the first time each user enters the experiment, we were able to deduplicate an enormous volume of logs. We decided to use a highly performant in-memory LRU cache (&lt;a href=&#34;https://github.com/hashicorp/golang-lru&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;golang-lru&lt;/a&gt;) to reduce redundant logs, and ultimately were able to deduplicate roughly 80% of logs.&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Parameters within the Flipr client library&lt;/strong&gt; – Having the ability to add “internal” parameters used within the Flipr client library and ExperimentPlugin became crucial to developing features safely. In order to avoid circular dependencies, we had a separate mechanism to load these “internal parameters” at file cache bootstrap time vs. providing runtime context to evaluate them. In case of emergency, we were able to entirely disable local evaluation using these internal Flipr client parameters without having to re-deploy services.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e084632c-ca52-43ea-914c-66c1a2493fc6&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;02c9d2f9-6517-4642-a059-f05afd2b2181&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-3-decentralized-evaluation&#34;&gt;3) Decentralized evaluation&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b1178d8b-d999-41c2-a54d-7de90f53aafe&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Lastly, a new challenge that we had to face was the fact that experiment evaluations were now decentralized as part of a client library versus a single centralized microservice. One of the major benefits of RPC-based evaluation, especially in the initial development phases of project Citrus, was that any issues with the core evaluation logic could be easily reverted by redeploying a single microservice. We would encourage others to only move towards client side evaluation once the platform is in a mature state, because reverting multiple separate microservices involving separate versions of client libraries is a much more costly and time consuming exercise.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;361e81b7-1e5d-4889-ac06-591bc50b23e0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Some of the tools which helped us with this paradigm change include:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;77b1cb48-f40a-4734-b173-5aeb8dc4ad6e&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Client library version tracking&lt;/strong&gt; – Even though our backend microservices are deployed at a regular cadence, it isn’t always the case that every single microservice at Uber is up-to-date with the latest client code changes. Client version tracking telemetry allowed us to more easily identify services which were using outdated or buggy versions of the SDK.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5667ba11-eee9-4e70-b2ec-45290073c058&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;b99a72dd-8035-4e21-9267-2fcafd0bd339&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfVlJBJwZVPpoGcaCKELgO40jDpe5EWiteqtyxeHsQsmGWqtpA7bloW2FS15rf9RxXqzKIodyysvMEJywcO0p0G3QfN3am2fE5Sf0ZNGKRMn_pQotJHekJ-hdAFHfdNzsHHyDxRmBRL0kk-6UZPqkyoBZyT?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 13: Client library version adoption curve&lt;br&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;948edbc4-172e-4787-93d8-95510b8b870c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;000f094a-7e5c-4109-8ca2-9a2e1499f495&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Bulk deployment infrastructure&lt;/strong&gt; – &lt;a href=&#34;https://www.uber.com/blog/up-portable-microservices-ready-for-the-cloud/?uclick_id=b017bf4f-abd9-415e-aee6-3540742d49ad&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Up&lt;/a&gt; is the platform at Uber which manages orchestration and code deployment of thousands of microservices across millions of host instances. We were able to add capabilities to bulk deploy services in a worst-case scenario (e.g., broken client version released).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fb45ec4e-a63c-4002-8b8e-b561b81e73eb&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;517dda9d-6a81-432e-92d6-47c286375bef&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-impact&#34;&gt;Impact&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ebe4e725-1949-4d2e-94b3-0423cf766e8d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Ultimately, the new architecture proved to be a success for many use cases at Uber. The p99 latencies of experiment evaluations dropped by a factor of 100x (from 10 ms to 100 µs).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2e81cbce-46ea-4370-9a75-0f094a8274ed&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;413b8262-4b07-49d8-a66b-42309ff8ba66&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXffLKFTT_m6BdKUfilQq3txDxRV1j5GdeC8BVg6xgwvGvKu8UYjjksYNr2aeW2zZNdKtaDC-ZPt_FHMre0VApVA-oVGIaX29mTmtOyeeIOa07pRjcOouC9ufQP8qxPJigzeBJHvySR3RLjB1rhVOKL6cA4?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 14: Experiment Evaluation p99 latency.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;419c8a90-862b-4320-915b-bc744db38550&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fc19a4a6-e449-4348-8684-45c1f05ae69e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;After the initial release of this feature in H2 of 2023, we strategically targeted the rollout to the Go microservices contributing the most to experiment evaluations, resulting in over 100 services and nearly 70% of experiment traffic so far.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;53d578f9-0a25-4f26-98dd-dd857144bcfe&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;d816a793-d275-4ced-bb88-91480f12ef04&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcsRkV5JjP_DY03MxPQzoMgPiyfiQsl9eH5lIXsCiQi4GOsHBNlWIEgMH-4LpzKfna6910eoXhmpMFaxQ8W5gqB7adZxOsJGBHt8Ln3Pa2M9Kifn8Ro22mP_TfWBWGeEVoQaHER9b26AXSRR2o3Ob0zkWo?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 15: Local Experiment Evaluation adoption KPIs.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2894e647-1d06-42b4-8577-05756c90f12c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4bc26680-a0f4-46a8-8b1f-1ebcac155072&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Additionally, we have been able to observe some noticeable improvements in user-facing functionality in Uber’s applications. For example, the end-to-end backend latency of the UberEats search suggestion indexing reduced by 20% (p99 latency went from 250 ms to 200 ms), which translated to an appreciable improvement in the mobile app experience.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9f89216c-cfb1-40b7-9a1e-fa7f471f3470&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;99d7f75a-094a-49ad-9267-f604b51f3640&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXer56jkW2Kdvch_24Hp6K4dmLJ73CxFiZJ2XI2VfjL6XB527vo57pVxm40r0i4sMEMNesH5jKscf-nxZy3XDMawB-bTM4dbHyvXTTOMMj_RlFOcjs2XHhuNt7qTXzhQwlO9GK-Tpg-LUglZ6KgpsEUTBGPj?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 16: Impact of Local Experiment Evaluation for UberEats store index service.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;dc9e1900-7d44-417b-abbc-451d9175de7c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5373b880-fe5b-4cbd-bcab-b37016f5eb60&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-next-steps&#34;&gt;Next Steps&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c02969d9-5961-4721-b5a2-81d0053bb65d&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This first iteration of Local Experiment Evaluation was for services using Golang, which serves the majority of our backend experimentation. The immediate next step is to also include Java, which is the other main backend service language that is supported at Uber.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0d0efe9b-3e73-412e-a887-909d71f478b5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Beyond this, there are plans and ongoing work to move the complexity from the clients to the server side. Complex clients are harder to rollout than server-side changes, and having complex clients in two or more languages adds duplication of effort and risks of divergence.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d4ab51b2-7942-42b9-8f4e-7a03f8ebe585&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;A more expressive language would allow us to move some of this complexity to the server. Instead of the clients parsing the experiment rules engines on the client using an ExperimentPlugin pattern for both Golang &amp;amp; Java, the system could parse this logic on the server, and output simpler programs in the more expressive client language to be executed by both Golang and Java clients. This would lead to thinner clients, and more server side control. The details of this will be the subject of future blog posts.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;40e3d864-d6f9-439b-9674-e426a5957e05&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;b27d423e-1886-4b9b-8f67-c6f16111d984&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1d2f57e6-05d6-4aaa-8aa0-5ba9bb87fde7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In summary, we replaced the RPC-based experimentation system with a new feature that evaluates the experiment rules engines locally by reading from file caches that are distributed to all host agents. Adding local evaluation for the experimentation stack helped improve the following:&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5f8d1b57-583d-42fd-9182-e7343956b8d4&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Latency:&lt;/strong&gt; Evaluation latency dropped by a factor of 100x (p99 10 ms to p99 100 µs), unlocking new integration opportunities&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Reliability:&lt;/strong&gt; We removed a single point of failure on a single high-traffic microservice, replacing it with a more reliable distributed configuration pipeline&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Developer Productivity: &lt;/strong&gt;Developers no longer need to worry about prefetching parameters in a batch request and caching them to avoid the RPC overhead, making code less complex&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;308d3a47-41fc-4d1c-a863-3b4567650527&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We learned many lessons from this initiative, which may be useful for others attempting to build an in-house Experimentation platform or make large scale updates to their existing platform:&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e9facbf2-f63d-4c3c-9712-ad717b80a989&amp;quot;,&amp;quot;ordered&amp;quot;:false,&amp;quot;values&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Start with Centralized&lt;/strong&gt; – Creating a new experimentation platform which returns evaluation results through RPC calls to a centralized microservice is advisable, especially during the initial period of rapid new feature development&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Decentralized when mature – &lt;/strong&gt;When the platform is mature, switching to a decentralized library architecture unlocks many benefits (as listed above)&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Safe development of libraries&lt;/strong&gt; – To make (decentralized) library development safer, utilizing concepts like lightweight feature flagging within the client library, having strong telemetry and alerting, and tracking library version usage across microservices is important&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Faster evaluations can mean faster log emission&lt;/strong&gt; – Making sure that the experimentation logging infrastructure can handle increased volume is critical when moving towards a client side, low latency evaluation architecture&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;62f1a658-4de0-451a-9c4c-50a74ed1ffb4&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7914a2a8-41f9-4444-a1f7-a7a8d10f02bf&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-acknowledgments&#34;&gt;Acknowledgments&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;07b5e14d-8520-40d7-a7ff-a10331d953c9&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;This project would not have been possible without the contributions of numerous people on the Experimentation team, Flipr team, and pilot customer teams (Rider Experience, Ads Delivery Platform, and Earner Incentives) who helped us release Local Experiment Evaluation for Go services!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;26f7463a-272c-45ad-9add-cbdaf679c43b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;Apache®, Apache Kafka, Kafka, and the corresponding logo are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.&lt;br&gt;Cover image by Iffany via &lt;a href=&#34;https://pixabay.com/illustrations/alchemical-alchemy-magician-witch-8848871/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Pixabay&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a24c4410-ca5c-4518-acaa-63d94cad84c6&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;/p&gt;】&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;d64b6745-f796-4cb8-872e-6ae0157f15d7&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-introduction&#34;&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f3c10d4f-01d7-4aec-9f1f-7b770ab21fc8&#34;,&#34;dropCap&#34;:false}&#34;&gt;这篇博文描述了我们如何改进 Uber 实验平台的效率，将实验评估的延迟减少 100 倍（毫秒到微秒）。我们通过从远程评估架构（客户端到服务器 RPC 请求）转向本地评估架构（客户端计算）来实现这一目标。本博文中的一些术语（例如参数、实验等）引用自我们之前关于 Uber Experimentation 的博文。要了解更多信息，请查看&lt;a href=&#34;https://www.uber.com/blog/supercharging-a-b-testing-at-uber/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;增压 A/B在 Uber 进行测试&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ac4c1504-882c-4649-933c-fa6b5b8b1afc&#34;,&#34;dropCap&#34;:false}&#34;&gt;使用实验重点贯穿 Uber 的后端微服务、移动应用程序和 Web 界面，以衡量所有业务部门（交付、移动、货运、Uber For Business (U4B) 等）产品发布的改进。我们将介绍系统的当前和新架构：以及技术挑战和学习。这篇博文特别关注&lt;strong&gt;后端&lt;/strong&gt; Golang 微服务的延迟改进，而不是移动或基于网络的实验。我们还专注于 A/B 测试，而不是其他实验设计。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8db03731-b49f-4b16-b029-f3c0c476f829&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;50bc6c10-54b3-4842-8202-209b25f285cc&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-background&#34;&gt;​​背景&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a5e74f0b-28b2-41cf-bfc3-8d915ee23d65&#34;,&#34;dropCap&#34;:false}&#34;&gt;2020 年， Uber开始了重写A/B测试平台的漫长旅程（内部称为Project Citrus）。这个新系统的关键架构决策之一是统一 Uber 现有的后端配置平台，&lt;a href=&#34;https://www.uber.com/blog/flipr/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34; &gt;Flipr&lt;/a&gt;，带有实验平台。我们构建了实验，作为 Flipr 配置（也称为参数）之上的临时覆盖层&lt;strong&gt; &lt;/strong&gt;，以便执行随机化、进行因果推理并帮助团队确定使用 fo 的最佳性能值。r 他们的参数。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fc14f607-ac7b-4402-aaab-d17095a1697e&#34;,&#34;dropCap&#34;:false}&#34;&gt;下面是示例来说明参数和实验之间的差异。这里我们有一个&lt;strong&gt;参数&lt;/strong&gt;，它控制 Rider 应用程序中特定屏幕的按钮颜色。默认值为红色，但在某些情况下（例如，如果用户位于&lt;em&gt;city_id = 1&lt;/em&gt;），该城市的&lt;em&gt;所有用户&lt;/em&gt;的值将为蓝色。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b2b71d62-7a60-47d0-b089-cf5005aac389&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;7707510c-e913-4343-9940-4277b2619ab0&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcCn3OE-lw_syq4RP3ju2DpQ0D1xl16leZdP_eDI5i8anem_mVIFYBvXrlIXwFhe_3-0eUrXFomadWp52ObiNyxP9uzsx IDoFFz-z4Yn7xmlpVZ6YXqP5YQPCamrzUemoEyFfU13XDYaM3CFDtSgpCIsMab?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 1：参数表示。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;96551fce-9bac-46a9-a7f6-1a31edb0ca3b&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e083eb58-1309-410f-a1e2-66e77997f412&#34;,&#34;dropCap&#34;:false}&#34;&gt;这些参数规则使用 Flipr 客户端评估引擎：&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;2c2f8923-a7ad-47b7-8f66-cb3d159a6e78&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcc7pse1Iyq0IKcOY4i8gl6_jnxlu6rD8oWL_i9wXvyYplJtZdR8whcpSTMiaOv-R5iGp_5cxF3olsqFcCKZ7YRaW qr0rMSef2R2WTq9NRWgl9fU-ukIR83Tl31VzwExH7x5SLe2NG2YkLXTa3ZYqWSrHQs?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 2：Flipr 客户端参数评估。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6ab1ea4c-fe8c-4749-8670-d82d3312f7c9&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b73e9c7​​2-55bd-4de3-b9bd-1bc5f54e2187&#34;,&#34;dropCap&#34;:false}&#34;&gt;调用&lt;strong&gt;get&lt;/strong&gt; 方法根据运行时参数传递返回不同的参数值d（例如，&lt;em&gt; city_id&lt;/em&gt;、&lt;em&gt;user_id&lt;/em&gt;、&lt;em&gt;app_version&lt;/em&gt; 等）。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;940a53cb-bbe3-459f-be5b-41a1fa8635c7&#34;,&#34;dropCap&#34;:false}&#34;&gt;一个 &lt;strong &gt;实验&lt;/strong&gt;允许我们随机化某些测量单位（例如用户、会话、设备或行程）的参数行为。当实验处于活动状态时，参数具有附加&lt;strong&gt;参数元数据&lt;/strong&gt;，记录将覆盖参数行为的关联实验。实验结束后，此元数据将被删除。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b49aafcb-1c4c-40ea-8930-4f58126234f1&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;ecc0933e-c3ca-4036-b013-db0cc0c0adaa&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXexjiP3-po3l3ihs_fQd3guWL5DTCZIvUQ772FVqMyctGFS63DhRvCHKsa42Y4IRoRFVvjrFSi-sBaj4WT8AzkaGF-WHVkbGI vETqmFw-cRmWFNcTyONLV1AdAYj6qRoS1h_7_zWrui0c12CCfToHX514IZ?key=MWSPikVkL_FOThWVVOyYBw&#34; 替代=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 3：参数元数据表示。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f1193605-535c-4c70-9563-e1aaf3f89757&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e8ca6b41-3c1c-464b-a349-899fb7e7fcd8&#34;,&#34;dropCap&#34;:false}&#34;&gt;在下面例如，&lt;em&gt;city_id = 1&lt;/em&gt; 中的 2 个不同用户可以根据他们在实验中所属的&lt;strong&gt;治疗组&lt;/strong&gt;获得按钮颜色的 2 个不同值（下面的 A/B 测试设置为 50% 治疗和 50% 对照，并按&lt;em&gt;user_id&lt;/em&gt;随机化）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d15399a5-c8ee-4cac-8c9d-c99b9ab591b9&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;937986bc-64db-4d52-a6d7-32f9dd1d7f6a&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdHmTE23QiXnNEgxYPnx68cAEN8Hzl3NP88Fs8vJsUpajG6berW6mTMScplnEc7VPxfd0nAVIIoRHZxkW82a5vZTVbw1kVKlB tDRxy7P2meDrb1CfveKOv5rRbX8L7Ztq4HAoeXXCLkOoztJBNhDCC4ZxnL?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34;referrerpolicy=&#34;no- referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 4：实验和实验元数据表示。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;36504ba8-03a6-4c23-9c55-183d16794848&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;42fede90-4b58-403d-933b-b753ebc5d5e2&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong &gt;实验&lt;/strong&gt;和&lt;strong&gt;实验元数据&lt;/strong&gt;由 Flipr 客户端读取，受实验影响的任何参数的返回值将根据实验随机化而变化（例如，&lt;em&gt;user_id = 123&lt; /em&gt; 可能会变成蓝色，因为它们是控制组的一部分，而 &lt;em&gt;user_id = 456&lt;/em&gt; 会得到绿色值）：&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;52345ac8-1e9b-4d86-8478-06ee41a7948e&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;ce15ddb4-a0f2-4f3f-93ac-ef97e39d89fe&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcpoEA_nfVd7LsWMyhG3bziMUdl4ITrlKuwOtg9-K5aTcXjrE-0wFCBDJe2Z6vFrZ3P-6mZsucF4Q8WrR41jm2TY0y WAJqs6U1oKeAoe53vx9ve95P9WITM_EgX77UIxLXKyhCUNj_ZwgS9hhFDCeH5o18?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 5：使用实验覆盖进行 Flipr 客户端参数评估。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dcadd599-ede1-4988-9f5e-43b259d9738c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f969ee60-3503-4da6-afd6-e8542ee55b8a&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们记录让用户参与实验，以便我们能够衡量这些变化对关键业务成果（例如已完成的行程或总预订量）的影响。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d65583f0-bd34-4a63-a299-3e1fb6807568&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c48b0622-aecd-423c-be13-474c76ae16b6&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-problem-statement&#34;&gt;问题陈述&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6310153c-1cd3-47e0-9c90-7606539284fe&#34;,&#34;dropCap&#34;:false}&#34;&gt;从历史上看，所有实验评估是通过网络调用集中式微服务进行的，而 eval在本地没有进行主动实验的情况下对参数进行评估（称为“本地评估”）。作为 Citrus 项目的一部分，我们保留了一种模式，即所有后端微服务都向中央服务发出 RPC，以评估活动实验。这种方法使我们能够相对快速地发布新平台，并降低了客户采用新平台的迁移成本。我们的所有客户（后端系统、移动设备和 Web 服务）都通过对新评估服务（内部称为&lt;strong&gt;参数服务&lt;/strong&gt;）进行 RPC 调用来采用新平台。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0e39eb67-e7b6-4544-b5e6-cd0e09994579&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;040d5459-23bf-4773-9821-b0bedffb41ce&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfgi_tto5GyZSqw-RsesbyPBH2Z9YCFlvmsRI7ZSyHqC9NiZ8W_qgxgcktI7Hp4DxV2jk2pd6gREQLrlHYj-2XM13BoqE2i -eMYe-OoxJUgM3yQg5xz7cfZZehnyr2cu3NKQFZidRPn735nN9xvj0K0doo?key=MWSPikVkL_FOThWVVOyYBw&#34; alt =&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 6：参数服务架构（RPC 评估）。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;eb7ea424-ecc9-42fb-a03b-087856d826d8&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;aabc8519-d3b2-450e-a7b7-ed893eff3615&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;br&gt;然而，这种模式也给实验的后端调用者留下了一些未解决的问题，我们希望作为实验平台重写的一部分来解决这些问题。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f6745bde-0355-48de-848c-1f9869dc7691&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;延迟&lt;/strong&gt;：基于 RPC 的评估相对较慢（p99 延迟约为 10 毫秒） ）。鉴于 Uber 市场的实时性，许多应用程序需要更快地评估其实验，以便加入新平台。&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;可靠性&lt;/strong&gt;：参数服务成为单点故障。为了减轻这种担忧，我们在参数服务的可靠性方面投入了大量资金，最终将每个端点的可用性 SLA 维持在 99.95%。我们还鼓励团队在 RPC 失败时依赖后备值。豪维r，考虑到系统的规模以及数百个团队和微服务在任何给定时间调用参数服务来评估数千个参数和实验的事实，无法保证每个回退的行为。有时，回退值会变得不安全，从而导致需要及时修复的中断。&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;开发人员生产力&lt;/strong&gt;：为了减少参数服务的请求数量，我们引入了预取机制。作为此机制的一部分，后端服务将向参数服务发送批量 RPC 请求，以评估并返回处理该特定请求的业务逻辑所需的&lt;strong&gt;所有&lt;/strong&gt;主动实验参数。从参数服务返回的实验值和暴露日志将存储在后端服务的本地内存缓存中。 &lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;后端应用程序将&lt;strong&gt;获取&lt;/strong&gt;所需的每个单独参数的值准确地在需要时发出请求（受到实验的影响），此时我们将为进入实验的用户发出暴露日志。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a4427471-3ff1-4905-96a9-91dc1d65829d&#34;,&#34;dropCap&#34;:false}&#34;&gt;在此批处理时有助于减少 RPC 调用的总数，这也意味着后端开发人员在编写应用程序时需要了解预取机制。他们需要预先计划预取哪些参数，以便这些参数值稍后可用。如果不这样做，就会导致意外的错误，然后需要进行调试和修复，从而导致效率低下。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;015fdac7-4719-46b9-a1a3-2ea244c3b0a0&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;d887cb33-7e66-4dd0-a4b3-ac2d087b1233&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfDVtfii-J4qcPg2YJtWSkXfvWDWv-KTwuM72AULRUI3zxzma2dj2vPfvaMSzugIOKLQsoKsg5TQLmva-uAEPUDcTuwJ2bDjZ RCviyCOlFY58-llmflatbDIxCJ0heqp3C5C3UqF7X7zttrx8fl-G0q1HA?key=MWSPikVkL_FOThWVVOyYBw &#34; alt=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 7：初始架构：预取参数机制。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7b0ea81f-c7eb-45ff-9531-316815e29e09&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha 通道不透明度&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5033feb0-daf7-44d6-a24f-5e4fb50e46ce&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们相信所有这些问题都可以通过一种新的架构来解决，该架构涉及客户端对实验（和参数）进行评估，而无需向参数服务发出任何 RPC 请求。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;934b57ef-115b-4707-be3e-e2665432395b&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;445e90ae-10ba-4ffa-9353-5dba81b4f6a6&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-architecture&#34;&gt;架构&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;55e76b60-4589-41d2-becd-ed057a9a1bb1&#34;,&#34;dropCap&#34;:false}&#34;&gt;Uber 的现有架构涉及一种分配机制，其中 Flipr 参数被发送到 Uber 的所有主机代理 (&lt;a href=&#34;https://www.uber.com/blog/how-we-unified-configuration-distribution-across-systems-at-uber /&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;有关更多详细信息，请参阅之前的英语博客&lt;/a&gt;）。在此类主机上运行的每个微服务都将依赖 Flipr 客户端通过读取文件缓存来定期引导这些参数规则引擎，从而获得比在线 RPC 架构更高的可用性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2f5c86e6-e578-4ab8-a75e-dae062dcdb43&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;b088ac78-b735-4c9d-88d2-e3ff47ecc8fd&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd3OYBBowDH_C3r1DhN2tu-fEtjHEzLZv_vRtEsIBtk6G0NUszEUquFnpCt5gtTVc4dK1JB_qVY4cKJ7F8LzP-wR ac-Hsq-EsKBANHoSrqECWjOuwotA77-5jTT0R7GJo46YKflS3j-dFkmh2mHQ6AZgG4z?key =MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 8：参数主机代理分布。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d1f41a6a-5b70-44d2-b665-a0ca62124f06&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4a048935-c4fa-4b94-96b6-eac2134b2e36&#34;,&#34;dropCap&#34;:false}&#34;&gt;其中之一新架构的主要变化是使用与常规 Flipr 参数相同的分发层将实验分发到所有主机代理。分布层的这一变化将解锁每个微服务能够在本地读取实验数据，而无需任何 RPC 到参数服务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;63099f92-3738-4998-9b54-fcbe2db2f94e&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;7ee272d4-aa04-46ff-9b6c-45e6ecf33fff&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcKDN5DxoAaBdHAZTOrJUzsoefqhlUErYvD0g7UAyln6llauKDecQnwhH7ul3yoseZyAFP4Ds7CdbQsh-b8ja6QbUmzbMjRvcd EWJoqh3wtL-AK389xl8ey4M6CeYmShCFTQkLWx-zt0s62OHHxoSpBBbc?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 9：实验主机代理分布。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6b0ffc43-1496-4c55-b262-d5f1f46ac85d&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;adfabe5c-dde3-4abd-82c3-c2dd8a677fee&#34;,&#34;dropCap&#34;:false}&#34;&gt;下一步对我们来说，是将参数服务的所有实验特定业务逻辑移植到 &lt;strong&gt;ExperimentPlugin&lt;/strong&gt; 中，&lt;strong&gt; &lt;/strong&gt;它将直接嵌入 Flipr 客户端中。我们打算在向外部微服务公开本地实验评估这一新功能之前，直接在参数服务中试用这一新功能。成为本地实验评估的首批用户的好处是可以进行&lt;strong&gt;严格的影子测试&lt;/strong&gt;，以确保正确性和性能平等。&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f04d2aa4-af87-446b-9270-ee28e8debd82&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;9f4bd2fa-4ae3-406c-98e3-8de044fe66cf&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfX4ur07iZOXrXm_yBZqMT96lUUkK6UtKEDPoysWcVop9gUKKnTb9wNvXHHgEq4TzyoanjOlN-C2qw89l36IkzO IaTRyPlWOqivL6bVigFeR7pCyZ6sXRm8a7zvoIRM9pxVEVCEo_oqtcf3uXBIgxwklble?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 10：中间架构：参数服务中的影子评估。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f6c86324-e4e6-4da9-bf01-fa62d9a5907b&#34;,&#34;opacity&#34;:&#34;alphaa-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9aa41247-e80c-4554-8e8d-8aedda0f1439&#34;,&#34;dropCap&#34;:false}&#34;&gt;彻底之后通过影子测试过程，我们发现并解决了 13 个单独的错误，此旅程的最后一步是允许团队直接选择使用本地实验评估功能，并完全删除对 PrefetchParameters API 的使用。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3c32247a-108e-4d0f-ad93-71e4adcb0330&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;6437ed43-38f5-4090-be47-ed6975e71eb7&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdOxStMOvaEm58g-JwGuIeMTKJ7qgzjAgDFm3BXhDz8eA0-aaV59TajP0JzHWu4-tuvrwuWukh76OXkZ-VBCI4-pIr6 -p5wN1YkhWrG3M1owopRG0jgiGVhaIC_XFJovE5g-Zn0Y1 -B1_bQs60EmLImumzT?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 11：最终架构：在后端微服务中直接使用本地实验评估。&lt;/figcaption &gt;&lt;/图&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b92ed6f5-7e4d-442e-bc53-a1087605e9d3&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ac67e08a-3e62-4ee2-a97c-72c18708e894&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-challenges-amp-learnings&#34;&gt;挑战与学习&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;1b107d54-09cb-488a-b808-2871f6e8a911&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-1-verification-at-scale&#34;&gt;1) 大规模验证&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dad739ab-b35a-4899-b3fc-3fe873f1e031&#34;,&#34;dropCap&#34;:false}&#34;&gt;其中之一构建这一新的本地评估功能的主要挑战是确保其在规模上正确运行。为了做到这一点，我们实现了影子测试功能，以确保进入 V1 遗留评估代码路径的请求采样也会触发一个单独的异步 goroutine 来评估结果并将其与 V2 本地实验评估代码路径进行比较。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0abdd297-983f-4ac0-99e6-9dd68729bfcd&#34;,&#34;dropCap&#34;:false}&#34;&gt;规模此类评估数量巨大（每秒大约 2000 万次评估）并且需要大量采样以防止执行这些比较时参数服务的任何降级。此外，后端、移动设备和网络界面的评估类型差异很大。出于这个原因，我们发现有必要证明我们遇到的每一个不匹配都是可以解释的。最终我们实现了 &gt;99.999% 的匹配率（平均 100,000 次评估中有 1 个可解释的差异）。&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;506c3496-912b-4c65-99e2-1a791658c7bc&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;f0932322-4158-4a84-a4b5-79d79a887fbc&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfkDB3JeA0i5JY19L-Cw7R0uM4WGps4Kd8N6MUC1FkhCWPDOcYZyILjrFgviTGd8a8h6ZakoGVNup_x6zXt98AM7NWLB cHakzuxk2DbvUhmi-kZm_sNiYS9sTi6qNuQBbkz-ZtEDKCP_07nxp5gfnfTtiY?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34; &#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 12：影子评估匹配率。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;34acc681-281b-4bff-a037-e658f65264c7&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;63e623d2-a89a-4d65-9813-028a25e7444d&#34;,&#34;dropCap&#34;:false}&#34;&gt;一些此过程的主要经验包括：&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b9a6d2df-c22c-4063-9fc5-2f86b4606e00&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;参数或实验更新期间的已知差异&lt;/strong&gt; – 每当用户更新值或规则时对于参数或实验的引擎，这可以预见地会导致竞争条件。 V1 评估方法可能使用参数或实验的版本 X，而使用 V2 方法的影子比较可以根据 Flipr 分布的时间使用版本 X+1。这成为系统中可接受的差异的&lt;em&gt;唯一&lt;/em&gt;来源。&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;旧方法中的错误&lt;/strong&gt; – 尽管与旧系统 100% 相同为了实现目标，有时我们决定“向前修复”并解决遗留系统而不是新系统中的小错误和边缘情况。事实证明，这是这次迁移的一个主要好处：除了提供新功能之外，我们还能够修复旧系统中难以检测的边缘情况。&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;竞争条件和超时&lt;/strong&gt; – 与参数或实验更新期间的“已知差异”问题类似，我们意识到一些微妙的竞争条件可能会影响我们的影子评估匹配率。一个例子是设置影子评估有足够的超时时间——它应该模仿为原始评估提供的相同上下文截止日期，以便进行同类比较，不仅是为了逻辑正确性，而且是为了性能。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f33fe512-c94d-4246-9029-230911eb591b&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;c9ffdcb3-3f47-43ee-afe0-1f9ef83790c5&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-2-logging-volume-concerns&#34;&gt;2) 日志量问题&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b478fb6d-949a-4af6-a4c7-1a7b6e5ddff7&#34;,&#34;dropCap&#34;:false}&#34;&gt;显着改进评估速度给实验日志生产和处理带来了风险。评估正在试验的参数可能会生成 Apache Kafka® 的暴露日志。如果参数的评估速度可以加快 100 倍，这意味着日志的生成速度也可能加快 100 倍，并且存在可能压垮生成、分发和处理日志的基础设施的风险。特别是，我们担心由于达到 Kafka 主题的速率限制（字节率或消息速率吞吐量限制）而导致实验日志丢失。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7870c783-6532-4bc4-a380-2d60402a7fc6&#34;,&#34;dropCap&#34;:false}&#34;&gt;一种常见实验可以批量处理大量用户的用例是为涉及数亿用户的电子邮件活动制作营销文案。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;da4724f7-a7ab-4235-ab53-2152cb58de80&#34;,&#34;dropCap&#34;:false}&#34;&gt;缓解这种情况风险我们做了以下操作：&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;373275bf-50a4-4d3c-9445-e57403f31b6d&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;日志量生产的遥测和警报&lt;/strong&gt; – 首先，我们添加了遥测了解每个客户端每秒生成多少实验日志，如果其中任何一个客户端生成的日志数量超过 Kafka 主题总配额的 5%，则会向我们的待命团队发出警报。这使我们能够识别热点并构建解决方案来解决这些问题。&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;内存中 LRU 缓存&lt;/strong&gt; – 因为我们的实验日志处理管道只关心每个用户第一次进入实验的时间，所以我们能够对大量日志进行重复数据删除。我们决定使用高性能内存中 LRU 缓存 (&lt;a href=&#34;https://github.com/hashicorp/golang-lru&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;golang-lru&lt;/a &gt;) 减少冗余日志，最终能够删除大约 80% 的日志。&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;Flipr 客户端库中的参数&lt;/strong&gt; – 能够添加“内部” Flipr 客户端库和 ExperimentPlugin 中使用的参数对于安全开发功能至关重要。为了避免循环依赖，我们有一个单独的机制来在文件缓存引导时加载这些“内部参数”，而不是提供运行时上下文来评估它们。在紧急情况下，我们能够使用这些内部 Flipr 客户端参数完全禁用本地评估，而无需重新部署服务。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e084632c-ca52-43ea-914c-66c1a2493fc6&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;02c9d2f9-6517-4642-a059-f05afd2b2181&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-3-decentralized-evaluation&#34;&gt;3) 去中心化评估&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b1178d8b-d999-41c2-a54d-7de90f53aafe&#34;,&#34;dropCap&#34;:false}&#34;&gt;最后，我们必须面对的新挑战是，实验评估现在作为客户端库的一部分进行分散，而不是单个集中式微服务。基于 RPC 的评估的主要好处之一（尤其是在 Citrus 项目的初始开发阶段）是，核心评估逻辑的任何问题都可以通过重新部署单个微服务轻松恢复。我们鼓励其他人仅在平台处于成熟状态时才进行客户端评估，因为恢复涉及不同版本的客户端库的多个单独的微服务是一项成本更高且耗时的工作。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;361e81b7-1e5d-4889-ac06-591bc50b23e0&#34;,&#34;dropCap&#34;:false}&#34;&gt;一些帮助我们实现这一范式变革的工具包括：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;77b1cb48-f40a-4734-b173-5aeb8dc4ad6e&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;客户端库版本跟踪&lt;/strong&gt; – 即使我们的后端微服务定期部署节奏，情况并非总是如此Uber 的每一个微服务都与最新的客户端代码更改保持同步。客户端版本跟踪遥测使我们能够更轻松地识别使用过时或有错误的 SDK 版本的服务。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5667ba11-eee9-4e70-b2ec-45290073c058&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;b99a72dd-8035-4e21-9267-2fcafd0bd339&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfVlJBJwZVPpoGcaCKELgO40jDpe5EWiteqtyxeHsQsmGWqtpA7bloW2FS15rf9RxXqzKIodyysvMEJywcO0p0G3QfN3am2f E5Sf0ZNGKRMn_pQotJHekJ-hdAFHfdNzsHHyDxRmBRL0kk-6UZPqkyoBZyT?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 13：客户端库版本采用曲线&lt;br&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;948edbc4-172e-4787-93d8-95510b8b870c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;000f094a-7e5c-4109-8ca2-9a2e1499f495&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;批量部署基础架构&lt;/strong&gt; – &lt;a href=&#34;https://www. uber.com/blog/up-portable-microservices-ready-for-the-cloud/?uclick_id=b017bf4f-abd9-415e-aee6-3540742d49ad&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;向上&lt;/a&gt;是 Uber 的平台，用于管理数百万个主机实例上数千个微服务的编排和代码部署。我们能够在最坏的情况下（例如，发布了损坏的客户端版本）添加批量部署服务的功能。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fb45ec4e-a63c-4002-8b8e-b561b81e73eb&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;517dda9d-6a81-432e-92d6-47c286375bef&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-impact&#34;&gt;影响&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ebe4e725-1949-4d2e-94b3-0423cf766e8d&#34;,&#34;dropCap&#34;:false}&#34;&gt;最终，事实证明，新架构在 Uber 的许多用例中取得了成功。实验评估的 p99 延迟下降了 100 倍（从 10 ms 降至 100 µs）。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2e81cbce-46ea-4370-9a75-0f094a8274ed&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;413b8262-4b07-49d8-a66b-42309ff8ba66&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXffLKFTT_m6BdKUfilQq3txDxRV1j5GdeC8BVg6xgwvGvKu8UYjjksYNr2aeW2zZNdKtaDC-ZPt_FHMre0VApVA-oVGIaX 29mTmtOyeeIOa07pRjcOouC9ufQP8qxPJigzeBJHvySR3RLjB1rhVOKL6cA4?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 14：实验评估 p99 延迟。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;419c8a90-862b-4320-915b-bc744db38550&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fc19a4a6-e449-4348-8684-45c1f05ae69e&#34;,&#34;dropCap&#34;:false}&#34;&gt;初始之后在 2023 年下半年发布此功能后，我们战略性地将部署目标锁定在对实验评估贡献最大的 Go 微服务上，迄今为止已实现了 100 多个服务和近 70% 的实验流量。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;53d578f9-0a25-4f26-98dd-dd857144bcfe&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;d816a793-d275-4ced-bb88-91480f12ef04&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcsRkV5JjP_DY03MxPQzoMgPiyfiQsl9eH5lIXsCiQi4GOsHBNlWIEgMH-4LpzKfna6910eoXhmpMFaxQ8W5gqB7adZxOsJ GBHt8Ln3Pa2M9Kifn8Ro22mP_TfWBWGeEVoQaHER9b26AXSRR2o3Ob0zkWo?key=MWSPikVkL_FOThWVVOyYBw&#34; alt=&#34;&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 15：本地实验评估采用 KPI。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2894e647-1d06-42b4-8577-05756c90f12c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4bc26680-a0f4-46a8-8b1f-1ebcac155072&#34;,&#34;dropCap&#34;:false}&#34;&gt;此外，我们我们已经能够观察到 Uber 应用程序中面向用户的功能有一些显着的改进。例如，UberEats 搜索建议索引的端到端后端延迟减少了 20%（p99 延迟从 250 毫秒减少到 200 毫秒），这转化为移动应用程序体验的显着改善。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;小时数据-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9f89216c-cfb1-40b7-9a1e-fa7f471f3470&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp -块分隔符具有 alpha 通道不透明度&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;99d7f75a-094a-49ad-9267-f604b51f3640&#34;,&#34;alt&#34; ：&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXer56jkW2Kdvch_24Hp6K4dmLJ73CxFiZJ2XI2VfjL6XB527vo57pVxm40r0i4sMEMNesH5jKscf-nxZy3XDMawB- bTM4dbHyvXTTOMMj_RlFOcjs2XHhuNt7qTXzhQwlO9GK-Tpg-LUglZ6KgpsEUTBGPj?key=MWSPikVkL_FOThWVVOyYBw&#34; alt =&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 16：UberEats 商店索引服务本地实验评估的影响。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;dc9e1900-7d44-417b-abbc-451d9175de7c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5373b880-fe5b-4cbd-bcab-b37016f5eb60&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-next-steps&#34;&gt;后续步骤&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c02969d9-5961-4721-b5a2-81d0053bb65d&#34;,&#34;dropCap&#34;:false}&#34;&gt;这第一次迭代本地实验评估是针对使用 Golang 的服务，它服务于我们的大部分后端实验。下一步计划还包括 Java，这是 Uber 支持的另一种主要后端服务语言。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0d0efe9b-3e73-412e-a887-909d71f478b5&#34;,&#34;dropCap&#34;:false}&#34;&gt;除此之外，有计划和正在进行的工作将复杂性从客户端转移到服务器端。复杂的客户端比服务器端的更改更难部署，并且使用两种或多种语言的复杂客户端会增加重复工作和出现分歧的风险。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d4ab51b2-7942-42b9-8f4e-7a03f8ebe585&#34;,&#34;dropCap&#34;:false}&#34;&gt;更具表现力语言将使我们能够将部分复杂性转移到服务器上。系统可以在服务器上解析此逻辑，并以更具表现力的客户端语言输出更简单的程序，以供 Golang 和 Java 执行，而不是客户端使用 Golang 和 Java 的 ExperimentPlugin 模式来解析客户端上的实验规则引擎。客户。这将导致更精简的客户端和更多的服务器端控制。详细信息将成为未来博客文章的主题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;40e3d864-d6f9-439b-9674-e426a5957e05&#34;,&#34;不透明度&#34;:&#34;alpha-channel&#34;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;b27d423e-1886-4b9b-8f67-c6f16111d984&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-conclusion&#34;&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1d2f57e6-05d6-4aaa-8aa0-5ba9bb87fde7&#34;,&#34;dropCap&#34;:false}&#34;&gt;总而言之，我们用一项新功能替换了基于 RPC 的实验系统，该功能通过读取分发到所有主机代理的文件缓存来在本地评估实验规则引擎。为实验堆栈添加本地评估有助于改进以下方面：&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5f8d1b57-583d-42fd-9182-e7343956b8d4&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;延迟：&lt;/strong&gt;评估延迟下降了 100 倍（p99 10 毫秒到p99 100 µs)，释放新的集成机会&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;可靠性&lt;/strong&gt;：我们消除了单个高流量上的单点故障微服务，用更可靠的分布式配置管道取代它&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;开发人员生产力&lt;/strong&gt;开发人员不再需要担心批量预取参数的问题请求并缓存它们以避免 RPC 开销，从而降低代码的复杂性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;308d3a47-41fc-4d1c-a863-3b4567650527&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们学到了很多该计划的经验教训，对于其他尝试构建内部实验平台或对其现有平台进行大规模更新的人来说可能有用：&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul data-wp-block-name=&#34;core/list&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e9facbf2-f63d-4c3c-9712-ad717b80a989&#34;,&#34;ordered&#34;:false,&#34;values&#34;:&#34; “}”类=“wp-block-list”&gt;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;从集中化开始&lt;/strong&gt; – 创建一个新的实验平台，通过 RPC 返回评估结果建议调用集中式微服务，尤其是在快速新功能开发的初期&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;成熟时去中心化 - &lt;/strong&gt;当平台成熟时，切换到去中心化库架构带来了许多好处（如上所列）&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;库的安全开发&lt;/strong&gt; – 为了使（去中心化）库开发更安全，利用cli 中的轻量级功能标记等概念ent 库，具有强大的遥测和警报功能，并跟踪跨微服务的库版本使用情况非常重要&lt;br&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li data-wp-block-name=&#34;core/list-item&#34; data-wp-block=&#34;[]&#34;&gt;&lt;strong&gt;更快的评估意味着更快的日志发送&lt;/strong&gt; – 确保实验日志基础设施在转向客户端、低延迟评估架构时，能够处理增加的容量至关重要&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;62f1a658-4de0-451a-9c4c-50a74ed1ffb4&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7914a2a8-41f9-4444-a1f7-a7a8d10f02bf&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-acknowledgments&#34;&gt;致谢&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;07b5e14d-8520-40d7-a7ff-a10331d953c9&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;如果没有实验团队、Flipr 团队和试点客户团队（乘客体验、广告投放平台和Earner Incentives）帮助我们发布了 Go 服务的本地实验评估！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;26f7463a-272c-45ad-9add-cbdaf679c43b&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;Apache®、Apache Kafka、Kafka 和相应的徽标是 Apache Software Foundation 在美国和/或其他国家/地区的注册商标或商标。使用这些标记并不暗示 Apache 软件基金会的认可。&lt;br&gt;封面图片由 Iffany 通过 &lt;a href=&#34;https://pixabay.com/illustrations/alchemical-alchemy-magician-witch-8848871/&#34; 提供target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Pixabay&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a24c4410-ca5c-4518-acaa-63d94cad84c6&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;/p &gt;</description>
      <pubDate>Thu, 03 Oct 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>【QueryGPT – Natural Language to SQL Using Generative AI】QueryGPT – 使用生成式 AI 将自然语言转换为 SQL</title>
      <link>https://www.uber.com/blog/query-gpt/</link>
      <description>【&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;e735bd6b-558b-4301-a92b-9fba35e6bc65&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eb484efe-378c-40e0-af57-14bd8a10b396&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;SQL is a vital tool used daily by engineers, operations managers, and data scientists at Uber to access and manipulate terabytes of data. Crafting these queries not only requires a solid understanding of SQL syntax, but also deep knowledge of how our internal data models represent business concepts. QueryGPT aims to bridge this gap, enabling users to generate SQL queries through natural language prompts, thereby significantly enhancing productivity.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f224d2da-b02d-4ff2-b219-0fdc1f5cab39&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;QueryGPT uses large language models (LLM), vector databases, and similarity search to generate complex queries from English questions that are provided by the user as input.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2a651aaf-0a58-4385-b7da-05a4eeb8d4e4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This article chronicles our development journey over the past year and where we are today with this vision.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b60d0020-1daa-4a5e-97a6-98f869f533b4&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-motivation&#34;&gt;Motivation&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;53bb688c-ff1f-4bb8-a317-e04e6185daa5&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcC2OH7JIyWjT68dWjQgaxz8SbmhQVz-ARB4M6bOYRV0bIxLS7ellpYioGaYm7PewbHzme4l2r1rqwellO74eax1CyGrRPtbAY17X1aUQDx9Lp00mLsgWIOW9q6fJzH8U54NpxlTFEdbEA_QITC755FAAsH?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 1: Query Authoring Process.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;baefce90-b4db-4613-95b6-d55bbe7b3f4c&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f5a98fa3-88bc-494c-833c-892a333b2748&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;At Uber, our data platform handles approximately 1.2 million interactive queries each month. The Operations organization, one of the largest user cohorts, contributes to about 36% of these queries. Authoring these queries generally requires a fair amount of time between searching for relevant datasets in our data dictionary and then authoring the query inside our editor. Given that each query can take around 10 minutes to author, the introduction of QueryGPT, which can automate this process and generate reliable queries in just about 3 minutes, represents a major productivity gain.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;025f314b-d91a-4eab-9e39-223a072900a7&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;If we make a conservative estimate that each query takes about 10 minutes to author, QueryGPT can automate this process and provide sufficiently reliable queries in about 3 minutes. This would result in a major productivity gain for Uber.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a9b8789e-02b4-4aa6-9888-946c91bfd0df&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1096044,&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;b1b68651-445c-4842-a62b-a8df8ab6c7cb&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;429&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-1-querybuilder-usage-17265653056445-1024x429.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1096044&#34; style=&#34;width:700px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-1-querybuilder-usage-17265653056445.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-1-querybuilder-usage-17265653056445.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-1-querybuilder-usage-17265653056445.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1276,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-1-querybuilder-usage-17265653056445.jpeg 1276w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 2: Querybuilder Usage.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ca26529d-ff05-4a61-adf8-800507582c78&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;id&amp;quot;:1096046,&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;sizeSlug&amp;quot;:&amp;quot;large&amp;quot;,&amp;quot;linkDestination&amp;quot;:&amp;quot;none&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;48d4a1db-0ee0-4040-810f-2b4111ffbf0b&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;387&#34; src=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=2160,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-2-querygpt-impact-17265653352592-1024x387.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1096046&#34; style=&#34;width:700px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-2-querygpt-impact-17265653352592.jpeg 1024w, https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-2-querygpt-impact-17265653352592.jpeg 300w, https://blog.uber-cdn.com/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-2-querygpt-impact-17265653352592.jpeg 768w, https://blog.uber-cdn.com/cdn-cgi/image/width=1272,quality=80,onerror=redirect,format=auto/wp-content/uploads/2024/09/figure-2-querygpt-impact-17265653352592.jpeg 1272w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 3: QueryGPT Impact.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;97932bcf-6d95-412f-8ea8-1d286dbb0f78&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6581dfd0-5bfd-48c1-b8e7-a00a9a44c0aa&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-architecture&#34;&gt;Architecture&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;aa0702df-39bb-4e7c-8eb9-d5435da45c75&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;QueryGPT originated as a proposal during Uber’s Generative AI Hackdays in May 2023. Since then, we have iteratively refined the core algorithm behind QueryGPT, transitioning it from concept to a production-ready service. Below, we detail the evolution of QueryGPT and its current architecture, highlighting key enhancements..&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cf501d3d-beaf-4ad6-930f-219adc58ff82&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We’ve described below our current version of QueryGPT. Please bear in mind that there were about 20+ iterations of the algorithm between the 2 detailed below and if we were to list and describe each, the length of this blog article would put Ayn Rand’s &lt;em&gt;Atlas Shrugged&lt;/em&gt; to shame.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a980128d-4d7f-4361-9cdc-4f0a5d55f728&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;a306c97a-e64b-4f92-8b70-79aaca67cf84&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-hackdayz-version-1&#34;&gt;Hackdayz (version 1)&lt;/h3&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;e07c37f7-b2ca-45c9-af49-d2e559f91221&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdBuoSw4-YUqiwCVg-oD6Ov6Cx9PCnOCQKikBooaMttGGhDJAbsmJU19_bhlIZGE-lTX2YVZXaejXc3nuJoKVnuP8Fhq6bySTfmgn2-Srxhsa0fPxWTyPMshWKtrfoSilJnXGXQ5WL137-t0rf3-EdYUdyA?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 4: QueryGPT Hackdayz version&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;16e124f2-00b4-4145-98e2-3c17b14d6873&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;69c8f8d1-8176-43c8-8d53-ea406e49c0df&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The first version of QueryGPT relied on a fairly simple RAG to fetch the relevant samples we needed to include in our query generation call to the LLM (Few Shot Prompting). We would take the user’s natural language prompt, vectorize it and do a similarity search (using k-nearest neighbor search) on the SQL samples and schemas to fetch 3 relevant tables and 7 relevant SQL samples.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e68f2468-74cc-4c2b-82a0-93e73ad70643&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The first version used 7 tier 1 tables and 20 SQL queries as our sample data set. The SQL queries were supposed to provide the LLM guidance on how to use the table schemas provided and the table schemas provided the LLM information about the columns that existed on those tables.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1c42885a-f676-434b-a7de-3587222251a5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For example, for a tier 1 table, &lt;em&gt;uber.trips_data&lt;/em&gt; (not a real table), this is what the schema would look like:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e2e04fd9-2c4f-456c-b979-6b074618d4d8&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;685394a5-0bce-4fda-bcb7-3c9f526e9ff8&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXcv35PJRLqPvFrcSQUwvxQqutjd0mT_vauGDqqY5CESrguVm845_6Ife4azUiuhodUKRND7WNwdOIcnraAGEfco5b4puw1uC3a-hQzYGBGYIZul3KD0MB7zcrbgJG2pCE8uItfdre19hVCd6WxbjFNNX1-i?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 5: uber.trips_data table.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1707de5e-8545-4535-8831-14ff942e11ce&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;11f17948-81df-4982-badd-dbca4261bdac&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To help the LLM understand internal Uber lingo and work with Uber datasets, we also included some custom instructions in the LLM call. Shown below is a snippet of how we wanted the LLM to work with dates:&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;a42b8d62-db59-4ac9-a921-30e012a8b378&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeZMYZI9LdwW_GU31hqaswX7jMwtaQZL0Vuyo2ExTpUo-MKpeN3Qj_q14-aEgueHMqT9JRHryH6fWssismaF2N768dmaD9KE6xZQhO4Fyb-srNa1YoGNfiyTAh-GTEYWcpKTsVfp_8US8jpKkiAsRejPsR1?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 6: Custom Instructions for handling dates in Uber datasets.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ab0aed50-802e-4e17-95f2-ae6aedb3e5c2&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a09c0daf-d5f1-4fea-be38-02ec7656f366&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We would wrap all the relevant schema samples, SQL samples, user’s natural language prompt, and Uber Business instructions around a system prompt and send the request to the LLM.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;11e599d5-2a2c-42b1-b0ad-310cb1de7b35&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The response would include an “SQL Query” and an “Explanation” of how the LLM generated the query:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1c3f9567-ad6f-40f9-b8bc-80a94f3eb950&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;7b817659-3a61-49a3-b0fb-9b7c5c1505c3&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXega7yHLmgA8wlGBdnBqbco16GQV7SeKdOCtUbGD1E1ZhuglOZ0P47UDHXvj99RDm-ndeh1GgWWMxKQx8kDKZZYZLEryCFFSEi3pGrUF1vMD9RSzrbMNHta6SZ38hXddp8tHy-iSHccFYFgmrInQKlAfc8?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 7: Generated SQL with Explanation.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c42500bc-5a08-440b-983b-843e36e3269b&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;84b98147-4a93-4ddd-9098-9b6f3e2371e1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;While this version of the algorithm worked well for a small set of schemas and SQL samples, as we started to onboard more tables and their associated SQL samples into the service, we started seeing declining accuracy in the generated queries.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0df8653a-d050-48c7-96db-3f304a03369d&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;feeb6cb0-3a63-4949-8813-c1d57306a63f&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-better-rag&#34;&gt;Better RAG&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8c219406-9327-41b9-80fd-671f5c74f2eb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Doing a simple similarity search for a user’s natural language prompt (“Find the number of trips completed yesterday in Seattle”) on schema samples (&lt;em&gt;CREATE TABLE&lt;/em&gt;…) and SQL queries (&lt;em&gt;SELECT a, b, c FROM uber.foo &lt;/em&gt;…) doesn’t return relevant results.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;ed25814d-9f75-4fba-8bd1-dc78df2dd7b2&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-understanding-user-s-intent&#34;&gt;Understanding User’s Intent&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1e71a70f-8c29-4964-80ec-99d74b347ba0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Another issue we found was that it’s incredibly challenging to go from a user’s natural language prompt to finding the relevant schemas. What we needed was an intermediate step, which classifies the user’s prompt into an “intent” that maps to relevant schemas and SQL samples.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;02705018-fca5-4181-a29e-474bdc114c29&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-handling-large-schemas&#34;&gt;Handling Large Schemas&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;82be2c49-fc74-4aff-81b5-96f5c48123c1&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We have some really large schemas on some Tier 1 tables at Uber, with some spanning over 200 columns. These large tables could use up as much as 40-60K tokens in the request object. Having 3 or more of these tables would break the LLM call since the largest available model (at the time) only supported 32K tokens.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a461a6ed-9e9e-43d6-88ca-8677920dc47d&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;651e011c-62e0-434d-bf63-5aea7e878acd&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-current-design&#34;&gt;Current Design&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;77cb3666-0e69-4200-89b2-02b7c85c5b3a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The diagram below shows the current design of QueryGPT that we’re running in production. The current version includes many iterative changes from the first version.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;f0c52e7a-e247-4213-bb8b-8a6d1613ce65&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXctJlWIn-wn89ptfWpK2OrhH9sVIkP5OqSthEr21ZoybaECaxE5GATRUNJX8ElX1ODGz1N2JHcg0sYjN1QXIi9T-_Ex6VjVUunGJ8s5SW2D5gaEUme4Skh3NrVqjmIazQZPJ17XhJ2JJwo3FfqpLh8JD9j4?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 8: QueryGPT (current).&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c6320027-f65a-476a-903e-367a1a1300ac&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;2e3c3d0c-e4e8-42c9-91a4-6a44c74d54f2&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-workspaces&#34;&gt;Workspaces&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1ed49b96-6676-4e81-bf7d-0c556fb024bc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In our current design, we introduced “workspaces,” which are curated collections of SQL samples and tables tailored to specific business domains such as Ads, Mobility, and Core Services. These workspaces help narrow the focus for the LLM, improving the relevance and accuracy of generated queries.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;621f9d8c-b8f7-459b-8a34-cf2c979fbcd4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We’ve identified some of the more common business domains inside Uber and created those in the backend as “System Workspaces.”&amp;nbsp; Mobility is one of these system workspaces that we identified as foundational domains that could be used for query generation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;40ccaf2a-b154-4919-a164-6b5bb7267f30&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;&lt;em&gt;Mobility&lt;/em&gt;&lt;/strong&gt; : Queries that include trips, driver, document details, etc.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/table&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fc77e064-4516-45a8-bac0-a244ae55e605&amp;quot;,&amp;quot;hasFixedLayout&amp;quot;:true,&amp;quot;head&amp;quot;:[],&amp;quot;body&amp;quot;:[],&amp;quot;foot&amp;quot;:[]}&#34; class=&#34;wp-block-table&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Write &lt;strong&gt;a&lt;/strong&gt; query to find &lt;strong&gt;the&lt;/strong&gt; number &lt;strong&gt;of&lt;/strong&gt; trips that were completed &lt;strong&gt;by&lt;/strong&gt; Teslas &lt;strong&gt;in&lt;/strong&gt; Seattle yesterday&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;96a999fa-1a1d-483a-a2b3-2289e2eaf41c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Along with these, we also shipped 11 other system workspaces, including “Core Services,” “Platform Engineering,” “IT,” “Ads,” etc.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;03ab4f6d-f230-419f-b99d-e9064462e72e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We also included a feature that allows users to create “Custom Workspaces” if none of the existing system workspaces fit their requirement and use those for query generation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ec194bba-bc61-46c2-91de-f269f31851d3&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;ad296232-7118-4e6d-8353-d16b35e40f2b&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-intent-agent&#34;&gt;Intent Agent&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9c9515c9-371b-46a4-a087-c9df6f41e7cb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Every incoming prompt from the user now first runs through an “intent” agent. The purpose of this intent agent is to map the user’s question to one or more business domains/workspaces (and by extension a set of SQL samples and tables mapped to the domain). We use an LLM call to infer the intent from the user question and map these to “system” workspaces or “custom” workspaces.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a97a543b-072c-4538-b64f-f4217acf4c22&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Picking a business domain allowed us to drastically narrow the search radius for RAG.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;f8a6a800-3138-4111-9cc8-d2f736961781&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;996e7798-8d39-4add-adec-dc7a6ee4cdb2&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-table-agent&#34;&gt;Table Agent&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8ab1add6-aa91-419e-9287-0d5549a95170&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Allowing users to select the tables used in the query generation came up as feedback from some users who saw that the tables that were eventually picked by QueryGPT were not correct.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6d2a216b-7995-463c-af9f-ffe50188b17e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To address this feedback, we added another LLM agent (Table Agent) that would pick the right tables and send those out to the user to either “ACK” or edit the given list and set the right tables. A screenshot of what the user would see is shown below:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;303e6130-d5f0-44fa-8489-012c7f4cca45&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;160a0a6b-69db-4f16-ad46-7c88fd4e8c10&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe5HZ4tiL_nVjtwxiqbzBEliN6R1jI6h5GoGhK0_DGBWp4d46ohXoYpgj0Pcud6Jjz-W3EiwsvH23i-XoyCpTbizCa8xtNEDclrJ8HqMvXiZGgl1OlF_94PdLqons1RdiTBbJxbMYERhVaq-wvxIon-YJRA?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 9: Table Agent.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;09fefa62-872a-420b-bb86-705b08a571b2&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;68044f0d-6fc4-4925-8384-178a1785da01&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The user would either select the “Looks Good” button or edit the existing list and modify the list of tables to be used by the LLM for query generation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;28f6a556-b474-4c60-81a1-ea13dee2dbe0&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;35299468-83bd-4b44-8960-b02078d580fc&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-column-prune-agent&#34;&gt;Column Prune Agent&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5c36fd6d-2fe8-4fc7-bac0-7cf5076b3e11&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Another interesting issue we ran into after rolling QueryGPT out to a larger set of users was the “intermittent” token size issue during query generation for some requests. We were using the OpenAI GPT-4 Turbo model with 128K token limit (1106), but were still seeing token limit issues because some requests included one or more tables that each consumed a large amount of tokens.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7d0c0540-504f-48bb-872e-02c34cf9caff&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To address this issue, we implemented a “Column Prune” agent, wherein we use an LLM call to prune the irrelevant columns from the schemas we provided to the LLM.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;6c14bed0-9cce-43fb-b02b-5cbcff2dae18&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Here’s what the output from the agent looks like:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b7c5982b-fadc-439a-a1cd-cee31f8fdcf8&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;6087e6ad-9d13-455e-bb79-74c74e6c9a96&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXeKKZe_ie-slfFAA0v-BO7q8FPx370zQT1sKhHDur281yeKZMA6yvQ4QNWFWEftBzY8Zaq1nguEbE3fLbSOMoNrSN424rVb_L4pdZpB4iAjifXAHTNk5Q1UsZtlGFJxWJec5BAGCXMH71ZwbTrPQ0HEzTEQ?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 10: Column Prune Agent&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;2d80f47b-f517-4405-bc87-1a542c1db11e&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;22d287a2-8140-478c-a43b-25505258b600&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The output would include a skinnier version of each schema that we needed for query generation. This change massively improved not just the token size and by extension the cost of each LLM call, but also reduced the latency since the input size was much smaller.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;ad62c2da-2025-4f62-b4ed-a5c1cfa0d924&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;a3320a6c-fcf8-4627-802b-e5aeb17afa16&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-output&#34;&gt;Output&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fefd8ccf-6833-4250-a03c-110d8ba7db27&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;No changes were made to the output structure with the current design. The response would include a SQL Query and an explanation from the LLM about how the query was generated similar to what’s shown in Figure 7.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5a000f5e-295b-43cd-87d3-7c834c30bc80&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;49809270-e565-48fc-8734-352be50398ad&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-evaluation&#34;&gt;Evaluation&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c67b1093-265c-48ee-a005-0813be377523&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;To track incremental improvements in QueryGPT’s performance, we needed a standardized evaluation procedure. This enabled us to differentiate between repeated vs. anomalous shortcomings of the service and ensure algorithm changes were incrementally improving performance in aggregate.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;5901fe4e-9d5c-4646-a301-c8c02428f739&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-evaluation-set&#34;&gt;Evaluation Set&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e6b633b4-8f3d-4ffe-9290-ab4545fdaaf4&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Curating a set of golden question-to-SQL answer mappings for evaluation required manual upfront investment. We identified a set of real questions from the QueryGPT logs, and manually verified the correct intent, schemas required to answer the question, and the golden SQL. The question set covers a variety of datasets and business domains.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;6d60db9c-2fcd-4627-a2b2-d8a43562b6fa&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-evaluation-procedure&#34;&gt;Evaluation Procedure&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b0fca7e2-0aae-46cd-86df-60110f462749&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We developed a flexible procedure that can capture signals throughout the query generation process in production and staging environments using different product flows:&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;73fe5693-aa64-428d-a14d-598bc1dfa0b8&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/table&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9c2693aa-c1fc-4b4a-aed6-5174495a9f44&amp;quot;,&amp;quot;hasFixedLayout&amp;quot;:true,&amp;quot;head&amp;quot;:[],&amp;quot;body&amp;quot;:[],&amp;quot;foot&amp;quot;:[]}&#34; class=&#34;wp-block-table&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Product Flow&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Purpose&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Procedure&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Vanilla&lt;/td&gt;&lt;td&gt;Measures QueryGPT’s baseline performance.&amp;nbsp;&lt;/td&gt;&lt;td&gt;Input a question.QueryGPT infers the intent and datasets needed to answer the question.Generate the SQL using inferred datasets and intent.Evaluate intent, datasets, and SQL.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Decoupled&lt;/td&gt;&lt;td&gt;Measures QueryGPT performance with the human-in-the-loop experience. Enables component-level evaluation by removing dependencies on performance on earlier outcomes.&lt;/td&gt;&lt;td&gt;Input a question, intent, and datasets needed to answer the question.QueryGPT infers the intent and datasets.Generate the SQL using the actual (not inferred) intent and datasets.&amp;nbsp;Evaluate intent, datasets, and SQL.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;844d8d03-39be-48ba-810d-ed59b92f9ce4&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;37b06925-8cea-40b2-bf69-c315b21c995e&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For each question in the evaluation, we capture the following signals:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;1c6015b5-b225-4d87-a67c-5d2310ddac62&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Intent:&lt;/strong&gt; Is the intent assigned to the question as accurate?&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7be425df-7a17-4112-8e11-3e2a36e3bba0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Table Overlap:&lt;/strong&gt; Are the tables identified via Search + Table Agent correct? This is represented as a score between 0 and 1. For example, if the query needed to answer the questions “How many trips were canceled by drivers last week in Los Angeles?” required the use of [&lt;em&gt;fact_trip_state&lt;/em&gt; , &lt;em&gt;dim_city&lt;/em&gt;], and QueryGPT identified [&lt;em&gt;dim_city, fact_eats_trip&lt;/em&gt;], the Search Overlap Score for this output would be 0.5, because one of the two tables required to answer the question was selected.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;66f0f059-dfc4-407c-b614-bf81837c9af5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Successful Run:&lt;/strong&gt; Does the generated query run successfully?&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;9f3cef08-b804-42f2-bc5c-cf7d26d5113b&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Run Has Output:&lt;/strong&gt; Does the query execution return &amp;gt; 0 records. (Sometimes, QueryGPT hallucinates filters like WHERE status = “Finished” when, the filter should have been WHERE status = “Completed” resulting in a successful run with no output).&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;52e39c00-7d1e-4771-9541-c57154014240&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;&lt;strong&gt;Qualitative Query Similarity:&lt;/strong&gt; How similar is the generated query relative to the golden SQL? We use an LLM to assign a similarity score between 0 and 1. This allows us to quickly see if a generated query that is failing for a syntactic reason is on the right track in terms of columns used, joins, functions applied, etc.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b48fa8e3-54ba-4fc2-bae2-6b22055eb2eb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We visualize progress over time to identify regressions and patterns revealing areas for improvement.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c2fb41ee-fbb6-42ec-800f-3317ae9302dd&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The figure below is an example of question-level run results enabling us to see repeated shortcomings at individual question level.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cbdd3499-3477-4b41-ac0c-33ec54373213&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;348px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;de1a4f25-f7cc-48d2-a77e-c6950d392f97&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXccdOmsynkpZ4KcgAN-f4lTMXzKGtojslRD5cszq2UdwOBCtdpERozd51i1FnmN00SHT4tdvAT6ZivKymWIIrhfTne8fUXkS_tZIHgliaohNDBATY8jOSap-pNBj4yQIT_0GHEOSn8S6g3YeIr2vNffZ8-I?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:348px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 11A: SQL Query Evaluation.&lt;br&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;46c7c91e-f8e1-4576-be48-edea51d4aad4&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;18fee675-385f-4742-9938-d3f57ad7330b&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc1vtFiN4pyNtoVJc8y2T_o8bbHQX7-UG0ioS7rkAGVih7uWAbBytShk37OKfjVmu0UsVC9ThlEdIetEPKgj8c0x4MCssyApV--ulZVzmG3ZiQWE3GpHWjRXOhxAk0rMryNyufAhySPzi35dcqwZcQKl86A?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 11B: SQL Query Evaluation across environments.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;33cd3465-0d7b-4d11-91a5-0b697305044f&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;c7b817aa-4d4e-49e5-a71d-6dc74fa7b72a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;For each question, we can view the generated SQL, reason for the error, and related performance metrics. Below is a question whose generated query is regularly failing because it is not applying a partition filter in the where clause. However, according to the qualitative LLM-based evaluation, the generated SQL is otherwise similar to the golden SQL.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;45360b20-3f94-4b57-99d0-60b021998a1a&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;176a0706-d32f-44fe-b70f-14117127e67b&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd-05KYpUrcOPqKxNRoo6TT4P-q4nPo1AR7Bt4oceFEm9dJy2tz9g5GJbEqT0qpf_hbJaGZLBpqUBVLH_dqQ1GGW8xXLfzVvdIIIHoC2mGc8C23nuC2kWK6bqldi-mgZoxNvlO6JbO_wV0R2QnklbW-Dif2?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 12: SQL Evaluation Stats.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;04b0f0e6-274e-48a9-9f1d-d8938364a401&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;67682112-acbf-408d-b753-5ca6e49f32f5&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We also aggregate accuracy and latency metrics for each evaluation run to track performance over time.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;36078627-a789-48a7-bf5f-b6e7d032bb45&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&amp;quot;width&amp;quot;:&amp;quot;700px&amp;quot;,&amp;quot;height&amp;quot;:&amp;quot;auto&amp;quot;,&amp;quot;align&amp;quot;:&amp;quot;center&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;0ca65ba1-9648-4c31-ae98-5ced8fe98681&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;&amp;quot;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXdYG0RGLFMXqT8AHrOcUZsTFnWlA02vxOPEAIasdfbzJhFisn2-fGO3ahW9UZbWpL7L4u1qjsdzEr60UgY8ZQPYirtm71M-bwA_WX3sxw-3V5CoQh1KTo7j7dXMdO7Vkbyp9JztGWuP99uj43ArIDMawyk?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Figure 13: SQL Evaluation criterions.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;e52fb602-16a2-41e3-9cf4-cdbe5ecf0cb1&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;fadd0c17-a50c-4e2e-ad6b-a745d9df8378&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-limitations&#34;&gt;Limitations&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;49a7ec20-24a0-47b4-9c0a-26342195b744&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Due to the non-deterministic nature of LLMs, running the same evaluation with no changes to the underlying QueryGPT service can result in different outcomes. In general, we do not over-index decisions based on ~5% run-to-run changes in most metrics. Instead, we identify error patterns over longer time periods that can be addressed by specific feature improvements.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;fe896d92-3cc7-48fd-82e5-c8c35b597330&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Uber has hundreds of thousands of datasets with varying levels of documentation. Thus, it is impossible for the set of evaluation questions to fully cover the universe of business questions that a user may ask. Instead, we curated a set of questions that represent the current usage of the product. As we improve accuracy and new bugs arise, the evaluation set will evolve to capture the direction of the product.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;eb9e9b7a-b950-4310-9a65-ca866145d51a&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;There is not always one correct answer. Often, the same question could be answered by querying different tables or writing queries in different styles. By visualizing the golden vs. returned SQL and using the LLM-based evaluation score, we can understand if the generated query is written in a different style, but has a similar intent related to the golden SQL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;d654b0fa-3911-4d5a-b063-a08a256da9de&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;a48db9ec-daee-4411-89f9-f1a08e7d023f&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-learnings&#34;&gt;Learnings&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;3cab4b48-6ad3-4a4a-9f31-0f236019b5ba&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Working with nascent technologies like GPTs and LLMs over the past year allowed us to experiment and learn a lot of different nuances of how agents and LLMs use data to generate responses to user questions. We’ve briefly described below some of the learnings from our journey:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;cac6df94-1908-4171-ae84-1f933148d1c4&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-llms-are-excellent-classifiers&#34;&gt;LLMs are excellent classifiers&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7ad4a5d4-d72f-4c36-952a-0bed88699fac&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Our intermediate agents that we used in QueryGPT to decompose the user’s natural language prompt into better signals for our RAG improved our accuracy a lot from the first version and a lot of it was due to the fact that the LLMs worked really well when given a small unit of specialized work to do.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;00b9e128-c899-4b26-ab48-77ac14026e96&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The intent agent, table agent, and column prune agent each did an excellent job because they were asked to work on a single unit of work rather than a broad generalized task.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;2c2c5240-a771-4f89-abf5-28321ce28330&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-hallucinations&#34;&gt;Hallucinations&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;18098f4a-1ca8-4a96-a6e2-988fc58813cc&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;This remains an area that we are constantly working on, but in a nutshell, we do see instances where the LLM would generate a query with tables that don’t exist or with columns that don’t exist on those tables.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;7920ad06-2623-4706-a0d0-c9ee71cf5012&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;We’ve been experimenting with prompts to reduce hallucinations, introduced a chat style mode where users can iterate on the generated query and are also looking to include a “Validation” agent that recursively tries to fix hallucinations, but this remains an area that we haven’t completely solved yet.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;0a5fcc9b-322f-4a6d-a79a-6dadf80fccf7&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-user-prompts-are-not-always-context-rich&#34;&gt;User prompts are not always “context”-rich&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;546499a4-c289-478b-adfc-31edd877bdbe&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Questions entered by the users in QueryGPT ranged from very detailed with the right keywords to narrow the search radius to a 5 word question (with typos) to answer a broad question that would require joins across multiple tables.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;33186177-6cb8-42ae-a1cd-5a959a95203c&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;Solely relying on user questions as “good” input to the LLM caused issues with accuracy and reliability. A “prompt enhancer” or “prompt expander” was needed to “massage” the user question into a more context-rich question before we sent those to the LLM.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:3,&amp;quot;hash&amp;quot;:&amp;quot;9f670540-0564-4c3a-a1dc-c263263f0220&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-high-bar-for-sql-output-generated-by-the-llm&#34;&gt;High bar for SQL output generated by the LLM&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5348bcb2-8b9b-4332-b614-2e87542629bb&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;While this version of QueryGPT is helpful for a broad set of personas, there is definitely an expectation from many that the queries produced will be highly accurate and “just work.” The bar is high!&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;4f6a07df-d622-4adb-949d-b931e4746811&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;In our experience, we found that it was best to target and test with the right persona(s) as your initial user base when building a product like this.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;0991e158-aca7-4941-bf2a-5c611ca9d4c9&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;level&amp;quot;:1,&amp;quot;hash&amp;quot;:&amp;quot;02630760-d3f5-4166-bf76-7442565ad923&amp;quot;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;b189a3fd-91b7-4801-a5fb-c3f9d5b22614&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;The development of QueryGPT at Uber has been a transformative journey, significantly enhancing productivity and efficiency in generating SQL queries from natural language prompts. Leveraging advanced generative AI models, QueryGPT seamlessly integrates with Uber’s extensive data ecosystem, reducing query authoring time and improving accuracy, addressing both the scale and complexity of our data needs.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;19347b08-51ca-4d8c-ad2a-915513abeff0&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;While challenges such as handling large schemas and reducing hallucinations persist, our iterative approach and constant learning have enabled continuous improvements. QueryGPT not only simplifies data access but also democratizes it, making powerful data insights more accessible across various teams within Uber.&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;cb86e603-2f0c-41fe-9d46-cc278cddf8cf&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;With our limited release to some teams in Operations and Support, we are averaging about 300 daily active users, with about 78% saying that the generated queries have reduced the amount of time they would’ve spent writing it from scratch.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;431ca7ef-0bb3-4a23-87df-b903178e79da&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34;&gt;As we look forward, the integration of more sophisticated AI techniques and user feedback will drive further enhancements, ensuring that QueryGPT remains a vital tool in our data platform.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;8201e8b8-465b-4565-97bd-3d4b4cf67c21&amp;quot;,&amp;quot;opacity&amp;quot;:&amp;quot;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&amp;quot;hash&amp;quot;:&amp;quot;5d465de2-dafa-46f0-82aa-073654ce1bd1&amp;quot;,&amp;quot;level&amp;quot;:2}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-acknowledgements-nbsp&#34;&gt;Acknowledgements&amp;nbsp;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&amp;quot;fontSize&amp;quot;:&amp;quot;small&amp;quot;,&amp;quot;hash&amp;quot;:&amp;quot;02707c3a-ea37-40cf-b242-32dfb606de76&amp;quot;,&amp;quot;dropCap&amp;quot;:false}&#34; class=&#34;has-small-font-size&#34;&gt;QueryGPT was a cross-discipline effort across Uber, requiring expertise and domain knowledge from folks working in Engineering, Product Management and Operations. The product wouldn’t exist today without the great contributions by Abhi Khune, Callie Busch, Jeffrey Johnson, Pradeep Chakka, Saketh Chintapalli, Adarsh Nagesh, Gaurav Paul and Ben Carroll.&lt;/p&gt;】&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;e735bd6b-558b-4301-a92b-9fba35e6bc65&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-introduction&#34;&gt;简介&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;eb484efe-378c-40e0-af57-14bd8a10b396&#34;,&#34;dropCap&#34;:false}&#34;&gt;SQL 是Uber 的工程师、运营经理和数据科学家每天使用它来访问和操作 TB 数据的重要工具。制作这些查询不仅需要对 SQL 语法有深入的了解，还需要深入了解我们的内部数据模型如何表示业务概念。 QueryGPT旨在弥合这一差距，使用户能够通过自然语言提示生成SQL查询，从而显着提高生产力。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f224d2da-b02d-4ff2-b219-0fdc1f5cab39&#34;,&#34;dropCap&#34;:false}&#34;&gt;QueryGPT 使用大语言模型 (LLM)、向量数据库和相似性搜索，用于根据用户提供的英语问题作为输入生成复杂的查询。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2a651aaf-0a58-4385-b7da-05a4eeb8d4e4&#34;,&#34;dropCap&#34;:false}&#34;&gt;本文记录我们过去一年的发展历程以及我们今天的愿景。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b60d0020-1daa-4a5e-97a6-98f869f533b4&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-motivation&#34;&gt;动机&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;53bb688c-ff1f-4bb8-a317-e04e6185daa5&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXcC2OH7JIyWjT68dWjQgaxz8SbmhQVz-ARB4M6bOYRV0bIxLS7ellpYioGaYm7PewbHzme4l2r1rqwellO74eax1CyGrRPtbAY17X1aUQDx9Lp00mLsgWIOW9q6fJzH8U54Npxl TFEdbEA_QITC755FAAsH?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 1：查询创作过程。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;baefce90-b4db-4613-95b6-d55bbe7b3f4c&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f5a98fa3-88bc-494c-833c-892a333b2748&#34;,&#34;dropCap&#34;:false}&#34;&gt;在 Uber，我们的数据平台每月处理大约 120 万次交互式查询。运营组织是最大的用户群体之一，贡献了约 36% 的查询。编写这些查询通常需要公平的时间在数据字典中搜索相关数据集和在编辑器中编写查询之间的时间量。鉴于编写每个查询大约需要 10 分钟，引入 QueryGPT 可以自动执行此过程并在大约 3 分钟内生成可靠的查询，这代表了生产力的重大提升。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;025f314b-d91a-4eab-9e39-223a072900a7&#34;,&#34;dropCap&#34;:false}&#34;&gt;如果我们保守估计，每个查询大约需要 10 分钟来编写，QueryGPT 可以自动化此过程，并在大约 3 分钟内提供足够可靠的查询。这将为 Uber 带来显着的生产力提升。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a9b8789e-02b4-4aa6-9888-946c91bfd0df&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1096044,&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;sizeSlug&#34;:&#34;大&#34;,&#34;linkDestination&#34;:&#34;无&#34;,&#34;align&#34;:&#34;中心&#34;,&#34;散列&#34;:&#34;b1b68651-445c-4842-a62b-a8df8ab6c7cb&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img 加载=“惰性”解码=“异步”宽度=“1024”高度=“429”src=“https://blog.uber-cdn.com/cdn-cgi/image/width= 2160、质量=80、onerror=重定向、格式=自动/wp-content/uploads/2024/09/figure-1-querybuilder-usage-17265653056445-1024x429.jpeg&#34; alt=&#34;&#34; class=&#34;wp-image-1096044 “ style=”width:700px;height:auto” srcset=”https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp -content/uploads/2024/09/figure-1-querybuilder-usage-17265653056445.jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width=300，quality=80，onerror=重定向，format=auto/wp-content/uploads/2024/09/figure-1-querybuilder-usage-17265653056445.jpeg 300w，https://blog.uber-cdn.com/cdn-cgi/image/width=768 ，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure-1-querybuilder-usage-17265653056445.jpeg 768w，https://blog.uber-cdn.com/cdn- cgi/image/width=1276，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/figure-1-querybuilder-usage-17265653056445.jpeg 1276w“尺寸=”（最大宽度: 1024px) 100vw, 1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 2：Querybuilder 用法。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ca26529d-ff05-4a61-adf8-800507582c78&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;id&#34;:1096046,&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;sizeSlug&#34;:&#34;大&#34;,&#34;linkDestination&#34;:&#34;无&#34;,&#34;对齐&#34;:&#34;中心&#34;,&#34;哈希&#34;:&#34;48d4a1db-0ee0-4040-810f-2b4111ffbf0b&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34; aligncenter size-large is-resized&#34;&gt;&lt;imgloading=“lazy”解码=“async”宽度=“1024”高度=“387”src=“https://blog.uber-cdn.com/cdn-cgi/图像/宽度=2160，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/figure-2-querygpt-impact-17265653352592-1024x387.jpeg&#34; alt=&#34;&#34; class=&#34;wp -image-1096046&#34; style=&#34;width:700px;height:auto&#34; srcset=&#34;https://blog.uber-cdn.com/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format =auto/wp-content/uploads/2024/09/figure-2-querygpt-impact-17265653352592.jpeg 1024w，https://blog.uber-cdn.com/cdn-cgi/image/width=300,quality= 80，onerror=重定向，format=auto/wp-content/uploads/2024/09/figure-2-querygpt-impact-17265653352592.jpeg 300w，https://blog.uber-cdn.com/cdn-cgi/image /width=768，quality=80，onerror=redirect，format=auto/wp-content/uploads/2024/09/figure-2-querygpt-impact-17265653352592.jpeg 768w，https://blog.uber-cdn。 com/cdn-cgi/image/width=1272，质量=80，onerror=重定向，格式=自动/wp-content/uploads/2024/09/figure-2-querygpt-impact-17265653352592.jpeg 1272w“尺寸=” （最大宽度：1024px）100vw，1024px&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 3：QueryGPT 影响。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;97932bcf-6d95-412f-8ea8-1d286dbb0f78&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6581dfd0-5bfd-48c1-b8e7-a00a9a44c0aa&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-architecture&#34;&gt;架构&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;aa0702df-39bb-4e7c-8eb9-d5435da45c75&#34;,&#34;dropCap&#34;:false}&#34;&gt;QueryGPT 源自这是 2023 年 5 月 Uber Generative AI Hackdays 期间的一项提案。从那时起，我们迭代地完善了 QueryGPT 背后的核心算法，将其从概念转变为生产就绪的服务。下面，我们详细介绍 QueryGPT 的演变及其当前架构，重点介绍关键增强功能。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cf501d3d-beaf-4ad6-930f-219adc58ff82&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们已经下面描述了我们当前版本的 QueryGPT。请记住，下面详细介绍的 2 个算法之间大约有 20 多次迭代，如果我们要列出并描述每个迭代，这篇博客文章的长度将使 Ayn Rand 的 &lt;em&gt;Atlas Shrugged&lt;/em&gt; 相形见绌.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a980128d-4d7f-4361-9cdc-4f0a5d55f728&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;a306c97a-e64b-4f92-8b70-79aaca67cf84&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-hackdayz-version-1&#34;&gt;Hackdayz（版本 1）&lt;/h3&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;e07c37f7-b2ca-45c9-af49-d2e559f91221&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXdBuoSw4-YUqiwCVg-oD6Ov6Cx9PCnOCQKikBooaMttGGhDJAbsmJU19_bhlIZGE-lTX2YVZXaejXc3nuJoKVnuP8Fhq6bySTfmgn2-Srxhsa0fPxWTyPMshWKtrfoSilJnXGXQ5WL137- t0rf3-EdYUdyA?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34; wp-element-caption&#34;&gt;图 4：QueryGPT Hackdayz 版本&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;16e124f2-00b4-4145-98e2-3c17b14d6873&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;69c8f8d1-8176-43c8-8d53-ea406e49c0df&#34;,&#34;dropCap&#34;:false}&#34;&gt;第一个版本QueryGPT 依赖于一个相当简单的 RAG 来获取我们需要包含在对 LLM（Few Shot Prompting）的查询生成调用中的相关样本。我们将获取用户的自然语言提示，对其进行向量化，并对 SQL 示例和模式进行相似性搜索（使用 k 最近邻搜索），以获取 3 个相关表和 7 个相关 SQL 示例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e68f2468-74cc-4c2b-82a0-93e73ad70643&#34;,&#34;dropCap&#34;:false}&#34;&gt;第一个版本使用 7 个 1 层表和 20 个 SQL 查询作为我们的示例数据集。 SQL 查询应该提供关于如何使用所提供的表模式的 LLM 指导，并且表模式提供有关这些表上存在的列的 LLM 信息。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1c42885a-f676-434b-a7de-3587222251a5&#34;,&#34;dropCap&#34;:false}&#34;&gt;例如，对于第 1 层表 &lt;em&gt;uber.trips_data&lt;/em&gt;（不是真实的表），架构如下所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e2e04fd9-2c4f-456c-b979-6b074618d4d8&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;685394a5-0bce-4fda-bcb7-3c9f526e9ff8&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码 =“async”src =“https://lh7-rt.googleusercontent.com/docsz/AD_4nXcv35PJRLqPvFrcSQUwvxQqutjd0mT_vauGDqqY5CESrguVm845_6Ife4azUiuhodUKRND7WNwdOIcnraAGEfco5b4puw1uC3a-hQzYGBGYI Zul3KD0MB7zcrbgJG2pCE8uItfdre19hVCd6WxbjFNNX1-i?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height: auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 5：uber.trips_data 表。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1707de5e-8545-4535-8831-14ff942e11ce&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;11f17948-81df-4982-badd-dbca4261bdac&#34;,&#34;dropCap&#34;:false}&#34;&gt;帮助LLM 了解内部 Uber 术语并使用 Uber 数据集，我们还在 LLM 调用中包含了一些自定义指令。下面显示的是我们希望法学硕士如何处理日期的片段：&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;a42b8d62-db59-4ac9-a921-30e012a8b378&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXeZMYZI9LdwW_GU31hqaswX7jMwtaQZL0Vuyo2ExTpUo-MKpeN3Qj_q14-aEgueHMqT9JRHryH6fWssismaF2N768dmaD9KE6xZQhO4Fyb-srNa1YoGNfiyTAh-GTEYWcpKTsVfp_ 8US8jpKkiAsRejPsR1?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element- title&#34;&gt;图 6：处理 Uber 数据集中日期的自定义指令。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ab0aed50-802e-4e17-95f2-ae6aedb3e5c2&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a09c0daf-d5f1-4fea-be38-02ec7656f366&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们会换行所有相关的模式示例、SQL 示例、用户的自然语言提示以及围绕系统提示的 Uber 业务说明，并将请求发送给 LLM。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;11e599d5-2a2c-42b1-b0ad-310cb1de7b35&#34;,&#34;dropCap&#34;:false}&#34;&gt;响应将包括“SQL 查询”和 LLM 如何生成查询的“说明”：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1c3f9567-ad6f-40f9-b8bc-80a94f3eb950&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&amp;quot;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;7b817659-3a61-49a3-b0fb-9b7c5c1505c3&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img解码=“异步”src=“https://lh7-rt.googleusercontent.com/docsz/AD_4nXega7yHLmgA8wlGBdnBqbco16GQV7SeKdOCtUbGD1E1ZhuglOZ0P47UDHXvj99RDm-ndeh1GgWWMxKQx8kDKZZYZLEryCFFSEi3pGrUF1vMD9RSzrbMNH ta6SZ38hXddp8tHy-iSHccFYFgmrInQKlAfc8?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34; no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 7：生成的带有解释的 SQL。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c42500bc-5a08-440b-983b-843e36e3269b&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;84b98147-4a93-4ddd-9098-9b6f3e2371e1&#34;,&#34;dropCap&#34;:false}&#34;&gt;虽然此版本该算法的算法对于一小组模式和 SQL 示例运行良好，当我们开始将更多表及其关联的 SQL 示例添加到服务中时，我们开始看到生成的查询的准确性下降。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0df8653a-d050-48c7-96db-3f304a03369d&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;feeb6cb0-3a63-4949-8813-c1d57306a63f&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-better-rag&#34;&gt;更好的 RAG&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8c219406-9327-41b9-80fd-671f5c74f2eb&#34;,&#34;dropCap&#34;:false}&#34;&gt;做一个简单的对模式示例（&lt;em&gt;CREATE TABLE&lt;/em&gt;...）和 SQL 查询（&lt;em&gt;SELECT a, b, c FROM uber.foo &lt;/em&gt;...) 不返回相关结果。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;ed25814d-9f75-4fba-8bd1-dc78df2dd7b2&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-understanding-user-s-intent&#34;&gt;了解用户意图&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1e71a70f-8c29-4964-80ec-99d74b347ba0&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的另一个问题我们发现从用户的自然语言提示到找到相关模式是非常具有挑战性的。我们需要的是一个中间步骤，它将用户的提示分类为映射到相关架构和 SQL 示例的“意图”。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;02705018-fca5-4181-a29e-474bdc114c29&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-handling-large-schemas&#34;&gt;哈ndling 大型模式&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;82be2c49-fc74-4aff-81b5-96f5c48123c1&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们有一些Uber 的一些第 1 层表上的架构非常大，其中一些跨越 200 列。这些大型表可能会在请求对象中使用多达 40-60K 的令牌。拥有 3 个或更多这样的表将破坏 LLM 调用，因为最大的可用模型（当时）仅支持 32K 令牌。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a461a6ed-9e9e-43d6-88ca-8677920dc47d&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;651e011c-62e0-434d-bf63-5aea7e878acd&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-current-design&#34;&gt;当前设计&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;77cb3666-0e69-4200-89b2-02b7c85c5b3a&#34;,&#34;dropCap&#34;:false}&#34;&gt;下图显示了我们在生产中运行的 QueryGPT 的当前设计。当前版本包含与第一个版本相比的许多迭代更改。&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;f0c52e7a-e247-4213-bb8b-8a6d1613ce65&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXctJlWIn-wn89ptfWpK2OrhH9sVIkP5OqSthEr21ZoybaECaxE5GATRUNJX8ElX1ODGz1N2JHcg0sYjN1QXIi9T-_Ex6V jVUunGJ8s5SW2D5gaEUme4Skh3NrVqjmIazQZPJ17XhJ2JJwo3FfqpLh8JD9j4?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34;referrerpolicy =&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 8：QueryGPT（当前）。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c6320027-f65a-476a-903e-367​​a1a1300ac&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;2e3c3d0c-e4e8-42c9-91a4-6a44c74d54f2&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-workspaces&#34;&gt;工作区&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1ed49b96-6676-4e81-bf7d-0c556fb024bc&#34;,&#34;dropCap&#34;:false}&#34;&gt;在我们当前的在设计中，我们引入了“工作区”，它是针对特定业务领域（例如广告、移动性和核心服务）量身定制的 SQL 示例和表格的精选集合。这些工作区有助于缩小法学硕士的关注范围，提高生成查询的相关性和准确性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;621f9d8c-b8f7-459b-8a34-cf2c979fbcd4&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们已经确定了 U 内部一些更常见的业务领域ber 并在后端将其创建为“系统工作区”。  移动性是我们确定为可用于查询生成的基础域的系统工作区之一。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;40ccaf2a-b154-4919-a164-6b5bb7267f30&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt; &lt;em&gt;移动性&lt;/em&gt;&lt;/strong&gt;：包括行程、司机、文档详细信息等的查询。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/table&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fc77e064-4516-45a8-bac0-a244ae55e605&#34;,&#34;hasFixedLayout&#34;:true,&#34;head&#34;:[ ],&#34;body&#34;:[],&#34;foot&#34;:[]}&#34; class=&#34;wp-block-table&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;将&lt;strong&gt;a&lt;/strong&gt;查询写入查找昨天&lt;strong&gt;&lt;/strong&gt;特斯拉在&lt;/strong&gt;西雅图&lt;strong&gt;完成的&lt;strong&gt;出行次数&lt;/td&gt;&lt;/tr&gt;&lt; /tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;96a999fa-1a1d-483a-a2b3-2289e2eaf41c&#34;,&#34;dropCap&#34;:false}&#34;&gt;还有这些，我们还推出了其他 11 个系统工作区，包括“核心服务”、“平台工程”、“IT”、“广告”等。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;03ab4f6d-f230-419f-b99d-e9064462e72e&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们还包括如果现有系统工作区都不符合用户的要求，则允许用户创建“自定义工作区”并使用这些工作区来生成查询。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ec194bba-bc61-46c2-91de-f269f31851d3&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;ad296232-7118-4e6d-8353-d16b35e40f2b&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-intent-agent&#34;&gt;意向代理&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9c9515c9-371b-46a4-a087-c9df6f41e7cb&#34;,&#34;dropCap&#34;:false}&#34;&gt;每个传入提示现在，用户首先通过“意图”代理运行。此意图代理的目的是将用户的问题映射到一个或多个业务域/工作区（并通过扩展映射到该域的一组 SQL 示例和表）。我们使用 LLM 调用从用户问题中推断意图，并将其映射到“系统”工作区或“自定义”工作区。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a97a543b-072c-4538-b64f-f4217acf4c22&#34;,&#34;dropCap&#34;:false}&#34;&gt;选择商家域使我们能够大大缩小 RAG 的搜索半径。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;f8a6a800-3138-4111-9cc8-d2f736961781&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp块分隔符”具有 alpha 通道不透明度&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;996e7798-8d39-4add-adec-dc7a6ee4cdb2&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-table-agent&#34;&gt;表代理&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8ab1add6-aa91-419e-9287-0d5549a95170&#34;,&#34;dropCap&#34;:false}&#34;&gt;允许用户选择查询生成中使用的表是一些用户的反馈，他们发现 QueryGPT 最终选择的表不正确。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6d2a216b-7995-463c-af9f-ffe50188b17e&#34;,&#34;dropCap&#34;:false}&#34;&gt;解决此问题根据反馈，我们添加了另一个 LLM 代理（表代理），它会选择正确的表并将其发送给用户以“ACK”或编辑给定的列表并设置正确的表。用户将看到的屏幕截图如下所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;303e6130-d5f0-44fa-8489-012c7f4cca45&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;160a0a6b-69db-4f16-ad46-7c88fd4e8c10&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe5HZ4tiL_nVjtwxiqbzBEliN6R1jI6h5GoGhK0_DGBWp4d46ohXoYpgj0Pcud6Jjz-W3EiwsvH23i-XoyCpTbizCa8x tNEDclrJ8HqMvXiZGgl1OlF_94PdLqons1RdiTBbJxbMYERhVaq-wvxIon-YJRA?key=FDiTashaNIm84IIOQgmW9w&#34; 替代=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 9：表代理。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;09fefa62-872a-420b-bb86-705b08a571b2&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;68044f0d-6fc4-4925-8384-178a1785da01&#34;,&#34;dropCap&#34;:false}&#34;&gt;用户会选择“看起来不错”按钮，或者编辑现有列表并修改 LLM 用于查询生成的表列表。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;28f6a556-b474-4c60-81a1-ea13dee2dbe0&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;35299468-83bd-4b44-8960-b02078d580fc&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-column-prune-agent&#34;&gt;列修剪代理&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5c36fd6d-2fe8-4fc7-bac0-7cf5076b3e11&#34;,&#34;dropCap&#34;:false}&#34;&gt;另一个有趣的在将 QueryGPT 推广到更多用户后，我们遇到的一个问题是在某些请求的查询生成期间出现“间歇性”令牌大小问题。我们使用具有 128K 令牌限制 (1106) 的 OpenAI GPT-4 Turbo 模型，但仍然遇到令牌限制问题，因为某些请求包含一个或多个表，每个表消耗大量令牌。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7d0c0540-504f-48bb-872e-02c34cf9caff&#34;,&#34;dropCap&#34;:false}&#34;&gt;解决此问题问题中，我们实现了一个“Column Prune”代理，其中我们使用 LLM 调用来从我们提供给 LLM 的模式中删除不相关的列。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;6c14bed0-9cce-43fb-b02b-5cbcff2dae18&#34;,&#34;dropCap&#34;:false}&#34;&gt;这是代理的输出如下所示：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b7c5982b-fadc-439a-a1cd-cee31f8fdcf8&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;6087e6ad-9d13-455e-bb79-74c74e6c9a96&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXeKKZe_ie-slfFAA0v-BO7q8FPx370zQT1sKhHDur281yeKZMA6yvQ4QNWFWEftBzY8Zaq1nguEbE3fLbSOMoNrSN424rVb_L4pdZpB4iAjifXAHTNk5Q1UsZtlGFJxWJec5BAGC XMH71ZwbTrPQ0HEzTEQ?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图10：列修剪剂&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;2d80f47b-f517-4405-bc87-1a542c1db11e&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;22d287a2-8140-478c-a43b-25505258b600&#34;,&#34;dropCap&#34;:false}&#34;&gt;输出将包括我们生成查询所需的每个模式的精简版本。这一变化不仅极大地改善了令牌大小并扩展了每个 LLM 调用的成本，而且还减少了延迟，因为输入大小要小得多。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;ad62c2da-2025-4f62-b4ed-a5c1cfa0d924&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;a3320a6c-fcf8-4627-802b-e5aeb17afa16&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-output&#34;&gt;输出&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;核心/段落&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fefd8ccf-6833-4250-a03c-110d8ba7db27&#34;,&#34;dropCap&#34;:false}&#34;&gt;当前设计未对输出结构进行任何更改。响应将包括一个 SQL 查询以及来自 LLM 的关于如何生成查询的解释，类似于图 7 所示。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5a000f5e-295b-43cd-87d3-7c834c30bc80&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;49809270-e565-48fc-8734-352be50398ad&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-evaluation&#34;&gt;评估&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c67b1093-265c-48ee-a005-0813be377523&#34;,&#34;dropCap&#34;:false}&#34;&gt;跟踪增量为了提高 QueryGPT 的性能，我们需要一个标准化的评估程序。这使我们能够区分服务的重复缺陷和异常缺陷，并确保算法更改能够逐步提高总体性能。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;5901fe4e-9d5c-4646-a301-c8c02428f739&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-evaluation-set&#34;&gt;评估集&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e6b633b4-8f3d-4ffe-9290-ab4545fdaaf4&#34;,&#34;dropCap&#34;:false}&#34;&gt;策划一组用于评估的黄金问题到 SQL 答案的映射需要手动前期投资。我们从 QueryGPT 日志中识别出一组真实问题，并手动验证正确的意图、回答问题所需的模式以及黄金 SQL。问题集涵盖了各种数据集和业务领域。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;6d60db9c-2fcd-4627-a2b2-d8a43562b6fa&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-evaluation-procedure&#34;&gt;评估程序&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b0fca7e2-0aae-46cd-86df-60110f462749&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们开发了一个灵活的过程，可以使用不同的产品流在生产和登台环境中的整个查询生成过程中捕获信号：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;73fe5693-aa64-428d-a14d-598bc1dfa0b8&#34;,&#34;opacity&#34;:&#34;alpha 通道&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure data-wp-block-name=&#34;core/table&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9c2693aa-c1fc-4b4a-aed6-5174495a9f44&#34;,&#34;hasFixedLayout&#34;:true,&#34;head&#34;:[ ],&#34;body&#34;:[],&#34;foot&#34;:[]}&#34; class=&#34;wp-block-table&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;产品流程&lt;/strong&gt;&lt;/ td&gt;&lt;td&gt;&lt;强g&gt;目的&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;普通&lt;/td&gt;&lt;td&gt;测量 QueryGPT 的基准性能。 &lt;/td&gt;&lt;td&gt;输入问题。QueryGPT 推断回答问题所需的意图和数据集。使用推断的数据集和意图生成 SQL。评估意图、数据集和 SQL。&lt;/td&gt;&lt;/tr&gt;&lt;tr &gt;&lt;td&gt;解耦&lt;/td&gt;&lt;td&gt;通过人机交互体验来衡量 QueryGPT 性能。通过消除对早期结果的性能依赖性来实现组件级评估。&lt;/td&gt;&lt;td&gt;输入回答问题所需的问题、意图和数据集。QueryGPT 推断意图和数据集。使用实际（而不是推断）意图和数据集。 评估意图、数据集和 SQL。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;844d8d03-39be-48ba-810d-ed59b92f9ce4&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;37b06925-8cea-40b2-bf69-c315b21c995e&#34;,&#34;dropCap&#34;:false}&#34;&gt;对于每个问题在评估中，我们捕捉到以下信号：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;1c6015b5-b225-4d87-a67c-5d2310ddac62&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;意图：分配给问题的意图是否准确？ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7be425df-7a17-4112-8e11-3e2a36e3bba0&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;表重叠：通过搜索+表代理识别的表是否正确？这表示为 0 到 1 之间的分数。例如，如果查询需要回答“上周洛杉矶有多少趟行程被司机取消”的问题。需要使用 [&lt;em&gt;fact_trip_state&lt;/em&gt;、&lt;em&gt;dim_city&lt;/em&gt;] 和 QueryGPT 识别的 [&lt;em&gt;dim_city、fact_eats_trip&lt;/em&gt;]，此输出的搜索重叠得分将为 0.5 ，因为选择了回答问题所需的两个表之一。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;66f0f059-dfc4-407c-b614-bf81837c9af5&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;成功运行：生成的查询是否成功运行？ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;9f3cef08-b804-42f2-bc5c-cf7d26d5113b&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;运行有输出：&lt;/strong&gt;查询执行是否返回 &gt; 0 条记录。 （有时，QueryGPT 会产生像 WHERE status =“Finished”这样的过滤器，而过滤器本应是 WHERE status =“Completed”，从而导致成功运行但没有输出）。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;52e39c00-7d1e-4771-9541-c57154014240&#34;,&#34;dropCap&#34;:false}&#34;&gt;&lt;strong&gt;夸查询相似度：生成的查询相对于黄金 SQL 有多相似？我们使用 LLM 分配 0 到 1 之间的相似度分数。这使我们能够快速查看因语法原因而失败的生成查询在使用的列、连接、应用的函数等方面是否处于正确的轨道上。&lt; /p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b48fa8e3-54ba-4fc2-bae2-6b22055eb2eb&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们可视化进度随着时间的推移，识别回归和模式，揭示需要改进的领域。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c2fb41ee-fbb6-42ec-800f-3317ae9302dd&#34;,&#34;dropCap&#34;:false}&#34;&gt;下图是问题级运行结果的示例，使我们能够看到单个问题级重复出现的缺陷。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cbdd3499-3477-4b41-ac0c-33ec54373213&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;348px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;de1a4f25-f7cc-48d2-a77e-c6950d392f97&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXccdOmsynkpZ4KcgAN-f4lTMXzKGtojslRD5cszq2UdwOBCtdpERozd51i1FnmN00 SHT4tdvAT6ZivKymWIIrhfTne8fUXkS_tZIHgliaohNDBATY8jOSap-pNBj4yQIT_0GHEOSn8S6g3YeI r2vNffZ8-I?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:348px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34; &gt;图 11A：SQL 查询评估。&lt;br&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;46c7c91e-f8e1-4576-be48-edea51d4aad4&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;18fee675-385f-4742-9938-d3f57ad7330b&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc1vtFiN4pyNtoVJc8y2T_o8bbHQX7-UG0ioS7rkAGVih7uWAbBytShk37OKfjVmu0UsVC9ThlEdIetEPKgj8c0x4MCssyApV --ulZVzmG3ZiQWE3GpHWjRXOhxAk0rMryNyufAhySPzi35dcqwZcQKl86A?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 11B：跨环境的 SQL 查询评估。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;33cd3465-0d7b-4d11-91a5-0b697305044f&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p 数据可湿性粉剂块k-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;c7b817aa-4d4e-49e5-a71d-6dc74fa7b72a&#34;,&#34;dropCap&#34;:false}&#34;&gt;对于每个问题，我们可以查看生成的SQL、错误原因以及相关性能指标。下面是一个问题，其生成的查询经常失败，因为它没有在 where 子句中应用分区过滤器。然而，根据基于 LLM 的定性评估，生成的 SQL 在其他方面与黄金 SQL 类似。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;45360b20-3f94-4b57-99d0-60b021998a1a&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;align&#34;:&#34;center&#34;,&#34;hash&#34;:&#34;176a0706-d32f-44fe-b70f-14117127e67b&#34;,&#34;alt&#34; :&#34;&#34;}&#34; class=&#34;aligncenter&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXd-05KYpUrcOPqKxNRoo6TT4P-q4nPo1AR7Bt4oceFEm9dJy2tz9g5GJbEqT0qpf_hbJaGZLBpqUBVLH_dqQ1GGW8xXLfzV vdIIIHoC2mGc8C23nuC2kWK6bqldi-mgZoxNvlO6JbO_wV0R2QnklbW-Dif2?key=FDiTashaNIm84IIOQgmW9w&#34; 替代=&#34;&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;图 12：SQL 评估统计信息。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;04b0f0e6-274e-48a9-9f1d-d8938364a401&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;67682112-acbf-408d-b753-5ca6e49f32f5&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们还汇总了每次评估运行的准确性和延迟指标，以跟踪一段时间内的性能。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;36078627-a789-48a7-bf5f-b6e7d032bb45&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure data-wp-block-name=&#34;core/image&#34; data-wp-block=&#34;{&#34;width&#34;:&#34;700px&#34;,&#34;height&#34;:&#34;auto&#34;,&#34;align&#34;:&#34;center&#34;,&#34;hash&#34; :&#34;0ca65ba1-9648-4c31-ae98-5ced8fe98681&#34;,&#34;alt&#34;:&#34;&#34;}&#34; class=&#34;aligncenter is-resized&#34;&gt;&lt;img 解码=&#34;async&#34; src=&#34;https://lh7-rt.googleusercontent. com/docsz/AD_4nXdYG0RGLFMXqT8AHrOcUZsTFnWlA02vxOPEAIasdfbzJhFisn2-fGO3ahW9UZbWpL7L4u1qjsdzEr60UgY8ZQPYirtm71M-bwA_WX3sxw-3V5CoQh1KTo7j7dXMdO7V kbyp9JztGWuP99uj43ArIDMawyk?key=FDiTashaNIm84IIOQgmW9w&#34; alt=&#34;&#34; style=&#34;width:700px;height:auto&#34;referrerpolicy=&#34;no-referrer&#34;&gt;&lt;figcaption class=&#34;wp-element-caption&#34; &gt;图13：SQL评估标准。&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;e52fb602-16a2-41e3-9cf4-cdbe5ecf0cb1&#34;,&#34;opacity&#34;:&#34;alpha-channel&amp;quot;}&#34; class=&#34;wp-block-separator has-alpha-channel-opacity&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;fadd0c17-a50c-4e2e-ad6b-a745d9df8378&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-limitations&#34;&gt;限制&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;49a7ec20-24a0-47b4-9c0a-26342195b744&#34;,&#34;dropCap&#34;:false}&#34;&gt;由于由于 LLM 的不确定性，在不更改底层 QueryGPT 服务的情况下运行相同的评估可能会导致不同的结果。一般来说，我们不会根据大多数指标中大约 5% 的运行变化来过度索引决策。相反，我们会识别较长时间内的错误模式，这些模式可以通过特定的功能改进来解决。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;fe896d92-3cc7-48fd-82e5-c8c35b597330&#34;,&#34;dropCap&#34;:false}&#34;&gt;Uber 有数百个具有不同级别文档的数千个数据集。因此，评估问题集不可能完全涵盖用户可能提出的所有业务问题。相反，我们策划了一组代表产品当前使用情况的问题。随着我们提高准确性和新错误的出现，评估集将不断发展以捕获产品的方向。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;eb9e9b7a-b950-4310-9a65-ca866145d51a&#34;,&#34;dropCap&#34;:false}&#34;&gt;没有总是有一个正确答案。通常，可以通过查询不同的表或以不同的样式编写查询来回答同一问题。通过可视化黄金 SQL 与返回的 SQL 并使用基于 LLM 的评估分数，我们可以了解生成的查询是否以不同的风格编写，但与黄金 SQL 具有相似的意图。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;d654b0fa-3911-4d5a-b063-a08a256da9de&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;a48db9ec-daee-4411-89f9-f1a08e7d023f&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-learnings&#34;&gt;学习内容&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;3cab4b48-6ad3-4a4a-9f31-0f236019b5ba&#34;,&#34;dropCap&#34;:false}&#34;&gt;使用新生过去一年中，GPT 和 LLM 等技术使我们能够尝试并了解代理和 LLM 如何使用数据来生成对用户问题的响应的许多不同细微差别。我们在下面简要描述了我们的旅程中的一些经验教训：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;cac6df94-1908-4171-ae84-1f933148d1c4&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-llms-are-excellent-classifiers&#34;&gt;法学硕士是优秀的分类器&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p数​​据a-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7ad4a5d4-d72f-4c36-952a-0bed88699fac&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们的中间代理在 QueryGPT 中用于将用户的自然语言提示分解为 RAG 的更好信号，与第一个版本相比，我们的准确性得到了很大提高，这在很大程度上是由于法学硕士在给予一小部分专门工作时工作得非常好。做。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;00b9e128-c899-4b26-ab48-77ac14026e96&#34;,&#34;dropCap&#34;:false}&#34;&gt;意图代理、表代理和列修剪代理都做得非常出色，因为他们被要求处理单个工作单元而不是广泛的通用任务。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;2c2c5240-a771-4f89-abf5-28321ce28330&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-hallucinations&#34;&gt;幻觉&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;18098f4a-1ca8-4a96-a6e2-988fc58813cc&#34;,&#34;dropCap&#34;:false}&#34;&gt;这仍然是这是我们一直在研究的领域，但简而言之，我们确实看到了 LLM 会生成包含不存在的表或这些表中不存在的列的查询的实例。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;7920ad06-2623-4706-a0d0-c9ee71cf5012&#34;,&#34;dropCap&#34;:false}&#34;&gt;我们已经一直在尝试减少幻觉的提示，引入了一种聊天风格模式，用户可以在其中迭代生成的查询，并且还希望包含一个“验证”代理，该代理会递归地尝试修复幻觉，但这仍然是我们尚未完全解决的领域还没解决。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;hash&#34;:&#34;0a5fcc9b-322f-4a6d-a79a-6dadf80fccf7&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-user-prompts-are-not-always-context-rich&#34;&gt;用户提示并不总是“上下文”丰富&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;546499a4-c289-478b-adfc-31edd877bdbe&#34;,&#34;dropCap&#34;:false}&#34;&gt;输入的问题QueryGPT 中的用户范围从非常详细的正确关键字以缩小搜索半径到 5 个单词的问题（有拼写错误）以回答需要跨多个表联接的广泛问题。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;33186177-6cb8-42ae-a1cd-5a959a95203c&#34;,&#34;dropCap&#34;:false}&#34;&gt;完全依赖用户提出的“良好”输入给法学硕士的问题导致了准确性和可靠性问题。在我们将用户问题发送给法学硕士之前，需要使用“提示增强器”或“提示扩展器”将用户问题“按摩”为上下文更丰富的问题​​。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:3,&#34;有h&#34;:&#34;9f670540-0564-4c3a-a1dc-c263263f0220&#34;}&#34; class=&#34;wp-block-heading&#34; id=&#34;h-high-bar-for-sql-output- generated-by-the-llm&#34;&gt;高LLM 生成的 SQL 输出栏&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5348bcb2-8b9b-4332-b614-2e87542629bb&#34;,&#34;dropCap&#34;:false}&#34;&gt;虽然此版本QueryGPT 对广泛的角色有帮助，许多人肯定期望生成的查询将非常准确并且“正常工作”。门槛很高！ &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;4f6a07df-d622-4adb-949d-b931e4746811&#34;,&#34;dropCap&#34;:false}&#34;&gt;根据我们的经验，我们发现，在构建此类产品时，最好以正确的角色作为初始用户群进行定位和测试。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;0991e158-aca7-4941-bf2a-5c611ca9d4c9&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h1 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;level&#34;:1,&#34;hash&#34;:&#34;02630760-d3f5-4166-bf76-7442565ad923&#34;}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-conclusion&#34;&gt;结论&lt;/h1&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;b189a3fd-91b7-4801-a5fb-c3f9d5b22614&#34;,&#34;dropCap&#34;:false}&#34;&gt;开发Uber 的 QueryGPT 是一次变革之旅，显着提高了根据自然语言提示生成 SQL 查询的生产力和效率。 QueryGPT 利用先进的生成式人工智能模型，与 Uber 广泛的数据生态系统无缝集成，减少查询编写时间并提高准确性，满足我们数据需求的规模和复杂性。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;19347b08-51ca-4d8c-ad2a-915513abeff0&#34;,&#34;dropCap&#34;:false}&#34;&gt;虽然面临这样的挑战随着处理大型模式和减少幻觉的持续存在，我们的迭代方法和不断学习实现了持续改进。 QueryGPT 不仅简化了数据访问，还使其民主化，使 Uber 内的各个团队能够更轻松地获取强大的数据洞察。 &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;cb86e603-2f0c-41fe-9d46-cc278cddf8cf&#34;,&#34;dropCap&#34;:false}&#34;&gt;以我们有限的向运营和支持部门的一些团队发布后，我们平均有大约 300 名每日活跃用户，其中大约 78% 的用户表示生成的查询减少了他们从头开始编写的时间。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;431ca7ef-0bb3-4a23-87df-b903178e79da&#34;,&#34;dropCap&#34;:false}&#34;&gt;正如我们所见未来，更复杂的人工智能技术和用户反馈的集成将推动进一步的增强，确保 QueryGPT 仍然是我们数据平台中的重要工具。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr data-wp-block-name=&#34;core/separator&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;8201e8b8-465b-4565-97bd-3d4b4cf67c21&#34;,&#34;opacity&#34;:&#34;alpha-channel&#34;}&#34;类=“wp-block-separator有-alpha-channel-opacity”&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 data-wp-block-name=&#34;core/heading&#34; data-wp-block=&#34;{&#34;hash&#34;:&#34;5d465de2-dafa-46f0-82aa-073654ce1bd1&#34;,&#34;level&#34;:2}&#34; class=&#34;wp -block-heading&#34; id=&#34;h-acknowledgements-nbsp&#34;&gt;致谢&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p data-wp-block-name=&#34;core/paragraph&#34; data-wp-block=&#34;{&#34;fontSize&#34;:&#34;小&#34;,&#34;hash&#34;:&#34;02707c3a-ea37-40cf-b242-32dfb606de76&#34;,&#34;dropCap&#34; :false}&#34; class=&#34;has-small-font-size&#34;&gt;QueryGPT 是 Uber 的一项跨学科工作，需要工程、产品管理和运营人员的专业知识和领域知识。如果没有 Abhi Khune、Callie Busch、Jeffrey Johnson、Pradeep Chakka、Saketh Chintapalli、Adarsh Nagesh、Gaurav Paul 和 Ben Carroll 的巨大贡献，该产品就不会存在于今天。&lt;/p&gt;</description>
      <pubDate>Thu, 19 Sep 2024 05:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>